Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports System.IO
Imports System.Globalization
Imports System.Threading
Imports System.Globalization.DateTimeFormatInfo
Imports Microsoft.VisualBasic
Imports System.Math
Imports System.Text

Public NotInheritable Class Calculate

#Region "Property"

    Private Shared _ActualDate As String = ""
    Private Shared ReadOnly Property ActualDate() As String
        Get
            If _ActualDate = "" Then
                _ActualDate = HI.Conn.SQLConn.GetField("SELECT  CONVERT(varchar(10),GETDATE(),111)", Conn.DB.DataBaseName.DB_HR, "")
            End If
            Return _ActualDate
        End Get
    End Property

    Private Shared _ActualNextdate As String = ""
    Private Shared ReadOnly Property ActualNextdate() As String
        Get
            If _ActualNextdate = "" Then
                _ActualNextdate = HI.Conn.SQLConn.GetField("SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111)", Conn.DB.DataBaseName.DB_HR, "")
            End If
            Return _ActualNextdate
        End Get
    End Property

    Private Shared _ActualBeforedate As String = ""
    Private Shared ReadOnly Property AcBeforedate() As String
        Get
            If _ActualBeforedate = "" Then
                _ActualBeforedate = HI.Conn.SQLConn.GetField("SELECT  CONVERT(varchar(10),DateAdd(day,-1,GETDATE()),111)", Conn.DB.DataBaseName.DB_HR, "")
            End If
            Return _ActualBeforedate
        End Get
    End Property

    Private Shared _OTTimeCtrl As DataTable = Nothing
    Private Shared ReadOnly Property _LoadOTTimeCtrl() As DataTable
        Get
            If _OTTimeCtrl Is Nothing Then
                Dim _Qry As String
                _Qry = " SELECT     FTCfgOTSet,FTCfgOTBegin,FTCfgOTEnd,FNHSysEmpTypeId,FTStatePay  "
                _Qry &= vbCrLf & " FROM      [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTRound WITH (NOLOCK)"
                _OTTimeCtrl = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
            End If
            Return _OTTimeCtrl
        End Get
    End Property

    Private Shared _OTPayOver As DataTable = Nothing
    Private Shared ReadOnly Property LoadOTPayOver() As DataTable
        Get
            If _OTPayOver Is Nothing Then
                Dim _Qry As String
                _Qry = " SELECT     A.FTStatePayOTOverRequest,A.FNTimeSacanMin,A.FNHSysEmpTypeId  "
                _Qry &= vbCrLf & " FROM    [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTPayOverRequest AS A WITH (NOLOCK)"
                _Qry &= vbCrLf & "  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH(NOLOCK) ON A.FNHSysEmpTypeId = ET.FNHSysEmpTypeId "
                _Qry &= vbCrLf & "  WHERE  (ISNULL(ET.FNHSysCmpId,0) = 0 OR  ET.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                _OTPayOver = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
            End If
            Return _OTPayOver
        End Get
    End Property

    Private Shared _EmpTypeWeekly As DataTable = Nothing
    Private Shared ReadOnly Property LoadEmpTypeWeekly(SDate As String, EDate As String) As DataTable
        Get

            Dim _Qry As String
            _Qry = "Select   A.FNHSysEmpTypeId,A.FDHolidayDate  "
            _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmpTypeWeeklySpecial As A With(NOLOCK) "
            _Qry &= vbCrLf & "  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType As ET With(NOLOCK) On A.FNHSysEmpTypeId = ET.FNHSysEmpTypeId "
            _Qry &= vbCrLf & "  WHERE A.FDHolidayDate>='" & HI.UL.ULDate.ConvertEnDB(SDate) & "' "
            _Qry &= vbCrLf & "        AND A.FDHolidayDate<='" & HI.UL.ULDate.ConvertEnDB(EDate) & "' "
            _Qry &= vbCrLf & "  AND  (ISNULL(ET.FNHSysCmpId,0) = 0 OR  ET.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"
            _EmpTypeWeekly = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

            Return _EmpTypeWeekly
        End Get
    End Property

    Private Shared _EmpTypeWeeklyByEmpType As DataTable = Nothing
    Private Shared ReadOnly Property LoadEmpTypeWeeklyByEmpType(_FNHSysEmpTypeId As Integer, SDate As String, EDate As String, Optional ByVal FNHSysCmpID As Integer = 0) As DataTable
        Get

            Dim _Qry As String
            _Qry = "SELECt   A.FNHSysEmpTypeId,A.FDHolidayDate  "
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmpTypeWeeklySpecial AS A WITH(NOLOCK) "
            _Qry &= vbCrLf & "  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType As ET With(NOLOCK) On A.FNHSysEmpTypeId = ET.FNHSysEmpTypeId "
            _Qry &= vbCrLf & "  WHERE A.FDHolidayDate>='" & HI.UL.ULDate.ConvertEnDB(SDate) & "' "
            _Qry &= vbCrLf & "  AND A.FDHolidayDate<='" & HI.UL.ULDate.ConvertEnDB(EDate) & "' "
            _Qry &= vbCrLf & "  AND  A.FNHSysEmpTypeId=" & Integer.Parse(Val(_FNHSysEmpTypeId)) & ""
            If (FNHSysCmpID > 0) Then
                _Qry &= vbCrLf & "  AND  (ISNULL(ET.FNHSysCmpId,0) = 0 OR  ET.FNHSysCmpId=" & FNHSysCmpID & " )"
            Else
                _Qry &= vbCrLf & "  AND  (ISNULL(ET.FNHSysCmpId,0) = 0 OR  ET.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"
            End If


            _EmpTypeWeeklyByEmpType = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

            Return _EmpTypeWeeklyByEmpType
        End Get
    End Property

    Private Shared _SysHoliday As DataTable = Nothing
    Private Shared ReadOnly Property LoadSysHoliday(Optional ByVal FNHSysCmpID As Integer = 0) As DataTable
        Get
            If _SysHoliday Is Nothing Then
                Dim _Qry As String
                _Qry = "SELECt   FDHolidayDate,FNHolidayType AS FTHldType  "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                _Qry &= vbCrLf & "  WHERE FTStateActive='1' "
                If (FNHSysCmpID > 0) Then
                    _Qry &= vbCrLf & "  AND  (ISNULL(FNHSysCmpId,0) = 0 OR  FNHSysCmpId=" & FNHSysCmpID & " )"
                Else
                    _Qry &= vbCrLf & "  AND  (ISNULL(FNHSysCmpId,0) = 0 OR  FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"
                End If


                _SysHoliday = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_MASTER)
                End If
                Return _SysHoliday
        End Get
    End Property

    Private Shared _SocailRateKM As DataTable = Nothing
    Private Shared ReadOnly Property LoadSocailRateKM() As DataTable
        Get
            If _SocailRateKM Is Nothing Then
                Dim _Qry As String
                _Qry = "SELECt   FNSocialStartRange, FNSocialEndRange, FNSocialBase, FNSocialAmt  "
                _Qry &= vbCrLf & " FROM   [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgSocailKMRate WITH(NOLOCK) "

                _SocailRateKM = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
            End If
            Return _SocailRateKM
        End Get
    End Property

    Private Shared _WelfareKM As DataTable = Nothing
    Private Shared ReadOnly Property LoadWelfareKM(EmpType As Integer) As DataTable
        Get
            If _WelfareKM Is Nothing Then

                Dim _Qry As String
                _Qry = "SELECt  top 1  FNHSysEmpTypeId,FNAttandanceAmt, FNHealtCareAmt, FNTransportAmt, FNChildCareAmt, FNChildCareStartAge, FNChildCareEndAge, FNOTMealAmt"
                _Qry &= vbCrLf & " FROM   [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgWelfareKM WITH(NOLOCK) "
                _Qry &= vbCrLf & " WHERE FNHSysEmpTypeId =" & Integer.Parse(Val(EmpType)) & ""

                _WelfareKM = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

            End If
            Return _WelfareKM
        End Get
    End Property

    Private Shared WorkAge_Rate As DataTable = Nothing
    Private Shared ReadOnly Property GetWorkAgeRate() As DataTable
        Get
            If WorkAge_Rate Is Nothing Then
                Dim _Qry As String
                _Qry = "SELECt   FNWorkAgeStart, FNWorkAgeEnd, FNWorkAgeAmt"
                _Qry &= vbCrLf & " FROM   [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgWorkAgeSalary WITH(NOLOCK) "

                WorkAge_Rate = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
            End If

            Return WorkAge_Rate
        End Get
        'Set(value As DataTable)
        '    OT_Round = value
        'End Set
    End Property

    Private Shared ReadOnly Property GetWorkAgeRate(Optional fnhsysCmpId As Integer = 0) As DataTable
        Get
            If WorkAge_Rate Is Nothing Then
                Dim _Qry As String
                _Qry = "SELECt   FNWorkAgeStart, FNWorkAgeEnd, FNWorkAgeAmt"
                _Qry &= vbCrLf & " FROM   [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgWorkAgeSalary WITH(NOLOCK) "

                If fnhsysCmpId > 0 Then
                    _Qry &= vbCrLf & " WHERE fnhsysCmpId=" & fnhsysCmpId
                End If

                WorkAge_Rate = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

            End If

            Return WorkAge_Rate

        End Get
        'Set(value As DataTable)
        '    OT_Round = value
        'End Set
    End Property

    Private Shared _TimeShiftControl As DataTable = Nothing
    Private Shared ReadOnly Property LoadTimeShiftControl As DataTable
        Get
            If _TimeShiftControl Is Nothing Then
                Dim _Qry As String
                Dim _ActualDate As String = ActualDate
                Dim _ActualNextDate As String = ActualNextdate

                _Qry = "   SELECT   FNHSysShiftID, ISNULL(FNScanCtrl,0) AS FNScanCtrl"
                _Qry &= vbCrLf & "   , CASE WHEN ISNULL(FTOverClock,'') <> '' THEN  '" & _ActualDate & "' + '  ' + FTOverClock  ELSE '' END  AS FTOverClock "
                _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOverClock,'') <>'' THEN '" & _ActualDate & "'  + '  ' + FTOverClock  ELSE '' END As FTOverClock  "

                _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTIn1,'') <> '' THEN  (CASE WHEN (FTIn1 >='00:00' AND  FTIn1 < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTIn1  ELSE '' END AS ChkIn1 "
                _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOut1,'') <> '' THEN (CASE WHEN (FTOut1 >='00:00' AND  FTOut1 < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END) + '  ' + FTOut1 ELSE '' END AS ChkOut1 "
                _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTIn2,'') <> '' THEN (CASE WHEN (FTIn2 >='00:00' AND  FTIn2 < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END) + '  ' + FTIn2  ELSE '' END As ChkIn2  "
                _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOut2,'') <> '' THEN (CASE WHEN (FTOut2 >='00:00' AND  FTOut2 < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END) + '  ' + FTOut2  ELSE '' END AS ChkOut2 "

                _Qry &= vbCrLf & ",ISNULL(FCHour,0) As WorkTimePerDay"
                _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WITH(NOLOCK)"
                _Qry &= vbCrLf & "  WHERE  (ISNULL(FNHSysCmpId,0) = 0 OR  FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                _TimeShiftControl = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
            End If
            Return _TimeShiftControl
        End Get
    End Property

    Private Shared _ConfigLateTimeDeduct As DataTable = Nothing
    'Private Shared ReadOnly Property LoadConfigLateTimeDeduct() As DataTable
    '    Get
    '        If _ConfigLateTimeDeduct Is Nothing Then
    '            Dim _Qry As String

    '            _Qry = "   Select  FTCfgLateCode, FNRateBegin, FNRateEnd, FTStaDeduct, FNRateDeduct, FTStaActive"
    '            _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLateSet WITH(NOLOCK)"
    '            _Qry &= vbCrLf & " WHERE (FTStaActive = '1')"

    '            _ConfigLateTimeDeduct = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
    '        End If
    '        Return _ConfigLateTimeDeduct

    '    End Get

    'End Property

    Private Shared ReadOnly Property LoadConfigLateTimeDeduct(EmpTypeId As String) As DataTable
        Get
            'If _ConfigLateTimeDeduct Is Nothing Then
            Dim _Qry As String

            _Qry = "   Select  FTCfgLateCode, FNRateBegin, FNRateEnd, FTStaDeduct, FNRateDeduct, FTStaActive, FNHSysEmpTypeId"
            _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLateSet WITH(NOLOCK)"
            _Qry &= vbCrLf & " WHERE (FTStaActive = '1') AND FNHSysEmpTypeId=" & EmpTypeId
            _Qry &= vbCrLf & " AND (ISNULL(FNHSysCmpId,0) =0 OR ISNULL(FNHSysCmpId,0) = " & HI.ST.SysInfo.CmpID & " ) "

            _ConfigLateTimeDeduct = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
            If (_ConfigLateTimeDeduct.Rows.Count = 0) Then
                _Qry = "   Select  FTCfgLateCode, FNRateBegin, FNRateEnd, FTStaDeduct, FNRateDeduct, FTStaActive, FNHSysEmpTypeId"
                _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLateSet With(NOLOCK)"
                _Qry &= vbCrLf & " WHERE (FTStaActive = '1') AND FNHSysEmpTypeId=" & "0"
                _Qry &= vbCrLf & " AND (ISNULL(FNHSysCmpId,0) =0 OR ISNULL(FNHSysCmpId,0) = " & HI.ST.SysInfo.CmpID & " ) "

                _ConfigLateTimeDeduct = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
            End If
            'End If
            Return _ConfigLateTimeDeduct

        End Get

    End Property
    Public Shared Sub DisposeObject()
        Try
            _ConfigLateTimeDeduct = Nothing
            _TimeShiftControl = Nothing
            _SysHoliday = Nothing
            _OTPayOver = Nothing
            _OTTimeCtrl = Nothing
            _ActualBeforedate = ""
            _ActualNextdate = ""
            _ActualNextdate = ""
        Catch ex As Exception

        End Try
        Try
            WorkAge_Rate = Nothing
            _SocailRateKM = Nothing
            _WelfareKM = Nothing
        Catch ex As Exception
        End Try

    End Sub

#End Region

#Region "Function"

    Public Shared Function LoadWeekday(ByVal pmFieldDate As String, Optional ByVal pmDBName As HI.Conn.DB.DataBaseName = Conn.DB.DataBaseName.DB_HR) As Integer
        Try
            Return HI.Conn.SQLConn.GetField("SELECT CASE WHEN ISDATE('" & pmFieldDate & "') =1 THen  DATEPART ( WEEKDAY ,'" & pmFieldDate & "') ELSE -1 END  AS WeekdayAD", pmDBName, "-1")
        Catch ex As Exception
            Return -1
        End Try
    End Function

    Public Shared Function CheckDateHoliday(ByVal _Date As String) As Boolean
        Dim _QrySql As String
        Try

            If LoadWeekdayAD(_Date) = Microsoft.VisualBasic.vbSunday Then
                Return True
            Else

                _QrySql = "SELECT FDHolidayDate FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) WHERE FDHolidayDate = '" & _Date & "'  AND FTStateActive='1'  "
                _QrySql &= vbCrLf & "  AND  (ISNULL(FNHSysCmpId,0) = 0 OR  FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                If HI.Conn.SQLConn.GetField(_QrySql, Conn.DB.DataBaseName.DB_MASTER, "") <> "" Then
                    Return True
                Else
                    Return False
                End If

            End If

        Catch ex As Exception
            Return False
        End Try
    End Function

    Public Shared Function LoadWeekdayAD(ByVal _Date As String) As Integer
        Try
            Dim Day1 As String
            Dim DateS2 As String

            DateS2 = CStr(_Date)
            Day1 = HI.UL.ULDate.ConvertEnDB(_Date)
            Return Weekday(CDate(_Date))
        Catch ex As Exception
            Return 0
        End Try
    End Function

    'Public Shared Function LoadSocialRate() As Boolean
    '    Try
    '        Dim _Qry As String
    '        Dim _dt As DataTable

    '        _Qry = " SELECT  TOP 1 FNSocialRate "
    '        _Qry &= vbCrLf & " , FNSocialMin"
    '        _Qry &= vbCrLf & " , FNSocialMax"
    '        _Qry &= vbCrLf & " , FNContributedToTheFund"
    '        _Qry &= vbCrLf & " ,FNContributedIncomeMax"
    '        _Qry &= vbCrLf & " , FTContributedDeducIDNo"
    '        _Qry &= vbCrLf & " , FTContributedDeducCmpCode"
    '        _Qry &= vbCrLf & " , FTContributedDeducBnkCode"
    '        _Qry &= vbCrLf & "FROM   [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCmpSocialDiscountTaxConfig AS A WITH(NOLOCK)"
    '        _Qry &= vbCrLf & "  WHERE FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID) & " "

    '        _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

    '        HCfg.HSocialRate.SocialIncomeMin = 0
    '        HCfg.HSocialRate.SocialIncomeMax = 0
    '        HCfg.HSocialRate.CalSocialRate = 0

    '        For Each R As DataRow In _dt.Rows
    '            HCfg.HSocialRate.SocialIncomeMin = Val(R!FNSocialMin.ToString)
    '            HCfg.HSocialRate.SocialIncomeMax = Val(R!FNSocialMax.ToString)
    '            HCfg.HSocialRate.CalSocialRate = Val(R!FNSocialRate.ToString)
    '        Next

    '        HCfg.HMaxSocialBaht = CDbl(Format((HCfg.HSocialRate.SocialIncomeMax * HCfg.HSocialRate.CalSocialRate) / 100.0, "0"))

    '        Return True

    '    Catch ex As Exception
    '        Return False
    '    End Try
    'End Function



    Public Shared Function LoadSocialRate() As Boolean
        Try
            Dim _Qry As String
            Dim _dt As DataTable

            _Qry = " SELECT  TOP 1 FNSocialRate,FNSocialRateCmp "
            _Qry &= vbCrLf & " , FNSocialMin"
            _Qry &= vbCrLf & " , FNSocialMax"
            _Qry &= vbCrLf & " , FNContributedToTheFund"
            _Qry &= vbCrLf & " ,FNContributedIncomeMax"
            _Qry &= vbCrLf & " , FTContributedDeducIDNo"
            _Qry &= vbCrLf & " , FTContributedDeducCmpCode"
            _Qry &= vbCrLf & " , FTContributedDeducBnkCode"
            _Qry &= vbCrLf & " , FTStateCmpPayOnly "
            _Qry &= vbCrLf & "FROM   [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCmpSocialDiscountTaxConfig AS A WITH(NOLOCK)"
            _Qry &= vbCrLf & "  WHERE FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID) & " "

            _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

            HCfg.HSocialRate.SocialIncomeMin = 0
            HCfg.HSocialRate.SocialIncomeMax = 0
            HCfg.HSocialRate.CalSocialRate = 0
            HCfg.HSocialRate.CalSocialRateCmp = 0
            HCfg.HSocialRate.StateSocialOnlyCmppay = False
            For Each R As DataRow In _dt.Rows
                HCfg.HSocialRate.SocialIncomeMin = Val(R!FNSocialMin.ToString)
                HCfg.HSocialRate.SocialIncomeMax = Val(R!FNSocialMax.ToString)
                HCfg.HSocialRate.CalSocialRate = Val(R!FNSocialRate.ToString)
                HCfg.HSocialRate.CalSocialRateCmp = Val(R!FNSocialRateCmp.ToString)
                HCfg.HSocialRate.StateSocialOnlyCmppay = R!FTStateCmpPayOnly.ToString = "1"
            Next

            HCfg.HMaxSocialBaht = CDbl(Format((HCfg.HSocialRate.SocialIncomeMax * HCfg.HSocialRate.CalSocialRate) / 100.0, "0"))

            Return True

        Catch ex As Exception
            Return False
        End Try
    End Function


    Public Shared Function LoadTaxRate() As Boolean
        Try
            Dim _QrySql As String
            Dim oDBdt As DataTable
            Dim nIndex As Integer

            _QrySql = " SELECT  FCAmtBegin, FCAmtEnd, FCTaxRate,ISNULL(FNAllowance,0) AS FNAllowance "
            _QrySql &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigTaxRate WITH(NOLOCK)"
            _QrySql &= vbCrLf & " WHERE FTStaActive='1' "
            _QrySql &= vbCrLf & " ORDER BY FNSeqNo ASC "
            oDBdt = HI.Conn.SQLConn.GetDataTable(_QrySql, Conn.DB.DataBaseName.DB_HR)
            nIndex = 0
            If oDBdt.Rows.Count > 0 Then
                Dim oDBdr As DataRow
                For Each oDBdr In oDBdt.Rows
                    nIndex = nIndex + 1
                    ReDim Preserve HCfg.HCfg_TaxRate(nIndex)

                    HCfg.HCfg_TaxRate(nIndex).TaxIncomeMin = Val(oDBdr.Item("FCAmtBegin").ToString)
                    HCfg.HCfg_TaxRate(nIndex).TaxIncomeMax = Val(oDBdr.Item("FCAmtEnd").ToString)
                    HCfg.HCfg_TaxRate(nIndex).CalTaxRate = Val(oDBdr.Item("FCTaxRate").ToString)
                    HCfg.HCfg_TaxRate(nIndex).DisAllowance = Val(oDBdr.Item("FNAllowance").ToString)

                Next
            End If
            Return True
        Catch ex As Exception

            Return False
        End Try
    End Function

    Public Shared Function LoadDiscountTax() As Boolean
        Try
            Dim _Qry As String
            Dim _Dt As DataTable

            _Qry = "    SELECT       FTKeyCode, FTKeyValue"
            _Qry &= vbCrLf & "   FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfig WITH(NOLOCK)"
            _Qry &= vbCrLf & "  WHERE       (FTKeyCode = N'Cfg_ContributedDeducToTheFund') "
            _Qry &= vbCrLf & "  OR (FTKeyCode = N'Cfg_ContributedDeducToTheFundBoss') "
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ContributedIncomeMax') "
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ContributedToTheFund') "
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModChildAllowanceRateNotStudied')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModChildAllowanceRateNumberOfChildren')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModChildAllowanceRateStudy')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModDeductibleDonations')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModFatherReduction')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModInsurancePremiums')"
            _Qry &= vbCrLf & "  OR (FTKeyCode = N'Cfg_ModLendingforHousing')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModLTF')"
            _Qry &= vbCrLf & "  OR (FTKeyCode = N'Cfg_ModLTFChk')"
            _Qry &= vbCrLf & "  OR (FTKeyCode = N'Cfg_ModMateFatherReduction')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModMateMotherReduction')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModMotherReduction')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModPersonalExpen')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModPersonalExpenChk')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModRateReductionsByMarital')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModRateReductionsBySingle')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModRMF')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModRMFChk')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModSavingsFundOnly')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModSavingsFundOnlyChk')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModSavingsFundOnlytheExcess')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModSavingsFundOnlytheExcessChk')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModDeductibleDonationsstudy')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModChildAllowanceAgeStart')"
            _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModChildAllowanceAgeEnd')"

            'Cfg_ModDeductibleDonationsstudy
            _Dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

            ' ----------------------------------------- Clear Discount Tax Value -------------------------
            HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied = 0 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
            HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy = 0 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
            HCfg._DiscountTax.Cfg_ModChildAllowanceRateNumberOfChildren = 0 'บุตรศึกษา อัตราลดหย่อนบุตร บุตร กำลังศึกษา คนละ

            '-------------ลดหย่อนบุตร-----------------

            '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
            HCfg._DiscountTax.Cfg_ContributedDeducToTheFund = 0 'ลูกจ้าง
            HCfg._DiscountTax.Cfg_ContributedDeducToTheFundBoss = 0 'นายจ้าง

            '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ

            'กองทุนเงินทดแทน เปอร์เซนต์ จ่ายเงินสมทบเข้ากองทุน ของรายได้
            HCfg._DiscountTax.Cfg_ContributedToTheFund = 0 ' %
            HCfg._DiscountTax.Cfg_ContributedIncomeMax = 0 'จำนวนเงินสูงสุด

            'กองทุนเงินทดแทน เปอร์เซนต์ จ่ายเงินสมทบเข้ากองทุน ของรายได้
            HCfg._DiscountTax.Cfg_ModDeductibleDonations = 0 ' % ลดหย่อนเงินบริจาค
            HCfg._DiscountTax.Cfg_ModFatherReduction = 0 'ลดหย่อนบิดา
            HCfg._DiscountTax.Cfg_ModInsurancePremiums = 0 'ค่าเบี้ยประกันชีวิตส่วนบุคคล
            HCfg._DiscountTax.Cfg_ModLendingforHousing = 0 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย
            HCfg._DiscountTax.Cfg_ModLTF = 0 '% หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF)
            HCfg._DiscountTax.Cfg_ModLTFChk = 0 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
            HCfg._DiscountTax.Cfg_ModMateFatherReduction = 0 'ลดหย่อนบิดา คู่สมรส
            HCfg._DiscountTax.Cfg_ModMateMotherReduction = 0 'ลดหย่อนมารดา คู่สมรส
            HCfg._DiscountTax.Cfg_ModMotherReduction = 0 'ลดหย่อนมารดา
            HCfg._DiscountTax.Cfg_ModPersonalExpen = 0 '% หัก ค่าใช้จ่ายส่วนบุคคล
            HCfg._DiscountTax.Cfg_ModPersonalExpenChk = 0 ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน
            HCfg._DiscountTax.Cfg_ModRateReductionsByMarital = 0 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
            HCfg._DiscountTax.Cfg_ModRateReductionsBySingle = 0 'อัตราลดหย่อน ตาม สถานภาพ โสด 
            HCfg._DiscountTax.Cfg_ModRMF = 0 ' % หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF)
            HCfg._DiscountTax.Cfg_ModRMFChk = 0 ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 
            HCfg._DiscountTax.Cfg_ModSavingsFundOnly = 0 'เปอร์เซนต์ หักเงินสะสมกองทุนสำรองเลี้ยงชีพ ของค่าจ้าง
            HCfg._DiscountTax.Cfg_ModSavingsFundOnlyChk = 0 'หักเงินสะสมกองทุนสำรองเลี้ยงชีพไม่เกิน
            HCfg._DiscountTax.Cfg_ModSavingsFundOnlytheExcess = 0 'เงินสะสมกองทุนสำรองเลี้ยงชีพ เฉพาะส่วนที่เกิน
            HCfg._DiscountTax.Cfg_ModSavingsFundOnlytheExcessChk = 0 'เงินสะสมกองทุนสำรองเลี้ยงชีพ เฉพาะส่วนที่เกิน ไม่เกิน
            HCfg._DiscountTax.Cfg_ModDeductDonateStudy = 0
            HCfg._DiscountTax.Cfg_ModChildAllowanceAgeEnd = 0
            HCfg._DiscountTax.Cfg_ModChildAllowanceAgeStart = 0
            '----------------------------------------------------
            For Each R As DataRow In _Dt.Rows

                Select Case R!FTKeyCode.ToString.ToUpper
                    '-------------ลดหย่อนบุตร-----------------
                    Case "Cfg_ModChildAllowanceRateNotStudied".ToUpper 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
                        HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModChildAllowanceRateStudy".ToUpper 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
                        HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModChildAllowanceRateNumberOfChildren".ToUpper 'บุตรศึกษา อัตราลดหย่อนบุตร บุตร กำลังศึกษา คนละ
                        HCfg._DiscountTax.Cfg_ModChildAllowanceRateNumberOfChildren = Val(R!FTKeyValue.ToString)
                        '-------------ลดหย่อนบุตร-----------------

                        '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
                    Case "Cfg_ContributedDeducToTheFund".ToUpper 'ลูกจ้าง
                        HCfg._DiscountTax.Cfg_ContributedDeducToTheFund = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ContributedDeducToTheFundBoss".ToUpper 'นายจ้าง
                        HCfg._DiscountTax.Cfg_ContributedDeducToTheFundBoss = Val(R!FTKeyValue.ToString)
                        '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ

                        'กองทุนเงินทดแทน เปอร์เซนต์ จ่ายเงินสมทบเข้ากองทุน ของรายได้
                    Case "Cfg_ContributedToTheFund".ToUpper ' %
                        HCfg._DiscountTax.Cfg_ContributedToTheFund = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ContributedIncomeMax".ToUpper 'จำนวนเงินสูงสุด
                        HCfg._DiscountTax.Cfg_ContributedIncomeMax = Val(R!FTKeyValue.ToString)
                        'กองทุนเงินทดแทน เปอร์เซนต์ จ่ายเงินสมทบเข้ากองทุน ของรายได้

                    Case "Cfg_ModDeductibleDonations".ToUpper ' % ลดหย่อนเงินบริจาค
                        HCfg._DiscountTax.Cfg_ModDeductibleDonations = Val(R!FTKeyValue.ToString)

                    Case "Cfg_ModDeductibleDonationsstudy".ToUpper ' % ลดหย่อนเงินบริจาคเพื่อการศึกษา
                        HCfg._DiscountTax.Cfg_ModDeductDonateStudy = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModFatherReduction".ToUpper 'ลดหย่อนบิดา
                        HCfg._DiscountTax.Cfg_ModFatherReduction = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModInsurancePremiums".ToUpper 'ค่าเบี้ยประกันชีวิตส่วนบุคคล
                        HCfg._DiscountTax.Cfg_ModInsurancePremiums = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModLendingforHousing".ToUpper 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย
                        HCfg._DiscountTax.Cfg_ModLendingforHousing = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModLTF".ToUpper '% หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF)
                        HCfg._DiscountTax.Cfg_ModLTF = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModLTFChk".ToUpper 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
                        HCfg._DiscountTax.Cfg_ModLTFChk = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModMateFatherReduction".ToUpper 'ลดหย่อนบิดา คู่สมรส
                        HCfg._DiscountTax.Cfg_ModMateFatherReduction = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModMateMotherReduction".ToUpper 'ลดหย่อนมารดา คู่สมรส
                        HCfg._DiscountTax.Cfg_ModMateMotherReduction = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModMotherReduction".ToUpper 'ลดหย่อนมารดา
                        HCfg._DiscountTax.Cfg_ModMotherReduction = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModPersonalExpen".ToUpper '% หัก ค่าใช้จ่ายส่วนบุคคล
                        HCfg._DiscountTax.Cfg_ModPersonalExpen = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModPersonalExpenChk".ToUpper ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน
                        HCfg._DiscountTax.Cfg_ModPersonalExpenChk = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModRateReductionsByMarital".ToUpper 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
                        HCfg._DiscountTax.Cfg_ModRateReductionsByMarital = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModRateReductionsBySingle".ToUpper 'อัตราลดหย่อน ตาม สถานภาพ โสด 
                        HCfg._DiscountTax.Cfg_ModRateReductionsBySingle = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModRMF".ToUpper ' % หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF)
                        HCfg._DiscountTax.Cfg_ModRMF = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModRMFChk".ToUpper ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 
                        HCfg._DiscountTax.Cfg_ModRMFChk = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModSavingsFundOnly".ToUpper 'เปอร์เซนต์ หักเงินสะสมกองทุนสำรองเลี้ยงชีพ ของค่าจ้าง
                        HCfg._DiscountTax.Cfg_ModSavingsFundOnly = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModSavingsFundOnlyChk".ToUpper 'หักเงินสะสมกองทุนสำรองเลี้ยงชีพไม่เกิน
                        HCfg._DiscountTax.Cfg_ModSavingsFundOnlyChk = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModSavingsFundOnlytheExcess".ToUpper 'เงินสะสมกองทุนสำรองเลี้ยงชีพ เฉพาะส่วนที่เกิน
                        HCfg._DiscountTax.Cfg_ModSavingsFundOnlytheExcess = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModSavingsFundOnlytheExcessChk".ToUpper 'เงินสะสมกองทุนสำรองเลี้ยงชีพ เฉพาะส่วนที่เกิน ไม่เกิน
                        HCfg._DiscountTax.Cfg_ModSavingsFundOnlytheExcessChk = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModChildAllowanceAgeStart".ToUpper
                        HCfg._DiscountTax.Cfg_ModChildAllowanceAgeStart = Val(R!FTKeyValue.ToString)
                    Case "Cfg_ModChildAllowanceAgeEnd".ToUpper
                        HCfg._DiscountTax.Cfg_ModChildAllowanceAgeEnd = Val(R!FTKeyValue.ToString)

                    Case Else

                End Select
            Next
            Return True
        Catch ex As Exception

            Return False
        End Try
    End Function


    Public Shared Function GETnRecalSocial(ByVal pmEmpCode As String, ByVal pnIncome As Double, ByVal pnInstalmentNo As Double, ByVal pmPayYear As String, Optional ByVal pnSocialMonth As Double = 0) As Double
        Try
            Dim nSocialAmount As Double = 0
            Dim nSocialLastWeek As Double = 0
            Dim nSocialRecalLastWeek As Double = 0
            Dim oDBdtSocial As DataTable
            Dim _QrySql As String

            If (pnInstalmentNo Mod 2 = 0) Then

                pnSocialMonth = (HCfg.HSocialRate.SocialIncomeMax * HCfg.HSocialRate.CalSocialRate) / 100
                _QrySql = "SELECT ISNULL(dbo.THRTPayRoll.FCTotalRecalSSO,0) AS FCTotalRecalSSO , ISNULL(dbo.THRTPayRoll.FCSocial,0) AS FCSocial"
                _QrySql &= vbCrLf & "FROM dbo.THRTPayRoll"
                _QrySql &= vbCrLf & "AND dbo.THRTPayRoll.FTPayYear = '" & pmPayYear & "'"
                _QrySql &= vbCrLf & "AND dbo.THRTPayRoll.FTPayTerm = '" & Format(CStr(pnInstalmentNo - 1), "00") & "'"
                _QrySql &= vbCrLf & "AND dbo.THRTPayRoll.FTIdNo = (SELECT dbo.THRMEmployee.FTIdNo FROM dbo.THRMEmployee WHERE FNHSysEmpID = '" & Val(pmEmpCode) & "')"
                oDBdtSocial = HI.Conn.SQLConn.GetDataTable(_QrySql, Conn.DB.DataBaseName.DB_HR)

                If oDBdtSocial.Rows.Count > 0 Then
                    nSocialRecalLastWeek = oDBdtSocial.Rows(0).Item("FCTotalRecalSSO")
                    nSocialLastWeek = oDBdtSocial.Rows(0).Item("FCSocial")
                End If

                Select Case (pnIncome + nSocialRecalLastWeek)
                    Case Is = 0
                        nSocialAmount = 0
                    Case Is <= HCfg.HSocialRate.SocialIncomeMin
                        nSocialAmount = CDbl(Format((HCfg.HSocialRate.SocialIncomeMin * HCfg.HSocialRate.CalSocialRate) / 100, "#,##0.00"))
                    Case Is >= HCfg.HSocialRate.SocialIncomeMax
                        nSocialAmount = CDbl(Format((HCfg.HSocialRate.SocialIncomeMax * HCfg.HSocialRate.SocialIncomeMax / 100), "#,##0.00"))
                    Case Else
                        nSocialAmount = CDbl(Format(((pnIncome + nSocialRecalLastWeek) * HCfg.HSocialRate.CalSocialRate) / 100, "#,##0.00"))
                End Select

                If nSocialAmount >= pnSocialMonth Then
                    pnSocialMonth = pnSocialMonth
                Else
                    pnSocialMonth = nSocialAmount
                End If

                nSocialAmount = nSocialAmount - nSocialLastWeek
                nSocialAmount = Format(nSocialAmount, "#0.00")

            Else

                pnSocialMonth = CDbl(Format((HCfg.HSocialRate.SocialIncomeMax * HCfg.HSocialRate.CalSocialRate) / 100, "#,##0.00"))

                Select Case pnIncome
                    Case Is = 0
                        nSocialAmount = 0
                    Case Is <= HCfg.HSocialRate.SocialIncomeMin
                        nSocialAmount = CDbl(Format((HCfg.HSocialRate.SocialIncomeMin * HCfg.HSocialRate.CalSocialRate) / 100, "#,##0.00"))
                    Case Is >= HCfg.HSocialRate.SocialIncomeMax
                        nSocialAmount = CDbl(Format((HCfg.HSocialRate.SocialIncomeMax * HCfg.HSocialRate.CalSocialRate) / 100, "#,##0.00"))
                    Case Else
                        nSocialAmount = CDbl(Format((pnIncome * HCfg.HSocialRate.CalSocialRate) / 100, "#,##0.00"))
                End Select

                nSocialAmount = Format("{0:N2", nSocialAmount)
                If (nSocialAmount * 2) >= pnSocialMonth Then
                    pnSocialMonth = pnSocialMonth
                Else
                    pnSocialMonth = nSocialAmount * 2
                End If

            End If

            If nSocialAmount < 0 Then nSocialAmount = 0

            Return nSocialAmount
        Catch ex As Exception
            Return 0
        End Try
    End Function

    Public Shared Function GETnTax(ByVal pnIncome As Double, ByVal OtherAdd As Double, ByRef TaxOther As Double) As Double
        '...pnIncome เงินที่จะนำเอามาคิดภาษี ภายหลัง จากถูกหักลดหย่อนแล้ว
        Try
            Dim nStep As Integer
            Dim nTaxAmount As Double
            Dim nSumTax As Double
            Dim nIncomeRecal As Double
            Dim nIncomeBalance As Double
            nStep = 0 : nTaxAmount = 0 : nSumTax = 0 : nIncomeRecal = 0
            nIncomeBalance = pnIncome ' - OtherAdd

            '--------------ภาษีเงินได้ทั้งหมด รวม Bonus เงินได้อื่นๆ-------------
            Dim nSalaryIncome As Double = pnIncome - OtherAdd
            Dim nSalaryIncomeRecal As Double = nSalaryIncome
            Dim nSlaaryTax As Double = 0

            Do While (nIncomeBalance > 0)
                nStep = nStep + 1

                If HCfg.HCfg_TaxRate(nStep).TaxIncomeMax < pnIncome Then
                    nIncomeRecal = HCfg.HCfg_TaxRate(nStep).TaxIncomeMax - nIncomeRecal '...เงินที่จะเอามาคิดภาษีในลำดับขั้นการคิดภาษี ณ. Step นี้
                    nTaxAmount = ((HCfg.HCfg_TaxRate(nStep).CalTaxRate * nIncomeRecal) / 100)     '...ถูกคิดภาษี ณ. Step นี้เป็นจำนวนเงิน...บาท
                    nIncomeBalance = pnIncome - HCfg.HCfg_TaxRate(nStep).TaxIncomeMax   '...รายได้ที่เหลือ ที่จะนำเอาไปคิดภาษีในลำดับขั้นถัดไป
                    nIncomeRecal = HCfg.HCfg_TaxRate(nStep).TaxIncomeMax                '...Save Max Income
                Else
                    nTaxAmount = (HCfg.HCfg_TaxRate(nStep).CalTaxRate * nIncomeBalance) / 100   '...เงินที่เหลือในช่วงสุดท้ายของลำดับขั้นนี้ที่เอามาคิดภาษี
                    nIncomeBalance = 0  '...Flag เพื่อบอกว่าจบการคิดภาษี ณ. Step นี้
                End If

                nSumTax = nSumTax + nTaxAmount
            Loop

            '--------------ภาษีเงินได้ทั้งหมด รวม Bonus เงินได้อื่นๆ-------------

            '--------------ภาษีเงินได้เฉพาะเงินเดือน-------------

            nSlaaryTax = 0
            nStep = 0 : nTaxAmount = 0 : nIncomeRecal = 0
            nIncomeBalance = nSalaryIncome
            nSalaryIncomeRecal = nSalaryIncome

            Do While (nIncomeBalance > 0)
                nStep = nStep + 1

                If HCfg.HCfg_TaxRate(nStep).TaxIncomeMax < nSalaryIncomeRecal Then
                    nIncomeRecal = HCfg.HCfg_TaxRate(nStep).TaxIncomeMax - nIncomeRecal '...เงินที่จะเอามาคิดภาษีในลำดับขั้นการคิดภาษี ณ. Step นี้
                    nTaxAmount = ((HCfg.HCfg_TaxRate(nStep).CalTaxRate * nIncomeRecal) / 100)     '...ถูกคิดภาษี ณ. Step นี้เป็นจำนวนเงิน...บาท
                    nIncomeBalance = nSalaryIncomeRecal - HCfg.HCfg_TaxRate(nStep).TaxIncomeMax   '...รายได้ที่เหลือ ที่จะนำเอาไปคิดภาษีในลำดับขั้นถัดไป
                    nIncomeRecal = HCfg.HCfg_TaxRate(nStep).TaxIncomeMax                '...Save Max Income
                Else
                    nTaxAmount = (HCfg.HCfg_TaxRate(nStep).CalTaxRate * nIncomeBalance) / 100   '...เงินที่เหลือในช่วงสุดท้ายของลำดับขั้นนี้ที่เอามาคิดภาษี
                    nIncomeBalance = 0  '...Flag เพื่อบอกว่าจบการคิดภาษี ณ. Step นี้
                End If

                nSlaaryTax = nSlaaryTax + nTaxAmount
            Loop

            '--------------ภาษีเงินได้เฉพาะเงินเดือน-------------
            TaxOther = nSumTax - nSlaaryTax

            Return nSumTax - TaxOther
        Catch ex As Exception
            Return 0
        End Try
    End Function


    Public Shared Function GETnTax_KM(ByVal pnIncome As Double, ByVal OtherAdd As Double, ByRef TaxOther As Double) As Double
        '...pnIncome เงินที่จะนำเอามาคิดภาษี ภายหลัง จากถูกหักลดหย่อนแล้ว
        Try

            Dim _Cmd As String = ""
            Dim nStep As Integer
            Dim nTaxAmount As Double
            Dim nSumTax As Double
            Dim nIncomeRecal As Double
            Dim nIncomeBalance As Double
            nStep = 0 : nTaxAmount = 0 : nSumTax = 0 : nIncomeRecal = 0
            nIncomeBalance = pnIncome ' - OtherAdd

            '--------------ภาษีเงินได้ทั้งหมด รวม Bonus เงินได้อื่นๆ-------------
            Dim nSalaryIncome As Double = pnIncome + OtherAdd
            Dim nSalaryIncomeRecal As Double = nSalaryIncome
            Dim nSlaaryTax As Double = 0

            Dim _FCTaxRate As Double = 0
            Dim _FNAllowance As Double = 0

            Dim _dtTax As DataTable

            _Cmd = "SELECT TOP 1 FCTaxRate, FNAllowance"
            _Cmd &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigTaxRate"
            _Cmd &= vbCrLf & " WHERE  (FCAmtBegin <= " & Val(nSalaryIncomeRecal) & ") "
            _Cmd &= vbCrLf & " AND (FCAmtEnd >= " & Val(nSalaryIncomeRecal) & ")"

            _dtTax = HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR)

            For Each R As DataRow In _dtTax.Rows

                _FCTaxRate = Val(R!FCTaxRate.ToString)
                _FNAllowance = Val(R!FNAllowance.ToString)

            Next
            _dtTax.Dispose()


            nSumTax = Double.Parse(Format(((nSalaryIncome * _FCTaxRate) / 100.0), "0.00")) - _FNAllowance
          
            '--------------ภาษีเงินได้ทั้งหมด รวม Bonus เงินได้อื่นๆ-------------

            Return nSumTax
        Catch ex As Exception
            Return 0
        End Try
    End Function

    Public Shared Function GETnRecalDiscTax(ByVal _Emp As HCfg.EmployeeDiscountTax, ByRef _EmptaxYear As HCfg.EmpTaxYear) As Double
        '...คำนวณเงินลดหย่อน ก่อนนำไปคิดภาษี
        Try
            Dim _TotalIncome As Double = 0
            Dim _TotalDiscount As Double = 0
            Dim _Discount As Double = 0
            Dim _Ind As Integer = 0
            Dim _IndMax As Integer = 0
            With _Emp

                _TotalIncome = .OtherSlary + .BaseSlary + .BeforeIncom

                _EmptaxYear.FTAmt = _TotalIncome  'เงินได้ก่อนหักค่าใช้จ่าย
                _TotalDiscount = .FTSosial

                '---------------- ค่าใช้จ่ายส่วนตัว-----------------------------------------
                If HCfg._DiscountTax.Cfg_ModPersonalExpen > 0 Then
                    _Discount = CDbl(Format((_TotalIncome * HCfg._DiscountTax.Cfg_ModPersonalExpen) / 100, "0.00"))

                    If _Discount > HCfg._DiscountTax.Cfg_ModPersonalExpenChk Then
                        _Discount = HCfg._DiscountTax.Cfg_ModPersonalExpenChk

                    End If

                    _EmptaxYear.FTExpenses = _Discount 'ค่าใช้จ่ายส่วนตัว

                    _TotalDiscount = _TotalDiscount + _Discount
                End If
                '---------------- ค่าใช้จ่ายส่วนตัว-----------------------------------------

                _EmptaxYear.FTNetAmt = _EmptaxYear.FTAmt - _EmptaxYear.FTExpenses ' เงินได้หลังหักค่าใช้จ่าย

                ' ----------------------------ค่าใช้จ่ายบุตร ------------------------------
                _EmptaxYear.FNChildNotLern = .Cfg_ModChildAllowanceRateNotStudied 'จำนวนบุตรไม่ศึกษา
                _EmptaxYear.FNChildLern = .Cfg_ModChildAllowanceRateStudy 'จำนวนบุตรศึกษา

                If .Cfg_ModChildAllowanceRateNotStudied > 0 Or .Cfg_ModChildAllowanceRateStudy > 0 Then
                    _Discount = 0
                    If HCfg._DiscountTax.Cfg_ModChildAllowanceRateNumberOfChildren > 0 Then

                        _IndMax = HCfg._DiscountTax.Cfg_ModChildAllowanceRateNumberOfChildren

                        If HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied > HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy Then
                            For I = 1 To .Cfg_ModChildAllowanceRateNotStudied
                                If _IndMax > 0 Then

                                    _Discount = _Discount + HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied

                                    _EmptaxYear.FTChildNotLern = _EmptaxYear.FTChildNotLern + HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied 'ลดหย่อนบุตรไม่ศึกษา

                                    _IndMax = _IndMax - 1
                                End If
                            Next
                        Else
                            For I = 1 To .Cfg_ModChildAllowanceRateStudy
                                If _IndMax > 0 Then
                                    _Discount = _Discount + HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy
                                    _EmptaxYear.FTChildLern = _EmptaxYear.FTChildLern + HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy 'ลดหย่อนบุตรศึกษา
                                    _IndMax = _IndMax - 1
                                End If
                            Next
                        End If


                        If _IndMax > 0 Then
                            If HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied > HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy Then
                                For I = 1 To .Cfg_ModChildAllowanceRateStudy
                                    If _IndMax > 0 Then

                                        _Discount = _Discount + HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy

                                        _EmptaxYear.FTChildLern = _EmptaxYear.FTChildLern + HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy 'ลดหย่อนบุตรศึกษา

                                        _IndMax = _IndMax - 1
                                    End If
                                Next
                            Else
                                For I = 1 To .Cfg_ModChildAllowanceRateNotStudied
                                    If _IndMax > 0 Then
                                        _Discount = _Discount + HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied

                                        _EmptaxYear.FTChildNotLern = _EmptaxYear.FTChildNotLern + HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied 'ลดหย่อนบุตรไม่ศึกษา

                                        _IndMax = _IndMax - 1
                                    End If
                                Next
                            End If
                        End If
                    End If

                    _TotalDiscount = _TotalDiscount + _Discount

                End If
                ' ----------------------------ค่าใช้จ่ายบุตร ------------------------------

                _TotalDiscount = _TotalDiscount + IIf(HCfg._DiscountTax.Cfg_ModFatherReduction < .Cfg_ModFatherReduction, HCfg._DiscountTax.Cfg_ModFatherReduction, .Cfg_ModFatherReduction) 'ลดหย่อนบิดา
                _EmptaxYear.FTModFather = IIf(HCfg._DiscountTax.Cfg_ModFatherReduction < .Cfg_ModFatherReduction, HCfg._DiscountTax.Cfg_ModFatherReduction, .Cfg_ModFatherReduction) 'ลดหย่อนบิดา

                _TotalDiscount = _TotalDiscount + IIf(HCfg._DiscountTax.Cfg_ModInsurancePremiums < .Cfg_ModInsurancePremiums, HCfg._DiscountTax.Cfg_ModInsurancePremiums, .Cfg_ModInsurancePremiums) 'เบี้ยประกันชีวิตส่วนบุคคล
                _EmptaxYear.FTInsurance = IIf(HCfg._DiscountTax.Cfg_ModInsurancePremiums < .Cfg_ModInsurancePremiums, HCfg._DiscountTax.Cfg_ModInsurancePremiums, .Cfg_ModInsurancePremiums) 'เบี้ยประกันชีวิตส่วนบุคคล

                _TotalDiscount = _TotalDiscount + IIf(HCfg._DiscountTax.Cfg_ModLendingforHousing < .Cfg_ModLendingforHousing, HCfg._DiscountTax.Cfg_ModLendingforHousing, .Cfg_ModLendingforHousing)  'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย
                _EmptaxYear.FTInterest = IIf(HCfg._DiscountTax.Cfg_ModLendingforHousing < .Cfg_ModLendingforHousing, HCfg._DiscountTax.Cfg_ModLendingforHousing, .Cfg_ModLendingforHousing)

                _TotalDiscount = _TotalDiscount + .FCDisabledDependents 'ดูแลบุคลทุพลภาพ
                _EmptaxYear.FTCommutation = _EmptaxYear.FTCommutation + .FCDisabledDependents

                _TotalDiscount = _TotalDiscount + .FCHealthInsurFatherMotherMate 'เบี้ยประกันบิดามารดา
                _EmptaxYear.FTParentsHealthInsurance = .FCHealthInsurFatherMotherMate 'เบี้ยประกันบิดามารดา

                _TotalDiscount = _TotalDiscount + IIf(HCfg._DiscountTax.Cfg_ModMateFatherReduction < .Cfg_ModMateFatherReduction, HCfg._DiscountTax.Cfg_ModMateFatherReduction, .Cfg_ModMateFatherReduction)   'ลดหย่อนบิดา คู่สมรส
                _EmptaxYear.FTModFatherMate = IIf(HCfg._DiscountTax.Cfg_ModMateFatherReduction < .Cfg_ModMateFatherReduction, HCfg._DiscountTax.Cfg_ModMateFatherReduction, .Cfg_ModMateFatherReduction)   'ลดหย่อนบิดา คู่สมรส

                _TotalDiscount = _TotalDiscount + IIf(HCfg._DiscountTax.Cfg_ModMateMotherReduction < .Cfg_ModMateMotherReduction, HCfg._DiscountTax.Cfg_ModMateMotherReduction, .Cfg_ModMateMotherReduction) 'ลดหย่อนมารดา คู่สมรส
                _EmptaxYear.FTModMotherMate = IIf(HCfg._DiscountTax.Cfg_ModMateMotherReduction < .Cfg_ModMateMotherReduction, HCfg._DiscountTax.Cfg_ModMateMotherReduction, .Cfg_ModMateMotherReduction) 'ลดหย่อนมารดา คู่สมรส

                _TotalDiscount = _TotalDiscount + IIf(HCfg._DiscountTax.Cfg_ModMotherReduction < .Cfg_ModMotherReduction, HCfg._DiscountTax.Cfg_ModMotherReduction, .Cfg_ModMotherReduction) 'ลดหย่อนมารดา
                _EmptaxYear.FTModMother = IIf(HCfg._DiscountTax.Cfg_ModMotherReduction < .Cfg_ModMotherReduction, HCfg._DiscountTax.Cfg_ModMotherReduction, .Cfg_ModMotherReduction) 'ลดหย่อนมารดา

                _TotalDiscount = _TotalDiscount + .FCExceptAgeOver ' 'รายการเงินได้ที่ได้รับยกเว้น ของผู้มีเงินได้ตั้งแต่ 65 ปีขึ้นไป 
                _TotalDiscount = _TotalDiscount + .FCExceptAgeOverMate 'รายการเงินได้ที่ได้รับยกเว้น ของคู่สมรสอายุตั้งแต่ 65 ปีขึ้นไป
                _EmptaxYear.FTPension = .FCExceptAgeOver + .FCExceptAgeOverMate ' บำนาญ

                _TotalDiscount = _TotalDiscount + .FCDeductDividend ' รายการลกหย่อนเงินปันผล
                _EmptaxYear.FTCommutation = _EmptaxYear.FTCommutation + .FCDeductDividend

                If .Cfg_ModRateReductionsByMarital = 1 And .FTMateIncome = False Then _TotalDiscount = _TotalDiscount + HCfg._DiscountTax.Cfg_ModRateReductionsByMarital 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
                If .Cfg_ModRateReductionsByMarital = 1 And .FTMateIncome = False Then _EmptaxYear.FTModMate = HCfg._DiscountTax.Cfg_ModRateReductionsByMarital 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 



                _TotalDiscount = _TotalDiscount + HCfg._DiscountTax.Cfg_ModRateReductionsBySingle 'อัตราลดหย่อน ตาม สถานภาพ โสด 
                _EmptaxYear.FTModEmp = HCfg._DiscountTax.Cfg_ModRateReductionsBySingle 'อัตราลดหย่อน 

                '---------------- LTF -----------------------------------------
                If HCfg._DiscountTax.Cfg_ModLTF > 0 And .Cfg_ModLTFChk > 0 Then


                    _Discount = CDbl(Format((_TotalIncome * HCfg._DiscountTax.Cfg_ModLTF) / 100, "0.00"))

                    If _Discount > HCfg._DiscountTax.Cfg_ModLTFChk Then
                        _Discount = HCfg._DiscountTax.Cfg_ModLTFChk

                    End If

                    _EmptaxYear.FTUnitLTF = _Discount

                    _TotalDiscount = _TotalDiscount + _Discount
                End If
                '---------------- LTF-----------------------------------------

                '---------------- RMF -----------------------------------------
                If HCfg._DiscountTax.Cfg_ModRMF > 0 And .Cfg_ModRMFChk > 0 Then

                    _Discount = CDbl(Format((_TotalIncome * HCfg._DiscountTax.Cfg_ModRMF) / 100, "0.00"))

                    If _Discount > HCfg._DiscountTax.Cfg_ModRMFChk Then
                        _Discount = HCfg._DiscountTax.Cfg_ModRMFChk

                    End If

                    _EmptaxYear.FTUnitRMF = _Discount

                    _TotalDiscount = _TotalDiscount + _Discount

                End If
                '---------------- RMF-----------------------------------------

                If .Cfg_ContributedDeducToTheFund > 0 Then
                    _Discount = .Cfg_ContributedDeducToTheFund

                    If _Discount > HCfg._DiscountTax.Cfg_ModSavingsFundOnlytheExcessChk Then
                        _EmptaxYear.FTProvidentfund = HCfg._DiscountTax.Cfg_ModSavingsFundOnlytheExcessChk
                        _EmptaxYear.FTProvidentfundOver = _Discount - HCfg._DiscountTax.Cfg_ModSavingsFundOnlytheExcessChk
                    Else
                        _EmptaxYear.FTProvidentfund = _Discount
                    End If

                    _TotalDiscount = _TotalDiscount + _Discount

                End If
                '----------------------------------------------------

                ' ----------------------------ลดหย่อนบริจาคเพื่อการศึกษา ---------------------
                If .Cfg_ModDeductDonateStudy > 0 Then
                    Dim _tmp As Double = IIf(_TotalIncome <= _TotalDiscount, 0, _TotalIncome - _TotalDiscount)
                    Dim TmpMax As Double = CDbl(Format((_tmp * HCfg._DiscountTax.Cfg_ModDeductDonateStudy) / 100, "0.00"))
                    Dim _TmpDiscount As Double = (.Cfg_ModDeductDonateStudy * 2)

                    If _TmpDiscount > TmpMax Then
                        _TotalDiscount = _TotalDiscount + TmpMax
                        _EmptaxYear.FTDonationLern = TmpMax
                    Else
                        _TotalDiscount = _TotalDiscount + _TmpDiscount
                        _EmptaxYear.FTDonationLern = _TmpDiscount
                    End If

                End If
                ' ----------------------------ลดหย่อนบริจาคเพื่อการศึกษา ---------------------

                ' ----------------------------ลดหย่อนบริจาค ------------------------------
                If .Cfg_ModDeductibleDonations > 0 Then
                    Dim _tmp As Double = IIf(_TotalIncome <= _TotalDiscount, 0, _TotalIncome - _TotalDiscount)
                    Dim TmpMax As Double = CDbl(Format((_tmp * HCfg._DiscountTax.Cfg_ModDeductibleDonations) / 100, "0.00"))

                    If TmpMax > .Cfg_ModDeductibleDonations Then
                        _Discount = .Cfg_ModDeductibleDonations
                    Else
                        _Discount = TmpMax
                    End If

                    _EmptaxYear.FTDonation = _Discount

                    _TotalDiscount = _TotalDiscount + _Discount
                End If
                ' ----------------------------ลดหย่อนบริจาค -----------------------------

            End With

            Return IIf(_TotalIncome <= _TotalDiscount, 0, _TotalIncome - _TotalDiscount)

        Catch ex As Exception
            Return 0
        End Try
    End Function

    Public Shared Function CheckDateClosePeriod(ByVal _DateKey As String, ByVal _EmpTypeKey As String, Optional ByVal _EmpCodeKey As String = "") As Boolean

        Dim _Qry As String
        Dim _MinDate As String

        _Qry = " SELECT        TOP 1 MIN(D.FDCalDateBegin) AS FTdateBegin"
        _Qry &= vbCrLf & " FROM            THRMCfgPayHD AS H WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "  THRMCfgPayDT AS D WITH (NOLOCK) ON H.FTCmpCode = D.FTCmpCode"
        _Qry &= vbCrLf & "  AND H.FTTypeEmp = D.FTTypeEmp AND H.FTPayTerm = D.FTPayTerm AND "
        _Qry &= vbCrLf & "   H.FTPayYear = D.FTPayYear"
        _Qry &= vbCrLf & "  WHERE   H.FNHSysEmpTypeId ='" & Val(_EmpTypeKey) & "' "
        If _EmpTypeKey = "" And _EmpCodeKey <> "" Then
            _Qry &= vbCrLf & " AND   H.FNHSysEmpTypeId IN  (SELECT TOP 1 FNHSysEmpTypeId "
            _Qry &= vbCrLf & " FROM THRMEmployee AS M WITH (NOLOCK)"
            _Qry &= vbCrLf & " WHERE  FNHSysEmpID='" & Val(_EmpCodeKey) & "'      "
            _Qry &= vbCrLf & "      AND (ISNULL(FNHSysCmpId,0) = 0 OR ISNULL(FNHSysCmpId,0)=" & HI.ST.SysInfo.CmpID & ") )  "
        End If
        _MinDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")
        If HI.UL.ULDate.ConvertEnDB(_MinDate) > HI.UL.ULDate.ConvertEnDB(_DateKey) Then
            Return True
        Else
            Return False
        End If

    End Function


    Public Shared Function CalculateWorkTime(ByVal _User As String, ByVal _EmpCode As String, ByVal _StartDate As String, ByVal _EndDate As String, Optional ByVal _EditOt1 As Double = -1, Optional ByVal _EditOt2 As Double = -1, Optional ByVal _EditOt4 As Double = -1, Optional ByVal _EditWT As Double = -1) As Boolean
        Try

            Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
            Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
            Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

            Dim _Qry As String
            Dim _dt As DataTable
            Dim _dttran As DataTable

            Dim _Err As Integer, _Complete As Integer, _MsgShow As String, _FTMsgShow As String
            Dim _Shift As String

            Dim _ActualScanMIn As String, _ActualScanMOut As String, _ActualScanAIn As String, _ActualScanAOut As String, _ActualScanOTIn1 As String, _ActualScanOTOut1 As String, _ActualScanOTIn12 As String, _ActualScanOTOut12 As String, _ActIn01 As String, _ActOut01 As String
            Dim _CheckTimeMIn As String, _CheckTimeMOut As String, _CheckTimeAIn As String, _CheckTimeAOut As String, _CheckTimeOTIn1 As String, _CheckTimeOTOut1 As String
            Dim _CheckTimeOTIn12 As String, _CheckTimeOTOut12 As String

            Dim _ActBeforeDate As String
            Dim _ActualDate As String, _ActualNextDate As String, _UseBarcode As String, _CalDate As String, _LateCut As String, _ChkCalNextDate As String
            Dim _ScanCardOverClock As String, _nTimeCtrl As Double, _LateCompro As Integer
            Dim _LeaveSick As Double, _LeaveBusiness As Double, _LeaveVacation As Double, _LeavePregnant As Double
            Dim _LeaveOrdain As Double, _LeaveMarry As Double, _LeaveOther As Double
            Dim _Absent As Integer, _AbsentSP As Integer, _nOt As Integer, _nOt1 As Integer, _nOt15 As Integer, _nOt2 As Integer, _nOt3 As Integer, _nOt4 As Integer, _nOtH As Integer, _nOtHSP2 As Integer, _nOtHSP4 As Integer
            Dim _LateNormal As Integer, _LateNormalNotCut As Integer, _LateOT As Integer, _RetryNormal As Integer, _RetryOT As Integer, _RetryNormalCut As Integer, _RetryOTCut As Integer
            Dim _FNLateMMin As Integer, _FNLateAfMin As Integer, _FNRetireMMin As Integer, _FNRetireAfMin As Integer
            Dim _nTime As Integer, _nMTime As Integer, _nAfTime As Integer, _nOTTime As Integer
            Dim _LateCutN As Integer, _LateCutOT As Integer
            Dim _OTRequest As Integer, _SOTRequest As String, _EOTRequest As String
            Dim _SOTRequest2 As String, _EOTRequest2 As String
            Dim _SOTRequestM As String, _EOTRequestM As String

            Dim _SOTRequestM1 As String, _EOTRequestM1 As String
            Dim _ChkInOTM1 As String, _ChkOutOTM1 As String
            Dim _SOTRequestA1 As String, _EOTRequestA1 As String
            Dim _ChkInOTA1 As String, _ChkOutOTA1 As String

            Dim _FTAppOT As String, _FTWeekDay As String
            Dim _WorkTimePerDay As Double
            Dim _ScanTimeOverClock As String, _FTTypeEmp As String
            Dim _FNAbsentCut As Integer
            Dim _CutAbsent As Integer
            Dim _StateLate As String = ""
            Dim _DetuctLateType As String = ""
            Dim _DetuctLateMin As Integer = 0
            Dim _SPDateType As Integer = 0
            Dim _TimeNormalDiffEdit As Integer = 0
            Dim _R As DataRow()
            Dim _WeekDayBefore As Integer
            Dim _WeekCallDay As Integer
            Dim _FTStateAcceptTimeAuto As String = "0"
            Dim _DTOTRound As DataTable
            Dim _DTLateCfg As DataTable
            Dim _DTEmpLeave As DataTable
            Dim _DTHoliday As DataTable
            Dim _DTTHRMTimeScanCard As DataTable
            Dim _DTOTRequest As DataTable
            Dim _LoadOTPayOver As DataTable
            Dim _FNSpecialTimeMin As Integer = 0
            Dim _SpTimeIn As String = ""
            Dim _SpTimeOut As String = ""
            Dim _StateWorkOffSite As Double
            Dim _GetWeekend As DataTable
            Dim _GetDateSpecial As DataTable
            Dim _GetEmpTypeWeekly As DataTable
            Dim _FoundSpecialDay As Boolean = False
            Dim _SpecialTime As String = ""
            Dim _StatePayOTOverRequest As Boolean = False
            Dim _StartLeaveTime As String = ""
            Dim _EndLeaveTime As String = ""
            Dim _FTOtMIn As String = ""
            Dim _FTOtMOut As String = ""

            _ActualDate = ActualDate
            _ActualNextDate = ActualNextdate

            _ActBeforeDate = AcBeforedate

            '------------------ GetConfig OT Round ----------------------------------
            _DTOTRound = _LoadOTTimeCtrl
            '------------------ GetConfig OT Round ----------------------------------

            _LoadOTPayOver = LoadOTPayOver

            ''------------------ GetConfig Late ----------------------------------
            '_DTLateCfg = LoadConfigLateTimeDeduct
            '------------------ GetConfig Late ----------------------------------



            '------------------ GetConfig Leave ----------------------------------
            _Qry = "  SELECT FTDateTrans,FTLeaveType,SUM(FNTotalMinute) AS Total"
            _Qry &= vbCrLf & " ,Max(CASE WHEN ISNULL(FTStaLeaveDay,'') ='' Then '-1'  Else ISNULL(FTStaLeaveDay,'0') END) As FTStaLeaveDay  "
            _Qry &= vbCrLf & " , Min(FTLeaveStartTime) As FTLeaveStartTime, Max(FTLeaveEndTime) As FTLeaveEndTime "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
            _Qry &= vbCrLf & "  WHERE   (FNHSysEmpID =" & Val(_EmpCode) & ") "
            _Qry &= vbCrLf & "  AND (FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "')"
            _Qry &= vbCrLf & "  AND (FTDateTrans <='" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "')"
            _Qry &= vbCrLf & " GROUP BY FTDateTrans,FTLeaveType  "
            _DTEmpLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
            '------------------ GetConfig Late ----------------------------------


            '------------------ GetConfig WeekEnd ----------------------------------


            '------------------- วันหยุด เพิ่มเติม จากกะ ------------------------------------
            _GetEmpTypeWeekly = LoadEmpTypeWeekly(_StartDate, _EndDate)
            '--------------------------------------------------------------------

            '---------------- วันหยุดประจำสัปดาห์ของพนักงานแต่ละคน----------------
            _Qry = "   SELECT    Top 1   FTSunday,FTMonday, FTTuesday, FTWednesday, "
            _Qry &= vbCrLf & "   FTThursday, FTFriday, FTSaturday"
            _Qry &= vbCrLf & "   FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeWeekly  As W WITH(NOLOCK) "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & "  AND  (ISNULL(FTSunday,0)+ ISNULL(FTMonday,0)+ ISNULL(FTTuesday,0)+ ISNULL(FTWednesday,0)+ 
                 ISNULL(FTThursday,0)+ ISNULL(FTFriday,0)+ ISNULL(FTSaturday,0) >0 )"
            _GetWeekend = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)



            '----------------กรณี พบวันหยุด สัปดาห์ของพนักงานแต่ละคน ไม่ดู  วันหยุด เพิ่มเติม จากกะ ----------------
            If _GetWeekend.Rows.Count > 0 Then
                _GetEmpTypeWeekly.Clear()
            End If
            '---------------- วันหยุดประจำสัปดาห์ของพนักงานแต่ละคน----------------

            '------------------ GetConfig WeekEnd ----------------------------------

            '------------------ GetConfig Holiday ----------------------------------
            _DTHoliday = LoadSysHoliday
            '------------------ GetConfig Holiday ----------------------------------

            '------------------  Work Time ----------------------------------
            _DTTHRMTimeScanCard = LoadTimeShiftControl
            '------------------  Work Time ----------------------------------

            '------------------  OT Request ----------------------------------

            _Qry = "    SELECT   FTDateRequest, ISNULL(FNOtTotalTimeMinute ,0) +ISNULL(FNOtTotalTimeMinute2 ,0)   AS OTRequest"
            _Qry &= vbCrLf & ",ISNULL(FTOtIn,'') AS SOTRequest "
            _Qry &= vbCrLf & ", ISNULL(FTOtOut,'')  AS EOTRequest "
            _Qry &= vbCrLf & ",'' AS SOTRequest2 "
            _Qry &= vbCrLf & ",''  AS EOTRequest2 "
            _Qry &= vbCrLf & ",'' AS SOTRequest1 "
            _Qry &= vbCrLf & ", ''  AS EOTRequest1 "

            _Qry &= vbCrLf & ",ISNULL(FTOtIn3,'') AS SOTRequest3 "
            _Qry &= vbCrLf & ", ISNULL(FTOtOut3,'')  AS EOTRequest3 "

            _Qry &= vbCrLf & "  ,CASE WHEN ISNULL(FTApproveState,'') ='1' Then 'Y' Else 'N' END AS FTAppOT "
            _Qry &= vbCrLf & ", ISNULL(FTOtIn,'')  AS ChkIn3 "
            _Qry &= vbCrLf & ", ISNULL(FTOtOut,'')  AS ChkOut3 "
            _Qry &= vbCrLf & ", ''  AS ChkIn32 "
            _Qry &= vbCrLf & ",''  AS ChkOut32 "

            _Qry &= vbCrLf & ",''  AS ChkIn1 "
            _Qry &= vbCrLf & ", ''  AS ChkOut1 "
            _Qry &= vbCrLf & ", ISNULL(FTOtIn3,'')  AS ChkIn33 "
            _Qry &= vbCrLf & ", ISNULL(FTOtOut3,'')  AS ChkOut33 "

            _Qry &= vbCrLf & ", ISNULL(FNRest,0)  AS FNRest "
            _Qry &= vbCrLf & ", ISNULL(FNRest2,0)  AS FNRest2 "

            _Qry &= vbCrLf & ", ISNULL(FTOtMIn,0)  AS FTOtMIn "
            _Qry &= vbCrLf & ", ISNULL(FTOtMOut,0)  AS FTOtMOut "

            _Qry &= vbCrLf & " 	FROM     [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTDailyOTRequest AS O WITH (NOLOCK) "
            _Qry &= vbCrLf & "  WHERE (FTDateRequest <> '') "
            _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ") "
            _Qry &= vbCrLf & "  AND (FTDateRequest >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "')"
            _Qry &= vbCrLf & "  AND (FTDateRequest <='" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "')"


            _DTOTRequest = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
            '------------------ OT Request ----------------------------------

            '------------ Date Special--------------------------------
            _Qry = "  SELECT FTDate,FTTimeOut,FTStateStop ,FTTimeMOut"
            _Qry &= vbCrLf & " 	FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTDailySpecial AS O WITH (NOLOCK) "
            _Qry &= vbCrLf & "  WHERE (FTDate <> '') "
            _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ") "
            _Qry &= vbCrLf & "  AND (FTDate >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "')"
            _Qry &= vbCrLf & "  AND (FTDate <='" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "')"

            _GetDateSpecial = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

            '------------ Date Special--------------------------------
            _FTMsgShow = ""
            _MsgShow = ""
            _Complete = 0
            _Err = 0

            _FTStateAcceptTimeAuto = ""
            _Qry = " 	SELECT     T.FTDateTrans,T.FNHSysShiftID AS FTShift"
            _Qry &= vbCrLf & "  ,  T.FTIn1"
            _Qry &= vbCrLf & "  ,   T.FTOut1"
            _Qry &= vbCrLf & "  ,   T.FTIn2"
            _Qry &= vbCrLf & "  ,  T.FTOut2"
            _Qry &= vbCrLf & "  ,   T.FTIn3"
            _Qry &= vbCrLf & "  , T.FTOut3"
            _Qry &= vbCrLf & "  , FTIn4,T.FTOut4"
            _Qry &= vbCrLf & "  ,M.FNUseBarcode AS FTUseBarcode,M.FNLateCutSta As FTLateCutCond,T.FTWeekDay,M.FNHSysEmpTypeId AS FTTypeEmp"
            _Qry &= vbCrLf & ",T.FTScanAOTOut,T.FTScanAOTOut2"
            _Qry &= vbCrLf & ",ISNULL(ET.FTStateAcceptTimeAuto,'0') AS FTStateAcceptTimeAuto"
            _Qry &= vbCrLf & "  ,T.FTOtMIn"
            _Qry &= vbCrLf & "  ,T.FTOtMOut"
            _Qry &= vbCrLf & " FROM       [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) INNER JOIN THRMEmployee AS  M  WITH(NOLOCK)"
            _Qry &= vbCrLf & " 	ON T.FNHSysEmpID = M.FNHSysEmpID"
            _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH(NOLOCK) ON M.FNHSysEmpTypeId=ET.FNHSysEmpTypeId "
            _Qry &= vbCrLf & "  WHERE (T.FNHSysEmpID =" & Val(_EmpCode) & " )"
            _Qry &= vbCrLf & "   AND (T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "')"
            _Qry &= vbCrLf & "   AND (T.FTDateTrans <='" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "')"

            _Qry &= vbCrLf & " ORDER BY T.FTDateTrans"

            _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
            'LoadOTPayOver
            For Each R As DataRow In _dttran.Rows
                _StateWorkOffSite = 0
                _StatePayOTOverRequest = False
                _WeekDayBefore = LoadWeekday(HI.UL.ULDate.AddDay(R!FTDateTrans.ToString, -1))
                _WeekCallDay = LoadWeekday(R!FTDateTrans.ToString)
                _CalDate = R!FTDateTrans.ToString : _Shift = R!FTShift.ToString
                _FTStateAcceptTimeAuto = R!FTStateAcceptTimeAuto.ToString

                _FNSpecialTimeMin = 0
                _ActualScanMIn = R!FTIn1.ToString : _ActualScanMOut = R!FTOut1.ToString
                _ActualScanAIn = R!FTIn2.ToString : _ActualScanAOut = R!FTOut2.ToString

                _ActualScanOTIn1 = R!FTIn3.ToString
                _ActualScanOTOut1 = R!FTOut3.ToString

                _ActualScanOTIn12 = R!FTIn4.ToString
                _ActualScanOTOut12 = R!FTOut4.ToString

                _FTOtMIn = R!FTOtMIn.ToString
                _FTOtMOut = R!FTOtMOut.ToString

                _UseBarcode = R!FTUseBarcode.ToString : _LateCut = R!FTLateCutCond.ToString
                _FTWeekDay = R!FTWeekDay.ToString
                _FTTypeEmp = R!FTTypeEmp.ToString

                _ChkCalNextDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_CalDate, 1))
                _SPDateType = 0

                '------------------ GetConfig Late ----------------------------------
                _DTLateCfg = LoadConfigLateTimeDeduct(_FTTypeEmp)
                '------------ตรวจสอบไป ปฏิบัติงานนอกสถานที่------------------------
                _Qry = "SELECT SUM(FNTotalMin) As FNTotalMin FROM  THRTTransWorkOffsite  With(Nolock)  "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID =" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "'  "
                _StateWorkOffSite = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                '------------ตรวจสอบไป ปฏิบัติงานนอกสถานที่------------------------

                '---- กรณีไม่มีการกำหนดวันหยุดประจำสัปดาห์ของพนักงาน ให้ มองที่ กะ
                If _GetWeekend.Rows.Count <= 0 Then
                    '_Qry = "   SELECT    FTSunday, FTMonday, FTTuesday, FTWednesday, FTThursday, FTFriday,"
                    '_Qry &= vbCrLf & "    FTSaturday "
                    '_Qry &= vbCrLf & "  FROM            THRMTimeShift  As W WITH(NOLOCK)  "
                    '_Qry &= vbCrLf & " WHERE FNHSysShiftID =" & Val(_Shift) & " "
                    '_GetWeekend = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                End If
                '---- กรณีไม่มีการกำหนดวันหยุดประจำสัปดาห์ของพนักงาน ให้ มองที่ กะ

                '------------- ตรวจสอบเวลาลางาน----------------------------------------------------
                _R = _DTEmpLeave.Select(" FTDateTrans = '" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "' ")

                If _R.Length > 0 Then
                    For Each IR As DataRow In _R

                        Select Case IR!FTStaLeaveDay.ToString
                            Case "0"

                                _ActualScanMIn = ""
                                _ActualScanMOut = ""
                                _ActualScanAIn = ""
                                _ActualScanAOut = ""
                            Case "1"
                                _ActualScanMIn = ""
                                _ActualScanMOut = ""
                            Case "2"
                                _ActualScanAIn = ""
                                _ActualScanAOut = ""
                            Case Else
                                Dim _StratTimeLeave As String = IR!FTLeaveStartTime.ToString
                                Dim _EndTimeLeave As String = IR!FTLeaveEndTime.ToString

                                If _StratTimeLeave <= _ActualScanMIn Then

                                    If _ActualScanMIn <= _EndTimeLeave And _ActualScanMOut > _EndTimeLeave Then
                                        _ActualScanMIn = _EndTimeLeave
                                    Else
                                        ' _ActualScanMIn = ""
                                    End If

                                End If

                                If _StratTimeLeave <= _ActualScanAIn And _EndTimeLeave > _ActualScanAIn Then
                                    If _ActualScanAIn < _EndTimeLeave And _ActualScanAOut > _EndTimeLeave Then
                                        _ActualScanAIn = _EndTimeLeave
                                    Else
                                        _ActualScanAIn = ""
                                    End If
                                End If

                        End Select

                    Next
                End If

                If (_ActualScanMOut = "" Or _ActualScanMIn = "") And (_ActualDate <> _CalDate) Then
                    _ActualScanMOut = ""
                    _ActualScanMIn = ""
                End If

                If _ActualScanAOut = "" Or _ActualScanAIn = "" Then
                    _ActualScanAOut = ""
                    _ActualScanAIn = ""
                End If

                _R = _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "'  ")
                If _R.Length > 0 Then
                    _SPDateType = 2
                Else

                    '-------------------ตรวจสอบ วันหยุด เพิ่มเติม จากกะ กรณีไม่มีการกำหนด วันหยุด ประจำสัปดาห์ของบุคคล------------------------------------

                    If _GetWeekend.Rows.Count > 0 Then
                        If _GetWeekend.Rows(0).Item(_WeekCallDay - 1).ToString = "1" Then
                            _SPDateType = 1
                        End If
                    End If

                    '-------------------ตรวจสอบ วันหยุด เพิ่มเติม จากกะ กรณีไม่มีการกำหนด วันหยุด ประจำสัปดาห์ของบุคคล------------------------------------

                End If

                If _SPDateType = 0 Then
                    If _GetEmpTypeWeekly.Select("FNHSysEmpTypeId=" & Integer.Parse(Val(_FTTypeEmp)) & " AND FDHolidayDate='" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "' ").Length > 0 Then
                        _SPDateType = 1
                    End If
                End If

                _OTRequest = 0 : _SOTRequest = "" : _EOTRequest = "" : _FTAppOT = "" : _CheckTimeOTIn1 = "" : _CheckTimeOTOut1 = "" : _CheckTimeOTIn12 = "" : _CheckTimeOTOut12 = "" : _SOTRequest2 = "" : _EOTRequest2 = ""

                _nTimeCtrl = 0
                _LateCompro = 0
                _AbsentSP = 0 : _LateNormalNotCut = 0

                _nTime = 0 : _nMTime = 0 : _nAfTime = 0 : _LateNormal = 0 : _LateOT = 0
                _RetryNormal = 0 : _RetryOT = 0 : _FNLateMMin = 0
                _FNLateAfMin = 0 : _FNRetireMMin = 0 : _FNRetireAfMin = 0
                _nOTTime = 0 : _Absent = 0 : _nOt = 0 : _nOt1 = 0 : _nOt15 = 0 : _nOtH = 0 : _nOtHSP2 = 0 : _nOtHSP4 = 0 : _nOt2 = 0 : _nOt3 = 0 : _nOt4 = 0
                _LateCutN = 0 : _LateCutOT = 0 : _nOt = 0 : _nOt1 = 0 : _nOt15 = 0 : _nOt2 = 0 : _nOt3 = 0
                _nTimeCtrl = 0 : _CheckTimeMIn = "" : _CheckTimeMOut = "" : _CheckTimeAIn = "" : _CheckTimeAOut = "" : _FNAbsentCut = 0

                _ScanCardOverClock = ""
                _R = _DTTHRMTimeScanCard.Select(" FNHSysShiftID = " & Val(_Shift) & " ")

                If _R.Length > 0 Then
                    For Each IR As DataRow In _R
                        _nTimeCtrl = Val(IR!WorkTimePerDay.ToString)
                        _ScanCardOverClock = IR!FTOverClock.ToString
                        _CheckTimeMIn = IR!ChkIn1.ToString
                        _CheckTimeMOut = IR!ChkOut1.ToString
                        _CheckTimeAIn = IR!ChkIn2.ToString
                        _CheckTimeAOut = IR!ChkOut2.ToString
                        _WorkTimePerDay = Val(IR!WorkTimePerDay.ToString)
                        Exit For
                    Next
                End If

                _ChkInOTA1 = ""
                _ChkOutOTA1 = ""
                _ChkInOTM1 = ""
                _ChkOutOTM1 = ""
                _SOTRequestM = ""
                _EOTRequestM = ""

                _ScanTimeOverClock = Right(_ScanCardOverClock, 5)

                _R = _DTOTRequest.Select(" FTDateRequest = '" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "'")
                If _R.Length > 0 Then
                    For Each IR As DataRow In _R
                        _OTRequest = Val(IR!OTRequest.ToString)

                        _SOTRequest = IR!SOTRequest.ToString
                        _EOTRequest = IR!EOTRequest.ToString

                        _SOTRequest = IIf(_SOTRequest <> "", IIf(_SOTRequest >= "00:00" And _SOTRequest <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _SOTRequest, "")
                        _EOTRequest = IIf(_EOTRequest <> "", IIf(_EOTRequest >= "00:00" And _EOTRequest <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _EOTRequest, "")

                        _SOTRequest2 = IR!SOTRequest2.ToString
                        _EOTRequest2 = IR!EOTRequest2.ToString

                        _SOTRequest2 = IIf(_SOTRequest2 <> "", IIf(_SOTRequest2 >= "00:00" And _SOTRequest2 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _SOTRequest2, "")
                        _EOTRequest2 = IIf(_EOTRequest2 <> "", IIf(_EOTRequest2 >= "00:00" And _EOTRequest2 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _EOTRequest2, "")

                        _SOTRequestM = IR!FTOtMIn.ToString
                        _EOTRequestM = IR!FTOtMOut.ToString


                        _SOTRequestM = IIf(_SOTRequestM <> "", IIf(_SOTRequestM >= "00:00" And _SOTRequestM <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _SOTRequestM, "")
                        _EOTRequestM = IIf(_EOTRequestM <> "", IIf(_EOTRequestM >= "00:00" And _EOTRequestM <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _EOTRequestM, "")


                        If _CheckTimeMIn <= _SOTRequest2 Then
                            _SOTRequest2 = ""
                            _EOTRequest2 = ""
                        End If

                        If _SOTRequest < _CheckTimeAOut Then
                            _SOTRequest = ""
                            _EOTRequest = ""
                        End If

                        If _SOTRequestM > _CheckTimeMIn Then

                            _SOTRequestM = ""
                            _EOTRequestM = ""

                        ElseIf _SOTRequestM < _CheckTimeMIn And _EOTRequestM > _CheckTimeMIn Then

                            _EOTRequestM = _CheckTimeMIn

                        End If

                        _FTAppOT = IR!FTAppOT.ToString
                        _CheckTimeOTIn1 = IR!ChkIn3.ToString
                        _CheckTimeOTOut1 = IR!ChkOut3.ToString

                        _CheckTimeOTIn1 = IIf(_CheckTimeOTIn1 <> "", IIf(_CheckTimeOTIn1 >= "00:00" And _CheckTimeOTIn1 <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTIn1, "")
                        _CheckTimeOTOut1 = IIf(_CheckTimeOTOut1 <> "", IIf(_CheckTimeOTOut1 >= "00:00" And _CheckTimeOTOut1 <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTOut1, "")

                        _CheckTimeOTIn12 = IR!ChkIn32.ToString
                        _CheckTimeOTOut12 = IR!ChkOut32.ToString

                        _CheckTimeOTIn12 = IIf(_CheckTimeOTIn12 <> "", IIf(_CheckTimeOTIn12 >= "00:00" And _CheckTimeOTIn12 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _CheckTimeOTIn12, "")
                        _CheckTimeOTOut12 = IIf(_CheckTimeOTOut12 <> "", IIf(_CheckTimeOTOut12 >= "00:00" And _CheckTimeOTOut1 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _CheckTimeOTOut12, "")

                        _SOTRequestM1 = IR!SOTRequest1.ToString
                        _EOTRequestM1 = IR!EOTRequest1.ToString
                        _SOTRequestM1 = IIf(_SOTRequestM1 <> "", IIf(_SOTRequestM1 >= "00:00" And _SOTRequestM1 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _SOTRequestM1, "")
                        _EOTRequestM1 = IIf(_EOTRequestM1 <> "", IIf(_EOTRequestM1 >= "00:00" And _EOTRequestM1 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _EOTRequestM1, "")

                        _ChkInOTM1 = IR!ChkIn1.ToString
                        _ChkOutOTM1 = IR!ChkOut1.ToString
                        _ChkInOTM1 = IIf(_ChkInOTM1 <> "", IIf(_ChkInOTM1 >= "00:00" And _ChkInOTM1 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _ChkInOTM1, "")
                        _ChkOutOTM1 = IIf(_ChkOutOTM1 <> "", IIf(_ChkOutOTM1 >= "00:00" And _ChkOutOTM1 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _ChkOutOTM1, "")

                        _SOTRequestA1 = IR!SOTRequest3.ToString
                        _EOTRequestA1 = IR!EOTRequest3.ToString
                        _SOTRequestA1 = IIf(_SOTRequestA1 <> "", IIf(_SOTRequestA1 >= "00:00" And _SOTRequestA1 <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _SOTRequestA1, "")
                        _EOTRequestA1 = IIf(_EOTRequestA1 <> "", IIf(_EOTRequestA1 >= "00:00" And _EOTRequestA1 <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _EOTRequestA1, "")

                        _ChkInOTA1 = IR!ChkIn33.ToString
                        _ChkOutOTA1 = IR!ChkOut33.ToString

                        _ChkInOTA1 = IIf(_ChkInOTA1 <> "", IIf(_ChkInOTA1 >= "00:00" And _ChkInOTA1 <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ChkInOTA1, "")
                        _ChkOutOTA1 = IIf(_ChkOutOTA1 <> "", IIf(_ChkOutOTA1 >= "00:00" And _ChkOutOTA1 <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ChkOutOTA1, "")

                        Exit For
                    Next
                End If

                If _ActualScanOTIn12 <> "" And _ActualScanOTOut12 = "" Then

                    _ActualScanOTIn12 = IIf(_ActualScanOTIn12 <> "", IIf(_ActualScanOTIn12 >= "00:00" And _ActualScanOTIn12 <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanOTIn12, "")

                    If _ActualScanOTIn12 > _ChkInOTA1 Then
                        _ActualScanOTOut12 = Right(_ActualScanOTIn12, 5)
                        _ActualScanOTIn12 = Right(_ChkInOTA1, 5)
                    End If

                End If

                If _ActualScanOTOut12 = "" Then

                    If _ActualScanOTOut1 <> "" Then
                        For Each Rx4 As DataRow In _LoadOTPayOver.Select("FNHSysEmpTypeId=" & Val(_FTTypeEmp) & " AND FTStatePayOTOverRequest='1' ")
                            Try
                                If DateDiff(DateInterval.Minute, CDate(_EOTRequest), CDate(Microsoft.VisualBasic.Left(_EOTRequest, Len(_EOTRequest) - 5) & R!FTScanAOTOut.ToString)) >= Val(Rx4!FNTimeSacanMin) Then
                                    _ActualScanOTOut1 = R!FTScanAOTOut.ToString
                                    _StatePayOTOverRequest = True
                                End If
                            Catch ex As Exception
                            End Try
                        Next
                    End If

                Else

                    If _EOTRequest2 <> "" Then

                        For Each Rx4 As DataRow In _LoadOTPayOver.Select("FNHSysEmpTypeId=" & Val(_FTTypeEmp) & " AND FTStatePayOTOverRequest='1' ")

                            Try
                                If DateDiff(DateInterval.Minute, CDate(_EOTRequest2), CDate(Microsoft.VisualBasic.Left(_EOTRequest2, Len(_EOTRequest2) - 5) & _ActualScanOTOut12)) >= Val(Rx4!FNTimeSacanMin) Then
                                    _ActualScanOTOut12 = R!FTScanAOTOut2.ToString
                                    _StatePayOTOverRequest = True
                                End If
                            Catch ex As Exception
                            End Try

                        Next

                    End If

                End If

                '---------ตรวจสอบ
                _ActualScanMIn = IIf(_ActualScanMIn <> "", IIf(_ActualScanMIn >= "00:00" And _ActualScanMIn < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanMIn, "")
                _ActualScanMOut = IIf(_ActualScanMOut <> "", IIf(_ActualScanMOut >= "00:00" And _ActualScanMOut < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanMOut, "")
                _ActualScanAIn = IIf(_ActualScanAIn <> "", IIf(_ActualScanAIn >= "00:00" And _ActualScanAIn < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanAIn, "")
                _ActualScanAOut = IIf(_ActualScanAOut <> "", IIf(_ActualScanAOut >= "00:00" And _ActualScanAOut < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanAOut, "")
                _ActualScanOTIn1 = IIf(_ActualScanOTIn1 <> "", IIf(_ActualScanOTIn1 >= "00:00" And _ActualScanOTIn1 < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanOTIn1, "")
                _ActualScanOTOut1 = IIf(_ActualScanOTOut1 <> "", IIf(_ActualScanOTOut1 >= "00:00" And _ActualScanOTOut1 < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanOTOut1, "")
                _ActualScanOTIn12 = IIf(_ActualScanOTIn12 <> "", IIf(_ActualScanOTIn12 >= "00:00" And _ActualScanOTIn12 < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanOTIn12, "")
                _ActualScanOTOut12 = IIf(_ActualScanOTOut12 <> "", IIf(_ActualScanOTOut12 >= "00:00" And _ActualScanOTOut12 < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanOTOut12, "")

                _FTOtMIn = IIf(_FTOtMIn <> "", IIf(_FTOtMIn >= "00:00" And _FTOtMIn < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _FTOtMIn, "")
                _FTOtMOut = IIf(_FTOtMOut <> "", IIf(_FTOtMOut >= "00:00" And _FTOtMOut < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _FTOtMOut, "")

                ''-------- รวจสอบวันเลิกงานพิเศษ--------
                'For Each Rxd As DataRow In _GetDateSpecial.Select("FTDate='" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "'")
                '    If Rxd!FTStateStop.ToString = "1" Then
                '        '_ActualScanMIn = _CheckTimeMIn
                '        '_ActualScanMOut = _CheckTimeMOut
                '        '_ActualScanAIn = _CheckTimeAIn
                '        '_ActualScanAOut = _CheckTimeAOut
                '        _FNSpecialTimeMin = _nTimeCtrl
                '    Else
                '        Dim TimeOutSP As String = IIf(Rxd!FTTimeOut.ToString <> "", IIf(Rxd!FTTimeOut.ToString >= "00:00" And Rxd!FTTimeOut.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & Rxd!FTTimeOut.ToString, "")
                '        Select Case True
                '            Case (TimeOutSP >= _CheckTimeMIn) And (TimeOutSP <= _CheckTimeMOut)

                '                If _ActualScanMOut >= TimeOutSP Or _ActualScanAIn >= TimeOutSP Or _ActualScanAOut >= TimeOutSP Then
                '                    '_ActualScanMOut = _CheckTimeMOut
                '                    '_ActualScanAIn = _CheckTimeAIn
                '                    '_ActualScanAOut = _CheckTimeAOut
                '                    _FNSpecialTimeMin = _nTimeCtrl -()
                '                End If
                '            Case (TimeOutSP >= _CheckTimeAIn) And (TimeOutSP <= _CheckTimeAOut)
                '                If _ActualScanAIn >= TimeOutSP Or _ActualScanAOut >= TimeOutSP Then
                '                    _ActualScanAIn = _CheckTimeAIn
                '                    _ActualScanAOut = _CheckTimeAOut
                '                End If
                '        End Select
                '    End If
                'Next

                ''-------- รวจสอบวันเลิกงานพิเศษ--------
                _LeaveSick = 0 : _LeaveBusiness = 0 : _LeaveVacation = 0 : _LeaveOrdain = 0 : _LeaveMarry = 0 : _LeaveOther = 0
                _StartLeaveTime = ""
                _EndLeaveTime = ""
                _R = _DTEmpLeave.Select(" FTDateTrans = '" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "' ")

                If _R.Length > 0 Then

                    For Each IR As DataRow In _R
                        _LeaveSick = _LeaveSick + Val(IR!Total.ToString)
                    Next

                End If

                _nTimeCtrl = ((((_nTimeCtrl * 100) - (_nTimeCtrl * 100) Mod 100) / 100) * 60) + (_nTimeCtrl * 100) Mod 100
                _LeaveBusiness = ((((_LeaveBusiness * 100) - (_LeaveBusiness * 100) Mod 100) / 100) * 60) + (_LeaveBusiness * 100) Mod 100
                _LeaveVacation = ((((_LeaveVacation * 100) - (_LeaveVacation * 100) Mod 100) / 100) * 60) + (_LeaveVacation * 100) Mod 100
                _LeaveOrdain = ((((_LeaveOrdain * 100) - (_LeaveOrdain * 100) Mod 100) / 100) * 60) + (_LeaveOrdain * 100) Mod 100
                _LeaveMarry = ((((_LeaveMarry * 100) - (_LeaveMarry * 100) Mod 100) / 100) * 60) + (_LeaveMarry * 100) Mod 100
                _LeaveOther = ((((_LeaveOther * 100) - (_LeaveOther * 100) Mod 100) / 100) * 60) + (_LeaveOther * 100) Mod 100
                _LeavePregnant = _LeavePregnant * _nTimeCtrl

                _TimeNormalDiffEdit = 0
                If _UseBarcode = "1" Or _UseBarcode = "0" Then

                    '------------------ คำนวณเข้างานสาย -------------------------------
                    If _ActualScanMIn <> "" And _CheckTimeMIn <> "" And _ActualScanMIn > _CheckTimeMIn Then

                        _StartLeaveTime = ""
                        _EndLeaveTime = ""
                        _LeaveSick = 0

                        For Each IR As DataRow In _R
                            _LeaveSick = Val(IR!Total.ToString)
                            _StartLeaveTime = IIf(IR!FTLeaveStartTime.ToString <> "", IIf(IR!FTLeaveStartTime.ToString >= "00:00" And IR!FTLeaveStartTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveStartTime.ToString, "")
                            _EndLeaveTime = IIf(IR!FTLeaveEndTime.ToString <> "", IIf(IR!FTLeaveEndTime.ToString >= "00:00" And IR!FTLeaveEndTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveEndTime.ToString, "")

                            If _StartLeaveTime <= _CheckTimeMOut Then
                                Exit For
                            Else
                                _StartLeaveTime = ""
                                _EndLeaveTime = ""
                            End If

                        Next

                        _FNLateMMin = DateDiff(DateInterval.Minute, CDate(_CheckTimeMIn), CDate(_ActualScanMIn))

                        If _StartLeaveTime <> "" Then
                            If _StartLeaveTime < _ActualScanMIn And _EndLeaveTime <= _ActualScanMIn Then
                                _FNLateMMin = _FNLateMMin - _LeaveSick
                            End If
                        End If

                    ElseIf _ActualScanAIn <> "" And _ActualScanMIn = "" Then

                        _StartLeaveTime = ""
                        _EndLeaveTime = ""
                        _LeaveSick = 0
                        For Each IR As DataRow In _R
                            _LeaveSick = Val(IR!Total.ToString)
                            _StartLeaveTime = IIf(IR!FTLeaveStartTime.ToString <> "", IIf(IR!FTLeaveStartTime.ToString >= "00:00" And IR!FTLeaveStartTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveStartTime.ToString, "")
                            _EndLeaveTime = IIf(IR!FTLeaveEndTime.ToString <> "", IIf(IR!FTLeaveEndTime.ToString >= "00:00" And IR!FTLeaveEndTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveEndTime.ToString, "")

                            If _StartLeaveTime <= _CheckTimeAOut And _EndLeaveTime >= _CheckTimeMOut Then
                                Exit For
                            Else
                                _StartLeaveTime = ""
                                _EndLeaveTime = ""
                            End If

                        Next

                        If _StartLeaveTime <> "" Then
                            If (_StartLeaveTime <= _CheckTimeAIn) And _EndLeaveTime >= _CheckTimeMOut Then
                                _FNLateMMin = 0
                            Else
                                _FNLateMMin = DateDiff(DateInterval.Minute, CDate(_EndLeaveTime), CDate(_CheckTimeMOut))
                            End If
                        Else
                            _FNLateMMin = DateDiff(DateInterval.Minute, CDate(_CheckTimeMIn), CDate(_CheckTimeMOut))
                        End If

                        If _LeaveSick > _FNLateMMin Then
                            _FNLateMMin = 0
                        End If

                    End If

                    If _ActualScanAIn <> "" And _CheckTimeAIn <> "" And _ActualScanAIn > _CheckTimeAIn Then

                        _StartLeaveTime = ""
                        _EndLeaveTime = ""
                        _LeaveSick = 0

                        For Each IR As DataRow In _R
                            _LeaveSick = Val(IR!Total.ToString)
                            _StartLeaveTime = IIf(IR!FTLeaveStartTime.ToString <> "", IIf(IR!FTLeaveStartTime.ToString >= "00:00" And IR!FTLeaveStartTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveStartTime.ToString, "")
                            _EndLeaveTime = IIf(IR!FTLeaveEndTime.ToString <> "", IIf(IR!FTLeaveEndTime.ToString >= "00:00" And IR!FTLeaveEndTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveEndTime.ToString, "")

                            If _StartLeaveTime <= _CheckTimeAOut And _EndLeaveTime > _CheckTimeAIn Then
                                Exit For
                            Else
                                _StartLeaveTime = ""
                                _EndLeaveTime = ""
                            End If

                        Next

                        If _StartLeaveTime <> "" Then
                            If (_StartLeaveTime <= _CheckTimeAIn And _EndLeaveTime >= _ActualScanAIn) Then

                            Else
                                If (_StartLeaveTime <= _CheckTimeAIn) And _EndLeaveTime < _ActualScanAIn And _EndLeaveTime > _CheckTimeAIn Then
                                    _FNLateAfMin = DateDiff(DateInterval.Minute, CDate(_EndLeaveTime), CDate(_ActualScanAIn))
                                Else
                                    _FNLateAfMin = DateDiff(DateInterval.Minute, CDate(_CheckTimeAIn), CDate(_ActualScanAIn))
                                End If
                            End If
                        Else
                            _FNLateAfMin = DateDiff(DateInterval.Minute, CDate(_CheckTimeAIn), CDate(_ActualScanAIn))
                        End If

                    End If

                    _LateNormal = _FNLateMMin + _FNLateAfMin

                    '------------------ คำนวณเข้างานสาย -------------------------------

                    _LateOT = 0
                    '------------------ คำนวณเข้างาน OT สาย -------------------------------
                    If _FTOtMIn <> "" AndAlso _SOTRequestM <> "" AndAlso _FTOtMIn > _SOTRequestM Then
                        _LateOT = DateDiff(DateInterval.Minute, CDate(_SOTRequestM), CDate(_FTOtMIn))
                    End If

                    '------------------ คำนวณเข้างาน OT สาย   '-------------------------------
                    '------------------ คำนวณเข้างาน OT สาย -------------------------------
                    If _ActualScanOTIn1 <> "" And _CheckTimeOTIn1 <> "" And _ActualScanOTIn1 > _CheckTimeOTIn1 Then
                        _LateOT = _LateOT + DateDiff(DateInterval.Minute, CDate(_CheckTimeOTIn1), CDate(_ActualScanOTIn1))
                    End If

                    '------------------ คำนวณเข้างาน OT สาย   '-------------------------------

                    '------------------ คำนวณ ออกก่อนเวลา -------------------------------
                    If _ActualScanMOut <> "" And _CheckTimeMOut <> "" And _ActualScanMOut < _CheckTimeMOut Then
                        _FNRetireMMin = DateDiff(DateInterval.Minute, CDate(_ActualScanMOut), CDate(_CheckTimeMOut))
                    End If

                    If _ActualScanAOut <> "" And _CheckTimeAOut <> "" And _ActualScanAOut < _CheckTimeAOut Then

                        _StartLeaveTime = ""
                        _EndLeaveTime = ""
                        _LeaveSick = 0

                        For Each IR As DataRow In _R

                            _LeaveSick = Val(IR!Total.ToString)
                            _StartLeaveTime = IIf(IR!FTLeaveStartTime.ToString <> "", IIf(IR!FTLeaveStartTime.ToString >= "00:00" And IR!FTLeaveStartTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveStartTime.ToString, "")
                            _EndLeaveTime = IIf(IR!FTLeaveEndTime.ToString <> "", IIf(IR!FTLeaveEndTime.ToString >= "00:00" And IR!FTLeaveEndTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveEndTime.ToString, "")

                            If _StartLeaveTime <= _CheckTimeAOut And _EndLeaveTime > _CheckTimeAIn Then
                                Exit For
                            Else
                                _StartLeaveTime = ""
                                _EndLeaveTime = ""
                            End If

                        Next

                        If _StartLeaveTime <> "" Then
                            If (_StartLeaveTime <= _CheckTimeAIn And _EndLeaveTime >= _CheckTimeAOut) Then

                            Else

                                If (_StartLeaveTime <= _CheckTimeAOut) And _EndLeaveTime <= _CheckTimeAOut And _EndLeaveTime > _CheckTimeAIn Then
                                    _FNRetireAfMin = DateDiff(DateInterval.Minute, CDate(_EndLeaveTime), CDate(_CheckTimeAOut))
                                Else
                                    _FNRetireAfMin = DateDiff(DateInterval.Minute, CDate(_ActualScanAOut), CDate(_CheckTimeAOut))
                                End If

                            End If

                        Else
                            _FNRetireAfMin = DateDiff(DateInterval.Minute, CDate(_ActualScanAOut), CDate(_CheckTimeAOut))
                        End If

                    End If

                    _RetryNormal = _FNRetireMMin + _FNRetireAfMin
                    '------------------ คำนวณ ออกก่อนเวลา -------------------------------
                    _RetryOT = 0

                    '------------------ คำนวณออก OT ก่อนเวลา -------------------------------
                    If _FTOtMOut <> "" And _EOTRequestM <> "" And _FTOtMOut < _EOTRequestM Then
                        _RetryOT = _RetryOT + DateDiff(DateInterval.Minute, CDate(_FTOtMOut), CDate(_EOTRequestM))
                    End If

                    '------------------ คำนวณออก OT ก่อนเวลา -------------------------------
                    If _ActualScanOTOut1 <> "" And _CheckTimeOTOut1 <> "" And _ActualScanOTOut1 < _CheckTimeOTOut1 Then
                        _RetryOT = _RetryOT + DateDiff(DateInterval.Minute, CDate(_ActualScanOTOut1), CDate(_CheckTimeOTOut1))
                    End If
                    '------------------ คำนวณออก OT ก่อนเวลา   '-------------------------------

                    If _ActualScanMIn <> "" And _ActualScanMOut <> "" And IsDate(_ActualScanMIn) And IsDate(_ActualScanMOut) And _ActualScanMIn < _ActualScanMOut Then
                        _nMTime = DateDiff(DateInterval.Minute, CDate(IIf(_CheckTimeMIn > _ActualScanMIn, _CheckTimeMIn, _ActualScanMIn)), CDate(IIf(_CheckTimeMOut > _ActualScanMOut, _ActualScanMOut, _CheckTimeMOut)))
                    End If

                    If _ActualScanAIn <> "" And _ActualScanAOut <> "" And IsDate(_ActualScanAIn) And IsDate(_ActualScanAOut) And _ActualScanAIn < _ActualScanAOut Then
                        _nAfTime = DateDiff(DateInterval.Minute, CDate(IIf(_CheckTimeAIn > _ActualScanAIn, _CheckTimeAIn, _ActualScanAIn)), CDate(IIf(_CheckTimeAOut > _ActualScanAOut, _ActualScanAOut, _CheckTimeAOut)))
                    End If

                    '-------- รวจสอบวันเลิกงานพิเศษ--------
                    _FNSpecialTimeMin = 0
                    For Each Rxd As DataRow In _GetDateSpecial.Select("FTDate='" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "'")

                        If Rxd!FTStateStop.ToString = "1" Then

                            _FNSpecialTimeMin = _nTimeCtrl

                        Else
                            Dim TimeOutSP As String = IIf(Rxd!FTTimeOut.ToString <> "", IIf(Rxd!FTTimeOut.ToString >= "00:00" And Rxd!FTTimeOut.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & Rxd!FTTimeOut.ToString, "")
                            Dim TimeOutSPM As String = IIf(Rxd!FTTimeMOut.ToString <> "", IIf(Rxd!FTTimeMOut.ToString >= "00:00" And Rxd!FTTimeMOut.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & Rxd!FTTimeMOut.ToString, "")

                            Dim _SpecialM As Integer = 0
                            Dim _SpecialA As Integer = 0

                            If TimeOutSPM = "" Then
                                Select Case True

                                    Case (TimeOutSP >= _CheckTimeMIn) And (TimeOutSP <= _CheckTimeMOut)
                                        If _ActualScanMOut >= TimeOutSP Or _ActualScanAIn >= TimeOutSP Or _ActualScanAOut >= TimeOutSP Then
                                            _FNSpecialTimeMin = _nTimeCtrl - (_nMTime + _FNLateMMin)

                                        Else
                                            If HI.ST.SysInfo.RetryWorkTimeDeductSPTime Then
                                                If _ActualScanMOut < TimeOutSP Then
                                                    _FNSpecialTimeMin = DateDiff(DateInterval.Minute, Convert.ToDateTime(TimeOutSP), Convert.ToDateTime(_CheckTimeMOut))

                                                    _FNSpecialTimeMin = _FNSpecialTimeMin + DateDiff(DateInterval.Minute, Convert.ToDateTime(_CheckTimeAIn), Convert.ToDateTime(_CheckTimeAOut))

                                                End If

                                            End If

                                        End If
                                    Case (TimeOutSP >= _CheckTimeAIn) And (TimeOutSP <= _CheckTimeAOut)

                                        If _ActualScanAIn >= TimeOutSP Or _ActualScanAOut >= TimeOutSP Then
                                            _FNSpecialTimeMin = _nTimeCtrl - (_nMTime + _nAfTime + _LateNormal + _LeaveSick)
                                        Else
                                            If HI.ST.SysInfo.RetryWorkTimeDeductSPTime Then
                                                If _ActualScanAIn < TimeOutSP Then
                                                    _FNSpecialTimeMin = DateDiff(DateInterval.Minute, Convert.ToDateTime(TimeOutSP), Convert.ToDateTime(_CheckTimeAOut))

                                                End If
                                            End If
                                        End If

                                End Select
                            Else

                                Dim WorkTimeMorning As Integer = DateDiff(DateInterval.Minute, Convert.ToDateTime(_CheckTimeMIn), Convert.ToDateTime(_CheckTimeMOut))
                                Dim WorkTimeAfterNoon As Integer = DateDiff(DateInterval.Minute, Convert.ToDateTime(_CheckTimeAIn), Convert.ToDateTime(_CheckTimeAOut))

                                _SpecialM = 0
                                _SpecialA = 0
                                _FNSpecialTimeMin = 0

                                If TimeOutSPM <> "" Then

                                    If _ActualScanMOut <> "" And _ActualScanMIn <> "" Then
                                        ' _SpecialM = DateDiff(DateInterval.Minute, Convert.ToDateTime(TimeOutSPM), Convert.ToDateTime(_CheckTimeMOut))

                                        If _ActualScanMOut >= TimeOutSPM Then
                                            _SpecialM = DateDiff(DateInterval.Minute, Convert.ToDateTime(_ActualScanMOut), Convert.ToDateTime(_CheckTimeMOut))
                                        ElseIf _ActualScanMOut < TimeOutSPM Then
                                            '_SpecialM = DateDiff(DateInterval.Minute, Convert.ToDateTime(_ActualScanMOut), Convert.ToDateTime(TimeOutSPM))
                                            _SpecialM = DateDiff(DateInterval.Minute, Convert.ToDateTime(TimeOutSPM), Convert.ToDateTime(_CheckTimeMOut))
                                        End If

                                        _FNRetireMMin = _FNRetireMMin - _SpecialM
                                        If _FNRetireMMin <= 0 Then
                                            _FNRetireMMin = 0
                                        End If
                                    End If

                                End If

                                If TimeOutSP <> "" Then
                                    If _ActualScanAOut <> "" And _ActualScanAIn <> "" Then
                                        ' _SpecialA = DateDiff(DateInterval.Minute, Convert.ToDateTime(TimeOutSP), Convert.ToDateTime(_CheckTimeAOut))


                                        If _ActualScanAOut >= TimeOutSP Then
                                            _SpecialA = DateDiff(DateInterval.Minute, Convert.ToDateTime(_ActualScanAOut), Convert.ToDateTime(_CheckTimeAOut))
                                        ElseIf _ActualScanAOut < TimeOutSP Then
                                            '_SpecialA = DateDiff(DateInterval.Minute, Convert.ToDateTime(_ActualScanAOut), Convert.ToDateTime(TimeOutSP))
                                            _SpecialA = DateDiff(DateInterval.Minute, Convert.ToDateTime(TimeOutSP), Convert.ToDateTime(_CheckTimeAOut))
                                        End If

                                        _FNRetireAfMin = _FNRetireAfMin - _SpecialA
                                        If _FNRetireAfMin <= 0 Then
                                            _FNRetireAfMin = 0
                                        End If
                                    End If
                                End If

                                _FNSpecialTimeMin = _SpecialM + _SpecialA

                                If (_nMTime + _nAfTime + _LateNormal + _LeaveSick + _FNSpecialTimeMin) > _nTimeCtrl Then
                                    _FNSpecialTimeMin = _nTimeCtrl - (_nMTime + _nAfTime + _LateNormal + _LeaveSick + _FNSpecialTimeMin)
                                End If


                            End If

                            'Select Case True

                            '    Case (TimeOutSP >= _CheckTimeMIn) And (TimeOutSP <= _CheckTimeMOut)
                            '        If _ActualScanMOut >= TimeOutSP Or _ActualScanAIn >= TimeOutSP Or _ActualScanAOut >= TimeOutSP Then
                            '            _FNSpecialTimeMin = _nTimeCtrl - (_nMTime + _FNLateMMin)
                            '        End If
                            '    Case (TimeOutSP >= _CheckTimeAIn) And (TimeOutSP <= _CheckTimeAOut)
                            '        If _ActualScanAIn >= TimeOutSP Or _ActualScanAOut >= TimeOutSP Then
                            '            _FNSpecialTimeMin = _nTimeCtrl - (_nMTime + _nAfTime + _LateNormal + _LeaveSick)
                            '        End If
                            'End Select

                        End If
                    Next


                    '_RetryNormal = _FNRetireMMin + _FNRetireAfMin

                    If _FNSpecialTimeMin <= 0 Then
                        _FNSpecialTimeMin = 0
                    End If

                    '-------- รวจสอบวันเลิกงานพิเศษ--------
                    '-- --   ตรวจสอบการขอ OT Request หากไม่มีการขอ ไม่คำนวณ OT ให้
                    _nOtH = 0 : _nOtHSP2 = 0 : _nOtHSP4 = 0
                    _nOTTime = 0
                    If _FTAppOT = "Y" Then

                        If _FTOtMIn <> "" And _FTOtMOut <> "" And IsDate(_FTOtMIn) And IsDate(_FTOtMOut) And _FTOtMIn < _FTOtMOut And _EOTRequestM <> "" And _SOTRequestM <> "" Then

                            Dim _TmpIn3 As String = IIf(_SOTRequestM > _FTOtMIn, _SOTRequestM, _FTOtMIn)
                            Dim _TmpOut3 As String = IIf(_EOTRequestM > _FTOtMOut, _EOTRequestM, _FTOtMOut)


                            _nOTTime = _nOTTime + (DateDiff(DateInterval.Minute, CDate(_TmpIn3), CDate(_TmpOut3)))

                            If _nOTTime <= 0 Then _nOTTime = 0

                        End If


                        If _ActualScanOTIn1 <> "" And _ActualScanOTOut1 <> "" And IsDate(_ActualScanOTIn1) And IsDate(_ActualScanOTOut1) And _ActualScanOTIn1 < _ActualScanOTOut1 And _CheckTimeOTOut1 <> "" And _CheckTimeOTIn1 <> "" Then

                            Dim _TmpIn3 As String = IIf(_CheckTimeOTIn1 > _ActualScanOTIn1, _CheckTimeOTIn1, _ActualScanOTIn1)
                            Dim _TmpOut3 As String = IIf(_CheckTimeOTOut1 > _ActualScanOTOut1, _ActualScanOTOut1, _CheckTimeOTOut1)

                            If _ActualScanOTOut1 > _CheckTimeOTOut1 And _ActualScanOTIn12 = "" Then
                                For Each Rx4 As DataRow In _LoadOTPayOver.Select("FNHSysEmpTypeId=" & Val(_FTTypeEmp) & " AND FTStatePayOTOverRequest='1' ")
                                    _TmpOut3 = _ActualScanOTOut1
                                    Exit For
                                Next
                            End If

                            _nOTTime = _nOTTime + (DateDiff(DateInterval.Minute, CDate(_TmpIn3), CDate(_TmpOut3)))

                            If Left(_TmpIn3, 10) <> Left(_TmpOut3, 10) Then
                                _TmpIn3 = Left(_TmpOut3, 10) & "  " & "00:00"
                                _nOtH = DateDiff(DateInterval.Minute, CDate(_TmpIn3), CDate(_TmpOut3))

                                _R = _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_ChkCalNextDate) & "'")
                                If _R.Length > 0 Then
                                    _nOtHSP4 = _nOtH
                                Else

                                End If

                            End If

                            _nOTTime = (_nOTTime - (_nOtHSP4 + _nOtHSP2))

                            If _nOTTime <= 0 Then _nOTTime = 0

                        End If

                        If _ActualScanOTIn12 <> "" And _ActualScanOTOut12 <> "" And IsDate(_ActualScanOTIn12) And IsDate(_ActualScanOTOut12) And _ActualScanOTIn12 < _ActualScanOTOut12 And _ChkOutOTA1 <> "" And _ChkInOTA1 <> "" Then

                            Dim _TmpIn3 As String = IIf(_ChkInOTA1 > _ActualScanOTIn12, _ChkInOTA1, _ActualScanOTIn12)
                            Dim _TmpOut3 As String = IIf(_ChkOutOTA1 > _ActualScanOTOut12, _ActualScanOTOut12, _ChkOutOTA1)

                            If _ActualScanOTOut12 > _CheckTimeOTOut1 Then
                                For Each Rx4 As DataRow In _LoadOTPayOver.Select("FNHSysEmpTypeId=" & Val(_FTTypeEmp) & " AND FTStatePayOTOverRequest='1' ")
                                    _TmpOut3 = _ActualScanOTOut12
                                    Exit For
                                Next
                            End If

                            _nOTTime = _nOTTime + (DateDiff(DateInterval.Minute, CDate(_TmpIn3), CDate(_TmpOut3)))

                            If Left(_TmpIn3, 10) <> Left(_TmpOut3, 10) Then
                                _TmpIn3 = Left(_TmpOut3, 10) & "  " & "00:00"
                                _nOtH = DateDiff(DateInterval.Minute, CDate(_TmpIn3), CDate(_TmpOut3))

                                _R = _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_ChkCalNextDate) & "'")
                                If _R.Length > 0 Then
                                    _nOtHSP4 = _nOtH
                                Else

                                End If

                            End If

                            _nOTTime = (_nOTTime - (_nOtHSP4 + _nOtHSP2))
                            If _nOTTime <= 0 Then _nOTTime = 0

                        End If
                    End If

                    _TimeNormalDiffEdit = 0
                    _nTime = _nMTime + _nAfTime

                    '' OT เช้า มากกว่า 1 ชม. บวกเวลาเช้าอีก 30 นาที 20161201 
                    Try
                        If _SOTRequestM <> "" And _EOTRequestM <> "" And _EOTRequestM = _CheckTimeMIn Then
                            If DateDiff(DateInterval.Minute, DateTime.Parse(_SOTRequestM), DateTime.Parse(_EOTRequestM)) >= 120 Then
                                _nTime = (_nMTime + 30) + _nAfTime
                                _nTime = IIf(_nTime > _nTimeCtrl, _nTimeCtrl, _nTime)
                            End If
                        End If
                    Catch ex As Exception
                    End Try



                    If _EditWT <> -1 Then '----- มีการแก้ไข เลาทำงาน จากหน้า Time Attendance

                        If _EditWT < _nTime Then
                            _TimeNormalDiffEdit = _nTime - _EditWT
                        End If

                        _nTime = _EditWT
                    End If

                    _nOt15 = _nOTTime

                    _LeaveSick = 0
                    _R = _DTEmpLeave.Select(" FTDateTrans = '" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "' ")
                    If _R.Length > 0 Then

                        For Each IR As DataRow In _R
                            _LeaveSick = _LeaveSick + Val(IR!Total.ToString)
                        Next

                    End If

                    If _LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther >= _nTimeCtrl Then

                        _nTime = 0
                        _LateNormal = 0

                    Else

                        If (_LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther) > 0 Then
                            If _nTimeCtrl - (_LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther) < _nTime Then
                                _nTime = _nTimeCtrl - _LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther
                            End If
                        End If

                    End If

                    If _nTimeCtrl <= (_LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther) + _nTime Then
                        _LateNormal = 0
                    End If
                    _AbsentSP = 0

                    If _ActualDate = _CalDate And _LateNormal = 0 And _nTime = 0 And ((_LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther) <= 0) And (_ActualScanMIn <> "" And _ActualScanMOut = "" And _ActualScanAIn = "" And _ActualScanAOut = "" And _ActualScanOTIn1 = "" And _ActualScanOTOut1 = "" And _ActualScanOTIn12 = "" And _ActualScanOTOut12 = "") Then
                    Else
                        'If _nTime + _LateNormal + (_LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther) + _LateNormal < _nTimeCtrl Then
                        If _nTime + _FNSpecialTimeMin + _LateNormal + (_LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther) < _nTimeCtrl Then
                            _Absent = _nTimeCtrl - (_nTime + IIf(_nTime = 0, 0, _LateNormal) + (_LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther) + _FNSpecialTimeMin)

                            If _nTimeCtrl > _nTimeCtrl Then
                            End If

                            If _Absent > _nTimeCtrl Then _Absent = _nTimeCtrl

                        End If
                    End If

                    If _SPDateType <> 0 And _Absent >= 0 Then
                        _Absent = 0
                    End If

                    _StateLate = ""
                    _DetuctLateType = ""
                    _DetuctLateMin = 0

                    If _LateNormal > _nTimeCtrl Then
                        _LateNormal = _nTimeCtrl
                    End If

                    If _LateNormal > 0 Then

                        '_R = _DTLateCfg.Select(" FNRateBegin <= " & _FNLateMMin & " AND FNRateEnd >=" & _FNLateMMin & " AND FNHSysEmpTypeId =" & _FTTypeEmp)
                        _R = _DTLateCfg.Select(" FNRateBegin <= " & _FNLateMMin & " AND FNRateEnd >=" & _FNLateMMin & " ")
                        If _R.Length > 0 Then

                            For Each IR As DataRow In _R
                                _StateLate = IR!FTCfgLateCode.ToString
                                _DetuctLateType = IR!FTStaDeduct.ToString
                                _DetuctLateMin = Val(IR!FNRateDeduct.ToString)
                                Exit For
                            Next

                        End If

                    End If
                Else

                End If

                _LateNormalNotCut = 0

                Dim _SumEditTime As Integer = 0

                '------------------------------------------------ ตรวจสอบการ Adjust OT  ถ้ามีการ Adjust ยึดค่า Adjust ------------
                If (_EditOt1 <> -1) Then  '----- มีการแก้ไข OT จากหน้า Time Attendance
                    _SumEditTime = _SumEditTime + _EditOt1
                End If

                If (_EditOt2 <> -1) Then  '----- มีการแก้ไข OT จากหน้า Time Attendance
                    _SumEditTime = _SumEditTime + _EditOt2
                End If

                If (_EditOt4 <> -1) Then  '----- มีการแก้ไข OT จากหน้า Time Attendance
                    _SumEditTime = _SumEditTime + _EditOt4
                End If
                '------------------------------------------------ ตรวจสอบการ Adjust OT  ถ้ามีการ Adjust ยึดค่า Adjust ------------
                Select Case _SPDateType
                    Case 1, 2

                    Case 0
                        If _LateCut = "0" And _UseBarcode = "1" Then

                            'If _StateWorkOffSite > 0 Then 'ไปปฏิบัติงานนอกสถานที่
                            '    _nTime = _StateWorkOffSite

                            '    _LateCutN = 0
                            '    _FNAbsentCut = 0

                            '    If _nTime >= _nTimeCtrl Then
                            '        _LateNormalNotCut = 0
                            '        _LateCutN = 0
                            '        _FNAbsentCut = 0
                            '    End If

                            '    If _nTime >= _nTimeCtrl Then
                            '        _Absent = 0
                            '        _AbsentSP = 0
                            '    Else
                            '        _Absent = _nTimeCtrl - _StateWorkOffSite
                            '    End If

                            '    _LateCutOT = 0

                            'Else

                            _LateCutN = 0
                            _FNAbsentCut = 0

                            Select Case _DetuctLateType
                                Case "1" 'สายหักสายตาม Config
                                    _LateCutN = _DetuctLateMin
                                Case "2"  'สายหักขาดงาน ตาม Config
                                    _FNAbsentCut = 0 ' _DetuctLateMin

                                    _Absent = _Absent + _LateNormal

                                    _LateNormal = 0

                                Case "3"  'สายหักตามจริงตาม Config
                                    _LateCutN = _FNLateMMin '_LateNormal
                            End Select
                            _LateCutN = _LateCutN + _FNLateAfMin

                            _RetryNormalCut = _RetryNormal

                            If _nTime >= _nTimeCtrl Then
                                _LateNormalNotCut = _LateNormal
                                _LateCutN = 0
                                _FNAbsentCut = 0
                            End If

                            If _nTime >= _nTimeCtrl Then
                                _Absent = 0
                                _AbsentSP = 0
                            End If

                            _LateCutOT = _LateOT

                            'End If
                            _CutAbsent = _Absent
                        Else

                            If _UseBarcode = "2" Then
                                _LateCutN = 0
                                _LateCutOT = 0
                                _nTime = _nTimeCtrl '_nTime
                                '_nTime = _nTime + IIf(_nTime = 0, 0, _LateNormal)
                                ' _nOt15 = _nOt15 + _LateOT
                                _nOt15 = 0 'nOt15 '+ _LateOT
                                _LateNormalNotCut = 0 'IIf(_nTime = 0, 0, _LateNormal)

                                _StateLate = ""
                                _DetuctLateType = ""
                                _DetuctLateMin = 0
                                _RetryNormalCut = 0
                                _CutAbsent = 0

                            Else

                                'If _StateWorkOffSite > 0 Then 'ไปปฏิบัติงานนอกสถานที่
                                '    _nTime = _StateWorkOffSite

                                '    _LateCutN = 0
                                '    _FNAbsentCut = 0

                                '    If _nTime >= _nTimeCtrl Then
                                '        _LateNormalNotCut = 0
                                '        _LateCutN = 0
                                '        _FNAbsentCut = 0
                                '    End If

                                '    If _nTime >= _nTimeCtrl Then
                                '        _Absent = 0
                                '        _AbsentSP = 0
                                '    Else
                                '        _Absent = _nTimeCtrl - _StateWorkOffSite
                                '    End If

                                '    _LateCutOT = 0
                                'Else
                                _LateCutN = 0
                                _LateCutOT = 0
                                _CutAbsent = 0
                                _RetryNormalCut = 0

                                _nTime = _nTime
                                '_nTime = _nTime + IIf(_nTime = 0, 0, _LateNormal)
                                ' _nOt15 = _nOt15 + _LateOT

                                _nOt15 = _nOt15 + _LateOT
                                _LateNormalNotCut = 0 'IIf(_nTime = 0, 0, _LateNormal)

                                _StateLate = ""
                                _DetuctLateType = ""
                                _DetuctLateMin = 0
                            End If
                            ' End If

                        End If

                End Select



                '------------------------------------------------ ตรวจสอบการหักขาดงาน -----------------------------------------
                ' _CutAbsent = _Absent

                '------------------------------------------------  ตรวจสอบการหักขาดงาน -----------------------------------------

                '------------------------------------------------ ตรวจสอบการปัดเศษ OT -----------------------------------------
                Dim _SpareOTMin As Integer = _nOt15 Mod 60
                If Not (_StatePayOTOverRequest) Then
                    _R = _DTOTRound.Select(" FTCfgOTBegin <= " & _SpareOTMin & " AND FTCfgOTEnd >=" & _SpareOTMin & " AND FNHSysEmpTypeId=" & Val(_FTTypeEmp) & " ")
                    If _R.Length > 0 Then
                        For Each IR As DataRow In _R

                            If IR!FTStatePay.ToString = "1" Then
                                _SpareOTMin = _SpareOTMin
                            Else
                                _SpareOTMin = Val(IR!FTCfgOTSet)
                            End If

                            Exit For
                        Next
                    Else
                        _SpareOTMin = -1
                    End If
                Else
                    _SpareOTMin = -1
                End If

                If _SpareOTMin > -1 Then
                    _nOt15 = (_nOt15 - (_nOt15 Mod 60)) + _SpareOTMin
                End If
                '------------------------------------------------ ตรวจสอบการปัดเศษ OT -----------------------------------------

                '------------------------------------------------ ตรวจวันทำงานว่าเป็น วันปกติ,วันหยุด หรือ วันนักขัต ---------------------
                If _UseBarcode <> "2" Then
                    Select Case _SPDateType
                        Case 0
                            _nOt1 = _nOt15
                            _nOt15 = 0
                            _nOt2 = 0 + _nOtHSP2
                            _nOt3 = 0
                            _nOt4 = 0 + _nOtHSP4
                        Case 1
                            _nOt2 = _nOt15 + _nOtHSP2
                            _nOt15 = _nTime
                            _nOt1 = 0
                            _nOt3 = 0
                            _nOt4 = 0 + _nOtHSP4

                            _nTime = 0
                            _LateNormal = 0
                        Case 2
                            _nOt2 = 0 + _nOtHSP2
                            _nOt1 = 0
                            _nOt3 = _nTime
                            _nOt4 = _nOt15 + _nOtHSP4
                            _nOt15 = 0
                            _nTime = 0
                            _LateNormal = 0
                    End Select
                Else
                    Select Case _SPDateType
                        Case 1, 2
                            _nOt2 = 0
                            _nOt1 = 0
                            _nOt3 = 0
                            _nOt4 = 0
                            _nOt15 = 0
                            _nTime = 0
                            _LateCutOT = 0
                            _nTime = 0
                            _nOt15 = 0
                            _LateNormalNotCut = 0
                            _StateLate = ""
                            _DetuctLateType = ""
                            _DetuctLateMin = 0
                    End Select
                End If

                '------------------------------------------------ ตรวจวันทำงานว่าเป็น วันปกติ,วันหยุด หรือ วันนักขัต ---------------------

                '------------------------------------------------ ตรวจสอบการ Adjust OT  ถ้ามีการ Adjust ยึดค่า Adjust ------------
                If (_EditOt1 <> -1) Then  '----- มีการแก้ไข OT จากหน้า Time Attendance
                    _nOt1 = _EditOt1
                End If

                If (_EditOt2 <> -1) Then  '----- มีการแก้ไข OT จากหน้า Time Attendance
                    _nOt2 = _EditOt2
                End If

                If (_EditOt4 <> -1) Then  '----- มีการแก้ไข OT จากหน้า Time Attendance
                    _nOt4 = _EditOt4
                End If
                '------------------------------------------------ ตรวจสอบการ Adjust OT  ถ้ามีการ Adjust ยึดค่า Adjust ------------

                _Qry = "  UPDATE dbo.THRTTrans SET  FTUpdUser  ='" & HI.UL.ULF.rpQuoted(_User) & "' "
                _Qry &= vbCrLf & ",FTUpdDate = CONVERT(varchar(10),GetDate(),111)"
                _Qry &= vbCrLf & ",FTUpdTime = CONVERT(varchar(8),GetDate(),114)"
                _Qry &= vbCrLf & ",FNTime =  Convert(numeric(18,2)," & _nTime & " / 60) + Convert(numeric(18,2),((" & _nTime & " %60) /100.00)) "
                _Qry &= vbCrLf & ",FNOTRequest =Convert(numeric(18,2)," & _OTRequest & " / 60) + Convert(numeric(18,2),((" & _OTRequest & "  %60) /100.00))  "
                _Qry &= vbCrLf & " ,FNOT1 = Convert(numeric(18,2)," & _nOt1 & " / 60) + Convert(numeric(18,2),((" & _nOt1 & " %60) /100.00))  "
                _Qry &= vbCrLf & " ,FNOT1_5 = Convert(numeric(18,2)," & _nOt15 & " / 60) + Convert(numeric(18,2),((" & _nOt15 & " %60) /100.00))  "
                _Qry &= vbCrLf & " ,FNOT2 = Convert(numeric(18,2)," & _nOt2 & " / 60) + Convert(numeric(18,2),((" & _nOt2 & " %60) /100.00))   "
                _Qry &= vbCrLf & " ,FNOT3 = Convert(numeric(18,2), " & _nOt3 & " / 60) + Convert(numeric(18,2),((" & _nOt3 & "  %60) /100.00))    "
                _Qry &= vbCrLf & " ,FNOT4 = Convert(numeric(18,2), " & _nOt4 & " / 60) + Convert(numeric(18,2),((" & _nOt4 & "  %60) /100.00))    "
                _Qry &= vbCrLf & " ,FNLateNormalMin =" & _LateNormal
                _Qry &= vbCrLf & ",FNLateNormalCut=" & _LateCutN
                _Qry &= vbCrLf & " ,FNRetireNormalMin =" & _RetryNormal
                _Qry &= vbCrLf & ",FNRetireNormalCut =" & _RetryNormalCut
                _Qry &= vbCrLf & ",FNLateOtMin =" & _LateOT
                _Qry &= vbCrLf & ",FNLateOtCut=" & _LateCutOT
                _Qry &= vbCrLf & ",FNRetireOtMin =" & _RetryOT
                _Qry &= vbCrLf & " ,FNRetireOtCut=" & _RetryOT
                _Qry &= vbCrLf & ",FNAbsent =" & _Absent
                _Qry &= vbCrLf & " ,FNTimeMin=" & _nTime
                _Qry &= vbCrLf & " ,FNOT1Min =" & _nOt1
                _Qry &= vbCrLf & " ,FNOT1_5Min=" & _nOt15
                _Qry &= vbCrLf & " ,FNOT2Min=" & _nOt2
                _Qry &= vbCrLf & ",FNOT3Min=" & _nOt3
                _Qry &= vbCrLf & ",FNOT4Min=" & _nOt4
                _Qry &= vbCrLf & ",FNLateMMin=" & _FNLateMMin
                _Qry &= vbCrLf & ",FNLateAfMin=" & _FNLateAfMin
                _Qry &= vbCrLf & " ,FNRetireMMin =" & _FNRetireMMin
                _Qry &= vbCrLf & " ,FNRetireAfMin=" & _FNRetireAfMin
                _Qry &= vbCrLf & " ,FNOTRequestMin =" & _OTRequest
                _Qry &= vbCrLf & " ,FNAbsentCut=" & _FNAbsentCut
                _Qry &= vbCrLf & " ,FNCutAbsent=" & _CutAbsent
                _Qry &= vbCrLf & " ,FTLateCode ='" & HI.UL.ULF.rpQuoted(_StateLate) & "'"
                _Qry &= vbCrLf & ",FNHSysEmpTypeId  =" & Val(_FTTypeEmp) & "  "
                _Qry &= vbCrLf & " ,FNLateNormalNotCut = " & _LateNormalNotCut
                _Qry &= vbCrLf & " ,FNAbsentSP  =" & _AbsentSP
                _Qry &= vbCrLf & " ,FNSpecialTimeMin  =" & _FNSpecialTimeMin
                _Qry &= vbCrLf & " ,FTStateAccept='" & _FTStateAcceptTimeAuto & "' "
                _Qry &= vbCrLf & " ,FTStateRevised=CASE WHEN ISNULL(FTStateAccept,'') ='1' THEN '1' ELSE '0' END "
                _Qry &= vbCrLf & " ,FTStateRevisedDate=CASE WHEN ISNULL(FTStateAccept,'') ='1' THEN " & HI.UL.ULDate.FormatDateDB & " ELSE '' END "
                _Qry &= vbCrLf & " ,FTStateRevisedTime=CASE WHEN ISNULL(FTStateAccept,'') ='1' THEN " & HI.UL.ULDate.FormatTimeDB & " ELSE '' END "
                _Qry &= vbCrLf & " ,FTStateRevisedBy=CASE WHEN ISNULL(FTStateAccept,'') ='1' THEN '" & HI.UL.ULF.rpQuoted(_User) & "' ELSE '' END "
                _Qry &= vbCrLf & "   WHERE (FNHSysEmpID ='" & Val(_EmpCode) & "' )"
                _Qry &= vbCrLf & "   AND FTDateTrans ='" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "' "

                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            Next

            Return True
        Catch ex As Exception
            Return False
        End Try
    End Function

    Public Shared Function CalculateWorkTime_Old20180724(ByVal _User As String, ByVal _EmpCode As String, ByVal _StartDate As String, ByVal _EndDate As String, Optional ByVal _EditOt1 As Double = -1, Optional ByVal _EditOt2 As Double = -1, Optional ByVal _EditOt4 As Double = -1, Optional ByVal _EditWT As Double = -1) As Boolean
        Try

            Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
            Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
            Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

            Dim _Qry As String
            Dim _dt As DataTable
            Dim _dttran As DataTable

            Dim _Err As Integer, _Complete As Integer, _MsgShow As String, _FTMsgShow As String
            Dim _Shift As String

            Dim _ActualScanMIn As String, _ActualScanMOut As String, _ActualScanAIn As String, _ActualScanAOut As String, _ActualScanOTIn1 As String, _ActualScanOTOut1 As String, _ActualScanOTIn12 As String, _ActualScanOTOut12 As String, _ActIn01 As String, _ActOut01 As String
            Dim _CheckTimeMIn As String, _CheckTimeMOut As String, _CheckTimeAIn As String, _CheckTimeAOut As String, _CheckTimeOTIn1 As String, _CheckTimeOTOut1 As String
            Dim _CheckTimeOTIn12 As String, _CheckTimeOTOut12 As String

            Dim _ActBeforeDate As String
            Dim _ActualDate As String, _ActualNextDate As String, _UseBarcode As String, _CalDate As String, _LateCut As String, _ChkCalNextDate As String
            Dim _ScanCardOverClock As String, _nTimeCtrl As Double, _LateCompro As Integer
            Dim _LeaveSick As Double, _LeaveBusiness As Double, _LeaveVacation As Double, _LeavePregnant As Double
            Dim _LeaveOrdain As Double, _LeaveMarry As Double, _LeaveOther As Double
            Dim _Absent As Integer, _AbsentSP As Integer, _nOt As Integer, _nOt1 As Integer, _nOt15 As Integer, _nOt2 As Integer, _nOt3 As Integer, _nOt4 As Integer, _nOtH As Integer, _nOtHSP2 As Integer, _nOtHSP4 As Integer
            Dim _LateNormal As Integer, _LateNormalNotCut As Integer, _LateOT As Integer, _RetryNormal As Integer, _RetryOT As Integer
            Dim _FNLateMMin As Integer, _FNLateAfMin As Integer, _FNRetireMMin As Integer, _FNRetireAfMin As Integer
            Dim _nTime As Integer, _nMTime As Integer, _nAfTime As Integer, _nOTTime As Integer
            Dim _LateCutN As Integer, _LateCutOT As Integer
            Dim _OTRequest As Integer, _SOTRequest As String, _EOTRequest As String
            Dim _SOTRequest2 As String, _EOTRequest2 As String
            Dim _SOTRequestM As String, _EOTRequestM As String

            Dim _SOTRequestM1 As String, _EOTRequestM1 As String
            Dim _ChkInOTM1 As String, _ChkOutOTM1 As String
            Dim _SOTRequestA1 As String, _EOTRequestA1 As String
            Dim _ChkInOTA1 As String, _ChkOutOTA1 As String

            Dim _FTAppOT As String, _FTWeekDay As String
            Dim _WorkTimePerDay As Double
            Dim _ScanTimeOverClock As String, _FTTypeEmp As String
            Dim _FNAbsentCut As Integer
            Dim _CutAbsent As Integer
            Dim _StateLate As String = ""
            Dim _DetuctLateType As String = ""
            Dim _DetuctLateMin As Integer = 0
            Dim _SPDateType As Integer = 0
            Dim _TimeNormalDiffEdit As Integer = 0
            Dim _R As DataRow()
            Dim _WeekDayBefore As Integer
            Dim _WeekCallDay As Integer
            Dim _FTStateAcceptTimeAuto As String = "0"
            Dim _DTOTRound As DataTable
            Dim _DTLateCfg As DataTable
            Dim _DTEmpLeave As DataTable
            Dim _DTHoliday As DataTable
            Dim _DTTHRMTimeScanCard As DataTable
            Dim _DTOTRequest As DataTable
            Dim _LoadOTPayOver As DataTable
            Dim _FNSpecialTimeMin As Integer = 0
            Dim _SpTimeIn As String = ""
            Dim _SpTimeOut As String = ""
            Dim _StateWorkOffSite As Double
            Dim _GetWeekend As DataTable
            Dim _GetDateSpecial As DataTable
            Dim _GetEmpTypeWeekly As DataTable
            Dim _FoundSpecialDay As Boolean = False
            Dim _SpecialTime As String = ""
            Dim _StatePayOTOverRequest As Boolean = False
            Dim _StartLeaveTime As String = ""
            Dim _EndLeaveTime As String = ""
            Dim _FTOtMIn As String = ""
            Dim _FTOtMOut As String = ""

            _ActualDate = ActualDate
            _ActualNextDate = ActualNextdate

            _ActBeforeDate = AcBeforedate

            '------------------ GetConfig OT Round ----------------------------------
            _DTOTRound = _LoadOTTimeCtrl
            '------------------ GetConfig OT Round ----------------------------------

            _LoadOTPayOver = LoadOTPayOver

            '------------------ GetConfig Late ----------------------------------
            _DTLateCfg = LoadConfigLateTimeDeduct(0)
            '------------------ GetConfig Late ----------------------------------



            '------------------ GetConfig Leave ----------------------------------
            _Qry = "  SELECT FTDateTrans,FTLeaveType,SUM(FNTotalMinute) AS Total"
            _Qry &= vbCrLf & " ,Max(CASE WHEN ISNULL(FTStaLeaveDay,'') ='' Then '-1'  Else ISNULL(FTStaLeaveDay,'0') END) As FTStaLeaveDay  "
            _Qry &= vbCrLf & " , Min(FTLeaveStartTime) As FTLeaveStartTime, Max(FTLeaveEndTime) As FTLeaveEndTime "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
            _Qry &= vbCrLf & "  WHERE   (FNHSysEmpID =" & Val(_EmpCode) & ") "
            _Qry &= vbCrLf & "  AND (FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "')"
            _Qry &= vbCrLf & "  AND (FTDateTrans <='" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "')"
            _Qry &= vbCrLf & " GROUP BY FTDateTrans,FTLeaveType  "
            _DTEmpLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
            '------------------ GetConfig Late ----------------------------------


            '------------------ GetConfig WeekEnd ----------------------------------


            '------------------- วันหยุด เพิ่มเติม จากกะ ------------------------------------
            _GetEmpTypeWeekly = LoadEmpTypeWeekly(_StartDate, _EndDate)
            '--------------------------------------------------------------------

            '---------------- วันหยุดประจำสัปดาห์ของพนักงานแต่ละคน----------------
            _Qry = "   SELECT    Top 1   FTSunday,FTMonday, FTTuesday, FTWednesday, "
            _Qry &= vbCrLf & "   FTThursday, FTFriday, FTSaturday"
            _Qry &= vbCrLf & "   FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeWeekly  As W WITH(NOLOCK) "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _GetWeekend = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

            '----------------กรณี พบวันหยุด สัปดาห์ของพนักงานแต่ละคน ไม่ดู  วันหยุด เพิ่มเติม จากกะ ----------------
            If _GetWeekend.Rows.Count > 0 Then
                _GetEmpTypeWeekly.Clear()
            End If
            '---------------- วันหยุดประจำสัปดาห์ของพนักงานแต่ละคน----------------

            '------------------ GetConfig WeekEnd ----------------------------------

            '------------------ GetConfig Holiday ----------------------------------
            _DTHoliday = LoadSysHoliday
            '------------------ GetConfig Holiday ----------------------------------

            '------------------  Work Time ----------------------------------
            _DTTHRMTimeScanCard = LoadTimeShiftControl
            '------------------  Work Time ----------------------------------

            '------------------  OT Request ----------------------------------

            _Qry = "    SELECT   FTDateRequest, ISNULL(FNOtTotalTimeMinute ,0) +ISNULL(FNOtTotalTimeMinute2 ,0)   AS OTRequest"
            _Qry &= vbCrLf & ",ISNULL(FTOtIn,'') AS SOTRequest "
            _Qry &= vbCrLf & ", ISNULL(FTOtOut,'')  AS EOTRequest "
            _Qry &= vbCrLf & ",'' AS SOTRequest2 "
            _Qry &= vbCrLf & ",''  AS EOTRequest2 "
            _Qry &= vbCrLf & ",'' AS SOTRequest1 "
            _Qry &= vbCrLf & ", ''  AS EOTRequest1 "

            _Qry &= vbCrLf & ",ISNULL(FTOtIn3,'') AS SOTRequest3 "
            _Qry &= vbCrLf & ", ISNULL(FTOtOut3,'')  AS EOTRequest3 "

            _Qry &= vbCrLf & "  ,CASE WHEN ISNULL(FTApproveState,'') ='1' Then 'Y' Else 'N' END AS FTAppOT "
            _Qry &= vbCrLf & ", ISNULL(FTOtIn,'')  AS ChkIn3 "
            _Qry &= vbCrLf & ", ISNULL(FTOtOut,'')  AS ChkOut3 "
            _Qry &= vbCrLf & ", ''  AS ChkIn32 "
            _Qry &= vbCrLf & ",''  AS ChkOut32 "

            _Qry &= vbCrLf & ",''  AS ChkIn1 "
            _Qry &= vbCrLf & ", ''  AS ChkOut1 "
            _Qry &= vbCrLf & ", ISNULL(FTOtIn3,'')  AS ChkIn33 "
            _Qry &= vbCrLf & ", ISNULL(FTOtOut3,'')  AS ChkOut33 "

            _Qry &= vbCrLf & ", ISNULL(FNRest,0)  AS FNRest "
            _Qry &= vbCrLf & ", ISNULL(FNRest2,0)  AS FNRest2 "

            _Qry &= vbCrLf & ", ISNULL(FTOtMIn,0)  AS FTOtMIn "
            _Qry &= vbCrLf & ", ISNULL(FTOtMOut,0)  AS FTOtMOut "

            _Qry &= vbCrLf & " 	FROM     [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTDailyOTRequest AS O WITH (NOLOCK) "
            _Qry &= vbCrLf & "  WHERE (FTDateRequest <> '') "
            _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ") "
            _Qry &= vbCrLf & "  AND (FTDateRequest >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "')"
            _Qry &= vbCrLf & "  AND (FTDateRequest <='" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "')"


            _DTOTRequest = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
            '------------------ OT Request ----------------------------------

            '------------ Date Special--------------------------------
            _Qry = "  SELECT FTDate,FTTimeOut,FTStateStop ,FTTimeMOut"
            _Qry &= vbCrLf & " 	FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTDailySpecial AS O WITH (NOLOCK) "
            _Qry &= vbCrLf & "  WHERE (FTDate <> '') "
            _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ") "
            _Qry &= vbCrLf & "  AND (FTDate >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "')"
            _Qry &= vbCrLf & "  AND (FTDate <='" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "')"

            _GetDateSpecial = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

            '------------ Date Special--------------------------------
            _FTMsgShow = ""
            _MsgShow = ""
            _Complete = 0
            _Err = 0

            _FTStateAcceptTimeAuto = ""
            _Qry = " 	SELECT     T.FTDateTrans,T.FNHSysShiftID AS FTShift"
            _Qry &= vbCrLf & "  ,  T.FTIn1"
            _Qry &= vbCrLf & "  ,   T.FTOut1"
            _Qry &= vbCrLf & "  ,   T.FTIn2"
            _Qry &= vbCrLf & "  ,  T.FTOut2"
            _Qry &= vbCrLf & "  ,   T.FTIn3"
            _Qry &= vbCrLf & "  , T.FTOut3"
            _Qry &= vbCrLf & "  , FTIn4,T.FTOut4"
            _Qry &= vbCrLf & "  ,M.FNUseBarcode AS FTUseBarcode,M.FNLateCutSta As FTLateCutCond,T.FTWeekDay,M.FNHSysEmpTypeId AS FTTypeEmp"
            _Qry &= vbCrLf & ",T.FTScanAOTOut,T.FTScanAOTOut2"
            _Qry &= vbCrLf & ",ISNULL(ET.FTStateAcceptTimeAuto,'0') AS FTStateAcceptTimeAuto"
            _Qry &= vbCrLf & "  ,T.FTOtMIn"
            _Qry &= vbCrLf & "  ,T.FTOtMOut"
            _Qry &= vbCrLf & " FROM       [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) INNER JOIN THRMEmployee AS  M  WITH(NOLOCK)"
            _Qry &= vbCrLf & " 	ON T.FNHSysEmpID = M.FNHSysEmpID"
            _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH(NOLOCK) ON M.FNHSysEmpTypeId=ET.FNHSysEmpTypeId "
            _Qry &= vbCrLf & "  WHERE (T.FNHSysEmpID =" & Val(_EmpCode) & " )"
            _Qry &= vbCrLf & "   AND (T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "')"
            _Qry &= vbCrLf & "   AND (T.FTDateTrans <='" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "')"

            _Qry &= vbCrLf & " ORDER BY T.FTDateTrans"

            _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
            'LoadOTPayOver
            For Each R As DataRow In _dttran.Rows
                _StateWorkOffSite = 0
                _StatePayOTOverRequest = False
                _WeekDayBefore = LoadWeekday(HI.UL.ULDate.AddDay(R!FTDateTrans.ToString, -1))
                _WeekCallDay = LoadWeekday(R!FTDateTrans.ToString)
                _CalDate = R!FTDateTrans.ToString : _Shift = R!FTShift.ToString
                _FTStateAcceptTimeAuto = R!FTStateAcceptTimeAuto.ToString

                _FNSpecialTimeMin = 0
                _ActualScanMIn = R!FTIn1.ToString : _ActualScanMOut = R!FTOut1.ToString
                _ActualScanAIn = R!FTIn2.ToString : _ActualScanAOut = R!FTOut2.ToString

                _ActualScanOTIn1 = R!FTIn3.ToString
                _ActualScanOTOut1 = R!FTOut3.ToString

                _ActualScanOTIn12 = R!FTIn4.ToString
                _ActualScanOTOut12 = R!FTOut4.ToString

                _FTOtMIn = R!FTOtMIn.ToString
                _FTOtMOut = R!FTOtMOut.ToString

                _UseBarcode = R!FTUseBarcode.ToString : _LateCut = R!FTLateCutCond.ToString
                _FTWeekDay = R!FTWeekDay.ToString
                _FTTypeEmp = R!FTTypeEmp.ToString

                _ChkCalNextDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_CalDate, 1))
                _SPDateType = 0

                '------------ตรวจสอบไป ปฏิบัติงานนอกสถานที่------------------------
                _Qry = "SELECT SUM(FNTotalMin) As FNTotalMin FROM  THRTTransWorkOffsite  With(Nolock)  "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID =" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "'  "
                _StateWorkOffSite = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                '------------ตรวจสอบไป ปฏิบัติงานนอกสถานที่------------------------

                '---- กรณีไม่มีการกำหนดวันหยุดประจำสัปดาห์ของพนักงาน ให้ มองที่ กะ
                If _GetWeekend.Rows.Count <= 0 Then
                    '_Qry = "   SELECT    FTSunday, FTMonday, FTTuesday, FTWednesday, FTThursday, FTFriday,"
                    '_Qry &= vbCrLf & "    FTSaturday "
                    '_Qry &= vbCrLf & "  FROM            THRMTimeShift  As W WITH(NOLOCK)  "
                    '_Qry &= vbCrLf & " WHERE FNHSysShiftID =" & Val(_Shift) & " "
                    '_GetWeekend = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                End If
                '---- กรณีไม่มีการกำหนดวันหยุดประจำสัปดาห์ของพนักงาน ให้ มองที่ กะ

                '------------- ตรวจสอบเวลาลางาน----------------------------------------------------
                _R = _DTEmpLeave.Select(" FTDateTrans = '" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "' ")

                If _R.Length > 0 Then
                    For Each IR As DataRow In _R

                        Select Case IR!FTStaLeaveDay.ToString
                            Case "0"

                                _ActualScanMIn = ""
                                _ActualScanMOut = ""
                                _ActualScanAIn = ""
                                _ActualScanAOut = ""
                            Case "1"
                                _ActualScanMIn = ""
                                _ActualScanMOut = ""
                            Case "2"
                                _ActualScanAIn = ""
                                _ActualScanAOut = ""
                            Case Else
                                Dim _StratTimeLeave As String = IR!FTLeaveStartTime.ToString
                                Dim _EndTimeLeave As String = IR!FTLeaveEndTime.ToString

                                If _StratTimeLeave <= _ActualScanMIn Then

                                    If _ActualScanMIn <= _EndTimeLeave And _ActualScanMOut > _EndTimeLeave Then
                                        _ActualScanMIn = _EndTimeLeave
                                    Else
                                        ' _ActualScanMIn = ""
                                    End If

                                End If

                                If _StratTimeLeave <= _ActualScanAIn And _EndTimeLeave > _ActualScanAIn Then
                                    If _ActualScanAIn < _EndTimeLeave And _ActualScanAOut > _EndTimeLeave Then
                                        _ActualScanAIn = _EndTimeLeave
                                    Else
                                        _ActualScanAIn = ""
                                    End If
                                End If

                        End Select

                    Next
                End If

                If (_ActualScanMOut = "" Or _ActualScanMIn = "") And (_ActualDate <> _CalDate) Then
                    _ActualScanMOut = ""
                    _ActualScanMIn = ""
                End If

                If _ActualScanAOut = "" Or _ActualScanAIn = "" Then
                    _ActualScanAOut = ""
                    _ActualScanAIn = ""
                End If

                _R = _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "'  ")
                If _R.Length > 0 Then
                    _SPDateType = 2
                Else

                    '-------------------ตรวจสอบ วันหยุด เพิ่มเติม จากกะ กรณีไม่มีการกำหนด วันหยุด ประจำสัปดาห์ของบุคคล------------------------------------

                    If _GetWeekend.Rows.Count > 0 Then
                        If _GetWeekend.Rows(0).Item(_WeekCallDay - 1).ToString = "1" Then
                            _SPDateType = 1
                        End If
                    End If

                    '-------------------ตรวจสอบ วันหยุด เพิ่มเติม จากกะ กรณีไม่มีการกำหนด วันหยุด ประจำสัปดาห์ของบุคคล------------------------------------

                End If

                If _SPDateType = 0 Then
                    If _GetEmpTypeWeekly.Select("FNHSysEmpTypeId=" & Integer.Parse(Val(_FTTypeEmp)) & " AND FDHolidayDate='" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "' ").Length > 0 Then
                        _SPDateType = 1
                    End If
                End If

                _OTRequest = 0 : _SOTRequest = "" : _EOTRequest = "" : _FTAppOT = "" : _CheckTimeOTIn1 = "" : _CheckTimeOTOut1 = "" : _CheckTimeOTIn12 = "" : _CheckTimeOTOut12 = "" : _SOTRequest2 = "" : _EOTRequest2 = ""

                _nTimeCtrl = 0
                _LateCompro = 0
                _AbsentSP = 0 : _LateNormalNotCut = 0

                _nTime = 0 : _nMTime = 0 : _nAfTime = 0 : _LateNormal = 0 : _LateOT = 0
                _RetryNormal = 0 : _RetryOT = 0 : _FNLateMMin = 0
                _FNLateAfMin = 0 : _FNRetireMMin = 0 : _FNRetireAfMin = 0
                _nOTTime = 0 : _Absent = 0 : _nOt = 0 : _nOt1 = 0 : _nOt15 = 0 : _nOtH = 0 : _nOtHSP2 = 0 : _nOtHSP4 = 0 : _nOt2 = 0 : _nOt3 = 0 : _nOt4 = 0
                _LateCutN = 0 : _LateCutOT = 0 : _nOt = 0 : _nOt1 = 0 : _nOt15 = 0 : _nOt2 = 0 : _nOt3 = 0
                _nTimeCtrl = 0 : _CheckTimeMIn = "" : _CheckTimeMOut = "" : _CheckTimeAIn = "" : _CheckTimeAOut = "" : _FNAbsentCut = 0

                _ScanCardOverClock = ""
                _R = _DTTHRMTimeScanCard.Select(" FNHSysShiftID = " & Val(_Shift) & " ")

                If _R.Length > 0 Then
                    For Each IR As DataRow In _R
                        _nTimeCtrl = Val(IR!WorkTimePerDay.ToString)
                        _ScanCardOverClock = IR!FTOverClock.ToString
                        _CheckTimeMIn = IR!ChkIn1.ToString
                        _CheckTimeMOut = IR!ChkOut1.ToString
                        _CheckTimeAIn = IR!ChkIn2.ToString
                        _CheckTimeAOut = IR!ChkOut2.ToString
                        _WorkTimePerDay = Val(IR!WorkTimePerDay.ToString)
                        Exit For
                    Next
                End If

                _ChkInOTA1 = ""
                _ChkOutOTA1 = ""
                _ChkInOTM1 = ""
                _ChkOutOTM1 = ""
                _SOTRequestM = ""
                _EOTRequestM = ""

                _ScanTimeOverClock = Right(_ScanCardOverClock, 5)

                _R = _DTOTRequest.Select(" FTDateRequest = '" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "'")
                If _R.Length > 0 Then
                    For Each IR As DataRow In _R
                        _OTRequest = Val(IR!OTRequest.ToString)

                        _SOTRequest = IR!SOTRequest.ToString
                        _EOTRequest = IR!EOTRequest.ToString

                        _SOTRequest = IIf(_SOTRequest <> "", IIf(_SOTRequest >= "00:00" And _SOTRequest <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _SOTRequest, "")
                        _EOTRequest = IIf(_EOTRequest <> "", IIf(_EOTRequest >= "00:00" And _EOTRequest <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _EOTRequest, "")

                        _SOTRequest2 = IR!SOTRequest2.ToString
                        _EOTRequest2 = IR!EOTRequest2.ToString

                        _SOTRequest2 = IIf(_SOTRequest2 <> "", IIf(_SOTRequest2 >= "00:00" And _SOTRequest2 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _SOTRequest2, "")
                        _EOTRequest2 = IIf(_EOTRequest2 <> "", IIf(_EOTRequest2 >= "00:00" And _EOTRequest2 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _EOTRequest2, "")

                        _SOTRequestM = IR!FTOtMIn.ToString
                        _EOTRequestM = IR!FTOtMOut.ToString


                        _SOTRequestM = IIf(_SOTRequestM <> "", IIf(_SOTRequestM >= "00:00" And _SOTRequestM <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _SOTRequestM, "")
                        _EOTRequestM = IIf(_EOTRequestM <> "", IIf(_EOTRequestM >= "00:00" And _EOTRequestM <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _EOTRequestM, "")


                        If _CheckTimeMIn <= _SOTRequest2 Then
                            _SOTRequest2 = ""
                            _EOTRequest2 = ""
                        End If

                        If _SOTRequest < _CheckTimeAOut Then
                            _SOTRequest = ""
                            _EOTRequest = ""
                        End If

                        If _SOTRequestM > _CheckTimeMIn Then

                            _SOTRequestM = ""
                            _EOTRequestM = ""

                        ElseIf _SOTRequestM < _CheckTimeMIn And _EOTRequestM > _CheckTimeMIn Then

                            _EOTRequestM = _CheckTimeMIn

                        End If

                        _FTAppOT = IR!FTAppOT.ToString
                        _CheckTimeOTIn1 = IR!ChkIn3.ToString
                        _CheckTimeOTOut1 = IR!ChkOut3.ToString

                        _CheckTimeOTIn1 = IIf(_CheckTimeOTIn1 <> "", IIf(_CheckTimeOTIn1 >= "00:00" And _CheckTimeOTIn1 <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTIn1, "")
                        _CheckTimeOTOut1 = IIf(_CheckTimeOTOut1 <> "", IIf(_CheckTimeOTOut1 >= "00:00" And _CheckTimeOTOut1 <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTOut1, "")

                        _CheckTimeOTIn12 = IR!ChkIn32.ToString
                        _CheckTimeOTOut12 = IR!ChkOut32.ToString

                        _CheckTimeOTIn12 = IIf(_CheckTimeOTIn12 <> "", IIf(_CheckTimeOTIn12 >= "00:00" And _CheckTimeOTIn12 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _CheckTimeOTIn12, "")
                        _CheckTimeOTOut12 = IIf(_CheckTimeOTOut12 <> "", IIf(_CheckTimeOTOut12 >= "00:00" And _CheckTimeOTOut1 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _CheckTimeOTOut12, "")

                        _SOTRequestM1 = IR!SOTRequest1.ToString
                        _EOTRequestM1 = IR!EOTRequest1.ToString
                        _SOTRequestM1 = IIf(_SOTRequestM1 <> "", IIf(_SOTRequestM1 >= "00:00" And _SOTRequestM1 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _SOTRequestM1, "")
                        _EOTRequestM1 = IIf(_EOTRequestM1 <> "", IIf(_EOTRequestM1 >= "00:00" And _EOTRequestM1 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _EOTRequestM1, "")

                        _ChkInOTM1 = IR!ChkIn1.ToString
                        _ChkOutOTM1 = IR!ChkOut1.ToString
                        _ChkInOTM1 = IIf(_ChkInOTM1 <> "", IIf(_ChkInOTM1 >= "00:00" And _ChkInOTM1 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _ChkInOTM1, "")
                        _ChkOutOTM1 = IIf(_ChkOutOTM1 <> "", IIf(_ChkOutOTM1 >= "00:00" And _ChkOutOTM1 <= _ScanTimeOverClock, _ActualDate, _ActualDate) & "  " & _ChkOutOTM1, "")

                        _SOTRequestA1 = IR!SOTRequest3.ToString
                        _EOTRequestA1 = IR!EOTRequest3.ToString
                        _SOTRequestA1 = IIf(_SOTRequestA1 <> "", IIf(_SOTRequestA1 >= "00:00" And _SOTRequestA1 <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _SOTRequestA1, "")
                        _EOTRequestA1 = IIf(_EOTRequestA1 <> "", IIf(_EOTRequestA1 >= "00:00" And _EOTRequestA1 <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _EOTRequestA1, "")

                        _ChkInOTA1 = IR!ChkIn33.ToString
                        _ChkOutOTA1 = IR!ChkOut33.ToString

                        _ChkInOTA1 = IIf(_ChkInOTA1 <> "", IIf(_ChkInOTA1 >= "00:00" And _ChkInOTA1 <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ChkInOTA1, "")
                        _ChkOutOTA1 = IIf(_ChkOutOTA1 <> "", IIf(_ChkOutOTA1 >= "00:00" And _ChkOutOTA1 <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ChkOutOTA1, "")

                        Exit For
                    Next
                End If

                If _ActualScanOTIn12 <> "" And _ActualScanOTOut12 = "" Then

                    _ActualScanOTIn12 = IIf(_ActualScanOTIn12 <> "", IIf(_ActualScanOTIn12 >= "00:00" And _ActualScanOTIn12 <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanOTIn12, "")

                    If _ActualScanOTIn12 > _ChkInOTA1 Then
                        _ActualScanOTOut12 = Right(_ActualScanOTIn12, 5)
                        _ActualScanOTIn12 = Right(_ChkInOTA1, 5)
                    End If

                End If

                If _ActualScanOTOut12 = "" Then

                    If _ActualScanOTOut1 <> "" Then
                        For Each Rx4 As DataRow In _LoadOTPayOver.Select("FNHSysEmpTypeId=" & Val(_FTTypeEmp) & " AND FTStatePayOTOverRequest='1' ")
                            Try
                                If DateDiff(DateInterval.Minute, CDate(_EOTRequest), CDate(Microsoft.VisualBasic.Left(_EOTRequest, Len(_EOTRequest) - 5) & R!FTScanAOTOut.ToString)) >= Val(Rx4!FNTimeSacanMin) Then
                                    _ActualScanOTOut1 = R!FTScanAOTOut.ToString
                                    _StatePayOTOverRequest = True
                                End If
                            Catch ex As Exception
                            End Try
                        Next
                    End If

                Else

                    If _EOTRequest2 <> "" Then

                        For Each Rx4 As DataRow In _LoadOTPayOver.Select("FNHSysEmpTypeId=" & Val(_FTTypeEmp) & " AND FTStatePayOTOverRequest='1' ")

                            Try
                                If DateDiff(DateInterval.Minute, CDate(_EOTRequest2), CDate(Microsoft.VisualBasic.Left(_EOTRequest2, Len(_EOTRequest2) - 5) & _ActualScanOTOut12)) >= Val(Rx4!FNTimeSacanMin) Then
                                    _ActualScanOTOut12 = R!FTScanAOTOut2.ToString
                                    _StatePayOTOverRequest = True
                                End If
                            Catch ex As Exception
                            End Try

                        Next

                    End If

                End If

                '---------ตรวจสอบ
                _ActualScanMIn = IIf(_ActualScanMIn <> "", IIf(_ActualScanMIn >= "00:00" And _ActualScanMIn < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanMIn, "")
                _ActualScanMOut = IIf(_ActualScanMOut <> "", IIf(_ActualScanMOut >= "00:00" And _ActualScanMOut < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanMOut, "")
                _ActualScanAIn = IIf(_ActualScanAIn <> "", IIf(_ActualScanAIn >= "00:00" And _ActualScanAIn < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanAIn, "")
                _ActualScanAOut = IIf(_ActualScanAOut <> "", IIf(_ActualScanAOut >= "00:00" And _ActualScanAOut < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanAOut, "")
                _ActualScanOTIn1 = IIf(_ActualScanOTIn1 <> "", IIf(_ActualScanOTIn1 >= "00:00" And _ActualScanOTIn1 < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanOTIn1, "")
                _ActualScanOTOut1 = IIf(_ActualScanOTOut1 <> "", IIf(_ActualScanOTOut1 >= "00:00" And _ActualScanOTOut1 < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanOTOut1, "")
                _ActualScanOTIn12 = IIf(_ActualScanOTIn12 <> "", IIf(_ActualScanOTIn12 >= "00:00" And _ActualScanOTIn12 < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanOTIn12, "")
                _ActualScanOTOut12 = IIf(_ActualScanOTOut12 <> "", IIf(_ActualScanOTOut12 >= "00:00" And _ActualScanOTOut12 < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _ActualScanOTOut12, "")

                _FTOtMIn = IIf(_FTOtMIn <> "", IIf(_FTOtMIn >= "00:00" And _FTOtMIn < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _FTOtMIn, "")
                _FTOtMOut = IIf(_FTOtMOut <> "", IIf(_FTOtMOut >= "00:00" And _FTOtMOut < _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & _FTOtMOut, "")

                ''-------- รวจสอบวันเลิกงานพิเศษ--------
                'For Each Rxd As DataRow In _GetDateSpecial.Select("FTDate='" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "'")
                '    If Rxd!FTStateStop.ToString = "1" Then
                '        '_ActualScanMIn = _CheckTimeMIn
                '        '_ActualScanMOut = _CheckTimeMOut
                '        '_ActualScanAIn = _CheckTimeAIn
                '        '_ActualScanAOut = _CheckTimeAOut
                '        _FNSpecialTimeMin = _nTimeCtrl
                '    Else
                '        Dim TimeOutSP As String = IIf(Rxd!FTTimeOut.ToString <> "", IIf(Rxd!FTTimeOut.ToString >= "00:00" And Rxd!FTTimeOut.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & Rxd!FTTimeOut.ToString, "")
                '        Select Case True
                '            Case (TimeOutSP >= _CheckTimeMIn) And (TimeOutSP <= _CheckTimeMOut)

                '                If _ActualScanMOut >= TimeOutSP Or _ActualScanAIn >= TimeOutSP Or _ActualScanAOut >= TimeOutSP Then
                '                    '_ActualScanMOut = _CheckTimeMOut
                '                    '_ActualScanAIn = _CheckTimeAIn
                '                    '_ActualScanAOut = _CheckTimeAOut
                '                    _FNSpecialTimeMin = _nTimeCtrl -()
                '                End If
                '            Case (TimeOutSP >= _CheckTimeAIn) And (TimeOutSP <= _CheckTimeAOut)
                '                If _ActualScanAIn >= TimeOutSP Or _ActualScanAOut >= TimeOutSP Then
                '                    _ActualScanAIn = _CheckTimeAIn
                '                    _ActualScanAOut = _CheckTimeAOut
                '                End If
                '        End Select
                '    End If
                'Next

                ''-------- รวจสอบวันเลิกงานพิเศษ--------
                _LeaveSick = 0 : _LeaveBusiness = 0 : _LeaveVacation = 0 : _LeaveOrdain = 0 : _LeaveMarry = 0 : _LeaveOther = 0
                _StartLeaveTime = ""
                _EndLeaveTime = ""
                _R = _DTEmpLeave.Select(" FTDateTrans = '" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "' ")

                If _R.Length > 0 Then

                    For Each IR As DataRow In _R
                        _LeaveSick = _LeaveSick + Val(IR!Total.ToString)
                    Next

                End If

                _nTimeCtrl = ((((_nTimeCtrl * 100) - (_nTimeCtrl * 100) Mod 100) / 100) * 60) + (_nTimeCtrl * 100) Mod 100
                _LeaveBusiness = ((((_LeaveBusiness * 100) - (_LeaveBusiness * 100) Mod 100) / 100) * 60) + (_LeaveBusiness * 100) Mod 100
                _LeaveVacation = ((((_LeaveVacation * 100) - (_LeaveVacation * 100) Mod 100) / 100) * 60) + (_LeaveVacation * 100) Mod 100
                _LeaveOrdain = ((((_LeaveOrdain * 100) - (_LeaveOrdain * 100) Mod 100) / 100) * 60) + (_LeaveOrdain * 100) Mod 100
                _LeaveMarry = ((((_LeaveMarry * 100) - (_LeaveMarry * 100) Mod 100) / 100) * 60) + (_LeaveMarry * 100) Mod 100
                _LeaveOther = ((((_LeaveOther * 100) - (_LeaveOther * 100) Mod 100) / 100) * 60) + (_LeaveOther * 100) Mod 100
                _LeavePregnant = _LeavePregnant * _nTimeCtrl

                _TimeNormalDiffEdit = 0
                If _UseBarcode = "1" Or _UseBarcode = "0" Then

                    '------------------ คำนวณเข้างานสาย -------------------------------
                    If _ActualScanMIn <> "" And _CheckTimeMIn <> "" And _ActualScanMIn > _CheckTimeMIn Then

                        _StartLeaveTime = ""
                        _EndLeaveTime = ""
                        _LeaveSick = 0

                        For Each IR As DataRow In _R
                            _LeaveSick = Val(IR!Total.ToString)
                            _StartLeaveTime = IIf(IR!FTLeaveStartTime.ToString <> "", IIf(IR!FTLeaveStartTime.ToString >= "00:00" And IR!FTLeaveStartTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveStartTime.ToString, "")
                            _EndLeaveTime = IIf(IR!FTLeaveEndTime.ToString <> "", IIf(IR!FTLeaveEndTime.ToString >= "00:00" And IR!FTLeaveEndTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveEndTime.ToString, "")

                            If _StartLeaveTime <= _CheckTimeMOut Then
                                Exit For
                            Else
                                _StartLeaveTime = ""
                                _EndLeaveTime = ""
                            End If

                        Next

                        _FNLateMMin = DateDiff(DateInterval.Minute, CDate(_CheckTimeMIn), CDate(_ActualScanMIn))

                        If _StartLeaveTime <> "" Then
                            If _StartLeaveTime < _ActualScanMIn And _EndLeaveTime <= _ActualScanMIn Then
                                _FNLateMMin = _FNLateMMin - _LeaveSick
                            End If
                        End If

                    ElseIf _ActualScanAIn <> "" And _ActualScanMIn = "" Then

                        _StartLeaveTime = ""
                        _EndLeaveTime = ""
                        _LeaveSick = 0
                        For Each IR As DataRow In _R
                            _LeaveSick = Val(IR!Total.ToString)
                            _StartLeaveTime = IIf(IR!FTLeaveStartTime.ToString <> "", IIf(IR!FTLeaveStartTime.ToString >= "00:00" And IR!FTLeaveStartTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveStartTime.ToString, "")
                            _EndLeaveTime = IIf(IR!FTLeaveEndTime.ToString <> "", IIf(IR!FTLeaveEndTime.ToString >= "00:00" And IR!FTLeaveEndTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveEndTime.ToString, "")

                            If _StartLeaveTime <= _CheckTimeAOut And _EndLeaveTime >= _CheckTimeMOut Then
                                Exit For
                            Else
                                _StartLeaveTime = ""
                                _EndLeaveTime = ""
                            End If

                        Next

                        If _StartLeaveTime <> "" Then
                            If (_StartLeaveTime <= _CheckTimeAIn) And _EndLeaveTime >= _CheckTimeMOut Then
                                _FNLateMMin = 0
                            Else
                                _FNLateMMin = DateDiff(DateInterval.Minute, CDate(_EndLeaveTime), CDate(_CheckTimeMOut))
                            End If
                        Else
                            _FNLateMMin = DateDiff(DateInterval.Minute, CDate(_CheckTimeMIn), CDate(_CheckTimeMOut))
                        End If

                        If _LeaveSick > _FNLateMMin Then
                            _FNLateMMin = 0
                        End If

                    End If

                    If _ActualScanAIn <> "" And _CheckTimeAIn <> "" And _ActualScanAIn > _CheckTimeAIn Then

                        _StartLeaveTime = ""
                        _EndLeaveTime = ""
                        _LeaveSick = 0

                        For Each IR As DataRow In _R
                            _LeaveSick = Val(IR!Total.ToString)
                            _StartLeaveTime = IIf(IR!FTLeaveStartTime.ToString <> "", IIf(IR!FTLeaveStartTime.ToString >= "00:00" And IR!FTLeaveStartTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveStartTime.ToString, "")
                            _EndLeaveTime = IIf(IR!FTLeaveEndTime.ToString <> "", IIf(IR!FTLeaveEndTime.ToString >= "00:00" And IR!FTLeaveEndTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveEndTime.ToString, "")

                            If _StartLeaveTime <= _CheckTimeAOut And _EndLeaveTime > _CheckTimeAIn Then
                                Exit For
                            Else
                                _StartLeaveTime = ""
                                _EndLeaveTime = ""
                            End If

                        Next

                        If _StartLeaveTime <> "" Then
                            If (_StartLeaveTime <= _CheckTimeAIn And _EndLeaveTime >= _ActualScanAIn) Then

                            Else
                                If (_StartLeaveTime <= _CheckTimeAIn) And _EndLeaveTime < _ActualScanAIn And _EndLeaveTime > _CheckTimeAIn Then
                                    _FNLateAfMin = DateDiff(DateInterval.Minute, CDate(_EndLeaveTime), CDate(_ActualScanAIn))
                                Else
                                    _FNLateAfMin = DateDiff(DateInterval.Minute, CDate(_CheckTimeAIn), CDate(_ActualScanAIn))
                                End If
                            End If
                        Else
                            _FNLateAfMin = DateDiff(DateInterval.Minute, CDate(_CheckTimeAIn), CDate(_ActualScanAIn))
                        End If

                    End If

                    _LateNormal = _FNLateMMin + _FNLateAfMin

                    '------------------ คำนวณเข้างานสาย -------------------------------

                    _LateOT = 0
                    '------------------ คำนวณเข้างาน OT สาย -------------------------------
                    If _FTOtMIn <> "" AndAlso _SOTRequestM <> "" AndAlso _FTOtMIn > _SOTRequestM Then
                        _LateOT = DateDiff(DateInterval.Minute, CDate(_SOTRequestM), CDate(_FTOtMIn))
                    End If

                    '------------------ คำนวณเข้างาน OT สาย   '-------------------------------
                    '------------------ คำนวณเข้างาน OT สาย -------------------------------
                    If _ActualScanOTIn1 <> "" And _CheckTimeOTIn1 <> "" And _ActualScanOTIn1 > _CheckTimeOTIn1 Then
                        _LateOT = _LateOT + DateDiff(DateInterval.Minute, CDate(_CheckTimeOTIn1), CDate(_ActualScanOTIn1))
                    End If

                    '------------------ คำนวณเข้างาน OT สาย   '-------------------------------

                    '------------------ คำนวณ ออกก่อนเวลา -------------------------------
                    If _ActualScanMOut <> "" And _CheckTimeMOut <> "" And _ActualScanMOut < _CheckTimeMOut Then
                        _FNRetireMMin = DateDiff(DateInterval.Minute, CDate(_ActualScanMOut), CDate(_CheckTimeMOut))
                    End If

                    If _ActualScanAOut <> "" And _CheckTimeAOut <> "" And _ActualScanAOut < _CheckTimeAOut Then

                        _StartLeaveTime = ""
                        _EndLeaveTime = ""
                        _LeaveSick = 0

                        For Each IR As DataRow In _R

                            _LeaveSick = Val(IR!Total.ToString)
                            _StartLeaveTime = IIf(IR!FTLeaveStartTime.ToString <> "", IIf(IR!FTLeaveStartTime.ToString >= "00:00" And IR!FTLeaveStartTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveStartTime.ToString, "")
                            _EndLeaveTime = IIf(IR!FTLeaveEndTime.ToString <> "", IIf(IR!FTLeaveEndTime.ToString >= "00:00" And IR!FTLeaveEndTime.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & IR!FTLeaveEndTime.ToString, "")

                            If _StartLeaveTime <= _CheckTimeAOut And _EndLeaveTime > _CheckTimeAIn Then
                                Exit For
                            Else
                                _StartLeaveTime = ""
                                _EndLeaveTime = ""
                            End If

                        Next

                        If _StartLeaveTime <> "" Then
                            If (_StartLeaveTime <= _CheckTimeAIn And _EndLeaveTime >= _CheckTimeAOut) Then

                            Else

                                If (_StartLeaveTime <= _CheckTimeAOut) And _EndLeaveTime <= _CheckTimeAOut And _EndLeaveTime > _CheckTimeAIn Then
                                    _FNRetireAfMin = DateDiff(DateInterval.Minute, CDate(_EndLeaveTime), CDate(_CheckTimeAOut))
                                Else
                                    _FNRetireAfMin = DateDiff(DateInterval.Minute, CDate(_ActualScanAOut), CDate(_CheckTimeAOut))
                                End If

                            End If

                        Else
                            _FNRetireAfMin = DateDiff(DateInterval.Minute, CDate(_ActualScanAOut), CDate(_CheckTimeAOut))
                        End If

                    End If

                    _RetryNormal = _FNRetireMMin + _FNRetireAfMin
                    '------------------ คำนวณ ออกก่อนเวลา -------------------------------
                    _RetryOT = 0

                    '------------------ คำนวณออก OT ก่อนเวลา -------------------------------
                    If _FTOtMOut <> "" And _EOTRequestM <> "" And _FTOtMOut < _EOTRequestM Then
                        _RetryOT = _RetryOT + DateDiff(DateInterval.Minute, CDate(_FTOtMOut), CDate(_EOTRequestM))
                    End If

                    '------------------ คำนวณออก OT ก่อนเวลา -------------------------------
                    If _ActualScanOTOut1 <> "" And _CheckTimeOTOut1 <> "" And _ActualScanOTOut1 < _CheckTimeOTOut1 Then
                        _RetryOT = _RetryOT + DateDiff(DateInterval.Minute, CDate(_ActualScanOTOut1), CDate(_CheckTimeOTOut1))
                    End If
                    '------------------ คำนวณออก OT ก่อนเวลา   '-------------------------------

                    If _ActualScanMIn <> "" And _ActualScanMOut <> "" And IsDate(_ActualScanMIn) And IsDate(_ActualScanMOut) And _ActualScanMIn < _ActualScanMOut Then
                        _nMTime = DateDiff(DateInterval.Minute, CDate(IIf(_CheckTimeMIn > _ActualScanMIn, _CheckTimeMIn, _ActualScanMIn)), CDate(IIf(_CheckTimeMOut > _ActualScanMOut, _ActualScanMOut, _CheckTimeMOut)))
                    End If

                    If _ActualScanAIn <> "" And _ActualScanAOut <> "" And IsDate(_ActualScanAIn) And IsDate(_ActualScanAOut) And _ActualScanAIn < _ActualScanAOut Then
                        _nAfTime = DateDiff(DateInterval.Minute, CDate(IIf(_CheckTimeAIn > _ActualScanAIn, _CheckTimeAIn, _ActualScanAIn)), CDate(IIf(_CheckTimeAOut > _ActualScanAOut, _ActualScanAOut, _CheckTimeAOut)))
                    End If

                    '-------- รวจสอบวันเลิกงานพิเศษ--------
                    _FNSpecialTimeMin = 0
                    For Each Rxd As DataRow In _GetDateSpecial.Select("FTDate='" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "'")

                        If Rxd!FTStateStop.ToString = "1" Then

                            _FNSpecialTimeMin = _nTimeCtrl

                        Else
                            Dim TimeOutSP As String = IIf(Rxd!FTTimeOut.ToString <> "", IIf(Rxd!FTTimeOut.ToString >= "00:00" And Rxd!FTTimeOut.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & Rxd!FTTimeOut.ToString, "")
                            Dim TimeOutSPM As String = IIf(Rxd!FTTimeMOut.ToString <> "", IIf(Rxd!FTTimeMOut.ToString >= "00:00" And Rxd!FTTimeMOut.ToString <= _ScanTimeOverClock, _ActualNextDate, _ActualDate) & "  " & Rxd!FTTimeMOut.ToString, "")

                            Dim _SpecialM As Integer = 0
                            Dim _SpecialA As Integer = 0

                            If TimeOutSPM = "" Then
                                Select Case True

                                    Case (TimeOutSP >= _CheckTimeMIn) And (TimeOutSP <= _CheckTimeMOut)
                                        If _ActualScanMOut >= TimeOutSP Or _ActualScanAIn >= TimeOutSP Or _ActualScanAOut >= TimeOutSP Then
                                            _FNSpecialTimeMin = _nTimeCtrl - (_nMTime + _FNLateMMin)

                                        Else
                                            If HI.ST.SysInfo.RetryWorkTimeDeductSPTime Then
                                                If _ActualScanMOut < TimeOutSP Then
                                                    _FNSpecialTimeMin = DateDiff(DateInterval.Minute, Convert.ToDateTime(TimeOutSP), Convert.ToDateTime(_CheckTimeMOut))

                                                    _FNSpecialTimeMin = _FNSpecialTimeMin + DateDiff(DateInterval.Minute, Convert.ToDateTime(_CheckTimeAIn), Convert.ToDateTime(_CheckTimeAOut))

                                                End If

                                            End If

                                        End If
                                    Case (TimeOutSP >= _CheckTimeAIn) And (TimeOutSP <= _CheckTimeAOut)

                                        If _ActualScanAIn >= TimeOutSP Or _ActualScanAOut >= TimeOutSP Then
                                            _FNSpecialTimeMin = _nTimeCtrl - (_nMTime + _nAfTime + _LateNormal + _LeaveSick)
                                        Else
                                            If HI.ST.SysInfo.RetryWorkTimeDeductSPTime Then
                                                If _ActualScanAIn < TimeOutSP Then
                                                    _FNSpecialTimeMin = DateDiff(DateInterval.Minute, Convert.ToDateTime(TimeOutSP), Convert.ToDateTime(_CheckTimeAOut))

                                                End If
                                            End If
                                        End If

                                End Select
                            Else

                                Dim WorkTimeMorning As Integer = DateDiff(DateInterval.Minute, Convert.ToDateTime(_CheckTimeMIn), Convert.ToDateTime(_CheckTimeMOut))
                                Dim WorkTimeAfterNoon As Integer = DateDiff(DateInterval.Minute, Convert.ToDateTime(_CheckTimeAIn), Convert.ToDateTime(_CheckTimeAOut))

                                _SpecialM = 0
                                _SpecialA = 0
                                _FNSpecialTimeMin = 0

                                If TimeOutSPM <> "" Then

                                    If _ActualScanMOut <> "" And _ActualScanMIn <> "" Then
                                        ' _SpecialM = DateDiff(DateInterval.Minute, Convert.ToDateTime(TimeOutSPM), Convert.ToDateTime(_CheckTimeMOut))

                                        If _ActualScanMOut >= TimeOutSPM Then
                                            _SpecialM = DateDiff(DateInterval.Minute, Convert.ToDateTime(_ActualScanMOut), Convert.ToDateTime(_CheckTimeMOut))
                                        ElseIf _ActualScanMOut < TimeOutSPM Then
                                            '_SpecialM = DateDiff(DateInterval.Minute, Convert.ToDateTime(_ActualScanMOut), Convert.ToDateTime(TimeOutSPM))
                                            _SpecialM = DateDiff(DateInterval.Minute, Convert.ToDateTime(TimeOutSPM), Convert.ToDateTime(_CheckTimeMOut))
                                        End If

                                        _FNRetireMMin = _FNRetireMMin - _SpecialM
                                        If _FNRetireMMin <= 0 Then
                                            _FNRetireMMin = 0
                                        End If
                                    End If

                                End If

                                If TimeOutSP <> "" Then
                                    If _ActualScanAOut <> "" And _ActualScanAIn <> "" Then
                                        ' _SpecialA = DateDiff(DateInterval.Minute, Convert.ToDateTime(TimeOutSP), Convert.ToDateTime(_CheckTimeAOut))


                                        If _ActualScanAOut >= TimeOutSP Then
                                            _SpecialA = DateDiff(DateInterval.Minute, Convert.ToDateTime(_ActualScanAOut), Convert.ToDateTime(_CheckTimeAOut))
                                        ElseIf _ActualScanAOut < TimeOutSP Then
                                            '_SpecialA = DateDiff(DateInterval.Minute, Convert.ToDateTime(_ActualScanAOut), Convert.ToDateTime(TimeOutSP))
                                            _SpecialA = DateDiff(DateInterval.Minute, Convert.ToDateTime(TimeOutSP), Convert.ToDateTime(_CheckTimeAOut))
                                        End If

                                        _FNRetireAfMin = _FNRetireAfMin - _SpecialA
                                        If _FNRetireAfMin <= 0 Then
                                            _FNRetireAfMin = 0
                                        End If
                                    End If
                                End If

                                _FNSpecialTimeMin = _SpecialM + _SpecialA

                                If (_nMTime + _nAfTime + _LateNormal + _LeaveSick + _FNSpecialTimeMin) > _nTimeCtrl Then
                                    _FNSpecialTimeMin = _nTimeCtrl - (_nMTime + _nAfTime + _LateNormal + _LeaveSick + _FNSpecialTimeMin)
                                End If


                            End If

                            'Select Case True

                            '    Case (TimeOutSP >= _CheckTimeMIn) And (TimeOutSP <= _CheckTimeMOut)
                            '        If _ActualScanMOut >= TimeOutSP Or _ActualScanAIn >= TimeOutSP Or _ActualScanAOut >= TimeOutSP Then
                            '            _FNSpecialTimeMin = _nTimeCtrl - (_nMTime + _FNLateMMin)
                            '        End If
                            '    Case (TimeOutSP >= _CheckTimeAIn) And (TimeOutSP <= _CheckTimeAOut)
                            '        If _ActualScanAIn >= TimeOutSP Or _ActualScanAOut >= TimeOutSP Then
                            '            _FNSpecialTimeMin = _nTimeCtrl - (_nMTime + _nAfTime + _LateNormal + _LeaveSick)
                            '        End If
                            'End Select

                        End If
                    Next


                    '_RetryNormal = _FNRetireMMin + _FNRetireAfMin

                    If _FNSpecialTimeMin <= 0 Then
                        _FNSpecialTimeMin = 0
                    End If

                    '-------- รวจสอบวันเลิกงานพิเศษ--------
                    '-- --   ตรวจสอบการขอ OT Request หากไม่มีการขอ ไม่คำนวณ OT ให้
                    _nOtH = 0 : _nOtHSP2 = 0 : _nOtHSP4 = 0
                    _nOTTime = 0
                    If _FTAppOT = "Y" Then

                        If _FTOtMIn <> "" And _FTOtMOut <> "" And IsDate(_FTOtMIn) And IsDate(_FTOtMOut) And _FTOtMIn < _FTOtMOut And _EOTRequestM <> "" And _SOTRequestM <> "" Then

                            Dim _TmpIn3 As String = IIf(_SOTRequestM > _FTOtMIn, _SOTRequestM, _FTOtMIn)
                            Dim _TmpOut3 As String = IIf(_EOTRequestM > _FTOtMOut, _EOTRequestM, _FTOtMOut)


                            _nOTTime = _nOTTime + (DateDiff(DateInterval.Minute, CDate(_TmpIn3), CDate(_TmpOut3)))

                            If _nOTTime <= 0 Then _nOTTime = 0

                        End If


                        If _ActualScanOTIn1 <> "" And _ActualScanOTOut1 <> "" And IsDate(_ActualScanOTIn1) And IsDate(_ActualScanOTOut1) And _ActualScanOTIn1 < _ActualScanOTOut1 And _CheckTimeOTOut1 <> "" And _CheckTimeOTIn1 <> "" Then

                            Dim _TmpIn3 As String = IIf(_CheckTimeOTIn1 > _ActualScanOTIn1, _CheckTimeOTIn1, _ActualScanOTIn1)
                            Dim _TmpOut3 As String = IIf(_CheckTimeOTOut1 > _ActualScanOTOut1, _ActualScanOTOut1, _CheckTimeOTOut1)

                            If _ActualScanOTOut1 > _CheckTimeOTOut1 And _ActualScanOTIn12 = "" Then
                                For Each Rx4 As DataRow In _LoadOTPayOver.Select("FNHSysEmpTypeId=" & Val(_FTTypeEmp) & " AND FTStatePayOTOverRequest='1' ")
                                    _TmpOut3 = _ActualScanOTOut1
                                    Exit For
                                Next
                            End If

                            _nOTTime = _nOTTime + (DateDiff(DateInterval.Minute, CDate(_TmpIn3), CDate(_TmpOut3)))

                            If Left(_TmpIn3, 10) <> Left(_TmpOut3, 10) Then
                                _TmpIn3 = Left(_TmpOut3, 10) & "  " & "00:00"
                                _nOtH = DateDiff(DateInterval.Minute, CDate(_TmpIn3), CDate(_TmpOut3))

                                _R = _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_ChkCalNextDate) & "'")
                                If _R.Length > 0 Then
                                    _nOtHSP4 = _nOtH
                                Else

                                End If

                            End If

                            _nOTTime = (_nOTTime - (_nOtHSP4 + _nOtHSP2))

                            If _nOTTime <= 0 Then _nOTTime = 0

                        End If

                        If _ActualScanOTIn12 <> "" And _ActualScanOTOut12 <> "" And IsDate(_ActualScanOTIn12) And IsDate(_ActualScanOTOut12) And _ActualScanOTIn12 < _ActualScanOTOut12 And _ChkOutOTA1 <> "" And _ChkInOTA1 <> "" Then

                            Dim _TmpIn3 As String = IIf(_ChkInOTA1 > _ActualScanOTIn12, _ChkInOTA1, _ActualScanOTIn12)
                            Dim _TmpOut3 As String = IIf(_ChkOutOTA1 > _ActualScanOTOut12, _ActualScanOTOut12, _ChkOutOTA1)

                            If _ActualScanOTOut12 > _CheckTimeOTOut1 Then
                                For Each Rx4 As DataRow In _LoadOTPayOver.Select("FNHSysEmpTypeId=" & Val(_FTTypeEmp) & " AND FTStatePayOTOverRequest='1' ")
                                    _TmpOut3 = _ActualScanOTOut12
                                    Exit For
                                Next
                            End If

                            _nOTTime = _nOTTime + (DateDiff(DateInterval.Minute, CDate(_TmpIn3), CDate(_TmpOut3)))

                            If Left(_TmpIn3, 10) <> Left(_TmpOut3, 10) Then
                                _TmpIn3 = Left(_TmpOut3, 10) & "  " & "00:00"
                                _nOtH = DateDiff(DateInterval.Minute, CDate(_TmpIn3), CDate(_TmpOut3))

                                _R = _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_ChkCalNextDate) & "'")
                                If _R.Length > 0 Then
                                    _nOtHSP4 = _nOtH
                                Else

                                End If

                            End If

                            _nOTTime = (_nOTTime - (_nOtHSP4 + _nOtHSP2))
                            If _nOTTime <= 0 Then _nOTTime = 0

                        End If
                    End If

                    _TimeNormalDiffEdit = 0
                    _nTime = _nMTime + _nAfTime

                    '' OT เช้า มากกว่า 1 ชม. บวกเวลาเช้าอีก 30 นาที 20161201 
                    Try
                        If _SOTRequestM <> "" And _EOTRequestM <> "" And _EOTRequestM = _CheckTimeMIn Then
                            If DateDiff(DateInterval.Minute, DateTime.Parse(_SOTRequestM), DateTime.Parse(_EOTRequestM)) >= 120 Then
                                _nTime = (_nMTime + 30) + _nAfTime
                                _nTime = IIf(_nTime > _nTimeCtrl, _nTimeCtrl, _nTime)
                            End If
                        End If
                    Catch ex As Exception
                    End Try



                    If _EditWT <> -1 Then '----- มีการแก้ไข เลาทำงาน จากหน้า Time Attendance

                        If _EditWT < _nTime Then
                            _TimeNormalDiffEdit = _nTime - _EditWT
                        End If

                        _nTime = _EditWT
                    End If

                    _nOt15 = _nOTTime

                    _LeaveSick = 0
                    _R = _DTEmpLeave.Select(" FTDateTrans = '" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "' ")
                    If _R.Length > 0 Then

                        For Each IR As DataRow In _R
                            _LeaveSick = _LeaveSick + Val(IR!Total.ToString)
                        Next

                    End If

                    If _LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther >= _nTimeCtrl Then

                        _nTime = 0
                        _LateNormal = 0

                    Else

                        If (_LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther) > 0 Then
                            If _nTimeCtrl - (_LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther) < _nTime Then
                                _nTime = _nTimeCtrl - _LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther
                            End If
                        End If

                    End If

                    If _nTimeCtrl <= (_LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther) + _nTime Then
                        _LateNormal = 0
                    End If
                    _AbsentSP = 0

                    If _ActualDate = _CalDate And _LateNormal = 0 And _nTime = 0 And ((_LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther) <= 0) And (_ActualScanMIn <> "" And _ActualScanMOut = "" And _ActualScanAIn = "" And _ActualScanAOut = "" And _ActualScanOTIn1 = "" And _ActualScanOTOut1 = "" And _ActualScanOTIn12 = "" And _ActualScanOTOut12 = "") Then
                    Else
                        'If _nTime + _LateNormal + (_LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther) + _LateNormal < _nTimeCtrl Then
                        If _nTime + _FNSpecialTimeMin + _LateNormal + (_LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther) < _nTimeCtrl Then
                            _Absent = _nTimeCtrl - (_nTime + IIf(_nTime = 0, 0, _LateNormal) + (_LeaveSick + _LeaveBusiness + _LeaveVacation + _LeavePregnant + _LeaveOrdain + _LeaveMarry + _LeaveOther) + _FNSpecialTimeMin)

                            If _nTimeCtrl > _nTimeCtrl Then
                            End If

                            If _Absent > _nTimeCtrl Then _Absent = _nTimeCtrl

                        End If
                    End If

                    If _SPDateType <> 0 And _Absent >= 0 Then
                        _Absent = 0
                    End If

                    _StateLate = ""
                    _DetuctLateType = ""
                    _DetuctLateMin = 0

                    If _LateNormal > _nTimeCtrl Then
                        _LateNormal = _nTimeCtrl
                    End If

                    If _LateNormal > 0 Then

                        _R = _DTLateCfg.Select(" FNRateBegin <= " & _FNLateMMin & " AND FNRateEnd >=" & _FNLateMMin & " ")
                        If _R.Length > 0 Then

                            For Each IR As DataRow In _R
                                _StateLate = IR!FTCfgLateCode.ToString
                                _DetuctLateType = IR!FTStaDeduct.ToString
                                _DetuctLateMin = Val(IR!FNRateDeduct.ToString)
                                Exit For
                            Next

                        End If

                    End If
                Else

                End If

                _LateNormalNotCut = 0

                Dim _SumEditTime As Integer = 0

                '------------------------------------------------ ตรวจสอบการ Adjust OT  ถ้ามีการ Adjust ยึดค่า Adjust ------------
                If (_EditOt1 <> -1) Then  '----- มีการแก้ไข OT จากหน้า Time Attendance
                    _SumEditTime = _SumEditTime + _EditOt1
                End If

                If (_EditOt2 <> -1) Then  '----- มีการแก้ไข OT จากหน้า Time Attendance
                    _SumEditTime = _SumEditTime + _EditOt2
                End If

                If (_EditOt4 <> -1) Then  '----- มีการแก้ไข OT จากหน้า Time Attendance
                    _SumEditTime = _SumEditTime + _EditOt4
                End If
                '------------------------------------------------ ตรวจสอบการ Adjust OT  ถ้ามีการ Adjust ยึดค่า Adjust ------------
                Select Case _SPDateType
                    Case 1, 2

                End Select

                If _LateCut = "0" And _UseBarcode = "1" Then

                    'If _StateWorkOffSite > 0 Then 'ไปปฏิบัติงานนอกสถานที่
                    '    _nTime = _StateWorkOffSite

                    '    _LateCutN = 0
                    '    _FNAbsentCut = 0

                    '    If _nTime >= _nTimeCtrl Then
                    '        _LateNormalNotCut = 0
                    '        _LateCutN = 0
                    '        _FNAbsentCut = 0
                    '    End If

                    '    If _nTime >= _nTimeCtrl Then
                    '        _Absent = 0
                    '        _AbsentSP = 0
                    '    Else
                    '        _Absent = _nTimeCtrl - _StateWorkOffSite
                    '    End If

                    '    _LateCutOT = 0

                    'Else

                    _LateCutN = 0
                    _FNAbsentCut = 0

                    Select Case _DetuctLateType
                        Case "1" 'สายหักสายตาม Config
                            _LateCutN = _DetuctLateMin
                        Case "2"  'สายหักขาดงาน ตาม Config
                            _FNAbsentCut = 0 ' _DetuctLateMin

                            _Absent = _Absent + _LateNormal

                            _LateNormal = 0

                        Case "3"  'สายหักตามจริงตาม Config
                            _LateCutN = _FNLateMMin '_LateNormal
                    End Select
                    _LateCutN = _LateCutN + _FNLateAfMin

                    If _nTime >= _nTimeCtrl Then
                        _LateNormalNotCut = _LateNormal
                        _LateCutN = 0
                        _FNAbsentCut = 0
                    End If

                    If _nTime >= _nTimeCtrl Then
                        _Absent = 0
                        _AbsentSP = 0
                    End If

                    _LateCutOT = _LateOT

                    'End If

                Else

                    If _UseBarcode = "2" Then
                        _LateCutN = 0
                        _LateCutOT = 0
                        _nTime = _nTimeCtrl '_nTime
                        '_nTime = _nTime + IIf(_nTime = 0, 0, _LateNormal)
                        ' _nOt15 = _nOt15 + _LateOT
                        _nOt15 = 0 'nOt15 '+ _LateOT
                        _LateNormalNotCut = 0 'IIf(_nTime = 0, 0, _LateNormal)

                        _StateLate = ""
                        _DetuctLateType = ""
                        _DetuctLateMin = 0
                    Else

                        'If _StateWorkOffSite > 0 Then 'ไปปฏิบัติงานนอกสถานที่
                        '    _nTime = _StateWorkOffSite

                        '    _LateCutN = 0
                        '    _FNAbsentCut = 0

                        '    If _nTime >= _nTimeCtrl Then
                        '        _LateNormalNotCut = 0
                        '        _LateCutN = 0
                        '        _FNAbsentCut = 0
                        '    End If

                        '    If _nTime >= _nTimeCtrl Then
                        '        _Absent = 0
                        '        _AbsentSP = 0
                        '    Else
                        '        _Absent = _nTimeCtrl - _StateWorkOffSite
                        '    End If

                        '    _LateCutOT = 0
                        'Else
                        _LateCutN = 0
                        _LateCutOT = 0
                        _nTime = _nTime
                        '_nTime = _nTime + IIf(_nTime = 0, 0, _LateNormal)
                        ' _nOt15 = _nOt15 + _LateOT
                        _nOt15 = _nOt15 '+ _LateOT
                        _LateNormalNotCut = IIf(_nTime = 0, 0, _LateNormal)

                        _StateLate = ""
                        _DetuctLateType = ""
                        _DetuctLateMin = 0
                    End If
                    ' End If

                End If

                '------------------------------------------------ ตรวจสอบการหักขาดงาน -----------------------------------------
                _CutAbsent = _Absent

                '------------------------------------------------  ตรวจสอบการหักขาดงาน -----------------------------------------

                '------------------------------------------------ ตรวจสอบการปัดเศษ OT -----------------------------------------
                Dim _SpareOTMin As Integer = _nOt15 Mod 60
                If Not (_StatePayOTOverRequest) Then
                    _R = _DTOTRound.Select(" FTCfgOTBegin <= " & _SpareOTMin & " AND FTCfgOTEnd >=" & _SpareOTMin & " AND FNHSysEmpTypeId=" & Val(_FTTypeEmp) & " ")
                    If _R.Length > 0 Then
                        For Each IR As DataRow In _R

                            If IR!FTStatePay.ToString = "1" Then
                                _SpareOTMin = _SpareOTMin
                            Else
                                _SpareOTMin = Val(IR!FTCfgOTSet)
                            End If

                            Exit For
                        Next
                    Else
                        _SpareOTMin = -1
                    End If
                Else
                    _SpareOTMin = -1
                End If

                If _SpareOTMin > -1 Then
                    _nOt15 = (_nOt15 - (_nOt15 Mod 60)) + _SpareOTMin
                End If
                '------------------------------------------------ ตรวจสอบการปัดเศษ OT -----------------------------------------

                '------------------------------------------------ ตรวจวันทำงานว่าเป็น วันปกติ,วันหยุด หรือ วันนักขัต ---------------------
                If _UseBarcode <> "2" Then
                    Select Case _SPDateType
                        Case 0
                            _nOt1 = _nOt15
                            _nOt15 = 0
                            _nOt2 = 0 + _nOtHSP2
                            _nOt3 = 0
                            _nOt4 = 0 + _nOtHSP4
                        Case 1
                            _nOt2 = _nOt15 + _nOtHSP2
                            _nOt15 = _nTime
                            _nOt1 = 0
                            _nOt3 = 0
                            _nOt4 = 0 + _nOtHSP4

                            _nTime = 0
                        Case 2
                            _nOt2 = 0 + _nOtHSP2
                            _nOt1 = 0
                            _nOt3 = _nTime
                            _nOt4 = _nOt15 + _nOtHSP4
                            _nOt15 = 0
                            _nTime = 0
                    End Select
                Else
                    Select Case _SPDateType
                        Case 1, 2
                            _nOt2 = 0
                            _nOt1 = 0
                            _nOt3 = 0
                            _nOt4 = 0
                            _nOt15 = 0
                            _nTime = 0
                            _LateCutOT = 0
                            _nTime = 0
                            _nOt15 = 0
                            _LateNormalNotCut = 0
                            _StateLate = ""
                            _DetuctLateType = ""
                            _DetuctLateMin = 0
                    End Select
                End If

                '------------------------------------------------ ตรวจวันทำงานว่าเป็น วันปกติ,วันหยุด หรือ วันนักขัต ---------------------

                '------------------------------------------------ ตรวจสอบการ Adjust OT  ถ้ามีการ Adjust ยึดค่า Adjust ------------
                If (_EditOt1 <> -1) Then  '----- มีการแก้ไข OT จากหน้า Time Attendance
                    _nOt1 = _EditOt1
                End If

                If (_EditOt2 <> -1) Then  '----- มีการแก้ไข OT จากหน้า Time Attendance
                    _nOt2 = _EditOt2
                End If

                If (_EditOt4 <> -1) Then  '----- มีการแก้ไข OT จากหน้า Time Attendance
                    _nOt4 = _EditOt4
                End If
                '------------------------------------------------ ตรวจสอบการ Adjust OT  ถ้ามีการ Adjust ยึดค่า Adjust ------------

                _Qry = "  UPDATE dbo.THRTTrans SET  FTUpdUser  ='" & HI.UL.ULF.rpQuoted(_User) & "' "
                _Qry &= vbCrLf & ",FTUpdDate = CONVERT(varchar(10),GetDate(),111)"
                _Qry &= vbCrLf & ",FTUpdTime = CONVERT(varchar(8),GetDate(),114)"
                _Qry &= vbCrLf & ",FNTime =  Convert(numeric(18,2)," & _nTime & " / 60) + Convert(numeric(18,2),((" & _nTime & " %60) /100.00)) "
                _Qry &= vbCrLf & ",FNOTRequest =Convert(numeric(18,2)," & _OTRequest & " / 60) + Convert(numeric(18,2),((" & _OTRequest & "  %60) /100.00))  "
                _Qry &= vbCrLf & " ,FNOT1 = Convert(numeric(18,2)," & _nOt1 & " / 60) + Convert(numeric(18,2),((" & _nOt1 & " %60) /100.00))  "
                _Qry &= vbCrLf & " ,FNOT1_5 = Convert(numeric(18,2)," & _nOt15 & " / 60) + Convert(numeric(18,2),((" & _nOt15 & " %60) /100.00))  "
                _Qry &= vbCrLf & " ,FNOT2 = Convert(numeric(18,2)," & _nOt2 & " / 60) + Convert(numeric(18,2),((" & _nOt2 & " %60) /100.00))   "
                _Qry &= vbCrLf & " ,FNOT3 = Convert(numeric(18,2), " & _nOt3 & " / 60) + Convert(numeric(18,2),((" & _nOt3 & "  %60) /100.00))    "
                _Qry &= vbCrLf & " ,FNOT4 = Convert(numeric(18,2), " & _nOt4 & " / 60) + Convert(numeric(18,2),((" & _nOt4 & "  %60) /100.00))    "
                _Qry &= vbCrLf & " ,FNLateNormalMin =" & _LateNormal
                _Qry &= vbCrLf & ",FNLateNormalCut=" & _LateCutN
                _Qry &= vbCrLf & " ,FNRetireNormalMin =" & _RetryNormal
                _Qry &= vbCrLf & ",FNRetireNormalCut =" & _RetryNormal
                _Qry &= vbCrLf & ",FNLateOtMin =" & _LateOT
                _Qry &= vbCrLf & ",FNLateOtCut=" & _LateCutOT
                _Qry &= vbCrLf & ",FNRetireOtMin =" & _RetryOT
                _Qry &= vbCrLf & " ,FNRetireOtCut=" & _RetryOT
                _Qry &= vbCrLf & ",FNAbsent =" & _Absent
                _Qry &= vbCrLf & " ,FNTimeMin=" & _nTime
                _Qry &= vbCrLf & " ,FNOT1Min =" & _nOt1
                _Qry &= vbCrLf & " ,FNOT1_5Min=" & _nOt15
                _Qry &= vbCrLf & " ,FNOT2Min=" & _nOt2
                _Qry &= vbCrLf & ",FNOT3Min=" & _nOt3
                _Qry &= vbCrLf & ",FNOT4Min=" & _nOt4
                _Qry &= vbCrLf & ",FNLateMMin=" & _FNLateMMin
                _Qry &= vbCrLf & ",FNLateAfMin=" & _FNLateAfMin
                _Qry &= vbCrLf & " ,FNRetireMMin =" & _FNRetireMMin
                _Qry &= vbCrLf & " ,FNRetireAfMin=" & _FNRetireAfMin
                _Qry &= vbCrLf & " ,FNOTRequestMin =" & _OTRequest
                _Qry &= vbCrLf & " ,FNAbsentCut=" & _FNAbsentCut
                _Qry &= vbCrLf & " ,FNCutAbsent=" & _CutAbsent
                _Qry &= vbCrLf & " ,FTLateCode ='" & HI.UL.ULF.rpQuoted(_StateLate) & "'"
                _Qry &= vbCrLf & ",FNHSysEmpTypeId  =" & Val(_FTTypeEmp) & "  "
                _Qry &= vbCrLf & " ,FNLateNormalNotCut = " & _LateNormalNotCut
                _Qry &= vbCrLf & " ,FNAbsentSP  =" & _AbsentSP
                _Qry &= vbCrLf & " ,FNSpecialTimeMin  =" & _FNSpecialTimeMin
                _Qry &= vbCrLf & " ,FTStateAccept='" & _FTStateAcceptTimeAuto & "' "
                _Qry &= vbCrLf & " ,FTStateRevised=CASE WHEN ISNULL(FTStateAccept,'') ='1' THEN '1' ELSE '0' END "
                _Qry &= vbCrLf & " ,FTStateRevisedDate=CASE WHEN ISNULL(FTStateAccept,'') ='1' THEN " & HI.UL.ULDate.FormatDateDB & " ELSE '' END "
                _Qry &= vbCrLf & " ,FTStateRevisedTime=CASE WHEN ISNULL(FTStateAccept,'') ='1' THEN " & HI.UL.ULDate.FormatTimeDB & " ELSE '' END "
                _Qry &= vbCrLf & " ,FTStateRevisedBy=CASE WHEN ISNULL(FTStateAccept,'') ='1' THEN '" & HI.UL.ULF.rpQuoted(_User) & "' ELSE '' END "
                _Qry &= vbCrLf & "   WHERE (FNHSysEmpID ='" & Val(_EmpCode) & "' )"
                _Qry &= vbCrLf & "   AND FTDateTrans ='" & HI.UL.ULDate.ConvertEnDB(_CalDate) & "' "

                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            Next

            Return True
        Catch ex As Exception
            Return False
        End Try
    End Function


    Public Shared Function TransTimeCard(ByVal _User As String, ByVal _DateTransfer As String, Optional ByVal FNHSysEmpID As Integer = 0, Optional Spls As HI.TL.SplashScreen = Nothing, Optional ByVal FNHSysCmpID As Integer = 0) As Boolean

        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim _Qry As String
        Dim _dt As DataTable
        Dim _dttran As DataTable
        Dim _Rand As New Random()

        Dim _TransComplete As Integer, _Err As Integer, _Complete As Integer, _NotComplete As Integer, _MsgShow As String

        Dim _Shift As String, _Scan As Integer, _EmpBarcode As String
        Dim _EmpCode As String, _EmpType As String

        Dim _CheckTimeMIn, _CheckTimeMInS, _CheckTimeMInE As String
        Dim _CheckTimeMOut, _CheckTimeMOutS, _CheckTimeMOutE As String
        Dim _CheckTimeAIn, _CheckTimeAInS, _CheckTimeAInE As String
        Dim _CheckTimeAOut, _CheckTimeAOutS, _CheckTimeAOutE As String

        '_CheckTimeMInS,_CheckTimeMInE,_CheckTimeMOutS,_CheckTimeMOutE,_CheckTimeAInS,_CheckTimeAInE,_CheckTimeAOutS,_CheckTimeAOutE
        Dim _CheckTimeOTIn1 As String
        Dim _CheckTimeOTOut1 As String
        Dim _CheckTimeOTIn2 As String
        Dim _CheckTimeOTOut2 As String
        Dim _ActualTime As String, _ActualDate As String, _ActualNextDate As String, _NotScan As Integer, _TotalScan As Integer, _ActualRegisCard As Integer
        Dim _ActualScanMIn As String, _ActualScanMOut As String
        Dim _ActualScanAIn As String, _ActualScanAOut As String
        Dim _ActualScanOTIn1 As String, _ActualScanOTOut1 As String, _ScanCardOverClock As String
        Dim _ActualScanOTIn2 As String, _ActualScanOTOut2 As String
        Dim _WorkTimePerDay As Double
        Dim _OTReq As Double, _FTWeekDay As String
        Dim _EmployeeMoveShift As String, _OriginalShift As String
        Dim _TmpScanIn As String, _TmpScanOut As String
        Dim FTScanMIn As String, FTScanMOut As String
        Dim FTScanAIn As String, FTScanAOut As String
        Dim FTScanAOTIn As String, FTScanAOTOut As String
        Dim FTScanAOTIn2 As String, FTScanAOTOut2 As String

        Dim FTScanMInM As String, FTScanMOutM As String
        Dim FTScanAInM As String, FTScanAOutM As String
        Dim FTScanAOTInM As String, FTScanAOTOutM As String

        Dim _OTRequest As Integer, _FTUseBarcode As String
        Dim _ScanTimeOverClock As String
        Dim _CmpCode As String
        Dim _THRMTimeControl As New DataTable
        Dim _totalcal As Integer = 0
        Dim _calrec As Integer = 0
        Dim _StartDateTimeTransfer As String = ""
        Dim _GetWeekend As DataTable
        Dim _DTHoliday As DataTable
        Dim _GetEmpTypeWeekly As DataTable
        Dim _SPDateType As Integer = 0
        Dim _WeekCallDay As Integer = 0

        Dim _OutSIn1 As String
        Dim _OutSOut1 As String
        Dim _OutSIn2 As String
        Dim _OutSOut2 As String
        Dim _StateEditTime As Boolean = False
        Dim _FTOtMIn As String = ""
        Dim _FTOtMOut As String = ""
        Dim FTScanOTMIn As String, FTScanOTMOut As String
        Dim FTScanOTMInM As String, FTScanOTMOutM As String
        Dim _ActualScanOTInM As String, _ActualScanOTOutM As String

        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday(FNHSysCmpID)
        '------------------ GetConfig Holiday ----------------------------------


        _Qry = "SELECT  Convert(varchar(1), DatePart(Weekday,'" & _DateTransfer & "'))"
        _FTWeekDay = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT   FNHSysShiftID, ISNULL(FNScanCtrl,0) AS FNScanCtrl"
        _Qry &= vbCrLf & "   , CASE WHEN ISNULL(FTOverClock,'') <> '' THEN  '" & _ActualDate & "' + '  ' + FTOverClock  ELSE '' END  AS FTOverClock "
        _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOverClock,'') <>'' THEN '" & _ActualDate & "'  + '  ' + FTOverClock  ELSE '' END As FTOverClock  "

        'In1
        _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTIn1,'') <> '' THEN  (CASE WHEN (FTIn1 >='00:00' AND  FTIn1 < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTIn1  ELSE '' END AS ChkIn1 "
        _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTIn1Start,'') <> '' THEN  (CASE WHEN (FTIn1Start >='00:00' AND  FTIn1Start < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTIn1Start  ELSE '' END AS ChkIn1S "
        _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTIn1End,'') <> '' THEN  (CASE WHEN (FTIn1End >='00:00' AND  FTIn1End < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTIn1End  ELSE '' END AS ChkIn1E "

        'Out1
        _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOut1,'') <> '' THEN (CASE WHEN (FTOut1 >='00:00' AND  FTOut1 < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END) + '  ' + FTOut1 ELSE '' END AS ChkOut1 "
        _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOut1Start,'') <> '' THEN (CASE WHEN (FTOut1Start >='00:00' AND  FTOut1Start < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END) + '  ' + FTOut1Start ELSE '' END AS ChkOut1S "
        _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOut1End,'') <> '' THEN (CASE WHEN (FTOut1End >='00:00' AND  FTOut1End < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END) + '  ' + FTOut1End ELSE '' END AS ChkOut1E "

        'In2
        _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTIn2,'') <> '' THEN (CASE WHEN (FTIn2 >='00:00' AND  FTIn2 < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END) + '  ' + FTIn2  ELSE '' END As ChkIn2  "
        _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTIn2Start,'') <> '' THEN (CASE WHEN (FTIn2Start >='00:00' AND  FTIn2Start < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END) + '  ' + FTIn2Start  ELSE '' END As ChkIn2S  "
        _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTIn2End,'') <> '' THEN (CASE WHEN (FTIn2End >='00:00' AND  FTIn2End < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END) + '  ' + FTIn2End  ELSE '' END As ChkIn2E  "

        'Out2
        _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOut2,'') <> '' THEN (CASE WHEN (FTOut2 >='00:00' AND  FTOut2 < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END) + '  ' + FTOut2  ELSE '' END AS ChkOut2 "
        _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOut2Start,'') <> '' THEN (CASE WHEN (FTOut2Start >='00:00' AND  FTOut2Start < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END) + '  ' + FTOut2Start  ELSE '' END AS ChkOut2S "
        _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOut2End,'') <> '' THEN (CASE WHEN (FTOut2End >='00:00' AND  FTOut2End < ISNULL(FTOverClock,'')  ) THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END) + '  ' + FTOut2End  ELSE '' END AS ChkOut2E "

        _Qry &= vbCrLf & ",ISNULL(FCHour,0) As WorkTimePerDay"
        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WITH(NOLOCK)"
        '_Qry &= vbCrLf & "  WHERE  (ISNULL(FNHSysCmpId,0) = 0 OR  FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"
        _Qry &= vbCrLf & "  WHERE  ISNULL(FNHSysCmpId,0) = 0 AND FTStateActive = 1"
        _THRMTimeControl = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


        _Complete = 0 : _NotComplete = 0 : _MsgShow = "" : _Err = 0 : _NotScan = 0
        _ActualTime = "" : _ActualScanMIn = "" : _ActualScanMOut = "" : _ActualScanAIn = "" : _ActualScanAOut = "" : _ActualScanOTIn1 = "" : _ActualScanOTOut1 = "" : _Scan = 0

        If FNHSysEmpID = 0 Then

            _Qry = " Select DISTINCT M.FNHSysEmpID,M.FTEmpBarcode,M.FTEmpCode,ISNULL(M.FNHSysShiftID,0) As FTShift,M.FNScanCtrl,M.FNHSysEmpTypeId As FTTypeEmp,M.FNUseBarcode As FTUseBarcode,M.FNHSysCmpId As FTCmpCode,ISNULL(TM.FTEmpBarcode,'Y') AS FTState"
            _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK) LEFT OUTER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTimecard  As TM WITH(NOLOCK)  ON M.FTEmpBarcode =Rtrim(ltrim(TM.FTEmpBarcode))  "
            '_Qry &= vbCrLf & "  WHERE (  M.FDDateStart <= '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "'  "
            '_Qry &= vbCrLf & "   OR  (M.FDDateStart  > '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' "
            '_Qry &= vbCrLf & "   AND  M.FDDateStart <= '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' )  )"
            _Qry &= vbCrLf & "  WHERE (   CASE WHEN ISNULL(M.FDDateTransfer,'') <> '' AND ISNULL(M.FDDateTransfer,'') > M.FDDateStart THEN ISNULL(M.FDDateTransfer,'') ELSE M.FDDateStart  END <= '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "'  "
            _Qry &= vbCrLf & "   OR  ( CASE WHEN ISNULL(M.FDDateTransfer,'') <> '' AND ISNULL(M.FDDateTransfer,'') > M.FDDateStart THEN ISNULL(M.FDDateTransfer,'') ELSE M.FDDateStart  END  > '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' "
            _Qry &= vbCrLf & "   AND   CASE WHEN ISNULL(M.FDDateTransfer,'') <> '' AND ISNULL(M.FDDateTransfer,'') > M.FDDateStart THEN ISNULL(M.FDDateTransfer,'') ELSE M.FDDateStart  END <= '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' )  )"
            _Qry &= vbCrLf & "  AND  (M.FDDateEnd = '' OR M.FDDateEnd > '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "')"
            _Qry &= vbCrLf & "  AND   M.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & "  "

            _Qry &= vbCrLf & " UNION ALL"
            _Qry &= vbCrLf & " Select DISTINCT M.FNHSysEmpID,M.FTEmpBarcode,M.FTEmpCode,ISNULL(M.FNHSysShiftID,0) As FTShift,M.FNScanCtrl,M.FNHSysEmpTypeId As FTTypeEmp,M.FNUseBarcode As FTUseBarcode,M.FNHSysCmpId As FTCmpCode,ISNULL(TM.FTEmpBarcode,'Y') AS FTState"
            _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK) RIGHT JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTimecard  As TM WITH(NOLOCK)  ON M.FTEmpBarcode =Rtrim(ltrim(TM.FTEmpBarcode))  "

            _Qry &= vbCrLf & "  WHERE (   CASE WHEN ISNULL(M.FDDateTransfer,'') <> '' AND ISNULL(M.FDDateTransfer,'') > M.FDDateStart THEN ISNULL(M.FDDateTransfer,'') ELSE M.FDDateStart  END <= '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "'  "
            _Qry &= vbCrLf & "   OR  ( CASE WHEN ISNULL(M.FDDateTransfer,'') <> '' AND ISNULL(M.FDDateTransfer,'') > M.FDDateStart THEN ISNULL(M.FDDateTransfer,'') ELSE M.FDDateStart  END  > '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' "
            _Qry &= vbCrLf & "   AND   CASE WHEN ISNULL(M.FDDateTransfer,'') <> '' AND ISNULL(M.FDDateTransfer,'') > M.FDDateStart THEN ISNULL(M.FDDateTransfer,'') ELSE M.FDDateStart  END <= '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' )  )"
            '_Qry &= vbCrLf & "  AND  (M.FDDateEnd = '' OR M.FDDateEnd > '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "')"
            _Qry &= vbCrLf & "  AND   M.FNHSysCmpId<>" & HI.ST.SysInfo.CmpID & "  AND TM.FTInsUser = '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "' "


            _Qry &= vbCrLf & " UNION ALL"
            _Qry &= vbCrLf & " Select DISTINCT M.FNHSysEmpID,M.FTEmpBarcode,M.FTEmpCode,ISNULL(M.FNHSysShiftID,0) As FTShift,M.FNScanCtrl,M.FNHSysEmpTypeId As FTTypeEmp,M.FNUseBarcode As FTUseBarcode,M.FNHSysCmpId As FTCmpCode,ISNULL(TM.FTEmpBarcode,'Y') AS FTState"
            _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK) LEFT OUTER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTimecard  As TM WITH(NOLOCK)  ON M.FTEmpBarcode =Rtrim(ltrim(TM.FTEmpBarcode))  "
            '_Qry &= vbCrLf & "  WHERE (  M.FDDateStart <= '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "'  "
            '_Qry &= vbCrLf & "   OR  (M.FDDateStart  > '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' "
            '_Qry &= vbCrLf & "   AND  M.FDDateStart <= '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' )  )"
            _Qry &= vbCrLf & "  WHERE (   CASE WHEN ISNULL(M.FDDateTransfer,'') <> '' AND ISNULL(M.FDDateTransfer,'') > M.FDDateStart THEN ISNULL(M.FDDateTransfer,'') ELSE M.FDDateStart  END <= '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "'  "
            _Qry &= vbCrLf & "   OR  ( CASE WHEN ISNULL(M.FDDateTransfer,'') <> '' AND ISNULL(M.FDDateTransfer,'') > M.FDDateStart THEN ISNULL(M.FDDateTransfer,'') ELSE M.FDDateStart  END  > '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' "
            _Qry &= vbCrLf & "   AND   CASE WHEN ISNULL(M.FDDateTransfer,'') <> '' AND ISNULL(M.FDDateTransfer,'') > M.FDDateStart THEN ISNULL(M.FDDateTransfer,'') ELSE M.FDDateStart  END <= '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' )  )"
            _Qry &= vbCrLf & "  AND  (M.FDDateEnd = '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "')"
            _Qry &= vbCrLf & "  AND   M.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & "  "

            _Qry &= vbCrLf & "  ORDER BY M.FTEmpBarcode ASC"

        Else

            _Qry = " SELECT   M.FNHSysEmpID,M.FTEmpBarcode,M.FTEmpCode,ISNULL(M.FNHSysShiftID,0) AS FTShift,M.FNScanCtrl,M.FNHSysEmpTypeId AS FTTypeEmp,M.FNUseBarcode As FTUseBarcode,M.FNHSysCmpId AS FTCmpCode,ISNULL(TM.FTEmpBarcode,'Y') AS FTState"
            _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK) LEFT OUTER JOIN ("
            _Qry &= vbCrLf & " SELECT TOP 1  *  FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTimecardHistory  WITH(NOLOCK) "
            _Qry &= vbCrLf & " WHERE FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' "
            _Qry &= vbCrLf & "  AND  Rtrim(ltrim(FTEmpBarcode)) IN (SELECT FTEmpBarcode FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK) WHERE FNHSysEmpID =" & Val(FNHSysEmpID) & ") "
            _Qry &= vbCrLf & ") As TM   ON M.FTEmpBarcode =Rtrim(ltrim(TM.FTEmpBarcode))  "
            '_Qry &= vbCrLf & "  WHERE (M.FDDateStart <= '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' "
            '_Qry &= vbCrLf & "   OR  (M.FDDateStart  > '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "'  "
            '_Qry &= vbCrLf & "  AND M.FDDateStart <= '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' )  )"
            _Qry &= vbCrLf & "  WHERE ( CASE WHEN ISNULL(M.FDDateTransfer,'') <> '' AND ISNULL(M.FDDateTransfer,'') > M.FDDateStart THEN ISNULL(M.FDDateTransfer,'') ELSE M.FDDateStart  END <= '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' "
            _Qry &= vbCrLf & "   OR  (CASE WHEN ISNULL(M.FDDateTransfer,'') <> '' AND ISNULL(M.FDDateTransfer,'') > M.FDDateStart THEN ISNULL(M.FDDateTransfer,'') ELSE M.FDDateStart  END  > '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "'  "
            _Qry &= vbCrLf & "  AND CASE WHEN ISNULL(M.FDDateTransfer,'') <> '' AND ISNULL(M.FDDateTransfer,'') > M.FDDateStart THEN ISNULL(M.FDDateTransfer,'') ELSE M.FDDateStart  END <= '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' )  )"
            _Qry &= vbCrLf & "  AND (M.FDDateEnd = '' OR M.FDDateEnd > '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "')"
            _Qry &= vbCrLf & "  AND M.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & "  "
            _Qry &= vbCrLf & "  AND M.FNHSysEmpID=" & FNHSysEmpID & "  "
            _Qry &= vbCrLf & "  ORDER BY M.FTEmpBarcode ASC"

        End If

        _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
        _totalcal = _dttran.Rows.Count

        For Each R As DataRow In _dttran.Rows
            _calrec = _calrec + 1

            Try
                _EmpBarcode = R!FTEmpBarcode.ToString

                'If R!FNHSysEmpID.ToString = 1403020239 Then
                '    _EmpCode = R!FNHSysEmpID.ToString
                'End If

                _EmpCode = R!FNHSysEmpID.ToString
                _Shift = R!FTShift.ToString
                _EmpType = R!FTTypeEmp.ToString
                _FTUseBarcode = R!FTUseBarcode.ToString
                _CmpCode = R!FTCmpCode.ToString
                _Scan = Val(R!FNScanCtrl.ToString)
                _SPDateType = 0
                _WeekCallDay = LoadWeekday(_DateTransfer)

                If _EmpCode = "2010980108" Then
                    Beep()
                End If

                '------------------- วันหยุด เพิ่มเติม จากกะ ------------------------------------
                _GetEmpTypeWeekly = LoadEmpTypeWeeklyByEmpType(Integer.Parse(Val(_EmpType)), _DateTransfer, _DateTransfer, FNHSysCmpID)
                '--------------------------------------------------------------------

                '---------------- วันหยุดประจำสัปดาห์ของพนักงานแต่ละคน----------------
                _Qry = "   SELECT    Top 1   FTSunday,FTMonday, FTTuesday, FTWednesday, "
                _Qry &= vbCrLf & "   FTThursday, FTFriday, FTSaturday"
                _Qry &= vbCrLf & "   FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeWeekly  As W WITH(NOLOCK) "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & "  AND  (ISNULL(FTSunday,0)+ ISNULL(FTMonday,0)+ ISNULL(FTTuesday,0)+ ISNULL(FTWednesday,0)+ 
                 ISNULL(FTThursday,0)+ ISNULL(FTFriday,0)+ ISNULL(FTSaturday,0) >0 )"
                _GetWeekend = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '----------------กรณี พบวันหยุด สัปดาห์ของพนักงานแต่ละคน ไม่ดู  วันหยุด เพิ่มเติม จากกะ ----------------
                If _GetWeekend.Rows.Count > 0 Then
                    _GetEmpTypeWeekly.Clear()
                End If
                '---------------- วันหยุดประจำสัปดาห์ของพนักงานแต่ละคน----------------

                _Qry = "    SELECT   TOP 1     ISNULL(FTScanMInM,'') +  ISNULL(FTScanMOutM,'') + ISNULL(FTScanAInM,'') + ISNULL(FTScanAOutM,'') + ISNULL(FTScanAOTInM,'') +  ISNULL(FTScanAOTOutM,'') AS FTStateEdit "
                _Qry &= vbCrLf & " FROM   [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS A WITH(NOLOCK)"
                _Qry &= vbCrLf & " WHERE        (FNHSysEmpID =" & Val(_EmpCode) & " ) "
                _Qry &= vbCrLf & " AND (FTDateTrans = N'" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "')"
                _StateEditTime = (HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") <> "")

                If _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "'  ").Length > 0 Then
                    _SPDateType = 2
                Else

                    '-------------------ตรวจสอบ วันหยุด เพิ่มเติม จากกะ กรณีไม่มีการกำหนด วันหยุด ประจำสัปดาห์ของบุคคล------------------------------------
                    If _GetWeekend.Rows.Count > 0 Then
                        If _GetWeekend.Rows(0).Item(_WeekCallDay - 1).ToString = "1" Then
                            _SPDateType = 1
                        Else
                            If _GetEmpTypeWeekly.Select("FNHSysEmpTypeId=" & Integer.Parse(Val(_EmpType)) & " AND FDHolidayDate='" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' ").Length > 0 Then
                                _SPDateType = 1
                            End If
                        End If
                    Else

                        If _GetEmpTypeWeekly.Select("FNHSysEmpTypeId=" & Integer.Parse(Val(_EmpType)) & " AND FDHolidayDate='" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' ").Length > 0 Then
                            _SPDateType = 1
                        End If
                    End If

                    '-------------------ตรวจสอบ วันหยุด เพิ่มเติม จากกะ กรณีไม่มีการกำหนด วันหยุด ประจำสัปดาห์ของบุคคล------------------------------------

                End If

                Select Case R!FTEmpCode.ToString
                    Case "91HHT00473"
                        Beep()
                    Case Else
                End Select

                If Not (Spls Is Nothing) Then
                    Spls.UpdateInformation("Import to System And Calculate Date : " & HI.UL.ULDate.ConvertEN(_DateTransfer) & "  Employee : " & R!FTEmpCode.ToString & "  Record   " & _calrec.ToString & " Of " & _totalcal.ToString & "  (" & Format((_calrec * 100.0) / _totalcal, "0.00") & " % ) ")
                End If

                Dim _dtTimeWorkOutSite As DataTable
                _OutSIn1 = ""
                _OutSOut1 = ""
                _OutSIn2 = ""
                _OutSOut2 = ""

                '------------ตรวจสอบไป ปฏิบัติงานนอกสถานที่------------------------
                _Qry = "SELECT TOP 1 FTEndTime "
                _Qry &= vbCrLf & "   FROM   [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransWorkOffsite  With(Nolock)  "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID =" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "'  "
                _dtTimeWorkOutSite = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                If R!FTState.ToString <> "Y" Or (R!FTState.ToString = "Y" And _FTUseBarcode = "0") Or (_dtTimeWorkOutSite.Rows.Count > 0) Or (_StateEditTime = True) Then
                    '--------------------
                    _NotScan = 0 : _TotalScan = 0 : _TransComplete = 0 : _ActualRegisCard = -1 : _OriginalShift = _Shift : _WorkTimePerDay = 0 : _ScanCardOverClock = "" : _OTReq = 0

                    _EmployeeMoveShift = ""

                    _Qry = "  SELECT TOP 1  ISNULL(FNHSysShiftID,'')"
                    _Qry &= vbCrLf & "	 FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeMoveShift WITH(NOLOCK)"
                    _Qry &= vbCrLf & "	  WHERE FNHSysEmpID =" & Val(_EmpCode) & ""
                    _Qry &= vbCrLf & "	   AND FDShiftDate='" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "'"

                    _EmployeeMoveShift = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")
                    If _EmployeeMoveShift <> "" Then _Shift = _EmployeeMoveShift


                    '---- กรณีไม่มีการกำหนดวันหยุดประจำสัปดาห์ของพนักงาน ให้ มองที่ กะ
                    If _GetWeekend.Rows.Count <= 0 Then
                        '_Qry = "   SELECT    FTSunday, FTMonday, FTTuesday, FTWednesday, FTThursday, FTFriday,"
                        '_Qry &= vbCrLf & "    FTSaturday "
                        '_Qry &= vbCrLf & "  FROM            THRMTimeShift  As W WITH(NOLOCK)  "
                        '_Qry &= vbCrLf & " WHERE FNHSysShiftID =" & Val(_Shift) & " "
                        '_GetWeekend = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                    '---- กรณีไม่มีการกำหนดวันหยุดประจำสัปดาห์ของพนักงาน ให้ มองที่ กะ

                    '------------------step 5 Get Time Ctl ----------------' 	   
                    _ScanCardOverClock = "" : _CheckTimeMIn = "" : _CheckTimeMOut = "" : _CheckTimeAIn = "" : _CheckTimeAOut = "" : _WorkTimePerDay = 0
                    _CheckTimeMInS = "" : _CheckTimeMInE = "" : _CheckTimeMOutS = "" : _CheckTimeMOutE = "" : _CheckTimeAInS = "" : _CheckTimeAInE = "" : _CheckTimeAOutS = "" : _CheckTimeAOutE = ""

                    For Each Dr As DataRow In _THRMTimeControl.Select("FNHSysShiftID =" & Val(_Shift) & "  ")

                        _ScanCardOverClock = Dr!FTOverClock.ToString
                        _CheckTimeMIn = Dr!ChkIn1.ToString
                        _CheckTimeMOut = Dr!ChkOut1.ToString
                        _CheckTimeAIn = Dr!ChkIn2.ToString
                        _CheckTimeAOut = Dr!ChkOut2.ToString

                        _CheckTimeMInS = Dr!ChkIn1S.ToString
                        _CheckTimeMInE = Dr!ChkIn1E.ToString

                        _CheckTimeMOutS = Dr!ChkOut1S.ToString
                        _CheckTimeMOutE = Dr!ChkOut1E.ToString

                        _CheckTimeAInS = Dr!ChkIn2S.ToString
                        _CheckTimeAInE = Dr!ChkIn2E.ToString

                        _CheckTimeAOutS = Dr!ChkOut2S.ToString
                        _CheckTimeAOutE = Dr!ChkOut2E.ToString

                        _WorkTimePerDay = Val(Dr!WorkTimePerDay.ToString)

                    Next


                    '------------------step 2 Get Regis Trans ----------------'
                    _ActualScanMIn = "" : _ActualScanMOut = "" : _ActualScanAIn = ""
                    _ActualScanAOut = "" : _ActualScanOTIn1 = "" : _ActualScanOTOut1 = ""
                    _TmpScanIn = "" : _TmpScanOut = ""
                    _ActualScanOTIn2 = "" : _ActualScanOTOut2 = "" : FTScanMIn = ""
                    FTScanMOut = "" : FTScanAIn = "" : FTScanAOut = "" : FTScanAOTIn = ""
                    FTScanAOTOut = "" : FTScanAOTIn2 = "" : FTScanAOTOut2 = ""
                    _ActualScanOTInM = ""
                    _ActualScanOTOutM = ""

                    FTScanOTMInM = ""
                    FTScanOTMOutM = ""

                    FTScanMInM = "" : FTScanMOutM = ""
                    FTScanAInM = "" : FTScanAOutM = ""
                    FTScanAOTInM = "" : FTScanAOTOutM = ""

                    _ScanTimeOverClock = Right(_ScanCardOverClock, 5)

                    _StartDateTimeTransfer = _DateTransfer & "  " & _ScanTimeOverClock

                    _Qry = " SELECT  TOP 1 "

                    _Qry &= vbCrLf & "CASE WHEN ISNULL(FTIn1,'') <> '' THEN  (CASE WHEN FTIn1 >='00:00' AND FTIn1<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTIn1  ELSE '' END AS FTIn1 "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOut1,'') <> '' THEN  (CASE WHEN FTOut1 >='00:00' AND FTOut1<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOut1  ELSE '' END AS FTOut1 "

                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTIn2,'') <> '' THEN  (CASE WHEN FTIn2 >='00:00' AND FTIn2<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTIn2  ELSE '' END AS FTIn2 "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOut2,'') <> '' THEN  (CASE WHEN FTOut2 >='00:00' AND FTOut2<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOut2  ELSE '' END AS FTOut2 "

                    'OT หลังเลิกงานชวงที่ 1
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTIn3,'') <> '' THEN  (CASE WHEN FTIn3 >='00:00' AND FTIn3<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTIn3  ELSE '' END AS FTIn3 "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOut3,'') <> '' THEN  (CASE WHEN FTOut3 >='00:00' AND FTOut3<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOut3  ELSE '' END AS FTOut3 "

                    'OT หลังเลิกงานเข้างานชวงที่ 2
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTIn4,'') <> '' THEN  (CASE WHEN FTIn4 >='00:00' AND FTIn4<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTIn4  ELSE '' END AS FTIn4 "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOut4,'') <> '' THEN  (CASE WHEN FTOut4 >='00:00' AND FTOut4<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOut4  ELSE '' END AS FTOut4 "

                    '-------Scan จริง-----------------------------

                    'เข้างานเช้า
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanMIn,'') <> '' THEN  (CASE WHEN FTScanMIn >='00:00' AND FTScanMIn<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTScanMIn  ELSE '' END AS FTScanMIn "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanMOut,'') <> '' THEN  (CASE WHEN FTScanMOut >='00:00' AND FTScanMOut<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTScanMOut  ELSE '' END AS FTScanMOut "

                    'เข้างานบ่าย
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanAIn,'') <> '' THEN  (CASE WHEN FTScanAIn >='00:00' AND FTScanAIn<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTScanAIn  ELSE '' END AS FTScanAIn "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanAOut,'') <> '' THEN  (CASE WHEN FTScanAOut >='00:00' AND FTScanAOut<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTScanAOut  ELSE '' END AS FTScanAOut "

                    'OT หลังเลิกงานชวงที่ 1
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanAOTIn,'') <> '' THEN  (CASE WHEN FTScanAOTIn >='00:00' AND FTScanAOTIn<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' +  Right('00000' + FTScanAOTIn,5)  ELSE '' END AS FTScanAOTIn "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanAOTOut,'') <> '' THEN  (CASE WHEN FTScanAOTOut >='00:00' AND FTScanAOTOut<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + Right('00000' +FTScanAOTOut,5)  ELSE '' END AS FTScanAOTOut "

                    'OT หลังเลิกงานชวงที่ 2
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanAOTIn2,'') <> '' THEN  (CASE WHEN FTScanAOTIn2 >='00:00' AND FTScanAOTIn2<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + Right('00000' +FTScanAOTIn2,5)  ELSE '' END AS FTScanAOTIn2 "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanAOTOut2,'') <> '' THEN  (CASE WHEN FTScanAOTOut2 >='00:00' AND FTScanAOTOut2<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + Right('00000' +FTScanAOTOut2,5)  ELSE '' END AS FTScanAOTOut2 "

                    'Manual Time เข้างานเช้า
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanMInM,'') <> '' THEN  (CASE WHEN FTScanMInM >='00:00' AND FTScanMInM<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTScanMInM  ELSE '' END AS FTScanMInM "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanMOutM,'') <> '' THEN  (CASE WHEN FTScanMOutM >='00:00' AND FTScanMOutM<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTScanMOutM  ELSE '' END AS FTScanMOutM "

                    'Manual Time เข้างานบ่าย
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanAInM,'') <> '' THEN  (CASE WHEN FTScanAInM >='00:00' AND FTScanAInM<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTScanAInM  ELSE '' END AS FTScanAInM "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanAOutM,'') <> '' THEN  (CASE WHEN FTScanAOutM >='00:00' AND FTScanAOutM<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTScanAOutM  ELSE '' END AS FTScanAOutM "

                    'Manual Time OT หลังเลิกงานชวงที่ 
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanAOTInM,'') <> '' THEN  (CASE WHEN FTScanAOTInM >='00:00' AND FTScanAOTInM<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' +  Right('00000' + FTScanAOTInM,5)  ELSE '' END AS FTScanAOTInM "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanAOTOutM,'') <> '' THEN  (CASE WHEN FTScanAOTOutM >='00:00' AND FTScanAOTOutM<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + Right('00000' +FTScanAOTOutM,5)  ELSE '' END AS FTScanAOTOutM "

                    'Manual Time OT ก่อนเข้างาน 
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanOtMInM,'') <> '' THEN  (CASE WHEN FTScanOtMInM >='00:00' AND FTScanOtMInM<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' +  Right('00000' + FTScanOtMInM,5)  ELSE '' END AS FTScanOtMInM "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTScanOtMOutM,'') <> '' THEN  (CASE WHEN FTScanOtMOutM >='00:00' AND FTScanOtMOutM<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + Right('00000' +FTScanOtMOutM,5)  ELSE '' END AS FTScanOtMOutM "

                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOtMIn,'') <> '' THEN  (CASE WHEN FTOtMIn >='00:00' AND FTOtMIn<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOtMIn  ELSE '' END AS FTOtMIn "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOtMOut,'') <> '' THEN  (CASE WHEN FTOtMOut >='00:00' AND FTOtMOut<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOtMOut  ELSE '' END AS FTOtMOut "

                    _Qry &= vbCrLf & "	FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans WITH(NOLOCK)"
                    _Qry &= vbCrLf & "  WHERE (FNHSysEmpID =" & Val(_EmpCode) & ") "
                    _Qry &= vbCrLf & "   AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' "

                    _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    _ActualRegisCard = -1

                    For Each Dr As DataRow In _dt.Rows

                        _ActualScanMIn = Right(Dr!FTIn1.ToString, 5)
                        _ActualScanMOut = Right(Dr!FTOut1.ToString, 5)
                        _ActualScanAIn = Right(Dr!FTIn2.ToString, 5)
                        _ActualScanAOut = Right(Dr!FTOut2.ToString, 5)
                        _ActualScanOTIn1 = Right(Dr!FTIn3.ToString, 5)
                        _ActualScanOTOut1 = Right(Dr!FTOut3.ToString, 5)

                        _ActualScanOTIn2 = Right(Dr!FTIn4.ToString, 5)
                        _ActualScanOTOut2 = Right(Dr!FTOut4.ToString, 5)

                        _ActualScanOTInM = Right(Dr!FTOtMIn.ToString, 5)
                        _ActualScanOTOutM = Right(Dr!FTOtMOut.ToString, 5)

                        'FTScanMIn = Dr!FTScanMIn.ToString
                        'FTScanMOut = Dr!FTScanMOut.ToString
                        'FTScanAIn = Dr!FTScanAIn.ToString
                        'FTScanAOut = Dr!FTScanAOut.ToString
                        'FTScanAOTIn = Dr!FTScanAOTIn.ToString
                        'FTScanAOTOut = Dr!FTScanAOTOut.ToString
                        'FTScanAOTIn2 = Dr!FTScanAOTIn2.ToString
                        'FTScanAOTOut2 = Dr!FTScanAOTOut2.ToString

                        FTScanMInM = Dr!FTScanMInM.ToString
                        FTScanMOutM = Dr!FTScanMOutM.ToString
                        FTScanAInM = Dr!FTScanAInM.ToString
                        FTScanAOutM = Dr!FTScanAOutM.ToString
                        FTScanAOTInM = Dr!FTScanAOTInM.ToString
                        FTScanAOTOutM = Dr!FTScanAOTOutM.ToString

                        FTScanOTMInM = Dr!FTScanOtMInM.ToString
                        FTScanOTMOutM = Dr!FTScanOtMOutM.ToString

                        _ActualRegisCard = 1

                    Next
                    '------------------step 2 Get Regis Trans ----------------'

                    '----------------  OT REQUEST  ------------------------------- 
                    _OTRequest = 0 : _CheckTimeOTIn1 = "" : _CheckTimeOTOut1 = "" : _CheckTimeOTIn2 = "" : _CheckTimeOTOut2 = ""
                    _FTOtMIn = ""
                    _FTOtMOut = ""
                    FTScanOTMIn = ""
                    FTScanOTMOut = ""

                    _Qry = "    SELECT   TOP 1  ISNULL(FNOtTotalTimeMinute ,0) +ISNULL(FNOtTotalTimeMinute2 ,0)   AS OTRequest"

                    '--------OT หลังเลิกงานช่วงที่ 1
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOtIn,'') <> '' THEN  (CASE WHEN FTOtIn >='00:00' AND FTOtIn<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOtIn  ELSE '' END AS SOTRequest "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOtOut,'') <> '' THEN  (CASE WHEN FTOtOut >='00:00' AND FTOtOut<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOtOut  ELSE '' END AS EOTRequest "
                    _Qry &= vbCrLf & "  ,CASE WHEN ISNULL(FTApproveState,'') ='1' Then 'Y' Else 'N' END AS FTAppOT "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOtIn,'') <> '' THEN  (CASE WHEN FTOtIn >='00:00' AND FTOtIn<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOtIn  ELSE '' END AS ChkIn3 "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOtOut,'') <> '' THEN  (CASE WHEN FTOtOut >='00:00' AND FTOtOut<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOtOut  ELSE '' END AS ChkOut3 "

                    '--------OT หลังเลิกงานช่วงที่ 2 
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOtIn3,'') <> '' THEN  (CASE WHEN FTOtIn3 >='00:00' AND FTOtIn3<'" & _ScanTimeOverClock & "' THEN  '" & _ActualDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOtIn3  ELSE '' END AS SOTRequest3 "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOtOut3,'') <> '' THEN  (CASE WHEN FTOtOut3 >='00:00' AND FTOtOut3<'" & _ScanTimeOverClock & "' THEN  '" & _ActualDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOtOut3  ELSE '' END AS EOTRequest3 "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOtIn3,'') <> '' THEN  (CASE WHEN FTOtIn3 >='00:00' AND FTOtIn3<'" & _ScanTimeOverClock & "' THEN  '" & _ActualDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOtIn3  ELSE '' END AS ChkIn33 "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOtOut3,'') <> '' THEN  (CASE WHEN FTOtOut3 >='00:00' AND FTOtOut3<'" & _ScanTimeOverClock & "' THEN  '" & _ActualDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOtOut3  ELSE '' END AS ChkOut33 "


                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOtMIn,'') <> '' THEN  (CASE WHEN FTOtMIn >='00:00' AND FTOtMIn<'" & _ScanTimeOverClock & "' THEN  '" & _ActualDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOtMIn  ELSE '' END AS FTOtMIn "
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(FTOtMOut,'') <> '' THEN  (CASE WHEN FTOtMOut >='00:00' AND FTOtMOut<'" & _ScanTimeOverClock & "' THEN  '" & _ActualDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + FTOtMOut  ELSE '' END AS FTOtMOut "

                    _Qry &= vbCrLf & " 	FROM     [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTDailyOTRequest AS O WITH (NOLOCK) "
                    _Qry &= vbCrLf & "  WHERE (FTDateRequest = '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "') "
                    _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ") "

                    _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                    For Each Dr As DataRow In _dt.Rows

                        _OTRequest = Val(Dr!OTRequest.ToString)
                        _CheckTimeOTIn1 = Dr!SOTRequest.ToString
                        _CheckTimeOTOut1 = Dr!EOTRequest.ToString

                        _CheckTimeOTIn2 = Dr!SOTRequest3.ToString
                        _CheckTimeOTOut2 = Dr!EOTRequest3.ToString

                        If _CheckTimeOTIn1 < _CheckTimeAOut Then
                            _CheckTimeOTIn1 = ""
                            _CheckTimeOTOut1 = ""
                        End If

                        If _CheckTimeOTIn2 < _CheckTimeOTOut1 Then
                            _CheckTimeOTIn2 = ""
                            _CheckTimeOTOut2 = ""
                        End If

                        _FTOtMIn = Dr!FTOtMIn.ToString
                        _FTOtMOut = Dr!FTOtMOut.ToString

                        If _FTOtMOut < _FTOtMIn And _FTOtMOut <> "" And _FTOtMIn <> "" Then

                            _FTOtMIn = ""
                            _FTOtMOut = ""

                        End If

                    Next
                    '----------------  OT REQUEST  ------------------------------- 

                    '------------ตรวจสอบไป ปฏิบัติงานนอกสถานที่------------------------
                    _Qry = "SELECT  FNHSysEmpID,CASE WHEN ISNULL(MIN(FTStartTime) ,'') <> '' THEN  (CASE WHEN MIN(FTStartTime)  >='00:00' AND MIN(FTStartTime)<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + MIN(FTStartTime)   ELSE '' END AS FTStartTime"
                    _Qry &= vbCrLf & ",CASE WHEN ISNULL(Max(FTEndTime),'') <> '' THEN  (CASE WHEN Max(FTEndTime) >='00:00' AND Max(FTEndTime)<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + Max(FTEndTime)  ELSE '' END AS  FTEndTime FROM  THRTTransWorkOffsite  With(Nolock)  "
                    _Qry &= vbCrLf & " WHERE FNHSysEmpID =" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "'  "
                    _Qry &= vbCrLf & " GROUP BY FNHSysEmpID "
                    _dtTimeWorkOutSite = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                    For Each Rax As DataRow In _dtTimeWorkOutSite.Rows

                        Try

                            Dim number As Integer = _Rand.Next(1, 15)
                            Dim number2 As Integer = _Rand.Next(1, 15)
                            Dim number3 As Integer = _Rand.Next(1, 15)
                            Dim number4 As Integer = _Rand.Next(1, 15)
                            Dim Hour As String = ""

                            If Rax!FTStartTime.ToString <= _CheckTimeMIn Then
                                Hour = Format(CDate(_CheckTimeMIn).AddMinutes(-number), "HH:mm")
                                _OutSIn1 = Left(_CheckTimeMIn, _CheckTimeMIn.Length - 5) & Hour
                            ElseIf Rax!FTStartTime.ToString <= _CheckTimeMIn Then
                                Hour = Format(CDate(Rax!FTStartTime.ToString).AddMinutes(0), "HH:mm")
                                _OutSIn1 = Left(_CheckTimeMIn, _CheckTimeMIn.Length - 5) & Hour
                            End If

                            If Rax!FTStartTime.ToString <= _CheckTimeMOut And Rax!FTEndTime.ToString >= _CheckTimeMOut Then
                                Hour = Format(CDate(_CheckTimeMOut).AddMinutes(number2), "HH:mm")
                                _OutSOut1 = Left(_CheckTimeMOut, _CheckTimeMOut.Length - 5) & Hour
                            Else
                                If Rax!FTStartTime.ToString <= _CheckTimeMOut And Rax!FTEndTime.ToString < _CheckTimeMOut Then
                                    Hour = Format(CDate(_CheckTimeMOut).AddMinutes(0), "HH:mm")
                                    _OutSOut1 = Left(_CheckTimeMOut, _CheckTimeMOut.Length - 5) & Hour
                                End If
                            End If

                            If Rax!FTStartTime.ToString <= _CheckTimeAIn And Rax!FTEndTime.ToString > _CheckTimeAIn Then
                                Hour = Format(CDate(_CheckTimeAIn).AddMinutes(-number3), "HH:mm")
                                _OutSIn2 = Left(_CheckTimeAIn, _CheckTimeAIn.Length - 5) & Hour
                            ElseIf Rax!FTStartTime.ToString > _CheckTimeAIn And Rax!FTStartTime.ToString < _CheckTimeAOut Then

                                Hour = Format(CDate(Rax!FTStartTime.ToString).AddMinutes(0), "HH:mm")
                                _OutSIn2 = Left(_CheckTimeAIn, _CheckTimeAIn.Length - 5) & Hour
                            End If

                            If Rax!FTEndTime.ToString >= _CheckTimeAOut Then
                                Hour = Format(CDate(_CheckTimeAOut).AddMinutes(number4), "HH:mm")
                                _OutSOut2 = Left(_CheckTimeAOut, _CheckTimeAOut.Length - 5) & Hour
                            ElseIf Rax!FTEndTime.ToString > _CheckTimeAIn And Rax!FTEndTime.ToString < _CheckTimeAOut Then
                                Hour = Format(CDate(Rax!FTEndTime.ToString).AddMinutes(0), "HH:mm")
                                _OutSOut2 = Left(_CheckTimeAOut, _CheckTimeAOut.Length - 5) & Hour
                            End If

                            If Rax!FTStartTime.ToString <= FTScanAOTIn And Rax!FTEndTime.ToString >= _CheckTimeOTOut1 Then
                                FTScanAOTIn = _CheckTimeOTIn1
                                FTScanAOTOut = _CheckTimeOTOut1
                            ElseIf Rax!FTStartTime.ToString <= FTScanAOTIn And Rax!FTEndTime.ToString >= _CheckTimeOTOut1 Then
                                FTScanAOTIn = _CheckTimeOTIn1
                                FTScanAOTOut = Rax!FTEndTime.ToString
                            End If

                            If Rax!FTStartTime.ToString <= FTScanAOTIn2 And Rax!FTEndTime.ToString >= _CheckTimeOTOut2 Then
                                FTScanAOTIn2 = _CheckTimeOTIn2
                                FTScanAOTOut2 = _CheckTimeOTOut2
                            ElseIf Rax!FTStartTime.ToString <= FTScanAOTIn2 And Rax!FTEndTime.ToString < _CheckTimeOTOut2 And Rax!FTEndTime.ToString > FTScanAOTOut Then
                                FTScanAOTIn2 = _CheckTimeOTIn2
                                FTScanAOTOut2 = Rax!FTEndTime.ToString
                            End If

                        Catch ex As Exception
                        End Try

                    Next

                    '------------ตรวจสอบไป ปฏิบัติงานนอกสถานที่------------------------

                    ' If FNHSysEmpID = 0 Then
                    If _Scan >= 0 And _CheckTimeMIn <> "" And _FTUseBarcode = "0" And R!FTState.ToString = "Y" And _SPDateType = 0 Then

                        _Qry = "Select Top 1 FNHSysEmpID "
                        _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTLeaveAdvanceDaily AS A WITH(NOLOCK)"
                        _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                        _Qry &= vbCrLf & " AND FTStartDate<='" & _DateTransfer & "'"
                        _Qry &= vbCrLf & " AND FTEndDate>='" & _DateTransfer & "'"

                        If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") = "" Then
                            Try

                                If _DateTransfer = "2015/02/21" Then
                                    Beep()
                                End If

                                Dim number As Integer = _Rand.Next(1, 15)
                                Dim number2 As Integer = _Rand.Next(1, 15)
                                Dim number3 As Integer = _Rand.Next(1, 15)
                                Dim number4 As Integer = _Rand.Next(1, 15)
                                Dim Hour As String = ""
                                Hour = Format(CDate(_CheckTimeMIn).AddMinutes(-number), "HH:mm")
                                FTScanMIn = Left(_CheckTimeMIn, _CheckTimeMIn.Length - 5) & Hour

                                Hour = Format(CDate(_CheckTimeMOut).AddMinutes(number2), "HH:mm")
                                FTScanMOut = Left(_CheckTimeMOut, _CheckTimeMOut.Length - 5) & Hour

                                Hour = Format(CDate(_CheckTimeAIn).AddMinutes(-number3), "HH:mm")
                                FTScanAIn = Left(_CheckTimeAIn, _CheckTimeAIn.Length - 5) & Hour

                                Hour = Format(CDate(_CheckTimeAOut).AddMinutes(number4), "HH:mm")
                                FTScanAOut = Left(_CheckTimeAOut, _CheckTimeAOut.Length - 5) & Hour

                                FTScanAOTIn = _CheckTimeOTIn1
                                FTScanAOTOut = _CheckTimeOTOut1
                                FTScanAOTIn2 = _CheckTimeOTIn2
                                FTScanAOTOut2 = _CheckTimeOTOut2

                            Catch ex As Exception

                                FTScanMIn = _CheckTimeMIn
                                FTScanMOut = _CheckTimeMOut
                                FTScanAIn = _CheckTimeAIn
                                FTScanAOut = _CheckTimeAOut

                                FTScanAOTIn = _CheckTimeOTIn1
                                FTScanAOTOut = _CheckTimeOTOut1
                                FTScanAOTIn2 = _CheckTimeOTIn2
                                FTScanAOTOut2 = _CheckTimeOTOut2

                            End Try
                        End If

                    End If
                    'End If

                    _ActualTime = ""

                    If (_Scan >= 0 And _CheckTimeMIn <> "" And _FTUseBarcode = "1" And R!FTState.ToString <> "Y") Or (_Scan >= 0 And _CheckTimeMIn <> "" And _FTUseBarcode = "0" And R!FTState.ToString <> "Y") Or (_Scan >= 0 And _CheckTimeMIn <> "" And _FTUseBarcode = "0" And R!FTState.ToString = "Y") Or (_OutSIn1 <> "" Or _OutSOut1 <> "" Or _OutSIn2 <> "" Or _OutSOut2 <> "") Or (R!FTState.ToString = "Y" And _StateEditTime = True) Then


                        If FNHSysEmpID = 0 Then

                            _Qry = " SELECT TTrans FROM (SELECT   CASE WHEN ISNULL(TTrans,'') <> '' THEN  (CASE WHEN TTrans >='00:00' AND TTrans<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + TTrans  ELSE '' END  AS  TTrans "
                            _Qry &= vbCrLf & "  FROM ( SELECT   (LEFT(TTrans,2) +':' +  RIGHT(TTrans,2)) AS TTrans  FROM  ( SELECT  TOP 30  "
                            _Qry &= vbCrLf & "  RIGHT('0000' +  FTTimeTrans,4) As TTrans"
                            _Qry &= vbCrLf & " FROM         [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTimecard WITH (NOLOCK)"
                            ' _Qry &= vbCrLf & "  WHERE (FTDateTrans = '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "')"
                            '_Qry &= vbCrLf & "  AND (FTEmpBarcode ='" & HI.UL.ULF.rpQuoted(_EmpBarcode) & "') "
                            _Qry &= vbCrLf & "  WHERE (FTEmpBarcode ='" & HI.UL.ULF.rpQuoted(_EmpBarcode) & "') "
                            _Qry &= vbCrLf & "  AND  (ISNULL(FNHSysCmpId,0) = 0 OR  FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"
                            _Qry &= vbCrLf & "  AND (FTDateScan + '  ' + FTTimeTrans >= '" & _StartDateTimeTransfer & "'  AND  FTDateScan + '  ' + FTTimeTrans < Convert(varchar(10),DateAdd(Day,1, Convert(Datetime,'" & _StartDateTimeTransfer & "')),111) +'  ' + Convert(varchar(5),DateAdd(Day,1, Convert(Datetime,'" & _StartDateTimeTransfer & "')),114)  )"
                            _Qry &= vbCrLf & "  GROUP BY  RIGHT('0000' +  FTTimeTrans,4) "
                            _Qry &= vbCrLf & "  UNION  Select "
                            _Qry &= vbCrLf & "  RIGHT('0000' +  FTTimeTrans,4) As TTrans"
                            _Qry &= vbCrLf & " FROM         [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTimecardHistory WITH (NOLOCK)"
                            ' _Qry &= vbCrLf & "  WHERE (FTDateTrans = '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "')"
                            _Qry &= vbCrLf & "  WHERE (FTEmpBarcode ='" & HI.UL.ULF.rpQuoted(_EmpBarcode) & "') "
                            _Qry &= vbCrLf & "  AND  (ISNULL(FNHSysCmpId,0) = 0 OR  FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"
                            _Qry &= vbCrLf & "  AND (FTDateTrans + '  ' + FTTimeTrans >= '" & _StartDateTimeTransfer & "'  AND  FTDateTrans + '  ' + FTTimeTrans < Convert(varchar(10),DateAdd(Day,1, Convert(Datetime,'" & _StartDateTimeTransfer & "')),111) +'  ' + Convert(varchar(5),DateAdd(Day,1, Convert(Datetime,'" & _StartDateTimeTransfer & "')),114)  )"
                            _Qry &= vbCrLf & "  GROUP BY   RIGHT('0000' +  FTTimeTrans,4)"
                            _Qry &= vbCrLf & "  ) AS A ) AS B ) AS C "
                            _Qry &= vbCrLf & " ORDER BY TTrans  "

                        Else

                            _Qry = " SELECT TTrans FROM (SELECT   CASE WHEN ISNULL(TTrans,'') <> '' THEN  (CASE WHEN TTrans >='00:00' AND TTrans<'" & _ScanTimeOverClock & "' THEN  '" & _ActualNextDate & "' ELSE '" & _ActualDate & "'  END)  + '  ' + TTrans  ELSE '' END  AS  TTrans "
                            _Qry &= vbCrLf & "  FROM ( SELECT   (LEFT(TTrans,2) +':' +  RIGHT(TTrans,2)) AS TTrans  FROM  ( "
                            _Qry &= vbCrLf & "  Select "
                            _Qry &= vbCrLf & "  RIGHT('0000' +  FTTimeTrans,4) As TTrans"
                            _Qry &= vbCrLf & " FROM         [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTimecardHistory WITH (NOLOCK)"
                            '_Qry &= vbCrLf & "  WHERE (FTDateTrans = '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "')"
                            _Qry &= vbCrLf & "  WHERE (FTEmpBarcode ='" & HI.UL.ULF.rpQuoted(_EmpBarcode) & "') "
                            _Qry &= vbCrLf & "  AND  (ISNULL(FNHSysCmpId,0) = 0 OR  FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"
                            '_Qry &= vbCrLf & "  AND (FTDateTrans = '" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "')"
                            _Qry &= vbCrLf & "  AND (FTDateTrans + '  ' + FTTimeTrans >= '" & _StartDateTimeTransfer & "'  AND  FTDateTrans + '  ' + FTTimeTrans < Convert(varchar(10),DateAdd(Day,1, Convert(Datetime,'" & _StartDateTimeTransfer & "')),111) +'  ' + Convert(varchar(5),DateAdd(Day,1, Convert(Datetime,'" & _StartDateTimeTransfer & "')),114)  )"
                            _Qry &= vbCrLf & "  GROUP BY   RIGHT('0000' +  FTTimeTrans,4)"
                            _Qry &= vbCrLf & "  ) AS A ) AS B ) AS C "
                            _Qry &= vbCrLf & " ORDER BY TTrans  "

                        End If

                        _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        If _OutSIn1 <> "" Then
                            _dt.Rows.Add(_OutSIn1)
                        End If

                        If _OutSOut1 <> "" Then
                            _dt.Rows.Add(_OutSOut1)
                        End If

                        If _OutSIn2 <> "" Then
                            _dt.Rows.Add(_OutSIn2)
                        End If

                        If _OutSOut2 <> "" Then
                            _dt.Rows.Add(_OutSOut2)
                        End If

                        Dim _Found As Boolean = False

                        Select Case _Scan
                            Case 0

                                Call ScanTwoTime(_dt, _ActualScanMIn, _ActualScanMOut,
                                         _ActualScanAIn, _ActualScanAOut, _ActualScanOTIn1, _ActualScanOTOut1,
                                          _ActualScanOTIn2, _ActualScanOTOut2, FTScanMIn,
                                         FTScanMOut, FTScanAIn, FTScanAOut, FTScanAOTIn,
                                         FTScanAOTOut, FTScanAOTIn2, FTScanAOTOut2,
                                         _CheckTimeMIn, _CheckTimeMOut, _CheckTimeAIn, _CheckTimeAOut, _CheckTimeOTIn1, _CheckTimeOTOut1, _CheckTimeOTIn2, _CheckTimeOTOut2, _ScanCardOverClock, _ScanTimeOverClock, _ActualNextDate, _ActualDate, _TmpScanIn, _TmpScanOut,
                                         _CheckTimeMInS, _CheckTimeMInE, _CheckTimeMOutS, _CheckTimeMOutE, _CheckTimeAInS, _CheckTimeAInE, _CheckTimeAOutS, _CheckTimeAOutE, FTScanMInM, FTScanMOutM, FTScanAInM, FTScanAOutM, FTScanAOTInM, FTScanAOTOutM)

                            Case 1

                                'Call ScanFourTime(_dt, _ActualScanMIn, _ActualScanMOut,
                                '         _ActualScanAIn, _ActualScanAOut, _ActualScanOTIn1, _ActualScanOTOut1,
                                '          _ActualScanOTIn2, _ActualScanOTOut2, FTScanMIn,
                                '         FTScanMOut, FTScanAIn, FTScanAOut, FTScanAOTIn,
                                '         FTScanAOTOut, FTScanAOTIn2, FTScanAOTOut2,
                                '         _CheckTimeMIn, _CheckTimeMOut, _CheckTimeAIn, _CheckTimeAOut, _CheckTimeOTIn1, _CheckTimeOTOut1, _CheckTimeOTIn2, _CheckTimeOTOut2, _ScanCardOverClock,
                                '         _ScanTimeOverClock, _ActualNextDate, _ActualDate, _TmpScanIn, _TmpScanOut, FTScanMInM, FTScanMOutM, FTScanAInM, FTScanAOutM, FTScanAOTInM, FTScanAOTOutM,
                                '         FTScanOTMInM, FTScanOTMOutM, _ActualScanOTInM, _ActualScanOTOutM, _FTOtMIn, _FTOtMOut)
                                'Call ScanFourTime(_dt, _ActualScanMIn, _ActualScanMOut,
                                '             _ActualScanAIn, _ActualScanAOut, _ActualScanOTIn1, _ActualScanOTOut1,
                                '              _ActualScanOTIn2, _ActualScanOTOut2, FTScanMIn,
                                '             FTScanMOut, FTScanAIn, FTScanAOut, FTScanAOTIn,
                                '             FTScanAOTOut, FTScanAOTIn2, FTScanAOTOut2,
                                '             _CheckTimeMIn, _CheckTimeMOut, _CheckTimeAIn, _CheckTimeAOut, _CheckTimeOTIn1, _CheckTimeOTOut1, _CheckTimeOTIn2, _CheckTimeOTOut2, _ScanCardOverClock,
                                '             _ScanTimeOverClock, _ActualNextDate, _ActualDate, _TmpScanIn, _TmpScanOut,
                                '             _CheckTimeMInS, _CheckTimeMInE, _CheckTimeMOutS, _CheckTimeMOutE, _CheckTimeAInS, _CheckTimeAInE, _CheckTimeAOutS, _CheckTimeAOutE,
                                '             FTScanMInM, FTScanMOutM, FTScanAInM, FTScanAOutM, FTScanAOTInM, FTScanAOTOutM,
                                '             FTScanOTMInM, FTScanOTMOutM, _ActualScanOTInM, _ActualScanOTOutM, _FTOtMIn, _FTOtMOut)


                                Call ScanFourTime(_dt, _ActualScanMIn, _ActualScanMOut,
                                             _ActualScanAIn, _ActualScanAOut, _ActualScanOTIn1, _ActualScanOTOut1,
                                              _ActualScanOTIn2, _ActualScanOTOut2, FTScanMIn,
                                             FTScanMOut, FTScanAIn, FTScanAOut, FTScanAOTIn,
                                             FTScanAOTOut, FTScanAOTIn2, FTScanAOTOut2,
                                             _CheckTimeMIn, _CheckTimeMOut, _CheckTimeAIn, _CheckTimeAOut, _CheckTimeOTIn1, _CheckTimeOTOut1, _CheckTimeOTIn2, _CheckTimeOTOut2, _ScanCardOverClock,
                                             _ScanTimeOverClock, _ActualNextDate, _ActualDate, _TmpScanIn, _TmpScanOut,
                                             _CheckTimeMInS, _CheckTimeMInE, _CheckTimeMOutS, _CheckTimeMOutE, _CheckTimeAInS, _CheckTimeAInE, _CheckTimeAOutS, _CheckTimeAOutE,
                                             FTScanMInM, FTScanMOutM, FTScanAInM, FTScanAOutM, FTScanAOTInM, FTScanAOTOutM,
                                             FTScanOTMInM, FTScanOTMOutM, _ActualScanOTInM, _ActualScanOTOutM, _FTOtMIn, _FTOtMOut)

                            Case 2


                                If _CheckTimeMInS <> "" And _CheckTimeMInE <> "" And _CheckTimeMOutS <> "" And _CheckTimeMOutE <> "" And _CheckTimeAInS <> "" And _CheckTimeAInE <> "" And _CheckTimeAOutS <> "" And _CheckTimeAOutE <> "" Then

                                    Call ScanSixTime(_dt, _ActualScanMIn, _ActualScanMOut,
                                             _ActualScanAIn, _ActualScanAOut, _ActualScanOTIn1, _ActualScanOTOut1,
                                              _ActualScanOTIn2, _ActualScanOTOut2, FTScanMIn,
                                             FTScanMOut, FTScanAIn, FTScanAOut, FTScanAOTIn,
                                             FTScanAOTOut, FTScanAOTIn2, FTScanAOTOut2,
                                             _CheckTimeMIn, _CheckTimeMOut, _CheckTimeAIn, _CheckTimeAOut, _CheckTimeOTIn1, _CheckTimeOTOut1, _CheckTimeOTIn2, _CheckTimeOTOut2, _ScanCardOverClock, _ScanTimeOverClock, _ActualNextDate, _ActualDate, _TmpScanIn, _TmpScanOut,
                                             _CheckTimeMInS, _CheckTimeMInE, _CheckTimeMOutS, _CheckTimeMOutE, _CheckTimeAInS, _CheckTimeAInE, _CheckTimeAOutS, _CheckTimeAOutE, FTScanMInM, FTScanMOutM, FTScanAInM, FTScanAOutM, FTScanAOTInM, FTScanAOTOutM,
                                         FTScanOTMInM, FTScanOTMOutM, _ActualScanOTInM, _ActualScanOTOutM, _FTOtMIn, _FTOtMOut)

                                Else

                                    Call ScanSixTime_NoMap(_dt, _ActualScanMIn, _ActualScanMOut,
                                             _ActualScanAIn, _ActualScanAOut, _ActualScanOTIn1, _ActualScanOTOut1,
                                              _ActualScanOTIn2, _ActualScanOTOut2, FTScanMIn,
                                             FTScanMOut, FTScanAIn, FTScanAOut, FTScanAOTIn,
                                             FTScanAOTOut, FTScanAOTIn2, FTScanAOTOut2,
                                             _CheckTimeMIn, _CheckTimeMOut, _CheckTimeAIn, _CheckTimeAOut, _CheckTimeOTIn1, _CheckTimeOTOut1,
                                             _CheckTimeOTIn2, _CheckTimeOTOut2, _ScanCardOverClock, _ScanTimeOverClock, _ActualNextDate, _ActualDate, _TmpScanIn, _TmpScanOut, FTScanMInM, FTScanMOutM, FTScanAInM, FTScanAOutM, FTScanAOTInM, FTScanAOTOutM,
                                         FTScanOTMInM, FTScanOTMOutM, _ActualScanOTInM, _ActualScanOTOutM, _FTOtMIn, _FTOtMOut)

                                End If

                        End Select

                        If _ActualScanMIn = _ActualScanMOut Then _ActualScanMOut = ""
                        If _ActualScanMIn = "" And _ActualScanMOut <> "" Then _ActualScanMIn = ""

                        If _ActualScanAIn = _ActualScanAOut Then _ActualScanAOut = ""
                        If _ActualScanAIn = "" And _ActualScanAOut <> "" Then _ActualScanAIn = ""

                        If _ActualScanOTIn1 = _ActualScanOTOut1 Then _ActualScanOTOut1 = ""
                        If _ActualScanOTIn1 = "" And _ActualScanOTOut1 <> "" Then _ActualScanOTIn1 = ""

                        If _ActualScanOTIn2 = _ActualScanOTOut2 Then _ActualScanOTOut2 = ""
                        If _ActualScanOTIn2 = "" And _ActualScanOTOut2 <> "" Then _ActualScanOTIn2 = ""

                        If FTScanMIn = FTScanMOut Then FTScanMOut = ""
                        If FTScanAIn = FTScanAOut Then FTScanAIn = ""
                        If FTScanAOTIn = FTScanAOTOut Then FTScanAOTOut = ""
                        If FTScanAOTIn2 = FTScanAOTOut2 Then FTScanAOTIn2 = ""

                        If _TmpScanIn = "" Or _TmpScanOut = "" Then

                            _ActualScanMOut = ""
                            _ActualScanAIn = ""
                            _ActualScanAOut = ""
                            _ActualScanOTIn1 = ""
                            _ActualScanOTOut1 = ""
                            _ActualScanOTIn2 = ""
                            _ActualScanOTOut2 = ""

                        End If

                        _TotalScan = 0
                        _NotScan = 0

                    Else

                        If _FTUseBarcode = "0" And _SPDateType = 0 Then

                            _ActualScanMIn = Right(_CheckTimeMIn, 5)
                            _ActualScanMOut = Right(_CheckTimeMOut, 5)
                            _ActualScanAIn = Right(_CheckTimeAIn, 5)
                            _ActualScanAOut = Right(_CheckTimeAOut, 5)
                            _ActualScanOTIn1 = Right(_CheckTimeOTIn1, 5)
                            _ActualScanOTOut1 = Right(_CheckTimeOTOut1, 5)
                            _ActualScanOTIn2 = Right(_CheckTimeOTIn2, 5)
                            _ActualScanOTOut2 = Right(_CheckTimeOTOut2, 5)

                            _NotScan = 0
                        End If

                    End If


                    If _ActualRegisCard > -1 Then

                        _Qry = "  UPDATE [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans"
                        _Qry &= vbCrLf & " SET  FTIn1='" & _ActualScanMIn & "'"
                        _Qry &= vbCrLf & " ,FTOut1='" & _ActualScanMOut & "'"
                        _Qry &= vbCrLf & " ,FTIn2='" & _ActualScanAIn & "'"
                        _Qry &= vbCrLf & " ,FTOut2='" & _ActualScanAOut & "'"
                        _Qry &= vbCrLf & " ,FTIn3='" & _ActualScanOTIn1 & "'"
                        _Qry &= vbCrLf & " ,FTOut3='" & _ActualScanOTOut1 & "'"
                        _Qry &= vbCrLf & " ,FTIn4='" & _ActualScanOTIn2 & "'"
                        _Qry &= vbCrLf & " ,FTOut4='" & _ActualScanOTOut2 & "'"
                        _Qry &= vbCrLf & " ,FTUpdUser ='" & HI.UL.ULF.rpQuoted(_User) & "' "
                        _Qry &= vbCrLf & " ,FTUpdDate = Convert(varchar(10),Getdate(),111)"
                        _Qry &= vbCrLf & " ,FTUpdTime =Convert(varchar(8),Getdate(),114)"
                        _Qry &= vbCrLf & " ,FNNotRegis =" & _NotScan & ""
                        _Qry &= vbCrLf & " ,FTStatusTr='A'"
                        _Qry &= vbCrLf & " ,FNHSysShiftIDOrg=" & Val(_OriginalShift) & " "
                        _Qry &= vbCrLf & " ,FNHSysShiftID=" & Val(_Shift) & " "
                        _Qry &= vbCrLf & " ,FNScanCtrl=" & _Scan & " "
                        _Qry &= vbCrLf & " ,FTWeekDay='" & _FTWeekDay & "'"
                        _Qry &= vbCrLf & " ,FTScanMIn='" & Right(FTScanMIn, 5) & "'"
                        _Qry &= vbCrLf & " ,FTScanMOut='" & Right(FTScanMOut, 5) & "'"
                        _Qry &= vbCrLf & " ,FTScanAIn='" & Right(FTScanAIn, 5) & "'"
                        _Qry &= vbCrLf & " ,FTScanAOut='" & Right(FTScanAOut, 5) & "'"
                        _Qry &= vbCrLf & " ,FTScanAOTIn='" & Right(FTScanAOTIn, 5) & "'"
                        _Qry &= vbCrLf & " ,FTScanAOTOut='" & Right(FTScanAOTOut, 5) & "'"
                        _Qry &= vbCrLf & " ,FTScanAOTIn2='" & Right(FTScanAOTIn2, 5) & "'"
                        _Qry &= vbCrLf & " ,FTScanAOTOut2='" & Right(FTScanAOTOut2, 5) & "'"
                        _Qry &= vbCrLf & " ,FTOtMIn='" & Right(FTScanOTMInM, 5) & "'"
                        _Qry &= vbCrLf & " ,FTOtMOut='" & Right(FTScanOTMOutM, 5) & "'"
                        _Qry &= vbCrLf & " ,FTScanOtMInM='" & Right(_ActualScanOTInM, 5) & "'"
                        _Qry &= vbCrLf & " ,FTScanOtMOutM='" & Right(_ActualScanOTOutM, 5) & "'"
                        _Qry &= vbCrLf & " ,FTScanOtMIn='" & Right(FTScanOTMInM, 5) & "'"
                        _Qry &= vbCrLf & " ,FTScanOtMOut='" & Right(FTScanOTMOutM, 5) & "'"
                        _Qry &= vbCrLf & " ,FNHSysEmpTypeId  =" & Val(_EmpType) & " "
                        _Qry &= vbCrLf & ",FTStateEditTime='0'"
                        _Qry &= vbCrLf & "  WHERE (FNHSysEmpID =" & Val(_EmpCode) & ")"
                        _Qry &= vbCrLf & "   AND FTDateTrans ='" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' "

                    Else

                        '------ INSERT NEW RECORD ---------------------
                        _Qry = "	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans (FTInsUser,FTInsDate,FTInsTime"
                        _Qry &= vbCrLf & " ,FNHSysEmpID,FTDateTrans,FNHSysShiftID"
                        _Qry &= vbCrLf & " ,FTIn1,FTOut1,FTIn2,FTOut2,FTIn3,FTOut3,FTIn4,FTOut4"
                        _Qry &= vbCrLf & " ,FTStatusTr,FNNotRegis,FNHSysShiftIDOrg,FNScanCtrl,FTWeekDay"
                        _Qry &= vbCrLf & " ,FNHSysEmpTypeId,FTCmpCodePullCard,FTStateEditTime"
                        _Qry &= vbCrLf & " ,FTScanMIn"
                        _Qry &= vbCrLf & " ,FTScanMOut"
                        _Qry &= vbCrLf & " ,FTScanAIn"
                        _Qry &= vbCrLf & " ,FTScanAOut"
                        _Qry &= vbCrLf & " ,FTScanAOTIn"
                        _Qry &= vbCrLf & " ,FTScanAOTOut"
                        _Qry &= vbCrLf & " ,FTScanAOTIn2"
                        _Qry &= vbCrLf & " ,FTScanAOTOut2"
                        _Qry &= vbCrLf & " ,FTOtMIn"
                        _Qry &= vbCrLf & " ,FTOtMOut"
                        _Qry &= vbCrLf & " ,FTScanOtMInM"
                        _Qry &= vbCrLf & " ,FTScanOtMOutM"
                        _Qry &= vbCrLf & " ,FTScanOtMIn"
                        _Qry &= vbCrLf & " ,FTScanOtMOut)"
                        _Qry &= vbCrLf & " SELECT '" & HI.UL.ULF.rpQuoted(_User) & "',Convert(varchar(10),Getdate(),111)"
                        _Qry &= vbCrLf & " 	,Convert(varchar(8),Getdate(),114)"
                        _Qry &= vbCrLf & " 	," & Val(_EmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "','" & _Shift & "' "
                        _Qry &= vbCrLf & " 	,'" & _ActualScanMIn & "' "
                        _Qry &= vbCrLf & " 	,'" & _ActualScanMOut & "'"
                        _Qry &= vbCrLf & " 	,'" & _ActualScanAIn & "' "
                        _Qry &= vbCrLf & " ,'" & _ActualScanAOut & "' "
                        _Qry &= vbCrLf & " ,'" & _ActualScanOTIn1 & "' "
                        _Qry &= vbCrLf & " ,'" & _ActualScanOTOut1 & "' "
                        _Qry &= vbCrLf & " ,'" & _ActualScanOTIn2 & "'"
                        _Qry &= vbCrLf & " ,'" & _ActualScanOTOut2 & "'"
                        _Qry &= vbCrLf & " , 'A'," & _NotScan & ",'" & _OriginalShift & "','" & _Scan & "' ,'" & _FTWeekDay & "' "
                        _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_EmpType) & "','','0' "
                        _Qry &= vbCrLf & " ,'" & Right(FTScanMIn, 5) & "'"
                        _Qry &= vbCrLf & " ,'" & Right(FTScanMOut, 5) & "'"
                        _Qry &= vbCrLf & " ,'" & Right(FTScanAIn, 5) & "'"
                        _Qry &= vbCrLf & " ,'" & Right(FTScanAOut, 5) & "'"
                        _Qry &= vbCrLf & " ,'" & Right(FTScanAOTIn, 5) & "'"
                        _Qry &= vbCrLf & " ,'" & Right(FTScanAOTOut, 5) & "'"
                        _Qry &= vbCrLf & " ,'" & Right(FTScanAOTIn2, 5) & "'"
                        _Qry &= vbCrLf & " ,'" & Right(FTScanAOTOut2, 5) & "'"
                        _Qry &= vbCrLf & " ,'" & Right(FTScanOTMInM, 5) & "'"
                        _Qry &= vbCrLf & " ,'" & Right(FTScanOTMOutM, 5) & "'"
                        _Qry &= vbCrLf & " ,'" & Right(_ActualScanOTInM, 5) & "'"
                        _Qry &= vbCrLf & " ,'" & Right(_ActualScanOTOutM, 5) & "'"
                        _Qry &= vbCrLf & " ,'" & Right(FTScanOTMInM, 5) & "'"
                        _Qry &= vbCrLf & " ,'" & Right(FTScanOTMOutM, 5) & "'"

                    End If

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    'If FNHSysEmpID = 0 Then

                    '    _Qry = "  	 INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTimecardHistory( FTInsUser, FTInsDate, FTInsTime,"
                    '    _Qry &= vbCrLf & " 	 FTDateTrans, FTTimeTrans, FTEmpBarcode, FTIdMac, FTCmpCode)"
                    '    _Qry &= vbCrLf & "  SELECT 	'" & HI.UL.ULF.rpQuoted(_User) & "',CONVERT(varchar(10),GETDATE(),111),CONVERT(varchar(8),GETDATE(),114)	"
                    '    _Qry &= vbCrLf & " ,FTDateScan,FTTimeTrans,	FTEmpBarcode,FTIdMac,FTCmpCode	 "
                    '    _Qry &= vbCrLf & "  FROM 	[" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTimecard WITH(NOLOCK)"
                    '    _Qry &= vbCrLf & "   WHERE (FTDateTrans ='" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "')"
                    '    _Qry &= vbCrLf & "   AND FTEmpBarcode='" & HI.UL.ULF.rpQuoted(_EmpBarcode) & "'"
                    '    _Qry &= vbCrLf & "   AND NOT(FTDateTrans +'|'+ FTTimeTrans  +'|'+ FTEmpBarcode IN"
                    '    _Qry &= vbCrLf & "("
                    '    _Qry &= vbCrLf & " SELECT FTDateTrans +'|'+ FTTimeTrans  +'|'+ FTEmpBarcode "
                    '    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTimecardHistory WITH(NOLOCK)"
                    '    _Qry &= vbCrLf & "   WHERE (FTDateTrans ='" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "')"
                    '    _Qry &= vbCrLf & "   AND FTEmpBarcode='" & HI.UL.ULF.rpQuoted(_EmpBarcode) & "'"
                    '    _Qry &= vbCrLf & "   )) "
                    '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    '    _Qry &= vbCrLf & " DELETE  FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTimecard "
                    '    _Qry &= vbCrLf & " WHERE FTInsUser ='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "' "
                    '    _Qry &= vbCrLf & " AND (FTDateTrans ='" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "')"
                    '    _Qry &= vbCrLf & " AND FTEmpBarcode='" & HI.UL.ULF.rpQuoted(_EmpBarcode) & "'"
                    '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    'End If


                    '-------- คำนวณเวลาทำงาน -------------------------------
                    CalculateWorkTime(_User, _EmpCode, _DateTransfer, _DateTransfer)
                    '-------- คำนวณเวลาทำงาน -------------------------------

                Else


                    _EmployeeMoveShift = ""

                    _Qry = "  SELECT TOP 1  ISNULL(FNHSysShiftID,'')"
                    _Qry &= vbCrLf & "	 FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeMoveShift WITH(NOLOCK)"
                    _Qry &= vbCrLf & "	  WHERE FNHSysEmpID ='" & HI.UL.ULF.rpQuoted(_EmpCode) & "'"
                    _Qry &= vbCrLf & "	   AND FDShiftDate='" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "'"

                    _EmployeeMoveShift = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")
                    If _EmployeeMoveShift <> "" Then

                        _OriginalShift = _Shift
                        _Shift = _EmployeeMoveShift

                        _Qry = "  UPDATE [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans"
                        _Qry &= vbCrLf & " SET FNHSysShiftIDOrg=" & Val(_OriginalShift) & " "
                        _Qry &= vbCrLf & " ,FNHSysShiftID=" & Val(_Shift) & " "


                        _Qry &= vbCrLf & "  WHERE (FNHSysEmpID =" & Val(_EmpCode) & ")"
                        _Qry &= vbCrLf & "   AND FTDateTrans ='" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "' "
                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                    _Qry = "SELECT TOP 1 ISNULL(FTDateTrans,'') FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans WITH(NOLOCK)"
                    _Qry &= vbCrLf & "   WHERE (FTDateTrans ='" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "')"
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & ""

                    If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") <> "" Then
                        '-------- คำนวณเวลาทำงาน -------------------------------
                        Call CalculateWorkTime(_User, _EmpCode, _DateTransfer, _DateTransfer)
                    Else


                        _Qry = "	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans (FTInsUser,FTInsDate,FTInsTime"
                        _Qry &= vbCrLf & " ,FNHSysEmpID,FTDateTrans,FNHSysShiftID"
                        _Qry &= vbCrLf & " ,FTIn1,FTOut1,FTIn2,FTOut2,FTIn3,FTOut3,FTIn4,FTOut4"
                        _Qry &= vbCrLf & " ,FTStatusTr,FNNotRegis,FNHSysShiftIDOrg,FNScanCtrl,FTWeekDay"
                        _Qry &= vbCrLf & " ,FNHSysEmpTypeId,FTCmpCodePullCard,FTStateEditTime"
                        _Qry &= vbCrLf & " ,FTScanMIn"
                        _Qry &= vbCrLf & " ,FTScanMOut"
                        _Qry &= vbCrLf & " ,FTScanAIn"
                        _Qry &= vbCrLf & " ,FTScanAOut"
                        _Qry &= vbCrLf & " ,FTScanAOTIn"
                        _Qry &= vbCrLf & " ,FTScanAOTOut"
                        _Qry &= vbCrLf & " ,FTScanAOTIn2"
                        _Qry &= vbCrLf & " ,FTScanAOTOut2)"
                        _Qry &= vbCrLf & "  	SELECT '" & HI.UL.ULF.rpQuoted(_User) & "',Convert(varchar(10),Getdate(),111)"
                        _Qry &= vbCrLf & " 	,Convert(varchar(8),Getdate(),114)"
                        _Qry &= vbCrLf & " 	," & Val(_EmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_DateTransfer) & "','" & _Shift & "' "
                        _Qry &= vbCrLf & " 	,'' "
                        _Qry &= vbCrLf & " 	,''"
                        _Qry &= vbCrLf & " 	,'' "
                        _Qry &= vbCrLf & " ,'' "
                        _Qry &= vbCrLf & " ,'' "
                        _Qry &= vbCrLf & " ,'' "
                        _Qry &= vbCrLf & " ,''"
                        _Qry &= vbCrLf & " ,''"
                        _Qry &= vbCrLf & " , 'A',0,'" & _Shift & "','" & _Scan & "' ,'" & _FTWeekDay & "' "
                        _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_EmpType) & "','','0' "
                        _Qry &= vbCrLf & " ,''"
                        _Qry &= vbCrLf & " ,''"
                        _Qry &= vbCrLf & " ,''"
                        _Qry &= vbCrLf & " ,''"
                        _Qry &= vbCrLf & " ,''"
                        _Qry &= vbCrLf & " ,''"
                        _Qry &= vbCrLf & " ,''"
                        _Qry &= vbCrLf & " ,''"

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Call CalculateWorkTime(_User, _EmpCode, _DateTransfer, _DateTransfer)
                    End If

                End If
            Catch ex As Exception

            End Try


        Next
        _THRMTimeControl.Dispose()

        If FNHSysEmpID = 0 Then
            DisposeObject()
        End If

        Return True
    End Function

    Public Shared Function CalculateWeekEnd(ByVal _User As String, ByVal _EmpCode As String,
          ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
          ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
          Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
          Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0, Optional FNStateSalaryType As Integer = 0, Optional FNWorkDayInWeek As Integer = 15, Optional FNWorkDayInMonth As Integer = 30) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim _Qry As String
        Dim _dt As DataTable
        Dim _dttemp As DataTable
        Dim _dttempdata As DataTable
        Dim _dttran As DataTable
        Dim _SalaryDevide As Integer = 0
        Dim FNVacationRetMin, FNVacationRetAmt As Double

        Dim _DtFin As New DataTable
        _DtFin.Columns.Add("FTFinCode", GetType(String))
        _DtFin.Columns.Add("FCTotalFinAmt", GetType(String))

        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTPaymentCode As String, _FTBankCode As String, _FNChildNotLearn As Double
        Dim _FCReduceDonate As Double, _FCLifeInsurance As Double
        Dim _FCLoanHouse As Double
        Dim _FCShare As Double, _FCReduceFather As Double, _FCReduceMother As Double
        Dim _FCReSpouseFather As Double, _FCReSpouseMother As Double, _FCReduceEducationSupport As Double, _FTMarryIncome As String
        Dim _FTCalSocialSta As String, _FTCalTaxSta As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FTEmpIdNo As String, _FTBranchCode As String, _FTAccNo As String, _FCLifeFeeMoney As Double
        Dim _FCOtherAdd As Double, _FTOtherAddCalculateSocial As String, _FTOtherAddCalculateTax As String
        Dim _FCOtherAddOt As Double, _FTOtherAddOtCalculateSocial As String, _FTOtherAddOtCalculateTax As String, _FCBFShiftMoney As Double
        Dim _FTShiftMoneyCalculateSocial As String, _FTShiftMoneyCalculateTax As String, _FCDiligent As Double
        Dim _FTDiligentCalculateSocial As String, _FTDiligentCalculateTax As String, _FCBonusEndYear As Double
        Dim _FTBonusEndCalculateSocial As String, _FCOtherDeduct As Double, _FTBonusEndCalculateTax As String
        Dim _FCShelter As Double, _FTShelterCalculateSocial As String, _FTShelterCalculateTax As String
        Dim _FCShareFactory As Double, _FTShareFactoryCalculateSocial As String
        Dim _FTShift As String
        Dim _FNTime, _FNNotRegis, _FNTimeOrg As Double
        Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
        Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
        Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
        Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double, _FNAbsentCutTime As Double
        Dim _FNLeavePay, _FNLeaveNotPay As Double, _FNTimeMin, _FNOT1Min As Double
        Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
        Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
        Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
        Dim _GFNTime, _GFNNotRegis As Double
        Dim _GFNOT1 As Double, _GFNOT1_5 As Double, _GFNOT2 As Double, _GFNOT3 As Double, _GFNOT4 As Double
        Dim _GFNLeaveSick As Double, _GFNLeaveBusiness As Double
        Dim _GFNLeaveVacation As Double, _GFNLeavePregnant As Double, _GFNLeaveOrdain As Double
        Dim _GFNLeaveMarry As Double, _GFNLeaveOther As Double, _GFNLateNormalMin As Double
        Dim _GFNLateNormalCut As Double, _GFNLateOtMin As Double, _GFNLateOtCut As Double
        Dim _GFNLateMorning As Double, _GFNLateAfternoon As Double, _GFNAbsent, _GFNCutAbsent, _GFNAbsentCutTime As Double
        Dim _GFNLeavePay As Double, _GFNTimeMin, _GFNOT1Min As Double
        Dim _GFNOT1_5Min As Double, _GFNOT2Min As Double, _GFNOT3Min As Double, _GFNOT4Min As Double, _GFNLateMMin As Double
        Dim _GFNLateAfMin As Double, _GFNRetireMMin As Double, _GFNRetireAfMin As Double
        Dim _GFNRetireNormalCut As Double, _GFNRetireOtMin As Double, _GFNRetireOtCut As Double
        Dim _dtot As DataTable
        Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double
        Dim _FCAccumulateIncome As Double, _FCAccumulateSocial As Double, _FCAccumulateTax As Double
        Dim _FTSatrtCalculateDate As String, _FTEndCalculateDate As String, _FNEmpDiligent As Double, _FTStateInDustin As String, _FNDeligentPeriod As Integer
        Dim _FTSatrtCalculateDateIns As String, _FTEndCalculateDateIns As String
        Dim _FNEmpBaht, _nBahtOt1 As Double, _nBahtOt15 As Double, _nBahtOt2 As Double, _nBahtOt3 As Double, _nBahtOt4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
        Dim _SocialRate As Double, _SocialRateCmp As Double
        Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
        Dim _TotalHoliDay As Integer
        Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String
        Dim _FNSlaryPerDayRetVa As Double
        Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double
        Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
        Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
        Dim _FTSlary, _FTDivCode, _FTPos As String
        Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
        Dim _Dtemp As DataTable
        Dim _SocialBefore, _SocialBeforeAmt, _SocialPayMax As Double
        Dim _FCAdd, _FTAddCalculateSocial, _FTAddCalculateTax, _FCDeduct, _TotalCalSso, _TotalCalTax, _TaxAmt As Double
        Dim _Gtotalleave, _GtotalleavePay, _GtotalleaveNotPay, _GtotalleavePayCalSso, _GtotalleavePayCalSsoAmt As Double
        Dim _dtLeave As DataTable
        Dim _LeaveCode As String = ""
        Dim _dtAddOtherAmt As DataTable
        Dim _dtAddOtherAmtshift As DataTable
        Dim FCModFather, FCModMother, FCModMateFather, FCModMateMother As Double
        Dim FCPremium, FCInterest, FCUnitRMF, FCUnitLTF, FCDeductDonate, FCDisabledDependents, FCDeductDonateStudy As Double
        Dim FCHealthInsurFatherMotherMate, FTHealthInsurIDFather, FTHealthInsurIDMother As Double
        Dim FTHealthInsurIDFatherMate, FTHealthInsurIDMotherMate As Double
        Dim FTTotalCalContributedAmt, FTContributedAmt, FTCmpContributedAmt, FTTotalCalContributedAcc As Double
        Dim FTTotalCalWorkmen, FTWorkmenAmt, _FTMaxCalWorkmen, _FTMaxWorkmenRate, FTTotalCalWorkmenAcc As Double
        Dim _FTWorkmenAmtBefore, _FTTotalCalWorkmenBefore As Double
        Dim _ShiftAmt As Double = 0
        Dim _ShiftOTAmt As Double = 0
        Dim _ShiftValue As Double = 0
        Dim _ShiftOTValue As Double = 0
        Dim _WorkingDay As Double = 0
        Dim _THRMContributedFund As DataTable
        Dim _EmpDisTax As New HCfg.EmployeeDiscountTax
        Dim _EmpTaxYear As New HCfg.EmpTaxYear
        Dim _FNNetpayOrg As Double = 0.0
        Dim _FNNetpay As Double = 0.0
        Dim _AmtAddCalOT, _GAmtAddCalOT As Double
        Dim CountTerm As Integer = 0
        Dim _SPDateType, _TotalInstalment, _Instalment As Integer
        Dim _ContributedFundBeginPay As Boolean = False
        Dim _DTHoliday As DataTable
        Dim _ShiftAdv As Double = 0
        Dim _AmtPlus As Double = 0
        Dim _GAmtPlus As Double = 0
        Dim FTHldType As Integer = 0
        Dim _AmtRetire As Double = 0
        Dim _WorkAge As Integer = 0
        Dim _WorkAgeDay As Integer = 0
        Dim _AmtReturnVacation As Double = 0
        Dim _FNIncentiveAmt As Double = 0
        Dim _FNPayterm25Amt As Double = 0
        Dim _FTInsurType As Integer = 0
        Dim _DayAdjAdd As Double = 0
        Dim _WageAdjAdd As Double = 0
        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        Dim _FTStatePayHoliday As String = ""
        Dim _FTEmployeeCode As String = ""
        Dim _TmpFDDateEnd As String = ""
        Dim _DTEmpWorkDay As New DataTable
        Dim _BonusAmt As Double = 0
        Dim _FTRetVacation As String = "0"

        _DTEmpWorkDay.Columns.Add("FNSalary", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNDay", GetType(Double))

        Dim _DTEmpHolidayDay As New DataTable
        _DTEmpHolidayDay.Columns.Add("FNSalary", GetType(Double))
        _DTEmpHolidayDay.Columns.Add("FNDay", GetType(Double))

        Dim _DTEmpPayLeaveSick As New DataTable
        _DTEmpPayLeaveSick.Columns.Add("FNSalary", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNDay", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNPayPer", GetType(Double))

        Dim _LeaveSickPay As Integer = 0

        _Qry = "SELECT TOP 1 FNCalType FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType WHERE FNHSysEmpTypeId=" & Val(_EmpType) & "  "
        Dim _TmpCalType As Integer = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "0"))

        If FTStaCalPayRoll = 0 Then
            _DateStartOfMonth = _StartDate  'วันแรกของเดือน
            _DateEndOfMonth = _EndDate 'วันแของเดือน
        Else
            _DateStartOfMonth = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
            _DateEndOfMonth = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        End If
        '----------------------------------   Variable  ------------------------------------

        ''Best  ยกเลิกคำนวน งวด  25   มาจ่ายรวมกับในงวด  1 ของปีใหม่่   edit  20230106
        'If _PayTerm = "01" Then

        '    _Qry = "SELECT TOP 1  FNNetpay"
        '    _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll AS A WITH(NOLOCK)"
        '    _Qry &= vbCrLf & "  WHERE  (FTPayTerm = '25') "
        '    _Qry &= vbCrLf & " AND (FTPayYear = '" & (Integer.Parse(Val(_PayYear)) - 1).ToString("0000") & "')"
        '    _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ")"

        '    _FNPayterm25Amt = Double.Parse(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

        'End If


        With _EmpTaxYear
            .FTAmt = 0 'เงินได้ก่อนหักค่าใช้จ่าย
            .FTExpenses = 0 'ค่าใช้จ่ายส่วนตัว
            .FTNetAmt = 0 'เงินได้หลังหักค่าใช้จ่าย
            .FTModEmp = 0 'ลดหย่อนส่วนตัว
            .FTModMate = 0 'ลดหย่อนคู่สมรส
            .FNChildNotLern = 0 'จำนวนบุตรไม่ศึกษา
            .FNChildLern = 0 'จำนวนบุตรศึกษา
            .FTChildNotLern = 0 'ลดหย่อนบุตรไม่ศึกษา
            .FTChildLern = 0 'ลดหย่อนบุตรศึกษา
            .FTInsurance = 0 'ลดหย่อนเบี้ยประกัน
            .FTProvidentfund = 0 'กองทุนเลียงชีพส่วนที่ไม่เกิน 10000
            .FTInterest = 0 'ดอกเบี้ยเงินกู้
            .FTSocial = 0 'ประกันสังคม
            .FTDonation = 0 'เงินบริจาค
            .FTProvidentfundOver = 0 'กองทุนเลียงชีพส่วนที่เกิน 10000
            .FTGPF = 0 'เงิน กบข.
            .FTSavingsFund = 0 'เงินกองทุนสงเคราะห์
            .FTCommutation = 0 'เงินชดเชยตามกฎหมายแรงงาน
            .FTUnitRMF = 0 'ค่าซื้อหน่วยลงทุน RTF
            .FTModFather = 0 'ลดหย่อนบิดา
            .FTModMother = 0 'ลดหย่อนมารดา
            .FTModFatherMate = 0 'ลดหย่อนบิดาคู่สมรส
            .FTModMotherMate = 0 'ลดหย่อนมารดาคู่สมรส
            .FTUnitLTF = 0 'ค่าซื้อหน่วยลงทุน LTF
            .FTDonationLern = 0 'เงินบริจาคเพื่อสนับสนุนการศึกษา
            .FTParentsHealthInsurance = 0 'เบี้ยประกันสุขภาพบิดามารดา
            .FTSupportSport = 0 'เงินสนับสนุนการกีฬา
            .FTAcquisitionOfProperty = 0 'ค่าซื้ออาคาร
            .FTPension = 0 'บำนาญ
            .FTTravel = 0 'ท่องเที่ยวในประเทศ
            .FTTotalCalTax = 0 'เงินได้สุทธิ
            .FTTotalTax = 0 'ภาษีที่ต้องจ่าย
        End With
        '------------------ GetConfig WeekEnd ----------------------------------

        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------
        _Qry = "SELECT FNSeqNo, FNAgeBegin, FNAgeEnd, FNEmpPay As FNEmpAmtPer,  FNCmpPay AS FNCmpAmtPer"
        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMContributions WITH(NOLOCK) "
        _Qry &= vbCrLf & "  WHERE  FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID) & " "
        _THRMContributedFund = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------

        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday
        '------------------ GetConfig Holiday ----------------------------------
        FNVacationRetMin = 0 : FNVacationRetAmt = 0
        _FTSatrtCalculateDate = _StartDate
        _FTEndCalculateDate = _EndDate
        _FTSatrtCalculateDateIns = _StartDate
        _FTEndCalculateDateIns = _EndDate
        _FNEmpDiligent = 0 : _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
        _FTStateInDustin = "" : _FNSlaryPerMonth = 0
        _FNSlaryPerDay = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0
        _FTEmpState = "" : _FNEmpBaht = 0 : _nBahtOt1 = 0
        _nBahtOt15 = 0 : _nBahtOt2 = 0 : _nBahtOt3 = 0
        _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
        _FCPayVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0
        _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0 : _SocialRateCmp = 0
        _SocialMinIncome = 0 : _SocialMaxIncome = 0
        _Complete = 0 : _Err = 0 : _FCSalary = -99
        CountTerm = 0
        _TotalInstalment = 0 : _Instalment = 0

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode,M.FTEmpCode AS FTEmployeeCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, M.FNEmpStatus AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"
        _Qry &= vbCrLf & " ,M.FNHSysDeptId AS FTDeptCode "
        _Qry &= vbCrLf & "  ,M.FNHSysDivisonId AS FTDivCode, M.FNHSysSectId AS FTSectCode,  M.FNHSysUnitSectId AS FTUnitSecCode"
        _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
        _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
        _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
        _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
        _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
        _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
        _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
        _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
        _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(day,M.FdDateStart,M.FDRetire) ELSE Datediff(day,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAgeDay"
        _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide"
        _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday "
        _Qry &= vbCrLf & " , M.FNHSysResignId, ISNULL(R.FTRetVacation,'0') AS [FTRetVacation] "
        _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "   LEFT JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMResign As R WITH (NOLOCK) ON R.FNHSysResignId = M.FNHSysResignId "

        _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_EmpCode) & " ) "

        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each R As DataRow In _Dtemp.Rows

            _DtFin.Rows.Clear()
            _AmtAddCalOT = 0

            _FTRetVacation = R!FTRetVacation.ToString

            _SalaryDevide = Val(R!FNSalaryDivide.ToString)
            _FTStatePayHoliday = R!FTStatePayHoliday.ToString

            _FTInsurType = Val(R!FTInsurType.ToString)

            If _SalaryDevide <= 0 Then
                _SalaryDevide = 1
            End If

            _FTSlary = R!FTSalary.ToString : _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString
            _FTPaymentCode = R!FTPayCode.ToString : _FTBankCode = R!FTBnkCode.ToString
            _FTCalSocialSta = R!FTCalSocialSta.ToString : _FTCalTaxSta = R!FTCalTaxSta.ToString

            _FTDeptCode = R!FTDeptCode.ToString : _FTDivCode = R!FTDivCode.ToString
            _FTSectCode = R!FTSectCode.ToString
            _FTUnitCode = R!FTUnitSecCode.ToString : _FTPos = R!FTPositCode.ToString

            _FTEmpState = R!FTCalType.ToString
            _FTEmpIdNo = R!FTTaxNo.ToString 'R!FTEmpIdNo.ToString
            _FTBranchCode = R!FTBnkBchCode.ToString
            _FTAccNo = R!FTAccNo.ToString
            '---------------------------------------- ลดหย่อน------------------------------------
            _FNChildNotLearn = 0 : _FCReduceDonate = 0 : _FCLifeInsurance = 0 : _FCLoanHouse = 0 : _FCReduceEducationSupport = 0
            _FCShare = 0 : _FCReduceFather = 0 : _FCReduceMother = 0 : _FCReSpouseFather = 0 : _FCReSpouseMother = 0 : _FTMarryIncome = 0
            _FCLifeFeeMoney = 0

            FCModFather = 0 : FCModMother = 0 : FCModMateFather = 0 : FCModMateMother = 0
            FCPremium = 0 : FCInterest = 0 : FCUnitRMF = 0 : FCUnitLTF = 0 : FCDeductDonate = 0 : FCDisabledDependents = 0 : FCDeductDonateStudy = 0
            FCHealthInsurFatherMotherMate = 0 : FTHealthInsurIDFather = 0 : FTHealthInsurIDMother = 0
            FTHealthInsurIDFatherMate = 0 : FTHealthInsurIDMotherMate = 0

            FTTotalCalContributedAmt = 0 : FTContributedAmt = 0 : FTCmpContributedAmt = 0
            FTTotalCalWorkmen = 0 : FTWorkmenAmt = 0 : _FTMaxCalWorkmen = 0 : _FTMaxWorkmenRate = 0 : FTTotalCalWorkmenAcc = 0
            _FNIncentiveAmt = 0
            _TmpFDDateEnd = _FDDateEnd

            If _TmpFDDateEnd <> "" Then

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,-1,Convert(Datetime,'" & _TmpFDDateEnd & "')),111)"
                _TmpFDDateEnd = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

            End If

            '--------- อายุงาน  เดือน
            _WorkAge = Val(R!FNWorkAge.ToString)
            _WorkAgeDay = Val(R!FNEmpWorkAgeDay.ToString)

            If _FTEmpState = "2" Then
                _TotalInstalment = 12
            Else
                _TotalInstalment = 24
            End If

            _ContributedFundBeginPay = False
            If R!FDFundBegin.ToString <> "" Then
                If R!FDFundBegin.ToString < _FTEndCalculateDate Then
                    If R!FDFundEnd.ToString <> "" Then
                        If R!FDFundEnd.ToString > _FTEndCalculateDate Then
                            _ContributedFundBeginPay = True
                        End If
                    Else
                        _ContributedFundBeginPay = True
                    End If
                End If
            End If

            _Instalment = Val(_PayTerm)
            _FNIncentiveAmt = 0

            '-------------คำนวณ Incentive-------------------------------------------
            Select Case _FTInsurType
                Case 1

                    '---------ประกันเป็นวัน
                    _Qry = "SELECT SUM (CASE WHEN ISNULL(FNAmtFixedIncentive,0) >0 THEN  "
                    _Qry &= vbCrLf & " ( CASE WHEN ( CASE WHEN ISNULL(FNNetProAmt,0) > ( case when  ISNULL(FNNetAmt, 0) > (M.FNSalary + D.FNAmtOT) then (M.FNSalary + D.FNAmtOT) else ISNULL(FNNetAmt, 0) end )  THEN  (ISNULL(FNNetProAmt,0) - ( case when  ISNULL(FNNetAmt, 0) > (M.FNSalary + D.FNAmtOT) then (M.FNSalary + D.FNAmtOT) else ISNULL(FNNetAmt, 0) end ) )  ELSE 0 END) < ISNULL(FNAmtFixedIncentive,0)  THEN ISNULL(FNAmtFixedIncentive,0)  ELSE  ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ( case when  ISNULL(FNNetAmt, 0) > (M.FNSalary + D.FNAmtOT) then (M.FNSalary + D.FNAmtOT) else ISNULL(FNNetAmt, 0) end ))  ELSE 0 END)  END ) "
                    _Qry &= vbCrLf & " ELSE ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ( case when  ISNULL(FNNetAmt, 0) > (M.FNSalary + D.FNAmtOT) then (M.FNSalary + D.FNAmtOT) else ISNULL(FNNetAmt, 0) end ))  ELSE 0 END) END   ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily AS D WITH(NOLOCK) "
                    _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) ON D.FNHSysEmpID = M.FNHSysEmpID "
                    _Qry &= vbCrLf & " WHERE  (D.FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND D.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND D.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case 2

                    '---------ประกันเป็นเป็นงวด-------------------------------------------

                    _Qry = "SELECT  ( CASE WHEN ISNULL(FNAmtFixedIncentive,0) >0 THEN  (CASE WHEN (CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END)  < ISNULL(FNAmtFixedIncentive,0) THEN ISNULL(FNAmtFixedIncentive,0) ELSE (CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END)  END ) ELSE (CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END) END  ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM ( SELECT SUM(ISNULL(FNNetAmt,0) ) AS FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) AS FNNetProAmt , sum(ISNULL(FNAmtFixedIncentive,0)) AS FNAmtFixedIncentive "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _Qry &= vbCrLf & " ) AS M"


                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case Else

            End Select
            '-------------------------------------

            '---------------------------------------- ลดหย่อน------------------------------------
            _Qry = " SELECT      FNHSysEmpID, FTChildSex, FTStudySta"
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeChild WITH(NOLOCK) "
            _Qry &= vbCrLf & " WHERE   (FNHSysEmpID = " & Val(_EmpCode) & ")"
            _dttempdata = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


            Dim _ChildNotStudy As Integer = 0
            Dim _ChildStudy As Integer = 0

            For Each _Drow As DataRow In _dttempdata.Rows

                If _Drow!FTStudySta.ToString = "1" Then
                    _ChildStudy = _ChildStudy + 1
                Else
                    _ChildNotStudy = _ChildNotStudy + 1
                End If

            Next

            _FCAccumulateIncome = 0 : _FCAccumulateSocial = 0 : _FCAccumulateTax = 0
            FTTotalCalContributedAcc = 0 : FTTotalCalWorkmenAcc = 0

            '----------- Get Summary ------------------
            LoadIncomeTax(_FTEmpIdNo, _PayYear, _PayTerm, _FCAccumulateIncome, _FCAccumulateTax, _FCAccumulateSocial, CountTerm, FTTotalCalContributedAcc, FTTotalCalWorkmenAcc, Integer.Parse(Val(_EmpCode)))
            '----------- Get Summary ------------------

            With _EmpDisTax

                .BaseSlary = 0
                .OtherSlary = 0
                .BeforeIncom = _FCAccumulateIncome
                .BeforeTax = _FCAccumulateTax
                .FTMateIncome = (R!FTMateIncome.ToString = "0")
                ' ----------------------------------------- Clear Discount Tax Value -------------------------
                .Cfg_ModChildAllowanceRateNotStudied = _ChildNotStudy 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
                .Cfg_ModChildAllowanceRateStudy = _ChildStudy 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
                '-------------ลดหย่อนบุตร-----------------

                '--- หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
                .Cfg_ContributedDeducToTheFund = FTTotalCalContributedAcc 'ลูกจ้าง
                '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ

                .Cfg_ModDeductibleDonations = CDbl(Val(R!FCDeductDonate.ToString)) ' ' % ลดหย่อนเงินบริจาค
                .Cfg_ModDeductDonateStudy = CDbl(Val(R!FCDeductDonateStudy.ToString))
                .Cfg_ModFatherReduction = CDbl(Val(R!FCModFather.ToString)) '  'ลดหย่อนบิดา
                .Cfg_ModInsurancePremiums = CDbl(Val(R!FCPremium.ToString)) '  'ค่าเบี้ยประกันชีวิตส่วนบุคคล
                .Cfg_ModLendingforHousing = CDbl(Val(R!FCInterest.ToString)) ' 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย

                .Cfg_ModLTFChk = CDbl(Val(R!FCUnitLTF.ToString)) 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
                .Cfg_ModMateFatherReduction = CDbl(Val(R!FCModMateFather.ToString)) ' 'ลดหย่อนบิดา คู่สมรส
                .Cfg_ModMateMotherReduction = CDbl(Val(R!FCModMateMother.ToString)) '  'ลดหย่อนมารดา คู่สมรส
                .Cfg_ModMotherReduction = CDbl(Val(R!FCModMother.ToString)) ' 'ลดหย่อนมารดา

                .Cfg_ModPersonalExpenChk = 0 ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน

                .Cfg_ModRateReductionsByMarital = (IIf(R!FTMaritalCode.ToString = "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
                .Cfg_ModRateReductionsBySingle = (IIf(R!FTMaritalCode.ToString <> "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ โสด 

                .Cfg_ModRMFChk = CDbl(Val(R!FCUnitRMF.ToString)) '  ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 
                .FCDisabledDependents = CDbl(Val(R!FCDisabledDependents.ToString)) '  'ค่าอุปการะเลี้ยงดูคนพิการหรือทุพพลภาพ
                .FCHealthInsurFatherMotherMate = CDbl(Val(R!FCHealthInsurFatherMotherMate.ToString)) '   'เบี้ยประกันสุขภาพบิดามารดาของผู้มีเงินได้และคู่สมสร

                .FCExceptAgeOver = CDbl(Val(R!FCExceptAgeOver.ToString)) ' ' 'รายการเงินได้ที่ได้รับยกเว้น ของผู้มีเงินได้ตั้งแต่ 65 ปีขึ้นไป 
                .FCExceptAgeOverMate = CDbl(Val(R!FCExceptAgeOverMate.ToString)) ' 'รายการเงินได้ที่ได้รับยกเว้น ของคู่สมรสอายุตั้งแต่ 65 ปีขึ้นไป
                '----------------------------------------------------
            End With
            '---------------------------------------- ลดหย่อน------------------------------------

            _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = "0" : _FTOtherAddCalculateTax = "0" : _FCOtherAddOt = 0
            _FTOtherAddOtCalculateSocial = "0" : _FTOtherAddOtCalculateTax = "0" : _FCBFShiftMoney = 0 : _FTShiftMoneyCalculateSocial = "0"
            _FTShiftMoneyCalculateTax = "0" : _FCDiligent = 0 : _FTDiligentCalculateSocial = "0" : _FTDiligentCalculateTax = "0"
            _FCBonusEndYear = 0 : _FTBonusEndCalculateSocial = "0" : _FTBonusEndCalculateTax = "0" : _FCShelter = 0
            _FTShelterCalculateSocial = "0" : _FTShelterCalculateTax = "0" : _FCShareFactory = 0 : _FTShareFactoryCalculateSocial = "0"
            _FNNetpayOrg = 0.0
            _FNNetpay = 0.0
            _FCSalary = -99
            _FTSlary = (_FTSlary)

            If IsNumeric(_FTSlary) Then
                _MSlary = _FTSlary
                _FCSalary = CDbl(_FTSlary)

                '------------------ คำนวณคืนพักร้อน ----------------------------

                If (_ReturnVacation > 0) Or (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                    Dim _Month As Integer = 0
                    Dim _Leave As Double = 0
                    Dim _SumLeaveVacation As Double = 0
                    Dim _ResetDate As String = ""

                    Dim _DateReset As String
                    Dim _DateSetEmpReset As String
                    Dim _DateEndYaer As String = _PayYear & "/12/31"




                    If Val(HI.ST.SysInfo.CmpID) = 2015760002 Then

                        '' VT


                        _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
                        _Qry &= vbCrLf & "  FROM"
                        _Qry &= vbCrLf & " ("
                        _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                        _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK )"
                        _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                        _Qry &= vbCrLf & " ) As T"

                        _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                        If _PayTerm = "24" Or _PayTerm = "25" Then
                            _DateReset = (Val(_PayYear)).ToString("0000") & Microsoft.VisualBasic.Right(_DateReset, 6)
                            _DateSetEmpReset = HI.UL.ULDate.AddDay((Val(_PayYear + 1)).ToString("0000") & Microsoft.VisualBasic.Right(_DateReset, 6), -1)

                        Else
                            _DateSetEmpReset = HI.UL.ULDate.AddDay(_PayYear, -1)
                        End If



                        Dim VacationLeaveType As String = ""
                        _Qry = " SELECT TOP 1 FTCfgData"
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.TSESystemConfig AS Z WITH(NOLOCK) "
                        _Qry &= vbCrLf & " WHERE  (FTCfgName = N'VacationLeaveType')"

                        VacationLeaveType = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_SECURITY, "0")
                        _Qry = ""
                        If _FDDateStart < _DateReset And _DateReset <> "" Then



                            If (_ReturnVacation > 0) Then


                                If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate And _FTRetVacation = "0") Then
                                    _Qry = "  "

                                ElseIf VacationLeaveType = "1" Then
                                    '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Th(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                                    '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                    '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                                    _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Th(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                                Else

                                    _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "


                                End If

                                ''_FTRetVacation = เหตุผลในการออกจากงานที่จ่ายคืนพักร้อน


                            ElseIf (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate And _FTRetVacation = "1") Then
                                '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                                '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                                Dim _FNYear As Integer = 0
                                Dim _FNMonth As Integer = 0
                                Dim _FNDay As Integer = 0

                                If HI.UL.ULDate.CheckDate(_TmpFDDateEnd) <> "" Then
                                    _Qry = "Exec " & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & ".dbo.SP_Datediff '" & HI.UL.ULDate.ConvertEnDB(_FDDateStart) & "',N'" & HI.UL.ULDate.ConvertEnDB(_TmpFDDateEnd) & "'"
                                Else
                                    _Qry = "Exec " & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & ".dbo.SP_Datediff '" & HI.UL.ULDate.ConvertEnDB(_FDDateStart) & "',N''"
                                End If

                                Dim _Row As DataRow = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR).Rows(0)
                                _FNYear = Integer.Parse(Val(_Row("FNYear")))
                                _FNMonth = Integer.Parse(Val(_Row("FNMonth")))
                                _FNDay = Integer.Parse(Val(_Row("FNDay")))

                                _FNYear = IIf(_FNYear < 0, 0, _FNYear)
                                _FNMonth = IIf(_FNMonth < 0, 0, _FNMonth)
                                _FNDay = IIf(_FNDay < 0, 0, _FNDay)

                                If _FNYear >= 1 Then
                                    If VacationLeaveType = "1" Then
                                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Th(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_TmpFDDateEnd) & "'))),111),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                                    Else

                                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                                    End If
                                End If
                            Else

                                If (_TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                                    If _PayTerm = "24" Or _PayTerm = "25" Then

                                    Else
                                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),Convert(varchar(10),DateAdd(day,-1,'" & (_DateReset) & "')),111),'" & (_EndDate) & "') AS FNEmpVacation"
                                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                                        _Leave = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                                    End If

                                End If
                                If _PayTerm = "24" Then
                                    If VacationLeaveType = "1" Then
                                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Th(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                                    Else

                                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                                    End If
                                End If


                            End If

                            _Leave = _Leave + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))



                            If _Leave > 0 And _DateReset <> "" Then

                                If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                                    _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                                    _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                                    _Qry &= vbCrLf & "	   AND FNHSysEmpID =" & Val(_EmpCode) & " "
                                    _Qry &= vbCrLf & " 	   AND  FTDateTrans >= '" & (_DateReset) & "'"

                                Else

                                    _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                                    _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                                    _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                                    _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"
                                    _Qry &= vbCrLf & " 	AND  FTDateTrans <= '" & (_DateSetEmpReset) & "'"


                                    '' _Qry &= vbCrLf & " 	AND  FTDateTrans >=Convert(varchar(10),DateAdd(year,-1,Convert(Datetime,'" & (_DateReset) & "')),111)"

                                End If

                                _SumLeaveVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                                If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                                    _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                                    _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                                    _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                                    _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"

                                    _SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                                End If

                                If _ReturnVacation <= 0 Then

                                    _Qry = " SELECT   TOP 1 FCCfgRetValue"
                                    _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigReturnVacationSet WITH(NOLOCK) "
                                    _Qry &= vbCrLf & "  WHERE      (FNCalType =" & Val(_EmpType) & ")"

                                    _ReturnVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                                End If

                                _FNSlaryPerDayRetVa = HI.Conn.SQLConn.GetField("Select Top 1 FNSalary From THRTPayRoll WITH(NOLOCK) where  FNHSysEmpID = " & Val(_EmpCode) & " and  FTPayYear +'/'+FTPayTerm  <'" & _PayYear & "/" & _PayTerm & "'  Order by FTPayYear +'/'+FTPayTerm DESC ", Conn.DB.DataBaseName.DB_HR, "0")

                                If _FNSlaryPerDayRetVa = 0 Then
                                    _FNSlaryPerDayRetVa = HI.Conn.SQLConn.GetField("Select Top 1 FNSalary From THRMEmployee WITH(NOLOCK) where  FNHSysEmpID = " & Val(_EmpCode), Conn.DB.DataBaseName.DB_HR, "0")
                                End If


                                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                                    _FNSlaryPerDay = CDbl(Format(_FCSalary / 30, "0.00"))
                                    _FNSlaryPerDayRetVa = CDbl(Format(_FNSlaryPerDayRetVa / 30, "0.00"))
                                Else
                                    _FNSlaryPerDay = _FCSalary

                                End If

                                If _Leave > (_SumLeaveVacation / 480) Then

                                    FNVacationRetMin = (_Leave * 480) - _SumLeaveVacation

                                    If FNVacationRetMin <= 0 Then
                                        FNVacationRetMin = 0
                                    End If

                                    FNVacationRetAmt = 0

                                    _AmtReturnVacation = CDbl(Format((((_Leave * 480) - (_SumLeaveVacation)) * (_ReturnVacation * (_FNSlaryPerDayRetVa / 480))), "0.00"))

                                    FNVacationRetAmt = _AmtReturnVacation

                                End If


                            End If
                        End If


                    Else
                        _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
                        _Qry &= vbCrLf & "  FROM"
                        _Qry &= vbCrLf & " ("
                        _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                        _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK )"
                        _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                        _Qry &= vbCrLf & " ) As T"

                        _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                        If _PayTerm = "24" Or _PayTerm = "25" Then
                            _DateReset = (Val(_PayYear) + 1).ToString("0000") & Microsoft.VisualBasic.Right(_DateReset, 6)
                        End If

                        _DateSetEmpReset = HI.UL.ULDate.AddDay(_DateReset, -1)

                        Dim VacationLeaveType As String = ""
                        _Qry = " SELECT TOP 1 FTCfgData"
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.TSESystemConfig AS Z WITH(NOLOCK) "
                        _Qry &= vbCrLf & " WHERE  (FTCfgName = N'VacationLeaveType')"

                        VacationLeaveType = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_SECURITY, "0")
                        _Qry = ""
                        If _FDDateStart < _DateReset And _DateReset <> "" Then



                            If (_ReturnVacation > 0) Then


                                If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate And _FTRetVacation = "0") Then
                                    _Qry = "  "

                                ElseIf VacationLeaveType = "1" Then
                                    _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Th(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                                Else

                                    _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "


                                End If

                                ''_FTRetVacation = เหตุผลในการออกจากงานที่จ่ายคืนพักร้อน


                            ElseIf (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate And _FTRetVacation = "1") Then
                                '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                                '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                                Dim _FNYear As Integer = 0
                                Dim _FNMonth As Integer = 0
                                Dim _FNDay As Integer = 0

                                If HI.UL.ULDate.CheckDate(_TmpFDDateEnd) <> "" Then
                                    _Qry = "Exec " & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & ".dbo.SP_Datediff '" & HI.UL.ULDate.ConvertEnDB(_FDDateStart) & "',N'" & HI.UL.ULDate.ConvertEnDB(_TmpFDDateEnd) & "'"
                                Else
                                    _Qry = "Exec " & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & ".dbo.SP_Datediff '" & HI.UL.ULDate.ConvertEnDB(_FDDateStart) & "',N''"
                                End If

                                Dim _Row As DataRow = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR).Rows(0)
                                _FNYear = Integer.Parse(Val(_Row("FNYear")))
                                _FNMonth = Integer.Parse(Val(_Row("FNMonth")))
                                _FNDay = Integer.Parse(Val(_Row("FNDay")))

                                _FNYear = IIf(_FNYear < 0, 0, _FNYear)
                                _FNMonth = IIf(_FNMonth < 0, 0, _FNMonth)
                                _FNDay = IIf(_FNDay < 0, 0, _FNDay)

                                If _FNYear >= 1 Then
                                    If VacationLeaveType = "1" Then
                                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Th(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_TmpFDDateEnd) & "'))),111),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                                    Else

                                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                                    End If
                                End If
                            Else

                                If (_TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                                    If _PayTerm = "24" Or _PayTerm = "25" Then

                                    Else
                                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),Convert(varchar(10),DateAdd(day,-1,'" & (_DateReset) & "')),111),'" & (_EndDate) & "') AS FNEmpVacation"
                                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                                        _Leave = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                                    End If

                                End If
                                If _PayTerm = "24" Then
                                    If VacationLeaveType = "1" Then
                                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Th(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                                    Else

                                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                                    End If
                                End If


                            End If

                            _Leave = _Leave + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))



                            If _Leave > 0 And _DateReset <> "" Then

                                If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                                    _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                                    _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                                    _Qry &= vbCrLf & "	   AND FNHSysEmpID =" & Val(_EmpCode) & " "
                                    _Qry &= vbCrLf & " 	   AND  FTDateTrans >= '" & (_DateReset) & "'"

                                Else

                                    _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                                    _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                                    _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                                    _Qry &= vbCrLf & " 	AND  FTDateTrans < '" & (_DateReset) & "'"
                                    _Qry &= vbCrLf & " 	AND  FTDateTrans >=Convert(varchar(10),DateAdd(year,-1,Convert(Datetime,'" & (_DateReset) & "')),111)"

                                End If

                                _SumLeaveVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                                If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                                    _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                                    _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                                    _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                                    _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"

                                    _SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                                End If

                                If _ReturnVacation <= 0 Then

                                    _Qry = " SELECT   TOP 1 FCCfgRetValue"
                                    _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigReturnVacationSet WITH(NOLOCK) "
                                    _Qry &= vbCrLf & "  WHERE      (FNCalType =" & Val(_EmpType) & ")"

                                    _ReturnVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                                End If

                                _FNSlaryPerDayRetVa = HI.Conn.SQLConn.GetField("Select Top 1 FNSalary From THRTPayRoll WITH(NOLOCK) where  FNHSysEmpID = " & Val(_EmpCode) & " and  FTPayYear +'/'+FTPayTerm  <'" & _PayYear & "/" & _PayTerm & "'  Order by FTPayYear +'/'+FTPayTerm DESC ", Conn.DB.DataBaseName.DB_HR, "0")

                                If _FNSlaryPerDayRetVa = 0 Then
                                    _FNSlaryPerDayRetVa = HI.Conn.SQLConn.GetField("Select Top 1 FNSalary From THRMEmployee WITH(NOLOCK) where  FNHSysEmpID = " & Val(_EmpCode), Conn.DB.DataBaseName.DB_HR, "0")
                                End If


                                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                                    _FNSlaryPerDay = CDbl(Format(_FCSalary / 30, "0.00"))
                                    _FNSlaryPerDayRetVa = CDbl(Format(_FNSlaryPerDayRetVa / 30, "0.00"))
                                Else
                                    _FNSlaryPerDay = _FCSalary

                                End If

                                If _Leave > (_SumLeaveVacation / 480) Then

                                    FNVacationRetMin = (_Leave * 480) - _SumLeaveVacation

                                    If FNVacationRetMin <= 0 Then
                                        FNVacationRetMin = 0
                                    End If

                                    FNVacationRetAmt = 0

                                    _AmtReturnVacation = CDbl(Format((((_Leave * 480) - (_SumLeaveVacation)) * (_ReturnVacation * (_FNSlaryPerDayRetVa / 480))), "0.00"))

                                    FNVacationRetAmt = _AmtReturnVacation

                                End If


                            End If
                        End If


                    End If









                End If
                '------------------ คำนวณคืนพักร้อน ----------------------------

                _SocialMinIncome = HCfg.HSocialRate.SocialIncomeMin
                _SocialMaxIncome = HCfg.HSocialRate.SocialIncomeMax
                _SocialRate = HCfg.HSocialRate.CalSocialRate
                _SocialRateCmp = HCfg.HSocialRate.CalSocialRateCmp

                _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
                _AmtPlus = 0

                _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                For Each R3 As DataRow In _dtot.Rows

                    Select Case R3!FTCfgOTCode.ToString.ToUpper
                        Case "01"
                            _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "02"
                            _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "03"
                            _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "04"
                            _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "05"
                            _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                    End Select

                Next

                '---------รายได้รายหัก อื่นๆ-------------------------
                _GAmtAddCalOT = 0
                If Val(_PayTerm) <> 25 Then


                    _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                    _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                    _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                    _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                    _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                    _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"
                    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"
                    _Qry &= vbCrLf & "  AND  (ISNULL(FN.FNHSysCmpId,0) = 0 OR  FN.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                    If _EmpCalType = "0" Then
                        If Val(_PayTerm) Mod 2 = 0 Then
                            _Qry &= vbCrLf & "  AND FTPayType <> '' "
                        Else
                            _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                        End If
                    End If
                    _Qry &= vbCrLf & "UNION  "
                    _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial,  0 As FCFinAmt   , FM.FTFinType"
                    _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                    _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                    _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                    _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                    _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"

                    _Qry &= vbCrLf & " FROM        [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)   INNER JOIN"
                    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE    (FM.FTFinType = '1' OR FM.FTFinType = '2')   and FN.FTFinCode ='008' "
                    _Qry &= vbCrLf & "  AND  (ISNULL(FN.FNHSysCmpId,0) = 0 OR  FN.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                    If _EmpCalType = "0" Then
                        If Val(_PayTerm) Mod 2 = 0 Then
                            _Qry &= vbCrLf & "  AND FTPayType <> '' "
                        Else
                            _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                        End If
                    End If
                    _Qry &= vbCrLf & " and FN.FTFinCode  not in (  Select FTFinCode From [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin  WITH (NOLOCK)  "
                    _Qry &= vbCrLf & " WHERE    (FNHSysEmpID = " & Val(_EmpCode) & ") )"

                    ' _Qry &= vbCrLf & "  AND FTPayType <> '" & IIf(_EmpCalType = "0" Or (Val(_PayTerm) Mod 2 = 0), "", "1") & "' "


                Else

                    ''term 25
                    _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                    _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                    _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                    _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                    _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                    _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"
                    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2') AND FN.FTFinCode not in ('112','113') "
                    _Qry &= vbCrLf & "  AND  (ISNULL(FN.FNHSysCmpId,0) = 0 OR  FN.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                    If _EmpCalType = "0" Then
                        If Val(_PayTerm) Mod 2 = 0 Then
                            _Qry &= vbCrLf & "  AND FTPayType <> '' "
                        Else
                            _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                        End If
                    End If
                    _Qry &= vbCrLf & "UNION  "
                    _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial,  0 As FCFinAmt   , FM.FTFinType"
                    _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                    _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                    _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                    _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                    _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"

                    _Qry &= vbCrLf & " FROM        [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)   INNER JOIN"
                    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE    (FM.FTFinType = '1' OR FM.FTFinType = '2')   and FN.FTFinCode ='008' "
                    _Qry &= vbCrLf & "  AND  (ISNULL(FN.FNHSysCmpId,0) = 0 OR  FN.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                    If _EmpCalType = "0" Then
                        If Val(_PayTerm) Mod 2 = 0 Then
                            _Qry &= vbCrLf & "  AND FTPayType <> '' "
                        Else
                            _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                        End If
                    End If
                    _Qry &= vbCrLf & " and FN.FTFinCode  not in (  Select FTFinCode From [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin  WITH (NOLOCK)  "
                    _Qry &= vbCrLf & " WHERE    (FNHSysEmpID = " & Val(_EmpCode) & ") )"

                End If

                _dtAddOtherAmt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTStaCalOT='1' AND FTPayType='0' ")
                    _GAmtAddCalOT = _GAmtAddCalOT + Val(R2!FCFinAmt.ToString)
                Next

                _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
                _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
                _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
                _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN"
                _Qry &= vbCrLf & "  WHERE        ((FTFinCode = N'001') OR  (FTFinCode = N'007')) "
                _Qry &= vbCrLf & "  AND  (ISNULL(FN.FNHSysCmpId,0) = 0 OR  FN.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"
                _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)




                _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = 0 : _FTOtherAddCalculateTax = 0 : _FCOtherDeduct = 0

                '---------------- Adjust Before Calculate------------------------------------
                _Qry = " SELECT        FN.FTStaTax, FN.FTStaSocial, (ISNULL(BF.FCFinAmt,0))  AS FCFinAmt, FM.FTFinType,ISNULL(BF.FNDay,-1) As FNDay,BF.FTFinCode "
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE        (BF.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "')"
                _Qry &= vbCrLf & "  AND (BF.FTPayTerm = '" & HI.UL.ULF.rpQuoted(_PayTerm) & "') "
                _Qry &= vbCrLf & " AND (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"
                _Qry &= vbCrLf & "  AND  (ISNULL(FN.FNHSysCmpId,0) = 0 OR  FN.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                If _AmtReturnVacation > 0 Then

                    _Qry &= vbCrLf & " UNION ALL "
                    _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial, " & _AmtReturnVacation & "  AS FCFinAmt, FM.FTFinType,-1 As FNDay,FM.FTFinCode "
                    _Qry &= vbCrLf & " FROM     [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)  INNER JOIN"
                    _Qry &= vbCrLf & "          [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE (FM.FTFinCode='023')"
                    _Qry &= vbCrLf & "  AND  (ISNULL(FN.FNHSysCmpId,0) = 0 OR  FN.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                End If

                _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


                For Each R2 As DataRow In _dt.Select("FNDay<=0")
                    Select Case R2!FTFinType.ToString
                        Case "1"
                            _FCOtherAdd = _FCOtherAdd + Val((R2!FCFinAmt.ToString))

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax + Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial + Val((R2!FCFinAmt.ToString))

                        Case "2"

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax - Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial - Val((R2!FCFinAmt.ToString))

                            _FCOtherDeduct = _FCOtherDeduct + Val((R2!FCFinAmt.ToString))
                    End Select
                Next

                _DayAdjAdd = 0
                _WageAdjAdd = 0

                For Each R2 As DataRow In _dt.Select("FNDay> 0")

                    _DayAdjAdd = _DayAdjAdd + Val((R2!FNDay.ToString))
                    _WageAdjAdd = _WageAdjAdd + Val((R2!FCFinAmt.ToString))

                Next

                _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
                _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= 480 THEN 480   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= 480 THEN 480   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= 480 THEN 480 ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
                _Qry &= vbCrLf & " , FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_EmpCode) & " )"

                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_DateStartOfMonth) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_DateEndOfMonth) & "' "
                Else
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                End If

                _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

                _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	"
                _Qry &= vbCrLf & " ,case when ISNULL(T.FNTimeMin,0)+ ISNULL(T.FNSpecialTimeMin,0) > 0 then  (ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) + ISNULL(T.FNAbsent,0)   )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  + ISNULL(T.FNCutAbsent,0)   )  else  ISNULL(T.FNTimeMin,0)  end    AS FNTime"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT1_5,0) AS FNOT1_5"

                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT2,0 ) AS FNOT2  , ISNULL(T.FNOT3,0) AS FNOT3"
                ' _Qry &= vbCrLf & " , case when ISNULL(T.FNOT3,0) > 0 then   Convert(numeric(18,2),	( ( ISNULL(T.FNOT3Min,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  )) / 60) 	 + Convert(numeric(18,2),((( ( ISNULL(T.FNOT3Min,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  )) %60) /100.00))  else ISNULL(T.FNOT3,0)  end  AS FNOT3 "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT4,0) AS FNOT4"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(T.FNLateNormalCut,0 )   AS FNLateNormalCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateOtMin,0) As FNLateOtMin,ISNULL(T.FNLateOtCut,0) As FNLateOtCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateMMin,0) As FNLateMorning"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateAfMin,0) AS FNLateAfternoon,Isnull(T.FNAbsentCut,0) AS FNAbsentCut "
                _Qry &= vbCrLf & " 	,ISNULL(T.FNAbsent,0 ) AS FNAbsent_Cut "
                _Qry &= vbCrLf & " 	,ISNULL(T.FNCutAbsent,0) AS FNAbsent "
                _Qry &= vbCrLf & " ,case when  ISNULL(T.FNTimeMin,0)  + ISNULL(T.FNSpecialTimeMin,0)  > 0 then (ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0)  + ISNULL(T.FNAbsent,0)   )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  + ISNULL(T.FNCutAbsent,0)   ) else  ISNULL(T.FNTimeMin,0)  end  AS FNTimeMin"
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0)) As FNTimeMinOrg"
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1Min,0) As FNOT1Min  "
                ' _Qry &= vbCrLf & " , ISNULL(T.FNOT1_5Min,0) As FNOT1_5Min "
                _Qry &= vbCrLf & " ,case when  ISNULL(T.FNOT1_5Min,0)  > 0 then (ISNULL(T.FNOT1_5Min,0)  + ISNULL(T.FNLateNormalMin,0) + ISNULL(T.FNAbsent,0)    )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  + ISNULL(T.FNCutAbsent,0)    ) else  ISNULL(T.FNOT1_5Min,0)  end  AS  FNOT1_5Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNOT2Min,0) As FNOT2Min "
                '_Qry &= vbCrLf & " , ISNULL(T.FNOT3Min,0) As FNOT3Min"
                _Qry &= vbCrLf & " ,case when  ISNULL(T.FNOT3Min,0)  > 0 then (ISNULL(T.FNOT3Min,0)  + ISNULL(T.FNLateNormalMin,0) + ISNULL(T.FNAbsent,0)    )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  + ISNULL(T.FNCutAbsent,0)    ) else  ISNULL(T.FNOT3Min,0)  end  AS  FNOT3Min"
                _Qry &= vbCrLf & " , ISNULL(FNOT4Min,0) As FNOT4Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNLateMMin,0) As FNLateMMin "
                _Qry &= vbCrLf & " , ISNULL(T.FNLateAfMin,0) As FNLateAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireMMin,0) As FNRetireMMin "
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireAfMin,0 )  As FNRetireAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireNormalCut,0) As FNRetireNormalCut "
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireOtMin,0) As FNRetireOtMin"
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireOtCut,0) As FNRetireOtCut,FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"
                _Qry &= vbCrLf & " ,CASE WHEN T.FTWeekDay=1 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSunday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSunday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=2 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTMonday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTMonday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=3 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTTuesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTTuesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=4 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTWednesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTWednesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=5 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTThursday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTThursday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=6 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTFriday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTFriday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=7 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSaturday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSaturday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  ELSE '0' END AS FTWeekly,ISNULL(FTStateAccept,'') AS FTStateAccept "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
                _Qry &= vbCrLf & "   INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK)  ON  T.FNHSysEmpID =  M.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeWeekly AS EHL WITH (NOLOCK) ON T.FNHSysEmpID=EHL.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmpTypeWeeklySpecial AS ETHL WITH (NOLOCK) ON T.FTDateTrans = ETHL.FDHolidayDate AND M.FNHSysEmpTypeId=ETHL.FNHSysEmpTypeId"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS SH WITH (NOLOCK) ON T.FNHSysShiftID = SH.FNHSysShiftID"

                _Qry &= vbCrLf & "  WHERE (T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "'  "

                If _FDDateEnd <> "" Then
                    _Qry &= vbCrLf & " 	AND T.FTDateTrans < '" & HI.UL.ULDate.ConvertEnDB(_FDDateEnd) & "'  "
                End If
                If _FTEmpState <> "2" And _FTEmpState <> "3" Then ' คำนวณค่าแรงพนักงานรายเดือน
                    _Qry &= vbCrLf & " 	AND T.FTStateAccept = '1'  "
                End If

                _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '---------------Get Trans Daily--------------------------------------
                _GFNTime = 0 : _GFNNotRegis = 0 : _GFNOT1 = 0 : _GFNOT1_5 = 0
                _GFNOT2 = 0 : _GFNOT3 = 0 : _GFNOT4 = 0 : _GFNLeaveSick = 0 : _GFNLeaveBusiness = 0
                _GFNLeaveVacation = 0 : _GFNLeavePregnant = 0 : _GFNLeaveOrdain = 0 : _GFNLeaveMarry = 0
                _GFNLeaveOther = 0 : _GFNLateNormalMin = 0 : _GFNLateNormalCut = 0 : _GFNLateOtMin = 0
                _GFNLateOtCut = 0 : _GFNLateMorning = 0 : _GFNLateAfternoon = 0
                _GFNAbsent = 0 : _GFNCutAbsent = 0 : _GFNLeavePay = 0 : _GFNTimeMin = 0 : _GFNOT1Min = 0 : _GFNOT1_5Min = 0
                _GFNOT2Min = 0 : _GFNOT3Min = 0 : _GFNLateMMin = 0 : _GFNLateAfMin = 0 : _GFNRetireMMin = 0
                _GFNRetireAfMin = 0 : _GFNRetireNormalCut = 0 : _GFNRetireOtMin = 0 : _GFNRetireOtCut = 0
                _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
                _Gtotalleave = 0 : _GtotalleavePay = 0 : _GtotalleaveNotPay = 0 : _GtotalleavePayCalSso = 0 : _GtotalleavePayCalSsoAmt = 0
                _TotalHoliDay = 0 : _GFNAbsentCutTime = 0
                _FNAbsentCutTime = 0
                '------------------- เริ่มการคำนวณรายวัน
                Dim _oHoliday As Integer = 0

                _TotalWorkDay = 0
                _ShiftAmt = 0
                _ShiftValue = 0
                _ShiftOTValue = 0
                _ShiftOTAmt = 0
                _FCAdd = 0 : _FTAddCalculateSocial = 0 : _FTAddCalculateTax = 0 : _FCDeduct = 0
                _GAmtPlus = 0

                If _FDDateStart > _FTSatrtCalculateDate Then _FTSatrtCalculateDate = _FDDateStart

                Do While _FTSatrtCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTSatrtCalculateDate < _FDDateEnd)

                    _oHoliday = 0
                    FTHldType = 0
                    Dim _NewSlary As String

                    _Qry = "  SELECT      TOP 1   FNCurrentSlary  AS AMT"
                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK) "
                    _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "') "
                    _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    _FCSalary = _MSlary
                    If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    _Holiday = ""

                    For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                        _Holiday = "H"
                        FTHldType = Val(IR!FTHldType.ToString)
                        Exit For
                    Next

                    _FTShift = ""

                    _FNTime = 0
                    _FNNotRegis = 0
                    _FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
                    _FNOT3 = 0 : _FNOT4 = 0
                    _FNLateNormalMin = 0 : _FNLateNormalCut = 0
                    _FNLateOtMin = 0 : _FNLateOtCut = 0
                    _FNLateMorning = 0 : _FNLateAfternoon = 0
                    _LateCutAbsent = 0 : _FNAbsent = 0
                    _FNTimeMin = 0 : _FNOT1Min = 0
                    _FNOT1_5Min = 0 : _FNOT2Min = 0
                    _FNOT3Min = 0 : _FNOT4Min = 0
                    _FNLateMMin = 0 : _FNLateAfMin = 0
                    _FNRetireMMin = 0 : _FNRetireAfMin = 0
                    _FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
                    _FNRetireOtMin = 0 : _FNRetireOtMin = 0
                    _FNRetireOtCut = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _AmtAddCalOT = 0
                    _GtotalleavePayCalSso = 0
                    _LeaveCode = ""
                    _FNAbsentCutTime = 0
                    Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                    Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                    For Each R2 In _R

                        _FTShift = R2!FTShift.ToString
                        _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                        _FNTimeOrg = Val(R2!FNTimeMinOrg.ToString)
                        _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                        _FNNotRegis = Val(R2!FNNotRegis.ToString)
                        _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                        _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                        _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                        _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                        _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                        _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent_Cut.ToString)
                        _FNAbsentCutTime = Val(R2!FNAbsent.ToString)

                        _FNOT1Min = Val(R2!FNOT1Min.ToString)
                        _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                        _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                        _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                        _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                        _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                        _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                        _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                        _InOT = R2!FTIn3.ToString
                        _OutOT = R2!FTOut3.ToString

                        _Over = R2!FTOverClock.ToString

                        If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))
                            For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")

                                Dim _FNOT1_5_3Min_Late As Integer = 0  ''เพิ่มสาย วันหยุดนักขัตฤกษ์ 20211120

                                If Not (RFin!FTStaCheckWorkTime.ToString = "1" And ((_FNTimeOrg + _FNOT3Min + _FNOT1_5Min) <= Val(RFin!FTCheckWorkTimeMin.ToString))) Then

                                    '' เช็คสายหรือไม
                                    If (RFin!FTStaCheckLate.ToString = "1") Then

                                        If _FNTime = 0 And (_FNOT3Min > 0 Or _FNOT1_5Min > 0) Then

                                            _FNOT1_5_3Min_Late = _FNLateMorning + _FNLateAfternoon
                                            ''
                                            If Not (RFin!FTStaCheckLate.ToString = "1" And (_FNOT1_5_3Min_Late <= Val(RFin!FTLateMin.ToString))) Then ''เงื่อนไขสาย น้อยกว่า ..นาที แล้วไม่หัก
                                                _ShiftValue = CDbl(Format((_ShiftValue / 480) * ((_FNTimeOrg + _FNOT3Min + _FNOT1_5Min)), "0.00"))
                                                ''_ShiftValue = CDbl(Format((_ShiftValue / 480) * (_FNTime + _FNOT3Min), "0.00"))
                                            Else
                                                _ShiftValue = CDbl(Format((_ShiftValue / 480) * ((_FNTime) + ((_FNOT3Min + _FNOT1_5Min) - _FNOT1_5_3Min_Late)), "0.00")) ''_FNOT3Min = ทำงานวันหยุดนักขัตฤกษ์
                                            End If

                                        Else

                                            ''วันทำงานปกติ
                                            If Not (RFin!FTStaCheckLate.ToString = "1" And (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))) Then
                                                _ShiftValue = CDbl(Format((_ShiftValue / 480) * (_FNTimeOrg + _FNOT3Min), "0.00"))
                                                ''_ShiftValue = CDbl(Format((_ShiftValue / 480) * (_FNTime + _FNOT3Min), "0.00"))
                                            Else
                                                _ShiftValue = CDbl(Format((_ShiftValue / 480) * (_FNTime + _FNOT3Min), "0.00")) ''_FNOT3Min = ทำงานวันหยุดนักขัตฤกษ์
                                            End If

                                        End If
                                    Else
                                        ''  เช็คแต่เวลาทำงานอย่างเดียว ไม่เช็คสาย
                                        '' จ่ายเต็ม

                                        _ShiftValue = CDbl(Format((_ShiftValue), "0.00"))



                                    End If


                                End If






                            Next

                            _TotalWorkDay = _TotalWorkDay + 1

                            _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                            If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                _SPDateType = 0

                                _Holiday = ""

                                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _Holiday = "H"
                                    Exit For
                                Next

                                If _Holiday <> "" Then _SPDateType = 2

                                Dim _StateLeaveOther As Boolean = False
                                Dim _StateLeavacation As Boolean = False
                                Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                Dim _SumLeave As Integer = 0

                                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                    If Val(sR!LeaveType) = 1 Then
                                        _StateLeavacation = True
                                    Else
                                        _StateLeaveOther = True
                                    End If

                                    If Val(sR!LeaveType) = 2 Then
                                        _StateFTStaMaternityleaveNotpay = True
                                    End If

                                Next

                                '--------------------------- ค่ากะ -------------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _ShiftAmt = _ShiftAmt + _ShiftValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ -------------------------------------


                                '****************************** Bonus 

                                ''If Val(_PayTerm) <> 25 Then

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='008' ")

                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        Dim _Amt As Double = 0
                                        Dim _Cmd As String = ""
                                        _Cmd = "Select Top 1 isnull(FNAmt,0) AS  FNAmt From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus with(nolock)"
                                        _Cmd &= vbCrLf & "where FNHSysEmpID=" & Integer.Parse(_EmpCode)
                                        _Cmd &= vbCrLf & "and FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'"
                                        _Amt = Double.Parse(HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "0"))
                                        _BonusAmt = _BonusAmt + _Amt

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _Amt
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _Amt
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _Amt
                                    End If
                                Next
                                ''End If



                                '****************************** End Bonus

                                '--------------------------- ค่ากะ OT ----------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        _ShiftOTAmt = _ShiftOTAmt + _ShiftOTValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftOTValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftOTValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftOTValue

                                    End If

                                Next
                                '--------------------------- ค่ากะ OT ----------------------------------
                                ''  If Val(_PayTerm) <> 25 Then
                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='0' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + Val(RFin!FCFinAmt.ToString)

                                        If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                            _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                        Else

                                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                            Next

                                        End If
                                    End If
                                Next
                                '' End If

                            End If
                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                        End If

                    Next


                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                        _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.00"))

                        If _FTEmpState = "3" Then
                            _FNSlaryPerMonth = CDbl(Format(_FNSlaryPerMonth / 2, "0.00"))
                        End If

                        _FNSlaryPerDay = CDbl(Format((_FCSalary) / 30, "0.00"))
                    Else

                        _FNSlaryPerMonth = 0
                        If _SalaryDevide > 1 Then
                            _FNSlaryPerDay = CDbl(Format(((_FCSalary) / 15), "0.00"))
                        Else
                            _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                        End If

                    End If

                    _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000000000"))
                    _FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000000000"))
                    _FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_FNSlaryPerDay + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000000000")) / 60, "0.00000000000"))
                    _FNSlaryOTPerHour = CDbl(Format((_FNSlaryPerDay + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00"))

                    If _FTShift = "" Then
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If
                    Else


                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If

                        If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _WorkDay = _WorkDay + 1
                        End If

                        _GFNLateNormalMin = _GFNLateNormalMin + _FNLateNormalMin
                        _GFNLateNormalCut = _GFNLateNormalCut + _FNLateNormalCut
                        _GFNLateOtMin = _GFNLateOtMin + _FNLateOtMin
                        _GFNLateOtCut = _GFNLateOtCut + _FNLateOtCut
                        _GFNLateMorning = _GFNLateMorning + _FNLateMorning
                        _GFNLateAfternoon = _GFNLateAfternoon + _FNLateAfternoon
                        _GFNAbsent = _GFNAbsent + _FNAbsent
                        _GFNAbsentCutTime = _GFNAbsentCutTime + _FNAbsentCutTime

                        _GFNCutAbsent = _GFNCutAbsent + _LateCutAbsent
                        _GFNTimeMin = _GFNTimeMin + _FNTimeMin
                        _GFNOT1Min = _GFNOT1Min + _FNOT1Min
                        _GFNOT1_5Min = _GFNOT1_5Min + _FNOT1_5Min
                        _GFNOT2Min = _GFNOT2Min + _FNOT2Min
                        _GFNOT3Min = _GFNOT3Min + _FNOT3Min
                        _GFNOT4Min = _GFNOT4Min + _FNOT4Min
                        _GFNLateMMin = _GFNLateMMin + _FNLateMMin
                        _GFNLateAfMin = _GFNLateAfMin + _FNLateAfMin
                        _GFNRetireOtMin = _GFNRetireOtMin + _FNRetireOtMin
                        _GFNRetireOtCut = _GFNRetireOtCut + _FNRetireOtCut
                        _GFNRetireMMin = _GFNRetireMMin + _FNRetireMMin
                        _GFNRetireAfMin = _GFNRetireAfMin + _FNRetireAfMin
                        _GFNRetireNormalCut = _GFNRetireNormalCut + _FNRetireNormalCut

                    End If

                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _LeaveCode = ""

                    For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                        _LeaveCode = sR!LFTLeaveCode.ToString


                        _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                        _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                        _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                        If sR!FTStaCalSSO.ToString = "1" Then
                            _GtotalleavePayCalSso = _GtotalleavePayCalSso + Val(sR!FNTotalPayMinute.ToString)
                        End If

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            _FNLeaveVacation = _FNLeaveVacation + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                        Else
                            _FNLeavePay = _FNLeavePay + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End If

                    Next

                    _GFNLeavePay = _GFNLeavePay + _FNLeavePay
                    _SocialBefore = 0
                    _SocialBeforeAmt = 0

                    Dim _WageAmtPerDay As Double = 0
                    Dim _WageOTAmtPerDay As Double = 0
                    Dim _TimeOTMdr As Integer = 0

                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    Else
                        _WageAmtPerDay = CDbl(Format((_FNTimeMin) * _FNSlaryPerMin, "0.000"))
                        _FNEmpBaht = _FNEmpBaht + _WageAmtPerDay
                    End If

                    _nBahtOt1 = _nBahtOt1 + CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000000"))

                    If FTHldType = 1 And _FNOT3Min > 0 Then
                        _GAmtPlus = _GAmtPlus + _AmtPlus
                    End If

                    _nBahtOt15 = _nBahtOt15 + CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.00000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.00000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.00000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.00000"))
                    '_FNAbsentCutTime
                    ' _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsentCutTime * _FNSlaryPerMin, "0.00"))
                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.00"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.00"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.00"))

                    _LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.000"))
                    Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _FNSlaryPerMin, "0.000"))
                    _Lapaid = _Lapaid + _TmpLapaidAmt



                    _GtotalleavePayCalSsoAmt = _GtotalleavePayCalSsoAmt + CDbl(Format(_GtotalleavePayCalSso * _FNSlaryPerMin, "0.000"))  'เงินลาจ่ายที่นำไปคิดประกันสังคม

                    If _LeaveCode <> "" And _FNLeaveVacation > 0 Then
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    Else
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    End If

                    If _FTStatePayHoliday <> "1" Then '--------- ไม่ได้ค่าจ้างวันหยุด---------------
                    Else

                        If (_FNLeaveNotPay <= 0) Then
                            If _TmpLapaidAmt <= 0 Then

                                _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.00"))

                            Else
                                _TotalHoliDay = _TotalHoliDay - _oHoliday
                            End If
                        Else
                            _TotalHoliDay = _TotalHoliDay - _oHoliday
                        End If

                    End If

                    _FTSatrtCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTSatrtCalculateDate, 1))

                Loop
                'Math.Round(Decimal.Parse(

                _FNEmpBaht = Math.Round(_FNEmpBaht, 2)
                _Lapaid = Math.Round(_Lapaid, 2)
                _GtotalleavePayCalSsoAmt = Math.Round(_GtotalleavePayCalSsoAmt, 2)
                _Lapaid = CDbl(Format(_Lapaid * 1, "0.00"))
                _GtotalleavePayCalSsoAmt = CDbl(Format(_GtotalleavePayCalSsoAmt * 1, "0.00"))
                _LaNotpaid = Math.Round(_LaNotpaid, 2)
                _LaNotpaid = CDbl(Format(_LaNotpaid * 1, "0.00"))

                If _FTEmpState = "2" Or _FTEmpState = "3" Then ' คำนวณค่าแรงพนักงานรายเดือน

                    If _dttran.Select("FTStateAccept<>'1' AND FTWeekly <>'1' ").Length > 0 Or _dttran.Rows.Count <= 0 Then
                        Return False
                    End If

                    _FNSlaryPerMonth = _MSlary


                    If _FTEmpState = "3" Then

                        _FNSlaryPerMonth = CDbl(Format(_FNSlaryPerMonth / 2, "0.00"))
                        _FNSlaryPerDay = CDbl(Format((_FNSlaryPerMonth) / 15, "0.00"))

                    Else

                        _FNSlaryPerDay = CDbl(Format((_FNSlaryPerMonth) / 30, "0.00"))
                    End If


                    _Gtotalleave = 0
                    _GtotalleavePay = 0
                    _GtotalleaveNotPay = 0
                    _GFNLeaveOther = 0
                    _GFNLeavePay = 0
                    _GtotalleavePayCalSso = 0
                    _LaNotpaid = 0
                    _Lapaid = 0
                    _FCPayVacationBaht = 0
                    _GtotalleavePayCalSsoAmt = 0
                    _nBahtAbsent = 0

                    Dim _NewSlary As String = ""

                    For Each sR As DataRow In _dtLeave.Rows

                        _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                        _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                        _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                        If sR!FTStaCalSSO.ToString = "1" Then
                            _GtotalleavePayCalSso = _GtotalleavePayCalSso + Val(sR!FNTotalPayMinute.ToString)
                        End If

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                        Else
                            _GFNLeavePay = _GFNLeavePay + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End If

                    Next

                    '_LaNotpaid = CDbl(Format(_GtotalleaveNotPay * _FNSlaryPerMin, "0.00"))
                    _LaNotpaid = Math.Round(Decimal.Parse(_LaNotpaid, 2))

                    If _LaNotpaid > _FNSlaryPerMonth Then
                        _LaNotpaid = _FNSlaryPerMonth
                    End If

                    _WorkingDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_DateEndOfMonth))) + 1

                    If _FDDateStart <= _StartDate And (_FDDateEnd >= _DateEndOfMonth Or _FDDateEnd = "") Then

                        Dim _SmDate As String = _DateStartOfMonth
                        Dim _EmDate As String = _DateEndOfMonth
                        Dim _dtSalary As New DataTable

                        _dtSalary.Columns.Add("FNCurrentSlary", GetType(Double))
                        _dtSalary.Columns.Add("FNDay", GetType(Integer))

                        Do While _SmDate <= _EmDate

                            _Qry = "  SELECT      TOP 1   FNCurrentSlary  AS AMT"
                            _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK)"
                            _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_SmDate) & "') "
                            _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                            _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                            _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                            _FCSalary = _FNSlaryPerMonth
                            If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                            If _dtSalary.Select("FNCurrentSlary=" & _FCSalary & "").Length > 0 Then

                                For Each Rxx As DataRow In _dtSalary.Select("FNCurrentSlary=" & _FCSalary & "")
                                    Rxx!FNDay = Integer.Parse(Val(Rxx!FNDay)) + 1
                                    Exit For
                                Next

                            Else
                                _dtSalary.Rows.Add(_FCSalary, 1)
                            End If

                            _SmDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_SmDate, 1))
                        Loop

                        Dim _TotalDay As Integer = 0
                        _FNEmpBaht = 0
                        If _dtSalary.Select("FNCurrentSlary<>" & _FNSlaryPerMonth & "").Length > 0 Then
                            For Each Rxx As DataRow In _dtSalary.Select("FNCurrentSlary<>" & _FNSlaryPerMonth & "")
                                _TotalDay = _TotalDay + Integer.Parse(Val(Rxx!FNDay))

                                _FNEmpBaht = _FNEmpBaht + Double.Parse(Format((Integer.Parse(Val(Rxx!FNDay)) * Double.Parse(Val(Rxx!FNCurrentSlary))), "0.00"))
                            Next

                            _FNEmpBaht = _FNEmpBaht + (_FNSlaryPerMonth - CDbl(Format(_TotalDay * _FNSlaryPerDay, "0.00")))

                        Else
                            _FNEmpBaht = _FNSlaryPerMonth
                        End If

                        _dtSalary.Dispose()

                    Else

                        Dim _TotalDay As Integer = 0
                        If _FDDateStart > _StartDate And _FDDateEnd < _EndDate And _FDDateEnd <> "" Then
                            _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_FDDateStart), CDate(_FDDateEnd))) + 1

                        ElseIf _FDDateStart > _StartDate Then
                            _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_FDDateStart)))
                        ElseIf _FDDateEnd < _EndDate And _FDDateEnd <> "" Then
                            If _FDDateEnd < _DateStartOfMonth Then
                                _TotalDay = _WorkingDay
                            Else
                                _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_FDDateEnd), CDate(_DateEndOfMonth))) + 1
                            End If
                        End If

                        If _TotalDay >= _WorkingDay Then
                            _FNEmpBaht = 0
                            _WorkingDay = 0
                        Else
                            _FNEmpBaht = _FNSlaryPerMonth - CDbl(Format(_TotalDay * _FNSlaryPerDay, "0.00"))
                            If _WorkingDay > 30 Then _WorkingDay = 30
                            _WorkingDay = _WorkingDay - _TotalDay
                        End If

                    End If

                    If _WorkingDay > 30 Then _WorkingDay = 30

                    _WorkingDay = CDbl(Format(((_WorkingDay * 480) - (_Gtotalleave)) / 480, "0.00"))
                    _WorkingDay = _WorkingDay - (_GFNAbsent / 480)

                    If _GFNAbsentCutTime > 0 Then
                        _nBahtAbsent = CDbl(Format((_GFNAbsentCutTime / 480) * _FNSlaryPerDay, "0.00"))
                        _FNEmpBaht = _FNEmpBaht - _nBahtAbsent
                    End If

                    If _WorkingDay < 0 Then
                        _WorkingDay = 0
                    End If

                Else
                    _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.00"))
                End If

                _WorkingDay = _WorkingDay + _DayAdjAdd

                _GFNTimeMin = _GFNTimeMin + (_DayAdjAdd * 480)
                _FNEmpBaht = _FNEmpBaht + _WageAdjAdd
                _nBahtOt1 = CDbl(Format(_nBahtOt1, "0.00"))
                _nBahtOt15 = CDbl(Format(_nBahtOt15, "0.00"))
                _nBahtOt2 = CDbl(Format(_nBahtOt2, "0.00"))
                _nBahtOt3 = CDbl(Format(_nBahtOt3, "0.00")) + _GAmtPlus
                _nBahtOt4 = CDbl(Format(_nBahtOt4, "0.00"))

                Dim _TmpPe As String = ""

                If _FTEmpState = "2" Then
                Else
                    _TmpPe = IIf(Val(_PayTerm) - 1 Mod 2 = 1, (Val(_PayTerm) - 1).ToString("00"), "")
                End If

                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน ประเภทจ่ายเป็นเดือน ของงวดก่อนหน้า ---------------------

                If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='1'  ").Length > 0 Then

                    Dim _BFSDate As String = ""
                    Dim _BFEDate As String = ""

                    _Qry = " SELECT TOP 1  FDCalDateBegin, FDCalDateEnd"
                    _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & " WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & " AND FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & " AND FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND FTPayMonth IN (   "
                    _Qry &= vbCrLf & "  Select FTPayMonth"
                    _Qry &= vbCrLf & "    FROM THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "   AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & " )  "

                    _dttempdata = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                    For Each Row As DataRow In _dttempdata.Rows
                        _BFSDate = Row!FDCalDateBegin.ToString
                        _BFEDate = Row!FDCalDateEnd.ToString
                    Next

                    If _BFSDate <> "" And _BFEDate <> "" Then

                        _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                        _Qry &= vbCrLf & " 	,ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                        _Qry &= vbCrLf & " 	,ISNULL(FNOT1_5,0) AS FNOT1_5"
                        _Qry &= vbCrLf & " 	,ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                        _Qry &= vbCrLf & " 	,ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                        _Qry &= vbCrLf & " ,ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                        _Qry &= vbCrLf & " ,ISNULL(FNLateMMin,0) As FNLateMorning"
                        _Qry &= vbCrLf & " 	,ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                        _Qry &= vbCrLf & " 	,ISNULL(FNAbsent,0) AS FNAbsent "
                        _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0)  + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                        _Qry &= vbCrLf & " ,ISNULL(FNOT1Min,0) As FNOT1Min  "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                        _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                        _Qry &= vbCrLf & " ,ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                        _Qry &= vbCrLf & ",P.FTOverClock,P.FTWeekDay"
                        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                        _Qry &= vbCrLf & "    WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                        _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                        _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                        _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Do While _BFSDate <= _BFEDate
                            _FTShift = ""
                            Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                            Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                            For Each R2 In _R

                                _FTShift = R2!FTShift.ToString
                                _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)

                                _InOT = R2!FTIn3.ToString
                                _OutOT = R2!FTOut3.ToString

                                _Over = R2!FTOverClock.ToString

                                If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    If _FTShift <> "" Then

                                        _SPDateType = 0

                                        _Holiday = ""

                                        _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                        _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                        _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' AND FTStateActive='1' "
                                        _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                        If _Holiday <> "" Then _SPDateType = 2

                                        Dim _StateLeaveOther As Boolean = False
                                        Dim _StateLeavacation As Boolean = False


                                        Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                        Dim _SumLeave As Integer = 0

                                        For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                            _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                            If Val(sR!LeaveType) = 1 Then
                                                _StateLeavacation = True
                                            Else
                                                _StateLeaveOther = True
                                            End If

                                            If Val(sR!LeaveType) = 2 Then
                                                _StateFTStaMaternityleaveNotpay = True
                                            End If

                                        Next

                                        For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='1' ")
                                            Dim _StatePass As Boolean = True

                                            If _OutOT <> "" Then
                                                Beep()
                                            End If

                                            If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                            If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                            If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                            If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                            If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                            If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                            If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                            End If

                                            If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                            If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                            If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                If _STime.Length = _ETime.Length Then
                                                    If IsDate(_STime) And IsDate(_ETime) Then
                                                        If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If
                                                Else
                                                    _StatePass = False
                                                End If

                                            End If

                                            If _StatePass Then
                                                _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then

                                                    _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))

                                                Else

                                                    For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                        xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                    Next

                                                End If

                                            End If
                                        Next
                                    End If
                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                                End If
                            Next

                            _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                        Loop
                    End If
                End If

                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                '-------- รายได้อื่นๆจ่ายงวดกลางเดือน--------------------
                If _FTEmpState <> "2" And Val(_PayTerm) Mod 2 = 1 Then
                    If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='2'  ").Length > 0 Then

                        Dim _BFSDate As String = ""
                        Dim _BFEDate As String = ""

                        _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                        _BFEDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_BFSDate, 8) & "01", 1), -1)) 'วันสุดท้ายของเดือน

                        If _BFSDate <> "" And _BFEDate <> "" Then

                            _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                            _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                            _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                            _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                            _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                            _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                            _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                            _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                            _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                            _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                            _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                            _Qry &= vbCrLf & " ,P.FTOverClock,P.FTWeekDay"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                            _Qry &= vbCrLf & "    WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                            _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                            Do While _BFSDate <= _BFEDate
                                _FTShift = ""
                                Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                                Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                For Each R2 In _R

                                    _FTShift = R2!FTShift.ToString
                                    _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                    _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                    _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                    _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                    _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                    _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                    _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                    _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                    _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                    _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                    _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                    _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                    _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                    _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                    _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                    _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                    _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                                    _InOT = R2!FTIn3.ToString
                                    _OutOT = R2!FTOut3.ToString
                                    _Over = R2!FTOverClock.ToString

                                    If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                        If _FTShift <> "" Then

                                            _SPDateType = 0

                                            _Holiday = ""

                                            _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                            _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'  AND FTStateActive='1' "
                                            _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                            If _Holiday <> "" Then _SPDateType = 2

                                            Dim _StateLeaveOther As Boolean = False
                                            Dim _StateLeavacation As Boolean = False


                                            Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                            Dim _SumLeave As Integer = 0

                                            For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                                _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                                If Val(sR!LeaveType) = 1 Then
                                                    _StateLeavacation = True
                                                Else
                                                    _StateLeaveOther = True
                                                End If

                                                If Val(sR!LeaveType) = 2 Then
                                                    _StateFTStaMaternityleaveNotpay = True
                                                End If

                                            Next

                                            For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='2' ")
                                                Dim _StatePass As Boolean = True

                                                If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                                If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                                If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                                If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                                If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                                If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)

                                                If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                    _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                                End If

                                                If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                                If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                                If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                    Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                    Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                    If _STime.Length = _ETime.Length Then
                                                        If IsDate(_STime) And IsDate(_ETime) Then
                                                            If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                                _StatePass = False
                                                            End If
                                                        Else
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If

                                                End If

                                                If _StatePass Then
                                                    _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                    If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                    If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                    If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                                        _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                                    Else
                                                        For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                            xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                        Next
                                                    End If

                                                End If
                                            Next
                                        End If
                                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    End If

                                Next

                                _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                            Loop
                        End If
                    End If
                End If
                '-------------------------------------------------------------------------------------------
                If _FTEmpState = "2" And Val(_PayTerm) Mod 2 = 0 Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1'")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next
                End If

                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0'")
                    Dim _StatePass As Boolean = True

                    If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                    If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                    If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                    If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                    If _StatePass Then

                        _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                        If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                        If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                        If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                            _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                        Else

                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                            Next

                        End If
                    End If
                Next

                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1'")
                    Dim _StatePass As Boolean = True

                    If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                    If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                    If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                    If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                    If _StatePass Then

                        _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                        If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                        If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                        If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                            _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                        Else

                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                            Next

                        End If
                    End If
                Next

                For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTFinType='2'")
                    _FCDeduct = _FCDeduct + Val(R2!FCFinAmt.ToString)

                    If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                    If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                    If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                        _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                    Else

                        For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                            xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                        Next

                    End If


                Next
                '---------รายได้รายหัก อื่นๆ-------------------------

                '------------------- สิ้นสุดการคำนวณรายวัน
                _FTWorkmenAmtBefore = 0
                _FTTotalCalWorkmenBefore = 0

                _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FCSocial"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocial,0)) AS FCSocialAmt"
                _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                _Qry &= vbCrLf & "  Select FNMonth"
                _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                _Qry &= vbCrLf & "  )  "

                Dim _DtSso As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                If _DtSso.Rows.Count > 0 Then
                    _SocialBefore = Val(_DtSso.Rows(0)!FCSocial.ToString)
                    _SocialBeforeAmt = Val(_DtSso.Rows(0)!FCSocialAmt.ToString)
                End If

                If _FTEmpState = "2" Or _FTEmpState = "3" Then

                    If FTStaDeductAbsent = 0 Then
                        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent + _nBahtAbsent)
                    Else
                        _nBahtAbsent = 0
                        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent)
                    End If


                    If _FNEmpBaht < 0 Then _FNEmpBaht = 0
                End If

                _TotalCalTax = 0 : _TaxAmt = 0

                _TotalCalSso = _FNEmpBaht + _HBaht + _FTOtherAddCalculateSocial + _FTAddCalculateSocial + _GtotalleavePayCalSsoAmt
                ' _TotalCalTax = _FNEmpBaht + _HBaht + _Lapaid + _FCPayVacationBaht
                _TotalCalTax = _FNEmpBaht + _HBaht + _Lapaid + _FCPayVacationBaht + _FNIncentiveAmt

                '-----------------กองทุนสำรองเลี้ยงชีพ-------------------------------
                If _ContributedFundBeginPay Then
                    Dim _EMpWorkAge As Integer = Val(R!FNEmpWorkAge.ToString)

                    For Each sR As DataRow In _THRMContributedFund.Select(" FNAgeBegin <= " & _EMpWorkAge & " AND FNAgeEnd >=" & _EMpWorkAge & " ")

                        FTTotalCalContributedAmt = _TotalCalSso

                        FTContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNEmpAmtPer.ToString)) / 100.0), "0"))
                        FTCmpContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNCmpAmtPer.ToString)) / 100.0), "0"))

                        Exit For

                    Next

                End If
                '-----------------กองทุนสำรองเลี้ยงชีพ----------------------------

                '-----------------หักองทุนทดแทน---------------------------------
                FTTotalCalWorkmen = _TotalCalSso

                If _FTMaxCalWorkmen > 0 Then

                    _SocialPayMax = CDbl(Format(((_FTMaxCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))

                    If (_TotalCalSso + _FTTotalCalWorkmenBefore) > _FTMaxCalWorkmen Then
                        FTTotalCalWorkmen = _FTMaxCalWorkmen
                    ElseIf FTTotalCalWorkmen > 0 Then
                        FTTotalCalWorkmen = FTTotalCalWorkmen
                    Else
                        FTTotalCalWorkmen = 0
                    End If

                    If _FTTotalCalWorkmenBefore > 0 Then
                        FTWorkmenAmt = CDbl(Format((((_CalSo + _FTTotalCalWorkmenBefore) * _FTMaxWorkmenRate) / 100.0), "0"))
                        FTWorkmenAmt = FTWorkmenAmt - _FTWorkmenAmtBefore
                    Else
                        FTWorkmenAmt = CDbl(Format(((FTTotalCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))
                    End If
                End If

                '-----------------กองทุนทดแทน-------------------------------

                '--------- คิดประกันสังคม-----------
                _SocialPayMax = HCfg.HMaxSocialBaht
                _CalSo = 0
                _FCSocial = 0

                If _FTCalSocialSta <> "1" Then ' 1 ไม่่คิดประกันสังคม

                    If (_TotalCalSso + _SocialBefore) >= _SocialMaxIncome Then
                        _CalSo = _SocialMaxIncome
                    ElseIf (_TotalCalSso + _SocialBefore) < _SocialMaxIncome And (_TotalCalSso + _SocialBefore) >= _SocialMinIncome Then
                        _CalSo = (_TotalCalSso + _SocialBefore)
                    ElseIf _TotalCalSso > 0 Then
                        _CalSo = _SocialMinIncome
                    Else
                        _CalSo = 0
                    End If

                    If _SocialBefore > 0 Then
                        _FCSocial = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRate) / 100.0), "0.00")), "0"))
                        _FCSocial = IIf(_SocialBeforeAmt > _FCSocial, 0, _FCSocial - _SocialBeforeAmt)
                    Else
                        _FCSocial = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRate) / 100.0), "0.00")), "0"))
                    End If

                Else
                    _TotalCalSso = 0
                End If

                _FNEmpDiligent = 0
                _FTStateInDustin = ""
                _FNDeligentPeriod = 0

                If _CalIns <> "" Then
                    Dim _StateCalIns As Boolean = False
                    Dim StateTypePayDeligent As String = ""

                    _Qry = "SELECT TOP 1 FNPayDeligent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMDiligentConfigHD WHERE FTDeligentCode='" & HI.UL.ULF.rpQuoted(_CalIns) & "' "
                    StateTypePayDeligent = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    Select Case StateTypePayDeligent
                        Case "0"

                            _StateCalIns = True
                        Case "1"

                            If Val(_PayTerm) Mod 2 = 1 Then

                                _FTSatrtCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                                _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1), -1)) 'วันสุดท้ายของเดือน
                                _StateCalIns = True
                            End If

                        Case "2"

                            If Right(Left(_EndDate, 7), 2) = "12" Or Right(Left(_StartDate, 7), 2) = "12" Then
                                If _EndDate >= Left(_EndDate, 8) & "30" Then
                                    _FTSatrtCalculateDateIns = Left(_StartDate, 7) & "/01"  'วันแรกของเดือน
                                    _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_StartDate, 7) & "/01", 1), -1)) 'วันสุดท้ายของเดือน

                                    _StateCalIns = True
                                End If

                            Else
                                'If Val(_PayTerm) = 1 Then

                                '    _FTSatrtCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                                '    _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1), -1)) 'วันสุดท้ายของเดือน
                                '    _StateCalIns = True

                                'Else
                                '    If Val(_PayTerm) Mod 2 = 0 Then

                                '        _FTSatrtCalculateDateIns = Left(_StartDate, 7) & "/01"  'วันแรกของเดือน
                                '        _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_StartDate, 7) & "/01", 1), -1)) 'วันสุดท้ายของเดือน

                                '        _StateCalIns = True

                                '    End If
                                'End If

                                If Val(_PayTerm) Mod 2 = 0 Then

                                    _FTSatrtCalculateDateIns = Left(_StartDate, 7) & "/01"  'วันแรกของเดือน
                                    _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_StartDate, 7) & "/01", 1), -1)) 'วันสุดท้ายของเดือน

                                    _StateCalIns = True

                                End If

                            End If




                    End Select



                    If _StateCalIns Then
                        _Qry = " SELECT   ISNULL(PayIndus,0) As PayIndus , ISNULL(StateIndus,'') AS StateIndus,ISnuLL(FNDeligentPeriod,0) AS FNDeligentPeriod"
                        _Qry &= vbCrLf & "	FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.FN_CALCULATE_INDUST(" & Val(_EmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDateIns) & "','" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDateIns) & "','" & HI.UL.ULF.rpQuoted(_CalIns) & "')"

                        Dim _DtIns As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        If _DtIns.Rows.Count > 0 Then
                            _FNEmpDiligent = Val(_DtIns.Rows(0)!PayIndus.ToString)
                            _FTStateInDustin = _DtIns.Rows(0)!StateIndus.ToString
                            _FNDeligentPeriod = Val(_DtIns.Rows(0)!FNDeligentPeriod.ToString)
                        End If

                    End If
                End If

                _FTAddCalculateTax = _FTAddCalculateTax + _ShiftOTAmt
                _FCAdd = _FCAdd + _ShiftAmt + _ShiftOTAmt

                If _FTCalTaxSta <> "1" Then

                    With _EmpDisTax
                        .FTSosial = _FCAccumulateSocial + _FCSocial + (_FCSocial * (_TotalInstalment - _Instalment))

                        If .FTSosial > (((_SocialMaxIncome * _SocialRate) / 100.0) * 12) Then
                            .FTSosial = CDbl(Format((((_SocialMaxIncome * _SocialRate) / 100.0) * 12), "0.00"))
                        End If

                        .BaseSlary = (_TotalCalTax * (_TotalInstalment - _Instalment)) + _TotalCalTax
                        .OtherSlary = _FTOtherAddCalculateTax + _FTAddCalculateTax + _FNEmpDiligent + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                        .Cfg_ContributedDeducToTheFund = .Cfg_ContributedDeducToTheFund + FTContributedAmt + (FTContributedAmt * (_TotalInstalment - _Instalment))

                    End With

                    _TotalCalTax = _TotalCalTax + _EmpDisTax.OtherSlary
                    Dim _TaxOther As Double = _EmpDisTax.OtherSlary
                    Dim _TaxOtherAmt As Double = 0
                    Dim _Total As Double = GETnRecalDiscTax(_EmpDisTax, _EmpTaxYear)

                    _EmpTaxYear.FTSocial = _EmpDisTax.FTSosial

                    _EmpTaxYear.FTTotalCalTax = _Total


                    Dim _TotalTax As Double = GETnTax(_Total, _TaxOther, _TaxOtherAmt)

                    _EmpTaxYear.FTTotalTax = (_TotalTax + _TaxOtherAmt) 'ภาษีที่ต้องจ่าย
                    '' _TotalTax = CDbl(Format(_EmpTaxYear.FTTotalTax, "0.00"))
                    '_TotalTax = CDbl(Format(_EmpTaxYear.FTTotalTax - _EmpDisTax.BeforeTax, "0.00"))
                    _TotalTax = CDbl(Format(_TotalTax - _EmpDisTax.BeforeTax, "0.00"))

                    If _TotalTax > 0 Or _TaxOtherAmt > 0 Then
                        _TaxAmt = CDbl(Format((_TotalTax / ((_TotalInstalment - _Instalment) + 1)), "0.00"))
                        _TaxAmt = _TaxAmt + _TaxOtherAmt
                    Else
                        _TaxAmt = 0
                    End If

                    _EmpTaxYear.FTTotalTaxPay = _FCAccumulateTax + _TaxAmt

                Else

                    _TotalCalTax = 0
                    _TaxAmt = 0

                End If

                _FCOtherAdd = _FCOtherAdd + _FNPayterm25Amt

                _Net = (_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _BonusAmt) - _FCOtherDeduct - _FCDeduct
                _FCBaht = _FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4

                _FNNetpay = (_Net - (_FCSocial + _TaxAmt + FTContributedAmt))
                _FNNetpayOrg = _FNNetpay

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll (FTInsUser, FTInsDate, FTInsTime,"
                _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
                _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
                _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId,  FNHSysPayRollPayId"
                _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
                _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
                _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
                _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
                _Qry &= vbCrLf & ",FNTotalWKNMin,  FNOt1Min, FNOt15Min, FNOt2Min"
                _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
                _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
                _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
                _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
                _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
                _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
                _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
                _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
                _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
                _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
                _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg , FNVacationRetMin, FNVacationRetAmt,FNWorkDay,FTStateCalSocial,FTStateCalTax, FNSocialRateEmp,FNSocialRateCmp )"
                _Qry &= vbCrLf & " 	SELECT '" & HI.UL.ULF.rpQuoted(_User) & "',CONVERT(varchar(10),GetDate(),111),CONVERT(varchar(8),GetDate(),114)"
                _Qry &= vbCrLf & " 	,'" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ""
                _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "','" & _EmpType & "','" & HI.UL.ULDate.ConvertEnDB(_PayDate) & "'"
                _Qry &= vbCrLf & " 	," & Val(_FTDeptCode) & ""
                _Qry &= vbCrLf & " 	," & Val(_FTDivCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTSectCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTUnitCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPos) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPaymentCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBankCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBranchCode) & " "
                _Qry &= vbCrLf & " 	,'" & HI.UL.ULF.rpQuoted(_FTAccNo) & "'," & _TotalHoliDay & ""
                _Qry &= vbCrLf & " 	," & _FCSalary & ""
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNTimeMin & " / 60) + Convert(numeric(18,2),(( " & _GFNTimeMin & " %60) /100.00)) "
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1_5Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1_5Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT2Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT2Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2)," & _GFNOT3Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT3Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GFNOT4Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT4Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleavePay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleavePay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleaveNotPay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleaveNotPay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _Gtotalleave & " / 60) + Convert(numeric(18,2),(( " & _Gtotalleave & " %60) /100.00))"
                _Qry &= vbCrLf & " 	, " & _GFNTimeMin
                _Qry &= vbCrLf & " 	, " & _GFNOT1Min
                _Qry &= vbCrLf & " 	, " & _GFNOT1_5Min
                _Qry &= vbCrLf & ", " & _GFNOT2Min
                _Qry &= vbCrLf & "," & _GFNOT3Min
                _Qry &= vbCrLf & ",  " & _GFNOT4Min
                _Qry &= vbCrLf & ",  " & _GFNLateNormalMin
                _Qry &= vbCrLf & ",  " & _GFNLateNormalCut
                _Qry &= vbCrLf & ",  " & _GFNCutAbsent
                _Qry &= vbCrLf & ",  " & _GFNAbsent & "," & (_GFNTimeMin + _GFNOT1Min + _GFNOT1_5Min + _GFNOT2Min + _GFNOT3Min + _GFNOT4Min)
                _Qry &= vbCrLf & ",  " & _GtotalleavePay
                _Qry &= vbCrLf & ", " & _GtotalleaveNotPay
                _Qry &= vbCrLf & ", " & _Gtotalleave
                _Qry &= vbCrLf & ", " & _FNEmpBaht & " "
                _Qry &= vbCrLf & ", " & _nBahtOt1 & " "
                _Qry &= vbCrLf & "," & _nBahtOt15 & " "
                _Qry &= vbCrLf & "," & _nBahtOt2 & " "
                _Qry &= vbCrLf & "," & _nBahtOt3 & " "
                _Qry &= vbCrLf & "," & _nBahtOt4 & " "
                _Qry &= vbCrLf & "," & (_FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FNIncentiveAmt + _BonusAmt) & " "
                _Qry &= vbCrLf & "," & _FNEmpDiligent & " "
                _Qry &= vbCrLf & "," & _FCPayVacationBaht & " "
                _Qry &= vbCrLf & "," & _Lapaid & " "
                _Qry &= vbCrLf & "," & _LateCutAmt & " "
                _Qry &= vbCrLf & "," & _LateCutAmtAbsent & " "
                _Qry &= vbCrLf & "," & _nBahtAbsent & " "
                _Qry &= vbCrLf & "," & _TotalCalSso & " "
                _Qry &= vbCrLf & "," & _TotalCalTax & " "
                _Qry &= vbCrLf & "," & _FCAdd & " "
                _Qry &= vbCrLf & "," & _FCOtherAdd & " "
                _Qry &= vbCrLf & "," & _FCDeduct & " "
                _Qry &= vbCrLf & "," & _FCOtherDeduct & " "
                _Qry &= vbCrLf & "," & _Net & " "
                _Qry &= vbCrLf & "," & _FCSocial & " "
                _Qry &= vbCrLf & "," & _TaxAmt & " "
                _Qry &= vbCrLf & "," & _HBaht & " "
                _Qry &= vbCrLf & "," & (_FNNetpay) & ""
                _Qry &= vbCrLf & "," & (_Net + _FCAccumulateIncome) & ""
                _Qry &= vbCrLf & "," & (_FCSocial + _FCAccumulateSocial) & ""
                _Qry &= vbCrLf & "," & (_TaxAmt + _FCAccumulateTax) & ""
                _Qry &= vbCrLf & ",'" & _FTStateInDustin & "' "
                _Qry &= vbCrLf & "," & (FTTotalCalContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTCmpContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTTotalCalWorkmen) & ""
                _Qry &= vbCrLf & "," & (FTWorkmenAmt) & ""
                _Qry &= vbCrLf & "," & _AmtRetire & ""
                _Qry &= vbCrLf & "," & _GtotalleavePayCalSsoAmt & ""
                _Qry &= vbCrLf & "," & _WorkingDay & " "
                _Qry &= vbCrLf & "," & _WageAdjAdd & ""
                _Qry &= vbCrLf & "," & _FNIncentiveAmt & ""
                _Qry &= vbCrLf & "," & _FNNetpayOrg & ""
                _Qry &= vbCrLf & "," & FNVacationRetMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetAmt & ""
                _Qry &= vbCrLf & "," & FNWorkDayInWeek & ""
                _Qry &= vbCrLf & " 	,'" & HI.UL.ULF.rpQuoted(_FTCalSocialSta) & "'"
                _Qry &= vbCrLf & " 	,'" & HI.UL.ULF.rpQuoted(_FTCalTaxSta) & "'"
                _Qry &= vbCrLf & "," & _SocialRate & " "
                _Qry &= vbCrLf & "," & _SocialRateCmp & " "


                'FNWorkDay
                ' , FNVacationRetMin, FNVacationRetAmt
                '_FNNetpayOrg
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                If _FTCalTaxSta <> "1" And _FTEmpIdNo <> "" Then
                    '-----------------------------ภาษี -----------------------------------------------------
                    _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTaxYear "
                    _Qry &= vbCrLf & "  WHERE FTYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & "  AND  FTEmpIdNo='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' AND FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " "
                    _Qry &= vbCrLf & "  INSERT INTO THRTTaxYear (FNHSysCmpId,FTYear, FTEmpIdNo, FNAmt, FNExpenses, FNNetAmt, "
                    _Qry &= vbCrLf & "  FNModEmp, FNModMate, FNChildNotLern, FNChildLern, FNChildNotLernAmt, FNChildLernAmt, FNInsurance, FNProvidentfund, FNInterest, FNSocial, FNDonation, "
                    _Qry &= vbCrLf & "  FNProvidentfundOver, FNGPF, FNSavingsFund, FNCommutation, FNUnitRMF, FNModFather, FNModMother, FNModFatherMate, FNModMotherMate, FNUnitLTF, "
                    _Qry &= vbCrLf & "  FNDonationLern, FNParentsHealthInsurance, FNSupportSport, FNAcquisitionOfProperty, FNPension, FNTravel, FNTotalCalTax, FNTotalTax,FNTotalTaxPay )"
                    _Qry &= vbCrLf & "  SELECT " & HI.ST.SysInfo.CmpID & ",'" & _PayYear & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "

                    With _EmpTaxYear

                        _Qry &= vbCrLf & "," & .FTAmt + _TotalCalTax & " "
                        _Qry &= vbCrLf & "," & .FTExpenses & ""
                        _Qry &= vbCrLf & "," & .FTNetAmt & ""
                        _Qry &= vbCrLf & "," & .FTModEmp & ""
                        _Qry &= vbCrLf & "," & .FTModMate & ""
                        _Qry &= vbCrLf & "," & .FNChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FNChildLern & " "
                        _Qry &= vbCrLf & "," & .FTChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FTChildLern & ""
                        _Qry &= vbCrLf & "," & .FTInsurance & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfund & ""
                        _Qry &= vbCrLf & "," & .FTInterest & ""
                        _Qry &= vbCrLf & "," & .FTSocial + _FCSocial & ""
                        _Qry &= vbCrLf & "," & .FTDonation & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfundOver & ""
                        _Qry &= vbCrLf & "," & .FTGPF & ""
                        _Qry &= vbCrLf & "," & .FTSavingsFund & ""
                        _Qry &= vbCrLf & "," & .FTCommutation & ""
                        _Qry &= vbCrLf & "," & .FTUnitRMF & ""
                        _Qry &= vbCrLf & "," & .FTModFather & ""
                        _Qry &= vbCrLf & "," & .FTModMother & ""
                        _Qry &= vbCrLf & "," & .FTModFatherMate & ""
                        _Qry &= vbCrLf & "," & .FTModMotherMate & ""
                        _Qry &= vbCrLf & "," & .FTUnitLTF & ""
                        _Qry &= vbCrLf & "," & .FTDonationLern & ""
                        _Qry &= vbCrLf & "," & .FTParentsHealthInsurance & ""
                        _Qry &= vbCrLf & "," & .FTSupportSport & ""
                        _Qry &= vbCrLf & "," & .FTAcquisitionOfProperty & ""
                        _Qry &= vbCrLf & "," & .FTPension & ""
                        _Qry &= vbCrLf & "," & .FTTravel & ""
                        _Qry &= vbCrLf & "," & .FTTotalCalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTaxPay & ""

                    End With

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    '----------------------------- ภาษี -----------------------------------------------------
                End If

                '-----------------------------รายได้อื่นๆ -----------------------------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Dim _AllFincode As String = ""

                For Each _R As DataRow In _DtFin.Select("FCTotalFinAmt<>'0'")
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTFinCode, FTFinAmt," & _R!FCTotalFinAmt.ToString & ",0," & _R!FCTotalFinAmt.ToString & ""
                    _Qry &= vbCrLf & " FROM  THRMEmployeeFin "
                    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND  FTFinCode = ('" & _AllFincode & "') "

                    HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR)

                Next

                For Each _R As DataRow In _dt.Select("FCFinAmt<>0")
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_R!FCFinAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FCFinAmtOther=" & _R!FCFinAmt.ToString & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _AllFincode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then

                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ",'" & _AllFincode & "',0, 0," & _R!FCFinAmt.ToString & "," & _R!FCFinAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR)

                    End If

                Next

                If _ShiftAmt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='001' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '001'," & _ShiftValue.ToString & "," & _ShiftAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _ShiftOTAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftOTAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='007' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '007'," & _ShiftOTValue.ToString & "," & _ShiftOTAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If


                If _FNPayterm25Amt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNPayterm25Amt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='024' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '024'," & _FNPayterm25Amt.ToString & "," & _FNPayterm25Amt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If


                If _FNIncentiveAmt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNIncentiveAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='011' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '011'," & _FNIncentiveAmt.ToString & "," & _FNIncentiveAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _BonusAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_BonusAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='008' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _BonusAmt.ToString & "," & _BonusAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _FNEmpDiligent > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNEmpDiligent.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    If _FNDeligentPeriod = 0 Then
                        _Qry &= vbCrLf & " AND FTFinCode='008' "
                    Else
                        _Qry &= vbCrLf & " AND FTFinCode='009' "

                    End If


                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        If _FNDeligentPeriod = 0 Then
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                        Else
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '009'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                        End If
                    End If

                End If

                'If _AmtReturnVacation > 0 Then

                '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_AmtReturnVacation.ToString) & " "
                '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTFinCode='023' "

                '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '023'," & _ShiftValue.ToString & "," & _AmtReturnVacation.ToString & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If

                'End If
                '----------- เงินคืนพักร้อน-------------------------------


                '' _FNSlaryPerMin
                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave (FTPayYear, FTPayTerm, FNHSysEmpID, FTLeaveType, FNTotalHour, FNTotalMinute, FNTotalPayHour, FNTotalPayMinute, FNTotalNotPayHour,FNTotalNotPayMinute,FNTotalPayLeaveBaht,FNTotalNotPayLeaveBaht)"
                _Qry &= vbCrLf & "  SELECT      '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTLeaveType,Convert(numeric(18,2), Sum(FNTotalMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalMinute) %60) /100.00)) , "
                _Qry &= vbCrLf & "  Sum(FNTotalMinute), Convert(numeric(18,2), Sum(FNTotalPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalPayMinute) %60) /100.00)), Sum(FNTotalPayMinute),  Convert(numeric(18,2),Sum(FNTotalNotPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalNotPayMinute) %60) /100.00)), SUM(FNTotalNotPayMinute)"
                _Qry &= vbCrLf & " ,Convert(numeric(18,3),Sum(FNTotalPayMinute)* " & _FNSlaryPerMin & ")"
                _Qry &= vbCrLf & " ,Convert(numeric(18,3),Sum(FNTotalNotPayMinute)* " & _FNSlaryPerMin & ")"
                _Qry &= vbCrLf & "  FROM THRTTransLeave "
                _Qry &= vbCrLf & " WHERE        (FNHSysEmpID = '" & Val(_EmpCode) & "') "
                _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' "
                _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "' "
                _Qry &= vbCrLf & "  GROUP BY   FNHSysEmpID, FTLeaveType"
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            End If

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & "  	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate (FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg, FNVacationRetMin, FNVacationRetAmt,FNWorkDay,FTStateCalSocial,FTStateCalTax)"
            _Qry &= vbCrLf & " SELECT TOP 1  FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg, FNVacationRetMin, FNVacationRetAmt,FNWorkDay,FTStateCalSocial,FTStateCalTax"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            _Qry &= vbCrLf & " SELECT FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate ( FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay)"
            _Qry &= vbCrLf & " SELECT  FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

        Next

        Return True

    End Function

    Private Shared Function MoneyRetVacationPerDay(ByVal _PayYear As String, ByVal _PayTerm As String, ByVal _StartDate As String, ByVal _EndDate As String, _EmpSysId As Integer)
        Dim _Cmd As String = ""

        Dim _dt As DataTable
        Dim _FNMoneyRetVacationSum As Double = 0
        Dim _FNMoneyRetVacationPerDay As Double = 0

        _Cmd = "  SELECT TOP 24 FNTotalIncome, FNAttandanceAmt"
        _Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll AS X WITH(NOLOCK)"
        _Cmd &= vbCrLf & " WHERE FNHSysEmpID=" & _EmpSysId & ""
        _Cmd &= vbCrLf & " AND FTPayYear + FTPayTerm <'" & HI.UL.ULF.rpQuoted(_PayYear & _PayTerm) & "' "
        _Cmd &= vbCrLf & " ORDER BY FTPayYear +  FTPayTerm DESC "
        _dt = HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR)

        If _dt.Rows.Count >= 24 Then

            For Each R As DataRow In _dt.Rows
                _FNMoneyRetVacationSum = _FNMoneyRetVacationSum + Val(R!FNTotalIncome.ToString)
            Next

            _FNMoneyRetVacationPerDay = Double.Parse(Format(50.0 * (((_FNMoneyRetVacationSum / 24.0) / 26)), "0.00"))

        End If

        _dt.Dispose()


        Return _FNMoneyRetVacationPerDay
    End Function


    Public Shared Function LoadInsuranceVNRate() As Boolean
        Dim bLoad As Boolean = False
        Dim sSQL As String
        Try
            Dim dtInsuranceRate As System.Data.DataTable

            sSQL = ""
            sSQL = "SELECT A.[FNInsuranceVN]"
            sSQL &= Environment.NewLine & "       ,B.[FTNameEN] AS [FTInsuranceDesc]"
            sSQL &= Environment.NewLine & "       ,A.[FNEmployeeRate]"
            sSQL &= Environment.NewLine & "       ,A.[FNEmployerRate]"
            sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].[dbo].[THRMInsuranceVN] AS A (NOLOCK) INNER JOIN (SELECT L1.* FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SYSTEM) & "]..[HSysListData] AS L1 (NOLOCK) WHERE L1.FTListName = N'FNInsuranceVN') AS B ON A.FNInsuranceVN = B.FNListIndex"
            sSQL &= Environment.NewLine & "WHERE A.FTStateActive = N'1'"
            sSQL &= Environment.NewLine & "ORDER BY A.FNInsuranceVN ASC;"

            dtInsuranceRate = HI.Conn.SQLConn.GetDataTable(sSQL, HI.Conn.DB.DataBaseName.DB_HR)

            If Not DBNull.Value.Equals(dtInsuranceRate) AndAlso dtInsuranceRate.Rows.Count > 0 Then
                Dim nIndex As Integer

                nIndex = 0
                For Each oDataRow As System.Data.DataRow In dtInsuranceRate.Rows

                    ReDim Preserve HCfg.HCfg_InsuranceVNRate(nIndex)

                    HCfg.HCfg_InsuranceVNRate(nIndex).FNInsuranceVN = Val((oDataRow!FNInsuranceVN).ToString())
                    HCfg.HCfg_InsuranceVNRate(nIndex).FTInsuranceDesc = (oDataRow!FTInsuranceDesc).ToString()
                    HCfg.HCfg_InsuranceVNRate(nIndex).FNEmployeeRate = Val((oDataRow!FNEmployeeRate).ToString())
                    HCfg.HCfg_InsuranceVNRate(nIndex).FNEmployerRate = Val((oDataRow!FNEmployerRate).ToString())

                    nIndex = nIndex + 1

                Next

            End If

        Catch ex As Exception
            MsgBox(ex.Message().ToString() & Environment.NewLine & ex.StackTrace.ToString(), MsgBoxStyle.OkOnly + MsgBoxStyle.Information)
        End Try

        Return bLoad

    End Function

    Private Enum eTypeInsuranceVN As Integer
        eSocialInsurance = 0
        eHealthInsurance = 1
        eUnemploymentInsurance = 2
        eUnionInsurance = 3
    End Enum






    Public Shared Function CalculateWeekEnd_KM(ByVal _User As String, ByVal _EmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
        ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
        Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
        Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0, Optional FNStateSalaryType As Integer = 0,
        Optional _FNExchangeRate As Double = 0, Optional _FNExchangeRateTHB As Double = 0, Optional FNWorkDayInWeek As Integer = 13,
        Optional FNWorkDayInMonth As Integer = 26, Optional FNWorkDayInWeekBF As Integer = 0, Optional SocialExchangeRate As Double = 0, Optional TaxExchangeRate As Double = 0, Optional _FNCalType As Integer = 0) As Boolean

        Dim result As Boolean = False


        If _FNCalType = "2" Or _FNCalType = "3" Then
            result = CalculateWeekEnd_KM_Monthly(_User, _EmpCode,
                    _EmpType, _StartDate, _EndDate, _PayYear,
                    _PayTerm, _PayDate, _CalIns, _EmpCalType,
                    _StateCalRetire, _ReturnVacation,
                    FTStaDeductAbsent, FTStaCalPayRoll, FNStateSalaryType,
                    _FNExchangeRate, _FNExchangeRateTHB, FNWorkDayInWeek,
                    FNWorkDayInMonth, FNWorkDayInWeekBF, SocialExchangeRate, TaxExchangeRate)

        Else
            result = CalculateWeekEnd_KM_Daily(_User, _EmpCode,
                    _EmpType, _StartDate, _EndDate, _PayYear,
                    _PayTerm, _PayDate, _CalIns, _EmpCalType,
                    _StateCalRetire, _ReturnVacation,
                    FTStaDeductAbsent, FTStaCalPayRoll, FNStateSalaryType,
                    _FNExchangeRate, _FNExchangeRateTHB, FNWorkDayInWeek,
                    FNWorkDayInMonth, FNWorkDayInWeekBF, SocialExchangeRate, TaxExchangeRate)
        End If

        Return result
    End Function

    Public Shared Function CalculateWeekEnd_VT(ByVal _User As String, ByVal _EmpCode As String,
          ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
          ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
          Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
          Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0, Optional FNStateSalaryType As Integer = 0, Optional FNWorkDayInWeek As Integer = 15, Optional FNWorkDayInMonth As Integer = 30) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim _Qry As String
        Dim _dt As DataTable
        Dim _dttemp As DataTable
        Dim _dttempdata As DataTable
        Dim _dttran As DataTable
        Dim _SalaryDevide As Integer = 0
        Dim FNVacationRetMin, FNVacationRetAmt As Double

        Dim _DtFin As New DataTable
        _DtFin.Columns.Add("FTFinCode", GetType(String))
        _DtFin.Columns.Add("FCTotalFinAmt", GetType(String))

        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTPaymentCode As String, _FTBankCode As String, _FNChildNotLearn As Double
        Dim _FCReduceDonate As Double, _FCLifeInsurance As Double
        Dim _FCLoanHouse As Double
        Dim _FCShare As Double, _FCReduceFather As Double, _FCReduceMother As Double
        Dim _FCReSpouseFather As Double, _FCReSpouseMother As Double, _FCReduceEducationSupport As Double, _FTMarryIncome As String
        Dim _FTCalSocialSta As String, _FTCalTaxSta As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FTEmpIdNo As String, _FTBranchCode As String, _FTAccNo As String, _FCLifeFeeMoney As Double
        Dim _FCOtherAdd As Double, _FTOtherAddCalculateSocial As String, _FTOtherAddCalculateTax As String
        Dim _FCOtherAddOt As Double, _FTOtherAddOtCalculateSocial As String, _FTOtherAddOtCalculateTax As String, _FCBFShiftMoney As Double
        Dim _FTShiftMoneyCalculateSocial As String, _FTShiftMoneyCalculateTax As String, _FCDiligent As Double
        Dim _FTDiligentCalculateSocial As String, _FTDiligentCalculateTax As String, _FCBonusEndYear As Double
        Dim _FTBonusEndCalculateSocial As String, _FCOtherDeduct As Double, _FTBonusEndCalculateTax As String
        Dim _FCShelter As Double, _FTShelterCalculateSocial As String, _FTShelterCalculateTax As String
        Dim _FCShareFactory As Double, _FTShareFactoryCalculateSocial As String
        Dim _FTShift As String
        Dim _FNTime, _FNNotRegis, _FNTimeOrg As Double
        Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
        Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
        Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
        Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double, _FNAbsentCutTime As Double
        Dim _FNLeavePay, _FNLeaveNotPay As Double, _FNTimeMin, _FNOT1Min As Double
        Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
        Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
        Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
        Dim _GFNTime, _GFNNotRegis As Double
        Dim _GFNOT1 As Double, _GFNOT1_5 As Double, _GFNOT2 As Double, _GFNOT3 As Double, _GFNOT4 As Double
        Dim _GFNLeaveSick As Double, _GFNLeaveBusiness As Double
        Dim _GFNLeaveVacation As Double, _GFNLeavePregnant As Double, _GFNLeaveOrdain As Double
        Dim _GFNLeaveMarry As Double, _GFNLeaveOther As Double, _GFNLateNormalMin As Double
        Dim _GFNLateNormalCut As Double, _GFNLateOtMin As Double, _GFNLateOtCut As Double
        Dim _GFNLateMorning As Double, _GFNLateAfternoon As Double, _GFNAbsent, _GFNCutAbsent, _GFNAbsentCutTime As Double
        Dim _GFNLeavePay As Double, _GFNTimeMin, _GFNOT1Min As Double
        Dim _GFNOT1_5Min As Double, _GFNOT2Min As Double, _GFNOT3Min As Double, _GFNOT4Min As Double, _GFNLateMMin As Double
        Dim _GFNLateAfMin As Double, _GFNRetireMMin As Double, _GFNRetireAfMin As Double
        Dim _GFNRetireNormalCut As Double, _GFNRetireOtMin As Double, _GFNRetireOtCut As Double
        Dim _dtot As DataTable
        Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double
        Dim _FCAccumulateIncome As Double, _FCAccumulateSocial As Double, _FCAccumulateTax As Double
        Dim _FTSatrtCalculateDate As String, _FTEndCalculateDate As String, _FNEmpDiligent As Double, _FTStateInDustin As String, _FNDeligentPeriod As Integer
        Dim _FTSatrtCalculateDateIns As String, _FTEndCalculateDateIns As String
        Dim _FNEmpBaht, _nBahtOt1 As Double, _nBahtOt15 As Double, _nBahtOt2 As Double, _nBahtOt3 As Double, _nBahtOt4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
        Dim _SocialRate As Double, _SocialRateCmp As Double
        Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
        Dim _TotalHoliDay As Integer
        Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String
        Dim _FNSlaryPerDayRetVa As Double
        Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double
        Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
        Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
        Dim _FTSlary, _FTDivCode, _FTPos As String
        Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
        Dim _Dtemp As DataTable
        Dim _SocialBefore, _SocialBeforeAmt, _SocialPayMax As Double
        Dim _FCAdd, _FTAddCalculateSocial, _FTAddCalculateTax, _FCDeduct, _TotalCalSso, _TotalCalTax, _TaxAmt As Double
        Dim _Gtotalleave, _GtotalleavePay, _GtotalleaveNotPay, _GtotalleavePayCalSso, _GtotalleavePayCalSsoAmt As Double
        Dim _dtLeave As DataTable
        Dim _LeaveCode As String = ""
        Dim _dtAddOtherAmt As DataTable
        Dim _dtAddOtherAmtshift As DataTable
        Dim FCModFather, FCModMother, FCModMateFather, FCModMateMother As Double
        Dim FCPremium, FCInterest, FCUnitRMF, FCUnitLTF, FCDeductDonate, FCDisabledDependents, FCDeductDonateStudy As Double
        Dim FCHealthInsurFatherMotherMate, FTHealthInsurIDFather, FTHealthInsurIDMother As Double
        Dim FTHealthInsurIDFatherMate, FTHealthInsurIDMotherMate As Double
        Dim FTTotalCalContributedAmt, FTContributedAmt, FTCmpContributedAmt, FTTotalCalContributedAcc As Double
        Dim FTTotalCalWorkmen, FTWorkmenAmt, _FTMaxCalWorkmen, _FTMaxWorkmenRate, FTTotalCalWorkmenAcc As Double
        Dim _FTWorkmenAmtBefore, _FTTotalCalWorkmenBefore As Double
        Dim _ShiftAmt As Double = 0
        Dim _ShiftOTAmt As Double = 0
        Dim _ShiftValue As Double = 0
        Dim _ShiftOTValue As Double = 0
        Dim _WorkingDay As Double = 0
        Dim _THRMContributedFund As DataTable
        Dim _EmpDisTax As New HCfg.EmployeeDiscountTax
        Dim _EmpTaxYear As New HCfg.EmpTaxYear
        Dim _FNNetpayOrg As Double = 0.0
        Dim _FNNetpay As Double = 0.0
        Dim _AmtAddCalOT, _GAmtAddCalOT As Double
        Dim CountTerm As Integer = 0
        Dim _SPDateType, _TotalInstalment, _Instalment As Integer
        Dim _ContributedFundBeginPay As Boolean = False
        Dim _DTHoliday As DataTable
        Dim _ShiftAdv As Double = 0
        Dim _AmtPlus As Double = 0
        Dim _GAmtPlus As Double = 0
        Dim FTHldType As Integer = 0
        Dim _AmtRetire As Double = 0
        Dim _WorkAge As Integer = 0
        Dim _WorkAgeDay As Integer = 0
        Dim _AmtReturnVacation As Double = 0
        Dim _FNIncentiveAmt As Double = 0
        Dim _FNPayterm25Amt As Double = 0
        Dim _FTInsurType As Integer = 0
        Dim _DayAdjAdd As Double = 0
        Dim _WageAdjAdd As Double = 0
        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        Dim _FTStatePayHoliday As String = ""
        Dim _FTEmployeeCode As String = ""
        Dim _TmpFDDateEnd As String = ""
        Dim _DTEmpWorkDay As New DataTable
        Dim _BonusAmt As Double = 0
        Dim _FTRetVacation As String = "0"

        _DTEmpWorkDay.Columns.Add("FNSalary", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNDay", GetType(Double))

        Dim _DTEmpHolidayDay As New DataTable
        _DTEmpHolidayDay.Columns.Add("FNSalary", GetType(Double))
        _DTEmpHolidayDay.Columns.Add("FNDay", GetType(Double))

        Dim _DTEmpPayLeaveSick As New DataTable
        _DTEmpPayLeaveSick.Columns.Add("FNSalary", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNDay", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNPayPer", GetType(Double))

        Dim _LeaveSickPay As Integer = 0

        _Qry = "SELECT TOP 1 FNCalType FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType WHERE FNHSysEmpTypeId=" & Val(_EmpType) & "  "
        Dim _TmpCalType As Integer = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "0"))

        If FTStaCalPayRoll = 0 Then
            _DateStartOfMonth = _StartDate  'วันแรกของเดือน
            _DateEndOfMonth = _EndDate 'วันแของเดือน
        Else
            _DateStartOfMonth = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
            _DateEndOfMonth = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        End If
        '----------------------------------   Variable  ------------------------------------

        'If _PayTerm = "01" Then

        '    _Qry = "SELECT TOP 1  FNNetpay"
        '    _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll AS A WITH(NOLOCK)"
        '    _Qry &= vbCrLf & "  WHERE  (FTPayTerm = '25') "
        '    _Qry &= vbCrLf & " AND (FTPayYear = '" & (Integer.Parse(Val(_PayYear)) - 1).ToString("0000") & "')"
        '    _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ")"

        '    _FNPayterm25Amt = Double.Parse(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

        'End If


        With _EmpTaxYear
            .FTAmt = 0 'เงินได้ก่อนหักค่าใช้จ่าย
            .FTExpenses = 0 'ค่าใช้จ่ายส่วนตัว
            .FTNetAmt = 0 'เงินได้หลังหักค่าใช้จ่าย
            .FTModEmp = 0 'ลดหย่อนส่วนตัว
            .FTModMate = 0 'ลดหย่อนคู่สมรส
            .FNChildNotLern = 0 'จำนวนบุตรไม่ศึกษา
            .FNChildLern = 0 'จำนวนบุตรศึกษา
            .FTChildNotLern = 0 'ลดหย่อนบุตรไม่ศึกษา
            .FTChildLern = 0 'ลดหย่อนบุตรศึกษา
            .FTInsurance = 0 'ลดหย่อนเบี้ยประกัน
            .FTProvidentfund = 0 'กองทุนเลียงชีพส่วนที่ไม่เกิน 10000
            .FTInterest = 0 'ดอกเบี้ยเงินกู้
            .FTSocial = 0 'ประกันสังคม
            .FTDonation = 0 'เงินบริจาค
            .FTProvidentfundOver = 0 'กองทุนเลียงชีพส่วนที่เกิน 10000
            .FTGPF = 0 'เงิน กบข.
            .FTSavingsFund = 0 'เงินกองทุนสงเคราะห์
            .FTCommutation = 0 'เงินชดเชยตามกฎหมายแรงงาน
            .FTUnitRMF = 0 'ค่าซื้อหน่วยลงทุน RTF
            .FTModFather = 0 'ลดหย่อนบิดา
            .FTModMother = 0 'ลดหย่อนมารดา
            .FTModFatherMate = 0 'ลดหย่อนบิดาคู่สมรส
            .FTModMotherMate = 0 'ลดหย่อนมารดาคู่สมรส
            .FTUnitLTF = 0 'ค่าซื้อหน่วยลงทุน LTF
            .FTDonationLern = 0 'เงินบริจาคเพื่อสนับสนุนการศึกษา
            .FTParentsHealthInsurance = 0 'เบี้ยประกันสุขภาพบิดามารดา
            .FTSupportSport = 0 'เงินสนับสนุนการกีฬา
            .FTAcquisitionOfProperty = 0 'ค่าซื้ออาคาร
            .FTPension = 0 'บำนาญ
            .FTTravel = 0 'ท่องเที่ยวในประเทศ
            .FTTotalCalTax = 0 'เงินได้สุทธิ
            .FTTotalTax = 0 'ภาษีที่ต้องจ่าย
        End With
        '------------------ GetConfig WeekEnd ----------------------------------

        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------
        _Qry = "SELECT FNSeqNo, FNAgeBegin, FNAgeEnd, FNEmpPay As FNEmpAmtPer,  FNCmpPay AS FNCmpAmtPer"
        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMContributions WITH(NOLOCK) "
        _Qry &= vbCrLf & "  WHERE  FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID) & " "
        _THRMContributedFund = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------

        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday
        '------------------ GetConfig Holiday ----------------------------------
        FNVacationRetMin = 0 : FNVacationRetAmt = 0
        _FTSatrtCalculateDate = _StartDate
        _FTEndCalculateDate = _EndDate
        _FTSatrtCalculateDateIns = _StartDate
        _FTEndCalculateDateIns = _EndDate
        _FNEmpDiligent = 0 : _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
        _FTStateInDustin = "" : _FNSlaryPerMonth = 0
        _FNSlaryPerDay = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0
        _FTEmpState = "" : _FNEmpBaht = 0 : _nBahtOt1 = 0
        _nBahtOt15 = 0 : _nBahtOt2 = 0 : _nBahtOt3 = 0
        _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
        _FCPayVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0
        _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0 : _SocialRateCmp = 0
        _SocialMinIncome = 0 : _SocialMaxIncome = 0
        _Complete = 0 : _Err = 0 : _FCSalary = -99
        CountTerm = 0
        _TotalInstalment = 0 : _Instalment = 0

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode,M.FTEmpCode AS FTEmployeeCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, M.FNEmpStatus AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"
        _Qry &= vbCrLf & " ,M.FNHSysDeptId AS FTDeptCode "
        _Qry &= vbCrLf & "  ,M.FNHSysDivisonId AS FTDivCode, M.FNHSysSectId AS FTSectCode,  M.FNHSysUnitSectId AS FTUnitSecCode"
        _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
        _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
        _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
        _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
        _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
        _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
        _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
        _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
        _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(day,M.FdDateStart,M.FDRetire) ELSE Datediff(day,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAgeDay"
        _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide"
        _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday "
        _Qry &= vbCrLf & " , M.FNHSysResignId, ISNULL(R.FTRetVacation,'0') AS [FTRetVacation] "
        _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "   LEFT JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMResign As R WITH (NOLOCK) ON R.FNHSysResignId = M.FNHSysResignId "

        _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_EmpCode) & " ) "

        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each R As DataRow In _Dtemp.Rows

            _DtFin.Rows.Clear()
            _AmtAddCalOT = 0

            _FTRetVacation = R!FTRetVacation.ToString

            _SalaryDevide = Val(R!FNSalaryDivide.ToString)
            _FTStatePayHoliday = R!FTStatePayHoliday.ToString

            _FTInsurType = Val(R!FTInsurType.ToString)

            If _SalaryDevide <= 0 Then
                _SalaryDevide = 1
            End If

            _FTSlary = R!FTSalary.ToString : _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString
            _FTPaymentCode = R!FTPayCode.ToString : _FTBankCode = R!FTBnkCode.ToString
            _FTCalSocialSta = R!FTCalSocialSta.ToString : _FTCalTaxSta = R!FTCalTaxSta.ToString

            _FTDeptCode = R!FTDeptCode.ToString : _FTDivCode = R!FTDivCode.ToString
            _FTSectCode = R!FTSectCode.ToString
            _FTUnitCode = R!FTUnitSecCode.ToString : _FTPos = R!FTPositCode.ToString

            _FTEmpState = R!FTCalType.ToString
            _FTEmpIdNo = R!FTTaxNo.ToString 'R!FTEmpIdNo.ToString
            _FTBranchCode = R!FTBnkBchCode.ToString
            _FTAccNo = R!FTAccNo.ToString
            '---------------------------------------- ลดหย่อน------------------------------------
            _FNChildNotLearn = 0 : _FCReduceDonate = 0 : _FCLifeInsurance = 0 : _FCLoanHouse = 0 : _FCReduceEducationSupport = 0
            _FCShare = 0 : _FCReduceFather = 0 : _FCReduceMother = 0 : _FCReSpouseFather = 0 : _FCReSpouseMother = 0 : _FTMarryIncome = 0
            _FCLifeFeeMoney = 0

            FCModFather = 0 : FCModMother = 0 : FCModMateFather = 0 : FCModMateMother = 0
            FCPremium = 0 : FCInterest = 0 : FCUnitRMF = 0 : FCUnitLTF = 0 : FCDeductDonate = 0 : FCDisabledDependents = 0 : FCDeductDonateStudy = 0
            FCHealthInsurFatherMotherMate = 0 : FTHealthInsurIDFather = 0 : FTHealthInsurIDMother = 0
            FTHealthInsurIDFatherMate = 0 : FTHealthInsurIDMotherMate = 0

            FTTotalCalContributedAmt = 0 : FTContributedAmt = 0 : FTCmpContributedAmt = 0
            FTTotalCalWorkmen = 0 : FTWorkmenAmt = 0 : _FTMaxCalWorkmen = 0 : _FTMaxWorkmenRate = 0 : FTTotalCalWorkmenAcc = 0
            _FNIncentiveAmt = 0
            _TmpFDDateEnd = _FDDateEnd

            If _TmpFDDateEnd <> "" Then

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,-1,Convert(Datetime,'" & _TmpFDDateEnd & "')),111)"
                _TmpFDDateEnd = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

            End If

            '--------- อายุงาน  เดือน
            _WorkAge = Val(R!FNWorkAge.ToString)
            _WorkAgeDay = Val(R!FNEmpWorkAgeDay.ToString)

            If _FTEmpState = "2" Then
                _TotalInstalment = 12
            Else
                _TotalInstalment = 24
            End If

            _ContributedFundBeginPay = False
            If R!FDFundBegin.ToString <> "" Then
                If R!FDFundBegin.ToString < _FTEndCalculateDate Then
                    If R!FDFundEnd.ToString <> "" Then
                        If R!FDFundEnd.ToString > _FTEndCalculateDate Then
                            _ContributedFundBeginPay = True
                        End If
                    Else
                        _ContributedFundBeginPay = True
                    End If
                End If
            End If

            _Instalment = Val(_PayTerm)
            _FNIncentiveAmt = 0

            '-------------คำนวณ Incentive-------------------------------------------
            Select Case _FTInsurType
                Case 1

                    '---------ประกันเป็นวัน
                    _Qry = "SELECT SUM (CASE WHEN ISNULL(FNAmtFixedIncentive,0) >0 THEN  "
                    _Qry &= vbCrLf & " ( CASE WHEN ( CASE WHEN ISNULL(FNNetProAmt,0) > ( case when  ISNULL(FNNetAmt, 0) > (M.FNSalary + D.FNAmtOT) then (M.FNSalary + D.FNAmtOT) else ISNULL(FNNetAmt, 0) end )  THEN  (ISNULL(FNNetProAmt,0) - ( case when  ISNULL(FNNetAmt, 0) > (M.FNSalary + D.FNAmtOT) then (M.FNSalary + D.FNAmtOT) else ISNULL(FNNetAmt, 0) end ) )  ELSE 0 END) < ISNULL(FNAmtFixedIncentive,0)  THEN ISNULL(FNAmtFixedIncentive,0)  ELSE  ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ( case when  ISNULL(FNNetAmt, 0) > (M.FNSalary + D.FNAmtOT) then (M.FNSalary + D.FNAmtOT) else ISNULL(FNNetAmt, 0) end ))  ELSE 0 END)  END ) "
                    _Qry &= vbCrLf & " ELSE ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ( case when  ISNULL(FNNetAmt, 0) > (M.FNSalary + D.FNAmtOT) then (M.FNSalary + D.FNAmtOT) else ISNULL(FNNetAmt, 0) end ))  ELSE 0 END) END   ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily AS D WITH(NOLOCK) "
                    _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) ON D.FNHSysEmpID = M.FNHSysEmpID "
                    _Qry &= vbCrLf & " WHERE  (D.FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND D.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND D.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))


                    _Qry = "SELECT SUM (CASE WHEN ISNULL(FNAmtFixedIncentive,0) >0 THEN  "
                    _Qry &= vbCrLf & " ( CASE WHEN ( CASE WHEN ISNULL(FNNetProAmt,0) > ( case when  ISNULL(FNNetAmt, 0) > (M.FNSalary + D.FNAmtOT) then (M.FNSalary + D.FNAmtOT) else ISNULL(FNNetAmt, 0) end )  THEN  (ISNULL(FNNetProAmt,0) - ( case when  ISNULL(FNNetAmt, 0) > (M.FNSalary + D.FNAmtOT) then (M.FNSalary + D.FNAmtOT) else ISNULL(FNNetAmt, 0) end ) )  ELSE 0 END) < ISNULL(FNAmtFixedIncentive,0)  THEN ISNULL(FNAmtFixedIncentive,0)  ELSE  ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ( case when  ISNULL(FNNetAmt, 0) > (M.FNSalary + D.FNAmtOT) then (M.FNSalary + D.FNAmtOT) else ISNULL(FNNetAmt, 0) end ))  ELSE 0 END)  END ) "
                    _Qry &= vbCrLf & " ELSE ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ( case when  ISNULL(FNNetAmt, 0) > (M.FNSalary + D.FNAmtOT) then (M.FNSalary + D.FNAmtOT) else ISNULL(FNNetAmt, 0) end ))  ELSE FNProNormal END) END   ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily AS D WITH(NOLOCK) "
                    _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) ON D.FNHSysEmpID = M.FNHSysEmpID "
                    _Qry &= vbCrLf & " WHERE  (D.FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND D.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND D.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case 2

                    '---------ประกันเป็นเป็นงวด-------------------------------------------

                    _Qry = "SELECT  ( CASE WHEN ISNULL(FNAmtFixedIncentive,0) >0 THEN  (CASE WHEN (CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END)  < ISNULL(FNAmtFixedIncentive,0) THEN ISNULL(FNAmtFixedIncentive,0) ELSE (CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END)  END ) ELSE (CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END) END  ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM ( SELECT SUM(ISNULL(FNNetAmt,0) ) AS FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) AS FNNetProAmt , sum(ISNULL(FNAmtFixedIncentive,0)) AS FNAmtFixedIncentive "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _Qry &= vbCrLf & " ) AS M"


                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case Else

            End Select
            '-------------------------------------

            '---------------------------------------- ลดหย่อน------------------------------------
            _Qry = " SELECT      FNHSysEmpID, FTChildSex, FTStudySta"
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeChild WITH(NOLOCK) "
            _Qry &= vbCrLf & " WHERE   (FNHSysEmpID = " & Val(_EmpCode) & ")"
            _dttempdata = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


            Dim _ChildNotStudy As Integer = 0
            Dim _ChildStudy As Integer = 0

            For Each _Drow As DataRow In _dttempdata.Rows

                If _Drow!FTStudySta.ToString = "1" Then
                    _ChildStudy = _ChildStudy + 1
                Else
                    _ChildNotStudy = _ChildNotStudy + 1
                End If

            Next

            _FCAccumulateIncome = 0 : _FCAccumulateSocial = 0 : _FCAccumulateTax = 0
            FTTotalCalContributedAcc = 0 : FTTotalCalWorkmenAcc = 0

            '----------- Get Summary ------------------
            LoadIncomeTax(_FTEmpIdNo, _PayYear, _PayTerm, _FCAccumulateIncome, _FCAccumulateTax, _FCAccumulateSocial, CountTerm, FTTotalCalContributedAcc, FTTotalCalWorkmenAcc, Integer.Parse(Val(_EmpCode)))
            '----------- Get Summary ------------------

            With _EmpDisTax

                .BaseSlary = 0
                .OtherSlary = 0
                .BeforeIncom = _FCAccumulateIncome
                .BeforeTax = _FCAccumulateTax
                .FTMateIncome = (R!FTMateIncome.ToString = "0")
                ' ----------------------------------------- Clear Discount Tax Value -------------------------
                .Cfg_ModChildAllowanceRateNotStudied = _ChildNotStudy 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
                .Cfg_ModChildAllowanceRateStudy = _ChildStudy 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
                '-------------ลดหย่อนบุตร-----------------

                '--- หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
                .Cfg_ContributedDeducToTheFund = FTTotalCalContributedAcc 'ลูกจ้าง
                '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ

                .Cfg_ModDeductibleDonations = CDbl(Val(R!FCDeductDonate.ToString)) ' ' % ลดหย่อนเงินบริจาค
                .Cfg_ModDeductDonateStudy = CDbl(Val(R!FCDeductDonateStudy.ToString))
                .Cfg_ModFatherReduction = CDbl(Val(R!FCModFather.ToString)) '  'ลดหย่อนบิดา
                .Cfg_ModInsurancePremiums = CDbl(Val(R!FCPremium.ToString)) '  'ค่าเบี้ยประกันชีวิตส่วนบุคคล
                .Cfg_ModLendingforHousing = CDbl(Val(R!FCInterest.ToString)) ' 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย

                .Cfg_ModLTFChk = CDbl(Val(R!FCUnitLTF.ToString)) 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
                .Cfg_ModMateFatherReduction = CDbl(Val(R!FCModMateFather.ToString)) ' 'ลดหย่อนบิดา คู่สมรส
                .Cfg_ModMateMotherReduction = CDbl(Val(R!FCModMateMother.ToString)) '  'ลดหย่อนมารดา คู่สมรส
                .Cfg_ModMotherReduction = CDbl(Val(R!FCModMother.ToString)) ' 'ลดหย่อนมารดา

                .Cfg_ModPersonalExpenChk = 0 ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน

                .Cfg_ModRateReductionsByMarital = (IIf(R!FTMaritalCode.ToString = "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
                .Cfg_ModRateReductionsBySingle = (IIf(R!FTMaritalCode.ToString <> "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ โสด 

                .Cfg_ModRMFChk = CDbl(Val(R!FCUnitRMF.ToString)) '  ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 
                .FCDisabledDependents = CDbl(Val(R!FCDisabledDependents.ToString)) '  'ค่าอุปการะเลี้ยงดูคนพิการหรือทุพพลภาพ
                .FCHealthInsurFatherMotherMate = CDbl(Val(R!FCHealthInsurFatherMotherMate.ToString)) '   'เบี้ยประกันสุขภาพบิดามารดาของผู้มีเงินได้และคู่สมสร

                .FCExceptAgeOver = CDbl(Val(R!FCExceptAgeOver.ToString)) ' ' 'รายการเงินได้ที่ได้รับยกเว้น ของผู้มีเงินได้ตั้งแต่ 65 ปีขึ้นไป 
                .FCExceptAgeOverMate = CDbl(Val(R!FCExceptAgeOverMate.ToString)) ' 'รายการเงินได้ที่ได้รับยกเว้น ของคู่สมรสอายุตั้งแต่ 65 ปีขึ้นไป
                '----------------------------------------------------
            End With
            '---------------------------------------- ลดหย่อน------------------------------------

            _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = "0" : _FTOtherAddCalculateTax = "0" : _FCOtherAddOt = 0
            _FTOtherAddOtCalculateSocial = "0" : _FTOtherAddOtCalculateTax = "0" : _FCBFShiftMoney = 0 : _FTShiftMoneyCalculateSocial = "0"
            _FTShiftMoneyCalculateTax = "0" : _FCDiligent = 0 : _FTDiligentCalculateSocial = "0" : _FTDiligentCalculateTax = "0"
            _FCBonusEndYear = 0 : _FTBonusEndCalculateSocial = "0" : _FTBonusEndCalculateTax = "0" : _FCShelter = 0
            _FTShelterCalculateSocial = "0" : _FTShelterCalculateTax = "0" : _FCShareFactory = 0 : _FTShareFactoryCalculateSocial = "0"
            _FNNetpayOrg = 0.0
            _FNNetpay = 0.0
            _FCSalary = -99
            _FTSlary = (_FTSlary)

            If IsNumeric(_FTSlary) Then
                _MSlary = _FTSlary
                _FCSalary = CDbl(_FTSlary)

                '------------------ คำนวณคืนพักร้อน ----------------------------

                If (_ReturnVacation > 0) Or (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                    Dim _Month As Integer = 0
                    Dim _Leave As Double = 0
                    Dim _SumLeaveVacation As Double = 0
                    Dim _ResetDate As String = ""

                    Dim _DateReset As String
                    Dim _DateSetEmpReset As String
                    Dim _DateEndYaer As String = _PayYear & "/12/31"


                    _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
                    _Qry &= vbCrLf & "  FROM"
                    _Qry &= vbCrLf & " ("
                    _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK )"
                    _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
                    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                    _Qry &= vbCrLf & " ) As T"

                    _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    If _PayTerm = "24" Or _PayTerm = "25" Then
                        _DateReset = (Val(_PayYear) + 1).ToString("0000") & Microsoft.VisualBasic.Right(_DateReset, 6)

                        _DateSetEmpReset = HI.UL.ULDate.AddDay(_DateReset, -1)
                        _DateReset = (Val(_PayYear)).ToString("0000") & Microsoft.VisualBasic.Right(_DateReset, 6)
                    Else
                        _DateSetEmpReset = HI.UL.ULDate.AddDay(_DateReset, -1)
                    End If



                    Dim VacationLeaveType As String = ""
                    _Qry = " SELECT TOP 1 FTCfgData"
                    _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.TSESystemConfig AS Z WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FTCfgName = N'VacationLeaveType')"

                    VacationLeaveType = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_SECURITY, "0")
                    _Qry = ""
                    '' If _FDDateStart < _DateReset And _DateReset <> "" Then
                    ''_FTRetVacation = เหตุผลในการออกจากงานที่จ่ายคืนพักร้อน

                    If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate And _FTRetVacation = "1") Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                        Dim _FNYear As Integer = 0
                        Dim _FNMonth As Integer = 0
                        Dim _FNDay As Integer = 0

                        If HI.UL.ULDate.CheckDate(_TmpFDDateEnd) <> "" Then
                            _Qry = "Exec " & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & ".dbo.SP_Datediff '" & HI.UL.ULDate.ConvertEnDB(_FDDateStart) & "',N'" & HI.UL.ULDate.ConvertEnDB(_TmpFDDateEnd) & "'"
                        Else
                            _Qry = "Exec " & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & ".dbo.SP_Datediff '" & HI.UL.ULDate.ConvertEnDB(_FDDateStart) & "',N''"
                        End If

                        Dim _Row As DataRow = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR).Rows(0)
                        _FNYear = Integer.Parse(Val(_Row("FNYear")))
                        _FNMonth = Integer.Parse(Val(_Row("FNMonth")))
                        _FNDay = Integer.Parse(Val(_Row("FNDay")))

                        _FNYear = IIf(_FNYear < 0, 0, _FNYear)
                        _FNMonth = IIf(_FNMonth < 0, 0, _FNMonth)
                        _FNDay = IIf(_FNDay < 0, 0, _FNDay)

                        If _FNYear >= 1 Then
                            If VacationLeaveType = "1" Then
                                _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Th(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_TmpFDDateEnd) & "'))),111),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                                _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                            Else

                                _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                                _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                            End If
                        End If




                    ElseIf (_ReturnVacation > 0) Then


                        If VacationLeaveType = "1" Then
                            _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Th(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                            _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                            _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                        Else

                            _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                            _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                            _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                        End If


                    Else

                        If (_TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            If _PayTerm = "24" Or _PayTerm = "25" Then

                            Else
                                _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),Convert(varchar(10),DateAdd(day,-1,'" & (_DateReset) & "')),111),'" & (_EndDate) & "') AS FNEmpVacation"
                                _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                                _Leave = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                            End If

                        End If
                        If _PayTerm = "24" Then
                            If VacationLeaveType = "1" Then
                                _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Th(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                                _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                            Else

                                _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                                _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                            End If
                        End If


                    End If

                    _Leave = _Leave + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))



                    If _Leave > 0 And _DateReset <> "" Then

                        If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            _Qry &= vbCrLf & "	   AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            _Qry &= vbCrLf & " 	   AND  FTDateTrans >= '" & (_DateReset) & "'"

                        Else

                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"
                            _Qry &= vbCrLf & " 	AND  FTDateTrans <= '" & (_DateSetEmpReset) & "'"
                            '' _Qry &= vbCrLf & " 	AND  FTDateTrans <=Convert(varchar(10),DateAdd(year,-1,Convert(Datetime,'" & (_DateReset) & "')),111)"

                        End If

                        _SumLeaveVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                        If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"

                            _SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                        End If

                        If _ReturnVacation <= 0 Then

                            _Qry = " SELECT   TOP 1 FCCfgRetValue"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigReturnVacationSet WITH(NOLOCK) "
                            _Qry &= vbCrLf & "  WHERE      (FNCalType =" & Val(_EmpType) & ")"

                            _ReturnVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                        End If

                        _FNSlaryPerDayRetVa = HI.Conn.SQLConn.GetField("Select Top 1 FNSalary From THRTPayRoll WITH(NOLOCK) where  FNHSysEmpID = " & Val(_EmpCode) & " and  FTPayYear +'/'+FTPayTerm  <'" & _PayYear & "/" & _PayTerm & "'  Order by FTPayYear +'/'+FTPayTerm DESC ", Conn.DB.DataBaseName.DB_HR, "0")

                        If _FNSlaryPerDayRetVa = 0 Then
                            _FNSlaryPerDayRetVa = HI.Conn.SQLConn.GetField("Select Top 1 FNSalary From THRMEmployee WITH(NOLOCK) where  FNHSysEmpID = " & Val(_EmpCode), Conn.DB.DataBaseName.DB_HR, "0")
                        End If


                        If _FTEmpState = "2" Or _FTEmpState = "3" Then
                            _FNSlaryPerDay = CDbl(Format(_FCSalary / 30, "0.00"))
                            _FNSlaryPerDayRetVa = CDbl(Format(_FNSlaryPerDayRetVa / 30, "0.00"))
                        Else
                            _FNSlaryPerDay = _FCSalary

                        End If

                        If _Leave > (_SumLeaveVacation / 480) Then

                            FNVacationRetMin = (_Leave * 480) - _SumLeaveVacation

                            If FNVacationRetMin <= 0 Then
                                FNVacationRetMin = 0
                            End If

                            FNVacationRetAmt = 0

                            _AmtReturnVacation = CDbl(Format((((_Leave * 480) - (_SumLeaveVacation)) * (_ReturnVacation * (_FNSlaryPerDayRetVa / 480))), "0.00"))

                            FNVacationRetAmt = _AmtReturnVacation

                        End If


                    End If
                    '' End If


                End If
                '------------------ คำนวณคืนพักร้อน ----------------------------

                _SocialMinIncome = HCfg.HSocialRate.SocialIncomeMin
                _SocialMaxIncome = HCfg.HSocialRate.SocialIncomeMax
                _SocialRate = HCfg.HSocialRate.CalSocialRate
                _SocialRateCmp = HCfg.HSocialRate.CalSocialRateCmp

                _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
                _AmtPlus = 0

                _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                For Each R3 As DataRow In _dtot.Rows

                    Select Case R3!FTCfgOTCode.ToString.ToUpper
                        Case "01"
                            _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "02"
                            _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "03"
                            _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "04"
                            _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "05"
                            _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                    End Select

                Next

                '---------รายได้รายหัก อื่นๆ-------------------------
                _GAmtAddCalOT = 0
                If Val(_PayTerm) <> 25 Then


                    _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                    _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                    _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                    _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                    _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                    _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"

                    _Qry &= vbCrLf & "   , ISNULL(FN.FTStaLateM,0) FTStaLateM ,  ISNULL(FN.FTStaLateA,0) FTStaLateA "

                    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"
                    _Qry &= vbCrLf & "  AND  (ISNULL(FN.FNHSysCmpId,0) = 0 OR  FN.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                    If _EmpCalType = "0" Then
                        If Val(_PayTerm) Mod 2 = 0 Then
                            _Qry &= vbCrLf & "  AND FTPayType <> '' "
                        Else
                            _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                        End If
                    End If
                    _Qry &= vbCrLf & "UNION  "
                    _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial,  0 As FCFinAmt   , FM.FTFinType"
                    _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                    _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                    _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                    _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                    _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"

                    _Qry &= vbCrLf & "   , ISNULL(FN.FTStaLateM,0) FTStaLateM ,  ISNULL(FN.FTStaLateA,0) FTStaLateA "

                    _Qry &= vbCrLf & " FROM        [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)   INNER JOIN"
                    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE    (FM.FTFinType = '1' OR FM.FTFinType = '2')   and FN.FTFinCode ='008' "
                    _Qry &= vbCrLf & "  AND  (ISNULL(FN.FNHSysCmpId,0) = 0 OR  FN.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                    If _EmpCalType = "0" Then
                        If Val(_PayTerm) Mod 2 = 0 Then
                            _Qry &= vbCrLf & "  AND FTPayType <> '' "
                        Else
                            _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                        End If
                    End If
                    _Qry &= vbCrLf & " and FN.FTFinCode  not in (  Select FTFinCode From [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin  WITH (NOLOCK)  "
                    _Qry &= vbCrLf & " WHERE    (FNHSysEmpID = " & Val(_EmpCode) & ") )"

                    ' _Qry &= vbCrLf & "  AND FTPayType <> '" & IIf(_EmpCalType = "0" Or (Val(_PayTerm) Mod 2 = 0), "", "1") & "' "


                Else

                    ''term 25
                    _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                    _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                    _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                    _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                    _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                    _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"

                    _Qry &= vbCrLf & "   , ISNULL(FN.FTStaLateM,0) FTStaLateM ,  ISNULL(FN.FTStaLateA,0) FTStaLateA "

                    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2') AND FN.FTFinCode not in ('112','113') "
                    _Qry &= vbCrLf & "  AND  (ISNULL(FN.FNHSysCmpId,0) = 0 OR  FN.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                    If _EmpCalType = "0" Then
                        If Val(_PayTerm) Mod 2 = 0 Then
                            _Qry &= vbCrLf & "  AND FTPayType <> '' "
                        Else
                            _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                        End If
                    End If
                    _Qry &= vbCrLf & "UNION  "
                    _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial,  0 As FCFinAmt   , FM.FTFinType"
                    _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                    _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                    _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                    _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                    _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"

                    _Qry &= vbCrLf & "   , ISNULL(FN.FTStaLateM,0) FTStaLateM ,  ISNULL(FN.FTStaLateA,0) FTStaLateA "

                    _Qry &= vbCrLf & " FROM        [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)   INNER JOIN"
                    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE    (FM.FTFinType = '1' OR FM.FTFinType = '2')   and FN.FTFinCode ='008' "
                    _Qry &= vbCrLf & "  AND  (ISNULL(FN.FNHSysCmpId,0) = 0 OR  FN.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                    If _EmpCalType = "0" Then
                        If Val(_PayTerm) Mod 2 = 0 Then
                            _Qry &= vbCrLf & "  AND FTPayType <> '' "
                        Else
                            _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                        End If
                    End If
                    _Qry &= vbCrLf & " and FN.FTFinCode  not in (  Select FTFinCode From [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin  WITH (NOLOCK)  "
                    _Qry &= vbCrLf & " WHERE    (FNHSysEmpID = " & Val(_EmpCode) & ") )"

                End If

                _dtAddOtherAmt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTStaCalOT='1' AND FTPayType='0' ")
                    _GAmtAddCalOT = _GAmtAddCalOT + Val(R2!FCFinAmt.ToString)
                Next

                _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
                _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
                _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
                _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN"
                _Qry &= vbCrLf & "  WHERE        ((FTFinCode = N'001') OR  (FTFinCode = N'007')) "
                _Qry &= vbCrLf & "  AND  (ISNULL(FN.FNHSysCmpId,0) = 0 OR  FN.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"
                _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)




                _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = 0 : _FTOtherAddCalculateTax = 0 : _FCOtherDeduct = 0

                '---------------- Adjust Before Calculate------------------------------------
                _Qry = " SELECT        FN.FTStaTax, FN.FTStaSocial, (ISNULL(BF.FCFinAmt,0))  AS FCFinAmt, FM.FTFinType,ISNULL(BF.FNDay,-1) As FNDay,BF.FTFinCode "
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE        (BF.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "')"
                _Qry &= vbCrLf & "  AND (BF.FTPayTerm = '" & HI.UL.ULF.rpQuoted(_PayTerm) & "') "
                _Qry &= vbCrLf & " AND (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"
                _Qry &= vbCrLf & "  AND  (ISNULL(FN.FNHSysCmpId,0) = 0 OR  FN.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                If _AmtReturnVacation > 0 Then

                    _Qry &= vbCrLf & " UNION ALL "
                    _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial, " & _AmtReturnVacation & "  AS FCFinAmt, FM.FTFinType,-1 As FNDay,FM.FTFinCode "
                    _Qry &= vbCrLf & " FROM     [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)  INNER JOIN"
                    _Qry &= vbCrLf & "          [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE (FM.FTFinCode='023')"
                    _Qry &= vbCrLf & "  AND  (ISNULL(FN.FNHSysCmpId,0) = 0 OR  FN.FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " )"

                End If

                _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


                For Each R2 As DataRow In _dt.Select("FNDay<=0")
                    Select Case R2!FTFinType.ToString
                        Case "1"
                            _FCOtherAdd = _FCOtherAdd + Val((R2!FCFinAmt.ToString))

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax + Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial + Val((R2!FCFinAmt.ToString))

                        Case "2"

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax - Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial - Val((R2!FCFinAmt.ToString))

                            _FCOtherDeduct = _FCOtherDeduct + Val((R2!FCFinAmt.ToString))
                    End Select
                Next

                _DayAdjAdd = 0
                _WageAdjAdd = 0

                For Each R2 As DataRow In _dt.Select("FNDay> 0")

                    _DayAdjAdd = _DayAdjAdd + Val((R2!FNDay.ToString))
                    _WageAdjAdd = _WageAdjAdd + Val((R2!FCFinAmt.ToString))

                Next

                _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
                _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= 480 THEN 480   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= 480 THEN 480   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= 480 THEN 480 ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
                _Qry &= vbCrLf & " , FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_EmpCode) & " )"

                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_DateStartOfMonth) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_DateEndOfMonth) & "' "
                Else
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                End If

                _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

                _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	"
                _Qry &= vbCrLf & " ,case when ISNULL(T.FNTimeMin,0)+ ISNULL(T.FNSpecialTimeMin,0) > 0 then  (ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) + ISNULL(T.FNAbsent,0)   )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  + ISNULL(T.FNCutAbsent,0)   )  else  ISNULL(T.FNTimeMin,0)  end    AS FNTime"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT1_5,0) AS FNOT1_5"

                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT2,0 ) AS FNOT2  , ISNULL(T.FNOT3,0) AS FNOT3"
                ' _Qry &= vbCrLf & " , case when ISNULL(T.FNOT3,0) > 0 then   Convert(numeric(18,2),	( ( ISNULL(T.FNOT3Min,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  )) / 60) 	 + Convert(numeric(18,2),((( ( ISNULL(T.FNOT3Min,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  )) %60) /100.00))  else ISNULL(T.FNOT3,0)  end  AS FNOT3 "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT4,0) AS FNOT4"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(T.FNLateNormalCut,0 )   AS FNLateNormalCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateOtMin,0) As FNLateOtMin,ISNULL(T.FNLateOtCut,0) As FNLateOtCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateMMin,0) As FNLateMorning"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateAfMin,0) AS FNLateAfternoon,Isnull(T.FNAbsentCut,0) AS FNAbsentCut "
                _Qry &= vbCrLf & " 	,ISNULL(T.FNAbsent,0 ) AS FNAbsent_Cut "
                _Qry &= vbCrLf & " 	,ISNULL(T.FNCutAbsent,0) AS FNAbsent "
                _Qry &= vbCrLf & " ,case when  ISNULL(T.FNTimeMin,0)  + ISNULL(T.FNSpecialTimeMin,0)  > 0 then (ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0)  + ISNULL(T.FNAbsent,0)   )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  + ISNULL(T.FNCutAbsent,0)   ) else  ISNULL(T.FNTimeMin,0)  end  AS FNTimeMin"
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0)) As FNTimeMinOrg"
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1Min,0) As FNOT1Min  "
                ' _Qry &= vbCrLf & " , ISNULL(T.FNOT1_5Min,0) As FNOT1_5Min "
                _Qry &= vbCrLf & " ,case when  ISNULL(T.FNOT1_5Min,0)  > 0 then (ISNULL(T.FNOT1_5Min,0)  + ISNULL(T.FNLateNormalMin,0) + ISNULL(T.FNAbsent,0)    )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  + ISNULL(T.FNCutAbsent,0)    ) else  ISNULL(T.FNOT1_5Min,0)  end  AS  FNOT1_5Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNOT2Min,0) As FNOT2Min "
                '_Qry &= vbCrLf & " , ISNULL(T.FNOT3Min,0) As FNOT3Min"
                _Qry &= vbCrLf & " ,case when  ISNULL(T.FNOT3Min,0)  > 0 then (ISNULL(T.FNOT3Min,0)  + ISNULL(T.FNLateNormalMin,0) + ISNULL(T.FNAbsent,0)    )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  + ISNULL(T.FNCutAbsent,0)    ) else  ISNULL(T.FNOT3Min,0)  end  AS  FNOT3Min"
                _Qry &= vbCrLf & " , ISNULL(FNOT4Min,0) As FNOT4Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNLateMMin,0) As FNLateMMin "
                _Qry &= vbCrLf & " , ISNULL(T.FNLateAfMin,0) As FNLateAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireMMin,0) As FNRetireMMin "
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireAfMin,0 )  As FNRetireAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireNormalCut,0) As FNRetireNormalCut "
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireOtMin,0) As FNRetireOtMin"
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireOtCut,0) As FNRetireOtCut,FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"
                _Qry &= vbCrLf & " ,CASE WHEN T.FTWeekDay=1 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSunday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSunday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=2 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTMonday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTMonday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=3 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTTuesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTTuesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=4 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTWednesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTWednesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=5 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTThursday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTThursday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=6 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTFriday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTFriday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=7 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSaturday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSaturday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  ELSE '0' END AS FTWeekly,ISNULL(FTStateAccept,'') AS FTStateAccept "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
                _Qry &= vbCrLf & "   INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK)  ON  T.FNHSysEmpID =  M.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeWeekly AS EHL WITH (NOLOCK) ON T.FNHSysEmpID=EHL.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmpTypeWeeklySpecial AS ETHL WITH (NOLOCK) ON T.FTDateTrans = ETHL.FDHolidayDate AND M.FNHSysEmpTypeId=ETHL.FNHSysEmpTypeId"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS SH WITH (NOLOCK) ON T.FNHSysShiftID = SH.FNHSysShiftID"

                _Qry &= vbCrLf & "  WHERE (T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "'  "

                If _FDDateEnd <> "" Then
                    _Qry &= vbCrLf & " 	AND T.FTDateTrans < '" & HI.UL.ULDate.ConvertEnDB(_FDDateEnd) & "'  "
                End If
                If _FTEmpState <> "2" And _FTEmpState <> "3" Then ' คำนวณค่าแรงพนักงานรายเดือน
                    _Qry &= vbCrLf & " 	AND T.FTStateAccept = '1'  "
                End If

                _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '---------------Get Trans Daily--------------------------------------
                _GFNTime = 0 : _GFNNotRegis = 0 : _GFNOT1 = 0 : _GFNOT1_5 = 0
                _GFNOT2 = 0 : _GFNOT3 = 0 : _GFNOT4 = 0 : _GFNLeaveSick = 0 : _GFNLeaveBusiness = 0
                _GFNLeaveVacation = 0 : _GFNLeavePregnant = 0 : _GFNLeaveOrdain = 0 : _GFNLeaveMarry = 0
                _GFNLeaveOther = 0 : _GFNLateNormalMin = 0 : _GFNLateNormalCut = 0 : _GFNLateOtMin = 0
                _GFNLateOtCut = 0 : _GFNLateMorning = 0 : _GFNLateAfternoon = 0
                _GFNAbsent = 0 : _GFNCutAbsent = 0 : _GFNLeavePay = 0 : _GFNTimeMin = 0 : _GFNOT1Min = 0 : _GFNOT1_5Min = 0
                _GFNOT2Min = 0 : _GFNOT3Min = 0 : _GFNLateMMin = 0 : _GFNLateAfMin = 0 : _GFNRetireMMin = 0
                _GFNRetireAfMin = 0 : _GFNRetireNormalCut = 0 : _GFNRetireOtMin = 0 : _GFNRetireOtCut = 0
                _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
                _Gtotalleave = 0 : _GtotalleavePay = 0 : _GtotalleaveNotPay = 0 : _GtotalleavePayCalSso = 0 : _GtotalleavePayCalSsoAmt = 0
                _TotalHoliDay = 0 : _GFNAbsentCutTime = 0
                _FNAbsentCutTime = 0
                '------------------- เริ่มการคำนวณรายวัน
                Dim _oHoliday As Integer = 0

                _TotalWorkDay = 0
                _ShiftAmt = 0
                _ShiftValue = 0
                _ShiftOTValue = 0
                _ShiftOTAmt = 0
                _FCAdd = 0 : _FTAddCalculateSocial = 0 : _FTAddCalculateTax = 0 : _FCDeduct = 0
                _GAmtPlus = 0

                If _FDDateStart > _FTSatrtCalculateDate Then _FTSatrtCalculateDate = _FDDateStart

                Do While _FTSatrtCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTSatrtCalculateDate < _FDDateEnd)

                    _oHoliday = 0
                    FTHldType = 0
                    Dim _NewSlary As String

                    _Qry = "  SELECT      TOP 1   FNCurrentSlary  AS AMT"
                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK) "
                    _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "') "
                    _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    _FCSalary = _MSlary
                    If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    _Holiday = ""

                    For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                        _Holiday = "H"
                        FTHldType = Val(IR!FTHldType.ToString)
                        Exit For
                    Next

                    _FTShift = ""

                    _FNTime = 0
                    _FNNotRegis = 0
                    _FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
                    _FNOT3 = 0 : _FNOT4 = 0
                    _FNLateNormalMin = 0 : _FNLateNormalCut = 0
                    _FNLateOtMin = 0 : _FNLateOtCut = 0
                    _FNLateMorning = 0 : _FNLateAfternoon = 0
                    _LateCutAbsent = 0 : _FNAbsent = 0
                    _FNTimeMin = 0 : _FNOT1Min = 0
                    _FNOT1_5Min = 0 : _FNOT2Min = 0
                    _FNOT3Min = 0 : _FNOT4Min = 0
                    _FNLateMMin = 0 : _FNLateAfMin = 0
                    _FNRetireMMin = 0 : _FNRetireAfMin = 0
                    _FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
                    _FNRetireOtMin = 0 : _FNRetireOtMin = 0
                    _FNRetireOtCut = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _AmtAddCalOT = 0
                    _GtotalleavePayCalSso = 0
                    _LeaveCode = ""
                    _FNAbsentCutTime = 0
                    Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                    Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                    For Each R2 In _R

                        _FTShift = R2!FTShift.ToString
                        _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                        _FNTimeOrg = Val(R2!FNTimeMinOrg.ToString)
                        _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                        _FNNotRegis = Val(R2!FNNotRegis.ToString)
                        _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                        _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                        _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                        _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                        _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                        _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent_Cut.ToString)
                        _FNAbsentCutTime = Val(R2!FNAbsent.ToString)

                        _FNOT1Min = Val(R2!FNOT1Min.ToString)
                        _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                        _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                        _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                        _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                        _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                        _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                        _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                        _InOT = R2!FTIn3.ToString
                        _OutOT = R2!FTOut3.ToString

                        _Over = R2!FTOverClock.ToString

                        If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))
                            For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")

                                Dim _FNOT1_5_3Min_Late As Integer = 0  ''เพิ่มสาย วันหยุดนักขัตฤกษ์ 20211120

                                If Not (RFin!FTStaCheckWorkTime.ToString = "1" And ((_FNTimeOrg + _FNOT3Min + _FNOT1_5Min) <= Val(RFin!FTCheckWorkTimeMin.ToString))) Then

                                    '' เช็คสายหรือไม
                                    If (RFin!FTStaCheckLate.ToString = "1") Then

                                        If _FNTime = 0 And (_FNOT3Min > 0 Or _FNOT1_5Min > 0) Then

                                            _FNOT1_5_3Min_Late = _FNLateMorning + _FNLateAfternoon
                                            ''
                                            If Not (RFin!FTStaCheckLate.ToString = "1" And (_FNOT1_5_3Min_Late <= Val(RFin!FTLateMin.ToString))) Then ''เงื่อนไขสาย น้อยกว่า ..นาที แล้วไม่หัก
                                                _ShiftValue = CDbl(Format((_ShiftValue / 480) * ((_FNTimeOrg + _FNOT3Min + _FNOT1_5Min)), "0.00"))
                                                ''_ShiftValue = CDbl(Format((_ShiftValue / 480) * (_FNTime + _FNOT3Min), "0.00"))
                                            Else
                                                _ShiftValue = CDbl(Format((_ShiftValue / 480) * ((_FNTime) + ((_FNOT3Min + _FNOT1_5Min) - _FNOT1_5_3Min_Late)), "0.00")) ''_FNOT3Min = ทำงานวันหยุดนักขัตฤกษ์
                                            End If

                                        Else

                                            ''วันทำงานปกติ
                                            If Not (RFin!FTStaCheckLate.ToString = "1" And (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))) Then
                                                _ShiftValue = CDbl(Format((_ShiftValue / 480) * (_FNTimeOrg + _FNOT3Min), "0.00"))
                                                ''_ShiftValue = CDbl(Format((_ShiftValue / 480) * (_FNTime + _FNOT3Min), "0.00"))
                                            Else
                                                _ShiftValue = CDbl(Format((_ShiftValue / 480) * (_FNTime + _FNOT3Min), "0.00")) ''_FNOT3Min = ทำงานวันหยุดนักขัตฤกษ์
                                            End If

                                        End If
                                    Else
                                        ''  เช็คแต่เวลาทำงานอย่างเดียว ไม่เช็คสาย
                                        '' จ่ายเต็ม

                                        _ShiftValue = CDbl(Format((_ShiftValue), "0.00"))



                                    End If


                                End If






                            Next

                            _TotalWorkDay = _TotalWorkDay + 1

                            _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                            If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                _SPDateType = 0

                                _Holiday = ""

                                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _Holiday = "H"
                                    Exit For
                                Next

                                If _Holiday <> "" Then _SPDateType = 2

                                Dim _StateLeaveOther As Boolean = False
                                Dim _StateLeavacation As Boolean = False
                                Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                Dim _SumLeave As Integer = 0

                                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                    If Val(sR!LeaveType) = 1 Then
                                        _StateLeavacation = True
                                    Else
                                        _StateLeaveOther = True
                                    End If

                                    If Val(sR!LeaveType) = 2 Then
                                        _StateFTStaMaternityleaveNotpay = True
                                    End If

                                Next

                                '--------------------------- ค่ากะ -------------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _ShiftAmt = _ShiftAmt + _ShiftValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ -------------------------------------


                                '****************************** Bonus 

                                ''If Val(_PayTerm) <> 25 Then

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='008' ")

                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        Dim _Amt As Double = 0
                                        Dim _Cmd As String = ""
                                        _Cmd = "Select Top 1 isnull(FNAmt,0) AS  FNAmt From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus with(nolock)"
                                        _Cmd &= vbCrLf & "where FNHSysEmpID=" & Integer.Parse(_EmpCode)
                                        _Cmd &= vbCrLf & "and FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'"
                                        _Amt = Double.Parse(HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "0"))
                                        _BonusAmt = _BonusAmt + _Amt

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _Amt
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _Amt
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _Amt
                                    End If
                                Next
                                ''End If



                                '****************************** End Bonus

                                '--------------------------- ค่ากะ OT ----------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        _ShiftOTAmt = _ShiftOTAmt + _ShiftOTValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftOTValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftOTValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftOTValue

                                    End If

                                Next
                                '--------------------------- ค่ากะ OT ----------------------------------
                                ''  If Val(_PayTerm) <> 25 Then
                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='0' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTFinCode.ToString = "016" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)

                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then

                                        If RFin!FTStaLateM.ToString = "0" And RFin!FTStaLateA.ToString = "0" Then

                                            _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))

                                        ElseIf RFin!FTStaLateM.ToString = "1" And RFin!FTStaLateA.ToString = "0" Then

                                            _StatePass = (_FNLateMMin <= Val(RFin!FTLateMin.ToString)) And (_FNLateAfMin <= 0)


                                        ElseIf RFin!FTStaLateM.ToString = "0" And RFin!FTStaLateA.ToString = "1" Then

                                            _StatePass = (_FNLateMMin <= 0) And (_FNLateAfMin <= Val(RFin!FTLateMin.ToString))

                                        ElseIf RFin!FTStaLateM.ToString = "1" And RFin!FTStaLateA.ToString = "1" Then

                                            _StatePass = (_FNLateMMin <= Val(RFin!FTLateMin.ToString)) And (_FNLateAfMin <= Val(RFin!FTLateMin.ToString))

                                        End If

                                    End If


                                    '' _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))

                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + Val(RFin!FCFinAmt.ToString)

                                        If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                            _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                        Else

                                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                            Next

                                        End If
                                    End If
                                Next
                                '' End If

                            End If
                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                        End If

                    Next


                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                        _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.00"))

                        If _FTEmpState = "3" Then
                            _FNSlaryPerMonth = CDbl(Format(_FNSlaryPerMonth / 2, "0.00"))
                        End If

                        _FNSlaryPerDay = CDbl(Format((_FCSalary) / 30, "0.00"))
                    Else

                        _FNSlaryPerMonth = 0
                        If _SalaryDevide > 1 Then
                            _FNSlaryPerDay = CDbl(Format(((_FCSalary) / 15), "0.00"))
                        Else
                            _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                        End If

                    End If

                    _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000000000"))
                    _FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000000000"))
                    _FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_FNSlaryPerDay + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000000000")) / 60, "0.00000000000"))
                    _FNSlaryOTPerHour = CDbl(Format((_FNSlaryPerDay + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00"))

                    If _FTShift = "" Then
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If
                    Else


                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If

                        If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _WorkDay = _WorkDay + 1
                        End If

                        _GFNLateNormalMin = _GFNLateNormalMin + _FNLateNormalMin
                        _GFNLateNormalCut = _GFNLateNormalCut + _FNLateNormalCut
                        _GFNLateOtMin = _GFNLateOtMin + _FNLateOtMin
                        _GFNLateOtCut = _GFNLateOtCut + _FNLateOtCut
                        _GFNLateMorning = _GFNLateMorning + _FNLateMorning
                        _GFNLateAfternoon = _GFNLateAfternoon + _FNLateAfternoon
                        _GFNAbsent = _GFNAbsent + _FNAbsent
                        _GFNAbsentCutTime = _GFNAbsentCutTime + _FNAbsentCutTime

                        _GFNCutAbsent = _GFNCutAbsent + _LateCutAbsent
                        _GFNTimeMin = _GFNTimeMin + _FNTimeMin
                        _GFNOT1Min = _GFNOT1Min + _FNOT1Min
                        _GFNOT1_5Min = _GFNOT1_5Min + _FNOT1_5Min
                        _GFNOT2Min = _GFNOT2Min + _FNOT2Min
                        _GFNOT3Min = _GFNOT3Min + _FNOT3Min
                        _GFNOT4Min = _GFNOT4Min + _FNOT4Min
                        _GFNLateMMin = _GFNLateMMin + _FNLateMMin
                        _GFNLateAfMin = _GFNLateAfMin + _FNLateAfMin
                        _GFNRetireOtMin = _GFNRetireOtMin + _FNRetireOtMin
                        _GFNRetireOtCut = _GFNRetireOtCut + _FNRetireOtCut
                        _GFNRetireMMin = _GFNRetireMMin + _FNRetireMMin
                        _GFNRetireAfMin = _GFNRetireAfMin + _FNRetireAfMin
                        _GFNRetireNormalCut = _GFNRetireNormalCut + _FNRetireNormalCut

                    End If

                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _LeaveCode = ""

                    For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                        _LeaveCode = sR!LFTLeaveCode.ToString


                        _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                        _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                        _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                        If sR!FTStaCalSSO.ToString = "1" Then
                            _GtotalleavePayCalSso = _GtotalleavePayCalSso + Val(sR!FNTotalPayMinute.ToString)
                        End If

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            _FNLeaveVacation = _FNLeaveVacation + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                        Else
                            _FNLeavePay = _FNLeavePay + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End If

                    Next

                    _GFNLeavePay = _GFNLeavePay + _FNLeavePay
                    _SocialBefore = 0
                    _SocialBeforeAmt = 0

                    Dim _WageAmtPerDay As Double = 0
                    Dim _WageOTAmtPerDay As Double = 0
                    Dim _TimeOTMdr As Integer = 0

                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    Else
                        _WageAmtPerDay = CDbl(Format((_FNTimeMin) * _FNSlaryPerMin, "0.000"))
                        _FNEmpBaht = _FNEmpBaht + _WageAmtPerDay
                    End If

                    _nBahtOt1 = _nBahtOt1 + CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000000"))

                    If FTHldType = 1 And _FNOT3Min > 0 Then
                        _GAmtPlus = _GAmtPlus + _AmtPlus
                    End If

                    _nBahtOt15 = _nBahtOt15 + CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.00000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.00000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.00000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.00000"))
                    '_FNAbsentCutTime
                    ' _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsentCutTime * _FNSlaryPerMin, "0.00"))
                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.00"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.00"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.00"))

                    _LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.000"))
                    Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _FNSlaryPerMin, "0.000"))
                    _Lapaid = _Lapaid + _TmpLapaidAmt



                    _GtotalleavePayCalSsoAmt = _GtotalleavePayCalSsoAmt + CDbl(Format(_GtotalleavePayCalSso * _FNSlaryPerMin, "0.000"))  'เงินลาจ่ายที่นำไปคิดประกันสังคม

                    If _LeaveCode <> "" And _FNLeaveVacation > 0 Then
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    Else
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    End If

                    If _FTStatePayHoliday <> "1" Then '--------- ไม่ได้ค่าจ้างวันหยุด---------------
                    Else

                        If (_FNLeaveNotPay <= 0) Then
                            If _TmpLapaidAmt <= 0 Then

                                _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.00"))

                            Else
                                _TotalHoliDay = _TotalHoliDay - _oHoliday
                            End If
                        Else
                            _TotalHoliDay = _TotalHoliDay - _oHoliday
                        End If

                    End If

                    _FTSatrtCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTSatrtCalculateDate, 1))

                Loop
                'Math.Round(Decimal.Parse(

                _FNEmpBaht = Math.Round(_FNEmpBaht, 2)
                _Lapaid = Math.Round(_Lapaid, 2)
                _GtotalleavePayCalSsoAmt = Math.Round(_GtotalleavePayCalSsoAmt, 2)
                _Lapaid = CDbl(Format(_Lapaid * 1, "0.00"))
                _GtotalleavePayCalSsoAmt = CDbl(Format(_GtotalleavePayCalSsoAmt * 1, "0.00"))
                _LaNotpaid = Math.Round(_LaNotpaid, 2)
                _LaNotpaid = CDbl(Format(_LaNotpaid * 1, "0.00"))

                If _FTEmpState = "2" Or _FTEmpState = "3" Then ' คำนวณค่าแรงพนักงานรายเดือน

                    If _dttran.Select("FTStateAccept<>'1' AND FTWeekly <>'1' ").Length > 0 Or _dttran.Rows.Count <= 0 Then
                        Return False
                    End If

                    _FNSlaryPerMonth = _MSlary


                    If _FTEmpState = "3" Then

                        _FNSlaryPerMonth = CDbl(Format(_FNSlaryPerMonth / 2, "0.00"))
                        _FNSlaryPerDay = CDbl(Format((_FNSlaryPerMonth) / 15, "0.00"))

                    Else

                        _FNSlaryPerDay = CDbl(Format((_FNSlaryPerMonth) / 30, "0.00"))
                    End If


                    _Gtotalleave = 0
                    _GtotalleavePay = 0
                    _GtotalleaveNotPay = 0
                    _GFNLeaveOther = 0
                    _GFNLeavePay = 0
                    _GtotalleavePayCalSso = 0
                    _LaNotpaid = 0
                    _Lapaid = 0
                    _FCPayVacationBaht = 0
                    _GtotalleavePayCalSsoAmt = 0
                    _nBahtAbsent = 0

                    Dim _NewSlary As String = ""

                    For Each sR As DataRow In _dtLeave.Rows

                        _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                        _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                        _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                        If sR!FTStaCalSSO.ToString = "1" Then
                            _GtotalleavePayCalSso = _GtotalleavePayCalSso + Val(sR!FNTotalPayMinute.ToString)
                        End If

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                        Else
                            _GFNLeavePay = _GFNLeavePay + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End If

                    Next

                    '_LaNotpaid = CDbl(Format(_GtotalleaveNotPay * _FNSlaryPerMin, "0.00"))
                    _LaNotpaid = Math.Round(Decimal.Parse(_LaNotpaid, 2))

                    If _LaNotpaid > _FNSlaryPerMonth Then
                        _LaNotpaid = _FNSlaryPerMonth
                    End If

                    _WorkingDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_DateEndOfMonth))) + 1

                    If _FDDateStart <= _StartDate And (_FDDateEnd >= _DateEndOfMonth Or _FDDateEnd = "") Then

                        Dim _SmDate As String = _DateStartOfMonth
                        Dim _EmDate As String = _DateEndOfMonth
                        Dim _dtSalary As New DataTable

                        _dtSalary.Columns.Add("FNCurrentSlary", GetType(Double))
                        _dtSalary.Columns.Add("FNDay", GetType(Integer))

                        Do While _SmDate <= _EmDate

                            _Qry = "  SELECT      TOP 1   FNCurrentSlary  AS AMT"
                            _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK)"
                            _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_SmDate) & "') "
                            _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                            _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                            _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                            _FCSalary = _FNSlaryPerMonth
                            If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                            If _dtSalary.Select("FNCurrentSlary=" & _FCSalary & "").Length > 0 Then

                                For Each Rxx As DataRow In _dtSalary.Select("FNCurrentSlary=" & _FCSalary & "")
                                    Rxx!FNDay = Integer.Parse(Val(Rxx!FNDay)) + 1
                                    Exit For
                                Next

                            Else
                                _dtSalary.Rows.Add(_FCSalary, 1)
                            End If

                            _SmDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_SmDate, 1))
                        Loop

                        Dim _TotalDay As Integer = 0
                        _FNEmpBaht = 0
                        If _dtSalary.Select("FNCurrentSlary<>" & _FNSlaryPerMonth & "").Length > 0 Then
                            For Each Rxx As DataRow In _dtSalary.Select("FNCurrentSlary<>" & _FNSlaryPerMonth & "")
                                _TotalDay = _TotalDay + Integer.Parse(Val(Rxx!FNDay))

                                _FNEmpBaht = _FNEmpBaht + Double.Parse(Format((Integer.Parse(Val(Rxx!FNDay)) * Double.Parse(Val(Rxx!FNCurrentSlary))), "0.00"))
                            Next

                            _FNEmpBaht = _FNEmpBaht + (_FNSlaryPerMonth - CDbl(Format(_TotalDay * _FNSlaryPerDay, "0.00")))

                        Else
                            _FNEmpBaht = _FNSlaryPerMonth
                        End If

                        _dtSalary.Dispose()

                    Else

                        Dim _TotalDay As Integer = 0
                        If _FDDateStart > _StartDate And _FDDateEnd < _EndDate And _FDDateEnd <> "" Then
                            _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_FDDateStart), CDate(_FDDateEnd))) + 1

                        ElseIf _FDDateStart > _StartDate Then
                            _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_FDDateStart)))
                        ElseIf _FDDateEnd < _EndDate And _FDDateEnd <> "" Then
                            If _FDDateEnd < _DateStartOfMonth Then
                                _TotalDay = _WorkingDay
                            Else
                                _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_FDDateEnd), CDate(_DateEndOfMonth))) + 1
                            End If
                        End If

                        If _TotalDay >= _WorkingDay Then
                            _FNEmpBaht = 0
                            _WorkingDay = 0
                        Else
                            _FNEmpBaht = _FNSlaryPerMonth - CDbl(Format(_TotalDay * _FNSlaryPerDay, "0.00"))
                            If _WorkingDay > 30 Then _WorkingDay = 30
                            _WorkingDay = _WorkingDay - _TotalDay
                        End If

                    End If

                    If _WorkingDay > 30 Then _WorkingDay = 30

                    _WorkingDay = CDbl(Format(((_WorkingDay * 480) - (_Gtotalleave)) / 480, "0.00"))
                    _WorkingDay = _WorkingDay - (_GFNAbsent / 480)

                    If _GFNAbsentCutTime > 0 Then
                        _nBahtAbsent = CDbl(Format((_GFNAbsentCutTime / 480) * _FNSlaryPerDay, "0.00"))
                        _FNEmpBaht = _FNEmpBaht - _nBahtAbsent
                    End If

                    If _WorkingDay < 0 Then
                        _WorkingDay = 0
                    End If

                Else
                    _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.00"))
                End If

                _WorkingDay = _WorkingDay + _DayAdjAdd

                _GFNTimeMin = _GFNTimeMin + (_DayAdjAdd * 480)
                _FNEmpBaht = _FNEmpBaht + _WageAdjAdd
                _nBahtOt1 = CDbl(Format(_nBahtOt1, "0.00"))
                _nBahtOt15 = CDbl(Format(_nBahtOt15, "0.00"))
                _nBahtOt2 = CDbl(Format(_nBahtOt2, "0.00"))
                _nBahtOt3 = CDbl(Format(_nBahtOt3, "0.00")) + _GAmtPlus
                _nBahtOt4 = CDbl(Format(_nBahtOt4, "0.00"))

                Dim _TmpPe As String = ""

                If _FTEmpState = "2" Then
                Else
                    _TmpPe = IIf(Val(_PayTerm) - 1 Mod 2 = 1, (Val(_PayTerm) - 1).ToString("00"), "")
                End If

                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน ประเภทจ่ายเป็นเดือน ของงวดก่อนหน้า ---------------------

                If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='1'  ").Length > 0 Then

                    Dim _BFSDate As String = ""
                    Dim _BFEDate As String = ""

                    _Qry = " SELECT TOP 1  FDCalDateBegin, FDCalDateEnd"
                    _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & " WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & " AND FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & " AND FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND FTPayMonth IN (   "
                    _Qry &= vbCrLf & "  Select FTPayMonth"
                    _Qry &= vbCrLf & "    FROM THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "   AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & " )  "

                    _dttempdata = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                    For Each Row As DataRow In _dttempdata.Rows
                        _BFSDate = Row!FDCalDateBegin.ToString
                        _BFEDate = Row!FDCalDateEnd.ToString
                    Next

                    If _BFSDate <> "" And _BFEDate <> "" Then

                        _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                        _Qry &= vbCrLf & " 	,ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                        _Qry &= vbCrLf & " 	,ISNULL(FNOT1_5,0) AS FNOT1_5"
                        _Qry &= vbCrLf & " 	,ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                        _Qry &= vbCrLf & " 	,ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                        _Qry &= vbCrLf & " ,ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                        _Qry &= vbCrLf & " ,ISNULL(FNLateMMin,0) As FNLateMorning"
                        _Qry &= vbCrLf & " 	,ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                        _Qry &= vbCrLf & " 	,ISNULL(FNAbsent,0) AS FNAbsent "
                        _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0)  + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                        _Qry &= vbCrLf & " ,ISNULL(FNOT1Min,0) As FNOT1Min  "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                        _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                        _Qry &= vbCrLf & " ,ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                        _Qry &= vbCrLf & ",P.FTOverClock,P.FTWeekDay"
                        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                        _Qry &= vbCrLf & "    WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                        _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                        _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                        _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Do While _BFSDate <= _BFEDate
                            _FTShift = ""
                            Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                            Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                            For Each R2 In _R

                                _FTShift = R2!FTShift.ToString
                                _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)

                                _InOT = R2!FTIn3.ToString
                                _OutOT = R2!FTOut3.ToString

                                _Over = R2!FTOverClock.ToString

                                If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    If _FTShift <> "" Then

                                        _SPDateType = 0

                                        _Holiday = ""

                                        _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                        _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                        _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' AND FTStateActive='1' "
                                        _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                        If _Holiday <> "" Then _SPDateType = 2

                                        Dim _StateLeaveOther As Boolean = False
                                        Dim _StateLeavacation As Boolean = False


                                        Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                        Dim _SumLeave As Integer = 0

                                        For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                            _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                            If Val(sR!LeaveType) = 1 Then
                                                _StateLeavacation = True
                                            Else
                                                _StateLeaveOther = True
                                            End If

                                            If Val(sR!LeaveType) = 2 Then
                                                _StateFTStaMaternityleaveNotpay = True
                                            End If

                                        Next

                                        For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='1' ")
                                            Dim _StatePass As Boolean = True

                                            If _OutOT <> "" Then
                                                Beep()
                                            End If

                                            If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                            If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                            If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                            If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                            If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                            If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                            If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                            End If

                                            If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                            If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                            If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                If _STime.Length = _ETime.Length Then
                                                    If IsDate(_STime) And IsDate(_ETime) Then
                                                        If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If
                                                Else
                                                    _StatePass = False
                                                End If

                                            End If

                                            If _StatePass Then
                                                _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then

                                                    _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))

                                                Else

                                                    For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                        xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                    Next

                                                End If

                                            End If
                                        Next
                                    End If
                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                                End If
                            Next

                            _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                        Loop
                    End If
                End If

                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                '-------- รายได้อื่นๆจ่ายงวดกลางเดือน--------------------
                If _FTEmpState <> "2" And Val(_PayTerm) Mod 2 = 1 Then
                    If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='2'  ").Length > 0 Then

                        Dim _BFSDate As String = ""
                        Dim _BFEDate As String = ""

                        _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                        _BFEDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_BFSDate, 8) & "01", 1), -1)) 'วันสุดท้ายของเดือน

                        If _BFSDate <> "" And _BFEDate <> "" Then

                            _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                            _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                            _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                            _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                            _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                            _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                            _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                            _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                            _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                            _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                            _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                            _Qry &= vbCrLf & " ,P.FTOverClock,P.FTWeekDay"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                            _Qry &= vbCrLf & "    WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                            _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                            Do While _BFSDate <= _BFEDate
                                _FTShift = ""
                                Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                                Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                For Each R2 In _R

                                    _FTShift = R2!FTShift.ToString
                                    _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                    _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                    _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                    _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                    _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                    _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                    _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                    _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                    _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                    _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                    _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                    _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                    _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                    _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                    _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                    _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                    _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                                    _InOT = R2!FTIn3.ToString
                                    _OutOT = R2!FTOut3.ToString
                                    _Over = R2!FTOverClock.ToString

                                    If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                        If _FTShift <> "" Then

                                            _SPDateType = 0

                                            _Holiday = ""

                                            _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                            _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'  AND FTStateActive='1' "
                                            _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                            If _Holiday <> "" Then _SPDateType = 2

                                            Dim _StateLeaveOther As Boolean = False
                                            Dim _StateLeavacation As Boolean = False


                                            Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                            Dim _SumLeave As Integer = 0

                                            For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                                _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                                If Val(sR!LeaveType) = 1 Then
                                                    _StateLeavacation = True
                                                Else
                                                    _StateLeaveOther = True
                                                End If

                                                If Val(sR!LeaveType) = 2 Then
                                                    _StateFTStaMaternityleaveNotpay = True
                                                End If

                                            Next

                                            For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='2' ")
                                                Dim _StatePass As Boolean = True

                                                If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                                If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                                If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                                If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                                If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                                If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)

                                                If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                    _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                                End If

                                                If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                                If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                                If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                    Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                    Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                    If _STime.Length = _ETime.Length Then
                                                        If IsDate(_STime) And IsDate(_ETime) Then
                                                            If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                                _StatePass = False
                                                            End If
                                                        Else
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If

                                                End If

                                                If _StatePass Then
                                                    _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                    If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                    If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                    If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                                        _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                                    Else
                                                        For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                            xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                        Next
                                                    End If

                                                End If
                                            Next
                                        End If
                                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    End If

                                Next

                                _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                            Loop
                        End If
                    End If
                End If
                '-------------------------------------------------------------------------------------------
                If _FTEmpState = "2" And Val(_PayTerm) Mod 2 = 0 Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1'")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next
                End If

                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0'")
                    Dim _StatePass As Boolean = True

                    If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                    If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                    If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                    If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                    If _StatePass Then

                        _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                        If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                        If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                        If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                            _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                        Else

                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                            Next

                        End If
                    End If
                Next

                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1'")
                    Dim _StatePass As Boolean = True

                    If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                    If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                    If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                    If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                    If _StatePass Then

                        _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                        If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                        If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                        If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                            _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                        Else

                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                            Next

                        End If
                    End If
                Next

                For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTFinType='2'")
                    _FCDeduct = _FCDeduct + Val(R2!FCFinAmt.ToString)

                    If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                    If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                    If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                        _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                    Else

                        For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                            xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                        Next

                    End If


                Next
                '---------รายได้รายหัก อื่นๆ-------------------------

                '------------------- สิ้นสุดการคำนวณรายวัน
                _FTWorkmenAmtBefore = 0
                _FTTotalCalWorkmenBefore = 0

                _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FCSocial"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocial,0)) AS FCSocialAmt"
                _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                _Qry &= vbCrLf & "  Select FNMonth"
                _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                _Qry &= vbCrLf & "  )  "

                Dim _DtSso As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                If _DtSso.Rows.Count > 0 Then
                    _SocialBefore = Val(_DtSso.Rows(0)!FCSocial.ToString)
                    _SocialBeforeAmt = Val(_DtSso.Rows(0)!FCSocialAmt.ToString)
                End If

                If _FTEmpState = "2" Or _FTEmpState = "3" Then

                    If FTStaDeductAbsent = 0 Then
                        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent + _nBahtAbsent)
                    Else
                        _nBahtAbsent = 0
                        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent)
                    End If


                    If _FNEmpBaht < 0 Then _FNEmpBaht = 0
                End If

                _TotalCalTax = 0 : _TaxAmt = 0

                _TotalCalSso = _FNEmpBaht + _HBaht + _FTOtherAddCalculateSocial + _FTAddCalculateSocial + _GtotalleavePayCalSsoAmt
                ' _TotalCalTax = _FNEmpBaht + _HBaht + _Lapaid + _FCPayVacationBaht
                _TotalCalTax = _FNEmpBaht + _HBaht + _Lapaid + _FCPayVacationBaht + _FNIncentiveAmt

                '-----------------กองทุนสำรองเลี้ยงชีพ-------------------------------
                If _ContributedFundBeginPay Then
                    Dim _EMpWorkAge As Integer = Val(R!FNEmpWorkAge.ToString)

                    For Each sR As DataRow In _THRMContributedFund.Select(" FNAgeBegin <= " & _EMpWorkAge & " AND FNAgeEnd >=" & _EMpWorkAge & " ")

                        FTTotalCalContributedAmt = _TotalCalSso

                        FTContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNEmpAmtPer.ToString)) / 100.0), "0"))
                        FTCmpContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNCmpAmtPer.ToString)) / 100.0), "0"))

                        Exit For

                    Next

                End If
                '-----------------กองทุนสำรองเลี้ยงชีพ----------------------------

                '-----------------หักองทุนทดแทน---------------------------------
                FTTotalCalWorkmen = _TotalCalSso

                If _FTMaxCalWorkmen > 0 Then

                    _SocialPayMax = CDbl(Format(((_FTMaxCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))

                    If (_TotalCalSso + _FTTotalCalWorkmenBefore) > _FTMaxCalWorkmen Then
                        FTTotalCalWorkmen = _FTMaxCalWorkmen
                    ElseIf FTTotalCalWorkmen > 0 Then
                        FTTotalCalWorkmen = FTTotalCalWorkmen
                    Else
                        FTTotalCalWorkmen = 0
                    End If

                    If _FTTotalCalWorkmenBefore > 0 Then
                        FTWorkmenAmt = CDbl(Format((((_CalSo + _FTTotalCalWorkmenBefore) * _FTMaxWorkmenRate) / 100.0), "0"))
                        FTWorkmenAmt = FTWorkmenAmt - _FTWorkmenAmtBefore
                    Else
                        FTWorkmenAmt = CDbl(Format(((FTTotalCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))
                    End If
                End If

                '-----------------กองทุนทดแทน-------------------------------

                '--------- คิดประกันสังคม-----------
                _SocialPayMax = HCfg.HMaxSocialBaht
                _CalSo = 0
                _FCSocial = 0

                If _FTCalSocialSta <> "1" Then ' 1 ไม่่คิดประกันสังคม

                    If (_TotalCalSso + _SocialBefore) >= _SocialMaxIncome Then
                        _CalSo = _SocialMaxIncome
                    ElseIf (_TotalCalSso + _SocialBefore) < _SocialMaxIncome And (_TotalCalSso + _SocialBefore) >= _SocialMinIncome Then
                        _CalSo = (_TotalCalSso + _SocialBefore)
                    ElseIf _TotalCalSso > 0 Then
                        _CalSo = _SocialMinIncome
                    Else
                        _CalSo = 0
                    End If

                    If _SocialBefore > 0 Then
                        _FCSocial = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRate) / 100.0), "0.00")), "0"))
                        _FCSocial = IIf(_SocialBeforeAmt > _FCSocial, 0, _FCSocial - _SocialBeforeAmt)
                    Else
                        _FCSocial = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRate) / 100.0), "0.00")), "0"))
                    End If

                Else
                    _TotalCalSso = 0
                End If

                _FNEmpDiligent = 0
                _FTStateInDustin = ""
                _FNDeligentPeriod = 0

                If _CalIns <> "" Then
                    Dim _StateCalIns As Boolean = False
                    Dim StateTypePayDeligent As String = ""

                    _Qry = "SELECT TOP 1 FNPayDeligent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMDiligentConfigHD WHERE FTDeligentCode='" & HI.UL.ULF.rpQuoted(_CalIns) & "' "
                    StateTypePayDeligent = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    Select Case StateTypePayDeligent
                        Case "0"

                            _StateCalIns = True
                        Case "1"

                            If Val(_PayTerm) Mod 2 = 1 Then

                                _FTSatrtCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                                _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1), -1)) 'วันสุดท้ายของเดือน
                                _StateCalIns = True
                            End If

                        Case "2"

                            If Right(Left(_EndDate, 7), 2) = "12" Or Right(Left(_StartDate, 7), 2) = "12" Then
                                If _EndDate >= Left(_EndDate, 8) & "30" Then
                                    _FTSatrtCalculateDateIns = Left(_StartDate, 7) & "/01"  'วันแรกของเดือน
                                    _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_StartDate, 7) & "/01", 1), -1)) 'วันสุดท้ายของเดือน

                                    _StateCalIns = True
                                End If

                            Else
                                'If Val(_PayTerm) = 1 Then

                                '    _FTSatrtCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                                '    _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1), -1)) 'วันสุดท้ายของเดือน
                                '    _StateCalIns = True

                                'Else
                                '    If Val(_PayTerm) Mod 2 = 0 Then

                                '        _FTSatrtCalculateDateIns = Left(_StartDate, 7) & "/01"  'วันแรกของเดือน
                                '        _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_StartDate, 7) & "/01", 1), -1)) 'วันสุดท้ายของเดือน

                                '        _StateCalIns = True

                                '    End If
                                'End If

                                If Val(_PayTerm) Mod 2 = 0 Then

                                    _FTSatrtCalculateDateIns = Left(_StartDate, 7) & "/01"  'วันแรกของเดือน
                                    _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_StartDate, 7) & "/01", 1), -1)) 'วันสุดท้ายของเดือน

                                    _StateCalIns = True

                                End If

                            End If




                    End Select



                    If _StateCalIns Then
                        _Qry = " SELECT   ISNULL(PayIndus,0) As PayIndus , ISNULL(StateIndus,'') AS StateIndus,ISnuLL(FNDeligentPeriod,0) AS FNDeligentPeriod"
                        _Qry &= vbCrLf & "	FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.FN_CALCULATE_INDUST(" & Val(_EmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDateIns) & "','" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDateIns) & "','" & HI.UL.ULF.rpQuoted(_CalIns) & "')"

                        Dim _DtIns As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        If _DtIns.Rows.Count > 0 Then
                            _FNEmpDiligent = Val(_DtIns.Rows(0)!PayIndus.ToString)
                            _FTStateInDustin = _DtIns.Rows(0)!StateIndus.ToString
                            _FNDeligentPeriod = Val(_DtIns.Rows(0)!FNDeligentPeriod.ToString)
                        End If

                    End If
                End If

                _FTAddCalculateTax = _FTAddCalculateTax + _ShiftOTAmt
                _FCAdd = _FCAdd + _ShiftAmt + _ShiftOTAmt

                If _FTCalTaxSta <> "1" Then

                    With _EmpDisTax
                        .FTSosial = _FCAccumulateSocial + _FCSocial + (_FCSocial * (_TotalInstalment - _Instalment))

                        If .FTSosial > (((_SocialMaxIncome * _SocialRate) / 100.0) * 12) Then
                            .FTSosial = CDbl(Format((((_SocialMaxIncome * _SocialRate) / 100.0) * 12), "0.00"))
                        End If

                        .BaseSlary = (_TotalCalTax * (_TotalInstalment - _Instalment)) + _TotalCalTax
                        .OtherSlary = _FTOtherAddCalculateTax + _FTAddCalculateTax + _FNEmpDiligent + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                        .Cfg_ContributedDeducToTheFund = .Cfg_ContributedDeducToTheFund + FTContributedAmt + (FTContributedAmt * (_TotalInstalment - _Instalment))

                    End With

                    _TotalCalTax = _TotalCalTax + _EmpDisTax.OtherSlary
                    Dim _TaxOther As Double = _EmpDisTax.OtherSlary
                    Dim _TaxOtherAmt As Double = 0
                    Dim _Total As Double = GETnRecalDiscTax(_EmpDisTax, _EmpTaxYear)

                    _EmpTaxYear.FTSocial = _EmpDisTax.FTSosial

                    _EmpTaxYear.FTTotalCalTax = _Total


                    Dim _TotalTax As Double = GETnTax(_Total, _TaxOther, _TaxOtherAmt)

                    _EmpTaxYear.FTTotalTax = (_TotalTax + _TaxOtherAmt) 'ภาษีที่ต้องจ่าย

                    _TotalTax = CDbl(Format(_TotalTax - _EmpDisTax.BeforeTax, "0.00"))

                    If _TotalTax > 0 Then
                        _TaxAmt = CDbl(Format((_TotalTax / ((_TotalInstalment - _Instalment) + 1)), "0.00"))
                        _TaxAmt = _TaxAmt + _TaxOtherAmt
                    Else
                        _TaxAmt = 0
                    End If

                    _EmpTaxYear.FTTotalTaxPay = _FCAccumulateTax + _TaxAmt

                Else

                    _TotalCalTax = 0
                    _TaxAmt = 0

                End If

                _FCOtherAdd = _FCOtherAdd + _FNPayterm25Amt

                _Net = (_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _BonusAmt) - _FCOtherDeduct - _FCDeduct
                _FCBaht = _FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4

                _FNNetpay = (_Net - (_FCSocial + _TaxAmt + FTContributedAmt))
                _FNNetpayOrg = _FNNetpay

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll (FTInsUser, FTInsDate, FTInsTime,"
                _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
                _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
                _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId,  FNHSysPayRollPayId"
                _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
                _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
                _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
                _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
                _Qry &= vbCrLf & ",FNTotalWKNMin,  FNOt1Min, FNOt15Min, FNOt2Min"
                _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
                _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
                _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
                _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
                _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
                _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
                _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
                _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
                _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
                _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
                _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg , FNVacationRetMin, FNVacationRetAmt,FNWorkDay,FTStateCalSocial,FTStateCalTax, FNSocialRateEmp,FNSocialRateCmp )"
                _Qry &= vbCrLf & " 	SELECT '" & HI.UL.ULF.rpQuoted(_User) & "',CONVERT(varchar(10),GetDate(),111),CONVERT(varchar(8),GetDate(),114)"
                _Qry &= vbCrLf & " 	,'" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ""
                _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "','" & _EmpType & "','" & HI.UL.ULDate.ConvertEnDB(_PayDate) & "'"
                _Qry &= vbCrLf & " 	," & Val(_FTDeptCode) & ""
                _Qry &= vbCrLf & " 	," & Val(_FTDivCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTSectCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTUnitCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPos) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPaymentCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBankCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBranchCode) & " "
                _Qry &= vbCrLf & " 	,'" & HI.UL.ULF.rpQuoted(_FTAccNo) & "'," & _TotalHoliDay & ""
                _Qry &= vbCrLf & " 	," & _FCSalary & ""
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNTimeMin & " / 60) + Convert(numeric(18,2),(( " & _GFNTimeMin & " %60) /100.00)) "
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1_5Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1_5Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT2Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT2Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2)," & _GFNOT3Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT3Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GFNOT4Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT4Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleavePay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleavePay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleaveNotPay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleaveNotPay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _Gtotalleave & " / 60) + Convert(numeric(18,2),(( " & _Gtotalleave & " %60) /100.00))"
                _Qry &= vbCrLf & " 	, " & _GFNTimeMin
                _Qry &= vbCrLf & " 	, " & _GFNOT1Min
                _Qry &= vbCrLf & " 	, " & _GFNOT1_5Min
                _Qry &= vbCrLf & ", " & _GFNOT2Min
                _Qry &= vbCrLf & "," & _GFNOT3Min
                _Qry &= vbCrLf & ",  " & _GFNOT4Min
                _Qry &= vbCrLf & ",  " & _GFNLateNormalMin
                _Qry &= vbCrLf & ",  " & _GFNLateNormalCut
                _Qry &= vbCrLf & ",  " & _GFNCutAbsent
                _Qry &= vbCrLf & ",  " & _GFNAbsent & "," & (_GFNTimeMin + _GFNOT1Min + _GFNOT1_5Min + _GFNOT2Min + _GFNOT3Min + _GFNOT4Min)
                _Qry &= vbCrLf & ",  " & _GtotalleavePay
                _Qry &= vbCrLf & ", " & _GtotalleaveNotPay
                _Qry &= vbCrLf & ", " & _Gtotalleave
                _Qry &= vbCrLf & ", " & _FNEmpBaht & " "
                _Qry &= vbCrLf & ", " & _nBahtOt1 & " "
                _Qry &= vbCrLf & "," & _nBahtOt15 & " "
                _Qry &= vbCrLf & "," & _nBahtOt2 & " "
                _Qry &= vbCrLf & "," & _nBahtOt3 & " "
                _Qry &= vbCrLf & "," & _nBahtOt4 & " "
                _Qry &= vbCrLf & "," & (_FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FNIncentiveAmt + _BonusAmt) & " "
                _Qry &= vbCrLf & "," & _FNEmpDiligent & " "
                _Qry &= vbCrLf & "," & _FCPayVacationBaht & " "
                _Qry &= vbCrLf & "," & _Lapaid & " "
                _Qry &= vbCrLf & "," & _LateCutAmt & " "
                _Qry &= vbCrLf & "," & _LateCutAmtAbsent & " "
                _Qry &= vbCrLf & "," & _nBahtAbsent & " "
                _Qry &= vbCrLf & "," & _TotalCalSso & " "
                _Qry &= vbCrLf & "," & _TotalCalTax & " "
                _Qry &= vbCrLf & "," & _FCAdd & " "
                _Qry &= vbCrLf & "," & _FCOtherAdd & " "
                _Qry &= vbCrLf & "," & _FCDeduct & " "
                _Qry &= vbCrLf & "," & _FCOtherDeduct & " "
                _Qry &= vbCrLf & "," & _Net & " "
                _Qry &= vbCrLf & "," & _FCSocial & " "
                _Qry &= vbCrLf & "," & _TaxAmt & " "
                _Qry &= vbCrLf & "," & _HBaht & " "
                _Qry &= vbCrLf & "," & (_FNNetpay) & ""
                _Qry &= vbCrLf & "," & (_Net + _FCAccumulateIncome) & ""
                _Qry &= vbCrLf & "," & (_FCSocial + _FCAccumulateSocial) & ""
                _Qry &= vbCrLf & "," & (_TaxAmt + _FCAccumulateTax) & ""
                _Qry &= vbCrLf & ",'" & _FTStateInDustin & "' "
                _Qry &= vbCrLf & "," & (FTTotalCalContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTCmpContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTTotalCalWorkmen) & ""
                _Qry &= vbCrLf & "," & (FTWorkmenAmt) & ""
                _Qry &= vbCrLf & "," & _AmtRetire & ""
                _Qry &= vbCrLf & "," & _GtotalleavePayCalSsoAmt & ""
                _Qry &= vbCrLf & "," & _WorkingDay & " "
                _Qry &= vbCrLf & "," & _WageAdjAdd & ""
                _Qry &= vbCrLf & "," & _FNIncentiveAmt & ""
                _Qry &= vbCrLf & "," & _FNNetpayOrg & ""
                _Qry &= vbCrLf & "," & FNVacationRetMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetAmt & ""
                _Qry &= vbCrLf & "," & FNWorkDayInWeek & ""
                _Qry &= vbCrLf & " 	,'" & HI.UL.ULF.rpQuoted(_FTCalSocialSta) & "'"
                _Qry &= vbCrLf & " 	,'" & HI.UL.ULF.rpQuoted(_FTCalTaxSta) & "'"
                _Qry &= vbCrLf & "," & _SocialRate & " "
                _Qry &= vbCrLf & "," & _SocialRateCmp & " "


                'FNWorkDay
                ' , FNVacationRetMin, FNVacationRetAmt
                '_FNNetpayOrg
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                If _FTCalTaxSta <> "1" And _FTEmpIdNo <> "" Then
                    '-----------------------------ภาษี -----------------------------------------------------
                    _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTaxYear "
                    _Qry &= vbCrLf & "  WHERE FTYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & "  AND  FTEmpIdNo='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' AND FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " "
                    _Qry &= vbCrLf & "  INSERT INTO THRTTaxYear (FNHSysCmpId,FTYear, FTEmpIdNo, FNAmt, FNExpenses, FNNetAmt, "
                    _Qry &= vbCrLf & "  FNModEmp, FNModMate, FNChildNotLern, FNChildLern, FNChildNotLernAmt, FNChildLernAmt, FNInsurance, FNProvidentfund, FNInterest, FNSocial, FNDonation, "
                    _Qry &= vbCrLf & "  FNProvidentfundOver, FNGPF, FNSavingsFund, FNCommutation, FNUnitRMF, FNModFather, FNModMother, FNModFatherMate, FNModMotherMate, FNUnitLTF, "
                    _Qry &= vbCrLf & "  FNDonationLern, FNParentsHealthInsurance, FNSupportSport, FNAcquisitionOfProperty, FNPension, FNTravel, FNTotalCalTax, FNTotalTax,FNTotalTaxPay )"
                    _Qry &= vbCrLf & "  SELECT " & HI.ST.SysInfo.CmpID & ",'" & _PayYear & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "

                    With _EmpTaxYear

                        _Qry &= vbCrLf & "," & .FTAmt + _TotalCalTax & " "
                        _Qry &= vbCrLf & "," & .FTExpenses & ""
                        _Qry &= vbCrLf & "," & .FTNetAmt & ""
                        _Qry &= vbCrLf & "," & .FTModEmp & ""
                        _Qry &= vbCrLf & "," & .FTModMate & ""
                        _Qry &= vbCrLf & "," & .FNChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FNChildLern & " "
                        _Qry &= vbCrLf & "," & .FTChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FTChildLern & ""
                        _Qry &= vbCrLf & "," & .FTInsurance & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfund & ""
                        _Qry &= vbCrLf & "," & .FTInterest & ""
                        _Qry &= vbCrLf & "," & .FTSocial + _FCSocial & ""
                        _Qry &= vbCrLf & "," & .FTDonation & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfundOver & ""
                        _Qry &= vbCrLf & "," & .FTGPF & ""
                        _Qry &= vbCrLf & "," & .FTSavingsFund & ""
                        _Qry &= vbCrLf & "," & .FTCommutation & ""
                        _Qry &= vbCrLf & "," & .FTUnitRMF & ""
                        _Qry &= vbCrLf & "," & .FTModFather & ""
                        _Qry &= vbCrLf & "," & .FTModMother & ""
                        _Qry &= vbCrLf & "," & .FTModFatherMate & ""
                        _Qry &= vbCrLf & "," & .FTModMotherMate & ""
                        _Qry &= vbCrLf & "," & .FTUnitLTF & ""
                        _Qry &= vbCrLf & "," & .FTDonationLern & ""
                        _Qry &= vbCrLf & "," & .FTParentsHealthInsurance & ""
                        _Qry &= vbCrLf & "," & .FTSupportSport & ""
                        _Qry &= vbCrLf & "," & .FTAcquisitionOfProperty & ""
                        _Qry &= vbCrLf & "," & .FTPension & ""
                        _Qry &= vbCrLf & "," & .FTTravel & ""
                        _Qry &= vbCrLf & "," & .FTTotalCalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTaxPay & ""

                    End With

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    '----------------------------- ภาษี -----------------------------------------------------
                End If

                '-----------------------------รายได้อื่นๆ -----------------------------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Dim _AllFincode As String = ""

                For Each _R As DataRow In _DtFin.Select("FCTotalFinAmt<>'0'")
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTFinCode, FTFinAmt," & _R!FCTotalFinAmt.ToString & ",0," & _R!FCTotalFinAmt.ToString & ""
                    _Qry &= vbCrLf & " FROM  THRMEmployeeFin "
                    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND  FTFinCode = ('" & _AllFincode & "') "

                    HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR)

                Next

                For Each _R As DataRow In _dt.Select("FCFinAmt<>0")
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_R!FCFinAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FCFinAmtOther=" & _R!FCFinAmt.ToString & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _AllFincode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then

                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ",'" & _AllFincode & "',0, 0," & _R!FCFinAmt.ToString & "," & _R!FCFinAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR)

                    End If

                Next

                If _ShiftAmt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='001' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '001'," & _ShiftValue.ToString & "," & _ShiftAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _ShiftOTAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftOTAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='007' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '007'," & _ShiftOTValue.ToString & "," & _ShiftOTAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If


                If _FNPayterm25Amt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNPayterm25Amt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='024' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '024'," & _FNPayterm25Amt.ToString & "," & _FNPayterm25Amt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If


                If _FNIncentiveAmt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNIncentiveAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='011' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '011'," & _FNIncentiveAmt.ToString & "," & _FNIncentiveAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _BonusAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_BonusAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='008' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _BonusAmt.ToString & "," & _BonusAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _FNEmpDiligent > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNEmpDiligent.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    If _FNDeligentPeriod = 0 Then
                        _Qry &= vbCrLf & " AND FTFinCode='008' "
                    Else
                        _Qry &= vbCrLf & " AND FTFinCode='009' "

                    End If


                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        If _FNDeligentPeriod = 0 Then
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                        Else
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '009'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                        End If
                    End If

                End If

                'If _AmtReturnVacation > 0 Then

                '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_AmtReturnVacation.ToString) & " "
                '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTFinCode='023' "

                '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '023'," & _ShiftValue.ToString & "," & _AmtReturnVacation.ToString & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If

                'End If
                '----------- เงินคืนพักร้อน-------------------------------


                '' _FNSlaryPerMin
                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave (FTPayYear, FTPayTerm, FNHSysEmpID, FTLeaveType, FNTotalHour, FNTotalMinute, FNTotalPayHour, FNTotalPayMinute, FNTotalNotPayHour,FNTotalNotPayMinute,FNTotalPayLeaveBaht,FNTotalNotPayLeaveBaht)"
                _Qry &= vbCrLf & "  SELECT      '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTLeaveType,Convert(numeric(18,2), Sum(FNTotalMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalMinute) %60) /100.00)) , "
                _Qry &= vbCrLf & "  Sum(FNTotalMinute), Convert(numeric(18,2), Sum(FNTotalPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalPayMinute) %60) /100.00)), Sum(FNTotalPayMinute),  Convert(numeric(18,2),Sum(FNTotalNotPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalNotPayMinute) %60) /100.00)), SUM(FNTotalNotPayMinute)"
                _Qry &= vbCrLf & " ,Convert(numeric(18,3),Sum(FNTotalPayMinute)* " & _FNSlaryPerMin & ")"
                _Qry &= vbCrLf & " ,Convert(numeric(18,3),Sum(FNTotalNotPayMinute)* " & _FNSlaryPerMin & ")"
                _Qry &= vbCrLf & "  FROM THRTTransLeave "
                _Qry &= vbCrLf & " WHERE        (FNHSysEmpID = '" & Val(_EmpCode) & "') "
                _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' "
                _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "' "
                _Qry &= vbCrLf & "  GROUP BY   FNHSysEmpID, FTLeaveType"
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            End If

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & "  	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate (FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg, FNVacationRetMin, FNVacationRetAmt,FNWorkDay,FTStateCalSocial,FTStateCalTax)"
            _Qry &= vbCrLf & " SELECT TOP 1  FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg, FNVacationRetMin, FNVacationRetAmt,FNWorkDay,FTStateCalSocial,FTStateCalTax"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            _Qry &= vbCrLf & " SELECT FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate ( FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay)"
            _Qry &= vbCrLf & " SELECT  FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

        Next

        Return True

    End Function

    Public Shared Function CalculateWeekEnd_KM_Daily(ByVal _User As String, ByVal _EmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
        ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
        Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
        Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0, Optional FNStateSalaryType As Integer = 0,
        Optional _FNExchangeRate As Double = 0, Optional _FNExchangeRateTHB As Double = 0, Optional FNWorkDayInWeek As Integer = 13,
        Optional FNWorkDayInMonth As Integer = 26, Optional FNWorkDayInWeekBF As Integer = 0, Optional SocialExchangeRate As Double = 0, Optional TaxExchangeRate As Double = 0) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim CountDayPerMonth As Integer = FNWorkDayInMonth
        Dim _Qry As String
        Dim _dt As DataTable
        Dim _dttemp As DataTable
        Dim _dttran As DataTable
        Dim _SalaryDevide As Integer = 0
        Dim FNVacationRetMin, FNVacationRetAmt, FNVacationPerDayLapaid As Double


        Dim _SsoBefore As Double = 0
        Dim _SsoBeforeAmt As Double = 0

        Dim _InsuranceEmpyeeBefore As Double = 0
        Dim _InsuranceEmpyerBefore As Double = 0

        Dim _DtFin As New DataTable
        _DtFin.Columns.Add("FTFinCode", GetType(String))
        _DtFin.Columns.Add("FCTotalFinAmt", GetType(String))
        Dim _SeniorityAmt As Double = 0
        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTPaymentCode As String, _FTBankCode As String, _FNChildNotLearn As Double
        Dim _FCReduceDonate As Double, _FCLifeInsurance As Double
        Dim _FCLoanHouse As Double
        Dim _FCShare As Double, _FCReduceFather As Double, _FCReduceMother As Double
        Dim _FCReSpouseFather As Double, _FCReSpouseMother As Double, _FCReduceEducationSupport As Double, _FTMarryIncome As String
        Dim _FTCalSocialSta As String, _FTCalTaxSta As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FTEmpIdNo As String, _FTEmpIdNo1 As String, _FTSocialNo As String, _FTBranchCode As String, _FTAccNo As String, _FCLifeFeeMoney As Double
        Dim _FCOtherAdd As Double, _FTOtherAddCalculateSocial As String, _FTOtherAddCalculateTax As String
        Dim _FCOtherAddOt As Double, _FTOtherAddOtCalculateSocial As String, _FTOtherAddOtCalculateTax As String, _FCBFShiftMoney As Double
        Dim _FTShiftMoneyCalculateSocial As String, _FTShiftMoneyCalculateTax As String, _FCDiligent As Double
        Dim _FTDiligentCalculateSocial As String, _FTDiligentCalculateTax As String, _FCBonusEndYear As Double
        Dim _FTBonusEndCalculateSocial As String, _FCOtherDeduct As Double, _FTBonusEndCalculateTax As String
        Dim _FCShelter As Double, _FTShelterCalculateSocial As String, _FTShelterCalculateTax As String
        Dim _FCShareFactory As Double, _FTShareFactoryCalculateSocial As String
        Dim FNPayLeaveBusinessBaht, FNPayLeaveSickBaht, FNPayLeaveSpecialBaht, FNParturitionLeave As Double, FNParturitionLeaveReCalTax As Double
        Dim FNPayLeaveBusinessBahtMin, FNPayLeaveSickBahtMin, FNPayLeaveSpecialBahtMin, FNParturitionLeaveMin As Double
        Dim GFNPayLeaveBusinessBahtMin, GFNPayLeaveSickBahtMin, GFNPayLeaveSpecialBahtMin, GFNParturitionLeaveMin As Integer
        Dim _FTShift As String
        Dim _FNTime, _FNNotRegis As Double
        Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
        Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
        Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
        Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double
        Dim _FNLeavePay, _FNLeaveNotPay As Double, _FNTimeMin, _FNOT1Min As Double
        Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
        Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
        Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
        Dim _GFNTime, _GFNNotRegis As Double
        Dim _GFNOT1 As Double, _GFNOT1_5 As Double, _GFNOT2 As Double, _GFNOT3 As Double, _GFNOT4 As Double
        Dim _GFNLeaveSick As Double, _GFNLeaveBusiness As Double
        Dim _GFNLeaveVacation As Double, _GFNLeavePregnant As Double, _GFNLeaveOrdain As Double, _GFNLeaveSpecial As Double
        Dim _GFNLeaveMarry As Double, _GFNLeaveOther As Double, _GFNLateNormalMin As Double
        Dim _GFNLateNormalMinNotHoliday As Double = 0
        Dim _GFNLateNormalCut As Double, _GFNLateOtMin As Double, _GFNLateOtCut As Double
        Dim _GFNLateMorning As Double, _GFNLateAfternoon As Double, _GFNAbsent, _GFNCutAbsent As Double
        Dim _GFNLeavePay As Double, _GFNTimeMin, _GFNOT1Min As Double
        Dim _GFNOT1_5Min As Double, _GFNOT2Min As Double, _GFNOT3Min As Double, _GFNOT4Min As Double, _GFNLateMMin As Double
        Dim _GFNLateAfMin As Double, _GFNRetireMMin As Double, _GFNRetireAfMin As Double
        Dim _GFNRetireNormalCut As Double, _GFNRetireOtMin As Double, _GFNRetireOtCut As Double
        Dim _dtot As DataTable
        Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double
        Dim _FCAccumulateIncome As Double, _FCAccumulateSocial As Double, _FCAccumulateTax As Double
        Dim _FTSatrtCalculateDate As String, _FTEndCalculateDate As String, _FNEmpDiligent As Double, _FTStateInDustin As String, _FNDeligentPeriod As Integer
        Dim _FTSatrtCalculateDateIns As String, _FTEndCalculateDateIns As String
        Dim _FNEmpBaht, _nBahtOt1 As Double, _nBahtOt15 As Double, _nBahtOt2 As Double, _nBahtOt3 As Double, _nBahtOt4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
        Dim _SocialRate As Double : Dim _StateSocialOnlyCmppay As Boolean
        Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
        Dim _TotalHoliDay As Integer
        Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String

        Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double
        Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
        Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
        Dim _FTSlary, _FTDivCode, _FTPos As String
        Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
        Dim _Dtemp As DataTable
        Dim _SocialBefore, _SocialBeforeAmt, _SocialPayMax As Double
        Dim _FCAdd, _FTAddCalculateSocial, _FTAddCalculateTax, _FCDeduct, _TotalCalSso, _TotalCalTax, _TaxAmt As Double
        Dim _Gtotalleave, _GtotalleavePay, _GtotalleaveNotPay, _GtotalleavePayCalSso, _GtotalleavePayCalSsoAmt As Double
        Dim _dtLeave As DataTable
        Dim _LeaveCode As String = ""
        Dim _dtAddOtherAmt As DataTable
        Dim _dtAddOtherAmtshift As DataTable
        Dim FCModFather, FCModMother, FCModMateFather, FCModMateMother As Double
        Dim FCPremium, FCInterest, FCUnitRMF, FCUnitLTF, FCDeductDonate, FCDisabledDependents, FCDeductDonateStudy As Double
        Dim FCHealthInsurFatherMotherMate, FTHealthInsurIDFather, FTHealthInsurIDMother As Double
        Dim FTHealthInsurIDFatherMate, FTHealthInsurIDMotherMate As Double
        Dim FTTotalCalContributedAmt, FTContributedAmt, FTCmpContributedAmt, FTTotalCalContributedAcc As Double
        Dim FTTotalCalWorkmen, FTWorkmenAmt, _FTMaxCalWorkmen, _FTMaxWorkmenRate, FTTotalCalWorkmenAcc As Double
        Dim _FTWorkmenAmtBefore, _FTTotalCalWorkmenBefore As Double
        Dim _ShiftAmt As Double = 0
        Dim _ShiftOTAmt As Double = 0
        Dim _ShiftValue As Double = 0
        Dim _ShiftOTValue As Double = 0
        Dim _WorkingDay As Double = 0
        Dim _THRMContributedFund As DataTable
        Dim _EmpDisTax As New HCfg.EmployeeDiscountTax
        Dim _EmpTaxYear As New HCfg.EmpTaxYear
        '   HI.HRCAL.Calculate.LoadDiscountTax()

        Dim _EmpDisTaxChildAmt As Double = 0
        Dim _FNNetpayOrg As Double = 0.0
        Dim _FNNetpay As Double = 0.0
        Dim _AmtAddCalOT, _GAmtAddCalOT As Double
        Dim CountTerm As Integer = 0
        Dim _SPDateType, _TotalInstalment, _Instalment As Integer
        Dim _ContributedFundBeginPay As Boolean = False
        Dim _DTHoliday As DataTable
        Dim _ShiftAdv As Double = 0
        Dim _AmtPlus As Double = 0
        Dim _GAmtPlus As Double = 0
        Dim FTHldType As Integer = 0
        Dim _AmtRetire As Double = 0
        Dim _WorkAge As Integer = 0 : Dim _WorkAgeDay As Integer = 0 : Dim _WorkAgeSeniority As Integer = 0 : Dim _WorkingDayN As Integer = 0 : Dim _WorkingDayN_Seniority As Integer = 0
        Dim _WorkAgeParturition As Integer = 0
        Dim _AmtReturnVacation As Double = 0
        Dim _FNIncentiveAmt As Double = 0
        Dim _FTInsurType As Integer = 0
        Dim _DayAdjAdd As Double = 0
        Dim _WageAdjAdd As Double = 0
        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        Dim _FTStatePayHoliday As String = ""
        Dim _FTEmployeeCode As String = ""
        Dim _FNAttandanceAmt As Double = 0
        Dim _FNHealtCareAmt As Double = 0
        Dim _FNTransportAmt As Double = 0
        Dim _FNChildCareAmt As Double = 0
        Dim _FNChildCareStartAge As Double = 0
        Dim _FNChildCareEndAge As Double = 0
        Dim _FNOTMealAmt As Double = 0
        Dim _FNSocialBase As Double = 0
        Dim _FNWorkAgeSalary As Double = 0
        Dim _FNOTMealAmtUS As Double = 0
        Dim _FNSickLeave As Double = 0
        Dim _LeaveSickPay As Integer = 0
        Dim _FNTotalChildCare As Integer = 0
        Dim _FNNetAttandanceAmt As Double = 0
        Dim _FNNetChildCareAmt As Double = 0
        Dim _FNNetOTMealAmt As Double = 0
        Dim _FNNetSocialBase As Double = 0
        Dim _FNNetOTMealAmtUS As Double = 0
        Dim _FNEmpWorkAge As Integer = 0
        Dim _tmpSocailRateKM As DataTable
        Dim _tmpWelfareKM As DataTable
        Dim _tmpWorkAge As DataTable
        Dim _TmpFDDateEnd As String = ""
        Dim _TmpFDDateEndP As String = ""  ' เพิ่มเงือนไข วันที่ลาออก มีผล วันที่ 2 - 16  จ่ายค่า health & transsport
        Dim _DTEmpWorkDay As New DataTable
        Dim _TmpLeavePay As Integer = 0
        Dim _EmpSex As Integer = 0
        Dim _RatePay As Double = 1
        Dim _SalaryPayOTKM As Double = 0
        Dim _SalaryPayLeave As Double = 0
        Dim _SalaryPayLeaveMin As Double = 0
        Dim _FNEmpStatus As Integer = 0
        Dim _FTStateWorkpermit As String = ""
        Dim _FTStateMedicalCertificate As String = ""
        Dim _BonusAmt As Double = 0

        Calculate.LoadInsuranceVNRate()
        Dim FNSocialEmployeeRate As Double = 0
        Dim FNSocialEmployerRate As Double = 0
        Dim FNHealthEmployeeRate As Double = 0
        Dim FNHealthEmployerRate As Double = 0
        Dim FNUnemploymentEmployeeRate As Double = 0
        Dim FNUnemploymentEmployerRate As Double = 0
        Dim FNUnionEmployeeRate As Double = 0
        Dim FNUnionEmployerRate As Double = 0
        Dim FNStateUnionMember As String = ""
        Dim FDStartDateUnion As String = ""
        Dim FDEndDateUnion As String = ""
        Dim FNUnionAmt As Double = 0
        Dim FNUnionRate As Double = 0

        Dim _FNUnion As Integer = 0


        Try
            FNSocialEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eSocialInsurance).FNEmployeeRate
            FNSocialEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eSocialInsurance).FNEmployerRate
            FNHealthEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eHealthInsurance).FNEmployeeRate
            FNHealthEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eHealthInsurance).FNEmployerRate
            FNUnemploymentEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnemploymentInsurance).FNEmployeeRate
            FNUnemploymentEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnemploymentInsurance).FNEmployerRate
            FNUnionEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnionInsurance).FNEmployeeRate
            FNUnionEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnionInsurance).FNEmployerRate
        Catch ex As Exception
            'MG.ShowMsg.mInfo("Invalid Config Value...", 1503310001, "", "")
        End Try


        Dim FNSocialInsuranceEmployee As Double = 0.0
        Dim FNSocialInsuranceEmployer As Double = 0.0
        Dim FNHealthInsuranceEmployee As Double = 0.0
        Dim FNHealthInsuranceEmployer As Double = 0.0
        Dim FNUnemploymentInsuranceEmployee As Double = 0.0
        Dim FNUnemploymentInsuranceEmployer As Double = 0.0
        Dim FNUnionInsuranceEmployee As Double = 0.0
        Dim FNUnionInsuranceEmployer As Double = 0.0

        Dim FNSocialInsuranceEmployeeOrg As Double = 0.0
        Dim FNSocialInsuranceEmployerOrg As Double = 0.0
        Dim FNHealthInsuranceEmployeeOrg As Double = 0.0
        Dim FNHealthInsuranceEmployerOrg As Double = 0.0
        Dim FNUnemploymentInsuranceEmployeeOrg As Double = 0.0
        Dim FNUnemploymentInsuranceEmployerOrg As Double = 0.0
        Dim FNUnionInsuranceEmployeeOrg As Double = 0.0
        Dim FNUnionInsuranceEmployerOrg As Double = 0.0


        _DTEmpWorkDay.Columns.Add("FNSalary", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNDay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT1", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT15", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT2", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT3", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT4", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNHoloday", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLate", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNAbsent", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLateCutAmtAbsent", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeavePay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeaveNotPay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNBusiness", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSpecial", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNParturition", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNVacation", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNShiftNo", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSlaryOTPerMin", GetType(Double))





        Dim _DTEmpPayLeaveSick As New DataTable
        _DTEmpPayLeaveSick.Columns.Add("FNSalary", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNDay", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNPayPer", GetType(Double))

        _Qry = "SELECT TOP 1 FNCalType FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType WHERE FNHSysEmpTypeId=" & Val(_EmpType) & "  "
        Dim _TmpCalType As Integer = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "0"))

        If FTStaCalPayRoll = 0 Then
            _DateStartOfMonth = _StartDate  'วันแรกของเดือน
            _DateEndOfMonth = _EndDate 'วันแของเดือน
        Else
            _DateStartOfMonth = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
            _DateEndOfMonth = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        End If
        '----------------------------------   Variable  ------------------------------------

        Dim _DateReset As String
        _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
        _Qry &= vbCrLf & "  FROM"
        _Qry &= vbCrLf & " ("
        _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
        _Qry &= vbCrLf & " FROM            THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN THRMEmployee AS M WITH(NOLOCK )"
        _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "  WHERE   M.FNHSysEmpID=" & Val(_EmpCode) & " "
        _Qry &= vbCrLf & " ) As T"

        _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")
        '------------------ รวมวันลาป่วย---------------------------------

        _Qry = "   SELECT        (SUM(FNTotalPayMinute) / 480) AS FNTotalPayMinute  "
        _Qry &= vbCrLf & "      AS TotalLeavePay"
        _Qry &= vbCrLf & "    FROM THRTTransLeave "
        _Qry &= vbCrLf & "  WHERE        (FTLeaveType = '0')"
        _Qry &= vbCrLf & "  AND (FTDateTrans >= N'" & (_DateReset) & "') "
        _Qry &= vbCrLf & "  AND (FTDateTrans < N'" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "') "
        _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ")"

        _LeaveSickPay = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

        '------------------ รวมวันลาป่วย---------------------------------

        With _EmpTaxYear
            .FTAmt = 0 'เงินได้ก่อนหักค่าใช้จ่าย
            .FTExpenses = 0 'ค่าใช้จ่ายส่วนตัว
            .FTNetAmt = 0 'เงินได้หลังหักค่าใช้จ่าย
            .FTModEmp = 0 'ลดหย่อนส่วนตัว
            .FTModMate = 0 'ลดหย่อนคู่สมรส
            .FNChildNotLern = 0 'จำนวนบุตรไม่ศึกษา
            .FNChildLern = 0 'จำนวนบุตรศึกษา
            .FTChildNotLern = 0 'ลดหย่อนบุตรไม่ศึกษา
            .FTChildLern = 0 'ลดหย่อนบุตรศึกษา
            .FTInsurance = 0 'ลดหย่อนเบี้ยประกัน
            .FTProvidentfund = 0 'กองทุนเลียงชีพส่วนที่ไม่เกิน 10000
            .FTInterest = 0 'ดอกเบี้ยเงินกู้
            .FTSocial = 0 'ประกันสังคม
            .FTDonation = 0 'เงินบริจาค
            .FTProvidentfundOver = 0 'กองทุนเลียงชีพส่วนที่เกิน 10000
            .FTGPF = 0 'เงิน กบข.
            .FTSavingsFund = 0 'เงินกองทุนสงเคราะห์
            .FTCommutation = 0 'เงินชดเชยตามกฎหมายแรงงาน
            .FTUnitRMF = 0 'ค่าซื้อหน่วยลงทุน RTF
            .FTModFather = 0 'ลดหย่อนบิดา
            .FTModMother = 0 'ลดหย่อนมารดา
            .FTModFatherMate = 0 'ลดหย่อนบิดาคู่สมรส
            .FTModMotherMate = 0 'ลดหย่อนมารดาคู่สมรส
            .FTUnitLTF = 0 'ค่าซื้อหน่วยลงทุน LTF
            .FTDonationLern = 0 'เงินบริจาคเพื่อสนับสนุนการศึกษา
            .FTParentsHealthInsurance = 0 'เบี้ยประกันสุขภาพบิดามารดา
            .FTSupportSport = 0 'เงินสนับสนุนการกีฬา
            .FTAcquisitionOfProperty = 0 'ค่าซื้ออาคาร
            .FTPension = 0 'บำนาญ
            .FTTravel = 0 'ท่องเที่ยวในประเทศ
            .FTTotalCalTax = 0 'เงินได้สุทธิ
            .FTTotalTax = 0 'ภาษีที่ต้องจ่าย
        End With
        '------------------ GetConfig WeekEnd ----------------------------------

        ' get discount tax

        With _EmpDisTax
            .Cfg_ModChildAllowanceAgeStart = HCfg._DiscountTax.Cfg_ModChildAllowanceAgeStart
            .Cfg_ModChildAllowanceAgeEnd = HCfg._DiscountTax.Cfg_ModChildAllowanceAgeEnd
            .Cfg_ModChildAllowanceRateNotStudied = HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied
            .Cfg_ModChildAllowanceRateStudy = HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy
        End With
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------
        _Qry = "SELECT FNSeqNo, FNAgeBegin, FNAgeEnd, FNEmpPay As FNEmpAmtPer,  FNCmpPay AS FNCmpAmtPer"
        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMContributions WITH(NOLOCK) "
        _Qry &= vbCrLf & "  WHERE  FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID) & " "
        _THRMContributedFund = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------

        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday
        '------------------ GetConfig Holiday ----------------------------------

        _tmpSocailRateKM = LoadSocailRateKM
        _tmpWelfareKM = LoadWelfareKM(Integer.Parse(Val(_EmpType)))
        _tmpWorkAge = GetWorkAgeRate

        For Each ZRow In _tmpWelfareKM.Rows

            _FNAttandanceAmt = Val(ZRow!FNAttandanceAmt.ToString)
            _FNHealtCareAmt = Val(ZRow!FNHealtCareAmt.ToString)
            _FNTransportAmt = Val(ZRow!FNTransportAmt.ToString)
            _FNChildCareAmt = Val(ZRow!FNChildCareAmt.ToString)
            _FNChildCareStartAge = Val(ZRow!FNChildCareStartAge.ToString)
            _FNChildCareEndAge = Val(ZRow!FNChildCareEndAge.ToString)
            _FNOTMealAmt = Val(ZRow!FNOTMealAmt.ToString)

            Exit For
        Next

        'FNAttandanceAmt, FNHealtCareAmt, FNTransportAmt, FNChildCareAmt, FNChildCareStartAge, FNChildCareEndAge, FNOTMealAmt
        FNVacationRetMin = 0 : FNVacationRetAmt = 0
        _FTSatrtCalculateDate = _StartDate
        _FTEndCalculateDate = _EndDate
        _FTSatrtCalculateDateIns = _StartDate
        _FTEndCalculateDateIns = _EndDate
        _FNEmpDiligent = 0 : _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
        _FTStateInDustin = "" : _FNSlaryPerMonth = 0
        _FNSlaryPerDay = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0
        _FTEmpState = "" : _FNEmpBaht = 0 : _nBahtOt1 = 0
        _nBahtOt15 = 0 : _nBahtOt2 = 0 : _nBahtOt3 = 0
        _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
        _FCPayVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0
        _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0
        _SocialMinIncome = 0 : _SocialMaxIncome = 0
        _Complete = 0 : _Err = 0 : _FCSalary = -99
        CountTerm = 0
        _TotalInstalment = 0 : _Instalment = 0

        FNPayLeaveBusinessBahtMin = 0 : FNPayLeaveSickBahtMin = 0 : FNPayLeaveSpecialBahtMin = 0 : FNParturitionLeaveMin = 0
        GFNPayLeaveBusinessBahtMin = 0 : GFNPayLeaveSickBahtMin = 0 : GFNPayLeaveSpecialBahtMin = 0 : GFNParturitionLeaveMin = 0
        FNPayLeaveBusinessBaht = 0 : FNPayLeaveSickBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode,M.FTEmpCode AS FTEmployeeCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, Isnull( M.FNEmpStatus,0) AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"
        _Qry &= vbCrLf & " ,M.FNHSysDeptId AS FTDeptCode , M.FNEmpSex "
        _Qry &= vbCrLf & "  ,M.FNHSysDivisonId AS FTDivCode, M.FNHSysSectId AS FTSectCode,  M.FNHSysUnitSectId AS FTUnitSecCode"
        _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
        _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
        _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
        _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
        _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
        _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
        _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
        _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
        _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
        _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide , isnull( M.FTStateWorkpermit ,'0') as FTStateWorkpermit"
        _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge(M.FdDateStart,'" & _EndDate & "') AS FNEmpWorkAgeNew"
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_MonthSeniority(M.FdDateStart,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeMonthSalary  "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_Salary_CD_NEW(M.FdDateStart,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeNewCD "
        _Qry &= vbCrLf & " ,  dbo.[FN_Get_Emp_WorkAge_Day](M.FDDateStart,M.FDDateEnd) as FNEmpWorkAgeNewDay"
        _Qry &= vbCrLf & " ,  dbo.[FN_Get_Emp_WorkAge_Day_CD](M.FDDateStart,M.FDDateEnd,M.FNHSysEmpID,'" & _EndDate & "') as FNEmpWorkAgeNewDay_CD "
        _Qry &= vbCrLf & " , isnull(M.FTStateUnionMember,'') as FTStateUnionMember  , isnull(M.FDStartDateUnion,'') as FDStartDateUnion , isnull(M.FDEndDateUnion,'') as FDEndDateUnion"
        _Qry &= vbCrLf & " , isnull(M.FNUnion,0) as FNUnion  "

        _Qry &= vbCrLf & "  "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_MonthSeniority(M.FDDateProbation,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeMonthSeniority     "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_After_Probation(M.FDDateProbation,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeNewCDSeniority "
        _Qry &= vbCrLf & "  "

        _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_EmpCode) & " ) "

        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each R As DataRow In _Dtemp.Rows

            _DtFin.Rows.Clear()

            _FNUnion = Integer.Parse("0" & R!FNUnion.ToString)

            _FNEmpStatus = Integer.Parse("0" & R!FTStatus.ToString)
            _AmtAddCalOT = 0
            _EmpSex = Val("0" & R!FNEmpSex.ToString)
            _FTStateWorkpermit = R!FTStateWorkpermit.ToString

            FNStateUnionMember = R!FTStateUnionMember.ToString : FDStartDateUnion = R!FDStartDateUnion.ToString : FDEndDateUnion = R!FDEndDateUnion.ToString

            _SalaryDevide = Val(R!FNSalaryDivide.ToString)
            _FTStatePayHoliday = R!FTStatePayHoliday.ToString
            _FNEmpWorkAge = Integer.Parse(Val(R!FNEmpWorkAge.ToString))
            _FTInsurType = Val(R!FTInsurType.ToString)

            If _SalaryDevide <= 0 Then
                _SalaryDevide = 1
            End If

            _FTSlary = R!FTSalary.ToString : _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString
            _FTPaymentCode = R!FTPayCode.ToString : _FTBankCode = R!FTBnkCode.ToString
            _FTCalSocialSta = R!FTCalSocialSta.ToString : _FTCalTaxSta = R!FTCalTaxSta.ToString

            _FTDeptCode = R!FTDeptCode.ToString : _FTDivCode = R!FTDivCode.ToString
            _FTSectCode = R!FTSectCode.ToString
            _FTUnitCode = R!FTUnitSecCode.ToString : _FTPos = R!FTPositCode.ToString

            _FTEmpState = R!FTCalType.ToString

            _FTEmpIdNo = R!FTTaxNo.ToString 'R!FTEmpIdNo.ToString
            _FTEmpIdNo1 = R!FTEmpIdNo.ToString
            _FTSocialNo = R!FTSocialNo.ToString



            _FTBranchCode = R!FTBnkBchCode.ToString
            _FTAccNo = R!FTAccNo.ToString
            '---------------------------------------- ลดหย่อน------------------------------------
            _FNChildNotLearn = 0 : _FCReduceDonate = 0 : _FCLifeInsurance = 0 : _FCLoanHouse = 0 : _FCReduceEducationSupport = 0
            _FCShare = 0 : _FCReduceFather = 0 : _FCReduceMother = 0 : _FCReSpouseFather = 0 : _FCReSpouseMother = 0 : _FTMarryIncome = 0
            _FCLifeFeeMoney = 0

            FCModFather = 0 : FCModMother = 0 : FCModMateFather = 0 : FCModMateMother = 0
            FCPremium = 0 : FCInterest = 0 : FCUnitRMF = 0 : FCUnitLTF = 0 : FCDeductDonate = 0 : FCDisabledDependents = 0 : FCDeductDonateStudy = 0
            FCHealthInsurFatherMotherMate = 0 : FTHealthInsurIDFather = 0 : FTHealthInsurIDMother = 0
            FTHealthInsurIDFatherMate = 0 : FTHealthInsurIDMotherMate = 0

            FTTotalCalContributedAmt = 0 : FTContributedAmt = 0 : FTCmpContributedAmt = 0
            FTTotalCalWorkmen = 0 : FTWorkmenAmt = 0 : _FTMaxCalWorkmen = 0 : _FTMaxWorkmenRate = 0 : FTTotalCalWorkmenAcc = 0
            _FNIncentiveAmt = 0

            _TmpFDDateEnd = _FDDateEnd
            _TmpFDDateEndP = _FDDateEnd

            If _TmpFDDateEnd <> "" Then

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,-1,Convert(Datetime,'" & _TmpFDDateEnd & "')),111)"
                _TmpFDDateEnd = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,Convert(Datetime,'" & _EndDate & "')),111)"
                _TmpFDDateEndP = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

            End If

            '--------- อายุงาน  เดือน
            _WorkAge = Val(R!FNEmpWorkAgeNewCD.ToString)

            '---------อายุงาน วัน
            _WorkAgeDay = Val(R!FNEmpWorkAgeNewDay.ToString)

            '---------อายุงาน เดือน ไม่ปัดขึ้น เพื่อคิด ค่ารางวัลอายุงาน 
            _WorkAgeSeniority = Val(R!FNEmpWorkAgeMonthSeniority.ToString)
            _WorkingDayN_Seniority = Val(R!FNEmpWorkAgeNewCDSeniority.ToString)



            '---------วันทำงาน 
            _WorkingDayN = Val("0" & R!FNEmpWorkAgeNewDay_CD.ToString)
            _FNWorkAgeSalary = 0
            Dim _FNWorkAgeSalary_Month As Integer
            '----------- Calculate Seniority Bonus For KKN---------------
            _FNWorkAgeSalary_Month = Val(R!FNEmpWorkAgeMonthSalary.ToString)
            'If _FTEmpState <> "2" And _FTEmpState <> "3" Then
            If Val(_PayTerm) Mod 2 <> 0 Then
                If (_EndDate >= Left(_StartDate, 8) & "07" And _EndDate <= Left(_StartDate, 8) & "24") Then
                    For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & _FNWorkAgeSalary_Month & " AND  FNWorkAgeEnd>=" & _FNWorkAgeSalary_Month & " ")
                        _FNWorkAgeSalary = Val(ZRow!FNWorkAgeAmt.ToString)
                        Exit For
                    Next
                End If

                'If (_StartDate <= Left(_StartDate, 8) & "24" And _EndDate >= Left(_StartDate, 8) & "24") Then
                '    For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & _WorkAge & " AND  FNWorkAgeEnd>=" & _WorkAge & " ")
                '        _FNWorkAgeSalary = Val(ZRow!FNWorkAgeAmt.ToString)
                '        Exit For
                '    Next
                'End If
            End If

            'End If

            '----------- Calculate Seniority Bonus For KKN---------------

            If _FTEmpState = "2" Then
                _TotalInstalment = 12
            Else
                _TotalInstalment = 24
            End If

            _ContributedFundBeginPay = False
            If R!FDFundBegin.ToString <> "" Then
                If R!FDFundBegin.ToString < _FTEndCalculateDate Then

                    If R!FDFundEnd.ToString <> "" Then
                        If R!FDFundEnd.ToString > _FTEndCalculateDate Then
                            _ContributedFundBeginPay = True
                        End If
                    Else
                        _ContributedFundBeginPay = True
                    End If

                End If
            End If

            _Instalment = Val(_PayTerm)
            _FNIncentiveAmt = 0

            '-------------คำนวณ Incentive-------------------------------------------
            Select Case _FTInsurType
                Case 1

                    '---------ประกันเป็นวัน
                    _Qry = "SELECT SUM ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END  ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                    '_Qry = "SELECT SUM (  ISNULL(FNNetAmt,0)   ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                    _Qry = "SELECT sum(Isnull(FNAmt,0)) as FNAmt  "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    _FNIncentiveAmt = _FNIncentiveAmt + CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case 2
                    '---------ประกันเป็นเป็นงวด-------------------------------------------

                    _Qry = "SELECT  ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END  ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM ( SELECT SUM(ISNULL(FNNetAmt,0) ) AS FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) AS FNNetProAmt"
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _Qry &= vbCrLf & " ) AS M"

                    '_Qry = "SELECT   SUM (  ISNULL(FNNetAmt,0)   ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM ( Select SUM(ISNULL(FNNetAmt,0) ) As FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) As FNNetProAmt"
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily With(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	And FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    '_Qry &= vbCrLf & " ) AS M"
                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))
                    _Qry = "SELECT sum(Isnull(FNAmt,0)) as FNAmt  "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                    _FNIncentiveAmt = _FNIncentiveAmt + CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case Else
            End Select
            '-------------------------------------

            '---------------------------------------- ลดหย่อน------------------------------------
            _Qry = " SELECT      FNHSysEmpID, FTChildSex, FTStudySta  ,isnull( FTStateNotDisTax ,'0') AS FTStateNotDisTax "
            '_Qry &= vbCrLf & ", dbo.FN_Get_ChildEmp_Age(FDChildBirthDate,'') AS FNChildAge"
            _Qry &= vbCrLf & ",dbo.FN_Get_Emp_WorkAge(FDChildBirthDate,'" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "') AS FNChildAge"
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeChild WITH(NOLOCK) "
            _Qry &= vbCrLf & " WHERE   (FNHSysEmpID = " & Val(_EmpCode) & ")"
            _dttemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)



            Dim _ChildNotStudy As Integer = 0
            Dim _ChildStudy As Integer = 0
            _FNTotalChildCare = 0
            _EmpDisTaxChildAmt = 0

            If (_EmpSex = 1) Then 'Employee Male Not Cal ChildCare

                For Each _Drow As DataRow In _dttemp.Rows

                    '--------  Add Child Care For KKN--------------
                    If Val(_Drow!FNChildAge.ToString) >= _FNChildCareStartAge And Val(_Drow!FNChildAge.ToString) < _FNChildCareEndAge Then
                        _FNTotalChildCare = _FNTotalChildCare + 1
                    End If

                Next


                For Each _Drow As DataRow In _dttemp.Select("FTStateNotDisTax = '0'")

                    ''--------  Add Child Care For KKN--------------
                    'If Val(_Drow!FNChildAge.ToString) >= _FNChildCareStartAge And Val(_Drow!FNChildAge.ToString) < _FNChildCareEndAge Then
                    '    _FNTotalChildCare = _FNTotalChildCare + 1
                    'End If
                    '--------  Add Child Care For KKN--------------

                    If _Drow!FTStudySta.ToString = "1" Then
                        _ChildStudy = _ChildStudy + 1
                    Else
                        _ChildNotStudy = _ChildNotStudy + 1
                    End If


                    '--------  Add Amt Child Distax For KKN--------------
                    If _Drow!FTStudySta.ToString = "0" Then
                        If _Drow!FTStudySta.ToString = "1" Then
                            If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                                _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateStudy
                            End If
                        Else

                            If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                                _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateNotStudied
                            End If
                        End If

                    End If

                    ' อายุมากกว่า แต่ศึกษาอยู่ ลดหย่อนได้

                    '--------  Add Amt Child Distax For KKN--------------



                Next

                _FNNetChildCareAmt = Format(_FNTotalChildCare * _FNChildCareAmt, "0.00")

            Else
                For Each _Drow As DataRow In _dttemp.Select("FTStateNotDisTax = '0'")
                    If _Drow!FTStudySta.ToString = "1" Then
                        If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                            _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateStudy
                        End If
                    Else

                        If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                            _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateNotStudied
                        End If
                    End If

                    If _Drow!FTStudySta.ToString = "1" Then
                        _ChildStudy = _ChildStudy + 1
                    Else
                        _ChildNotStudy = _ChildNotStudy + 1
                    End If

                Next
            End If



            _FCAccumulateIncome = 0 : _FCAccumulateSocial = 0 : _FCAccumulateTax = 0
            FTTotalCalContributedAcc = 0 : FTTotalCalWorkmenAcc = 0

            '----------- Get Summary ------------------
            LoadIncomeTax(_FTEmpIdNo, _PayYear, _PayTerm, _FCAccumulateIncome, _FCAccumulateTax, _FCAccumulateSocial, CountTerm, FTTotalCalContributedAcc, FTTotalCalWorkmenAcc, Integer.Parse(Val(_EmpCode)))
            '----------- Get Summary ------------------

            With _EmpDisTax

                .BaseSlary = 0
                .OtherSlary = 0
                .BeforeIncom = 0 ' _FCAccumulateIncome
                .BeforeTax = _FCAccumulateTax
                .FTMateIncome = (R!FTMateIncome.ToString = "0")
                ' ----------------------------------------- Clear Discount Tax Value -------------------------
                .Cfg_ModChildAllowanceRateNotStudied = _ChildNotStudy 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
                .Cfg_ModChildAllowanceRateStudy = _ChildStudy 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
                '-------------ลดหย่อนบุตร-----------------

                '--- หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
                .Cfg_ContributedDeducToTheFund = FTTotalCalContributedAcc 'ลูกจ้าง
                '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ

                .Cfg_ModDeductibleDonations = CDbl(Val(R!FCDeductDonate.ToString)) ' ' % ลดหย่อนเงินบริจาค
                .Cfg_ModDeductDonateStudy = CDbl(Val(R!FCDeductDonateStudy.ToString))
                .Cfg_ModFatherReduction = CDbl(Val(R!FCModFather.ToString)) '  'ลดหย่อนบิดา
                .Cfg_ModInsurancePremiums = CDbl(Val(R!FCPremium.ToString)) '  'ค่าเบี้ยประกันชีวิตส่วนบุคคล
                .Cfg_ModLendingforHousing = CDbl(Val(R!FCInterest.ToString)) ' 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย

                .Cfg_ModLTFChk = CDbl(Val(R!FCUnitLTF.ToString)) 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
                .Cfg_ModMateFatherReduction = CDbl(Val(R!FCModMateFather.ToString)) ' 'ลดหย่อนบิดา คู่สมรส
                .Cfg_ModMateMotherReduction = CDbl(Val(R!FCModMateMother.ToString)) '  'ลดหย่อนมารดา คู่สมรส
                .Cfg_ModMotherReduction = CDbl(Val(R!FCModMother.ToString)) ' 'ลดหย่อนมารดา

                .Cfg_ModPersonalExpenChk = 0 ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน

                .Cfg_ModRateReductionsByMarital = (IIf(R!FTMaritalCode.ToString = "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
                .Cfg_ModRateReductionsBySingle = (IIf(R!FTMaritalCode.ToString <> "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ โสด 

                .Cfg_ModRMFChk = CDbl(Val(R!FCUnitRMF.ToString)) '  ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 
                .FCDisabledDependents = CDbl(Val(R!FCDisabledDependents.ToString)) '  'ค่าอุปการะเลี้ยงดูคนพิการหรือทุพพลภาพ
                .FCHealthInsurFatherMotherMate = CDbl(Val(R!FCHealthInsurFatherMotherMate.ToString)) '   'เบี้ยประกันสุขภาพบิดามารดาของผู้มีเงินได้และคู่สมสร

                .FCExceptAgeOver = CDbl(Val(R!FCExceptAgeOver.ToString)) ' ' 'รายการเงินได้ที่ได้รับยกเว้น ของผู้มีเงินได้ตั้งแต่ 65 ปีขึ้นไป 
                .FCExceptAgeOverMate = CDbl(Val(R!FCExceptAgeOverMate.ToString)) ' 'รายการเงินได้ที่ได้รับยกเว้น ของคู่สมรสอายุตั้งแต่ 65 ปีขึ้นไป
                '----------------------------------------------------
            End With
            '---------------------------------------- ลดหย่อน------------------------------------

            _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = "0" : _FTOtherAddCalculateTax = "0" : _FCOtherAddOt = 0
            _FTOtherAddOtCalculateSocial = "0" : _FTOtherAddOtCalculateTax = "0" : _FCBFShiftMoney = 0 : _FTShiftMoneyCalculateSocial = "0"
            _FTShiftMoneyCalculateTax = "0" : _FCDiligent = 0 : _FTDiligentCalculateSocial = "0" : _FTDiligentCalculateTax = "0"
            _FCBonusEndYear = 0 : _FTBonusEndCalculateSocial = "0" : _FTBonusEndCalculateTax = "0" : _FCShelter = 0
            _FTShelterCalculateSocial = "0" : _FTShelterCalculateTax = "0" : _FCShareFactory = 0 : _FTShareFactoryCalculateSocial = "0"
            _FNNetpayOrg = 0.0
            _FNNetpay = 0.0
            _FCSalary = -99
            _FTSlary = (_FTSlary)

            If IsNumeric(_FTSlary) Then
                _MSlary = _FTSlary
                _FCSalary = CDbl(_FTSlary)


                '------------------ คำนวณคืนพักร้อน ----------------------------

                If (_ReturnVacation > 0) Or (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                    Dim _Month As Integer = 0
                    Dim _Leave As Double = 0
                    Dim _SumLeaveVacation As Double = 0
                    Dim _ResetDate As String = ""

                    Dim _DateReset2 As String



                    _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
                    _Qry &= vbCrLf & "  FROM"
                    _Qry &= vbCrLf & " ("
                    '_Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),convert(date, '" & (_EndDate) & "'),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK )"
                    _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
                    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                    _Qry &= vbCrLf & " ) As T"

                    _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                        ''  MsgBox("a")

                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & ("") & "','" & (_EndDate) & "') AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                    ElseIf _PayTerm = "01" Then
                        ''  MsgBox("b")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'2022/01/01','2022/12/31') AS FNEmpVacation"
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                    Else
                        ''  MsgBox("c")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & (_DateReset) & "','" & (_EndDate) & "') AS FNEmpVacation"
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                    End If


                    _Leave = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                    '' MsgBox(_Leave)
                    If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                        ''    MsgBox("d")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'2022/01/01','" & (_EndDate) & "') AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "


                        _Leave = _Leave + (HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        ''     MsgBox(_Leave)

                    End If

                    If _Leave > 0 And _DateReset <> "" Then

                        _Qry = ""
                        If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98' OR ISNULL(FTStateDeductVacation,'') ='1' )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"

                            ''      MsgBox("e")
                            'Else
                            '    _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            '    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            '    _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            '    _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '    '_Qry &= vbCrLf & " 	AND  FTDateTrans < '" & (_DateReset) & "'"
                            '    _Qry &= vbCrLf & " 	AND  FTDateTrans < Convert(varchar(10),DateAdd(year,1,Convert(Datetime,'" & (_DateReset) & "')),111)"
                            '    '_Qry &= vbCrLf & " 	AND  FTDateTrans >=Convert(varchar(10),DateAdd(year,-1,Convert(Datetime,'" & (_DateReset) & "')),111)"
                            '    _Qry &= vbCrLf & " 	AND  FTDateTrans >='" & (_DateReset) & "'"
                        End If

                        _SumLeaveVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        ''    MsgBox(_SumLeaveVacation)
                        If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            ''       MsgBox("f")
                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '' _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & ("2023/01/01") & "'"

                            _SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                            ''         MsgBox(_SumLeaveVacation)
                        Else
                            ''        MsgBox("g")
                            '_Qry = " "
                            '_Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            '_Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            '_Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '_Qry &= vbCrLf & " 	AND  FTDateTrans >= '2022/01/01'"
                            '_Qry &= vbCrLf & " 	AND  FTDateTrans <= '2022/12/31'"
                            '_SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                            '''      MsgBox(_SumLeaveVacation)
                        End If



                        If _ReturnVacation <= 0 Then
                            _Qry = " SELECT   TOP 1 FCCfgRetValue"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigReturnVacationSet WITH(NOLOCK) "
                            _Qry &= vbCrLf & "  WHERE      (FNCalType =" & Val(_EmpType) & ")"

                            _ReturnVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        End If

                        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                        Select Case FNStateSalaryType
                            Case 0 'ต่อเดือน

                                _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.0000000"))
                            Case 1 'ต่อวัน

                                _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                        End Select
                        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                        Dim _FNSlaryPerDayRetVa As Double = 0
                        _FNSlaryPerDayRetVa = HI.Conn.SQLConn.GetField("Select Top 1 FNSalary From THRTPayRoll WITH(NOLOCK) where  FNHSysEmpID = " & Val(_EmpCode) & " and  FTPayYear +'/'+FTPayTerm  <'" & _PayYear & "/" & _PayTerm & "'  Order by FTPayYear +'/'+FTPayTerm DESC ", Conn.DB.DataBaseName.DB_HR, "0")


                        If (_Leave * 480) > _SumLeaveVacation Then

                            Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), _Leave, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                            Dim _ReteReturnVacPerDay As Double = 0
                            If _FNEmpStatus = "2" Or _FDDateEnd <= _EndDate Then
                                If _WorkAge <= 0 Then
                                    Dim _ReVacationDay As Double = 0
                                    Dim _ReVacationPiad As Double = 0

                                    '  _ReVacationDay = Double.Parse(Format(((_Leave / 26) * _WorkAgeDay), "0.000"))
                                    '  _ReVacationDay = Double.Parse((_Leave / 26) * _WorkAgeDay)
                                    '   _Leave = _ReVacationDay
                                    _ReVacationDay = _Leave
                                End If
                                _ReteReturnVacPerDay = _MoneyRetVacationPerDay
                            Else
                                _ReteReturnVacPerDay = _MoneyRetVacationPerDay  ' CDbl(Format((_FNSlaryPerDayRetVa) / CountDayPerMonth, "0.0000000"))
                                FNVacationPerDayLapaid = _MoneyRetVacationPerDay
                            End If
                            FNVacationRetMin = (_Leave * 480) - _SumLeaveVacation
                            If FNVacationRetMin <= 0 Then
                                FNVacationRetMin = 0
                            End If

                            FNVacationRetAmt = 0
                            'Dim _RetVaclationBal As Double = CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000"))

                            _AmtReturnVacation = CDbl(Format((CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000")) * (_ReturnVacation * (_ReteReturnVacPerDay / 480))), "0.000"))
                            FNVacationRetMin = CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000"))
                            FNVacationRetAmt = _AmtReturnVacation

                        End If

                    End If
                End If
                '------------------ คำนวณคืนพักร้อน ----------------------------

                ''------------------ คำนวณคืนพักร้อน ----------------------------
                'If _ReturnVacation > 0 Then
                '    Dim _Month As Integer = 0
                '    Dim _Leave As Double = 0
                '    Dim _SumLeaveVacation As Double = 0
                '    Dim _ResetDate As String = ""
                '    Dim _dttempdata3 As DataTable

                '    _Qry = "    SELECT TOP 1  VC.FNLeaveRight, VC.FNAgeBegin, VC.FNAgeEnd, VC.FTCmpCode, VC.FTTypeEmp"
                '    _Qry &= vbCrLf & ",ISNULL((SELECT TOP 1 FTLeaveReset FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave WITH(NOLOCK) WHERE FNHSysEmpTypeId =" & Val(_EmpType) & "  AND FTLeaveCode='98'  ),'') AS FTReset"
                '    _Qry &= vbCrLf & " FROM      [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeaveVacation AS VC WITH(NOLOCK) "
                '    _Qry &= vbCrLf & "  WHERE   VC.FNHSysEmpTypeId='" & Val(_EmpType) & "' "
                '    _Qry &= vbCrLf & "  AND   VC.FNAgeBegin<=" & _Month & " "
                '    _Qry &= vbCrLf & "  AND   VC.FNAgeEnd>=" & _Month & " "

                '    _dttempdata3 = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '    For Each R3 As DataRow In _dttempdata3.Rows
                '        _Leave = Val(R3!FNLeaveRight.ToString)
                '        _ResetDate = R3!FTReset.ToString
                '        Exit For
                '    Next
                '    _dttempdata3.Dispose()

                '    Dim _DateReset2 As String

                '    _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
                '    _Qry &= vbCrLf & "  FROM"
                '    _Qry &= vbCrLf & " ("
                '    _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                '    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK )"
                '    _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
                '    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                '    _Qry &= vbCrLf & " ) As T"

                '    _DateReset2 = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                '    _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,1,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                '    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                '    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Leave = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                '    If _Leave > 0 And _ResetDate <> "" Then

                '        _Qry = "     SELECT       (SUM(FNTotalMinute)/480.00) AS FNTotalMinute"
                '        _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                '        _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98')"
                '        _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                '        _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset2) & "'"
                '        _Qry &= vbCrLf & " 	AND  FTDateTrans <=Convert(varchar(10),DateAdd(year,1,Convert(Datetime,'" & (_DateReset2) & "')),111)"

                '        _SumLeaveVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                '        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                '        Select Case FNStateSalaryType
                '            Case 0 'ต่อเดือน

                '                _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.0000000"))
                '            Case 1 'ต่อวัน

                '                _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                '        End Select
                '        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ


                '        If _Leave > _SumLeaveVacation Then
                '            _AmtReturnVacation = CDbl(Format(((_Leave - _SumLeaveVacation) * (_ReturnVacation * _FNSlaryPerDay)), "0.00"))
                '        End If

                '    End If
                'End If
                ''------------------ คำนวณคืนพักร้อน ----------------------------

                _SocialMinIncome = HCfg.HSocialRate.SocialIncomeMin
                _SocialMaxIncome = HCfg.HSocialRate.SocialIncomeMax
                _SocialRate = HCfg.HSocialRate.CalSocialRate
                _StateSocialOnlyCmppay = HCfg.HSocialRate.StateSocialOnlyCmppay

                _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
                _AmtPlus = 0

                _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                For Each R3 As DataRow In _dtot.Rows
                    Select Case R3!FTCfgOTCode.ToString.ToUpper
                        Case "01"
                            _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                        Case "02"
                            _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                        Case "03"
                            _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                        Case "04"
                            _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "05"
                            _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                    End Select

                Next

                '---------รายได้รายหัก อื่นๆ-------------------------
                _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"

                _Qry &= vbCrLf & "   , ISNULL(FN.FTStaLateM,0) FTStaLateM ,  ISNULL(FN.FTStaLateA,0) FTStaLateA "

                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"




                If _EmpCalType = "0" Then
                    If Val(_PayTerm) Mod 2 = 0 Then
                        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                    Else
                        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                    End If
                End If
                ' _Qry &= vbCrLf & "  AND FTPayType <> '" & IIf(_EmpCalType = "0" Or (Val(_PayTerm) Mod 2 = 0), "", "1") & "' "




                _dtAddOtherAmt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                'If _dtAddOtherAmt.Select("FTFinCode ='044'").Length <= 0 Then
                '    _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  7.5 As FCFinAmt   , FM.FTFinType"
                '    _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                '    _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                '    _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                '    _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                '    _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"
                '    _Qry &= vbCrLf & " FROM         [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)    INNER JOIN"
                '    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                '    _Qry &= vbCrLf & " WHERE    FN.FTFinCode = '044'"
                '    _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"
                '    If _EmpCalType = "0" Then
                '        If Val(_PayTerm) Mod 2 = 0 Then
                '            _Qry &= vbCrLf & "  AND FTPayType <> '' "
                '        Else
                '            _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                '        End If
                '    End If

                '    _dtAddOtherAmt.BeginInit()
                '    _dtAddOtherAmt.Rows.Add(HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR).Rows)

                '    _dtAddOtherAmt.EndInit()

                'End If


                _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
                _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
                _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
                _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet"
                _Qry &= vbCrLf & "  WHERE        (FTFinCode = N'001') OR  (FTFinCode = N'007') "
                _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _GAmtAddCalOT = 0
                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTStaCalOT='1' AND FTPayType='0' ")
                    _GAmtAddCalOT = _GAmtAddCalOT + Val(R2!FCFinAmt.ToString)
                Next

                _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = 0 : _FTOtherAddCalculateTax = 0 : _FCOtherDeduct = 0

                '---------------- Adjust Before Calculate------------------------------------
                _Qry = " SELECT        FN.FTStaTax, FN.FTStaSocial, (ISNULL(BF.FCFinAmt,0))  AS FCFinAmt, FM.FTFinType,ISNULL(BF.FNDay,-1) As FNDay,BF.FTFinCode "
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE        (BF.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "')"
                _Qry &= vbCrLf & "  AND (BF.FTPayTerm = '" & HI.UL.ULF.rpQuoted(_PayTerm) & "') "
                _Qry &= vbCrLf & " AND (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"

                If _AmtReturnVacation > 0 Then
                    _Qry &= vbCrLf & " UNION ALL "
                    _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial, " & _AmtReturnVacation & "  AS FCFinAmt, FM.FTFinType,-1 As FNDay,FM.FTFinCode "
                    _Qry &= vbCrLf & " FROM     [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)  INNER JOIN"
                    _Qry &= vbCrLf & "          [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE (FM.FTFinCode='019')"
                End If

                _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                For Each R2 As DataRow In _dt.Select("FNDay<=0")
                    Select Case R2!FTFinType.ToString
                        Case "1"
                            _FCOtherAdd = _FCOtherAdd + Val((R2!FCFinAmt.ToString))

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax + Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial + Val((R2!FCFinAmt.ToString))

                        Case "2"

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax - Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial - Val((R2!FCFinAmt.ToString))


                            _FCOtherDeduct = _FCOtherDeduct + Val((R2!FCFinAmt.ToString))
                    End Select
                Next

                _DayAdjAdd = 0
                _WageAdjAdd = 0

                For Each R2 As DataRow In _dt.Select("FNDay> 0")

                    _DayAdjAdd = _DayAdjAdd + Val((R2!FNDay.ToString))
                    _WageAdjAdd = _WageAdjAdd + Val((R2!FCFinAmt.ToString))

                Next

                _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
                _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= 480 THEN 480   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= 480 THEN 480   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= 480 THEN 480 ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
                _Qry &= vbCrLf & " , FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO,Max(ISNULL(FTStateMedicalCertificate,'')) AS FTStateMedicalCertificate "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_EmpCode) & " )"

                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_DateStartOfMonth) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_DateEndOfMonth) & "' "
                Else
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                End If

                _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

                _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	,Isnull(SH.FNRatePaid,1) AS FNRatePaid , Isnull(SH.FNStateShift,0) AS FNStateShift  "
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) )     AS FNTime"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT1_5,0) AS FNOT1_5"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT2,0 ) AS FNOT2  , ISNULL(T.FNOT3,0) AS FNOT3, ISNULL(T.FNOT4,0) AS FNOT4"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(T.FNLateNormalCut,0 )   AS FNLateNormalCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateOtMin,0) As FNLateOtMin,ISNULL(T.FNLateOtCut,0) As FNLateOtCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateMMin,0) As FNLateMorning"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateAfMin,0) AS FNLateAfternoon,Isnull(T.FNAbsentCut,0) AS FNAbsentCut "
                _Qry &= vbCrLf & " 	, (CASE WHEN ISNULL(T.FNAbsentSP,0) = ISNULL(T.FNAbsent,0) THEN 0 ELSE  ISNULL(T.FNAbsent,0)  END ) AS FNAbsent_Cut "
                _Qry &= vbCrLf & " 	, ISNULL(T.FNCutAbsent,0) AS FNAbsent "
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) )   AS FNTimeMin"
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0)) As FNTimeMinOrg"
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1Min,0) As FNOT1Min  "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1_5Min,0) As FNOT1_5Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNOT2Min,0) As FNOT2Min "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNLateMMin,0) AS FNLateMMin "
                _Qry &= vbCrLf & " , ISNULL(T.FNLateAfMin,0) AS FNLateAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireMMin,0) AS FNRetireMMin "
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireAfMin,0 )  as FNRetireAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireNormalCut,0) As FNRetireNormalCut "
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireOtMin,0) AS FNRetireOtMin"
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"
                _Qry &= vbCrLf & " ,CASE WHEN T.FTWeekDay=1 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSunday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSunday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=2 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTMonday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTMonday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=3 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTTuesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTTuesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=4 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTWednesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTWednesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=5 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTThursday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTThursday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=6 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTFriday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTFriday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=7 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSaturday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSaturday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  ELSE '0' END AS FTWeekly,ISNULL(FTStateAccept,'') AS FTStateAccept "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
                _Qry &= vbCrLf & "   INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK)  ON  T.FNHSysEmpID =  M.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeWeekly AS EHL WITH (NOLOCK) ON T.FNHSysEmpID=EHL.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmpTypeWeeklySpecial AS ETHL WITH (NOLOCK) ON T.FTDateTrans = ETHL.FDHolidayDate AND M.FNHSysEmpTypeId=ETHL.FNHSysEmpTypeId"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS SH WITH (NOLOCK) ON T.FNHSysShiftID = SH.FNHSysShiftID"

                _Qry &= vbCrLf & "  WHERE (T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "'  "

                If _FDDateEnd <> "" Then
                    _Qry &= vbCrLf & " 	AND T.FTDateTrans < '" & HI.UL.ULDate.ConvertEnDB(_FDDateEnd) & "'  "
                End If
                If _FTEmpState <> "2" And _FTEmpState <> "3" Then ' คำนวณค่าแรงพนักงานรายเดือน
                    _Qry &= vbCrLf & " 	AND T.FTStateAccept = '1'  "
                End If

                _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '---------------Get Trans Daily--------------------------------------
                _GFNTime = 0 : _GFNNotRegis = 0 : _GFNOT1 = 0 : _GFNOT1_5 = 0
                _GFNOT2 = 0 : _GFNOT3 = 0 : _GFNOT4 = 0 : _GFNLeaveSick = 0 : _GFNLeaveBusiness = 0
                _GFNLeaveVacation = 0 : _GFNLeavePregnant = 0 : _GFNLeaveOrdain = 0 : _GFNLeaveMarry = 0 : _GFNLeaveSpecial = 0
                _GFNLeaveOther = 0 : _GFNLateNormalMin = 0 : _GFNLateNormalCut = 0 : _GFNLateOtMin = 0
                _GFNLateOtCut = 0 : _GFNLateMorning = 0 : _GFNLateAfternoon = 0
                _GFNAbsent = 0 : _GFNCutAbsent = 0 : _GFNLeavePay = 0 : _GFNTimeMin = 0 : _GFNOT1Min = 0 : _GFNOT1_5Min = 0
                _GFNOT2Min = 0 : _GFNOT3Min = 0 : _GFNLateMMin = 0 : _GFNLateAfMin = 0 : _GFNRetireMMin = 0
                _GFNRetireAfMin = 0 : _GFNRetireNormalCut = 0 : _GFNRetireOtMin = 0 : _GFNRetireOtCut = 0
                _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
                _Gtotalleave = 0 : _GtotalleavePay = 0 : _GtotalleaveNotPay = 0 : _GtotalleavePayCalSso = 0 : _GtotalleavePayCalSsoAmt = 0
                _TotalHoliDay = 0
                _GFNLateNormalMinNotHoliday = 0

                '------------------- เริ่มการคำนวณรายวัน
                Dim _oHoliday As Integer = 0

                _TotalWorkDay = 0
                _ShiftAmt = 0
                _ShiftValue = 0
                _ShiftOTValue = 0
                _ShiftOTAmt = 0
                _FCAdd = 0 : _FTAddCalculateSocial = 0 : _FTAddCalculateTax = 0 : _FCDeduct = 0
                _GAmtPlus = 0

                Dim _RateShipftPerDay As Double = 0
                Dim _StateShift As Integer = 0
                If _FDDateStart > _FTSatrtCalculateDate Then _FTSatrtCalculateDate = _FDDateStart

                Do While _FTSatrtCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTSatrtCalculateDate < _FDDateEnd)

                    _RateShipftPerDay = 0
                    _oHoliday = 0
                    FTHldType = 0
                    _StateShift = 0
                    Dim _NewSlary As String

                    _Qry = "  SELECT   TOP 1   FNCurrentSlary  AS AMT"
                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK) "
                    _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "') "
                    _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    _FCSalary = _MSlary
                    If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    _Holiday = ""

                    For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                        _Holiday = "H"
                        FTHldType = Val(IR!FTHldType.ToString)
                        Exit For
                    Next

                    _FTShift = ""

                    _FNTime = 0
                    _FNNotRegis = 0
                    _FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
                    _FNOT3 = 0 : _FNOT4 = 0
                    _FNLateNormalMin = 0 : _FNLateNormalCut = 0
                    _FNLateOtMin = 0 : _FNLateOtCut = 0
                    _FNLateMorning = 0 : _FNLateAfternoon = 0
                    _LateCutAbsent = 0 : _FNAbsent = 0
                    _FNTimeMin = 0 : _FNOT1Min = 0
                    _FNOT1_5Min = 0 : _FNOT2Min = 0
                    _FNOT3Min = 0 : _FNOT4Min = 0
                    _FNLateMMin = 0 : _FNLateAfMin = 0
                    _FNRetireMMin = 0 : _FNRetireAfMin = 0
                    _FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
                    _FNRetireOtMin = 0 : _FNRetireOtMin = 0
                    _FNRetireOtCut = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _AmtAddCalOT = 0
                    _GtotalleavePayCalSso = 0
                    _LeaveCode = ""

                    Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                    Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                    For Each R2 In _R

                        _RatePay = Double.Parse("0" & R2!FNRatePaid.ToString)
                        _RateShipftPerDay = _RatePay
                        _StateShift = Integer.Parse("0" & R2!FNStateShift.ToString)

                        _FTShift = R2!FTShift.ToString
                        _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                        _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                        _FNNotRegis = Val(R2!FNNotRegis.ToString)
                        _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                        _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                        _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                        _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                        _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                        _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent_Cut.ToString)
                        _FNOT1Min = Val(R2!FNOT1Min.ToString)
                        _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                        _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                        _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                        _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                        _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                        _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                        _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                        _InOT = R2!FTIn3.ToString
                        _OutOT = R2!FTOut3.ToString

                        _Over = R2!FTOverClock.ToString

                        If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            _TotalWorkDay = _TotalWorkDay + 1

                            _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                            If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                If _FNOT1Min + _FNOT2Min + _FNOT4Min + _FNOT1_5Min > 0 Then
                                    _FNNetOTMealAmt = _FNNetOTMealAmt + _FNOTMealAmt
                                End If

                                _SPDateType = 0

                                _Holiday = ""

                                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _Holiday = "H"
                                    Exit For
                                Next

                                If _Holiday <> "" Then _SPDateType = 2

                                Dim _StateLeaveOther As Boolean = False
                                Dim _StateLeavacation As Boolean = False
                                Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                Dim _SumLeave As Integer = 0

                                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                    If Val(sR!LeaveType) = 1 Then
                                        _StateLeavacation = True
                                    Else
                                        _StateLeaveOther = True
                                    End If

                                    If Val(sR!LeaveType) = 2 Then
                                        _StateFTStaMaternityleaveNotpay = True
                                    End If

                                Next

                                '--------------------------- ค่ากะ -------------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)



                                    If _StatePass Then
                                        _ShiftAmt = _ShiftAmt + _ShiftValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ -------------------------------------

                                '****************************** Bonus 

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='008' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        Dim _Amt As Double = 0
                                        Dim _Cmd As String = ""
                                        _Cmd = "Select Top 1 isnull(FNAmt,0) AS  FNAmt From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus with(nolock)"
                                        _Cmd &= vbCrLf & "where FNHSysEmpID=" & Integer.Parse(_EmpCode)
                                        _Cmd &= vbCrLf & "and FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'"
                                        _Amt = Double.Parse(HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "0"))
                                        _BonusAmt = _BonusAmt + _Amt

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _Amt
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _Amt
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _Amt
                                    End If
                                Next


                                '****************************** End Bonus

                                '--------------------------- ค่ากะ OT ----------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        _ShiftOTAmt = _ShiftOTAmt + _ShiftOTValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftOTValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftOTValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftOTValue

                                    End If

                                Next
                                '--------------------------- ค่ากะ OT ----------------------------------

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='0' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then

                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + Val(RFin!FCFinAmt.ToString)

                                        If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                            _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                        Else

                                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                            Next

                                        End If
                                    End If
                                Next
                            End If
                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                        End If

                    Next


                    'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                    Select Case FNStateSalaryType
                        Case 0 'ต่อเดือน
                            _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.000"))
                            _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                            ' _SalaryPayLeave = CDbl(Format((_FCSalary) / 26, "0.000")) ' ลาป่วย หารวันทำงานในงวด  meeting 20180227 pMote , pWest , pTuk cd , pAnuwat 

                            _SalaryPayLeave = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                        Case 1 'ต่อวัน
                            _FNSlaryPerMonth = CDbl(Format((_FCSalary * CountDayPerMonth), "0.000"))
                            _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.000"))
                            _SalaryPayLeave = _FNSlaryPerDay
                    End Select
                    'เพิ่มค่าแรง กัมพูชา 20161206
                    '  _SalaryPayLeave = _FNSlaryPerDay
                    _FNSlaryPerMonth = _FNSlaryPerMonth
                    _FNSlaryPerDay = _FNSlaryPerDay
                    _SalaryPayOTKM = _FNSlaryPerDay


                    'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ

                    If _RateShipftPerDay > 1 Then
                        _FNSlaryPerDay = _FNSlaryPerDay * _RateShipftPerDay
                    End If

                    If _StateShift = 1 Then
                        _Qry = " SELECT FTCfgOTCode,Isnull(FCCfgOTNightValue,0) as  FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus   "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    Else
                        _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    End If




                    _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000"))
                    _FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000"))
                    '_SalaryPayLeaveMin = CDbl(Format(CDbl(Format(_SalaryPayLeave / 8, "0.00000")) / 60, "0.00000"))
                    _SalaryPayLeaveMin = CDbl(_SalaryPayLeave / 8) / 60

                    _FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_SalaryPayOTKM + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000")) / 60, "0.00000"))

                    _FNSlaryOTPerHour = CDbl(Format((_SalaryPayOTKM + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000"))

                    If _FTShift = "" Then
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If
                    Else

                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If

                        If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _WorkDay = _WorkDay + 1
                        End If

                        If _Holiday = "" Then
                            _GFNLateNormalMinNotHoliday = _GFNLateNormalMinNotHoliday + _FNLateNormalMin
                        End If

                        _GFNLateNormalMin = _GFNLateNormalMin + _FNLateNormalMin
                        _GFNLateNormalCut = _GFNLateNormalCut + _FNLateNormalCut
                        _GFNLateOtMin = _GFNLateOtMin + _FNLateOtMin
                        _GFNLateOtCut = _GFNLateOtCut + _FNLateOtCut
                        _GFNLateMorning = _GFNLateMorning + _FNLateMorning
                        _GFNLateAfternoon = _GFNLateAfternoon + _FNLateAfternoon
                        _GFNAbsent = _GFNAbsent + _FNAbsent
                        _GFNCutAbsent = _GFNCutAbsent + _LateCutAbsent
                        _GFNTimeMin = _GFNTimeMin + _FNTimeMin
                        _GFNOT1Min = _GFNOT1Min + _FNOT1Min
                        _GFNOT1_5Min = _GFNOT1_5Min + _FNOT1_5Min
                        _GFNOT2Min = _GFNOT2Min + _FNOT2Min
                        _GFNOT3Min = _GFNOT3Min + _FNOT3Min
                        _GFNOT4Min = _GFNOT4Min + _FNOT4Min
                        _GFNLateMMin = _GFNLateMMin + _FNLateMMin
                        _GFNLateAfMin = _GFNLateAfMin + _FNLateAfMin
                        _GFNRetireOtMin = _GFNRetireOtMin + _FNRetireOtMin
                        _GFNRetireOtCut = _GFNRetireOtCut + _FNRetireOtCut
                        _GFNRetireMMin = _GFNRetireMMin + _FNRetireMMin
                        _GFNRetireAfMin = _GFNRetireAfMin + _FNRetireAfMin
                        _GFNRetireNormalCut = _GFNRetireNormalCut + _FNRetireNormalCut

                    End If

                    _TmpLeavePay = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0 : FNPayLeaveSpecialBahtMin = 0
                    _FNLeaveNotPay = 0
                    _LeaveCode = ""
                    For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' ")
                        _LeaveCode = sR!LFTLeaveCode.ToString

                        _TmpLeavePay = Val(sR!FNTotalPayMinute.ToString)

                        Select Case sR!LFTLeaveCode.ToString.ToUpper
                            Case "97"

                            Case Else

                                _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                                _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                                _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                                If sR!FTStaCalSSO.ToString = "1" Then
                                    _GtotalleavePayCalSso = Val(sR!FNTotalPayMinute.ToString)
                                End If
                        End Select

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        Select Case sR!LFTLeaveCode.ToString.ToUpper '""Val(sR!LeaveType)
                            Case "98"
                                _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                            Case "998"
                                _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                            Case "1"
                                FNPayLeaveBusinessBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveBusinessBahtMin = GFNPayLeaveBusinessBahtMin + FNPayLeaveBusinessBahtMin

                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                            Case "0"

                                FNPayLeaveSickBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveSickBahtMin = GFNPayLeaveSickBahtMin + FNPayLeaveSickBahtMin
                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)

                                If FNPayLeaveSickBahtMin > 0 Then
                                    _LeaveSickPay = _LeaveSickPay + 1

                                    Dim _PayPer As Double = 0
                                    Select Case _LeaveSickPay
                                        Case Is <= 30
                                            _PayPer = 100
                                        Case Is <= 90
                                            _PayPer = 60
                                        Case Is <= 180
                                            _PayPer = 0
                                    End Select

                                    If _PayPer = 0 Then
                                        FNPayLeaveSickBahtMin = 0
                                        GFNPayLeaveSickBahtMin = GFNPayLeaveSickBahtMin - FNPayLeaveSickBahtMin
                                        _GFNLeaveOther = _GFNLeaveOther - FNPayLeaveSickBahtMin
                                    End If

                                    If _DTEmpPayLeaveSick.Select("FNSalary=" & _SalaryPayLeave & " AND FNPayPer=" & _PayPer & " ").Length > 0 Then
                                        For Each Rx As DataRow In _DTEmpPayLeaveSick.Select("FNSalary=" & _SalaryPayLeave & "  AND FNPayPer=" & _PayPer & "  ")
                                            Rx!FNDay = Val(Rx!FNDay) + FNPayLeaveSickBahtMin
                                            Exit For
                                        Next
                                    Else
                                        _DTEmpPayLeaveSick.Rows.Add(_SalaryPayLeave, FNPayLeaveSickBahtMin, _PayPer)
                                    End If


                                End If


                            Case "999"
                                FNPayLeaveSpecialBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveSpecial = _GFNLeaveSpecial + FNPayLeaveSpecialBahtMin
                            Case "97"
                                FNParturitionLeaveMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNParturitionLeaveMin = GFNParturitionLeaveMin + FNParturitionLeaveMin

                                ' _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                            Case Else
                                _FNLeavePay = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End Select

                    Next

                    _GFNLeavePay = _GFNLeavePay + _FNLeavePay
                    _SocialBefore = 0
                    _SocialBeforeAmt = 0

                    Dim _WageAmtPerDay As Double = 0
                    Dim _WageOTAmtPerDay As Double = 0
                    Dim _TimeOTMdr As Integer = 0

                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    Else
                        _WageAmtPerDay = CDbl(Format((_FNTimeMin) * _FNSlaryPerMin, "0.000"))
                        _FNEmpBaht = _FNEmpBaht + _WageAmtPerDay
                    End If

                    _nBahtOt1 = _nBahtOt1 + CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000"))


                    If FTHldType = 1 And _FNOT3Min > 0 Then
                        _GAmtPlus = _GAmtPlus + _AmtPlus
                    End If

                    _nBahtOt15 = _nBahtOt15 + CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.000"))

                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.000"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.000"))

                    _LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.000"))

                    Dim _TmpFNLapaidAmt As Double = CDbl(Format(_TmpLeavePay * _SalaryPayLeaveMin, "0.000"))
                    Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _SalaryPayLeaveMin, "0.000"))

                    _Lapaid = _Lapaid + _TmpLapaidAmt
                    _GtotalleavePayCalSsoAmt = _GtotalleavePayCalSsoAmt + CDbl(Format(_GtotalleavePayCalSso * _SalaryPayLeaveMin, "0.000"))  'เงินลาจ่ายที่นำไปคิดประกันสังคม

                    If _LeaveCode <> "" And _FNLeaveVacation > 0 Then

                        Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * (_MoneyRetVacationPerDay / 480), "0.000"))
                    Else
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.000"))
                    End If

                    If _FTStatePayHoliday <> "1" Then
                        _oHoliday = 0
                    Else

                        If (_FNLeaveNotPay <= 0) Then
                            If _TmpFNLapaidAmt <= 0 Then
                                _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.000"))
                            Else
                                _TotalHoliDay = _TotalHoliDay - _oHoliday
                                _oHoliday = 0
                            End If
                        Else

                            _TotalHoliDay = _TotalHoliDay - _oHoliday
                            _oHoliday = 0
                        End If

                    End If

                    If _DTEmpWorkDay.Select("FNSalary=" & _FNSlaryPerDay & "").Length > 0 Then
                        For Each Rx As DataRow In _DTEmpWorkDay.Select("FNSalary=" & _FNSlaryPerDay & "")

                            Rx!FNDay = Val(Rx!FNDay) + _FNTimeMin
                            Rx!FNOT1 = Val(Rx!FNOT1) + _FNOT1Min
                            Rx!FNOT15 = Val(Rx!FNOT15) + _FNOT1_5Min
                            Rx!FNOT2 = Val(Rx!FNOT2) + _FNOT2Min
                            Rx!FNOT3 = Val(Rx!FNOT3) + _FNOT3Min
                            Rx!FNOT4 = Val(Rx!FNOT4) + _FNOT4Min
                            Rx!FNHoloday = Val(Rx!FNHoloday) + (_oHoliday)
                            Rx!FNLate = Val(Rx!FNLate) + _FNLateNormalCut
                            Rx!FNAbsent = Val(Rx!FNAbsent) + _FNAbsent
                            Rx!FNLateCutAmtAbsent = Val(Rx!FNLateCutAmtAbsent) + _LateCutAbsent
                            Rx!FNLeavePay = Val(Rx!FNLeavePay) + _FNLeavePay
                            Rx!FNLeaveNotPay = Val(Rx!FNLeaveNotPay) + (_FNLeaveNotPay)
                            Rx!FNBusiness = Val(Rx!FNBusiness) + FNPayLeaveBusinessBahtMin
                            Rx!FNSpecial = Val(Rx!FNSpecial) + FNPayLeaveSpecialBahtMin
                            Rx!FNParturition = Val(Rx!FNParturition) + FNParturitionLeaveMin
                            Rx!FNVacation = Val(Rx!FNVacation) + _FNLeaveVacation
                            Rx!FNShiftNo = _StateShift
                            Rx!FNSlaryOTPerMin = _FNSlaryOTPerMin
                            Exit For
                        Next
                    Else
                        _DTEmpWorkDay.Rows.Add(_FNSlaryPerDay, _FNTimeMin, _FNOT1Min, _FNOT1_5Min,
                                               _FNOT2Min, _FNOT3Min, _FNOT4Min, (_oHoliday),
                                               _FNLateNormalCut, _FNAbsent, _LateCutAbsent, _FNLeavePay,
                                               _FNLeaveNotPay, FNPayLeaveBusinessBahtMin, FNPayLeaveSpecialBahtMin, FNParturitionLeaveMin, _FNLeaveVacation, _StateShift, _FNSlaryOTPerMin)
                    End If

                    _FTSatrtCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTSatrtCalculateDate, 1))

                Loop

                _FNEmpBaht = 0
                _FNEmpBaht = 0
                _nBahtOt1 = 0
                _nBahtOt15 = 0
                _nBahtOt2 = 0
                _nBahtOt3 = 0
                _nBahtOt4 = 0
                _nBahtAbsent = 0
                _LateCutAmt = 0
                _LateCutAmtAbsent = 0
                _HBaht = 0
                _LaNotpaid = 0
                _Lapaid = 0
                FNPayLeaveBusinessBaht = 0 : FNPayLeaveSickBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0
                _FCPayVacationBaht = 0
                _FNSlaryOTPerMin = 0
                Dim _TotalxDay As Integer = 0
                For Each Rx As DataRow In _DTEmpWorkDay.Rows

                    _FNSlaryPerMin = CDbl(Format(CDbl(Rx!FNSalary) / 480, "0.00000"))
                    _FNSlaryPerDay = CDbl(Format(CDbl(Rx!FNSalary), "0.00000"))
                    _FNSlaryOTPerMin = Double.Parse("0" & Rx!FNSlaryOTPerMin)

                    _TotalxDay = 0



                    Try
                        If FNWorkDayInWeekBF > 0 Then
                            'If Val(Rx!FNDay) > ((FNWorkDayInMonth - FNWorkDayInWeekBF) * 480) Then
                            '    _FNEmpBaht = _FNEmpBaht + CDbl(Format(((FNWorkDayInMonth - FNWorkDayInWeekBF) * 480) * _FNSlaryPerMin, "0.000"))
                            'Else

                            _TotalxDay = Val(Rx!FNDay) \ 480.0
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                            ' End If
                        Else
                            _TotalxDay = Val(Rx!FNDay) \ 480.0
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                        End If
                    Catch ex As Exception
                        _TotalxDay = Val(Rx!FNDay) \ 480.0
                        _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                        _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                    End Try


                    If Double.Parse(Rx!FNShiftNo.ToString) = 1 Then
                        _Qry = " SELECT FTCfgOTCode,Isnull(FCCfgOTNightValue,0) as  FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus   "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    Else
                        _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    End If



                    _nBahtOt1 = _nBahtOt1 + CDbl(Format(Val(Rx!FNOT1) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000"))
                    _nBahtOt15 = _nBahtOt15 + CDbl(Format(Val(Rx!FNOT15) * ((_FNSlaryOTPerMin) * _RateOT15), "0.000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format(Val(Rx!FNOT2) * ((_FNSlaryOTPerMin) * _RateOT2), "0.000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format(Val(Rx!FNOT3) * ((_FNSlaryOTPerMin) * _RateOT3), "0.000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format(Val(Rx!FNOT4) * ((_FNSlaryOTPerMin) * _RateOT4), "0.000"))
                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(Val(Rx!FNAbsent) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((Val(Rx!FNLate)) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((Val(Rx!FNLateCutAmtAbsent)) * _FNSlaryPerMin, "0.000"))
                    _HBaht = _HBaht + CDbl(Format(Val(Rx!FNHoloday) * CDbl(Rx!FNSalary), "0.000"))
                    _LaNotpaid = _LaNotpaid + CDbl(Format(Val(Rx!FNLeaveNotPay) * _FNSlaryOTPerMin, "0.000"))
                    _Lapaid = _Lapaid + CDbl(Format(Val(Rx!FNLeavePay) * _SalaryPayLeaveMin, "0.000"))
                    FNPayLeaveBusinessBaht = FNPayLeaveBusinessBaht + CDbl(Format(Val(Rx!FNBusiness) * _FNSlaryPerMin, "0.000"))

                    ' FNParturitionLeave = FNParturitionLeave + CDbl(Format(Val(Rx!FNParturition) * _FNSlaryPerMin, "0.000"))

                    Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay)
                    '  MsgBox(_MoneyRetVacationPerDay)
                    _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(Val(Rx!FNVacation) * (_MoneyRetVacationPerDay / 480), "0.000"))
                    '   MsgBox(Val(Rx!FNVacation))
                    ' MsgBox(_FCPayVacationBaht)

                    FNPayLeaveSpecialBaht = FNPayLeaveSpecialBaht + CDbl(Format(Val(Rx!FNSpecial) * (_MoneyRetVacationPerDay / 480), "0.000"))
                    GFNPayLeaveSpecialBahtMin = Val(Rx!FNSpecial)
                    FNVacationRetMin = Val(Rx!FNVacation)
                Next

                FNParturitionLeave = 0
                GFNParturitionLeaveMin = 0
                Dim _DeductAttandanceAmt As Double = 0
                Call CalculateParturition(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), FNParturitionLeave, GFNParturitionLeaveMin, _DeductAttandanceAmt, _WorkAge, _WorkAgeParturition, FNParturitionLeaveReCalTax)

                FNPayLeaveSickBaht = 0
                For Each Rx As DataRow In _DTEmpPayLeaveSick.Rows
                    _FNSlaryPerMin = (CDbl(CDbl(Rx!FNSalary) / 480) * CDbl(Rx!FNPayPer)) / 100.0
                    FNPayLeaveSickBaht = FNPayLeaveSickBaht + CDbl(Format(Val(Rx!FNDay) * _FNSlaryPerMin, "0.000"))
                Next

                _FNNetOTMealAmtUS = Format(_FNNetOTMealAmt / _FNExchangeRate, "0.000")

                If _FDDateEnd <> "" And _FDDateEnd <= _TmpFDDateEndP Then
                    'ลาออกในงวดแรก อายุงาน มากกว่า 13 วัน  จ่ายค่าเดินทาง & ค่าสุขภาพ เต็มเดือน

                    If _WorkAge >= 1 Or _WorkingDayN > 13 Then
                        If Val(_PayTerm) Mod 2 = 1 Then
                            _FNTransportAmt = _FNTransportAmt + _FNTransportAmt
                            _FNHealtCareAmt = _FNHealtCareAmt + _FNHealtCareAmt
                        End If
                    End If
                End If


                If _FTEmpState = "2" Or _FTEmpState = "3" Or (_FDDateEnd <= _EndDate And _FDDateEnd <> "") Then

                    FNPayLeaveBusinessBahtMin = 0 : FNPayLeaveSickBahtMin = 0 : FNPayLeaveSpecialBahtMin = 0 : FNParturitionLeaveMin = 0
                    GFNPayLeaveBusinessBahtMin = 0 : GFNPayLeaveSickBahtMin = 0 : GFNParturitionLeaveMin = 0
                    FNPayLeaveBusinessBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0
                    'FNPayLeaveSickBaht = 0 : ไม่มี เคสคำนวณ ในกรณีลาออก ใช้จากคำนวณปกติ

                    If _dttran.Select("FTStateAccept<>'1' AND FTWeekly <>'1' ").Length > 0 Or _dttran.Rows.Count <= 0 Then
                        Return False
                    End If

                    '_FCSalary = _MSlary
                    ''อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                    'Select Case FNStateSalaryType
                    '    Case 0 'ต่อเดือน
                    '        _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.000"))
                    '        _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                    '    Case 1 'ต่อวัน
                    '        _FNSlaryPerMonth = CDbl(Format((_FCSalary * CountDayPerMonth), "0.000"))
                    '        _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.000"))
                    'End Select
                    ''เพิ่มค่าแรง กัมพูชา 20161206
                    '_FNSlaryPerMonth = _FNSlaryPerMonth
                    '_FNSlaryPerDay = _FNSlaryPerDay
                    ''อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ

                    _Gtotalleave = 0
                    _GtotalleavePay = 0
                    _GtotalleaveNotPay = 0
                    _GFNLeaveOther = 0
                    _GFNLeavePay = 0
                    _GtotalleavePayCalSso = 0
                    _LaNotpaid = 0

                    Dim _NewSlary As String = ""

                    For Each sR As DataRow In _dtLeave.Rows

                        _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                        _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                        _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                        If sR!FTStaCalSSO.ToString = "1" Then
                            _GtotalleavePayCalSso = Val(sR!FNTotalPayMinute.ToString)
                        End If

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                        Else
                            _GFNLeavePay = _GFNLeavePay + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End If

                    Next

                    _LaNotpaid = CDbl(Format(_GtotalleaveNotPay * _FNSlaryPerMin, "0.000"))

                    If _LaNotpaid > _FNSlaryPerMonth Then
                        _LaNotpaid = _FNSlaryPerMonth
                    End If

                    _WorkingDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_DateEndOfMonth))) + 1



                    '' custom เงินเดือนคนงาออก ไม่ ตรง 20180601
                    'If _FDDateStart <= _StartDate And (_FDDateEnd >= _DateEndOfMonth Or _FDDateEnd = "") Then

                    '    Dim _SmDate As String = _DateStartOfMonth
                    '    Dim _EmDate As String = _DateEndOfMonth
                    '    Dim _dtSalary As New DataTable

                    '    _dtSalary.Columns.Add("FNCurrentSlary", GetType(Double))
                    '    _dtSalary.Columns.Add("FNDay", GetType(Integer))

                    '    Do While _SmDate <= _EmDate

                    '        _Qry = "  SELECT      TOP 1   FNCurrentSlary  AS AMT"
                    '        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK)"
                    '        _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_SmDate) & "') "
                    '        _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '        _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    '        _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    '        _FCSalary = _FNSlaryPerMonth
                    '        If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    '        If _dtSalary.Select("FNCurrentSlary=" & _FCSalary & "").Length > 0 Then

                    '            For Each Rxx As DataRow In _dtSalary.Select("FNCurrentSlary=" & _FCSalary & "")
                    '                Rxx!FNDay = Integer.Parse(Val(Rxx!FNDay)) + 1
                    '                Exit For
                    '            Next

                    '        Else
                    '            _dtSalary.Rows.Add(_FCSalary, 1)
                    '        End If

                    '        _SmDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_SmDate, 1))
                    '    Loop

                    '    Dim _TotalDay As Integer = 0
                    '    _FNEmpBaht = 0
                    '    If _dtSalary.Select("FNCurrentSlary<>" & _FNSlaryPerMonth & "").Length > 0 Then
                    '        For Each Rxx As DataRow In _dtSalary.Select("FNCurrentSlary<>" & _FNSlaryPerMonth & "")
                    '            _TotalDay = _TotalDay + Integer.Parse(Val(Rxx!FNDay))

                    '            _FNEmpBaht = _FNEmpBaht + Double.Parse(Format((Integer.Parse(Val(Rxx!FNDay)) * Double.Parse(Val(Rxx!FNCurrentSlary))), "0.000"))
                    '        Next

                    '        _FNEmpBaht = _FNEmpBaht + (_FNSlaryPerMonth - CDbl(Format(_TotalDay * _FNSlaryPerDay, "0.000")))

                    '    Else
                    '        _FNEmpBaht = _FNSlaryPerMonth
                    '    End If

                    '    _dtSalary.Dispose()

                    'Else

                    '    Dim _TotalDay As Integer = 0
                    '    If _FDDateStart > _StartDate And _FDDateEnd < _EndDate And _FDDateEnd <> "" Then
                    '        _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_FDDateStart), CDate(_FDDateEnd))) + 1

                    '    ElseIf _FDDateStart > _StartDate Then
                    '        _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_FDDateStart)))
                    '    ElseIf _FDDateEnd < _EndDate And _FDDateEnd <> "" Then
                    '        If _FDDateEnd < _DateStartOfMonth Then
                    '            _TotalDay = _WorkingDay
                    '        Else
                    '            _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_FDDateEnd), CDate(_DateEndOfMonth))) + 1
                    '        End If
                    '    End If

                    '    If _TotalDay >= _WorkingDay Then
                    '        _FNEmpBaht = 0
                    '        _WorkingDay = 0
                    '    Else
                    '        '      _FNEmpBaht = _FNSlaryPerMonth - CDbl(Format(_TotalDay * _FNSlaryPerDay, "0.000"))
                    '        If _WorkingDay > 30 Then _WorkingDay = 30
                    '        _WorkingDay = _WorkingDay - _TotalDay
                    '    End If

                    'End If

                    If _WorkingDay > 30 Then _WorkingDay = 30

                    _WorkingDay = CDbl(Format(((_WorkingDay * 480) - (_Gtotalleave)) / 480, "0.000"))
                    _WorkingDay = _WorkingDay - (_GFNAbsent / 480)
                    If _WorkingDay < 0 Then
                        _WorkingDay = 0
                    End If

                Else
                    _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.000"))
                End If
                _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.000"))  '2018/03/02 ยกมา คำนวณคนลาออก ไม่ตรง

                '-----------calculate Other Add For KKN ------------------ 
                Dim _ChkLeave As Integer = 0
                For Each sR As DataRow In _dtLeave.Select("LFTLeaveCode='0' OR LFTLeaveCode='1' OR LFTLeaveCode='2' OR LFTLeaveCode='3' ")
                    _ChkLeave = _ChkLeave + Val(sR!FNTotalMinute.ToString)
                Next
                '_DateStartOfMonth = _StartDate  'วันแรกของเดือน
                '_DateEndOfMonth = _EndDate 'วันแของเดือน
                _FNNetAttandanceAmt = 0
                '  If (_FTEmpState = "2" Or (_FTEmpState <> "2" And _StartDate <= Left(_StartDate, 8) & "24" And _EndDate >= Left(_StartDate, 8) & "24")) And _FNAttandanceAmt > 0 Then

                Dim ChkParturitionLeaveMin As Integer = 0

                If _FNAttandanceAmt > 0 Then

                    Dim _FNAttandanceAmtPerDay As Double = Double.Parse(Format(_FNAttandanceAmt / 13, "0.000"))
                    Dim _FNLateNormalMinBF As Integer = 0
                    Dim _leaaveVacation As Integer = 0
                    Dim _leaaveSpecial As Integer = 0
                    Dim _leaaveOther As Integer = 0
                    Dim _leaaveSickCard As Integer = 0
                    Dim _leaaveOSickNoCard As Integer = 0
                    Dim _leaaveNotPayAttdance As Integer = 0
                    Dim _StateNotPayAttdance As Boolean = True

                    Dim _leaavePayMinAttdance As Integer = 0  '' for cut parturition

                    Dim _FNLateNormalMinAttandance As Integer = 0
                    Dim _FNAbsentAttandance As Integer = 0
                    Dim _FNTimeFullMinAttandance As Integer = 0
                    Dim _WorkDayAttandance As Integer = 0

                    For Each Rxm As DataRow In _dttran.Rows
                        _FNLateNormalMinAttandance += Val(Rxm!FNLateNormalMin.ToString)
                        _FNAbsentAttandance += Val(Rxm!FNAbsent.ToString)
                        _FNTimeFullMinAttandance += IIf(Val(Rxm!FNTime.ToString) < 480, 0, Val(Rxm!FNTime.ToString))
                    Next

                    _WorkDayAttandance = _FNTimeFullMinAttandance / 480

                    If _FNLateNormalMinAttandance >= 1 Or _FNAbsentAttandance >= 1 Then
                        _StateNotPayAttdance = False
                    End If

                    'For Each Rxm As DataRow In _dtLeave.Select("LFTLeaveCode='9' ")
                    '    _leaaveSpecial = _leaaveSpecial + Val(Rxm!FNTotalMinute.ToString)
                    'Next

                    'For Each Rxm As DataRow In _dtLeave.Select("LFTLeaveCode<>'0'   AND LFTLeaveCode<>'98' AND LFTLeaveCode<>'9' ")
                    '    _leaaveOther = _leaaveOther + Val(Rxm!FNTotalMinute.ToString)
                    'Next

                    'For Each Rxm As DataRow In _dtLeave.Select("LFTLeaveCode='0'   AND FTStateMedicalCertificate<>'1'")
                    '    _leaaveOSickNoCard = _leaaveOSickNoCard + Val(Rxm!FNTotalMinute.ToString)
                    'Next

                    'For Each Rxm As DataRow In _dtLeave.Select("LFTLeaveCode='0'   AND FTStateMedicalCertificate='1'")
                    '    _leaaveSickCard = _leaaveSickCard + Val(Rxm!FNTotalMinute.ToString)
                    'Next

                    For Each Rxm As DataRow In _dtLeave.Select("FNTotalNotPayMinute > 0 ")
                        If Rxm!LFTLeaveCode.ToString <> "97" Or Rxm!LFTLeaveCode.ToString <> "17" Or Rxm!LFTLeaveCode.ToString <> "18" Then
                            _leaaveNotPayAttdance = _leaaveNotPayAttdance + 480 'Val(Rxm!FNTotalNotPayMinute.ToString) 
                        End If
                    Next

                    For Each Rzm As DataRow In _dtLeave.Select("FNTotalPayMinute > 0 ")
                        If Rzm!LFTLeaveCode.ToString = "0" Or Rzm!LFTLeaveCode.ToString = "17" Or Rzm!LFTLeaveCode.ToString = "18" Or Rzm!LFTLeaveCode.ToString = "19" Or Rzm!LFTLeaveCode.ToString = "98" Or Rzm!LFTLeaveCode.ToString = "999" Or Rzm!LFTLeaveCode.ToString = "998" Then
                            _leaavePayMinAttdance = _leaavePayMinAttdance + Val(Rzm!FNTotalPayMinute.ToString)
                        End If
                    Next



                    For Each Rzm As DataRow In _dtLeave.Select("FNTotalPayMinute > 0 ")
                        If Rzm!LFTLeaveCode.ToString = "97" And Rzm!FNTotalPayMinute.ToString = "480.00" Then 'Or Rzm!LFTLeaveCode.ToString = "98" Or Rzm!LFTLeaveCode.ToString = "1"
                            '(Rzm!LFTLeaveCode.ToString = "0" And Rzm!FTStateMedicalCertificate.ToString = "1") Or    'ลาป่วยมีใบรับรองแพทย์ จ่ายเต็มวัน  / ก่อนหน้าไม่จ่ายวันที่ลา 20181206
                            _leaaveNotPayAttdance = _leaaveNotPayAttdance + 480

                        Else
                            If Rzm!LFTLeaveCode.ToString = "0" And Rzm!FTStateMedicalCertificate.ToString = "0" Then
                                _StateNotPayAttdance = False
                            End If
                        End If
                    Next

                    For Each Rzm As DataRow In _dtLeave.Rows   ''พักงาน ไม่ได้รับเบี้ยขยันทั้งงวด
                        If Rzm!LFTLeaveCode.ToString = "99" Then
                            _StateNotPayAttdance = False
                        End If
                    Next


                    For Each Rzm As DataRow In _dtLeave.Select("FNTotalNotPayMinute > 0 ")
                        If Rzm!LFTLeaveCode.ToString = "97" Then
                            ChkParturitionLeaveMin = ChkParturitionLeaveMin + 480
                        End If

                    Next


                    ''ลาคลอดอายุงานมากว่า 1 ปี ไม่ได้ค่าสุขภาพใงวดที่ไม่มีวันทำงาน
                    If _WorkAgeParturition >= 12 Then
                        If _dtLeave.Select("FNTotalPayMinute > 0  and LFTLeaveCode ='97' ").Length > 0 Then
                            If _dttran.Select("FNTime > 0  OR FNAbsent > 0 ").Length <= 0 Then
                                '_FNTransportAmt = 0
                                '_FNHealtCareAmt = 0
                                If _TotalHoliDay > 0 Then 'ถ้ามีวันหยุดนักขัตฤกษ์ยังจ่ายเงินตามสัดส่วน

                                Else
                                    _FNTransportAmt = 0
                                    _FNHealtCareAmt = 0
                                End If
                            End If
                        End If
                        If _dtLeave.Select("FNTotalNotPayMinute > 0  and LFTLeaveCode ='97' ").Length > 0 Then
                            If _dttran.Select("FNTime > 0  OR FNAbsent > 0 ").Length <= 0 Then
                                If _TotalHoliDay > 0 Then 'ถ้ามีวันหยุดนักขัตฤกษ์ยังจ่ายเงินตามสัดส่วน

                                Else
                                    _FNAttandanceAmt = 0
                                    _FNTransportAmt = 0
                                    _FNHealtCareAmt = 0
                                End If
                                ''_FNAttandanceAmt = 0

                            End If
                        End If
                    Else

                    End If

                    'คิด  attandance
                    If _GFNAbsent <= 0 And (_GFNLateNormalMinNotHoliday + _FNLateNormalMinBF) <= 0 And _leaaveOSickNoCard <= 0 And _leaaveOther <= 0 Then

                        Dim _FNWorkingDayBF As Integer = 0
                        '_Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNWorkingDay,0)) AS FNWorkingDay"
                        '_Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                        '_Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        '_Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                        '_Qry &= vbCrLf & "AND P.FNHSysEmpID ='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                        '_Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                        '_Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                        '_Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                        '_Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                        '_Qry &= vbCrLf & "  Select FNMonth"
                        '_Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                        '_Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                        '_Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        '_Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                        '_Qry &= vbCrLf & "  )  "

                        '_FNWorkingDayBF = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")) ' Integer.Parse(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")))

                        _FNNetAttandanceAmt = _FNAttandanceAmt
                        'If _FDDateEnd <> "" And _FDDateEnd > _StartDate And _FDDateEnd <= _EndDate Then
                        'If _FDDateEnd <> "" And _FDDateEnd > _DateStartOfMonth And _FDDateEnd <= _DateEndOfMonth Then
                        '    'Modify 20150218 Resign Not Pay Attance Bonus
                        '    'If (_WorkingDay + _FNWorkingDayBF) < 13 And _EndDate <> "" Then
                        '    '    _FNNetAttandanceAmt = Format((_FNNetAttandanceAmt / 13) * (_WorkingDay + _FNWorkingDayBF), "0.00")
                        '    'End If
                        '    _FNNetAttandanceAmt = 0
                        '    'ElseIf _FDDateStart > _StartDate And _FDDateStart <= _EndDate Then
                        'ElseIf _FDDateStart > _DateStartOfMonth And _FDDateStart <= _DateEndOfMonth Then
                        '    If (_WorkingDay + _FNWorkingDayBF) < 13 Then
                        '        _FNNetAttandanceAmt = Format((_FNNetAttandanceAmt / 13) * (_WorkingDay + _FNWorkingDayBF), "0.00")
                        '    End If
                        'End If

                        Dim _EmpStartBetweenPreriod As String = ""
                        Dim _EmpStartParturitionLeaveMin As String = ""
                        Dim _st__DeductAttAmt As String = ""

                        If _FDDateEnd <> "" And _FDDateEnd > _StartDate And _FDDateEnd <= _EndDate Then ''ออกก่อนวันสิ้นงวด
                            'Modify 20150218 Resign Not Pay Attance Bonus
                            'If (_WorkingDay + _FNWorkingDayBF) < 13 And _EndDate <> "" Then
                            '    _FNNetAttandanceAmt = Format((_FNNetAttandanceAmt / 13) * (_WorkingDay + _FNWorkingDayBF), "0.00")
                            'End If
                            _FNNetAttandanceAmt = 0
                            'ElseIf _FDDateStart > _StartDate And _FDDateStart <= _EndDate Then
                        ElseIf _FDDateStart > _StartDate And _FDDateStart <= _EndDate Then
                            ' If (_WorkingDay ) < 13 Then
                            _FNNetAttandanceAmt = Format((_FNNetAttandanceAmt / 13) * (_WorkDayAttandance + _TotalHoliDay), "0.000")
                            _st__DeductAttAmt = "Y"
                            'End If
                        ElseIf ChkParturitionLeaveMin > 0 Then


                            _FNNetAttandanceAmt = Format((_FNNetAttandanceAmt / 13) * (_WorkDayAttandance + _TotalHoliDay + (_leaavePayMinAttdance / 480)), "0.000")


                            _st__DeductAttAmt = "Y"
                        End If


                        If _leaaveNotPayAttdance > 0 And _FNNetAttandanceAmt > 0 Then

                            If _st__DeductAttAmt = "" Then
                                Dim _DeductAttAmt As Double = Double.Parse(Format(((_leaaveNotPayAttdance / 480) * _FNAttandanceAmtPerDay), "0.000"))
                                _FNNetAttandanceAmt = _FNNetAttandanceAmt - _DeductAttAmt
                            End If

                            'If _WorkingDay > 13 Then
                            '    _WorkingDay = _WorkingDay - 1
                            'End If

                            '' _FNNetAttandanceAmt = Double.Parse(Format(((_WorkingDay) * _FNAttandanceAmtPerDay), "0.000"))
                            If _FNNetAttandanceAmt < 0 Then

                                _FNNetAttandanceAmt = 0
                            End If

                        End If



                        If Not (_StateNotPayAttdance) Then

                            _FNNetAttandanceAmt = 0
                        End If

                        'If _leaaveSickCard > 0 And _FNNetAttandanceAmt > 0 Then

                        '    Dim _Disamt As Double = 0

                        '    _Disamt = Format((_FNNetAttandanceAmt / (13 * 480)) * (_leaaveSickCard), "0.00")
                        '    _FNNetAttandanceAmt = _FNNetAttandanceAmt - _Disamt

                        'End If
                    End If
                End If




                'If _WorkingDay = 0 Then
                '    _FNNetAttandanceAmt = 0
                'End If
                '-----------calculate Other Add For KKN ------------------
                _WorkingDay = _WorkingDay + _DayAdjAdd

                _GFNTimeMin = _GFNTimeMin + (_DayAdjAdd * 480)
                _FNEmpBaht = _FNEmpBaht + _WageAdjAdd
                _nBahtOt1 = CDbl(Format(_nBahtOt1, "0.000"))
                _nBahtOt15 = CDbl(Format(_nBahtOt15, "0.000"))
                _nBahtOt2 = CDbl(Format(_nBahtOt2, "0.000"))
                _nBahtOt3 = CDbl(Format(_nBahtOt3, "0.000")) + _GAmtPlus  ' ได้เงินพิเศษช่วงเทศกาลเพิ่ม
                _nBahtOt4 = CDbl(Format(_nBahtOt4, "0.000"))

                Dim _TmpPe As String = ""

                If _FTEmpState = "2" Then
                Else
                    _TmpPe = IIf(Val(_PayTerm) - 1 Mod 2 = 1, (Val(_PayTerm) - 1).ToString("00"), "")
                End If

                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน ประเภทจ่ายเป็นเดือน ของงวดก่อนหน้า ---------------------
                'If _FTStatePayHoliday <> "1" Then '--------- รายเดือนไม่ได้ค่าจ้างวันหยุด---------------
                'Else
                If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='1'  ").Length > 0 Then


                    Dim _BFSDate As String = ""
                    Dim _BFEDate As String = ""

                    _Qry = " SELECT TOP 1  FDCalDateBegin, FDCalDateEnd"
                    _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & " WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & " AND FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & " AND FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND FTPayMonth IN (   "
                    _Qry &= vbCrLf & "  Select FTPayMonth"
                    _Qry &= vbCrLf & "    FROM THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "   AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & " )  "

                    _dttemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                    For Each Row As DataRow In _dttemp.Rows
                        _BFSDate = Row!FDCalDateBegin.ToString
                        _BFEDate = Row!FDCalDateEnd.ToString
                    Next

                    If _BFSDate <> "" And _BFEDate <> "" Then

                        _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                        _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                        _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                        _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                        _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                        _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                        _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                        _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                        _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                        _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0)  + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                        _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                        _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                        _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                        _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                        _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                        _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                        _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                        _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                        _Qry &= vbCrLf & ",P.FTOverClock,P.FTWeekDay"
                        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN "
                        _Qry &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                        _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                        _Qry &= vbCrLf & " 	And T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                        _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                        _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Do While _BFSDate <= _BFEDate
                            _FTShift = ""
                            Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                            Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                            For Each R2 In _R

                                _FTShift = R2!FTShift.ToString
                                _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)

                                _InOT = R2!FTIn3.ToString
                                _OutOT = R2!FTOut3.ToString

                                _Over = R2!FTOverClock.ToString

                                If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    If _FTShift <> "" Then

                                        _SPDateType = 0

                                        _Holiday = ""

                                        _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                        _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                        _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'  AND FTStateActive='1'  "
                                        _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                        If _Holiday <> "" Then _SPDateType = 2

                                        Dim _StateLeaveOther As Boolean = False
                                        Dim _StateLeavacation As Boolean = False


                                        Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                        Dim _SumLeave As Integer = 0

                                        For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                            _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                            If Val(sR!LeaveType) = 1 Then
                                                _StateLeavacation = True
                                            Else
                                                _StateLeaveOther = True
                                            End If

                                            If Val(sR!LeaveType) = 2 Then
                                                _StateFTStaMaternityleaveNotpay = True
                                            End If

                                        Next

                                        For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='1' ")
                                            Dim _StatePass As Boolean = True

                                            If _OutOT <> "" Then
                                                Beep()
                                            End If

                                            If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                            If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                            If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                            If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                            If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                            If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                            If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                            End If

                                            If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                            If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                            If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                If _STime.Length = _ETime.Length Then
                                                    If IsDate(_STime) And IsDate(_ETime) Then
                                                        If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If
                                                Else
                                                    _StatePass = False
                                                End If

                                            End If

                                            If _StatePass Then
                                                _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                                    _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                                Else
                                                    For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                        xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                    Next
                                                End If

                                            End If
                                        Next
                                    End If
                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                                End If
                            Next

                            _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                        Loop
                    End If
                End If
                ' End If
                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------


                '-------- รายได้อื่นๆจ่ายงวดกลางเดือน--------------------
                If _FTEmpState <> "2" And Val(_PayTerm) Mod 2 = 1 Then
                    If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='2'  ").Length > 0 Then

                        Dim _BFSDate As String = ""
                        Dim _BFEDate As String = ""

                        _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                        _BFEDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_BFSDate, 8) & "01", 1), -1)) 'วันสุดท้ายของเดือน

                        If _BFSDate <> "" And _BFEDate <> "" Then

                            _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                            _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                            _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                            _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                            _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                            _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                            _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                            _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                            _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                            _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                            _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                            _Qry &= vbCrLf & " ,P.FTOverClock,P.FTWeekDay"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                            _Qry &= vbCrLf & "    WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                            _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                            Do While _BFSDate <= _BFEDate
                                _FTShift = ""
                                Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                                Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                For Each R2 In _R

                                    _FTShift = R2!FTShift.ToString
                                    _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                    _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                    _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                    _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                    _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                    _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                    _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                    _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                    _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                    _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                    _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                    _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                    _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                    _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                    _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                    _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                    _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                                    _InOT = R2!FTIn3.ToString
                                    _OutOT = R2!FTOut3.ToString
                                    _Over = R2!FTOverClock.ToString

                                    If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                        If _FTShift <> "" Then

                                            _SPDateType = 0

                                            _Holiday = ""

                                            _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                            _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'  AND FTStateActive='1' "
                                            _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                            If _Holiday <> "" Then _SPDateType = 2

                                            Dim _StateLeaveOther As Boolean = False
                                            Dim _StateLeavacation As Boolean = False


                                            Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                            Dim _SumLeave As Integer = 0

                                            For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                                _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                                If Val(sR!LeaveType) = 1 Then
                                                    _StateLeavacation = True
                                                Else
                                                    _StateLeaveOther = True
                                                End If

                                                If Val(sR!LeaveType) = 2 Then
                                                    _StateFTStaMaternityleaveNotpay = True
                                                End If

                                            Next

                                            For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='2' ")
                                                Dim _StatePass As Boolean = True

                                                If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                                If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                                If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                                If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                                If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                                If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)

                                                If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                    _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                                End If

                                                If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                                If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                                If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                    Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                    Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                    If _STime.Length = _ETime.Length Then
                                                        If IsDate(_STime) And IsDate(_ETime) Then
                                                            If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                                _StatePass = False
                                                            End If
                                                        Else
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If

                                                End If

                                                If _StatePass Then
                                                    _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                    If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                    If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                    If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                                        _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                                    Else
                                                        For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                            xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                        Next
                                                    End If

                                                End If
                                            Next
                                        End If
                                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    End If

                                Next

                                _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                            Loop
                        End If
                    End If
                End If
                '-------------------------------------------------------------------------------------------
                If _FTEmpState = "2" And Val(_PayTerm) Mod 2 = 0 Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1'")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                            Else
                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next

                ElseIf _FDDateEnd <> "" And _FDDateEnd < _EndDate Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0' and FTFinCode='013' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay)
                                Next

                            End If
                        End If
                    Next
                ElseIf _FDDateEnd = "" Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0' and FTFinCode='013' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Double.Parse(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Double.Parse(R2!FCFinAmt.ToString))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Double.Parse(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next
                End If

                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0'  and FTFinCode <> '013' ")
                    Dim _StatePass As Boolean = True

                    If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                    If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                    If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                    If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                    If _StatePass Then

                        _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                        If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                        If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                        If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                            _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                        Else

                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                            Next

                        End If
                    End If
                Next

                For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTFinType='2'")

                    _FCDeduct = _FCDeduct + Val(R2!FCFinAmt.ToString)


                Next
                '---------รายได้รายหัก อื่นๆ-------------------------

                '------------------- สิ้นสุดการคำนวณรายวัน
                _FTWorkmenAmtBefore = 0
                _FTTotalCalWorkmenBefore = 0

                _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FCSocial"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocial,0)) AS FCSocialAmt"
                _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                _Qry &= vbCrLf & "  Select FNMonth"
                _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                _Qry &= vbCrLf & "  )  "

                Dim _DtSso As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                If _DtSso.Rows.Count > 0 Then
                    _SocialBefore = Val(_DtSso.Rows(0)!FCSocial.ToString)
                    _SocialBeforeAmt = Val(_DtSso.Rows(0)!FCSocialAmt.ToString)
                End If

                If _FTEmpState = "2" Or _FTEmpState = "3" Then


                    '_FNEmpBaht = CDbl(Format((_FCSalary), "0.000"))
                    'If _FTEmpState = "3" Then
                    '    _FNEmpBaht = CDbl(Format((_FCSalary) / 2, "0.000"))

                    'End If


                    If FTStaDeductAbsent = 0 Then
                        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent) '+ _nBahtAbsent
                    Else
                        _nBahtAbsent = 0
                        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent)
                    End If


                    If _FNEmpBaht < 0 Then _FNEmpBaht = 0



                End If

                _TotalCalTax = 0 : _TaxAmt = 0

                FNUnionAmt = 0
                FNUnionRate = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNUnionAmt,0) AS FNUnionAmt  FROM   " & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & ".dbo.THRMCfgWelfareKM with(nolock) Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")
                If FNUnionRate > 0 Then

                    Dim _StatePass As Boolean = True

                    If _FDDateEnd <> "" And _EndDate < _FDDateEnd Then
                        _StatePass = False
                    End If
                    If Not (FNStateUnionMember = "1") Then _StatePass = False

                    'If _WorkAge <= 0 Then
                    '    _StatePass = False
                    'Else
                    '    If FDStartDateUnion < _StartDate Then

                    '    End If
                    'End If

                    If Not (Val(_PayTerm) Mod 2 = 0) Then
                        _StatePass = False
                    End If

                    If _StatePass Then
                        ''  _FCDeduct = _FCDeduct + FNUnionRate
                        FNUnionAmt = FNUnionRate
                    End If

                End If

                '_TotalCalSso = Double.Parse(Format(_FNEmpBaht + _HBaht + _FTOtherAddCalculateSocial + _FTAddCalculateSocial + _GtotalleavePayCalSsoAmt, "0.00"))
                '_TotalCalSso = _TotalCalSso + Double.Parse(Format(_FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS, "0.00"))


                '  _FTAddCalculateTax = _FTAddCalculateTax + _ShiftAmt + _ShiftOTAmt
                _FCAdd = _FCAdd + _ShiftAmt + _ShiftOTAmt
                '  MsgBox(FNParturitionLeave)
                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    'If _FCPayVacationBaht > (_FNSlaryPerDay * (FNVacationRetMin / 480)) Then
                    '    _FCPayVacationBaht = _FCPayVacationBaht - (_FNSlaryPerDay * (FNVacationRetMin / 480))
                    'Else
                    '    _FCPayVacationBaht = 0
                    'End If

                    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                    '   _TotalCalTax = Double.Parse(Format(_FNEmpBaht + _HBaht + _Lapaid + _FCPayVacationBaht + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + (FNParturitionLeave - _DeductAttandanceAmt)) + _FNWorkAgeSalary, "0.00")) + _FNNetAttandanceAmt '+ _FNNetAttandanceAmt  + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt
                    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000"))

                    '_TotalCalTax = _TotalCalTax - _FCDeduct
                Else
                    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                    '_TotalCalTax = Double.Parse(Format(_FNEmpBaht + _HBaht + _Lapaid + _FCPayVacationBaht + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + (FNParturitionLeave - _DeductAttandanceAmt)) + _FNWorkAgeSalary, "0.00")) + _FNNetAttandanceAmt '+ _FNNetAttandanceAmt  + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt
                    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000"))

                    '_TotalCalTax = _TotalCalTax - _FCDeduct


                End If
                '_TotalCalTax +=+ _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                '-----------------หักเงินเข้า กองทุนสำรองเลี้ยงชีพ-------------------------------
                If _ContributedFundBeginPay Then
                    Dim _EMpWorkAge As Integer = Val(R!FNEmpWorkAge.ToString)

                    For Each sR As DataRow In _THRMContributedFund.Select(" FNAgeBegin <= " & _EMpWorkAge & " AND FNAgeEnd >=" & _EMpWorkAge & " ")

                        FTTotalCalContributedAmt = _TotalCalSso

                        FTContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNEmpAmtPer.ToString)) / 100.0), "0"))
                        FTCmpContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNCmpAmtPer.ToString)) / 100.0), "0"))

                        Exit For

                    Next

                End If
                '-----------------หักเงินเข้า กองทุนสำรองเลี้ยงชีพ----------------------------
                '-----------------หักเงินเข้า กองทุนทดแทน---------------------------------
                FTTotalCalWorkmen = _TotalCalSso

                If _FTMaxCalWorkmen > 0 Then

                    _SocialPayMax = CDbl(Format(((_FTMaxCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))

                    If (_TotalCalSso + _FTTotalCalWorkmenBefore) > _FTMaxCalWorkmen Then
                        FTTotalCalWorkmen = _FTMaxCalWorkmen
                    ElseIf FTTotalCalWorkmen > 0 Then
                        FTTotalCalWorkmen = FTTotalCalWorkmen
                    Else
                        FTTotalCalWorkmen = 0
                    End If

                    If _FTTotalCalWorkmenBefore > 0 Then
                        FTWorkmenAmt = CDbl(Format((((_CalSo + _FTTotalCalWorkmenBefore) * _FTMaxWorkmenRate) / 100.0), "0"))
                        FTWorkmenAmt = FTWorkmenAmt - _FTWorkmenAmtBefore
                    Else
                        FTWorkmenAmt = CDbl(Format(((FTTotalCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))
                    End If
                End If

                '-----------------หักเงินเข้า กองทุนทดแทน-------------------------------

                '--------- คิดประกันสังคม-----------
                _SocialPayMax = HCfg.HMaxSocialBaht
                _CalSo = 0
                _FCSocial = 0
                _TotalCalSso = (_TotalCalSso * SocialExchangeRate)
                _FNSocialBase = 0



                _FNEmpDiligent = 0
                _FTStateInDustin = ""
                _FNDeligentPeriod = 0

                If _CalIns <> "" Then
                    Dim _StateCalIns As Boolean = False
                    _Qry = "SELECT TOP 1 FNPayDeligent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMDiligentConfigHD WHERE FTDeligentCode='" & HI.UL.ULF.rpQuoted(_CalIns) & "' "
                    If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") = "1" Then
                        If Val(_PayTerm) Mod 2 = 1 Then

                            _FTSatrtCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                            _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1), -1)) 'วันแของเดือน
                            _StateCalIns = True
                        End If
                    Else

                        _StateCalIns = True
                    End If

                    If _StateCalIns Then
                        _Qry = " SELECT   ISNULL(PayIndus,0) As PayIndus , ISNULL(StateIndus,'') AS StateIndus,ISnuLL(FNDeligentPeriod,0) AS FNDeligentPeriod"
                        _Qry &= vbCrLf & "	FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.FN_CALCULATE_INDUST(" & Val(_EmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDateIns) & "','" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDateIns) & "','" & HI.UL.ULF.rpQuoted(_CalIns) & "')"

                        Dim _DtIns As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        If _DtIns.Rows.Count > 0 Then
                            _FNEmpDiligent = Val(_DtIns.Rows(0)!PayIndus.ToString)
                            _FTStateInDustin = _DtIns.Rows(0)!StateIndus.ToString
                            _FNDeligentPeriod = Val(_DtIns.Rows(0)!FNDeligentPeriod.ToString)
                        End If

                    End If
                End If





                Dim _tmpTotalincome As Double = 0
                Dim _DiffTotalincome As Double = 0
                Dim _tmpTotalNetPay As Double = 0
                Dim _DiffTotalNetPay As Double = 0
                Dim _FNServicefee, _FNFinTransFee As Double
                _FNServicefee = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNServicefee,0) AS FNServicefee  FROM     THRMCfgWelfareKM  Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")
                _FNFinTransFee = _FNServicefee = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNFinTransFee,0) AS FNFinTransFee  FROM     THRMCfgWelfareKM  Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")


                _tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                _tmpTotalNetPay = (_tmpTotalincome - (FTContributedAmt))


                _Net = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct), "0.00"))
                _FCBaht = _FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4

                _FNNetpay = Format((_Net - (FNUnionAmt + FTContributedAmt + _TaxAmt + Format(((FNSocialInsuranceEmployee) / SocialExchangeRate), "0.000"))), "0.00")
                _FNNetpayOrg = _FNNetpay

                _DiffTotalincome = _Net - _tmpTotalincome
                _DiffTotalNetPay = _FNNetpay - _tmpTotalNetPay

                If _tmpTotalincome <= 0 Then
                    _FNServicefee = 0
                    _FNFinTransFee = 0
                    _tmpTotalincome = 0
                    _tmpTotalNetPay = 0
                    _Net = 0
                    _FCBaht = 0
                    _FNNetpay = 0
                    _FNNetpayOrg = 0
                    _DiffTotalincome = 0
                    _DiffTotalNetPay = 0
                End If

                Dim _FNParturitionLeaveUS1 As Double = 0
                Dim _FNParturitionLeaveUS2 As Double = 0
                Dim _FNParturitionLeaveUS3 As Double = 0

                If (FNParturitionLeave > 0) Then
                    _FNParturitionLeaveUS1 = Double.Parse(Format(FNParturitionLeave / 3.0, "0.00"))
                    _FNParturitionLeaveUS2 = Double.Parse(Format(FNParturitionLeave / 3.0, "0.00"))
                    _FNParturitionLeaveUS3 = Double.Parse(Format(FNParturitionLeave / 3.0, "0.00"))
                    '' _FNParturitionLeaveUS3 ''' = FNParturitionLeave - (_FNParturitionLeaveUS1 + _FNParturitionLeaveUS2)

                End If



                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll (FTInsUser, FTInsDate, FTInsTime,"
                _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,FTEmpIdNo1,FTSocialNo,"
                _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
                _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId,  FNHSysPayRollPayId"
                _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
                _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
                _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
                _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
                _Qry &= vbCrLf & ",FNTotalWKNMin,  FNOt1Min, FNOt15Min, FNOt2Min"
                _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
                _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
                _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
                _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
                _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
                _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
                _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
                _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
                _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
                _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
                _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
                _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
                _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
                _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin, FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
                _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate , FNServicefee ,FNFinTransFee,FNSocialInsuranceEmployee , FNSocialInsuranceEmployer, FNUnionInsuranceEmployee   "
                _Qry &= vbCrLf & ", FNUnion "
                _Qry &= vbCrLf & ", FNParturitionLeaveUS1 "
                _Qry &= vbCrLf & ", FNParturitionLeaveUS2"
                _Qry &= vbCrLf & ", FNParturitionLeaveUS3"
                _Qry &= vbCrLf & ")"

                _Qry &= vbCrLf & " 	SELECT '" & HI.UL.ULF.rpQuoted(_User) & "',CONVERT(varchar(10),GetDate(),111),CONVERT(varchar(8),GetDate(),114)"
                _Qry &= vbCrLf & " 	,'" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ""
                _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo1) & "','" & HI.UL.ULF.rpQuoted(_FTSocialNo) & "','" & _EmpType & "','" & HI.UL.ULDate.ConvertEnDB(_PayDate) & "'"
                _Qry &= vbCrLf & " 	," & Val(_FTDeptCode) & ""
                _Qry &= vbCrLf & " 	," & Val(_FTDivCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTSectCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTUnitCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPos) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPaymentCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBankCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBranchCode) & " "
                _Qry &= vbCrLf & " 	,N'" & HI.UL.ULF.rpQuoted(_FTAccNo) & "'," & _TotalHoliDay & ""
                _Qry &= vbCrLf & " 	," & _FCSalary & ""
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNTimeMin & " / 60) + Convert(numeric(18,2),(( " & _GFNTimeMin & " %60) /100.00)) "
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1_5Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1_5Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT2Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT2Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2)," & _GFNOT3Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT3Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GFNOT4Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT4Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleavePay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleavePay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleaveNotPay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleaveNotPay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _Gtotalleave & " / 60) + Convert(numeric(18,2),(( " & _Gtotalleave & " %60) /100.00))"
                _Qry &= vbCrLf & " 	, " & _GFNTimeMin
                _Qry &= vbCrLf & " 	, " & _GFNOT1Min
                _Qry &= vbCrLf & " 	, " & _GFNOT1_5Min
                _Qry &= vbCrLf & ", " & _GFNOT2Min
                _Qry &= vbCrLf & "," & _GFNOT3Min
                _Qry &= vbCrLf & ",  " & _GFNOT4Min
                _Qry &= vbCrLf & ",  " & _GFNLateNormalMin
                _Qry &= vbCrLf & ",  " & _GFNLateNormalCut
                _Qry &= vbCrLf & ",  " & _GFNCutAbsent
                _Qry &= vbCrLf & ",  " & _GFNAbsent & "," & (_GFNTimeMin + _GFNOT1Min + _GFNOT1_5Min + _GFNOT2Min + _GFNOT3Min + _GFNOT4Min)
                _Qry &= vbCrLf & ",  " & _GtotalleavePay
                _Qry &= vbCrLf & ", " & _GtotalleaveNotPay
                _Qry &= vbCrLf & ", " & _Gtotalleave
                _Qry &= vbCrLf & ", " & _FNEmpBaht & " "
                _Qry &= vbCrLf & ", " & _nBahtOt1 & " "
                _Qry &= vbCrLf & "," & _nBahtOt15 & " "
                _Qry &= vbCrLf & "," & _nBahtOt2 & " "
                _Qry &= vbCrLf & "," & _nBahtOt3 & " "
                _Qry &= vbCrLf & "," & _nBahtOt4 & " "
                _Qry &= vbCrLf & "," & (_FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FNIncentiveAmt + _BonusAmt) & " "
                _Qry &= vbCrLf & "," & _FNEmpDiligent & " "
                _Qry &= vbCrLf & "," & _FCPayVacationBaht & " "
                _Qry &= vbCrLf & "," & _Lapaid & " "
                _Qry &= vbCrLf & "," & _LateCutAmt & " "
                _Qry &= vbCrLf & "," & _LateCutAmtAbsent & " "
                _Qry &= vbCrLf & "," & _nBahtAbsent & " "
                _Qry &= vbCrLf & "," & _TotalCalSso & " "
                _Qry &= vbCrLf & "," & _TotalCalTax & " "
                _Qry &= vbCrLf & "," & _FCAdd & " "
                _Qry &= vbCrLf & "," & _FCOtherAdd & " "
                _Qry &= vbCrLf & "," & _FCDeduct & " "
                _Qry &= vbCrLf & "," & _FCOtherDeduct & " "
                _Qry &= vbCrLf & "," & _Net & " "
                _Qry &= vbCrLf & "," & _FCSocial & " "
                _Qry &= vbCrLf & "," & _TaxAmt & " "
                _Qry &= vbCrLf & "," & _HBaht & " "
                _Qry &= vbCrLf & "," & (_FNNetpay) & ""
                _Qry &= vbCrLf & "," & (_Net + _FCAccumulateIncome) & ""
                _Qry &= vbCrLf & "," & (_FCSocial + _FCAccumulateSocial) & ""
                _Qry &= vbCrLf & "," & (_TaxAmt + _FCAccumulateTax) & ""
                _Qry &= vbCrLf & ",'" & _FTStateInDustin & "' "
                _Qry &= vbCrLf & "," & (FTTotalCalContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTCmpContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTTotalCalWorkmen) & ""
                _Qry &= vbCrLf & "," & (FTWorkmenAmt) & ""
                _Qry &= vbCrLf & "," & _AmtRetire & ""
                _Qry &= vbCrLf & "," & _GtotalleavePayCalSsoAmt & ""
                _Qry &= vbCrLf & "," & _WorkingDay & " "
                _Qry &= vbCrLf & "," & _WageAdjAdd & ""
                _Qry &= vbCrLf & "," & _FNIncentiveAmt & ""
                _Qry &= vbCrLf & "," & _FNNetpayOrg & ""
                _Qry &= vbCrLf & "," & _FNNetAttandanceAmt & ""
                _Qry &= vbCrLf & "," & _FNHealtCareAmt & ""
                _Qry &= vbCrLf & "," & _FNTransportAmt & ""
                _Qry &= vbCrLf & "," & _FNNetChildCareAmt & ""
                _Qry &= vbCrLf & "," & _FNNetOTMealAmt & ""
                _Qry &= vbCrLf & "," & _FNSocialBase & ""
                _Qry &= vbCrLf & "," & _FNWorkAgeSalary & ""
                _Qry &= vbCrLf & "," & _FNNetOTMealAmtUS & ""
                _Qry &= vbCrLf & "," & _FNExchangeRate & ""
                _Qry &= vbCrLf & "," & FNPayLeaveSickBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveSickBahtMin & ""
                _Qry &= vbCrLf & "," & FNPayLeaveBusinessBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveBusinessBahtMin & ""
                _Qry &= vbCrLf & "," & FNPayLeaveSpecialBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveSpecialBahtMin & ""
                _Qry &= vbCrLf & "," & FNParturitionLeave & ""
                _Qry &= vbCrLf & "," & GFNParturitionLeaveMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetAmt & ""
                _Qry &= vbCrLf & "," & _FNExchangeRateTHB & ""
                _Qry &= vbCrLf & "," & FNWorkDayInWeek & ""
                _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(_FTCalSocialSta) & "'"
                _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(_FTCalTaxSta) & "'"
                _Qry &= vbCrLf & "," & _DiffTotalincome & ""
                _Qry &= vbCrLf & "," & _DiffTotalNetPay & ""
                _Qry &= vbCrLf & "," & SocialExchangeRate & ""
                _Qry &= vbCrLf & "," & TaxExchangeRate & ""
                _Qry &= vbCrLf & "," & _FNServicefee
                _Qry &= vbCrLf & "," & _FNFinTransFee
                _Qry &= vbCrLf & "," & FNSocialInsuranceEmployee
                _Qry &= vbCrLf & "," & FNSocialInsuranceEmployer
                _Qry &= vbCrLf & "," & FNUnionAmt
                _Qry &= vbCrLf & "," & _FNUnion

                _Qry &= vbCrLf & "," & _FNParturitionLeaveUS1
                _Qry &= vbCrLf & "," & _FNParturitionLeaveUS2
                _Qry &= vbCrLf & "," & _FNParturitionLeaveUS3


                '  , FNVacationRetMin, FNVacationRetAmt
                '_FNNetpayOrg
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)



                ' Start คิดค่า seniority ind
                If ((_WorkingDayN_Seniority >= 21) Or _WorkAgeSeniority >= 1) And (_FDDateEnd >= _EndDate Or _FDDateEnd = "") Then  'จ่ายค่า seniority ind สำหรับพนักงานอายุงาน 1 เดือนขึ้นไป (กรณีเข้างานเดือนเดียวกันกับงวดการจ่าย 21 วันขึ้นไปให้คิดเป็นเดือน) และสถานะต้องเป็นพนักงาน
                    ''If (_FDDateEnd >= _EndDate Or _FDDateEnd = "") Then
                    Dim _SeniorityIndOld As Double = 0
                    'For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTFinCode='044'")
                    '    _SeniorityIndOld = _SeniorityIndOld + Val(R2!FCFinAmt.ToString)
                    'Next
                    Try
                        _SeniorityIndOld = (_FCOtherAdd - _FTOtherAddCalculateTax)
                    Catch ex As Exception

                    End Try


                    Dim _dtSeniorityAmt As New DataTable
                    _Qry = "Select  T.FNSeniorityAmt, T.FNSalaryPerDay , T.FTStatePayback , T.FTPaybackYear"
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgSeniorityIndemnty AS T WITH(NOLOCK)"
                    _Qry &= vbCrLf & " where  T.FNHSysEmpTypeId=" & Integer.Parse(Val(_EmpType))
                    _Qry &= vbCrLf & " and T.FTPayTerm='" & _PayTerm & "'"
                    _Qry &= vbCrLf & " and  isnull(T.FTStateActive,'0') = '1'"
                    _dtSeniorityAmt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    If _dtSeniorityAmt.Rows.Count > 0 Then

                        For Each Rc As DataRow In _dtSeniorityAmt.Select("FTPaybackYear='" & _PayYear & "'")

                            _SeniorityAmt += +Double.Parse(Rc!FNSeniorityAmt.ToString) * Double.Parse("0" & MoneyRetSeniorityPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay, _SeniorityIndOld))

                            Exit For
                        Next
                        For Each Rc As DataRow In _dtSeniorityAmt.Select("FTPaybackYear >='" & Microsoft.VisualBasic.Left(_FDDateStart, 4) & "' and FTStatePayback='1'")
                            _SeniorityAmt += +Double.Parse(Rc!FNSeniorityAmt.ToString) * Double.Parse(Rc!FNSalaryPerDay.ToString)
                            Exit For
                        Next
                    End If
                    _FCAdd += +_SeniorityAmt
                End If
                'End คิดค่า seniority ind


                If _FTCalSocialSta <> "1" Then ' 1 ไม่่คิดประกันสังคม


                    _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FNTotalRecalSSO , sum( isnull(P.FNSocialInsuranceEmployee , 0 ) ) AS FNSocialInsuranceEmployee "
                    _Qry &= vbCrLf & " ,  sum( isnull(P.FNSocialInsuranceEmployer , 0 ) ) AS FNSocialInsuranceEmployer   "
                    _Qry &= vbCrLf & "  ,SUM(ISNULL(P.FNSocial,0)  ) AS FNSocial "
                    _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                    _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                    _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                    _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                    _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                    _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                    _Qry &= vbCrLf & "  Select FNMonth"
                    _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & "  )  "

                    Dim _DtSsoc As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    If _DtSso.Rows.Count > 0 Then
                        _SsoBefore = Val(_DtSsoc.Rows(0)!FNTotalRecalSSO.ToString)
                        _SsoBeforeAmt = Val(_DtSsoc.Rows(0)!FNSocial.ToString)
                        _InsuranceEmpyeeBefore = Val(_DtSsoc.Rows(0)!FNSocialInsuranceEmployee.ToString)
                        _InsuranceEmpyerBefore = Val(_DtSsoc.Rows(0)!FNSocialInsuranceEmployer.ToString)
                    End If
                    _DtSso.Dispose()

                    _TotalCalSso = _SsoBefore + _TotalCalSso
                    For Each Rsso As DataRow In _tmpSocailRateKM.Select("FNSocialStartRange<=" & _TotalCalSso & " AND  FNSocialEndRange>=" & _TotalCalSso & "")

                        _FNSocialBase = Val(Rsso!FNSocialBase.ToString)
                        _FCSocial = Val(Rsso!FNSocialAmt.ToString)
                        '_FCSocial = (_FNSocialBase * FNSocialEmployerRate) / 100
                        FNSocialInsuranceEmployer = (_FNSocialBase * _SocialRate) / 100
                        FNSocialInsuranceEmployee = (_FNSocialBase * _SocialRate) / 100

                        Exit For
                    Next


                    FNSocialInsuranceEmployer = FNSocialInsuranceEmployer - _InsuranceEmpyerBefore

                    If (_StateSocialOnlyCmppay) Then
                        'บริษัทจ่ายให้ 
                        FNSocialInsuranceEmployee = 0
                        _FCSocial = 0
                    Else
                        FNSocialInsuranceEmployee = FNSocialInsuranceEmployee - _InsuranceEmpyeeBefore

                        '   _FCSocial = _FCSocial - _SsoBeforeAmt
                        '   _FCSocial = CDbl(Format((FNSocialInsuranceEmployee / SocialExchangeRate), "0.00"))
                        _FCSocial = Math.Round(Decimal.Parse(((FNSocialInsuranceEmployee + _InsuranceEmpyeeBefore) / SocialExchangeRate)), 2) - Math.Round(Decimal.Parse((_InsuranceEmpyeeBefore / SocialExchangeRate)), 2)

                    End If

                Else
                    _TotalCalSso = 0
                End If

                If _FTCalTaxSta <> "1" Then
                    Dim _TaxBefore As Double = 0
                    Dim _TaxBeforeAmt As Double = 0
                    Dim _DeReCalTax As Double = 0

                    For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTStaTax='0'")
                        _DeReCalTax = _DeReCalTax + Val(R2!FCFinAmt.ToString)
                    Next



                    If (_PayTerm Mod 2 = 1) And _FTEmpState = "3" Then

                        'MsgBox("1")

                        With _EmpDisTax
                            .FTSosial = 0
                            .BaseSlary = CDbl(Format((_TotalCalTax * TaxExchangeRate), "0.000")) + CDbl(Format((_FCSalary / 2) * TaxExchangeRate, "0.000"))
                            .OtherSlary = _FTOtherAddCalculateTax + _FTAddCalculateTax + _FNEmpDiligent + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                            .OtherSlary = Format(.OtherSlary * TaxExchangeRate, "0.000")
                            .Cfg_ContributedDeducToTheFund = 0

                        End With

                        _TotalCalTax = (_EmpDisTax.BaseSlary + _EmpDisTax.OtherSlary)
                        Dim _TaxOther As Double = 0 '_EmpDisTax.OtherSlary 
                        Dim _TaxOtherAmt As Double = 0
                        Dim _Total As Double = GETnRecalDiscTax(_EmpDisTax, _EmpTaxYear)

                        _EmpTaxYear.FTSocial = FNSocialInsuranceEmployee
                        _EmpTaxYear.FTTotalCalTax = _Total - (FNSocialInsuranceEmployee + _InsuranceEmpyeeBefore)
                        Dim _TotalTax As Double = GETnTax_KM(_EmpTaxYear.FTTotalCalTax, _TaxOther, _TaxOtherAmt)
                        _TotalTax = (_TotalTax / 2)
                        _EmpTaxYear.FTTotalTax = _TotalTax 'ภาษีที่ต้องจ่าย

                        _TotalTax = CDbl(Format(_TotalTax, "0.000"))
                        If _TotalTax > 0 Then
                            _TaxAmt = CDbl(Format((_TotalTax / TaxExchangeRate), "0.000"))
                        Else
                            _TaxAmt = 0
                        End If
                        _EmpTaxYear.FTTotalTaxPay = _TaxAmt + _FCAccumulateTax
                        _TotalCalTax = (_TotalCalTax / 2)


                    Else


                        '_Qry = "  SELECT  TOP 1 case when max(P.FNParturitionLeaveBaht) > 0  then  sum(( (P.FNHealtCareAmt*24)+ ( P.FNTransportAmt *24)+   P.FNChildCareAmt   ))   else 0 end  AS Amt"
                        '_Qry &= vbCrLf & ",  case when max(P.FNParturitionLeaveBaht) > 0  then "
                        '_Qry &= vbCrLf & "  (select sum(PG.FNOTMealAmtUS) FROM dbo.THRTPayRoll AS PG WITH (NOLOCK)"
                        '_Qry &= vbCrLf & "   where PG.FTPayYear+ PG.FTPayTerm >= convert(varchar(30), CONVERT(int ,min( P.FTPayYear)) - 1  )+ min(P.FTPayTerm)  "
                        '_Qry &= vbCrLf & "    AND PG.FTEmpIdNo =min(P.FTEmpIdNo  )) else 0 end as FNOTMealAmtUS "
                        '_Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                        '_Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        '_Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                        '_Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                        '_Qry &= vbCrLf & " AND PD.FTPayTerm <= '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                        '_Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                        '_Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                        '_Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                        '_Qry &= vbCrLf & "  Select FNMonth"
                        '_Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                        '_Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                        '_Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        '_Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                        '_Qry &= vbCrLf & "  )  "

                        'Dim _MealParturitionAmt As Double = 0
                        'Dim _oMdt As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        'For Each Rz As DataRow In _oMdt.Rows
                        '    _MealParturitionAmt = Val(Rz!FNOTMealAmtUS.ToString) + Val(Rz!Amt.ToString)
                        'Next


                        '_TotalCalTax = _TotalCalTax - _MealParturitionAmt
                        _TotalCalTax = IIf(_TotalCalTax < 0, 0, _TotalCalTax)
                        'Try
                        '    _TotalCalTax = _TotalCalTax - (_FCOtherAdd - _FTOtherAddCalculateTax)
                        'Catch ex As Exception

                        'End Try


                        _Qry = " SELECT  TOP 1 case when max(isnull(P.FNParturitionLeaveBaht,0)) <= 0 then   SUM((isnull(P.FNTotalIncome,0) - ( P.FNHealtCareAmt+ P.FNTransportAmt+ P.FNOTMealAmtUS + P.FNChildCareAmt +  isnull(F44.FCTotalFinAmt,0) +  isnull(F45.FCTotalFinAmt,0) +  isnull(F46.FCTotalFinAmt,0)+  isnull(F47.FCTotalFinAmt,0) +  isnull(F48.FCTotalFinAmt,0)) ) * P.FNTaxExchangeRate ) else  SUM((isnull(P.FNTotalIncome,0) ) * P.FNTaxExchangeRate ) end  AS FNTotalRecalTAX "
                        _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTax,0) *  ISNULL(P.FNTaxExchangeRate,1)) AS FNTax"
                        _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK)"
                        _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '044') F44 "
                        _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '045') F45 "
                        _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '046') F46 "
                        _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '047') F47 "
                        _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '048') F48 "
                        _Qry &= vbCrLf & " , (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                        _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                        _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                        _Qry &= vbCrLf & " AND PD.FTPayTerm <  '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                        _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                        _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                        _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                        _Qry &= vbCrLf & "  Select FNMonth"
                        _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                        _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                        _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                        _Qry &= vbCrLf & "  )  "


                        Dim _DtTax As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        If _DtTax.Rows.Count > 0 Then
                            _TaxBefore = Val(_DtTax.Rows(0)!FNTotalRecalTAX.ToString)
                            _TaxBeforeAmt = Val(_DtTax.Rows(0)!FNTax.ToString)
                        End If
                        _DtTax.Dispose()

                        _EmpDisTax.BeforeIncom = 0
                        _EmpDisTax.BeforeTax = _TaxBeforeAmt
                        _TaxBefore = IIf(_TotalCalTax <= 0, 0, _TaxBefore)


                        'MsgBox("_TaxBefore" & _TaxBefore)
                        'MsgBox("_TotalCalTax" & _TotalCalTax)

                        With _EmpDisTax
                            .FTSosial = 0 '_FCAccumulateSocial + _FCSocial + (_FCSocial * (_TotalInstalment - _Instalment))

                            'If .FTSosial > (((_SocialMaxIncome * _SocialRate) / 100.0) * 12) Then
                            '    .FTSosial = CDbl(Format((((_SocialMaxIncome * _SocialRate) / 100.0) * 12), "0.00"))
                            'End If

                            .BaseSlary = CDbl(Format((_TotalCalTax * TaxExchangeRate), "0.000")) + _TaxBefore '(_TotalCalTax * (_TotalInstalment - _Instalment)) + _TotalCalTax
                            .OtherSlary = 0 ' _FTOtherAddCalculateTax + _FTAddCalculateTax + _FNEmpDiligent + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                            .OtherSlary = Format(.OtherSlary * TaxExchangeRate, "0.000") '+ _FNNetOTMealAmt
                            ' _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary
                            .Cfg_ContributedDeducToTheFund = 0 '.Cfg_ContributedDeducToTheFund + FTContributedAmt + (FTContributedAmt * (_TotalInstalment - _Instalment))

                        End With


                        _TotalCalTax = (_EmpDisTax.BaseSlary + _EmpDisTax.OtherSlary)
                        Dim _TaxOther As Double = 0 '_EmpDisTax.OtherSlary
                        Dim _TaxOtherAmt As Double = 0
                        Dim _Total As Double = GETnRecalDiscTax(_EmpDisTax, _EmpTaxYear)




                        _EmpTaxYear.FTSocial = FNSocialInsuranceEmployee '_EmpDisTax.FTSosial '   _FCAccumulateSocial + _FCSocial  'ประกันสังคม

                        _EmpTaxYear.FTTotalCalTax = _Total - (FNSocialInsuranceEmployee + _InsuranceEmpyeeBefore)   '_EmpDisTaxChildAmt

                        'MsgBox("2")
                        'MsgBox("_EmpTaxYear.FTTotalCalTax" & _EmpTaxYear.FTTotalCalTax)
                        'MsgBox("_TaxOther" & _TaxOther)

                        'MsgBox("_TaxOtherAmt" & _TaxOtherAmt)



                        Dim _TotalTax As Double = GETnTax_KM(_EmpTaxYear.FTTotalCalTax, _TaxOther, _TaxOtherAmt)

                        'MsgBox("_TotalTax" & _TotalTax)

                        _EmpTaxYear.FTTotalTax = _TotalTax 'ภาษีที่ต้องจ่าย

                        _TotalTax = CDbl(Format(_TotalTax - _EmpDisTax.BeforeTax, "0.000"))

                        If _TotalTax > 0 Then
                            _TaxAmt = CDbl(Format((_TotalTax / TaxExchangeRate), "0.000")) ' CDbl(Format((_TotalTax / ((_TotalInstalment - _Instalment) + 1)), "0.00"))


                            ' _TaxAmt = _TaxAmt + _TaxOtherAmt
                        Else
                            _TaxAmt = 0
                        End If
                        'If _TaxBeforeAmt > 0 Then
                        '    _TaxBeforeAmt = CDbl(Format((_TaxBeforeAmt / TaxExchangeRate), "0.00"))
                        'Else
                        '    _TaxBeforeAmt = 0
                        'End If

                        _EmpTaxYear.FTTotalTaxPay = _TaxAmt + _FCAccumulateTax


                        _TotalCalTax = _TotalCalTax - _TaxBefore

                        ' _TaxAmt = _TaxAmt - _TaxBeforeAmt



                    End If




                Else

                    '_TotalCalTax = 0
                    '_TaxAmt = 0

                End If




                _FNServicefee = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNServicefee,0) AS FNServicefee  FROM     THRMCfgWelfareKM  Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")
                _FNFinTransFee = _FNServicefee = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNFinTransFee,0) AS FNFinTransFee  FROM     THRMCfgWelfareKM  Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")

                'Update TotalRecalTax  สำหรับคนลาคลอด
                '_tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                '_tmpTotalNetPay = (_tmpTotalincome - (FTContributedAmt))

                '_Net = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct), "0.00"))
                '_FCBaht = _FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4

                '_FNNetpay = Format((_Net - (FTContributedAmt + _TaxAmt + Format(((FNSocialInsuranceEmployee) / SocialExchangeRate), "0.000"))), "0.00")
                '_FNNetpayOrg = _FNNetpay

                _tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                _tmpTotalNetPay = (_tmpTotalincome - (FTContributedAmt))



                _Net = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct), "0.00"))
                _FCBaht = _FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4

                _FNNetpay = Format((_Net - (FNUnionAmt + FTContributedAmt + _TaxAmt + Format(((FNSocialInsuranceEmployee) / SocialExchangeRate), "0.000"))), "0.00")
                _FNNetpayOrg = _FNNetpay

                _DiffTotalincome = _Net - _tmpTotalincome
                _DiffTotalNetPay = _FNNetpay - _tmpTotalNetPay
                If _tmpTotalincome <= 0 Then
                    _FNServicefee = 0
                    _FNFinTransFee = 0
                    _tmpTotalincome = 0
                    _tmpTotalNetPay = 0
                    _TaxAmt = 0
                    _Net = 0
                    _FCBaht = 0
                    _FNNetpay = 0
                    _FNNetpayOrg = 0
                    _FNNetpay = 0
                    _FNNetpayOrg = 0
                    _DiffTotalincome = 0
                    _DiffTotalNetPay = 0
                End If

                'MsgBox("_TaxAmt:" & _TaxAmt)

                'FNNetIncome
                _Qry = "Update [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & "set FNNetIncome=" & _Net
                _Qry &= vbCrLf & ", FNTotalIncome=" & _Net

                _Qry &= vbCrLf & " ,FNNetpay=" & _FNNetpay
                _Qry &= vbCrLf & " ,FNSocial=" & _FCSocial
                _Qry &= vbCrLf & " , FNTax=" & _TaxAmt
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)



                If _FTCalTaxSta <> "1" And _FTEmpIdNo <> "" Then
                    '-----------------------------ภาษี -----------------------------------------------------
                    _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTaxYear "
                    _Qry &= vbCrLf & "  WHERE FTYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & "  AND  FTEmpIdNo='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' AND FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " "
                    _Qry &= vbCrLf & "  INSERT INTO THRTTaxYear (FNHSysCmpId,FTYear, FTEmpIdNo, FNAmt, FNExpenses, FNNetAmt, "
                    _Qry &= vbCrLf & "  FNModEmp, FNModMate, FNChildNotLern, FNChildLern, FNChildNotLernAmt, FNChildLernAmt, FNInsurance, FNProvidentfund, FNInterest, FNSocial, FNDonation, "
                    _Qry &= vbCrLf & "  FNProvidentfundOver, FNGPF, FNSavingsFund, FNCommutation, FNUnitRMF, FNModFather, FNModMother, FNModFatherMate, FNModMotherMate, FNUnitLTF, "
                    _Qry &= vbCrLf & "  FNDonationLern, FNParentsHealthInsurance, FNSupportSport, FNAcquisitionOfProperty, FNPension, FNTravel, FNTotalCalTax, FNTotalTax,FNTotalTaxPay )"
                    _Qry &= vbCrLf & "  SELECT " & HI.ST.SysInfo.CmpID & ",'" & _PayYear & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "

                    With _EmpTaxYear

                        _Qry &= vbCrLf & "," & .FTAmt & " "
                        _Qry &= vbCrLf & "," & .FTExpenses & ""
                        _Qry &= vbCrLf & "," & .FTNetAmt & ""
                        _Qry &= vbCrLf & "," & .FTModEmp & ""
                        _Qry &= vbCrLf & "," & .FTModMate & ""
                        _Qry &= vbCrLf & "," & .FNChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FNChildLern & " "
                        _Qry &= vbCrLf & "," & .FTChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FTChildLern & ""
                        _Qry &= vbCrLf & "," & .FTInsurance & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfund & ""
                        _Qry &= vbCrLf & "," & .FTInterest & ""
                        _Qry &= vbCrLf & "," & .FTSocial & ""
                        _Qry &= vbCrLf & "," & .FTDonation & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfundOver & ""
                        _Qry &= vbCrLf & "," & .FTGPF & ""
                        _Qry &= vbCrLf & "," & .FTSavingsFund & ""
                        _Qry &= vbCrLf & "," & .FTCommutation & ""
                        _Qry &= vbCrLf & "," & .FTUnitRMF & ""
                        _Qry &= vbCrLf & "," & .FTModFather & ""
                        _Qry &= vbCrLf & "," & .FTModMother & ""
                        _Qry &= vbCrLf & "," & .FTModFatherMate & ""
                        _Qry &= vbCrLf & "," & .FTModMotherMate & ""
                        _Qry &= vbCrLf & "," & .FTUnitLTF & ""
                        _Qry &= vbCrLf & "," & .FTDonationLern & ""
                        _Qry &= vbCrLf & "," & .FTParentsHealthInsurance & ""
                        _Qry &= vbCrLf & "," & .FTSupportSport & ""
                        _Qry &= vbCrLf & "," & .FTAcquisitionOfProperty & ""
                        _Qry &= vbCrLf & "," & .FTPension & ""
                        _Qry &= vbCrLf & "," & .FTTravel & ""
                        _Qry &= vbCrLf & "," & .FTTotalCalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTaxPay & ""

                    End With

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    '----------------------------- ภาษี -----------------------------------------------------
                End If

                '-----------------------------รายได้อื่นๆ -----------------------------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Dim _AllFincode As String = ""

                For Each _R As DataRow In _DtFin.Rows
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTFinCode, FTFinAmt," & _R!FCTotalFinAmt.ToString & ",0," & _R!FCTotalFinAmt.ToString & ""
                    _Qry &= vbCrLf & " FROM  THRMEmployeeFin "
                    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND  FTFinCode = ('" & _AllFincode & "') "

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Next

                For Each _R As DataRow In _dt.Select("FCFinAmt<>0")
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_R!FCFinAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FCFinAmtOther=" & _R!FCFinAmt.ToString & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _AllFincode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then

                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ",'" & _AllFincode & "',0, 0," & _R!FCFinAmt.ToString & "," & _R!FCFinAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    End If

                Next


                '' payroll  fin


                If _ShiftAmt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='001' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '001'," & _ShiftValue.ToString & "," & _ShiftAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _ShiftOTAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftOTAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='007' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '007'," & _ShiftOTValue.ToString & "," & _ShiftOTAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _SeniorityAmt > 0 Then

                    Dim _xFinCode As String = "046"
                    If (_FTStateWorkpermit = "1") Then
                        _xFinCode = "047"
                    End If
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_SeniorityAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _xFinCode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '" & _xFinCode & "'," & _SeniorityAmt.ToString & "," & _SeniorityAmt.ToString & ""
                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _BonusAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_BonusAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='008' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _BonusAmt.ToString & "," & _BonusAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _FNIncentiveAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNIncentiveAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='011' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '011'," & _FNIncentiveAmt.ToString & "," & _FNIncentiveAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If FNUnionAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(FNUnionAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='108' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '108'," & Val(FNUnionAmt.ToString) & "," & Val(FNUnionAmt.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _FNEmpDiligent > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNEmpDiligent.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    If _FNDeligentPeriod = 0 Then
                        _Qry &= vbCrLf & " AND FTFinCode='008' "
                    Else
                        _Qry &= vbCrLf & " AND FTFinCode='009' "

                    End If


                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        If _FNDeligentPeriod = 0 Then
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Else

                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '009'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                        End If
                    End If

                End If








                '' for calculate sso pension ประกันสังคมเกษียณ

                Dim _FNTotalIncomeSum As Double = 0


                '' check resgin   and  check  period 2 of month     _StartDate    _EndDate   _FDDateEnd

                Dim pension_FNParturitionLeaveUS1 As Double = 0
                Dim pension_FNParturitionLeaveUS2 As Double = 0
                Dim pension_FNParturitionLeaveUS3 As Double = 0


                ''งวดที่ 1 
                ''  IfVal(_PayTerm) Mod 2 = 1 And (_FDDateEnd >= _StartDate And _FDDateEnd <= _EndDate And _FDDateEnd <> "") Or FNParturitionLeave > 0 Then
                If Val(_PayTerm) Mod 2 = 1 And ((_FDDateEnd <> "") Or FNParturitionLeave > 0) Then
                    _Qry = " SELECT   top 1    SUM((isnull(P.FNTotalIncome,0) - (  isnull(F44.FCTotalFinAmt,0) +  isnull(F45.FCTotalFinAmt,0) +  isnull(F46.FCTotalFinAmt,0)+  isnull(F47.FCTotalFinAmt,0) +  isnull(F19.FCTotalFinAmt,0)) ) )   AS FNTotalIncome "

                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNParturitionLeaveUS1,0) ) AS FNParturitionLeaveUS1 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNParturitionLeaveUS2,0) ) AS FNParturitionLeaveUS2 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNParturitionLeaveUS3,0) ) AS FNParturitionLeaveUS3 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNPensionSchemeAdvance2,0) ) AS FNPensionSchemeAdvance2 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNPensionSchemeAdvance3,0) ) AS FNPensionSchemeAdvance3 "


                    '' _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTax,0) *  ISNULL(P.FNTaxExchangeRate,1)) AS FNTax"
                    _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK)"
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '044') F44 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '045') F45 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '046') F46 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '047') F47 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '019') F19 "
                    _Qry &= vbCrLf & " , (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                    _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "AND ISNULL(P.FNTotalIncome,0) > 0 "
                    _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                    ''_Qry &= vbCrLf & " AND PD.FTPayTerm <  '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                    _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                    _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                    _Qry &= vbCrLf & "  Select FNMonth"
                    _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & "  )  "

                    Dim _DtTotal As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    If _DtTotal.Rows.Count > 0 Then
                        _FNTotalIncomeSum = Val(_DtTotal.Rows(0)!FNTotalIncome.ToString)
                        pension_FNParturitionLeaveUS1 = Val(_DtTotal.Rows(0)!FNParturitionLeaveUS1.ToString)
                        pension_FNParturitionLeaveUS2 = Val(_DtTotal.Rows(0)!FNParturitionLeaveUS2.ToString)
                        pension_FNParturitionLeaveUS3 = Val(_DtTotal.Rows(0)!FNParturitionLeaveUS3.ToString)


                    End If
                    _DtTotal.Dispose()


                    Dim _FNTotalIncomeSum2 As Double = 0
                    Dim _FNTotalIncomeSum3 As Double = 0

                    If (_FNTotalIncomeSum) >= 2 Then



                        _FNTotalIncomeSum = (_FNTotalIncomeSum - (pension_FNParturitionLeaveUS2 + pension_FNParturitionLeaveUS3)) * SocialExchangeRate

                        _FNTotalIncomeSum2 = (pension_FNParturitionLeaveUS2) * SocialExchangeRate
                        _FNTotalIncomeSum3 = (pension_FNParturitionLeaveUS3) * SocialExchangeRate

                        Dim _FNTotalIncomePension As Double = 0
                        Dim _FNTotalIncomePensionDefault As Double = 0

                        _Qry = " SELECT  FNHSysPensionRankID "
                        _Qry &= vbCrLf & " ,[FNSeq],[FNTotalRecalFrom],[FNTotalRecalTo] "
                        _Qry &= vbCrLf & " ,[FNCalPensionType],[FNTotalRecalDefault] "
                        _Qry &= vbCrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].[dbo].[THRMCfgSocailKMPensionRank]  "
                        _Qry &= vbCrLf & ""

                        Dim _DtPensionRank As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        For Each Rp As DataRow In _DtPensionRank.Select("FNTotalRecalFrom<=" & _FNTotalIncomeSum & " AND  FNTotalRecalTo>=" & _FNTotalIncomeSum & "")
                            If (Rp!FNCalPensionType.ToString = "0") Then
                                _FNTotalIncomePension = Val(Rp!FNTotalRecalDefault.ToString)
                            Else
                                _FNTotalIncomePension = Val(_FNTotalIncomeSum)
                            End If

                        Next




                        Dim _FNPensionEmp As Double = 0
                        Dim _FNPensionCmp As Double = 0

                        '_FNPensionEmp = _FNTotalIncomePension * 0.02   
                        '_FNPensionCmp = _FNTotalIncomePension * 0.02

                        _FNPensionEmp = (Format(((_FNTotalIncomePension * 0.02) / SocialExchangeRate), "0.00"))
                        _FNPensionCmp = (Format(((_FNTotalIncomePension * 0.02) / SocialExchangeRate), "0.00"))


                        Dim _FNPension2 As Double = 0

                        Dim _FNPension3 As Double = 0

                        If _FNTotalIncomeSum2 > 0 And _FNTotalIncomeSum3 > 0 Then
                            _FNPension2 = (Format(((_FNTotalIncomeSum2 * 0.02) / SocialExchangeRate), "0.00"))
                            _FNPension3 = (Format(((_FNTotalIncomeSum3 * 0.02) / SocialExchangeRate), "0.00"))
                        End If





                        _FNNetpay = Format((_FNNetpay - (_FNPensionEmp + _FNPension2 + _FNPension3)), "0.00")




                        If _FNNetpay < 0 Then
                            _FNNetpay = 0
                        End If

                        'FNNetIncome
                        _Qry = "Update [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                        _Qry &= vbCrLf & "set FNTotalRecalPensionScheme=" & Val(_FNTotalIncomeSum)
                        _Qry &= vbCrLf & ", FNPensionSchemeRateEmp=" & Val(2)
                        _Qry &= vbCrLf & " ,FNPensionSchemeRateCmp=" & Val(2)
                        _Qry &= vbCrLf & " ,FNPensionScheme=" & Val(_FNPensionEmp)
                        _Qry &= vbCrLf & " , FNPensionSchemeCmp=" & Val(_FNPensionCmp)

                        _Qry &= vbCrLf & " , FNPensionSchemeAdvance2=" & Val(_FNPension2)
                        _Qry &= vbCrLf & " , FNPensionSchemeAdvance3=" & Val(_FNPension3)

                        _Qry &= vbCrLf & " ,FNNetpay=" & _FNNetpay

                        _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                        _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                        _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    End If


                    '' งวดที่สองของเดือน
                ElseIf Val(_PayTerm) Mod 2 = 0 Then




                    ''check  คนที่ลาคลอดงวด1 



                    _Qry = " SELECT   top 1    SUM((isnull(P.FNTotalIncome,0) - (  isnull(F44.FCTotalFinAmt,0) +  isnull(F45.FCTotalFinAmt,0) +  isnull(F46.FCTotalFinAmt,0)+  isnull(F47.FCTotalFinAmt,0) +  isnull(F19.FCTotalFinAmt,0)) ) )   AS FNTotalIncome "
                    '' _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTax,0) *  ISNULL(P.FNTaxExchangeRate,1)) AS FNTax"
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNParturitionLeaveUS1,0) ) AS FNParturitionLeaveUS1 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNParturitionLeaveUS2,0) ) AS FNParturitionLeaveUS2 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNParturitionLeaveUS3,0) ) AS FNParturitionLeaveUS3 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNPensionSchemeAdvance2,0) ) AS FNPensionSchemeAdvance2 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNPensionSchemeAdvance3,0) ) AS FNPensionSchemeAdvance3 "



                    _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK)"
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '044') F44 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '045') F45 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '046') F46 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '047') F47 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '019') F19 "
                    _Qry &= vbCrLf & " , (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                    _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "AND ISNULL(P.FNTotalIncome,0) > 0 "
                    _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                    ''_Qry &= vbCrLf & " AND PD.FTPayTerm <  '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND P.FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & " AND P.FTPayTerm='" & HI.UL.ULF.rpQuoted(Val(_PayTerm) - 1) & "' "

                    Dim _DtTotal1 As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    If _DtTotal1.Rows.Count > 0 Then
                        _FNTotalIncomeSum = Val(_DtTotal1.Rows(0)!FNTotalIncome.ToString)

                        pension_FNParturitionLeaveUS1 = Val(_DtTotal1.Rows(0)!FNParturitionLeaveUS1.ToString)
                        pension_FNParturitionLeaveUS2 = Val(_DtTotal1.Rows(0)!FNParturitionLeaveUS2.ToString)
                        pension_FNParturitionLeaveUS3 = Val(_DtTotal1.Rows(0)!FNParturitionLeaveUS3.ToString)

                    End If

                    Dim FNParturitionLeave_PeriodOne As String = ""

                    If pension_FNParturitionLeaveUS1 > 0 Then
                        FNParturitionLeave_PeriodOne = "y"
                    End If



                    _Qry = " SELECT   top 1    SUM((isnull(P.FNTotalIncome,0) - (  isnull(F44.FCTotalFinAmt,0) +  isnull(F45.FCTotalFinAmt,0) +  isnull(F46.FCTotalFinAmt,0)+  isnull(F47.FCTotalFinAmt,0) +  isnull(F19.FCTotalFinAmt,0)) ) )   AS FNTotalIncome "
                    '' _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTax,0) *  ISNULL(P.FNTaxExchangeRate,1)) AS FNTax"
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNParturitionLeaveUS1,0) ) AS FNParturitionLeaveUS1 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNParturitionLeaveUS2,0) ) AS FNParturitionLeaveUS2 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNParturitionLeaveUS3,0) ) AS FNParturitionLeaveUS3 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNPensionSchemeAdvance2,0) ) AS FNPensionSchemeAdvance2 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNPensionSchemeAdvance3,0) ) AS FNPensionSchemeAdvance3 "



                    _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK)"
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '044') F44 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '045') F45 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '046') F46 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '047') F47 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '019') F19 "
                    _Qry &= vbCrLf & " , (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                    _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "AND ISNULL(P.FNTotalIncome,0) > 0 "
                    _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                    ''_Qry &= vbCrLf & " AND PD.FTPayTerm <  '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                    _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                    _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                    _Qry &= vbCrLf & "  Select FNMonth"
                    _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & "  )  "


                    Dim _DtTotal As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    If _DtTotal.Rows.Count > 0 Then
                        _FNTotalIncomeSum = Val(_DtTotal.Rows(0)!FNTotalIncome.ToString)

                        pension_FNParturitionLeaveUS1 = Val(_DtTotal.Rows(0)!FNParturitionLeaveUS1.ToString)
                        pension_FNParturitionLeaveUS2 = Val(_DtTotal.Rows(0)!FNParturitionLeaveUS2.ToString)
                        pension_FNParturitionLeaveUS3 = Val(_DtTotal.Rows(0)!FNParturitionLeaveUS3.ToString)

                    End If
                    _DtTotal.Dispose()


                    'If (_FNTotalIncomeSum) >= 2 Then

                    '    _FNTotalIncomeSum = _FNTotalIncomeSum * SocialExchangeRate

                    '    Dim _FNTotalIncomePension As Double = 0
                    '    Dim _FNTotalIncomePensionDefault As Double = 0

                    '    _Qry = " SELECT  FNHSysPensionRankID "
                    '    _Qry &= vbCrLf & " ,[FNSeq],[FNTotalRecalFrom],[FNTotalRecalTo] "
                    '    _Qry &= vbCrLf & " ,[FNCalPensionType],[FNTotalRecalDefault] "
                    '    _Qry &= vbCrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].[dbo].[THRMCfgSocailKMPensionRank]  "
                    '    _Qry &= vbCrLf & ""

                    '    Dim _DtPensionRank As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                    '    For Each Rp As DataRow In _DtPensionRank.Select("FNTotalRecalFrom<=" & _FNTotalIncomeSum & " AND  FNTotalRecalTo>=" & _FNTotalIncomeSum & "")
                    '        If (Rp!FNCalPensionType.ToString = "0") Then
                    '            _FNTotalIncomePension = Val(Rp!FNTotalRecalDefault.ToString)
                    '        Else
                    '            _FNTotalIncomePension = Val(_FNTotalIncomeSum)
                    '        End If


                    '    Next

                    '    Dim _FNPensionEmp As Double = 0
                    '    Dim _FNPensionCmp As Double = 0

                    '    '_FNPensionEmp = _FNTotalIncomePension * 0.02   
                    '    '_FNPensionCmp = _FNTotalIncomePension * 0.02

                    '    _FNPensionEmp = (Format(((_FNTotalIncomePension * 0.02) / SocialExchangeRate), "0.00"))
                    '    _FNPensionCmp = (Format(((_FNTotalIncomePension * 0.02) / SocialExchangeRate), "0.00"))



                    '    _FNNetpay = Format((_FNNetpay - _FNPensionEmp), "0.00")

                    '    If _FNNetpay < 0 Then
                    '        _FNNetpay = 0
                    '    End If


                    '    'FNNetIncome
                    '    _Qry = "Update [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                    '    _Qry &= vbCrLf & "set FNTotalRecalPensionScheme=" & Val(_FNTotalIncomeSum)
                    '    _Qry &= vbCrLf & ", FNPensionSchemeRateEmp=" & Val(2)
                    '    _Qry &= vbCrLf & " ,FNPensionSchemeRateCmp=" & Val(2)
                    '    _Qry &= vbCrLf & " ,FNPensionScheme=" & Val(_FNPensionEmp)
                    '    _Qry &= vbCrLf & " , FNPensionSchemeCmp=" & Val(_FNPensionCmp)

                    '    _Qry &= vbCrLf & " ,FNNetpay=" & _FNNetpay

                    '    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                    '    _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                    '    _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                    '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    Dim _FNTotalIncomeSum2 As Double = 0
                    Dim _FNTotalIncomeSum3 As Double = 0

                    If (_FNTotalIncomeSum) >= 2 And FNParturitionLeave_PeriodOne = "" Then



                        _FNTotalIncomeSum = (_FNTotalIncomeSum - (pension_FNParturitionLeaveUS2 + pension_FNParturitionLeaveUS3)) * SocialExchangeRate

                        _FNTotalIncomeSum2 = (pension_FNParturitionLeaveUS2) * SocialExchangeRate
                        _FNTotalIncomeSum3 = (pension_FNParturitionLeaveUS3) * SocialExchangeRate

                        Dim _FNTotalIncomePension As Double = 0
                        Dim _FNTotalIncomePensionDefault As Double = 0

                        _Qry = " SELECT  FNHSysPensionRankID "
                        _Qry &= vbCrLf & " ,[FNSeq],[FNTotalRecalFrom],[FNTotalRecalTo] "
                        _Qry &= vbCrLf & " ,[FNCalPensionType],[FNTotalRecalDefault] "
                        _Qry &= vbCrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].[dbo].[THRMCfgSocailKMPensionRank]  "
                        _Qry &= vbCrLf & ""

                        Dim _DtPensionRank As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        For Each Rp As DataRow In _DtPensionRank.Select("FNTotalRecalFrom<=" & _FNTotalIncomeSum & " AND  FNTotalRecalTo>=" & _FNTotalIncomeSum & "")
                            If (Rp!FNCalPensionType.ToString = "0") Then
                                _FNTotalIncomePension = Val(Rp!FNTotalRecalDefault.ToString)
                            Else
                                _FNTotalIncomePension = Val(_FNTotalIncomeSum)
                            End If

                        Next




                        Dim _FNPensionEmp As Double = 0
                        Dim _FNPensionCmp As Double = 0

                        '_FNPensionEmp = _FNTotalIncomePension * 0.02   
                        '_FNPensionCmp = _FNTotalIncomePension * 0.02

                        _FNPensionEmp = (Format(((_FNTotalIncomePension * 0.02) / SocialExchangeRate), "0.00"))
                        _FNPensionCmp = (Format(((_FNTotalIncomePension * 0.02) / SocialExchangeRate), "0.00"))


                        Dim _FNPension2 As Double = 0

                        Dim _FNPension3 As Double = 0

                        If _FNTotalIncomeSum2 > 0 And _FNTotalIncomeSum3 > 0 Then
                            _FNPension2 = (Format(((_FNTotalIncomeSum2 * 0.02) / SocialExchangeRate), "0.00"))
                            _FNPension3 = (Format(((_FNTotalIncomeSum3 * 0.02) / SocialExchangeRate), "0.00"))
                        End If





                        _FNNetpay = Format((_FNNetpay - (_FNPensionEmp + _FNPension2 + _FNPension3)), "0.00")




                        If _FNNetpay < 0 Then
                            _FNNetpay = 0
                        End If

                        'FNNetIncome
                        _Qry = "Update [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                        _Qry &= vbCrLf & "set FNTotalRecalPensionScheme=" & Val(_FNTotalIncomeSum)
                        _Qry &= vbCrLf & ", FNPensionSchemeRateEmp=" & Val(2)
                        _Qry &= vbCrLf & " ,FNPensionSchemeRateCmp=" & Val(2)
                        _Qry &= vbCrLf & " ,FNPensionScheme=" & Val(_FNPensionEmp)
                        _Qry &= vbCrLf & " , FNPensionSchemeCmp=" & Val(_FNPensionCmp)

                        _Qry &= vbCrLf & " , FNPensionSchemeAdvance2=" & Val(_FNPension2)
                        _Qry &= vbCrLf & " , FNPensionSchemeAdvance3=" & Val(_FNPension3)

                        _Qry &= vbCrLf & " ,FNNetpay=" & _FNNetpay

                        _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                        _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                        _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)


                    End If





                End If





                'If _ShiftAmt > 0 Then
                '    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '001'," & _ShiftValue.ToString & "," & _ShiftAmt.ToString & ""

                '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                'End If

                'If _ShiftOTAmt > 0 Then
                '    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '007'," & _ShiftOTValue.ToString & "," & _ShiftOTAmt.ToString & ""

                '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                'End If

                'If _FNEmpDiligent > 0 Then
                '    If _FNDeligentPeriod = 0 Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    Else
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '009'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If
                'End If

                'If _AmtReturnVacation > 0 Then
                '    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '023'," & _ShiftValue.ToString & "," & _AmtReturnVacation.ToString & ""

                '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                'End If
                ''----------- เงินคืนพักร้อน-------------------------------



                'If _AmtReturnVacation > 0 Then

                '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_AmtReturnVacation.ToString) & " "
                '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTFinCode='023' "

                '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '023'," & _ShiftValue.ToString & "," & _AmtReturnVacation.ToString & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If

                'End If
                ''----------- เงินคืนพักร้อน-------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave (FTPayYear, FTPayTerm, FNHSysEmpID, FTLeaveType, FNTotalHour, FNTotalMinute, FNTotalPayHour, FNTotalPayMinute, FNTotalNotPayHour,FNTotalNotPayMinute)"
                _Qry &= vbCrLf & "  SELECT      '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTLeaveType,Convert(numeric(18,2), Sum(FNTotalMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalMinute) %60) /100.00)) , "
                _Qry &= vbCrLf & "  Sum(FNTotalMinute), Convert(numeric(18,2), Sum(FNTotalPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalPayMinute) %60) /100.00)), Sum(FNTotalPayMinute),  Convert(numeric(18,2),Sum(FNTotalNotPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalNotPayMinute) %60) /100.00)), SUM(FNTotalNotPayMinute)"
                _Qry &= vbCrLf & "  FROM THRTTransLeave "
                _Qry &= vbCrLf & " WHERE        (FNHSysEmpID = '" & Val(_EmpCode) & "') "
                _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' "
                _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "' "
                _Qry &= vbCrLf & "  GROUP BY   FNHSysEmpID, FTLeaveType"

                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            End If

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & "  	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate (FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & " FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate)"
            _Qry &= vbCrLf & " SELECT TOP 1  FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & "FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            _Qry &= vbCrLf & " SELECT FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate ( FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay)"
            _Qry &= vbCrLf & " SELECT  FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

        Next

        Return True

    End Function


    Public Shared Function CalculateWeekEnd_KM_Daily2(ByVal _User As String, ByVal _EmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
        ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
        Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
        Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0, Optional FNStateSalaryType As Integer = 0,
        Optional _FNExchangeRate As Double = 0, Optional _FNExchangeRateTHB As Double = 0, Optional FNWorkDayInWeek As Integer = 13,
        Optional FNWorkDayInMonth As Integer = 26, Optional FNWorkDayInWeekBF As Integer = 0, Optional SocialExchangeRate As Double = 0, Optional TaxExchangeRate As Double = 0) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim CountDayPerMonth As Integer = FNWorkDayInMonth
        Dim _Qry As String
        Dim _dt As DataTable
        Dim _dttemp As DataTable
        Dim _dttran As DataTable
        Dim _SalaryDevide As Integer = 0
        Dim FNVacationRetMin, FNVacationRetAmt, FNVacationPerDayLapaid As Double


        Dim _SsoBefore As Double = 0
        Dim _SsoBeforeAmt As Double = 0

        Dim _InsuranceEmpyeeBefore As Double = 0
        Dim _InsuranceEmpyerBefore As Double = 0

        Dim _DtFin As New DataTable
        _DtFin.Columns.Add("FTFinCode", GetType(String))
        _DtFin.Columns.Add("FCTotalFinAmt", GetType(String))
        Dim _SeniorityAmt As Double = 0
        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTPaymentCode As String, _FTBankCode As String, _FNChildNotLearn As Double
        Dim _FCReduceDonate As Double, _FCLifeInsurance As Double
        Dim _FCLoanHouse As Double
        Dim _FCShare As Double, _FCReduceFather As Double, _FCReduceMother As Double
        Dim _FCReSpouseFather As Double, _FCReSpouseMother As Double, _FCReduceEducationSupport As Double, _FTMarryIncome As String
        Dim _FTCalSocialSta As String, _FTCalTaxSta As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FTEmpIdNo As String, _FTBranchCode As String, _FTAccNo As String, _FCLifeFeeMoney As Double
        Dim _FCOtherAdd As Double, _FTOtherAddCalculateSocial As String, _FTOtherAddCalculateTax As String
        Dim _FCOtherAddOt As Double, _FTOtherAddOtCalculateSocial As String, _FTOtherAddOtCalculateTax As String, _FCBFShiftMoney As Double
        Dim _FTShiftMoneyCalculateSocial As String, _FTShiftMoneyCalculateTax As String, _FCDiligent As Double
        Dim _FTDiligentCalculateSocial As String, _FTDiligentCalculateTax As String, _FCBonusEndYear As Double
        Dim _FTBonusEndCalculateSocial As String, _FCOtherDeduct As Double, _FTBonusEndCalculateTax As String
        Dim _FCShelter As Double, _FTShelterCalculateSocial As String, _FTShelterCalculateTax As String
        Dim _FCShareFactory As Double, _FTShareFactoryCalculateSocial As String
        Dim FNPayLeaveBusinessBaht, FNPayLeaveSickBaht, FNPayLeaveSpecialBaht, FNParturitionLeave As Double
        Dim FNPayLeaveBusinessBahtMin, FNPayLeaveSickBahtMin, FNPayLeaveSpecialBahtMin, FNParturitionLeaveMin As Double
        Dim GFNPayLeaveBusinessBahtMin, GFNPayLeaveSickBahtMin, GFNPayLeaveSpecialBahtMin, GFNParturitionLeaveMin As Integer
        Dim _FTShift As String
        Dim _FNTime, _FNNotRegis As Double
        Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
        Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
        Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
        Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double
        Dim _FNLeavePay, _FNLeaveNotPay As Double, _FNTimeMin, _FNOT1Min As Double
        Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
        Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
        Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
        Dim _GFNTime, _GFNNotRegis As Double
        Dim _GFNOT1 As Double, _GFNOT1_5 As Double, _GFNOT2 As Double, _GFNOT3 As Double, _GFNOT4 As Double
        Dim _GFNLeaveSick As Double, _GFNLeaveBusiness As Double
        Dim _GFNLeaveVacation As Double, _GFNLeavePregnant As Double, _GFNLeaveOrdain As Double, _GFNLeaveSpecial As Double
        Dim _GFNLeaveMarry As Double, _GFNLeaveOther As Double, _GFNLateNormalMin As Double
        Dim _GFNLateNormalMinNotHoliday As Double = 0
        Dim _GFNLateNormalCut As Double, _GFNLateOtMin As Double, _GFNLateOtCut As Double
        Dim _GFNLateMorning As Double, _GFNLateAfternoon As Double, _GFNAbsent, _GFNCutAbsent As Double
        Dim _GFNLeavePay As Double, _GFNTimeMin, _GFNOT1Min As Double
        Dim _GFNOT1_5Min As Double, _GFNOT2Min As Double, _GFNOT3Min As Double, _GFNOT4Min As Double, _GFNLateMMin As Double
        Dim _GFNLateAfMin As Double, _GFNRetireMMin As Double, _GFNRetireAfMin As Double
        Dim _GFNRetireNormalCut As Double, _GFNRetireOtMin As Double, _GFNRetireOtCut As Double
        Dim _dtot As DataTable
        Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double
        Dim _FCAccumulateIncome As Double, _FCAccumulateSocial As Double, _FCAccumulateTax As Double
        Dim _FTSatrtCalculateDate As String, _FTEndCalculateDate As String, _FNEmpDiligent As Double, _FTStateInDustin As String, _FNDeligentPeriod As Integer
        Dim _FTSatrtCalculateDateIns As String, _FTEndCalculateDateIns As String
        Dim _FNEmpBaht, _nBahtOt1 As Double, _nBahtOt15 As Double, _nBahtOt2 As Double, _nBahtOt3 As Double, _nBahtOt4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
        Dim _SocialRate As Double : Dim _StateSocialOnlyCmppay As Boolean
        Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
        Dim _TotalHoliDay As Integer
        Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String

        Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double
        Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
        Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
        Dim _FTSlary, _FTDivCode, _FTPos As String
        Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
        Dim _Dtemp As DataTable
        Dim _SocialBefore, _SocialBeforeAmt, _SocialPayMax As Double
        Dim _FCAdd, _FTAddCalculateSocial, _FTAddCalculateTax, _FCDeduct, _TotalCalSso, _TotalCalTax, _TaxAmt As Double
        Dim _Gtotalleave, _GtotalleavePay, _GtotalleaveNotPay, _GtotalleavePayCalSso, _GtotalleavePayCalSsoAmt As Double
        Dim _dtLeave As DataTable
        Dim _LeaveCode As String = ""
        Dim _dtAddOtherAmt As DataTable
        Dim _dtAddOtherAmtshift As DataTable
        Dim FCModFather, FCModMother, FCModMateFather, FCModMateMother As Double
        Dim FCPremium, FCInterest, FCUnitRMF, FCUnitLTF, FCDeductDonate, FCDisabledDependents, FCDeductDonateStudy As Double
        Dim FCHealthInsurFatherMotherMate, FTHealthInsurIDFather, FTHealthInsurIDMother As Double
        Dim FTHealthInsurIDFatherMate, FTHealthInsurIDMotherMate As Double
        Dim FTTotalCalContributedAmt, FTContributedAmt, FTCmpContributedAmt, FTTotalCalContributedAcc As Double
        Dim FTTotalCalWorkmen, FTWorkmenAmt, _FTMaxCalWorkmen, _FTMaxWorkmenRate, FTTotalCalWorkmenAcc As Double
        Dim _FTWorkmenAmtBefore, _FTTotalCalWorkmenBefore As Double
        Dim _ShiftAmt As Double = 0
        Dim _ShiftOTAmt As Double = 0
        Dim _ShiftValue As Double = 0
        Dim _ShiftOTValue As Double = 0
        Dim _WorkingDay As Double = 0
        Dim _THRMContributedFund As DataTable
        Dim _EmpDisTax As New HCfg.EmployeeDiscountTax
        Dim _EmpTaxYear As New HCfg.EmpTaxYear
        '   HI.HRCAL.Calculate.LoadDiscountTax()

        Dim _EmpDisTaxChildAmt As Double = 0
        Dim _FNNetpayOrg As Double = 0.0
        Dim _FNNetpay As Double = 0.0
        Dim _AmtAddCalOT, _GAmtAddCalOT As Double
        Dim CountTerm As Integer = 0
        Dim _SPDateType, _TotalInstalment, _Instalment As Integer
        Dim _ContributedFundBeginPay As Boolean = False
        Dim _DTHoliday As DataTable
        Dim _ShiftAdv As Double = 0
        Dim _AmtPlus As Double = 0
        Dim _GAmtPlus As Double = 0
        Dim FTHldType As Integer = 0
        Dim _AmtRetire As Double = 0
        Dim _WorkAge As Integer = 0 : Dim _WorkAgeDay As Integer = 0 : Dim _WorkAgeSeniority As Integer = 0 : Dim _WorkingDayN As Integer = 0
        Dim _WorkAgeParturition As Integer = 0
        Dim _AmtReturnVacation As Double = 0
        Dim _FNIncentiveAmt As Double = 0
        Dim _FTInsurType As Integer = 0
        Dim _DayAdjAdd As Double = 0
        Dim _WageAdjAdd As Double = 0
        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        Dim _FTStatePayHoliday As String = ""
        Dim _FTEmployeeCode As String = ""
        Dim _FNAttandanceAmt As Double = 0
        Dim _FNHealtCareAmt As Double = 0
        Dim _FNTransportAmt As Double = 0
        Dim _FNChildCareAmt As Double = 0
        Dim _FNChildCareStartAge As Double = 0
        Dim _FNChildCareEndAge As Double = 0
        Dim _FNOTMealAmt As Double = 0
        Dim _FNSocialBase As Double = 0
        Dim _FNWorkAgeSalary As Double = 0
        Dim _FNOTMealAmtUS As Double = 0
        Dim _FNSickLeave As Double = 0
        Dim _LeaveSickPay As Integer = 0
        Dim _FNTotalChildCare As Integer = 0
        Dim _FNNetAttandanceAmt As Double = 0
        Dim _FNNetChildCareAmt As Double = 0
        Dim _FNNetOTMealAmt As Double = 0
        Dim _FNNetSocialBase As Double = 0
        Dim _FNNetOTMealAmtUS As Double = 0
        Dim _FNEmpWorkAge As Integer = 0
        Dim _tmpSocailRateKM As DataTable
        Dim _tmpWelfareKM As DataTable
        Dim _tmpWorkAge As DataTable
        Dim _TmpFDDateEnd As String = ""
        Dim _TmpFDDateEndP As String = ""  ' เพิ่มเงือนไข วันที่ลาออก มีผล วันที่ 2 - 16  จ่ายค่า health & transsport
        Dim _DTEmpWorkDay As New DataTable
        Dim _TmpLeavePay As Integer = 0
        Dim _EmpSex As Integer = 0
        Dim _RatePay As Double = 1
        Dim _SalaryPayOTKM As Double = 0
        Dim _SalaryPayLeave As Double = 0
        Dim _SalaryPayLeaveMin As Double = 0
        Dim _FNEmpStatus As Integer = 0
        Dim _FTStateWorkpermit As String = ""
        Dim _FTStateMedicalCertificate As String = ""
        Dim _BonusAmt As Double = 0

        Calculate.LoadInsuranceVNRate()
        Dim FNSocialEmployeeRate As Double = 0
        Dim FNSocialEmployerRate As Double = 0
        Dim FNHealthEmployeeRate As Double = 0
        Dim FNHealthEmployerRate As Double = 0
        Dim FNUnemploymentEmployeeRate As Double = 0
        Dim FNUnemploymentEmployerRate As Double = 0
        Dim FNUnionEmployeeRate As Double = 0
        Dim FNUnionEmployerRate As Double = 0
        Dim FNStateUnionMember As String = ""
        Dim FDStartDateUnion As String = ""
        Dim FDEndDateUnion As String = ""
        Dim FNUnionAmt As Double = 0
        Dim FNUnionRate As Double = 0


        Try
            FNSocialEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eSocialInsurance).FNEmployeeRate
            FNSocialEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eSocialInsurance).FNEmployerRate
            FNHealthEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eHealthInsurance).FNEmployeeRate
            FNHealthEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eHealthInsurance).FNEmployerRate
            FNUnemploymentEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnemploymentInsurance).FNEmployeeRate
            FNUnemploymentEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnemploymentInsurance).FNEmployerRate
            FNUnionEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnionInsurance).FNEmployeeRate
            FNUnionEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnionInsurance).FNEmployerRate
        Catch ex As Exception
            'MG.ShowMsg.mInfo("Invalid Config Value...", 1503310001, "", "")
        End Try


        Dim FNSocialInsuranceEmployee As Double = 0.0
        Dim FNSocialInsuranceEmployer As Double = 0.0
        Dim FNHealthInsuranceEmployee As Double = 0.0
        Dim FNHealthInsuranceEmployer As Double = 0.0
        Dim FNUnemploymentInsuranceEmployee As Double = 0.0
        Dim FNUnemploymentInsuranceEmployer As Double = 0.0
        Dim FNUnionInsuranceEmployee As Double = 0.0
        Dim FNUnionInsuranceEmployer As Double = 0.0

        Dim FNSocialInsuranceEmployeeOrg As Double = 0.0
        Dim FNSocialInsuranceEmployerOrg As Double = 0.0
        Dim FNHealthInsuranceEmployeeOrg As Double = 0.0
        Dim FNHealthInsuranceEmployerOrg As Double = 0.0
        Dim FNUnemploymentInsuranceEmployeeOrg As Double = 0.0
        Dim FNUnemploymentInsuranceEmployerOrg As Double = 0.0
        Dim FNUnionInsuranceEmployeeOrg As Double = 0.0
        Dim FNUnionInsuranceEmployerOrg As Double = 0.0




        _DTEmpWorkDay.Columns.Add("FNSalary", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNDay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT1", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT15", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT2", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT3", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT4", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNHoloday", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLate", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNAbsent", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLateCutAmtAbsent", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeavePay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeaveNotPay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNBusiness", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSpecial", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNParturition", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNVacation", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNShiftNo", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSlaryOTPerMin", GetType(Double))





        Dim _DTEmpPayLeaveSick As New DataTable
        _DTEmpPayLeaveSick.Columns.Add("FNSalary", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNDay", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNPayPer", GetType(Double))

        _Qry = "SELECT TOP 1 FNCalType FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType WHERE FNHSysEmpTypeId=" & Val(_EmpType) & "  "
        Dim _TmpCalType As Integer = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "0"))

        If FTStaCalPayRoll = 0 Then
            _DateStartOfMonth = _StartDate  'วันแรกของเดือน
            _DateEndOfMonth = _EndDate 'วันแของเดือน
        Else
            _DateStartOfMonth = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
            _DateEndOfMonth = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        End If
        '----------------------------------   Variable  ------------------------------------

        Dim _DateReset As String
        _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
        _Qry &= vbCrLf & "  FROM"
        _Qry &= vbCrLf & " ("
        _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
        _Qry &= vbCrLf & " FROM            THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN THRMEmployee AS M WITH(NOLOCK )"
        _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "  WHERE   M.FNHSysEmpID=" & Val(_EmpCode) & " "
        _Qry &= vbCrLf & " ) As T"

        _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")
        '------------------ รวมวันลาป่วย---------------------------------

        _Qry = "   SELECT        (SUM(FNTotalPayMinute) / 480) AS FNTotalPayMinute  "
        _Qry &= vbCrLf & "      AS TotalLeavePay"
        _Qry &= vbCrLf & "    FROM THRTTransLeave "
        _Qry &= vbCrLf & "  WHERE        (FTLeaveType = '0')"
        _Qry &= vbCrLf & "  AND (FTDateTrans >= N'" & (_DateReset) & "') "
        _Qry &= vbCrLf & "  AND (FTDateTrans < N'" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "') "
        _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ")"

        _LeaveSickPay = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

        '------------------ รวมวันลาป่วย---------------------------------

        With _EmpTaxYear
            .FTAmt = 0 'เงินได้ก่อนหักค่าใช้จ่าย
            .FTExpenses = 0 'ค่าใช้จ่ายส่วนตัว
            .FTNetAmt = 0 'เงินได้หลังหักค่าใช้จ่าย
            .FTModEmp = 0 'ลดหย่อนส่วนตัว
            .FTModMate = 0 'ลดหย่อนคู่สมรส
            .FNChildNotLern = 0 'จำนวนบุตรไม่ศึกษา
            .FNChildLern = 0 'จำนวนบุตรศึกษา
            .FTChildNotLern = 0 'ลดหย่อนบุตรไม่ศึกษา
            .FTChildLern = 0 'ลดหย่อนบุตรศึกษา
            .FTInsurance = 0 'ลดหย่อนเบี้ยประกัน
            .FTProvidentfund = 0 'กองทุนเลียงชีพส่วนที่ไม่เกิน 10000
            .FTInterest = 0 'ดอกเบี้ยเงินกู้
            .FTSocial = 0 'ประกันสังคม
            .FTDonation = 0 'เงินบริจาค
            .FTProvidentfundOver = 0 'กองทุนเลียงชีพส่วนที่เกิน 10000
            .FTGPF = 0 'เงิน กบข.
            .FTSavingsFund = 0 'เงินกองทุนสงเคราะห์
            .FTCommutation = 0 'เงินชดเชยตามกฎหมายแรงงาน
            .FTUnitRMF = 0 'ค่าซื้อหน่วยลงทุน RTF
            .FTModFather = 0 'ลดหย่อนบิดา
            .FTModMother = 0 'ลดหย่อนมารดา
            .FTModFatherMate = 0 'ลดหย่อนบิดาคู่สมรส
            .FTModMotherMate = 0 'ลดหย่อนมารดาคู่สมรส
            .FTUnitLTF = 0 'ค่าซื้อหน่วยลงทุน LTF
            .FTDonationLern = 0 'เงินบริจาคเพื่อสนับสนุนการศึกษา
            .FTParentsHealthInsurance = 0 'เบี้ยประกันสุขภาพบิดามารดา
            .FTSupportSport = 0 'เงินสนับสนุนการกีฬา
            .FTAcquisitionOfProperty = 0 'ค่าซื้ออาคาร
            .FTPension = 0 'บำนาญ
            .FTTravel = 0 'ท่องเที่ยวในประเทศ
            .FTTotalCalTax = 0 'เงินได้สุทธิ
            .FTTotalTax = 0 'ภาษีที่ต้องจ่าย
        End With
        '------------------ GetConfig WeekEnd ----------------------------------

        ' get discount tax

        With _EmpDisTax
            .Cfg_ModChildAllowanceAgeStart = HCfg._DiscountTax.Cfg_ModChildAllowanceAgeStart
            .Cfg_ModChildAllowanceAgeEnd = HCfg._DiscountTax.Cfg_ModChildAllowanceAgeEnd
            .Cfg_ModChildAllowanceRateNotStudied = HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied
            .Cfg_ModChildAllowanceRateStudy = HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy
        End With
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------
        _Qry = "SELECT FNSeqNo, FNAgeBegin, FNAgeEnd, FNEmpPay As FNEmpAmtPer,  FNCmpPay AS FNCmpAmtPer"
        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMContributions WITH(NOLOCK) "
        _Qry &= vbCrLf & "  WHERE  FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID) & " "
        _THRMContributedFund = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------

        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday
        '------------------ GetConfig Holiday ----------------------------------

        _tmpSocailRateKM = LoadSocailRateKM
        _tmpWelfareKM = LoadWelfareKM(Integer.Parse(Val(_EmpType)))
        _tmpWorkAge = GetWorkAgeRate

        For Each ZRow In _tmpWelfareKM.Rows

            _FNAttandanceAmt = Val(ZRow!FNAttandanceAmt.ToString)
            _FNHealtCareAmt = Val(ZRow!FNHealtCareAmt.ToString)
            _FNTransportAmt = Val(ZRow!FNTransportAmt.ToString)
            _FNChildCareAmt = Val(ZRow!FNChildCareAmt.ToString)
            _FNChildCareStartAge = Val(ZRow!FNChildCareStartAge.ToString)
            _FNChildCareEndAge = Val(ZRow!FNChildCareEndAge.ToString)
            _FNOTMealAmt = Val(ZRow!FNOTMealAmt.ToString)

            Exit For
        Next

        'FNAttandanceAmt, FNHealtCareAmt, FNTransportAmt, FNChildCareAmt, FNChildCareStartAge, FNChildCareEndAge, FNOTMealAmt
        FNVacationRetMin = 0 : FNVacationRetAmt = 0
        _FTSatrtCalculateDate = _StartDate
        _FTEndCalculateDate = _EndDate
        _FTSatrtCalculateDateIns = _StartDate
        _FTEndCalculateDateIns = _EndDate
        _FNEmpDiligent = 0 : _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
        _FTStateInDustin = "" : _FNSlaryPerMonth = 0
        _FNSlaryPerDay = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0
        _FTEmpState = "" : _FNEmpBaht = 0 : _nBahtOt1 = 0
        _nBahtOt15 = 0 : _nBahtOt2 = 0 : _nBahtOt3 = 0
        _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
        _FCPayVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0
        _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0
        _SocialMinIncome = 0 : _SocialMaxIncome = 0
        _Complete = 0 : _Err = 0 : _FCSalary = -99
        CountTerm = 0
        _TotalInstalment = 0 : _Instalment = 0

        FNPayLeaveBusinessBahtMin = 0 : FNPayLeaveSickBahtMin = 0 : FNPayLeaveSpecialBahtMin = 0 : FNParturitionLeaveMin = 0
        GFNPayLeaveBusinessBahtMin = 0 : GFNPayLeaveSickBahtMin = 0 : GFNPayLeaveSpecialBahtMin = 0 : GFNParturitionLeaveMin = 0
        FNPayLeaveBusinessBaht = 0 : FNPayLeaveSickBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode,M.FTEmpCode AS FTEmployeeCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, Isnull( M.FNEmpStatus,0) AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"
        _Qry &= vbCrLf & " ,M.FNHSysDeptId AS FTDeptCode , M.FNEmpSex "
        _Qry &= vbCrLf & "  ,M.FNHSysDivisonId AS FTDivCode, M.FNHSysSectId AS FTSectCode,  M.FNHSysUnitSectId AS FTUnitSecCode"
        _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
        _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
        _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
        _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
        _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
        _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
        _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
        _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
        _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
        _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide , isnull( M.FTStateWorkpermit ,'0') as FTStateWorkpermit"
        _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge(M.FdDateStart,'" & _EndDate & "') AS FNEmpWorkAgeNew"
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_Salary_CD_NEW(M.FdDateStart,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeNewCD ,  dbo.[FN_Get_Emp_WorkAge_Day](M.FDDateStart,M.FDDateEnd) as FNEmpWorkAgeNewDay"
        _Qry &= vbCrLf & " ,  dbo.[FN_Get_Emp_WorkAge_Day_CD](M.FDDateStart,M.FDDateEnd,M.FNHSysEmpID,'" & _EndDate & "') as FNEmpWorkAgeNewDay_CD "
        _Qry &= vbCrLf & " , isnull(M.FTStateUnionMember,'') as FTStateUnionMember  , isnull(M.FDStartDateUnion,'') as FDStartDateUnion , isnull(M.FDEndDateUnion,'') as FDEndDateUnion"
        _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_EmpCode) & " ) "

        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each R As DataRow In _Dtemp.Rows

            _DtFin.Rows.Clear()
            _FNEmpStatus = Integer.Parse("0" & R!FTStatus.ToString)
            _AmtAddCalOT = 0
            _EmpSex = Val("0" & R!FNEmpSex.ToString)
            _FTStateWorkpermit = R!FTStateWorkpermit.ToString

            FNStateUnionMember = R!FTStateUnionMember.ToString : FDStartDateUnion = R!FDStartDateUnion.ToString : FDEndDateUnion = R!FDEndDateUnion.ToString

            _SalaryDevide = Val(R!FNSalaryDivide.ToString)
            _FTStatePayHoliday = R!FTStatePayHoliday.ToString
            _FNEmpWorkAge = Integer.Parse(Val(R!FNEmpWorkAge.ToString))
            _FTInsurType = Val(R!FTInsurType.ToString)

            If _SalaryDevide <= 0 Then
                _SalaryDevide = 1
            End If

            _FTSlary = R!FTSalary.ToString : _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString
            _FTPaymentCode = R!FTPayCode.ToString : _FTBankCode = R!FTBnkCode.ToString
            _FTCalSocialSta = R!FTCalSocialSta.ToString : _FTCalTaxSta = R!FTCalTaxSta.ToString

            _FTDeptCode = R!FTDeptCode.ToString : _FTDivCode = R!FTDivCode.ToString
            _FTSectCode = R!FTSectCode.ToString
            _FTUnitCode = R!FTUnitSecCode.ToString : _FTPos = R!FTPositCode.ToString

            _FTEmpState = R!FTCalType.ToString
            _FTEmpIdNo = R!FTTaxNo.ToString 'R!FTEmpIdNo.ToString
            _FTBranchCode = R!FTBnkBchCode.ToString
            _FTAccNo = R!FTAccNo.ToString
            '---------------------------------------- ลดหย่อน------------------------------------
            _FNChildNotLearn = 0 : _FCReduceDonate = 0 : _FCLifeInsurance = 0 : _FCLoanHouse = 0 : _FCReduceEducationSupport = 0
            _FCShare = 0 : _FCReduceFather = 0 : _FCReduceMother = 0 : _FCReSpouseFather = 0 : _FCReSpouseMother = 0 : _FTMarryIncome = 0
            _FCLifeFeeMoney = 0

            FCModFather = 0 : FCModMother = 0 : FCModMateFather = 0 : FCModMateMother = 0
            FCPremium = 0 : FCInterest = 0 : FCUnitRMF = 0 : FCUnitLTF = 0 : FCDeductDonate = 0 : FCDisabledDependents = 0 : FCDeductDonateStudy = 0
            FCHealthInsurFatherMotherMate = 0 : FTHealthInsurIDFather = 0 : FTHealthInsurIDMother = 0
            FTHealthInsurIDFatherMate = 0 : FTHealthInsurIDMotherMate = 0

            FTTotalCalContributedAmt = 0 : FTContributedAmt = 0 : FTCmpContributedAmt = 0
            FTTotalCalWorkmen = 0 : FTWorkmenAmt = 0 : _FTMaxCalWorkmen = 0 : _FTMaxWorkmenRate = 0 : FTTotalCalWorkmenAcc = 0
            _FNIncentiveAmt = 0

            _TmpFDDateEnd = _FDDateEnd
            _TmpFDDateEndP = _FDDateEnd

            If _TmpFDDateEnd <> "" Then

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,-1,Convert(Datetime,'" & _TmpFDDateEnd & "')),111)"
                _TmpFDDateEnd = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,Convert(Datetime,'" & _EndDate & "')),111)"
                _TmpFDDateEndP = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

            End If

            '--------- อายุงาน  เดือน
            _WorkAge = Val(R!FNEmpWorkAgeNewCD.ToString)

            '---------อายุงาน วัน
            _WorkAgeDay = Val(R!FNEmpWorkAgeNewDay.ToString)

            '---------อายุงาน เดือน ไม่ปัดขึ้น เพื่อคิด ค่ารางวัลอายุงาน 
            _WorkAgeSeniority = Val(R!FNEmpWorkAgeNew.ToString)

            '---------วันทำงาน 
            _WorkingDayN = Val("0" & R!FNEmpWorkAgeNewDay_CD.ToString)

            '----------- Calculate Seniority Bonus For KKN---------------
            _FNWorkAgeSalary = 0
            'If _FTEmpState <> "2" And _FTEmpState <> "3" Then
            If Val(_PayTerm) Mod 2 <> 0 Then
                If (_EndDate >= Left(_StartDate, 8) & "07" And _EndDate <= Left(_StartDate, 8) & "24") Then
                    For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & _WorkAge & " AND  FNWorkAgeEnd>=" & _WorkAge & " ")
                        _FNWorkAgeSalary = Val(ZRow!FNWorkAgeAmt.ToString)
                        Exit For
                    Next
                End If

                'If (_StartDate <= Left(_StartDate, 8) & "24" And _EndDate >= Left(_StartDate, 8) & "24") Then
                '    For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & _WorkAge & " AND  FNWorkAgeEnd>=" & _WorkAge & " ")
                '        _FNWorkAgeSalary = Val(ZRow!FNWorkAgeAmt.ToString)
                '        Exit For
                '    Next
                'End If
            End If

            'End If

            '----------- Calculate Seniority Bonus For KKN---------------

            If _FTEmpState = "2" Then
                _TotalInstalment = 12
            Else
                _TotalInstalment = 24
            End If

            _ContributedFundBeginPay = False
            If R!FDFundBegin.ToString <> "" Then
                If R!FDFundBegin.ToString < _FTEndCalculateDate Then

                    If R!FDFundEnd.ToString <> "" Then
                        If R!FDFundEnd.ToString > _FTEndCalculateDate Then
                            _ContributedFundBeginPay = True
                        End If
                    Else
                        _ContributedFundBeginPay = True
                    End If

                End If
            End If

            _Instalment = Val(_PayTerm)
            _FNIncentiveAmt = 0

            '-------------คำนวณ Incentive-------------------------------------------
            Select Case _FTInsurType
                Case 1

                    '---------ประกันเป็นวัน
                    _Qry = "SELECT SUM ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END  ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                    '_Qry = "SELECT SUM (  ISNULL(FNNetAmt,0)   ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                    _Qry = "SELECT sum(Isnull(FNAmt,0)) as FNAmt  "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    _FNIncentiveAmt = _FNIncentiveAmt + CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case 2
                    '---------ประกันเป็นเป็นงวด-------------------------------------------

                    _Qry = "SELECT  ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END  ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM ( SELECT SUM(ISNULL(FNNetAmt,0) ) AS FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) AS FNNetProAmt"
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _Qry &= vbCrLf & " ) AS M"

                    '_Qry = "SELECT   SUM (  ISNULL(FNNetAmt,0)   ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM ( Select SUM(ISNULL(FNNetAmt,0) ) As FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) As FNNetProAmt"
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily With(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	And FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    '_Qry &= vbCrLf & " ) AS M"
                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))
                    _Qry = "SELECT sum(Isnull(FNAmt,0)) as FNAmt  "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                    _FNIncentiveAmt = _FNIncentiveAmt + CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case Else
            End Select
            '-------------------------------------

            '---------------------------------------- ลดหย่อน------------------------------------
            _Qry = " SELECT      FNHSysEmpID, FTChildSex, FTStudySta  ,isnull( FTStateNotDisTax ,'0') AS FTStateNotDisTax "
            '_Qry &= vbCrLf & ", dbo.FN_Get_ChildEmp_Age(FDChildBirthDate,'') AS FNChildAge"
            _Qry &= vbCrLf & ",dbo.FN_Get_Emp_WorkAge(FDChildBirthDate,'" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "') AS FNChildAge"
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeChild WITH(NOLOCK) "
            _Qry &= vbCrLf & " WHERE   (FNHSysEmpID = " & Val(_EmpCode) & ")"
            _dttemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)



            Dim _ChildNotStudy As Integer = 0
            Dim _ChildStudy As Integer = 0
            _FNTotalChildCare = 0
            _EmpDisTaxChildAmt = 0

            If (_EmpSex = 1) Then 'Employee Male Not Cal ChildCare
                For Each _Drow As DataRow In _dttemp.Select("FTStateNotDisTax = '0'")

                    '--------  Add Child Care For KKN--------------
                    If Val(_Drow!FNChildAge.ToString) >= _FNChildCareStartAge And Val(_Drow!FNChildAge.ToString) < _FNChildCareEndAge Then
                        _FNTotalChildCare = _FNTotalChildCare + 1
                    End If
                    '--------  Add Child Care For KKN--------------

                    If _Drow!FTStudySta.ToString = "1" Then
                        _ChildStudy = _ChildStudy + 1
                    Else
                        _ChildNotStudy = _ChildNotStudy + 1
                    End If


                    '--------  Add Amt Child Distax For KKN--------------
                    If _Drow!FTStudySta.ToString = "0" Then
                        If _Drow!FTStudySta.ToString = "1" Then
                            If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                                _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateStudy
                            End If
                        Else

                            If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                                _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateNotStudied
                            End If
                        End If

                    End If

                    ' อายุมากกว่า แต่ศึกษาอยู่ ลดหย่อนได้

                    '--------  Add Amt Child Distax For KKN--------------



                Next

                _FNNetChildCareAmt = Format(_FNTotalChildCare * _FNChildCareAmt, "0.00")

            Else
                For Each _Drow As DataRow In _dttemp.Select("FTStateNotDisTax = '0'")
                    If _Drow!FTStudySta.ToString = "1" Then
                        If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                            _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateStudy
                        End If
                    Else

                        If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                            _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateNotStudied
                        End If
                    End If

                    If _Drow!FTStudySta.ToString = "1" Then
                        _ChildStudy = _ChildStudy + 1
                    Else
                        _ChildNotStudy = _ChildNotStudy + 1
                    End If

                Next
            End If



            _FCAccumulateIncome = 0 : _FCAccumulateSocial = 0 : _FCAccumulateTax = 0
            FTTotalCalContributedAcc = 0 : FTTotalCalWorkmenAcc = 0

            '----------- Get Summary ------------------
            LoadIncomeTax(_FTEmpIdNo, _PayYear, _PayTerm, _FCAccumulateIncome, _FCAccumulateTax, _FCAccumulateSocial, CountTerm, FTTotalCalContributedAcc, FTTotalCalWorkmenAcc, Integer.Parse(Val(_EmpCode)))
            '----------- Get Summary ------------------

            With _EmpDisTax

                .BaseSlary = 0
                .OtherSlary = 0
                .BeforeIncom = 0 ' _FCAccumulateIncome
                .BeforeTax = _FCAccumulateTax
                .FTMateIncome = (R!FTMateIncome.ToString = "0")
                ' ----------------------------------------- Clear Discount Tax Value -------------------------
                .Cfg_ModChildAllowanceRateNotStudied = _ChildNotStudy 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
                .Cfg_ModChildAllowanceRateStudy = _ChildStudy 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
                '-------------ลดหย่อนบุตร-----------------

                '--- หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
                .Cfg_ContributedDeducToTheFund = FTTotalCalContributedAcc 'ลูกจ้าง
                '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ

                .Cfg_ModDeductibleDonations = CDbl(Val(R!FCDeductDonate.ToString)) ' ' % ลดหย่อนเงินบริจาค
                .Cfg_ModDeductDonateStudy = CDbl(Val(R!FCDeductDonateStudy.ToString))
                .Cfg_ModFatherReduction = CDbl(Val(R!FCModFather.ToString)) '  'ลดหย่อนบิดา
                .Cfg_ModInsurancePremiums = CDbl(Val(R!FCPremium.ToString)) '  'ค่าเบี้ยประกันชีวิตส่วนบุคคล
                .Cfg_ModLendingforHousing = CDbl(Val(R!FCInterest.ToString)) ' 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย

                .Cfg_ModLTFChk = CDbl(Val(R!FCUnitLTF.ToString)) 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
                .Cfg_ModMateFatherReduction = CDbl(Val(R!FCModMateFather.ToString)) ' 'ลดหย่อนบิดา คู่สมรส
                .Cfg_ModMateMotherReduction = CDbl(Val(R!FCModMateMother.ToString)) '  'ลดหย่อนมารดา คู่สมรส
                .Cfg_ModMotherReduction = CDbl(Val(R!FCModMother.ToString)) ' 'ลดหย่อนมารดา

                .Cfg_ModPersonalExpenChk = 0 ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน

                .Cfg_ModRateReductionsByMarital = (IIf(R!FTMaritalCode.ToString = "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
                .Cfg_ModRateReductionsBySingle = (IIf(R!FTMaritalCode.ToString <> "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ โสด 

                .Cfg_ModRMFChk = CDbl(Val(R!FCUnitRMF.ToString)) '  ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 
                .FCDisabledDependents = CDbl(Val(R!FCDisabledDependents.ToString)) '  'ค่าอุปการะเลี้ยงดูคนพิการหรือทุพพลภาพ
                .FCHealthInsurFatherMotherMate = CDbl(Val(R!FCHealthInsurFatherMotherMate.ToString)) '   'เบี้ยประกันสุขภาพบิดามารดาของผู้มีเงินได้และคู่สมสร

                .FCExceptAgeOver = CDbl(Val(R!FCExceptAgeOver.ToString)) ' ' 'รายการเงินได้ที่ได้รับยกเว้น ของผู้มีเงินได้ตั้งแต่ 65 ปีขึ้นไป 
                .FCExceptAgeOverMate = CDbl(Val(R!FCExceptAgeOverMate.ToString)) ' 'รายการเงินได้ที่ได้รับยกเว้น ของคู่สมรสอายุตั้งแต่ 65 ปีขึ้นไป
                '----------------------------------------------------
            End With
            '---------------------------------------- ลดหย่อน------------------------------------

            _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = "0" : _FTOtherAddCalculateTax = "0" : _FCOtherAddOt = 0
            _FTOtherAddOtCalculateSocial = "0" : _FTOtherAddOtCalculateTax = "0" : _FCBFShiftMoney = 0 : _FTShiftMoneyCalculateSocial = "0"
            _FTShiftMoneyCalculateTax = "0" : _FCDiligent = 0 : _FTDiligentCalculateSocial = "0" : _FTDiligentCalculateTax = "0"
            _FCBonusEndYear = 0 : _FTBonusEndCalculateSocial = "0" : _FTBonusEndCalculateTax = "0" : _FCShelter = 0
            _FTShelterCalculateSocial = "0" : _FTShelterCalculateTax = "0" : _FCShareFactory = 0 : _FTShareFactoryCalculateSocial = "0"
            _FNNetpayOrg = 0.0
            _FNNetpay = 0.0
            _FCSalary = -99
            _FTSlary = (_FTSlary)

            If IsNumeric(_FTSlary) Then
                _MSlary = _FTSlary
                _FCSalary = CDbl(_FTSlary)


                '------------------ คำนวณคืนพักร้อน ----------------------------

                If (_ReturnVacation > 0) Or (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                    Dim _Month As Integer = 0
                    Dim _Leave As Double = 0
                    Dim _SumLeaveVacation As Double = 0
                    Dim _ResetDate As String = ""

                    Dim _DateReset2 As String



                    _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
                    _Qry &= vbCrLf & "  FROM"
                    _Qry &= vbCrLf & " ("
                    '_Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),convert(date, '" & (_EndDate) & "'),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK )"
                    _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
                    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                    _Qry &= vbCrLf & " ) As T"

                    _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & ("") & "','" & (_EndDate) & "') AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                    Else
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & (_DateReset) & "','" & (_EndDate) & "') AS FNEmpVacation"
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                    End If


                    _Leave = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                    If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & ("") & "','" & (_EndDate) & "') AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "


                        _Leave = _Leave + (HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))


                    End If

                    If _Leave > 0 And _DateReset <> "" Then


                        If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98' OR ISNULL(FTStateDeductVacation,'') ='1' )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"

                            'Else
                            '    _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            '    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            '    _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            '    _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '    '_Qry &= vbCrLf & " 	AND  FTDateTrans < '" & (_DateReset) & "'"
                            '    _Qry &= vbCrLf & " 	AND  FTDateTrans < Convert(varchar(10),DateAdd(year,1,Convert(Datetime,'" & (_DateReset) & "')),111)"
                            '    '_Qry &= vbCrLf & " 	AND  FTDateTrans >=Convert(varchar(10),DateAdd(year,-1,Convert(Datetime,'" & (_DateReset) & "')),111)"
                            '    _Qry &= vbCrLf & " 	AND  FTDateTrans >='" & (_DateReset) & "'"
                        End If

                        _SumLeaveVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                        If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"

                            _SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                        End If



                        If _ReturnVacation <= 0 Then
                            _Qry = " SELECT   TOP 1 FCCfgRetValue"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigReturnVacationSet WITH(NOLOCK) "
                            _Qry &= vbCrLf & "  WHERE      (FNCalType =" & Val(_EmpType) & ")"

                            _ReturnVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        End If

                        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                        Select Case FNStateSalaryType
                            Case 0 'ต่อเดือน

                                _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.0000000"))
                            Case 1 'ต่อวัน

                                _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                        End Select
                        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                        Dim _FNSlaryPerDayRetVa As Double = 0
                        _FNSlaryPerDayRetVa = HI.Conn.SQLConn.GetField("Select Top 1 FNSalary From THRTPayRoll WITH(NOLOCK) where  FNHSysEmpID = " & Val(_EmpCode) & " and  FTPayYear +'/'+FTPayTerm  <'" & _PayYear & "/" & _PayTerm & "'  Order by FTPayYear +'/'+FTPayTerm DESC ", Conn.DB.DataBaseName.DB_HR, "0")


                        If (_Leave * 480) > _SumLeaveVacation Then

                            Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), _Leave, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                            Dim _ReteReturnVacPerDay As Double = 0
                            If _FNEmpStatus = "2" Or _FDDateEnd <= _EndDate Then
                                If _WorkAge <= 0 Then
                                    Dim _ReVacationDay As Double = 0
                                    Dim _ReVacationPiad As Double = 0

                                    '  _ReVacationDay = Double.Parse(Format(((_Leave / 26) * _WorkAgeDay), "0.000"))
                                    '  _ReVacationDay = Double.Parse((_Leave / 26) * _WorkAgeDay)
                                    '   _Leave = _ReVacationDay
                                    _ReVacationDay = _Leave
                                End If
                                _ReteReturnVacPerDay = _MoneyRetVacationPerDay
                            Else
                                _ReteReturnVacPerDay = _MoneyRetVacationPerDay  ' CDbl(Format((_FNSlaryPerDayRetVa) / CountDayPerMonth, "0.0000000"))
                                FNVacationPerDayLapaid = _MoneyRetVacationPerDay
                            End If
                            FNVacationRetMin = (_Leave * 480) - _SumLeaveVacation
                            If FNVacationRetMin <= 0 Then
                                FNVacationRetMin = 0
                            End If

                            FNVacationRetAmt = 0
                            'Dim _RetVaclationBal As Double = CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000"))

                            _AmtReturnVacation = CDbl(Format((CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000")) * (_ReturnVacation * (_ReteReturnVacPerDay / 480))), "0.000"))
                            FNVacationRetMin = CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000"))
                            FNVacationRetAmt = _AmtReturnVacation

                        End If

                    End If
                End If
                '------------------ คำนวณคืนพักร้อน ----------------------------

                ''------------------ คำนวณคืนพักร้อน ----------------------------
                'If _ReturnVacation > 0 Then
                '    Dim _Month As Integer = 0
                '    Dim _Leave As Double = 0
                '    Dim _SumLeaveVacation As Double = 0
                '    Dim _ResetDate As String = ""
                '    Dim _dttempdata3 As DataTable

                '    _Qry = "    SELECT TOP 1  VC.FNLeaveRight, VC.FNAgeBegin, VC.FNAgeEnd, VC.FTCmpCode, VC.FTTypeEmp"
                '    _Qry &= vbCrLf & ",ISNULL((SELECT TOP 1 FTLeaveReset FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave WITH(NOLOCK) WHERE FNHSysEmpTypeId =" & Val(_EmpType) & "  AND FTLeaveCode='98'  ),'') AS FTReset"
                '    _Qry &= vbCrLf & " FROM      [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeaveVacation AS VC WITH(NOLOCK) "
                '    _Qry &= vbCrLf & "  WHERE   VC.FNHSysEmpTypeId='" & Val(_EmpType) & "' "
                '    _Qry &= vbCrLf & "  AND   VC.FNAgeBegin<=" & _Month & " "
                '    _Qry &= vbCrLf & "  AND   VC.FNAgeEnd>=" & _Month & " "

                '    _dttempdata3 = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '    For Each R3 As DataRow In _dttempdata3.Rows
                '        _Leave = Val(R3!FNLeaveRight.ToString)
                '        _ResetDate = R3!FTReset.ToString
                '        Exit For
                '    Next
                '    _dttempdata3.Dispose()

                '    Dim _DateReset2 As String

                '    _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
                '    _Qry &= vbCrLf & "  FROM"
                '    _Qry &= vbCrLf & " ("
                '    _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                '    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK )"
                '    _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
                '    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                '    _Qry &= vbCrLf & " ) As T"

                '    _DateReset2 = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                '    _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,1,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                '    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                '    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Leave = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                '    If _Leave > 0 And _ResetDate <> "" Then

                '        _Qry = "     SELECT       (SUM(FNTotalMinute)/480.00) AS FNTotalMinute"
                '        _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                '        _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98')"
                '        _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                '        _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset2) & "'"
                '        _Qry &= vbCrLf & " 	AND  FTDateTrans <=Convert(varchar(10),DateAdd(year,1,Convert(Datetime,'" & (_DateReset2) & "')),111)"

                '        _SumLeaveVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                '        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                '        Select Case FNStateSalaryType
                '            Case 0 'ต่อเดือน

                '                _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.0000000"))
                '            Case 1 'ต่อวัน

                '                _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                '        End Select
                '        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ


                '        If _Leave > _SumLeaveVacation Then
                '            _AmtReturnVacation = CDbl(Format(((_Leave - _SumLeaveVacation) * (_ReturnVacation * _FNSlaryPerDay)), "0.00"))
                '        End If

                '    End If
                'End If
                ''------------------ คำนวณคืนพักร้อน ----------------------------

                _SocialMinIncome = HCfg.HSocialRate.SocialIncomeMin
                _SocialMaxIncome = HCfg.HSocialRate.SocialIncomeMax
                _SocialRate = HCfg.HSocialRate.CalSocialRate
                _StateSocialOnlyCmppay = HCfg.HSocialRate.StateSocialOnlyCmppay

                _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
                _AmtPlus = 0

                _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                For Each R3 As DataRow In _dtot.Rows
                    Select Case R3!FTCfgOTCode.ToString.ToUpper
                        Case "01"
                            _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                        Case "02"
                            _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                        Case "03"
                            _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                        Case "04"
                            _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "05"
                            _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                    End Select

                Next

                '---------รายได้รายหัก อื่นๆ-------------------------
                _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"




                If _EmpCalType = "0" Then
                    If Val(_PayTerm) Mod 2 = 0 Then
                        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                    Else
                        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                    End If
                End If
                ' _Qry &= vbCrLf & "  AND FTPayType <> '" & IIf(_EmpCalType = "0" Or (Val(_PayTerm) Mod 2 = 0), "", "1") & "' "




                _dtAddOtherAmt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                'If _dtAddOtherAmt.Select("FTFinCode ='044'").Length <= 0 Then
                '    _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  7.5 As FCFinAmt   , FM.FTFinType"
                '    _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                '    _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                '    _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                '    _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                '    _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"
                '    _Qry &= vbCrLf & " FROM         [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)    INNER JOIN"
                '    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                '    _Qry &= vbCrLf & " WHERE    FN.FTFinCode = '044'"
                '    _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"
                '    If _EmpCalType = "0" Then
                '        If Val(_PayTerm) Mod 2 = 0 Then
                '            _Qry &= vbCrLf & "  AND FTPayType <> '' "
                '        Else
                '            _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                '        End If
                '    End If

                '    _dtAddOtherAmt.BeginInit()
                '    _dtAddOtherAmt.Rows.Add(HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR).Rows)

                '    _dtAddOtherAmt.EndInit()

                'End If


                _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
                _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
                _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
                _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet"
                _Qry &= vbCrLf & "  WHERE        (FTFinCode = N'001') OR  (FTFinCode = N'007') "
                _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _GAmtAddCalOT = 0
                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTStaCalOT='1' AND FTPayType='0' ")
                    _GAmtAddCalOT = _GAmtAddCalOT + Val(R2!FCFinAmt.ToString)
                Next

                _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = 0 : _FTOtherAddCalculateTax = 0 : _FCOtherDeduct = 0

                '---------------- Adjust Before Calculate------------------------------------
                _Qry = " SELECT        FN.FTStaTax, FN.FTStaSocial, (ISNULL(BF.FCFinAmt,0))  AS FCFinAmt, FM.FTFinType,ISNULL(BF.FNDay,-1) As FNDay,BF.FTFinCode "
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE        (BF.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "')"
                _Qry &= vbCrLf & "  AND (BF.FTPayTerm = '" & HI.UL.ULF.rpQuoted(_PayTerm) & "') "
                _Qry &= vbCrLf & " AND (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"

                If _AmtReturnVacation > 0 Then
                    _Qry &= vbCrLf & " UNION ALL "
                    _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial, " & _AmtReturnVacation & "  AS FCFinAmt, FM.FTFinType,-1 As FNDay,FM.FTFinCode "
                    _Qry &= vbCrLf & " FROM     [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)  INNER JOIN"
                    _Qry &= vbCrLf & "          [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE (FM.FTFinCode='019')"
                End If

                _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                For Each R2 As DataRow In _dt.Select("FNDay<=0")
                    Select Case R2!FTFinType.ToString
                        Case "1"
                            _FCOtherAdd = _FCOtherAdd + Val((R2!FCFinAmt.ToString))

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax + Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial + Val((R2!FCFinAmt.ToString))

                        Case "2"

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax - Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial - Val((R2!FCFinAmt.ToString))


                            _FCOtherDeduct = _FCOtherDeduct + Val((R2!FCFinAmt.ToString))
                    End Select
                Next

                _DayAdjAdd = 0
                _WageAdjAdd = 0

                For Each R2 As DataRow In _dt.Select("FNDay> 0")

                    _DayAdjAdd = _DayAdjAdd + Val((R2!FNDay.ToString))
                    _WageAdjAdd = _WageAdjAdd + Val((R2!FCFinAmt.ToString))

                Next

                _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
                _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= 480 THEN 480   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= 480 THEN 480   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= 480 THEN 480 ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
                _Qry &= vbCrLf & " , FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO,Max(ISNULL(FTStateMedicalCertificate,'')) AS FTStateMedicalCertificate "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_EmpCode) & " )"

                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_DateStartOfMonth) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_DateEndOfMonth) & "' "
                Else
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                End If

                _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

                _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	,Isnull(SH.FNRatePaid,1) AS FNRatePaid , Isnull(SH.FNStateShift,0) AS FNStateShift  "
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) )     AS FNTime"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT1_5,0) AS FNOT1_5"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT2,0 ) AS FNOT2  , ISNULL(T.FNOT3,0) AS FNOT3, ISNULL(T.FNOT4,0) AS FNOT4"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(T.FNLateNormalCut,0 )   AS FNLateNormalCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateOtMin,0) As FNLateOtMin,ISNULL(T.FNLateOtCut,0) As FNLateOtCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateMMin,0) As FNLateMorning"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateAfMin,0) AS FNLateAfternoon,Isnull(T.FNAbsentCut,0) AS FNAbsentCut "
                _Qry &= vbCrLf & " 	, (CASE WHEN ISNULL(T.FNAbsentSP,0) = ISNULL(T.FNAbsent,0) THEN 0 ELSE  ISNULL(T.FNAbsent,0)  END ) AS FNAbsent_Cut "
                _Qry &= vbCrLf & " 	, ISNULL(T.FNCutAbsent,0) AS FNAbsent "
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) )   AS FNTimeMin"
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0)) As FNTimeMinOrg"
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1Min,0) As FNOT1Min  "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1_5Min,0) As FNOT1_5Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNOT2Min,0) As FNOT2Min "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNLateMMin,0) AS FNLateMMin "
                _Qry &= vbCrLf & " , ISNULL(T.FNLateAfMin,0) AS FNLateAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireMMin,0) AS FNRetireMMin "
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireAfMin,0 )  as FNRetireAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireNormalCut,0) As FNRetireNormalCut "
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireOtMin,0) AS FNRetireOtMin"
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"
                _Qry &= vbCrLf & " ,CASE WHEN T.FTWeekDay=1 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSunday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSunday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=2 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTMonday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTMonday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=3 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTTuesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTTuesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=4 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTWednesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTWednesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=5 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTThursday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTThursday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=6 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTFriday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTFriday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=7 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSaturday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSaturday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  ELSE '0' END AS FTWeekly,ISNULL(FTStateAccept,'') AS FTStateAccept "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
                _Qry &= vbCrLf & "   INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK)  ON  T.FNHSysEmpID =  M.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeWeekly AS EHL WITH (NOLOCK) ON T.FNHSysEmpID=EHL.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmpTypeWeeklySpecial AS ETHL WITH (NOLOCK) ON T.FTDateTrans = ETHL.FDHolidayDate AND M.FNHSysEmpTypeId=ETHL.FNHSysEmpTypeId"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS SH WITH (NOLOCK) ON T.FNHSysShiftID = SH.FNHSysShiftID"

                _Qry &= vbCrLf & "  WHERE (T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "'  "

                If _FDDateEnd <> "" Then
                    _Qry &= vbCrLf & " 	AND T.FTDateTrans < '" & HI.UL.ULDate.ConvertEnDB(_FDDateEnd) & "'  "
                End If
                If _FTEmpState <> "2" And _FTEmpState <> "3" Then ' คำนวณค่าแรงพนักงานรายเดือน
                    _Qry &= vbCrLf & " 	AND T.FTStateAccept = '1'  "
                End If

                _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '---------------Get Trans Daily--------------------------------------
                _GFNTime = 0 : _GFNNotRegis = 0 : _GFNOT1 = 0 : _GFNOT1_5 = 0
                _GFNOT2 = 0 : _GFNOT3 = 0 : _GFNOT4 = 0 : _GFNLeaveSick = 0 : _GFNLeaveBusiness = 0
                _GFNLeaveVacation = 0 : _GFNLeavePregnant = 0 : _GFNLeaveOrdain = 0 : _GFNLeaveMarry = 0 : _GFNLeaveSpecial = 0
                _GFNLeaveOther = 0 : _GFNLateNormalMin = 0 : _GFNLateNormalCut = 0 : _GFNLateOtMin = 0
                _GFNLateOtCut = 0 : _GFNLateMorning = 0 : _GFNLateAfternoon = 0
                _GFNAbsent = 0 : _GFNCutAbsent = 0 : _GFNLeavePay = 0 : _GFNTimeMin = 0 : _GFNOT1Min = 0 : _GFNOT1_5Min = 0
                _GFNOT2Min = 0 : _GFNOT3Min = 0 : _GFNLateMMin = 0 : _GFNLateAfMin = 0 : _GFNRetireMMin = 0
                _GFNRetireAfMin = 0 : _GFNRetireNormalCut = 0 : _GFNRetireOtMin = 0 : _GFNRetireOtCut = 0
                _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
                _Gtotalleave = 0 : _GtotalleavePay = 0 : _GtotalleaveNotPay = 0 : _GtotalleavePayCalSso = 0 : _GtotalleavePayCalSsoAmt = 0
                _TotalHoliDay = 0
                _GFNLateNormalMinNotHoliday = 0

                '------------------- เริ่มการคำนวณรายวัน
                Dim _oHoliday As Integer = 0

                _TotalWorkDay = 0
                _ShiftAmt = 0
                _ShiftValue = 0
                _ShiftOTValue = 0
                _ShiftOTAmt = 0
                _FCAdd = 0 : _FTAddCalculateSocial = 0 : _FTAddCalculateTax = 0 : _FCDeduct = 0
                _GAmtPlus = 0

                Dim _RateShipftPerDay As Double = 0
                Dim _StateShift As Integer = 0
                If _FDDateStart > _FTSatrtCalculateDate Then _FTSatrtCalculateDate = _FDDateStart

                Do While _FTSatrtCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTSatrtCalculateDate < _FDDateEnd)

                    _RateShipftPerDay = 0
                    _oHoliday = 0
                    FTHldType = 0
                    _StateShift = 0
                    Dim _NewSlary As String

                    _Qry = "  SELECT   TOP 1   FNCurrentSlary  AS AMT"
                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK) "
                    _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "') "
                    _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    _FCSalary = _MSlary
                    If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    _Holiday = ""

                    For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                        _Holiday = "H"
                        FTHldType = Val(IR!FTHldType.ToString)
                        Exit For
                    Next

                    _FTShift = ""

                    _FNTime = 0
                    _FNNotRegis = 0
                    _FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
                    _FNOT3 = 0 : _FNOT4 = 0
                    _FNLateNormalMin = 0 : _FNLateNormalCut = 0
                    _FNLateOtMin = 0 : _FNLateOtCut = 0
                    _FNLateMorning = 0 : _FNLateAfternoon = 0
                    _LateCutAbsent = 0 : _FNAbsent = 0
                    _FNTimeMin = 0 : _FNOT1Min = 0
                    _FNOT1_5Min = 0 : _FNOT2Min = 0
                    _FNOT3Min = 0 : _FNOT4Min = 0
                    _FNLateMMin = 0 : _FNLateAfMin = 0
                    _FNRetireMMin = 0 : _FNRetireAfMin = 0
                    _FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
                    _FNRetireOtMin = 0 : _FNRetireOtMin = 0
                    _FNRetireOtCut = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _AmtAddCalOT = 0
                    _GtotalleavePayCalSso = 0
                    _LeaveCode = ""

                    Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                    Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                    For Each R2 In _R

                        _RatePay = Double.Parse("0" & R2!FNRatePaid.ToString)
                        _RateShipftPerDay = _RatePay
                        _StateShift = Integer.Parse("0" & R2!FNStateShift.ToString)

                        _FTShift = R2!FTShift.ToString
                        _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                        _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                        _FNNotRegis = Val(R2!FNNotRegis.ToString)
                        _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                        _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                        _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                        _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                        _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                        _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent_Cut.ToString)
                        _FNOT1Min = Val(R2!FNOT1Min.ToString)
                        _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                        _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                        _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                        _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                        _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                        _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                        _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                        _InOT = R2!FTIn3.ToString
                        _OutOT = R2!FTOut3.ToString

                        _Over = R2!FTOverClock.ToString

                        If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            _TotalWorkDay = _TotalWorkDay + 1

                            _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                            If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                If _FNOT1Min + _FNOT2Min + _FNOT4Min + _FNOT1_5Min > 0 Then
                                    _FNNetOTMealAmt = _FNNetOTMealAmt + _FNOTMealAmt
                                End If

                                _SPDateType = 0

                                _Holiday = ""

                                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _Holiday = "H"
                                    Exit For
                                Next

                                If _Holiday <> "" Then _SPDateType = 2

                                Dim _StateLeaveOther As Boolean = False
                                Dim _StateLeavacation As Boolean = False
                                Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                Dim _SumLeave As Integer = 0

                                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                    If Val(sR!LeaveType) = 1 Then
                                        _StateLeavacation = True
                                    Else
                                        _StateLeaveOther = True
                                    End If

                                    If Val(sR!LeaveType) = 2 Then
                                        _StateFTStaMaternityleaveNotpay = True
                                    End If

                                Next

                                '--------------------------- ค่ากะ -------------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)



                                    If _StatePass Then
                                        _ShiftAmt = _ShiftAmt + _ShiftValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ -------------------------------------

                                '****************************** Bonus 

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='008' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        Dim _Amt As Double = 0
                                        Dim _Cmd As String = ""
                                        _Cmd = "Select Top 1 isnull(FNAmt,0) AS  FNAmt From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus with(nolock)"
                                        _Cmd &= vbCrLf & "where FNHSysEmpID=" & Integer.Parse(_EmpCode)
                                        _Cmd &= vbCrLf & "and FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'"
                                        _Amt = Double.Parse(HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "0"))
                                        _BonusAmt = _BonusAmt + _Amt

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _Amt
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _Amt
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _Amt
                                    End If
                                Next


                                '****************************** End Bonus

                                '--------------------------- ค่ากะ OT ----------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        _ShiftOTAmt = _ShiftOTAmt + _ShiftOTValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftOTValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftOTValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftOTValue

                                    End If

                                Next
                                '--------------------------- ค่ากะ OT ----------------------------------

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='0' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then

                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + Val(RFin!FCFinAmt.ToString)

                                        If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                            _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                        Else

                                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                            Next

                                        End If
                                    End If
                                Next
                            End If
                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                        End If

                    Next


                    'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                    Select Case FNStateSalaryType
                        Case 0 'ต่อเดือน
                            _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.000"))
                            _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                            ' _SalaryPayLeave = CDbl(Format((_FCSalary) / 26, "0.000")) ' ลาป่วย หารวันทำงานในงวด  meeting 20180227 pMote , pWest , pTuk cd , pAnuwat 

                            _SalaryPayLeave = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                        Case 1 'ต่อวัน
                            _FNSlaryPerMonth = CDbl(Format((_FCSalary * CountDayPerMonth), "0.000"))
                            _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.000"))
                            _SalaryPayLeave = _FNSlaryPerDay
                    End Select
                    'เพิ่มค่าแรง กัมพูชา 20161206
                    '  _SalaryPayLeave = _FNSlaryPerDay
                    _FNSlaryPerMonth = _FNSlaryPerMonth
                    _FNSlaryPerDay = _FNSlaryPerDay
                    _SalaryPayOTKM = _FNSlaryPerDay


                    'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ

                    If _RateShipftPerDay > 1 Then
                        _FNSlaryPerDay = _FNSlaryPerDay * _RateShipftPerDay
                    End If

                    If _StateShift = 1 Then
                        _Qry = " SELECT FTCfgOTCode,Isnull(FCCfgOTNightValue,0) as  FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus   "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    Else
                        _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    End If




                    _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000"))
                    _FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000"))
                    '_SalaryPayLeaveMin = CDbl(Format(CDbl(Format(_SalaryPayLeave / 8, "0.00000")) / 60, "0.00000"))
                    _SalaryPayLeaveMin = CDbl(_SalaryPayLeave / 8) / 60

                    _FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_SalaryPayOTKM + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000")) / 60, "0.00000"))

                    _FNSlaryOTPerHour = CDbl(Format((_SalaryPayOTKM + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000"))

                    If _FTShift = "" Then
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If
                    Else

                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If

                        If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _WorkDay = _WorkDay + 1
                        End If

                        If _Holiday = "" Then
                            _GFNLateNormalMinNotHoliday = _GFNLateNormalMinNotHoliday + _FNLateNormalMin
                        End If

                        _GFNLateNormalMin = _GFNLateNormalMin + _FNLateNormalMin
                        _GFNLateNormalCut = _GFNLateNormalCut + _FNLateNormalCut
                        _GFNLateOtMin = _GFNLateOtMin + _FNLateOtMin
                        _GFNLateOtCut = _GFNLateOtCut + _FNLateOtCut
                        _GFNLateMorning = _GFNLateMorning + _FNLateMorning
                        _GFNLateAfternoon = _GFNLateAfternoon + _FNLateAfternoon
                        _GFNAbsent = _GFNAbsent + _FNAbsent
                        _GFNCutAbsent = _GFNCutAbsent + _LateCutAbsent
                        _GFNTimeMin = _GFNTimeMin + _FNTimeMin
                        _GFNOT1Min = _GFNOT1Min + _FNOT1Min
                        _GFNOT1_5Min = _GFNOT1_5Min + _FNOT1_5Min
                        _GFNOT2Min = _GFNOT2Min + _FNOT2Min
                        _GFNOT3Min = _GFNOT3Min + _FNOT3Min
                        _GFNOT4Min = _GFNOT4Min + _FNOT4Min
                        _GFNLateMMin = _GFNLateMMin + _FNLateMMin
                        _GFNLateAfMin = _GFNLateAfMin + _FNLateAfMin
                        _GFNRetireOtMin = _GFNRetireOtMin + _FNRetireOtMin
                        _GFNRetireOtCut = _GFNRetireOtCut + _FNRetireOtCut
                        _GFNRetireMMin = _GFNRetireMMin + _FNRetireMMin
                        _GFNRetireAfMin = _GFNRetireAfMin + _FNRetireAfMin
                        _GFNRetireNormalCut = _GFNRetireNormalCut + _FNRetireNormalCut

                    End If

                    _TmpLeavePay = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0 : FNPayLeaveSpecialBahtMin = 0
                    _FNLeaveNotPay = 0
                    _LeaveCode = ""
                    For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' ")
                        _LeaveCode = sR!LFTLeaveCode.ToString

                        _TmpLeavePay = Val(sR!FNTotalPayMinute.ToString)

                        Select Case sR!LFTLeaveCode.ToString.ToUpper
                            Case "97"

                            Case Else

                                _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                                _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                                _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                                If sR!FTStaCalSSO.ToString = "1" Then
                                    _GtotalleavePayCalSso = Val(sR!FNTotalPayMinute.ToString)
                                End If
                        End Select

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        Select Case sR!LFTLeaveCode.ToString.ToUpper '""Val(sR!LeaveType)
                            Case "98"
                                _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                            Case "1"
                                FNPayLeaveBusinessBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveBusinessBahtMin = GFNPayLeaveBusinessBahtMin + FNPayLeaveBusinessBahtMin

                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                            Case "0"

                                FNPayLeaveSickBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveSickBahtMin = GFNPayLeaveSickBahtMin + FNPayLeaveSickBahtMin
                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)

                                If FNPayLeaveSickBahtMin > 0 Then
                                    _LeaveSickPay = _LeaveSickPay + 1

                                    Dim _PayPer As Double = 0
                                    Select Case _LeaveSickPay
                                        Case Is <= 30
                                            _PayPer = 100
                                        Case Is <= 90
                                            _PayPer = 60
                                        Case Is <= 180
                                            _PayPer = 0
                                    End Select

                                    If _PayPer = 0 Then
                                        FNPayLeaveSickBahtMin = 0
                                        GFNPayLeaveSickBahtMin = GFNPayLeaveSickBahtMin - FNPayLeaveSickBahtMin
                                        _GFNLeaveOther = _GFNLeaveOther - FNPayLeaveSickBahtMin
                                    End If

                                    If _DTEmpPayLeaveSick.Select("FNSalary=" & _FNSlaryPerDay & " AND FNPayPer=" & _PayPer & " ").Length > 0 Then
                                        For Each Rx As DataRow In _DTEmpPayLeaveSick.Select("FNSalary=" & _FNSlaryPerDay & "  AND FNPayPer=" & _PayPer & "  ")
                                            Rx!FNDay = Val(Rx!FNDay) + FNPayLeaveSickBahtMin
                                            Exit For
                                        Next
                                    Else
                                        _DTEmpPayLeaveSick.Rows.Add(_FNSlaryPerDay, FNPayLeaveSickBahtMin, _PayPer)
                                    End If


                                End If

                            Case "999"
                                FNPayLeaveSpecialBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveSpecial = _GFNLeaveSpecial + FNPayLeaveSpecialBahtMin
                            Case "97"
                                FNParturitionLeaveMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNParturitionLeaveMin = GFNParturitionLeaveMin + FNParturitionLeaveMin

                                ' _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                            Case Else
                                _FNLeavePay = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End Select

                    Next

                    _GFNLeavePay = _GFNLeavePay + _FNLeavePay
                    _SocialBefore = 0
                    _SocialBeforeAmt = 0

                    Dim _WageAmtPerDay As Double = 0
                    Dim _WageOTAmtPerDay As Double = 0
                    Dim _TimeOTMdr As Integer = 0

                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    Else
                        _WageAmtPerDay = CDbl(Format((_FNTimeMin) * _FNSlaryPerMin, "0.000"))
                        _FNEmpBaht = _FNEmpBaht + _WageAmtPerDay
                    End If

                    _nBahtOt1 = _nBahtOt1 + CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000"))


                    If FTHldType = 1 And _FNOT3Min > 0 Then
                        _GAmtPlus = _GAmtPlus + _AmtPlus
                    End If

                    _nBahtOt15 = _nBahtOt15 + CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.000"))

                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.000"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.000"))

                    _LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.000"))

                    Dim _TmpFNLapaidAmt As Double = CDbl(Format(_TmpLeavePay * _SalaryPayLeaveMin, "0.000"))
                    Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _SalaryPayLeaveMin, "0.000"))

                    _Lapaid = _Lapaid + _TmpLapaidAmt
                    _GtotalleavePayCalSsoAmt = _GtotalleavePayCalSsoAmt + CDbl(Format(_GtotalleavePayCalSso * _FNSlaryPerMin, "0.000"))  'เงินลาจ่ายที่นำไปคิดประกันสังคม

                    If _LeaveCode <> "" And _FNLeaveVacation > 0 Then

                        Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * (_MoneyRetVacationPerDay / 480), "0.000"))
                    Else
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.000"))
                    End If

                    If _FTStatePayHoliday <> "1" Then
                        _oHoliday = 0
                    Else

                        If (_FNLeaveNotPay <= 0) Then
                            If _TmpFNLapaidAmt <= 0 Then
                                _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.000"))
                            Else
                                _TotalHoliDay = _TotalHoliDay - _oHoliday
                                _oHoliday = 0
                            End If
                        Else

                            _TotalHoliDay = _TotalHoliDay - _oHoliday
                            _oHoliday = 0
                        End If

                    End If

                    If _DTEmpWorkDay.Select("FNSalary=" & _FNSlaryPerDay & "").Length > 0 Then
                        For Each Rx As DataRow In _DTEmpWorkDay.Select("FNSalary=" & _FNSlaryPerDay & "")

                            Rx!FNDay = Val(Rx!FNDay) + _FNTimeMin
                            Rx!FNOT1 = Val(Rx!FNOT1) + _FNOT1Min
                            Rx!FNOT15 = Val(Rx!FNOT15) + _FNOT1_5Min
                            Rx!FNOT2 = Val(Rx!FNOT2) + _FNOT2Min
                            Rx!FNOT3 = Val(Rx!FNOT3) + _FNOT3Min
                            Rx!FNOT4 = Val(Rx!FNOT4) + _FNOT4Min
                            Rx!FNHoloday = Val(Rx!FNHoloday) + (_oHoliday)
                            Rx!FNLate = Val(Rx!FNLate) + _FNLateNormalCut
                            Rx!FNAbsent = Val(Rx!FNAbsent) + _FNAbsent
                            Rx!FNLateCutAmtAbsent = Val(Rx!FNLateCutAmtAbsent) + _LateCutAbsent
                            Rx!FNLeavePay = Val(Rx!FNLeavePay) + _FNLeavePay
                            Rx!FNLeaveNotPay = Val(Rx!FNLeaveNotPay) + (_FNLeaveNotPay)
                            Rx!FNBusiness = Val(Rx!FNBusiness) + FNPayLeaveBusinessBahtMin
                            Rx!FNSpecial = Val(Rx!FNSpecial) + FNPayLeaveSpecialBahtMin
                            Rx!FNParturition = Val(Rx!FNParturition) + FNParturitionLeaveMin
                            Rx!FNVacation = Val(Rx!FNVacation) + _FNLeaveVacation
                            Rx!FNShiftNo = _StateShift
                            Rx!FNSlaryOTPerMin = _FNSlaryOTPerMin
                            Exit For
                        Next
                    Else
                        _DTEmpWorkDay.Rows.Add(_FNSlaryPerDay, _FNTimeMin, _FNOT1Min, _FNOT1_5Min,
                                               _FNOT2Min, _FNOT3Min, _FNOT4Min, (_oHoliday),
                                               _FNLateNormalCut, _FNAbsent, _LateCutAbsent, _FNLeavePay,
                                               _FNLeaveNotPay, FNPayLeaveBusinessBahtMin, FNPayLeaveSpecialBahtMin, FNParturitionLeaveMin, _FNLeaveVacation, _StateShift, _FNSlaryOTPerMin)
                    End If

                    _FTSatrtCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTSatrtCalculateDate, 1))

                Loop

                _FNEmpBaht = 0
                _FNEmpBaht = 0
                _nBahtOt1 = 0
                _nBahtOt15 = 0
                _nBahtOt2 = 0
                _nBahtOt3 = 0
                _nBahtOt4 = 0
                _nBahtAbsent = 0
                _LateCutAmt = 0
                _LateCutAmtAbsent = 0
                _HBaht = 0
                _LaNotpaid = 0
                _Lapaid = 0
                FNPayLeaveBusinessBaht = 0 : FNPayLeaveSickBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0
                _FCPayVacationBaht = 0
                _FNSlaryOTPerMin = 0
                Dim _TotalxDay As Integer = 0
                For Each Rx As DataRow In _DTEmpWorkDay.Rows

                    _FNSlaryPerMin = CDbl(Format(CDbl(Rx!FNSalary) / 480, "0.00000"))
                    _FNSlaryPerDay = CDbl(Format(CDbl(Rx!FNSalary), "0.00000"))
                    _FNSlaryOTPerMin = Double.Parse("0" & Rx!FNSlaryOTPerMin)

                    _TotalxDay = 0



                    Try
                        If FNWorkDayInWeekBF > 0 Then
                            'If Val(Rx!FNDay) > ((FNWorkDayInMonth - FNWorkDayInWeekBF) * 480) Then
                            '    _FNEmpBaht = _FNEmpBaht + CDbl(Format(((FNWorkDayInMonth - FNWorkDayInWeekBF) * 480) * _FNSlaryPerMin, "0.000"))
                            'Else

                            _TotalxDay = Val(Rx!FNDay) \ 480.0
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                            ' End If
                        Else
                            _TotalxDay = Val(Rx!FNDay) \ 480.0
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                        End If
                    Catch ex As Exception
                        _TotalxDay = Val(Rx!FNDay) \ 480.0
                        _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                        _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                    End Try


                    If Double.Parse(Rx!FNShiftNo.ToString) = 1 Then
                        _Qry = " SELECT FTCfgOTCode,Isnull(FCCfgOTNightValue,0) as  FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus   "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    Else
                        _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    End If



                    _nBahtOt1 = _nBahtOt1 + CDbl(Format(Val(Rx!FNOT1) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000"))
                    _nBahtOt15 = _nBahtOt15 + CDbl(Format(Val(Rx!FNOT15) * ((_FNSlaryOTPerMin) * _RateOT15), "0.000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format(Val(Rx!FNOT2) * ((_FNSlaryOTPerMin) * _RateOT2), "0.000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format(Val(Rx!FNOT3) * ((_FNSlaryOTPerMin) * _RateOT3), "0.000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format(Val(Rx!FNOT4) * ((_FNSlaryOTPerMin) * _RateOT4), "0.000"))
                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(Val(Rx!FNAbsent) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((Val(Rx!FNLate)) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((Val(Rx!FNLateCutAmtAbsent)) * _FNSlaryPerMin, "0.000"))
                    _HBaht = _HBaht + CDbl(Format(Val(Rx!FNHoloday) * CDbl(Rx!FNSalary), "0.000"))
                    _LaNotpaid = _LaNotpaid + CDbl(Format(Val(Rx!FNLeaveNotPay) * _FNSlaryOTPerMin, "0.000"))
                    _Lapaid = _Lapaid + CDbl(Format(Val(Rx!FNLeavePay) * _SalaryPayLeaveMin, "0.000"))
                    FNPayLeaveBusinessBaht = FNPayLeaveBusinessBaht + CDbl(Format(Val(Rx!FNBusiness) * _FNSlaryPerMin, "0.000"))

                    ' FNParturitionLeave = FNParturitionLeave + CDbl(Format(Val(Rx!FNParturition) * _FNSlaryPerMin, "0.000"))

                    Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay)
                    '  MsgBox(_MoneyRetVacationPerDay)
                    _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(Val(Rx!FNVacation) * (_MoneyRetVacationPerDay / 480), "0.000"))
                    '   MsgBox(Val(Rx!FNVacation))
                    ' MsgBox(_FCPayVacationBaht)

                    FNPayLeaveSpecialBaht = FNPayLeaveSpecialBaht + CDbl(Format(Val(Rx!FNSpecial) * (_MoneyRetVacationPerDay / 480), "0.000"))
                    GFNPayLeaveSpecialBahtMin = Val(Rx!FNSpecial)
                    FNVacationRetMin = Val(Rx!FNVacation)
                Next

                FNParturitionLeave = 0
                GFNParturitionLeaveMin = 0
                Dim _DeductAttandanceAmt As Double = 0
                Call CalculateParturition(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), FNParturitionLeave, GFNParturitionLeaveMin, _DeductAttandanceAmt, _WorkAge, _WorkAgeParturition)

                FNPayLeaveSickBaht = 0
                For Each Rx As DataRow In _DTEmpPayLeaveSick.Rows
                    _FNSlaryPerMin = (CDbl(CDbl(Rx!FNSalary) / 480) * CDbl(Rx!FNPayPer)) / 100.0
                    FNPayLeaveSickBaht = FNPayLeaveSickBaht + CDbl(Format(Val(Rx!FNDay) * _FNSlaryPerMin, "0.000"))
                Next

                _FNNetOTMealAmtUS = Format(_FNNetOTMealAmt / _FNExchangeRate, "0.000")

                If _FDDateEnd <> "" And _FDDateEnd <= _TmpFDDateEndP Then
                    'ลาออกในงวดแรก อายุงาน มากกว่า 13 วัน  จ่ายค่าเดินทาง & ค่าสุขภาพ เต็มเดือน

                    If _WorkAge >= 1 Or _WorkingDayN > 13 Then
                        If Val(_PayTerm) Mod 2 = 1 Then
                            _FNTransportAmt = _FNTransportAmt + _FNTransportAmt
                            _FNHealtCareAmt = _FNHealtCareAmt + _FNHealtCareAmt
                        End If
                    End If
                End If


                If _FTEmpState = "2" Or _FTEmpState = "3" Or (_FDDateEnd <= _EndDate And _FDDateEnd <> "") Then

                    FNPayLeaveBusinessBahtMin = 0 : FNPayLeaveSickBahtMin = 0 : FNPayLeaveSpecialBahtMin = 0 : FNParturitionLeaveMin = 0
                    GFNPayLeaveBusinessBahtMin = 0 : GFNPayLeaveSickBahtMin = 0 : GFNParturitionLeaveMin = 0
                    FNPayLeaveBusinessBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0
                    'FNPayLeaveSickBaht = 0 : ไม่มี เคสคำนวณ ในกรณีลาออก ใช้จากคำนวณปกติ

                    If _dttran.Select("FTStateAccept<>'1' AND FTWeekly <>'1' ").Length > 0 Or _dttran.Rows.Count <= 0 Then
                        Return False
                    End If

                    '_FCSalary = _MSlary
                    ''อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                    'Select Case FNStateSalaryType
                    '    Case 0 'ต่อเดือน
                    '        _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.000"))
                    '        _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                    '    Case 1 'ต่อวัน
                    '        _FNSlaryPerMonth = CDbl(Format((_FCSalary * CountDayPerMonth), "0.000"))
                    '        _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.000"))
                    'End Select
                    ''เพิ่มค่าแรง กัมพูชา 20161206
                    '_FNSlaryPerMonth = _FNSlaryPerMonth
                    '_FNSlaryPerDay = _FNSlaryPerDay
                    ''อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ

                    _Gtotalleave = 0
                    _GtotalleavePay = 0
                    _GtotalleaveNotPay = 0
                    _GFNLeaveOther = 0
                    _GFNLeavePay = 0
                    _GtotalleavePayCalSso = 0
                    _LaNotpaid = 0

                    Dim _NewSlary As String = ""

                    For Each sR As DataRow In _dtLeave.Rows

                        _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                        _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                        _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                        If sR!FTStaCalSSO.ToString = "1" Then
                            _GtotalleavePayCalSso = Val(sR!FNTotalPayMinute.ToString)
                        End If

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                        Else
                            _GFNLeavePay = _GFNLeavePay + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End If

                    Next

                    _LaNotpaid = CDbl(Format(_GtotalleaveNotPay * _FNSlaryPerMin, "0.000"))

                    If _LaNotpaid > _FNSlaryPerMonth Then
                        _LaNotpaid = _FNSlaryPerMonth
                    End If

                    _WorkingDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_DateEndOfMonth))) + 1



                    '' custom เงินเดือนคนงาออก ไม่ ตรง 20180601
                    'If _FDDateStart <= _StartDate And (_FDDateEnd >= _DateEndOfMonth Or _FDDateEnd = "") Then

                    '    Dim _SmDate As String = _DateStartOfMonth
                    '    Dim _EmDate As String = _DateEndOfMonth
                    '    Dim _dtSalary As New DataTable

                    '    _dtSalary.Columns.Add("FNCurrentSlary", GetType(Double))
                    '    _dtSalary.Columns.Add("FNDay", GetType(Integer))

                    '    Do While _SmDate <= _EmDate

                    '        _Qry = "  SELECT      TOP 1   FNCurrentSlary  AS AMT"
                    '        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK)"
                    '        _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_SmDate) & "') "
                    '        _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '        _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    '        _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    '        _FCSalary = _FNSlaryPerMonth
                    '        If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    '        If _dtSalary.Select("FNCurrentSlary=" & _FCSalary & "").Length > 0 Then

                    '            For Each Rxx As DataRow In _dtSalary.Select("FNCurrentSlary=" & _FCSalary & "")
                    '                Rxx!FNDay = Integer.Parse(Val(Rxx!FNDay)) + 1
                    '                Exit For
                    '            Next

                    '        Else
                    '            _dtSalary.Rows.Add(_FCSalary, 1)
                    '        End If

                    '        _SmDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_SmDate, 1))
                    '    Loop

                    '    Dim _TotalDay As Integer = 0
                    '    _FNEmpBaht = 0
                    '    If _dtSalary.Select("FNCurrentSlary<>" & _FNSlaryPerMonth & "").Length > 0 Then
                    '        For Each Rxx As DataRow In _dtSalary.Select("FNCurrentSlary<>" & _FNSlaryPerMonth & "")
                    '            _TotalDay = _TotalDay + Integer.Parse(Val(Rxx!FNDay))

                    '            _FNEmpBaht = _FNEmpBaht + Double.Parse(Format((Integer.Parse(Val(Rxx!FNDay)) * Double.Parse(Val(Rxx!FNCurrentSlary))), "0.000"))
                    '        Next

                    '        _FNEmpBaht = _FNEmpBaht + (_FNSlaryPerMonth - CDbl(Format(_TotalDay * _FNSlaryPerDay, "0.000")))

                    '    Else
                    '        _FNEmpBaht = _FNSlaryPerMonth
                    '    End If

                    '    _dtSalary.Dispose()

                    'Else

                    '    Dim _TotalDay As Integer = 0
                    '    If _FDDateStart > _StartDate And _FDDateEnd < _EndDate And _FDDateEnd <> "" Then
                    '        _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_FDDateStart), CDate(_FDDateEnd))) + 1

                    '    ElseIf _FDDateStart > _StartDate Then
                    '        _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_FDDateStart)))
                    '    ElseIf _FDDateEnd < _EndDate And _FDDateEnd <> "" Then
                    '        If _FDDateEnd < _DateStartOfMonth Then
                    '            _TotalDay = _WorkingDay
                    '        Else
                    '            _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_FDDateEnd), CDate(_DateEndOfMonth))) + 1
                    '        End If
                    '    End If

                    '    If _TotalDay >= _WorkingDay Then
                    '        _FNEmpBaht = 0
                    '        _WorkingDay = 0
                    '    Else
                    '        '      _FNEmpBaht = _FNSlaryPerMonth - CDbl(Format(_TotalDay * _FNSlaryPerDay, "0.000"))
                    '        If _WorkingDay > 30 Then _WorkingDay = 30
                    '        _WorkingDay = _WorkingDay - _TotalDay
                    '    End If

                    'End If

                    If _WorkingDay > 30 Then _WorkingDay = 30

                    _WorkingDay = CDbl(Format(((_WorkingDay * 480) - (_Gtotalleave)) / 480, "0.000"))
                    _WorkingDay = _WorkingDay - (_GFNAbsent / 480)
                    If _WorkingDay < 0 Then
                        _WorkingDay = 0
                    End If

                Else
                    _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.000"))
                End If
                _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.000"))  '2018/03/02 ยกมา คำนวณคนลาออก ไม่ตรง

                '-----------calculate Other Add For KKN ------------------ 
                Dim _ChkLeave As Integer = 0
                For Each sR As DataRow In _dtLeave.Select("LFTLeaveCode='0' OR LFTLeaveCode='1' OR LFTLeaveCode='2' OR LFTLeaveCode='3' ")
                    _ChkLeave = _ChkLeave + Val(sR!FNTotalMinute.ToString)
                Next
                '_DateStartOfMonth = _StartDate  'วันแรกของเดือน
                '_DateEndOfMonth = _EndDate 'วันแของเดือน
                _FNNetAttandanceAmt = 0
                '  If (_FTEmpState = "2" Or (_FTEmpState <> "2" And _StartDate <= Left(_StartDate, 8) & "24" And _EndDate >= Left(_StartDate, 8) & "24")) And _FNAttandanceAmt > 0 Then
                If _FNAttandanceAmt > 0 Then

                    Dim _FNAttandanceAmtPerDay As Double = Double.Parse(Format(_FNAttandanceAmt / 13, "0.000"))
                    Dim _FNLateNormalMinBF As Integer = 0
                    Dim _leaaveSpecial As Integer = 0
                    Dim _leaaveOther As Integer = 0
                    Dim _leaaveSickCard As Integer = 0
                    Dim _leaaveOSickNoCard As Integer = 0
                    Dim _leaaveNotPayAttdance As Integer = 0
                    Dim _StateNotPayAttdance As Boolean = True

                    'For Each Rxm As DataRow In _dtLeave.Select("LFTLeaveCode='9' ")
                    '    _leaaveSpecial = _leaaveSpecial + Val(Rxm!FNTotalMinute.ToString)
                    'Next

                    'For Each Rxm As DataRow In _dtLeave.Select("LFTLeaveCode<>'0'   AND LFTLeaveCode<>'98' AND LFTLeaveCode<>'9' ")
                    '    _leaaveOther = _leaaveOther + Val(Rxm!FNTotalMinute.ToString)
                    'Next

                    'For Each Rxm As DataRow In _dtLeave.Select("LFTLeaveCode='0'   AND FTStateMedicalCertificate<>'1'")
                    '    _leaaveOSickNoCard = _leaaveOSickNoCard + Val(Rxm!FNTotalMinute.ToString)
                    'Next

                    'For Each Rxm As DataRow In _dtLeave.Select("LFTLeaveCode='0'   AND FTStateMedicalCertificate='1'")
                    '    _leaaveSickCard = _leaaveSickCard + Val(Rxm!FNTotalMinute.ToString)
                    'Next

                    For Each Rxm As DataRow In _dtLeave.Select("FNTotalNotPayMinute>0")
                        _leaaveNotPayAttdance = _leaaveNotPayAttdance + 480 ' Val(Rxm!FNTotalNotPayMinute.ToString)
                    Next


                    For Each Rzm As DataRow In _dtLeave.Select("FNTotalPayMinute > 0 ")
                        If Rzm!LFTLeaveCode.ToString = "97" Then 'Or Rzm!LFTLeaveCode.ToString = "98" Or Rzm!LFTLeaveCode.ToString = "1"
                            '(Rzm!LFTLeaveCode.ToString = "0" And Rzm!FTStateMedicalCertificate.ToString = "1") Or    'ลาป่วยมีใบรับรองแพทย์ จ่ายเต็มวัน  / ก่อนหน้าไม่จ่ายวันที่ลา 20181206
                            _leaaveNotPayAttdance = _leaaveNotPayAttdance + 480

                        Else
                            If Rzm!LFTLeaveCode.ToString = "0" And Rzm!FTStateMedicalCertificate.ToString = "0" Then
                                _StateNotPayAttdance = False
                            End If
                        End If
                    Next



                    'ลาคลอดอายุงานมากว่า 1 ปี ไม่ได้ค่าสุขภาพใงวดที่ไม่มีวันทำงาน
                    If _WorkAgeParturition > 12 Then
                        If _dtLeave.Select("FNTotalPayMinute > 0  and LFTLeaveCode ='97' ").Length > 0 Then
                            If _dttran.Select("FNTime > 0  OR FNAbsent > 0 ").Length <= 0 Then
                                _FNTransportAmt = 0
                                _FNHealtCareAmt = 0
                            End If
                        End If
                    End If


                    If _GFNAbsent <= 0 And (_GFNLateNormalMinNotHoliday + _FNLateNormalMinBF) <= 0 And _leaaveOSickNoCard <= 0 And _leaaveOther <= 0 Then

                        Dim _FNWorkingDayBF As Integer = 0
                        '_Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNWorkingDay,0)) AS FNWorkingDay"
                        '_Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                        '_Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        '_Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                        '_Qry &= vbCrLf & "AND P.FNHSysEmpID ='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                        '_Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                        '_Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                        '_Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                        '_Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                        '_Qry &= vbCrLf & "  Select FNMonth"
                        '_Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                        '_Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                        '_Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        '_Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                        '_Qry &= vbCrLf & "  )  "

                        '_FNWorkingDayBF = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")) ' Integer.Parse(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")))

                        _FNNetAttandanceAmt = _FNAttandanceAmt
                        'If _FDDateEnd <> "" And _FDDateEnd > _StartDate And _FDDateEnd <= _EndDate Then
                        'If _FDDateEnd <> "" And _FDDateEnd > _DateStartOfMonth And _FDDateEnd <= _DateEndOfMonth Then
                        '    'Modify 20150218 Resign Not Pay Attance Bonus
                        '    'If (_WorkingDay + _FNWorkingDayBF) < 13 And _EndDate <> "" Then
                        '    '    _FNNetAttandanceAmt = Format((_FNNetAttandanceAmt / 13) * (_WorkingDay + _FNWorkingDayBF), "0.00")
                        '    'End If
                        '    _FNNetAttandanceAmt = 0
                        '    'ElseIf _FDDateStart > _StartDate And _FDDateStart <= _EndDate Then
                        'ElseIf _FDDateStart > _DateStartOfMonth And _FDDateStart <= _DateEndOfMonth Then
                        '    If (_WorkingDay + _FNWorkingDayBF) < 13 Then
                        '        _FNNetAttandanceAmt = Format((_FNNetAttandanceAmt / 13) * (_WorkingDay + _FNWorkingDayBF), "0.00")
                        '    End If
                        'End If
                        If _FDDateEnd <> "" And _FDDateEnd > _StartDate And _FDDateEnd <= _EndDate Then
                            'Modify 20150218 Resign Not Pay Attance Bonus
                            'If (_WorkingDay + _FNWorkingDayBF) < 13 And _EndDate <> "" Then
                            '    _FNNetAttandanceAmt = Format((_FNNetAttandanceAmt / 13) * (_WorkingDay + _FNWorkingDayBF), "0.00")
                            'End If
                            _FNNetAttandanceAmt = 0
                            'ElseIf _FDDateStart > _StartDate And _FDDateStart <= _EndDate Then
                        ElseIf _FDDateStart > _StartDate And _FDDateStart <= _EndDate Then
                            ' If (_WorkingDay ) < 13 Then
                            _FNNetAttandanceAmt = Format((_FNNetAttandanceAmt / 13) * (_WorkingDay + _TotalHoliDay), "0.000")
                            'End If
                        End If

                        If _leaaveNotPayAttdance > 0 And _FNNetAttandanceAmt > 0 Then
                            Dim _DeductAttAmt As Double = Double.Parse(Format(((_leaaveNotPayAttdance / 480) * _FNAttandanceAmtPerDay), "0.000"))
                            _FNNetAttandanceAmt = _FNNetAttandanceAmt - _DeductAttAmt

                            If _FNNetAttandanceAmt < 0 Then
                                _FNNetAttandanceAmt = 0
                            End If

                        End If
                        If Not (_StateNotPayAttdance) Then
                            _FNNetAttandanceAmt = 0
                        End If

                        'If _leaaveSickCard > 0 And _FNNetAttandanceAmt > 0 Then

                        '    Dim _Disamt As Double = 0

                        '    _Disamt = Format((_FNNetAttandanceAmt / (13 * 480)) * (_leaaveSickCard), "0.00")
                        '    _FNNetAttandanceAmt = _FNNetAttandanceAmt - _Disamt

                        'End If
                    End If
                End If

                '-----------calculate Other Add For KKN ------------------
                _WorkingDay = _WorkingDay + _DayAdjAdd

                _GFNTimeMin = _GFNTimeMin + (_DayAdjAdd * 480)
                _FNEmpBaht = _FNEmpBaht + _WageAdjAdd
                _nBahtOt1 = CDbl(Format(_nBahtOt1, "0.000"))
                _nBahtOt15 = CDbl(Format(_nBahtOt15, "0.000"))
                _nBahtOt2 = CDbl(Format(_nBahtOt2, "0.000"))
                _nBahtOt3 = CDbl(Format(_nBahtOt3, "0.000")) + _GAmtPlus  ' ได้เงินพิเศษช่วงเทศกาลเพิ่ม
                _nBahtOt4 = CDbl(Format(_nBahtOt4, "0.000"))

                Dim _TmpPe As String = ""

                If _FTEmpState = "2" Then
                Else
                    _TmpPe = IIf(Val(_PayTerm) - 1 Mod 2 = 1, (Val(_PayTerm) - 1).ToString("00"), "")
                End If

                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน ประเภทจ่ายเป็นเดือน ของงวดก่อนหน้า ---------------------
                'If _FTStatePayHoliday <> "1" Then '--------- รายเดือนไม่ได้ค่าจ้างวันหยุด---------------
                'Else
                If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='1'  ").Length > 0 Then

                    Dim _BFSDate As String = ""
                    Dim _BFEDate As String = ""

                    _Qry = " SELECT TOP 1  FDCalDateBegin, FDCalDateEnd"
                    _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & " WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & " AND FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & " AND FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND FTPayMonth IN (   "
                    _Qry &= vbCrLf & "  Select FTPayMonth"
                    _Qry &= vbCrLf & "    FROM THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "   AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & " )  "

                    _dttemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                    For Each Row As DataRow In _dttemp.Rows
                        _BFSDate = Row!FDCalDateBegin.ToString
                        _BFEDate = Row!FDCalDateEnd.ToString
                    Next

                    If _BFSDate <> "" And _BFEDate <> "" Then

                        _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                        _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                        _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                        _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                        _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                        _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                        _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                        _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                        _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                        _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0)  + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                        _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                        _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                        _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                        _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                        _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                        _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                        _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                        _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                        _Qry &= vbCrLf & ",P.FTOverClock,P.FTWeekDay"
                        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN "
                        _Qry &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                        _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                        _Qry &= vbCrLf & " 	And T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                        _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                        _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Do While _BFSDate <= _BFEDate
                            _FTShift = ""
                            Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                            Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                            For Each R2 In _R

                                _FTShift = R2!FTShift.ToString
                                _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)

                                _InOT = R2!FTIn3.ToString
                                _OutOT = R2!FTOut3.ToString

                                _Over = R2!FTOverClock.ToString

                                If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    If _FTShift <> "" Then

                                        _SPDateType = 0

                                        _Holiday = ""

                                        _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                        _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                        _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'  AND FTStateActive='1'  "
                                        _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                        If _Holiday <> "" Then _SPDateType = 2

                                        Dim _StateLeaveOther As Boolean = False
                                        Dim _StateLeavacation As Boolean = False


                                        Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                        Dim _SumLeave As Integer = 0

                                        For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                            _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                            If Val(sR!LeaveType) = 1 Then
                                                _StateLeavacation = True
                                            Else
                                                _StateLeaveOther = True
                                            End If

                                            If Val(sR!LeaveType) = 2 Then
                                                _StateFTStaMaternityleaveNotpay = True
                                            End If

                                        Next

                                        For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='1' ")
                                            Dim _StatePass As Boolean = True

                                            If _OutOT <> "" Then
                                                Beep()
                                            End If

                                            If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                            If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                            If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                            If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                            If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                            If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                            If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                            End If

                                            If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                            If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                            If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                If _STime.Length = _ETime.Length Then
                                                    If IsDate(_STime) And IsDate(_ETime) Then
                                                        If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If
                                                Else
                                                    _StatePass = False
                                                End If

                                            End If

                                            If _StatePass Then
                                                _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                                    _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                                Else
                                                    For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                        xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                    Next
                                                End If

                                            End If
                                        Next
                                    End If
                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                                End If
                            Next

                            _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                        Loop
                    End If
                End If
                ' End If
                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------


                '-------- รายได้อื่นๆจ่ายงวดกลางเดือน--------------------
                If _FTEmpState <> "2" And Val(_PayTerm) Mod 2 = 1 Then
                    If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='2'  ").Length > 0 Then

                        Dim _BFSDate As String = ""
                        Dim _BFEDate As String = ""

                        _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                        _BFEDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_BFSDate, 8) & "01", 1), -1)) 'วันสุดท้ายของเดือน

                        If _BFSDate <> "" And _BFEDate <> "" Then

                            _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                            _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                            _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                            _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                            _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                            _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                            _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                            _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                            _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                            _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                            _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                            _Qry &= vbCrLf & " ,P.FTOverClock,P.FTWeekDay"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                            _Qry &= vbCrLf & "    WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                            _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                            Do While _BFSDate <= _BFEDate
                                _FTShift = ""
                                Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                                Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                For Each R2 In _R

                                    _FTShift = R2!FTShift.ToString
                                    _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                    _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                    _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                    _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                    _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                    _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                    _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                    _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                    _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                    _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                    _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                    _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                    _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                    _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                    _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                    _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                    _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                                    _InOT = R2!FTIn3.ToString
                                    _OutOT = R2!FTOut3.ToString
                                    _Over = R2!FTOverClock.ToString

                                    If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                        If _FTShift <> "" Then

                                            _SPDateType = 0

                                            _Holiday = ""

                                            _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                            _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'  AND FTStateActive='1' "
                                            _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                            If _Holiday <> "" Then _SPDateType = 2

                                            Dim _StateLeaveOther As Boolean = False
                                            Dim _StateLeavacation As Boolean = False


                                            Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                            Dim _SumLeave As Integer = 0

                                            For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                                _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                                If Val(sR!LeaveType) = 1 Then
                                                    _StateLeavacation = True
                                                Else
                                                    _StateLeaveOther = True
                                                End If

                                                If Val(sR!LeaveType) = 2 Then
                                                    _StateFTStaMaternityleaveNotpay = True
                                                End If

                                            Next

                                            For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='2' ")
                                                Dim _StatePass As Boolean = True

                                                If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                                If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                                If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                                If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                                If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                                If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)

                                                If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                    _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                                End If

                                                If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                                If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                                If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                    Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                    Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                    If _STime.Length = _ETime.Length Then
                                                        If IsDate(_STime) And IsDate(_ETime) Then
                                                            If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                                _StatePass = False
                                                            End If
                                                        Else
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If

                                                End If

                                                If _StatePass Then
                                                    _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                    If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                    If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                    If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                                        _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                                    Else
                                                        For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                            xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                        Next
                                                    End If

                                                End If
                                            Next
                                        End If
                                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    End If

                                Next

                                _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                            Loop
                        End If
                    End If
                End If
                '-------------------------------------------------------------------------------------------
                If _FTEmpState = "2" And Val(_PayTerm) Mod 2 = 0 Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1'")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                            Else
                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next

                ElseIf _FDDateEnd <> "" And _FDDateEnd < _EndDate Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0' and FTFinCode='013' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay)
                                Next

                            End If
                        End If
                    Next
                ElseIf _FDDateEnd = "" Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0' and FTFinCode='013' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Double.Parse(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Double.Parse(R2!FCFinAmt.ToString))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Double.Parse(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next
                End If

                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0'  and FTFinCode <> '013' ")
                    Dim _StatePass As Boolean = True

                    If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                    If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                    If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                    If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                    If _StatePass Then

                        _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                        If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                        If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                        If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                            _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                        Else

                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                            Next

                        End If
                    End If
                Next

                For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTFinType='2'")

                    _FCDeduct = _FCDeduct + Val(R2!FCFinAmt.ToString)


                Next
                '---------รายได้รายหัก อื่นๆ-------------------------

                '------------------- สิ้นสุดการคำนวณรายวัน
                _FTWorkmenAmtBefore = 0
                _FTTotalCalWorkmenBefore = 0

                _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FCSocial"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocial,0)) AS FCSocialAmt"
                _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                _Qry &= vbCrLf & "  Select FNMonth"
                _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                _Qry &= vbCrLf & "  )  "

                Dim _DtSso As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                If _DtSso.Rows.Count > 0 Then
                    _SocialBefore = Val(_DtSso.Rows(0)!FCSocial.ToString)
                    _SocialBeforeAmt = Val(_DtSso.Rows(0)!FCSocialAmt.ToString)
                End If

                If _FTEmpState = "2" Or _FTEmpState = "3" Then


                    '_FNEmpBaht = CDbl(Format((_FCSalary), "0.000"))
                    'If _FTEmpState = "3" Then
                    '    _FNEmpBaht = CDbl(Format((_FCSalary) / 2, "0.000"))

                    'End If


                    If FTStaDeductAbsent = 0 Then
                        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent) '+ _nBahtAbsent
                    Else
                        _nBahtAbsent = 0
                        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent)
                    End If


                    If _FNEmpBaht < 0 Then _FNEmpBaht = 0



                End If

                _TotalCalTax = 0 : _TaxAmt = 0

                FNUnionAmt = 0
                FNUnionRate = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNUnionAmt,0) AS FNUnionAmt  FROM   " & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & ".dbo.THRMCfgWelfareKM with(nolock) Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")
                If FNUnionRate > 0 Then

                    Dim _StatePass As Boolean = True

                    If _FDDateEnd <> "" And _EndDate < _FDDateEnd Then
                        _StatePass = False
                    End If
                    If Not (FNStateUnionMember = "1") Then _StatePass = False

                    'If _WorkAge <= 0 Then
                    '    _StatePass = False
                    'Else
                    '    If FDStartDateUnion < _StartDate Then

                    '    End If
                    'End If

                    If Not (Val(_PayTerm) Mod 2 = 0) Then
                        _StatePass = False
                    End If

                    If _StatePass Then
                        _FCDeduct = _FCDeduct + FNUnionRate
                        FNUnionAmt = FNUnionRate
                    End If

                End If

                '_TotalCalSso = Double.Parse(Format(_FNEmpBaht + _HBaht + _FTOtherAddCalculateSocial + _FTAddCalculateSocial + _GtotalleavePayCalSsoAmt, "0.00"))
                '_TotalCalSso = _TotalCalSso + Double.Parse(Format(_FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS, "0.00"))


                '  _FTAddCalculateTax = _FTAddCalculateTax + _ShiftAmt + _ShiftOTAmt
                _FCAdd = _FCAdd + _ShiftAmt + _ShiftOTAmt

                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    'If _FCPayVacationBaht > (_FNSlaryPerDay * (FNVacationRetMin / 480)) Then
                    '    _FCPayVacationBaht = _FCPayVacationBaht - (_FNSlaryPerDay * (FNVacationRetMin / 480))
                    'Else
                    '    _FCPayVacationBaht = 0
                    'End If

                    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                    '   _TotalCalTax = Double.Parse(Format(_FNEmpBaht + _HBaht + _Lapaid + _FCPayVacationBaht + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + (FNParturitionLeave - _DeductAttandanceAmt)) + _FNWorkAgeSalary, "0.00")) + _FNNetAttandanceAmt '+ _FNNetAttandanceAmt  + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt
                    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000"))

                    '_TotalCalTax = _TotalCalTax - _FCDeduct
                Else
                    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                    '_TotalCalTax = Double.Parse(Format(_FNEmpBaht + _HBaht + _Lapaid + _FCPayVacationBaht + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + (FNParturitionLeave - _DeductAttandanceAmt)) + _FNWorkAgeSalary, "0.00")) + _FNNetAttandanceAmt '+ _FNNetAttandanceAmt  + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt
                    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000"))

                    '_TotalCalTax = _TotalCalTax - _FCDeduct


                End If
                '_TotalCalTax +=+ _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                '-----------------หักเงินเข้า กองทุนสำรองเลี้ยงชีพ-------------------------------
                If _ContributedFundBeginPay Then
                    Dim _EMpWorkAge As Integer = Val(R!FNEmpWorkAge.ToString)

                    For Each sR As DataRow In _THRMContributedFund.Select(" FNAgeBegin <= " & _EMpWorkAge & " AND FNAgeEnd >=" & _EMpWorkAge & " ")

                        FTTotalCalContributedAmt = _TotalCalSso

                        FTContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNEmpAmtPer.ToString)) / 100.0), "0"))
                        FTCmpContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNCmpAmtPer.ToString)) / 100.0), "0"))

                        Exit For

                    Next

                End If
                '-----------------หักเงินเข้า กองทุนสำรองเลี้ยงชีพ----------------------------
                '-----------------หักเงินเข้า กองทุนทดแทน---------------------------------
                FTTotalCalWorkmen = _TotalCalSso

                If _FTMaxCalWorkmen > 0 Then

                    _SocialPayMax = CDbl(Format(((_FTMaxCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))

                    If (_TotalCalSso + _FTTotalCalWorkmenBefore) > _FTMaxCalWorkmen Then
                        FTTotalCalWorkmen = _FTMaxCalWorkmen
                    ElseIf FTTotalCalWorkmen > 0 Then
                        FTTotalCalWorkmen = FTTotalCalWorkmen
                    Else
                        FTTotalCalWorkmen = 0
                    End If

                    If _FTTotalCalWorkmenBefore > 0 Then
                        FTWorkmenAmt = CDbl(Format((((_CalSo + _FTTotalCalWorkmenBefore) * _FTMaxWorkmenRate) / 100.0), "0"))
                        FTWorkmenAmt = FTWorkmenAmt - _FTWorkmenAmtBefore
                    Else
                        FTWorkmenAmt = CDbl(Format(((FTTotalCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))
                    End If
                End If

                '-----------------หักเงินเข้า กองทุนทดแทน-------------------------------

                '--------- คิดประกันสังคม-----------
                _SocialPayMax = HCfg.HMaxSocialBaht
                _CalSo = 0
                _FCSocial = 0
                _TotalCalSso = (_TotalCalSso * SocialExchangeRate)
                _FNSocialBase = 0



                _FNEmpDiligent = 0
                _FTStateInDustin = ""
                _FNDeligentPeriod = 0

                If _CalIns <> "" Then
                    Dim _StateCalIns As Boolean = False
                    _Qry = "SELECT TOP 1 FNPayDeligent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMDiligentConfigHD WHERE FTDeligentCode='" & HI.UL.ULF.rpQuoted(_CalIns) & "' "
                    If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") = "1" Then
                        If Val(_PayTerm) Mod 2 = 1 Then

                            _FTSatrtCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                            _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1), -1)) 'วันแของเดือน
                            _StateCalIns = True
                        End If
                    Else

                        _StateCalIns = True
                    End If

                    If _StateCalIns Then
                        _Qry = " SELECT   ISNULL(PayIndus,0) As PayIndus , ISNULL(StateIndus,'') AS StateIndus,ISnuLL(FNDeligentPeriod,0) AS FNDeligentPeriod"
                        _Qry &= vbCrLf & "	FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.FN_CALCULATE_INDUST(" & Val(_EmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDateIns) & "','" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDateIns) & "','" & HI.UL.ULF.rpQuoted(_CalIns) & "')"

                        Dim _DtIns As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        If _DtIns.Rows.Count > 0 Then
                            _FNEmpDiligent = Val(_DtIns.Rows(0)!PayIndus.ToString)
                            _FTStateInDustin = _DtIns.Rows(0)!StateIndus.ToString
                            _FNDeligentPeriod = Val(_DtIns.Rows(0)!FNDeligentPeriod.ToString)
                        End If

                    End If
                End If





                Dim _tmpTotalincome As Double = 0
                Dim _DiffTotalincome As Double = 0
                Dim _tmpTotalNetPay As Double = 0
                Dim _DiffTotalNetPay As Double = 0
                Dim _FNServicefee, _FNFinTransFee As Double
                _FNServicefee = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNServicefee,0) AS FNServicefee  FROM     THRMCfgWelfareKM  Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")
                _FNFinTransFee = _FNServicefee = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNFinTransFee,0) AS FNFinTransFee  FROM     THRMCfgWelfareKM  Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")


                _tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                _tmpTotalNetPay = (_tmpTotalincome - (FTContributedAmt))


                _Net = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct), "0.00"))
                _FCBaht = _FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4

                _FNNetpay = Format((_Net - (FTContributedAmt + _TaxAmt + Format(((FNSocialInsuranceEmployee) / SocialExchangeRate), "0.000"))), "0.00")
                _FNNetpayOrg = _FNNetpay

                _DiffTotalincome = _Net - _tmpTotalincome
                _DiffTotalNetPay = _FNNetpay - _tmpTotalNetPay

                If _tmpTotalincome <= 0 Then
                    _FNServicefee = 0
                    _FNFinTransFee = 0
                    _tmpTotalincome = 0
                    _tmpTotalNetPay = 0
                    _Net = 0
                    _FCBaht = 0
                    _FNNetpay = 0
                    _FNNetpayOrg = 0
                    _DiffTotalincome = 0
                    _DiffTotalNetPay = 0
                End If


                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll (FTInsUser, FTInsDate, FTInsTime,"
                _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
                _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
                _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId,  FNHSysPayRollPayId"
                _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
                _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
                _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
                _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
                _Qry &= vbCrLf & ",FNTotalWKNMin,  FNOt1Min, FNOt15Min, FNOt2Min"
                _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
                _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
                _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
                _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
                _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
                _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
                _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
                _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
                _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
                _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
                _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
                _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
                _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
                _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin, FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
                _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate , FNServicefee ,FNFinTransFee,FNSocialInsuranceEmployee , FNSocialInsuranceEmployer  )"
                _Qry &= vbCrLf & " 	SELECT '" & HI.UL.ULF.rpQuoted(_User) & "',CONVERT(varchar(10),GetDate(),111),CONVERT(varchar(8),GetDate(),114)"
                _Qry &= vbCrLf & " 	,'" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ""
                _Qry &= vbCrLf & " ,N'" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "','" & _EmpType & "','" & HI.UL.ULDate.ConvertEnDB(_PayDate) & "'"
                _Qry &= vbCrLf & " 	," & Val(_FTDeptCode) & ""
                _Qry &= vbCrLf & " 	," & Val(_FTDivCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTSectCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTUnitCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPos) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPaymentCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBankCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBranchCode) & " "
                _Qry &= vbCrLf & " 	,N'" & HI.UL.ULF.rpQuoted(_FTAccNo) & "'," & _TotalHoliDay & ""
                _Qry &= vbCrLf & " 	," & _FCSalary & ""
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNTimeMin & " / 60) + Convert(numeric(18,2),(( " & _GFNTimeMin & " %60) /100.00)) "
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1_5Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1_5Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT2Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT2Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2)," & _GFNOT3Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT3Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GFNOT4Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT4Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleavePay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleavePay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleaveNotPay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleaveNotPay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _Gtotalleave & " / 60) + Convert(numeric(18,2),(( " & _Gtotalleave & " %60) /100.00))"
                _Qry &= vbCrLf & " 	, " & _GFNTimeMin
                _Qry &= vbCrLf & " 	, " & _GFNOT1Min
                _Qry &= vbCrLf & " 	, " & _GFNOT1_5Min
                _Qry &= vbCrLf & ", " & _GFNOT2Min
                _Qry &= vbCrLf & "," & _GFNOT3Min
                _Qry &= vbCrLf & ",  " & _GFNOT4Min
                _Qry &= vbCrLf & ",  " & _GFNLateNormalMin
                _Qry &= vbCrLf & ",  " & _GFNLateNormalCut
                _Qry &= vbCrLf & ",  " & _GFNCutAbsent
                _Qry &= vbCrLf & ",  " & _GFNAbsent & "," & (_GFNTimeMin + _GFNOT1Min + _GFNOT1_5Min + _GFNOT2Min + _GFNOT3Min + _GFNOT4Min)
                _Qry &= vbCrLf & ",  " & _GtotalleavePay
                _Qry &= vbCrLf & ", " & _GtotalleaveNotPay
                _Qry &= vbCrLf & ", " & _Gtotalleave
                _Qry &= vbCrLf & ", " & _FNEmpBaht & " "
                _Qry &= vbCrLf & ", " & _nBahtOt1 & " "
                _Qry &= vbCrLf & "," & _nBahtOt15 & " "
                _Qry &= vbCrLf & "," & _nBahtOt2 & " "
                _Qry &= vbCrLf & "," & _nBahtOt3 & " "
                _Qry &= vbCrLf & "," & _nBahtOt4 & " "
                _Qry &= vbCrLf & "," & (_FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FNIncentiveAmt + _BonusAmt) & " "
                _Qry &= vbCrLf & "," & _FNEmpDiligent & " "
                _Qry &= vbCrLf & "," & _FCPayVacationBaht & " "
                _Qry &= vbCrLf & "," & _Lapaid & " "
                _Qry &= vbCrLf & "," & _LateCutAmt & " "
                _Qry &= vbCrLf & "," & _LateCutAmtAbsent & " "
                _Qry &= vbCrLf & "," & _nBahtAbsent & " "
                _Qry &= vbCrLf & "," & _TotalCalSso & " "
                _Qry &= vbCrLf & "," & _TotalCalTax & " "
                _Qry &= vbCrLf & "," & _FCAdd & " "
                _Qry &= vbCrLf & "," & _FCOtherAdd & " "
                _Qry &= vbCrLf & "," & _FCDeduct & " "
                _Qry &= vbCrLf & "," & _FCOtherDeduct & " "
                _Qry &= vbCrLf & "," & _Net & " "
                _Qry &= vbCrLf & "," & _FCSocial & " "
                _Qry &= vbCrLf & "," & _TaxAmt & " "
                _Qry &= vbCrLf & "," & _HBaht & " "
                _Qry &= vbCrLf & "," & (_FNNetpay) & ""
                _Qry &= vbCrLf & "," & (_Net + _FCAccumulateIncome) & ""
                _Qry &= vbCrLf & "," & (_FCSocial + _FCAccumulateSocial) & ""
                _Qry &= vbCrLf & "," & (_TaxAmt + _FCAccumulateTax) & ""
                _Qry &= vbCrLf & ",'" & _FTStateInDustin & "' "
                _Qry &= vbCrLf & "," & (FTTotalCalContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTCmpContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTTotalCalWorkmen) & ""
                _Qry &= vbCrLf & "," & (FTWorkmenAmt) & ""
                _Qry &= vbCrLf & "," & _AmtRetire & ""
                _Qry &= vbCrLf & "," & _GtotalleavePayCalSsoAmt & ""
                _Qry &= vbCrLf & "," & _WorkingDay & " "
                _Qry &= vbCrLf & "," & _WageAdjAdd & ""
                _Qry &= vbCrLf & "," & _FNIncentiveAmt & ""
                _Qry &= vbCrLf & "," & _FNNetpayOrg & ""
                _Qry &= vbCrLf & "," & _FNNetAttandanceAmt & ""
                _Qry &= vbCrLf & "," & _FNHealtCareAmt & ""
                _Qry &= vbCrLf & "," & _FNTransportAmt & ""
                _Qry &= vbCrLf & "," & _FNNetChildCareAmt & ""
                _Qry &= vbCrLf & "," & _FNNetOTMealAmt & ""
                _Qry &= vbCrLf & "," & _FNSocialBase & ""
                _Qry &= vbCrLf & "," & _FNWorkAgeSalary & ""
                _Qry &= vbCrLf & "," & _FNNetOTMealAmtUS & ""
                _Qry &= vbCrLf & "," & _FNExchangeRate & ""
                _Qry &= vbCrLf & "," & FNPayLeaveSickBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveSickBahtMin & ""
                _Qry &= vbCrLf & "," & FNPayLeaveBusinessBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveBusinessBahtMin & ""
                _Qry &= vbCrLf & "," & FNPayLeaveSpecialBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveSpecialBahtMin & ""
                _Qry &= vbCrLf & "," & FNParturitionLeave & ""
                _Qry &= vbCrLf & "," & GFNParturitionLeaveMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetAmt & ""
                _Qry &= vbCrLf & "," & _FNExchangeRateTHB & ""
                _Qry &= vbCrLf & "," & FNWorkDayInWeek & ""
                _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(_FTCalSocialSta) & "'"
                _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(_FTCalTaxSta) & "'"
                _Qry &= vbCrLf & "," & _DiffTotalincome & ""
                _Qry &= vbCrLf & "," & _DiffTotalNetPay & ""
                _Qry &= vbCrLf & "," & SocialExchangeRate & ""
                _Qry &= vbCrLf & "," & TaxExchangeRate & ""
                _Qry &= vbCrLf & "," & _FNServicefee
                _Qry &= vbCrLf & "," & _FNFinTransFee
                _Qry &= vbCrLf & "," & FNSocialInsuranceEmployee
                _Qry &= vbCrLf & "," & FNSocialInsuranceEmployer



                '  , FNVacationRetMin, FNVacationRetAmt
                '_FNNetpayOrg
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)



                ' Start คิดค่า seniority ind
                If ((_WorkingDayN >= 21) Or _WorkAgeSeniority >= 1) And (_FDDateEnd >= _EndDate Or _FDDateEnd = "") Then  'จ่ายค่า seniority ind สำหรับพนักงานอายุงาน 1 เดือนขึ้นไป (กรณีเข้างานเดือนเดียวกันกับงวดการจ่าย 21 วันขึ้นไปให้คิดเป็นเดือน) และสถานะต้องเป็นพนักงาน

                    Dim _SeniorityIndOld As Double = 0
                    'For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTFinCode='044'")
                    '    _SeniorityIndOld = _SeniorityIndOld + Val(R2!FCFinAmt.ToString)
                    'Next
                    Try
                        _SeniorityIndOld = (_FCOtherAdd - _FTOtherAddCalculateTax)
                    Catch ex As Exception

                    End Try


                    Dim _dtSeniorityAmt As New DataTable
                    _Qry = "Select  T.FNSeniorityAmt, T.FNSalaryPerDay , T.FTStatePayback , T.FTPaybackYear"
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgSeniorityIndemnty AS T WITH(NOLOCK)"
                    _Qry &= vbCrLf & " where  T.FNHSysEmpTypeId=" & Integer.Parse(Val(_EmpType))
                    _Qry &= vbCrLf & " and T.FTPayTerm='" & _PayTerm & "'"
                    _Qry &= vbCrLf & " and  isnull(T.FTStateActive,'0') = '1'"
                    _dtSeniorityAmt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    If _dtSeniorityAmt.Rows.Count > 0 Then

                        For Each Rc As DataRow In _dtSeniorityAmt.Select("FTPaybackYear='" & _PayYear & "'")

                            _SeniorityAmt += +Double.Parse(Rc!FNSeniorityAmt.ToString) * Double.Parse("0" & MoneyRetSeniorityPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay, _SeniorityIndOld))

                            Exit For
                        Next
                        For Each Rc As DataRow In _dtSeniorityAmt.Select("FTPaybackYear >='" & Microsoft.VisualBasic.Left(_FDDateStart, 4) & "' and FTStatePayback='1'")
                            _SeniorityAmt += +Double.Parse(Rc!FNSeniorityAmt.ToString) * Double.Parse(Rc!FNSalaryPerDay.ToString)
                            Exit For
                        Next
                    End If
                    _FCAdd += +_SeniorityAmt
                End If
                'End คิดค่า seniority ind


                If _FTCalSocialSta <> "1" Then ' 1 ไม่่คิดประกันสังคม


                    _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FNTotalRecalSSO , sum( isnull(P.FNSocialInsuranceEmployee , 0 ) ) AS FNSocialInsuranceEmployee "
                    _Qry &= vbCrLf & " ,  sum( isnull(P.FNSocialInsuranceEmployer , 0 ) ) AS FNSocialInsuranceEmployer   "
                    _Qry &= vbCrLf & "  ,SUM(ISNULL(P.FNSocial,0)  ) AS FNSocial "
                    _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                    _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                    _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                    _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                    _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                    _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                    _Qry &= vbCrLf & "  Select FNMonth"
                    _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & "  )  "

                    Dim _DtSsoc As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    If _DtSso.Rows.Count > 0 Then
                        _SsoBefore = Val(_DtSsoc.Rows(0)!FNTotalRecalSSO.ToString)
                        _SsoBeforeAmt = Val(_DtSsoc.Rows(0)!FNSocial.ToString)
                        _InsuranceEmpyeeBefore = Val(_DtSsoc.Rows(0)!FNSocialInsuranceEmployee.ToString)
                        _InsuranceEmpyerBefore = Val(_DtSsoc.Rows(0)!FNSocialInsuranceEmployer.ToString)
                    End If
                    _DtSso.Dispose()

                    _TotalCalSso = _SsoBefore + _TotalCalSso
                    For Each Rsso As DataRow In _tmpSocailRateKM.Select("FNSocialStartRange<=" & _TotalCalSso & " AND  FNSocialEndRange>=" & _TotalCalSso & "")

                        _FNSocialBase = Val(Rsso!FNSocialBase.ToString)
                        _FCSocial = Val(Rsso!FNSocialAmt.ToString)
                        '_FCSocial = (_FNSocialBase * FNSocialEmployerRate) / 100
                        FNSocialInsuranceEmployer = (_FNSocialBase * _SocialRate) / 100
                        FNSocialInsuranceEmployee = (_FNSocialBase * _SocialRate) / 100

                        Exit For
                    Next


                    FNSocialInsuranceEmployer = FNSocialInsuranceEmployer - _InsuranceEmpyerBefore

                    If (_StateSocialOnlyCmppay) Then
                        'บริษัทจ่ายให้ 
                        FNSocialInsuranceEmployee = 0
                        _FCSocial = 0
                    Else
                        FNSocialInsuranceEmployee = FNSocialInsuranceEmployee - _InsuranceEmpyeeBefore

                        '   _FCSocial = _FCSocial - _SsoBeforeAmt
                        '   _FCSocial = CDbl(Format((FNSocialInsuranceEmployee / SocialExchangeRate), "0.00"))
                        _FCSocial = Math.Round(Decimal.Parse(((FNSocialInsuranceEmployee + _InsuranceEmpyeeBefore) / SocialExchangeRate)), 2) - Math.Round(Decimal.Parse((_InsuranceEmpyeeBefore / SocialExchangeRate)), 2)

                    End If

                Else
                    _TotalCalSso = 0
                End If

                If _FTCalTaxSta <> "1" Then
                    Dim _TaxBefore As Double = 0
                    Dim _TaxBeforeAmt As Double = 0
                    Dim _DeReCalTax As Double = 0

                    For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTStaTax='0'")
                        _DeReCalTax = _DeReCalTax + Val(R2!FCFinAmt.ToString)
                    Next



                    If (_PayTerm Mod 2 = 1) And _FTEmpState = "3" Then


                        With _EmpDisTax
                            .FTSosial = 0
                            .BaseSlary = CDbl(Format((_TotalCalTax * TaxExchangeRate), "0.000")) + CDbl(Format((_FCSalary / 2) * TaxExchangeRate, "0.000"))
                            .OtherSlary = _FTOtherAddCalculateTax + _FTAddCalculateTax + _FNEmpDiligent + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                            .OtherSlary = Format(.OtherSlary * TaxExchangeRate, "0.000")
                            .Cfg_ContributedDeducToTheFund = 0

                        End With

                        _TotalCalTax = (_EmpDisTax.BaseSlary + _EmpDisTax.OtherSlary)
                        Dim _TaxOther As Double = 0 '_EmpDisTax.OtherSlary 
                        Dim _TaxOtherAmt As Double = 0
                        Dim _Total As Double = GETnRecalDiscTax(_EmpDisTax, _EmpTaxYear)

                        _EmpTaxYear.FTSocial = FNSocialInsuranceEmployee
                        _EmpTaxYear.FTTotalCalTax = _Total - (FNSocialInsuranceEmployee + _InsuranceEmpyeeBefore)
                        Dim _TotalTax As Double = GETnTax_KM(_EmpTaxYear.FTTotalCalTax, _TaxOther, _TaxOtherAmt)
                        _TotalTax = (_TotalTax / 2)
                        _EmpTaxYear.FTTotalTax = _TotalTax 'ภาษีที่ต้องจ่าย

                        _TotalTax = CDbl(Format(_TotalTax, "0.000"))
                        If _TotalTax > 0 Then
                            _TaxAmt = CDbl(Format((_TotalTax / TaxExchangeRate), "0.000"))
                        Else
                            _TaxAmt = 0
                        End If
                        _EmpTaxYear.FTTotalTaxPay = _TaxAmt + _FCAccumulateTax
                        _TotalCalTax = (_TotalCalTax / 2)




                    Else


                        _Qry = "  SELECT  TOP 1 case when max(P.FNParturitionLeaveBaht) > 0  then  sum(( (P.FNHealtCareAmt*24)+ ( P.FNTransportAmt *24)+   P.FNChildCareAmt   ))   else 0 end  AS Amt"
                        _Qry &= vbCrLf & ",  case when max(P.FNParturitionLeaveBaht) > 0  then "
                        _Qry &= vbCrLf & "  (select sum(PG.FNOTMealAmtUS) FROM dbo.THRTPayRoll AS PG WITH (NOLOCK)"
                        _Qry &= vbCrLf & "   where PG.FTPayYear+ PG.FTPayTerm >= convert(varchar(30), CONVERT(int ,min( P.FTPayYear)) - 1  )+ min(P.FTPayTerm)  "
                        _Qry &= vbCrLf & "    AND PG.FTEmpIdNo =min(P.FTEmpIdNo  )) else 0 end as FNOTMealAmtUS "
                        _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                        _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                        _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                        _Qry &= vbCrLf & " AND PD.FTPayTerm <= '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                        _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                        _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                        _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                        _Qry &= vbCrLf & "  Select FNMonth"
                        _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                        _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                        _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                        _Qry &= vbCrLf & "  )  "

                        Dim _MealParturitionAmt As Double = 0
                        Dim _oMdt As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each Rz As DataRow In _oMdt.Rows
                            _MealParturitionAmt = Val(Rz!FNOTMealAmtUS.ToString) + Val(Rz!Amt.ToString)
                        Next


                        _TotalCalTax = _TotalCalTax - _MealParturitionAmt
                        _TotalCalTax = IIf(_TotalCalTax < 0, 0, _TotalCalTax)
                        Try
                            _TotalCalTax = _TotalCalTax - (_FCOtherAdd - _FTOtherAddCalculateTax)
                        Catch ex As Exception

                        End Try


                        _Qry = " SELECT  TOP 1 case when max(isnull(P.FNParturitionLeaveBaht,0)) <= 0 then   SUM((isnull(P.FNTotalIncome,0) - ( P.FNHealtCareAmt+ P.FNTransportAmt+ P.FNOTMealAmtUS + P.FNChildCareAmt) ) * P.FNTaxExchangeRate ) else  SUM((isnull(P.FNTotalIncome,0) ) * P.FNTaxExchangeRate ) end  AS FNTotalRecalTAX "
                        _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTax,0) *  ISNULL(P.FNTaxExchangeRate,1)) AS FNTax"
                        _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                        _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                        _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                        _Qry &= vbCrLf & " AND PD.FTPayTerm <  '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                        _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                        _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                        _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                        _Qry &= vbCrLf & "  Select FNMonth"
                        _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                        _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                        _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                        _Qry &= vbCrLf & "  )  "


                        Dim _DtTax As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        If _DtTax.Rows.Count > 0 Then
                            _TaxBefore = Val(_DtTax.Rows(0)!FNTotalRecalTAX.ToString)
                            _TaxBeforeAmt = Val(_DtTax.Rows(0)!FNTax.ToString)
                        End If
                        _DtTax.Dispose()

                        _EmpDisTax.BeforeIncom = 0
                        _EmpDisTax.BeforeTax = _TaxBeforeAmt
                        _TaxBefore = IIf(_TotalCalTax <= 0, 0, _TaxBefore)

                        With _EmpDisTax
                            .FTSosial = 0 '_FCAccumulateSocial + _FCSocial + (_FCSocial * (_TotalInstalment - _Instalment))

                            'If .FTSosial > (((_SocialMaxIncome * _SocialRate) / 100.0) * 12) Then
                            '    .FTSosial = CDbl(Format((((_SocialMaxIncome * _SocialRate) / 100.0) * 12), "0.00"))
                            'End If

                            .BaseSlary = CDbl(Format((_TotalCalTax * TaxExchangeRate), "0.000")) + _TaxBefore '(_TotalCalTax * (_TotalInstalment - _Instalment)) + _TotalCalTax
                            .OtherSlary = 0 ' _FTOtherAddCalculateTax + _FTAddCalculateTax + _FNEmpDiligent + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                            .OtherSlary = Format(.OtherSlary * TaxExchangeRate, "0.000") '+ _FNNetOTMealAmt
                            ' _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary
                            .Cfg_ContributedDeducToTheFund = 0 '.Cfg_ContributedDeducToTheFund + FTContributedAmt + (FTContributedAmt * (_TotalInstalment - _Instalment))

                        End With


                        _TotalCalTax = (_EmpDisTax.BaseSlary + _EmpDisTax.OtherSlary)
                        Dim _TaxOther As Double = 0 '_EmpDisTax.OtherSlary
                        Dim _TaxOtherAmt As Double = 0
                        Dim _Total As Double = GETnRecalDiscTax(_EmpDisTax, _EmpTaxYear)




                        _EmpTaxYear.FTSocial = FNSocialInsuranceEmployee '_EmpDisTax.FTSosial '   _FCAccumulateSocial + _FCSocial  'ประกันสังคม

                        _EmpTaxYear.FTTotalCalTax = _Total - (FNSocialInsuranceEmployee + _InsuranceEmpyeeBefore)   '_EmpDisTaxChildAmt



                        Dim _TotalTax As Double = GETnTax_KM(_EmpTaxYear.FTTotalCalTax, _TaxOther, _TaxOtherAmt)

                        _EmpTaxYear.FTTotalTax = _TotalTax 'ภาษีที่ต้องจ่าย

                        _TotalTax = CDbl(Format(_TotalTax - _EmpDisTax.BeforeTax, "0.000"))

                        If _TotalTax > 0 Then
                            _TaxAmt = CDbl(Format((_TotalTax / TaxExchangeRate), "0.000")) ' CDbl(Format((_TotalTax / ((_TotalInstalment - _Instalment) + 1)), "0.00"))


                            ' _TaxAmt = _TaxAmt + _TaxOtherAmt
                        Else
                            _TaxAmt = 0
                        End If
                        'If _TaxBeforeAmt > 0 Then
                        '    _TaxBeforeAmt = CDbl(Format((_TaxBeforeAmt / TaxExchangeRate), "0.00"))
                        'Else
                        '    _TaxBeforeAmt = 0
                        'End If

                        _EmpTaxYear.FTTotalTaxPay = _TaxAmt + _FCAccumulateTax


                        _TotalCalTax = _TotalCalTax - _TaxBefore

                        ' _TaxAmt = _TaxAmt - _TaxBeforeAmt



                    End If




                Else

                    '_TotalCalTax = 0
                    '_TaxAmt = 0

                End If




                _FNServicefee = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNServicefee,0) AS FNServicefee  FROM     THRMCfgWelfareKM  Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")
                _FNFinTransFee = _FNServicefee = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNFinTransFee,0) AS FNFinTransFee  FROM     THRMCfgWelfareKM  Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")


                _tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                _tmpTotalNetPay = (_tmpTotalincome - (FTContributedAmt))



                _Net = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct), "0.00"))
                _FCBaht = _FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4

                _FNNetpay = Format((_Net - (FTContributedAmt + _TaxAmt + Format(((FNSocialInsuranceEmployee) / SocialExchangeRate), "0.000"))), "0.00")
                _FNNetpayOrg = _FNNetpay

                _DiffTotalincome = _Net - _tmpTotalincome
                _DiffTotalNetPay = _FNNetpay - _tmpTotalNetPay
                If _tmpTotalincome <= 0 Then
                    _FNServicefee = 0
                    _FNFinTransFee = 0
                    _tmpTotalincome = 0
                    _tmpTotalNetPay = 0
                    _TaxAmt = 0
                    _Net = 0
                    _FCBaht = 0
                    _FNNetpay = 0
                    _FNNetpayOrg = 0
                    _FNNetpay = 0
                    _FNNetpayOrg = 0
                    _DiffTotalincome = 0
                    _DiffTotalNetPay = 0
                End If
                'FNNetIncome
                _Qry = "Update [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & "set FNNetIncome=" & _Net
                _Qry &= vbCrLf & " ,FNNetpay=" & _FNNetpay
                _Qry &= vbCrLf & " ,FNSocial=" & _FCSocial
                _Qry &= vbCrLf & " , FNTax=" & _TaxAmt
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)



                If _FTCalTaxSta <> "1" And _FTEmpIdNo <> "" Then
                    '-----------------------------ภาษี -----------------------------------------------------
                    _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTaxYear "
                    _Qry &= vbCrLf & "  WHERE FTYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & "  AND  FTEmpIdNo='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' AND FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " "
                    _Qry &= vbCrLf & "  INSERT INTO THRTTaxYear (FNHSysCmpId,FTYear, FTEmpIdNo, FNAmt, FNExpenses, FNNetAmt, "
                    _Qry &= vbCrLf & "  FNModEmp, FNModMate, FNChildNotLern, FNChildLern, FNChildNotLernAmt, FNChildLernAmt, FNInsurance, FNProvidentfund, FNInterest, FNSocial, FNDonation, "
                    _Qry &= vbCrLf & "  FNProvidentfundOver, FNGPF, FNSavingsFund, FNCommutation, FNUnitRMF, FNModFather, FNModMother, FNModFatherMate, FNModMotherMate, FNUnitLTF, "
                    _Qry &= vbCrLf & "  FNDonationLern, FNParentsHealthInsurance, FNSupportSport, FNAcquisitionOfProperty, FNPension, FNTravel, FNTotalCalTax, FNTotalTax,FNTotalTaxPay )"
                    _Qry &= vbCrLf & "  SELECT " & HI.ST.SysInfo.CmpID & ",'" & _PayYear & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "

                    With _EmpTaxYear

                        _Qry &= vbCrLf & "," & .FTAmt & " "
                        _Qry &= vbCrLf & "," & .FTExpenses & ""
                        _Qry &= vbCrLf & "," & .FTNetAmt & ""
                        _Qry &= vbCrLf & "," & .FTModEmp & ""
                        _Qry &= vbCrLf & "," & .FTModMate & ""
                        _Qry &= vbCrLf & "," & .FNChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FNChildLern & " "
                        _Qry &= vbCrLf & "," & .FTChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FTChildLern & ""
                        _Qry &= vbCrLf & "," & .FTInsurance & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfund & ""
                        _Qry &= vbCrLf & "," & .FTInterest & ""
                        _Qry &= vbCrLf & "," & .FTSocial & ""
                        _Qry &= vbCrLf & "," & .FTDonation & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfundOver & ""
                        _Qry &= vbCrLf & "," & .FTGPF & ""
                        _Qry &= vbCrLf & "," & .FTSavingsFund & ""
                        _Qry &= vbCrLf & "," & .FTCommutation & ""
                        _Qry &= vbCrLf & "," & .FTUnitRMF & ""
                        _Qry &= vbCrLf & "," & .FTModFather & ""
                        _Qry &= vbCrLf & "," & .FTModMother & ""
                        _Qry &= vbCrLf & "," & .FTModFatherMate & ""
                        _Qry &= vbCrLf & "," & .FTModMotherMate & ""
                        _Qry &= vbCrLf & "," & .FTUnitLTF & ""
                        _Qry &= vbCrLf & "," & .FTDonationLern & ""
                        _Qry &= vbCrLf & "," & .FTParentsHealthInsurance & ""
                        _Qry &= vbCrLf & "," & .FTSupportSport & ""
                        _Qry &= vbCrLf & "," & .FTAcquisitionOfProperty & ""
                        _Qry &= vbCrLf & "," & .FTPension & ""
                        _Qry &= vbCrLf & "," & .FTTravel & ""
                        _Qry &= vbCrLf & "," & .FTTotalCalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTaxPay & ""

                    End With

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    '----------------------------- ภาษี -----------------------------------------------------
                End If

                '-----------------------------รายได้อื่นๆ -----------------------------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Dim _AllFincode As String = ""

                For Each _R As DataRow In _DtFin.Rows
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTFinCode, FTFinAmt," & _R!FCTotalFinAmt.ToString & ",0," & _R!FCTotalFinAmt.ToString & ""
                    _Qry &= vbCrLf & " FROM  THRMEmployeeFin "
                    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND  FTFinCode = ('" & _AllFincode & "') "

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Next

                For Each _R As DataRow In _dt.Select("FCFinAmt<>0")
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_R!FCFinAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FCFinAmtOther=" & _R!FCFinAmt.ToString & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _AllFincode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then

                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ",'" & _AllFincode & "',0, 0," & _R!FCFinAmt.ToString & "," & _R!FCFinAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    End If

                Next

                'If _ShiftAmt > 0 Then
                '    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '001'," & _ShiftValue.ToString & "," & _ShiftAmt.ToString & ""

                '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                'End If

                'If _ShiftOTAmt > 0 Then
                '    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '007'," & _ShiftOTValue.ToString & "," & _ShiftOTAmt.ToString & ""

                '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                'End If

                'If _FNEmpDiligent > 0 Then
                '    If _FNDeligentPeriod = 0 Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    Else
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '009'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If
                'End If

                'If _AmtReturnVacation > 0 Then
                '    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '023'," & _ShiftValue.ToString & "," & _AmtReturnVacation.ToString & ""

                '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                'End If
                ''----------- เงินคืนพักร้อน-------------------------------

                If _ShiftAmt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='001' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '001'," & _ShiftValue.ToString & "," & _ShiftAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _ShiftOTAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftOTAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='007' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '007'," & _ShiftOTValue.ToString & "," & _ShiftOTAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _SeniorityAmt > 0 Then

                    Dim _xFinCode As String = "046"
                    If (_FTStateWorkpermit = "1") Then
                        _xFinCode = "047"
                    End If
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_SeniorityAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _xFinCode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '" & _xFinCode & "'," & _SeniorityAmt.ToString & "," & _SeniorityAmt.ToString & ""
                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _BonusAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_BonusAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='008' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _BonusAmt.ToString & "," & _BonusAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _FNIncentiveAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNIncentiveAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='011' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '011'," & _FNIncentiveAmt.ToString & "," & _FNIncentiveAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If FNUnionAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(FNUnionAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='108' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '108'," & Val(FNUnionAmt.ToString) & "," & Val(FNUnionAmt.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _FNEmpDiligent > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNEmpDiligent.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    If _FNDeligentPeriod = 0 Then
                        _Qry &= vbCrLf & " AND FTFinCode='008' "
                    Else
                        _Qry &= vbCrLf & " AND FTFinCode='009' "

                    End If


                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        If _FNDeligentPeriod = 0 Then
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                        Else
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '009'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                        End If
                    End If

                End If

                'If _AmtReturnVacation > 0 Then

                '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_AmtReturnVacation.ToString) & " "
                '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTFinCode='023' "

                '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '023'," & _ShiftValue.ToString & "," & _AmtReturnVacation.ToString & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If

                'End If
                ''----------- เงินคืนพักร้อน-------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave (FTPayYear, FTPayTerm, FNHSysEmpID, FTLeaveType, FNTotalHour, FNTotalMinute, FNTotalPayHour, FNTotalPayMinute, FNTotalNotPayHour,FNTotalNotPayMinute)"
                _Qry &= vbCrLf & "  SELECT      '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTLeaveType,Convert(numeric(18,2), Sum(FNTotalMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalMinute) %60) /100.00)) , "
                _Qry &= vbCrLf & "  Sum(FNTotalMinute), Convert(numeric(18,2), Sum(FNTotalPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalPayMinute) %60) /100.00)), Sum(FNTotalPayMinute),  Convert(numeric(18,2),Sum(FNTotalNotPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalNotPayMinute) %60) /100.00)), SUM(FNTotalNotPayMinute)"
                _Qry &= vbCrLf & "  FROM THRTTransLeave "
                _Qry &= vbCrLf & " WHERE        (FNHSysEmpID = '" & Val(_EmpCode) & "') "
                _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' "
                _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "' "
                _Qry &= vbCrLf & "  GROUP BY   FNHSysEmpID, FTLeaveType"

                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            End If

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & "  	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate (FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & " FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate)"
            _Qry &= vbCrLf & " SELECT TOP 1  FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & "FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            _Qry &= vbCrLf & " SELECT FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate ( FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay)"
            _Qry &= vbCrLf & " SELECT  FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

        Next

        Return True

    End Function
    Public Shared Function CalculateWeekEnd_KM_Monthly(ByVal _User As String, ByVal _EmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
        ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
        Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
        Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0, Optional FNStateSalaryType As Integer = 0,
        Optional _FNExchangeRate As Double = 0, Optional _FNExchangeRateTHB As Double = 0, Optional FNWorkDayInWeek As Integer = 13,
        Optional FNWorkDayInMonth As Integer = 26, Optional FNWorkDayInWeekBF As Integer = 0, Optional SocialExchangeRate As Double = 0, Optional TaxExchangeRate As Double = 0) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim CountDayPerMonth As Integer = FNWorkDayInMonth
        Dim _Qry As String
        Dim _dt As DataTable
        Dim _dttemp As DataTable
        Dim _dttran As DataTable
        Dim _SalaryDevide As Integer = 0
        Dim FNVacationRetMin, FNVacationRetAmt, FNVacationPerDayLapaid As Double


        Dim _SsoBefore As Double = 0
        Dim _SsoBeforeAmt As Double = 0

        Dim _InsuranceEmpyeeBefore As Double = 0
        Dim _InsuranceEmpyerBefore As Double = 0

        Dim _DtFin As New DataTable
        _DtFin.Columns.Add("FTFinCode", GetType(String))
        _DtFin.Columns.Add("FCTotalFinAmt", GetType(String))
        Dim _SeniorityAmt As Double = 0
        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTPaymentCode As String, _FTBankCode As String, _FNChildNotLearn As Double
        Dim _FCReduceDonate As Double, _FCLifeInsurance As Double
        Dim _FCLoanHouse As Double
        Dim _FCShare As Double, _FCReduceFather As Double, _FCReduceMother As Double
        Dim _FCReSpouseFather As Double, _FCReSpouseMother As Double, _FCReduceEducationSupport As Double, _FTMarryIncome As String
        Dim _FTCalSocialSta As String, _FTCalTaxSta As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FTEmpIdNo As String, _FTEmpIdNo1 As String, _FTSocialNo As String, _FTBranchCode As String, _FTAccNo As String, _FCLifeFeeMoney As Double
        Dim _FCOtherAdd As Double, _FTOtherAddCalculateSocial As String, _FTOtherAddCalculateTax As String
        Dim _FCOtherAddOt As Double, _FTOtherAddOtCalculateSocial As String, _FTOtherAddOtCalculateTax As String, _FCBFShiftMoney As Double
        Dim _FTShiftMoneyCalculateSocial As String, _FTShiftMoneyCalculateTax As String, _FCDiligent As Double
        Dim _FTDiligentCalculateSocial As String, _FTDiligentCalculateTax As String, _FCBonusEndYear As Double
        Dim _FTBonusEndCalculateSocial As String, _FCOtherDeduct As Double, _FTBonusEndCalculateTax As String
        Dim _FCShelter As Double, _FTShelterCalculateSocial As String, _FTShelterCalculateTax As String
        Dim _FCShareFactory As Double, _FTShareFactoryCalculateSocial As String
        Dim FNPayLeaveBusinessBaht, FNPayLeaveSickBaht, FNPayLeaveSpecialBaht, FNParturitionLeave As Double, FNParturitionLeaveReCalTax As Double
        Dim FNPayLeaveBusinessBahtMin, FNPayLeaveSickBahtMin, FNPayLeaveSpecialBahtMin, FNParturitionLeaveMin As Double
        Dim GFNPayLeaveBusinessBahtMin, GFNPayLeaveSickBahtMin, GFNPayLeaveSpecialBahtMin, GFNParturitionLeaveMin As Integer
        Dim _FTShift As String
        Dim _FNTime, _FNNotRegis As Double
        Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
        Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
        Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
        Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double
        Dim _FNLeavePay, _FNLeaveNotPay As Double, _FNTimeMin, _FNOT1Min As Double
        Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
        Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
        Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
        Dim _GFNTime, _GFNNotRegis As Double
        Dim _GFNOT1 As Double, _GFNOT1_5 As Double, _GFNOT2 As Double, _GFNOT3 As Double, _GFNOT4 As Double
        Dim _GFNLeaveSick As Double, _GFNLeaveBusiness As Double
        Dim _GFNLeaveVacation As Double, _GFNLeavePregnant As Double, _GFNLeaveOrdain As Double, _GFNLeaveSpecial As Double
        Dim _GFNLeaveMarry As Double, _GFNLeaveOther As Double, _GFNLateNormalMin As Double
        Dim _GFNLateNormalMinNotHoliday As Double = 0
        Dim _GFNLateNormalCut As Double, _GFNLateOtMin As Double, _GFNLateOtCut As Double
        Dim _GFNLateMorning As Double, _GFNLateAfternoon As Double, _GFNAbsent, _GFNCutAbsent As Double
        Dim _GFNLeavePay As Double, _GFNTimeMin, _GFNOT1Min As Double
        Dim _GFNOT1_5Min As Double, _GFNOT2Min As Double, _GFNOT3Min As Double, _GFNOT4Min As Double, _GFNLateMMin As Double
        Dim _GFNLateAfMin As Double, _GFNRetireMMin As Double, _GFNRetireAfMin As Double
        Dim _GFNRetireNormalCut As Double, _GFNRetireOtMin As Double, _GFNRetireOtCut As Double
        Dim _dtot As DataTable
        Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double
        Dim _FCAccumulateIncome As Double, _FCAccumulateSocial As Double, _FCAccumulateTax As Double
        Dim _FTSatrtCalculateDate As String, _FTEndCalculateDate As String, _FNEmpDiligent As Double, _FTStateInDustin As String, _FNDeligentPeriod As Integer
        Dim _FTSatrtCalculateDateIns As String, _FTEndCalculateDateIns As String
        Dim _FNEmpBaht, _nBahtOt1 As Double, _nBahtOt15 As Double, _nBahtOt2 As Double, _nBahtOt3 As Double, _nBahtOt4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
        Dim _SocialRate As Double : Dim _StateSocialOnlyCmppay As Boolean
        Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
        Dim _TotalHoliDay As Integer
        Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String
        Dim _FNSlaryPerDayShiftNinght As Double, _FNSlaryPerDayNormal As Double
        Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _FCDeductSourceVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double
        Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
        Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
        Dim _FTSlary, _FTDivCode, _FTPos As String
        Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
        Dim _Dtemp As DataTable
        Dim _SocialBefore, _SocialBeforeAmt, _SocialPayMax As Double
        Dim _FCAdd, _FTAddCalculateSocial, _FTAddCalculateTax, _FCDeduct, _TotalCalSso, _TotalCalTax, _TaxAmt, _ReturnTaxAmt As Double
        Dim _Gtotalleave, _GtotalleavePay, _GtotalleaveNotPay, _GtotalleavePayCalSso, _GtotalleavePayCalSsoAmt As Double
        Dim _dtLeave As DataTable
        Dim _LeaveCode As String = ""
        Dim _dtAddOtherAmt As DataTable
        Dim _dtAddOtherAmtshift As DataTable
        Dim FCModFather, FCModMother, FCModMateFather, FCModMateMother As Double
        Dim FCPremium, FCInterest, FCUnitRMF, FCUnitLTF, FCDeductDonate, FCDisabledDependents, FCDeductDonateStudy As Double
        Dim FCHealthInsurFatherMotherMate, FTHealthInsurIDFather, FTHealthInsurIDMother As Double
        Dim FTHealthInsurIDFatherMate, FTHealthInsurIDMotherMate As Double
        Dim FTTotalCalContributedAmt, FTContributedAmt, FTCmpContributedAmt, FTTotalCalContributedAcc As Double
        Dim FTTotalCalWorkmen, FTWorkmenAmt, _FTMaxCalWorkmen, _FTMaxWorkmenRate, FTTotalCalWorkmenAcc As Double
        Dim _FTWorkmenAmtBefore, _FTTotalCalWorkmenBefore As Double
        Dim _ShiftAmt As Double = 0
        Dim _ShiftOTAmt As Double = 0
        Dim _ShiftValue As Double = 0
        Dim _ShiftOTValue As Double = 0
        Dim _WorkingDay As Double = 0
        Dim _THRMContributedFund As DataTable
        Dim _EmpDisTax As New HCfg.EmployeeDiscountTax
        Dim _EmpTaxYear As New HCfg.EmpTaxYear
        '   HI.HRCAL.Calculate.LoadDiscountTax()

        Dim _EmpDisTaxChildAmt As Double = 0
        Dim _FNNetpayOrg As Double = 0.0
        Dim _FNNetpay As Double = 0.0
        Dim _AmtAddCalOT, _GAmtAddCalOT As Double
        Dim CountTerm As Integer = 0
        Dim _SPDateType, _TotalInstalment, _Instalment As Integer
        Dim _ContributedFundBeginPay As Boolean = False
        Dim _DTHoliday As DataTable
        Dim _ShiftAdv As Double = 0
        Dim _AmtPlus As Double = 0
        Dim _GAmtPlus As Double = 0
        Dim FTHldType As Integer = 0
        Dim _AmtRetire As Double = 0
        Dim _WorkAge As Integer = 0 : Dim _WorkAgeDay As Integer = 0 : Dim _WorkAgeSeniority As Integer = 0 : Dim _WorkingDayN As Integer = 0
        Dim _WorkAgeParturition As Integer = 0
        Dim _AmtReturnVacation As Double = 0
        Dim _FNIncentiveAmt As Double = 0
        Dim _FTInsurType As Integer = 0
        Dim _DayAdjAdd As Double = 0
        Dim _WageAdjAdd As Double = 0
        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        Dim _FTStatePayHoliday As String = ""
        Dim _FTEmployeeCode As String = ""
        Dim _FNAttandanceAmt As Double = 0
        Dim _FNHealtCareAmt As Double = 0
        Dim _FNTransportAmt As Double = 0
        Dim _FNChildCareAmt As Double = 0
        Dim _FNChildCareStartAge As Double = 0
        Dim _FNChildCareEndAge As Double = 0
        Dim _FNOTMealAmt As Double = 0
        Dim _FNSocialBase As Double = 0
        Dim _FNWorkAgeSalary As Double = 0
        Dim _FNOTMealAmtUS As Double = 0
        Dim _FNSickLeave As Double = 0
        Dim _LeaveSickPay As Integer = 0
        Dim _FNTotalChildCare As Integer = 0
        Dim _FNNetAttandanceAmt As Double = 0
        Dim _FNNetChildCareAmt As Double = 0
        Dim _FNNetOTMealAmt As Double = 0
        Dim _FNNetSocialBase As Double = 0
        Dim _FNNetOTMealAmtUS As Double = 0
        Dim _FNEmpWorkAge As Integer = 0
        Dim _tmpSocailRateKM As DataTable
        Dim _tmpWelfareKM As DataTable
        Dim _tmpWorkAge As DataTable
        Dim _TmpFDDateEnd As String = ""
        Dim _TmpFDDateEndP As String = ""  ' เพิ่มเงือนไข วันที่ลาออก มีผล วันที่ 2 - 16  จ่ายค่า health & transsport
        Dim _DTEmpWorkDay As New DataTable
        Dim _TmpLeavePay As Integer = 0
        Dim _EmpSex As Integer = 0
        Dim _RatePay As Double = 1
        Dim _SalaryPayOTKM As Double = 0
        Dim _SalaryPayLeave As Double = 0
        Dim _SalaryPayLeaveMin As Double = 0
        Dim _FNEmpStatus As Integer = 0
        Dim _FTStateWorkpermit As String = ""
        Dim _FTStateMedicalCertificate As String = ""
        Dim _BonusAmt As Double = 0

        Calculate.LoadInsuranceVNRate()
        Dim FNSocialEmployeeRate As Double = 0
        Dim FNSocialEmployerRate As Double = 0
        Dim FNHealthEmployeeRate As Double = 0
        Dim FNHealthEmployerRate As Double = 0
        Dim FNUnemploymentEmployeeRate As Double = 0
        Dim FNUnemploymentEmployerRate As Double = 0
        Dim FNUnionEmployeeRate As Double = 0
        Dim FNUnionEmployerRate As Double = 0
        Dim FNStateUnionMember As String = ""
        Dim FDStartDateUnion As String = ""
        Dim FDEndDateUnion As String = ""
        Dim FNUnionAmt As Double = 0
        Dim FNUnionRate As Double = 0

        Dim _FNUnion As Integer = 0

        Dim FTAddAvg24Period As String = "0"


        Try
            FNSocialEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eSocialInsurance).FNEmployeeRate
            FNSocialEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eSocialInsurance).FNEmployerRate
            FNHealthEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eHealthInsurance).FNEmployeeRate
            FNHealthEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eHealthInsurance).FNEmployerRate
            FNUnemploymentEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnemploymentInsurance).FNEmployeeRate
            FNUnemploymentEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnemploymentInsurance).FNEmployerRate
            FNUnionEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnionInsurance).FNEmployeeRate
            FNUnionEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnionInsurance).FNEmployerRate
        Catch ex As Exception
            'MG.ShowMsg.mInfo("Invalid Config Value...", 1503310001, "", "")
        End Try


        Dim FNSocialInsuranceEmployee As Double = 0.0
        Dim FNSocialInsuranceEmployer As Double = 0.0
        Dim FNHealthInsuranceEmployee As Double = 0.0
        Dim FNHealthInsuranceEmployer As Double = 0.0
        Dim FNUnemploymentInsuranceEmployee As Double = 0.0
        Dim FNUnemploymentInsuranceEmployer As Double = 0.0
        Dim FNUnionInsuranceEmployee As Double = 0.0
        Dim FNUnionInsuranceEmployer As Double = 0.0

        Dim FNSocialInsuranceEmployeeOrg As Double = 0.0
        Dim FNSocialInsuranceEmployerOrg As Double = 0.0
        Dim FNHealthInsuranceEmployeeOrg As Double = 0.0
        Dim FNHealthInsuranceEmployerOrg As Double = 0.0
        Dim FNUnemploymentInsuranceEmployeeOrg As Double = 0.0
        Dim FNUnemploymentInsuranceEmployerOrg As Double = 0.0
        Dim FNUnionInsuranceEmployeeOrg As Double = 0.0
        Dim FNUnionInsuranceEmployerOrg As Double = 0.0




        _DTEmpWorkDay.Columns.Add("FNSalary", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNTotalDay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNDay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT1", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT15", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT2", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT3", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT4", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNHoloday", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLate", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNAbsent", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLateCutAmtAbsent", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeavePay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeaveNotPay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNBusiness", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSpecial", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNParturition", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNVacation", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNShiftNo", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSlaryOTPerMin", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSlaryNormal", GetType(Double))




        Dim _DTEmpPayLeaveSick As New DataTable
        _DTEmpPayLeaveSick.Columns.Add("FNSalary", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNDay", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNPayPer", GetType(Double))

        _Qry = "SELECT TOP 1 FNCalType FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType WHERE FNHSysEmpTypeId=" & Val(_EmpType) & "  "
        Dim _TmpCalType As Integer = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "0"))

        If FTStaCalPayRoll = 0 Then
            _DateStartOfMonth = _StartDate  'วันแรกของเดือน
            _DateEndOfMonth = _EndDate 'วันแของเดือน
        Else
            _DateStartOfMonth = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
            _DateEndOfMonth = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        End If
        '----------------------------------   Variable  ------------------------------------

        Dim _DateReset As String
        _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
        _Qry &= vbCrLf & "  FROM"
        _Qry &= vbCrLf & " ("
        _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
        _Qry &= vbCrLf & " FROM            THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN THRMEmployee AS M WITH(NOLOCK )"
        _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "  WHERE   M.FNHSysEmpID=" & Val(_EmpCode) & " "
        _Qry &= vbCrLf & " ) As T"

        _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")
        '------------------ รวมวันลาป่วย---------------------------------

        _Qry = "   SELECT        (SUM(FNTotalPayMinute) / 480) AS FNTotalPayMinute  "
        _Qry &= vbCrLf & "      AS TotalLeavePay"
        _Qry &= vbCrLf & "    FROM THRTTransLeave "
        _Qry &= vbCrLf & "  WHERE        (FTLeaveType = '0')"
        _Qry &= vbCrLf & "  AND (FTDateTrans >= N'" & (_DateReset) & "') "
        _Qry &= vbCrLf & "  AND (FTDateTrans < N'" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "') "
        _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ")"

        _LeaveSickPay = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

        '------------------ รวมวันลาป่วย---------------------------------

        With _EmpTaxYear
            .FTAmt = 0 'เงินได้ก่อนหักค่าใช้จ่าย
            .FTExpenses = 0 'ค่าใช้จ่ายส่วนตัว
            .FTNetAmt = 0 'เงินได้หลังหักค่าใช้จ่าย
            .FTModEmp = 0 'ลดหย่อนส่วนตัว
            .FTModMate = 0 'ลดหย่อนคู่สมรส
            .FNChildNotLern = 0 'จำนวนบุตรไม่ศึกษา
            .FNChildLern = 0 'จำนวนบุตรศึกษา
            .FTChildNotLern = 0 'ลดหย่อนบุตรไม่ศึกษา
            .FTChildLern = 0 'ลดหย่อนบุตรศึกษา
            .FTInsurance = 0 'ลดหย่อนเบี้ยประกัน
            .FTProvidentfund = 0 'กองทุนเลียงชีพส่วนที่ไม่เกิน 10000
            .FTInterest = 0 'ดอกเบี้ยเงินกู้
            .FTSocial = 0 'ประกันสังคม
            .FTDonation = 0 'เงินบริจาค
            .FTProvidentfundOver = 0 'กองทุนเลียงชีพส่วนที่เกิน 10000
            .FTGPF = 0 'เงิน กบข.
            .FTSavingsFund = 0 'เงินกองทุนสงเคราะห์
            .FTCommutation = 0 'เงินชดเชยตามกฎหมายแรงงาน
            .FTUnitRMF = 0 'ค่าซื้อหน่วยลงทุน RTF
            .FTModFather = 0 'ลดหย่อนบิดา
            .FTModMother = 0 'ลดหย่อนมารดา
            .FTModFatherMate = 0 'ลดหย่อนบิดาคู่สมรส
            .FTModMotherMate = 0 'ลดหย่อนมารดาคู่สมรส
            .FTUnitLTF = 0 'ค่าซื้อหน่วยลงทุน LTF
            .FTDonationLern = 0 'เงินบริจาคเพื่อสนับสนุนการศึกษา
            .FTParentsHealthInsurance = 0 'เบี้ยประกันสุขภาพบิดามารดา
            .FTSupportSport = 0 'เงินสนับสนุนการกีฬา
            .FTAcquisitionOfProperty = 0 'ค่าซื้ออาคาร
            .FTPension = 0 'บำนาญ
            .FTTravel = 0 'ท่องเที่ยวในประเทศ
            .FTTotalCalTax = 0 'เงินได้สุทธิ
            .FTTotalTax = 0 'ภาษีที่ต้องจ่าย
        End With
        '------------------ GetConfig WeekEnd ----------------------------------

        ' get discount tax

        With _EmpDisTax
            .Cfg_ModChildAllowanceAgeStart = HCfg._DiscountTax.Cfg_ModChildAllowanceAgeStart
            .Cfg_ModChildAllowanceAgeEnd = HCfg._DiscountTax.Cfg_ModChildAllowanceAgeEnd
            .Cfg_ModChildAllowanceRateNotStudied = HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied
            .Cfg_ModChildAllowanceRateStudy = HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy
        End With
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------
        _Qry = "SELECT FNSeqNo, FNAgeBegin, FNAgeEnd, FNEmpPay As FNEmpAmtPer,  FNCmpPay AS FNCmpAmtPer"
        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMContributions WITH(NOLOCK) "
        _Qry &= vbCrLf & "  WHERE  FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID) & " "
        _THRMContributedFund = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------

        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday
        '------------------ GetConfig Holiday ----------------------------------

        ''-----------------ลาพักร้อน คำนวนเฉลี่ย  Total Income 24 งวด -------
        _Qry = "SELECT   top 1 FTAddAvg24Period "
        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeaveVacation WITH(NOLOCK) "
        _Qry &= vbCrLf & "  WHERE  FNHSysEmpTypeId=" & Val(_EmpType) & " AND FTAddAvg24Period = '1' "
        FTAddAvg24Period = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")

        _tmpWelfareKM = Nothing

        _tmpSocailRateKM = LoadSocailRateKM
        _tmpWelfareKM = LoadWelfareKM(Integer.Parse(Val(_EmpType)))
        _tmpWorkAge = GetWorkAgeRate

        _FNAttandanceAmt = 0
        _FNHealtCareAmt = 0
        _FNTransportAmt = 0
        _FNChildCareAmt = 0
        _FNChildCareStartAge = 0
        _FNChildCareEndAge = 0
        _FNOTMealAmt = 0
        For Each ZRow In _tmpWelfareKM.Rows

            _FNAttandanceAmt = Val(ZRow!FNAttandanceAmt.ToString)
            _FNHealtCareAmt = Val(ZRow!FNHealtCareAmt.ToString)
            _FNTransportAmt = Val(ZRow!FNTransportAmt.ToString)
            _FNChildCareAmt = Val(ZRow!FNChildCareAmt.ToString)
            _FNChildCareStartAge = Val(ZRow!FNChildCareStartAge.ToString)
            _FNChildCareEndAge = Val(ZRow!FNChildCareEndAge.ToString)
            _FNOTMealAmt = Val(ZRow!FNOTMealAmt.ToString)

            Exit For
        Next

        'FNAttandanceAmt, FNHealtCareAmt, FNTransportAmt, FNChildCareAmt, FNChildCareStartAge, FNChildCareEndAge, FNOTMealAmt
        FNVacationRetMin = 0 : FNVacationRetAmt = 0
        _FTSatrtCalculateDate = _StartDate
        _FTEndCalculateDate = _EndDate
        _FTSatrtCalculateDateIns = _StartDate
        _FTEndCalculateDateIns = _EndDate
        _FNEmpDiligent = 0 : _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
        _FTStateInDustin = "" : _FNSlaryPerMonth = 0
        _FNSlaryPerDay = 0 : _FNSlaryPerDayShiftNinght = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0 : _FNSlaryPerDayNormal = 0
        _FTEmpState = "" : _FNEmpBaht = 0 : _nBahtOt1 = 0
        _nBahtOt15 = 0 : _nBahtOt2 = 0 : _nBahtOt3 = 0
        _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
        _FCPayVacationBaht = 0 : _FCDeductSourceVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0
        _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0
        _SocialMinIncome = 0 : _SocialMaxIncome = 0
        _Complete = 0 : _Err = 0 : _FCSalary = -99
        CountTerm = 0
        _TotalInstalment = 0 : _Instalment = 0

        FNPayLeaveBusinessBahtMin = 0 : FNPayLeaveSickBahtMin = 0 : FNPayLeaveSpecialBahtMin = 0 : FNParturitionLeaveMin = 0
        GFNPayLeaveBusinessBahtMin = 0 : GFNPayLeaveSickBahtMin = 0 : GFNPayLeaveSpecialBahtMin = 0 : GFNParturitionLeaveMin = 0
        FNPayLeaveBusinessBaht = 0 : FNPayLeaveSickBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0 : FNParturitionLeaveReCalTax = 0

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode,M.FTEmpCode AS FTEmployeeCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, Isnull( M.FNEmpStatus,0) AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"
        _Qry &= vbCrLf & " ,M.FNHSysDeptId AS FTDeptCode , M.FNEmpSex "
        _Qry &= vbCrLf & "  ,M.FNHSysDivisonId AS FTDivCode, M.FNHSysSectId AS FTSectCode,  M.FNHSysUnitSectId AS FTUnitSecCode"
        _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
        _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
        _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
        _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
        _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
        _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
        _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
        _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
        _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
        _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide , isnull( M.FTStateWorkpermit ,'0') as FTStateWorkpermit"
        _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge(M.FdDateStart,'" & _EndDate & "') AS FNEmpWorkAgeNew"
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_MonthSeniority(M.FdDateStart,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeMonthSeniority     "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_Salary_CD_NEW(M.FdDateStart,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeNewCD ,  dbo.[FN_Get_Emp_WorkAge_Day](M.FDDateStart,M.FDDateEnd) as FNEmpWorkAgeNewDay"
        _Qry &= vbCrLf & " ,  dbo.[FN_Get_Emp_WorkAge_Day_CD](M.FDDateStart,M.FDDateEnd,M.FNHSysEmpID,'" & _EndDate & "') as FNEmpWorkAgeNewDay_CD "
        _Qry &= vbCrLf & " , isnull(M.FTStateUnionMember,'') as FTStateUnionMember  , isnull(M.FDStartDateUnion,'') as FDStartDateUnion , isnull(M.FDEndDateUnion,'') as FDEndDateUnion"
        _Qry &= vbCrLf & " , isnull(M.FNUnion,0) as FNUnion "
        _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_EmpCode) & " ) "

        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


        Dim _FDDateProbation As String = ""

        For Each R As DataRow In _Dtemp.Rows

            _DtFin.Rows.Clear()
            _FDDateProbation = R!FDDateProbation.ToString
            _FNUnion = Integer.Parse("0" & R!FNUnion.ToString)
            _FNEmpStatus = Integer.Parse("0" & R!FTStatus.ToString)
            _AmtAddCalOT = 0
            _EmpSex = Val("0" & R!FNEmpSex.ToString)
            _FTStateWorkpermit = R!FTStateWorkpermit.ToString

            FNStateUnionMember = R!FTStateUnionMember.ToString : FDStartDateUnion = R!FDStartDateUnion.ToString : FDEndDateUnion = R!FDEndDateUnion.ToString

            _SalaryDevide = Val(R!FNSalaryDivide.ToString)
            _FTStatePayHoliday = R!FTStatePayHoliday.ToString
            _FNEmpWorkAge = Integer.Parse(Val(R!FNEmpWorkAge.ToString))
            _FTInsurType = Val(R!FTInsurType.ToString)

            If _SalaryDevide <= 0 Then
                _SalaryDevide = 1
            End If

            _FTSlary = R!FTSalary.ToString : _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString
            _FTPaymentCode = R!FTPayCode.ToString : _FTBankCode = R!FTBnkCode.ToString
            _FTCalSocialSta = R!FTCalSocialSta.ToString : _FTCalTaxSta = R!FTCalTaxSta.ToString

            _FTDeptCode = R!FTDeptCode.ToString : _FTDivCode = R!FTDivCode.ToString
            _FTSectCode = R!FTSectCode.ToString
            _FTUnitCode = R!FTUnitSecCode.ToString : _FTPos = R!FTPositCode.ToString

            _FTEmpState = R!FTCalType.ToString
            _FTEmpIdNo = R!FTTaxNo.ToString 'R!FTEmpIdNo.ToString
            _FTEmpIdNo1 = R!FTEmpIdNo.ToString
            _FTSocialNo = R!FTSocialNo.ToString
            _FTBranchCode = R!FTBnkBchCode.ToString
            _FTAccNo = R!FTAccNo.ToString
            '---------------------------------------- ลดหย่อน------------------------------------
            _FNChildNotLearn = 0 : _FCReduceDonate = 0 : _FCLifeInsurance = 0 : _FCLoanHouse = 0 : _FCReduceEducationSupport = 0
            _FCShare = 0 : _FCReduceFather = 0 : _FCReduceMother = 0 : _FCReSpouseFather = 0 : _FCReSpouseMother = 0 : _FTMarryIncome = 0
            _FCLifeFeeMoney = 0

            FCModFather = 0 : FCModMother = 0 : FCModMateFather = 0 : FCModMateMother = 0
            FCPremium = 0 : FCInterest = 0 : FCUnitRMF = 0 : FCUnitLTF = 0 : FCDeductDonate = 0 : FCDisabledDependents = 0 : FCDeductDonateStudy = 0
            FCHealthInsurFatherMotherMate = 0 : FTHealthInsurIDFather = 0 : FTHealthInsurIDMother = 0
            FTHealthInsurIDFatherMate = 0 : FTHealthInsurIDMotherMate = 0

            FTTotalCalContributedAmt = 0 : FTContributedAmt = 0 : FTCmpContributedAmt = 0
            FTTotalCalWorkmen = 0 : FTWorkmenAmt = 0 : _FTMaxCalWorkmen = 0 : _FTMaxWorkmenRate = 0 : FTTotalCalWorkmenAcc = 0
            _FNIncentiveAmt = 0

            _TmpFDDateEnd = _FDDateEnd
            _TmpFDDateEndP = _FDDateEnd

            If _TmpFDDateEnd <> "" Then

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,-1,Convert(Datetime,'" & _TmpFDDateEnd & "')),111)"
                _TmpFDDateEnd = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,Convert(Datetime,'" & _EndDate & "')),111)"
                _TmpFDDateEndP = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

            End If

            '--------- อายุงาน  เดือน --นับถึงสิ้นเดือน 
            _WorkAge = Val(R!FNEmpWorkAgeNewCD.ToString)

            '---------อายุงาน วัน
            _WorkAgeDay = Val(R!FNEmpWorkAgeNewDay.ToString)

            '---------อายุงาน เดือน ไม่ปัดขึ้น เพื่อคิด ค่ารางวัลอายุงาน 
            _WorkAgeSeniority = Val(R!FNEmpWorkAgeMonthSeniority.ToString)

            '---------วันทำงาน 
            _WorkingDayN = Val("0" & R!FNEmpWorkAgeNewDay_CD.ToString)

            '----------- Calculate Seniority Bonus For KKN---------------
            _FNWorkAgeSalary = 0
            'If _FTEmpState <> "2" And _FTEmpState <> "3" Then
            If Val(_PayTerm) Mod 2 <> 0 Then
                If (_EndDate >= Left(_StartDate, 8) & "07" And _EndDate <= Left(_StartDate, 8) & "24") Then
                    For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & _WorkAgeSeniority & " AND  FNWorkAgeEnd>=" & _WorkAgeSeniority & " ")
                        _FNWorkAgeSalary = Val(ZRow!FNWorkAgeAmt.ToString)
                        Exit For
                    Next
                End If

                'If (_StartDate <= Left(_StartDate, 8) & "24" And _EndDate >= Left(_StartDate, 8) & "24") Then
                '    For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & _WorkAge & " AND  FNWorkAgeEnd>=" & _WorkAge & " ")
                '        _FNWorkAgeSalary = Val(ZRow!FNWorkAgeAmt.ToString)
                '        Exit For
                '    Next
                'End If
            End If

            'End If

            '----------- Calculate Seniority Bonus For KKN---------------

            If _FTEmpState = "2" Then
                _TotalInstalment = 12
            Else
                _TotalInstalment = 24
            End If

            _ContributedFundBeginPay = False
            If R!FDFundBegin.ToString <> "" Then
                If R!FDFundBegin.ToString < _FTEndCalculateDate Then

                    If R!FDFundEnd.ToString <> "" Then
                        If R!FDFundEnd.ToString > _FTEndCalculateDate Then
                            _ContributedFundBeginPay = True
                        End If
                    Else
                        _ContributedFundBeginPay = True
                    End If

                End If
            End If

            _Instalment = Val(_PayTerm)
            _FNIncentiveAmt = 0

            '-------------คำนวณ Incentive-------------------------------------------
            Select Case _FTInsurType
                Case 1

                    '---------ประกันเป็นวัน
                    _Qry = "SELECT SUM ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END  ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                    '_Qry = "SELECT SUM (  ISNULL(FNNetAmt,0)   ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                    _Qry = "SELECT sum(Isnull(FNAmt,0)) as FNAmt  "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    _FNIncentiveAmt = _FNIncentiveAmt + CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case 2
                    '---------ประกันเป็นเป็นงวด-------------------------------------------

                    _Qry = "SELECT  ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END  ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM ( SELECT SUM(ISNULL(FNNetAmt,0) ) AS FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) AS FNNetProAmt"
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _Qry &= vbCrLf & " ) AS M"

                    '_Qry = "SELECT   SUM (  ISNULL(FNNetAmt,0)   ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM ( Select SUM(ISNULL(FNNetAmt,0) ) As FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) As FNNetProAmt"
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily With(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	And FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    '_Qry &= vbCrLf & " ) AS M"
                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))
                    _Qry = "SELECT sum(Isnull(FNAmt,0)) as FNAmt  "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                    _FNIncentiveAmt = _FNIncentiveAmt + CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case Else
            End Select
            '-------------------------------------

            '---------------------------------------- ลดหย่อน------------------------------------
            _Qry = " SELECT      FNHSysEmpID, FTChildSex, FTStudySta  ,isnull( FTStateNotDisTax ,'0') AS FTStateNotDisTax "
            '_Qry &= vbCrLf & ", dbo.FN_Get_ChildEmp_Age(FDChildBirthDate,'') AS FNChildAge"
            _Qry &= vbCrLf & ",dbo.FN_Get_Emp_WorkAge(FDChildBirthDate,'" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "') AS FNChildAge"
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeChild WITH(NOLOCK) "
            _Qry &= vbCrLf & " WHERE   (FNHSysEmpID = " & Val(_EmpCode) & ")"
            _dttemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)



            Dim _ChildNotStudy As Integer = 0
            Dim _ChildStudy As Integer = 0
            _FNTotalChildCare = 0
            _EmpDisTaxChildAmt = 0

            If (_EmpSex = 1) Then 'Employee Male Not Cal ChildCare
                For Each _Drow As DataRow In _dttemp.Select("FTStateNotDisTax = '0'")

                    '--------  Add Child Care For KKN--------------
                    If Val(_Drow!FNChildAge.ToString) >= _FNChildCareStartAge And Val(_Drow!FNChildAge.ToString) < _FNChildCareEndAge Then
                        _FNTotalChildCare = _FNTotalChildCare + 1
                    End If
                    '--------  Add Child Care For KKN--------------

                    If _Drow!FTStudySta.ToString = "1" Then
                        _ChildStudy = _ChildStudy + 1
                    Else
                        _ChildNotStudy = _ChildNotStudy + 1
                    End If


                    '--------  Add Amt Child Distax For KKN--------------
                    If _Drow!FTStudySta.ToString = "0" Then
                        If _Drow!FTStudySta.ToString = "1" Then
                            If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                                _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateStudy
                            End If
                        Else

                            If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                                _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateNotStudied
                            End If
                        End If

                    End If

                    ' อายุมากกว่า แต่ศึกษาอยู่ ลดหย่อนได้

                    '--------  Add Amt Child Distax For KKN--------------



                Next

                _FNNetChildCareAmt = Format(_FNTotalChildCare * _FNChildCareAmt, "0.00")

            Else
                For Each _Drow As DataRow In _dttemp.Select("FTStateNotDisTax = '0'")
                    If _Drow!FTStudySta.ToString = "1" Then
                        If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                            _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateStudy
                        End If
                    Else

                        If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                            _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateNotStudied
                        End If
                    End If

                    If _Drow!FTStudySta.ToString = "1" Then
                        _ChildStudy = _ChildStudy + 1
                    Else
                        _ChildNotStudy = _ChildNotStudy + 1
                    End If

                Next
            End If



            _FCAccumulateIncome = 0 : _FCAccumulateSocial = 0 : _FCAccumulateTax = 0
            FTTotalCalContributedAcc = 0 : FTTotalCalWorkmenAcc = 0

            '----------- Get Summary ------------------
            LoadIncomeTax(_FTEmpIdNo, _PayYear, _PayTerm, _FCAccumulateIncome, _FCAccumulateTax, _FCAccumulateSocial, CountTerm, FTTotalCalContributedAcc, FTTotalCalWorkmenAcc, Integer.Parse(Val(_EmpCode)))
            '----------- Get Summary ------------------

            With _EmpDisTax

                .BaseSlary = 0
                .OtherSlary = 0
                .BeforeIncom = 0 ' _FCAccumulateIncome
                .BeforeTax = _FCAccumulateTax
                .FTMateIncome = (R!FTMateIncome.ToString = "0")
                ' ----------------------------------------- Clear Discount Tax Value -------------------------
                .Cfg_ModChildAllowanceRateNotStudied = _ChildNotStudy 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
                .Cfg_ModChildAllowanceRateStudy = _ChildStudy 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
                '-------------ลดหย่อนบุตร-----------------

                '--- หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
                .Cfg_ContributedDeducToTheFund = FTTotalCalContributedAcc 'ลูกจ้าง
                '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ

                .Cfg_ModDeductibleDonations = CDbl(Val(R!FCDeductDonate.ToString)) ' ' % ลดหย่อนเงินบริจาค
                .Cfg_ModDeductDonateStudy = CDbl(Val(R!FCDeductDonateStudy.ToString))
                .Cfg_ModFatherReduction = CDbl(Val(R!FCModFather.ToString)) '  'ลดหย่อนบิดา
                .Cfg_ModInsurancePremiums = CDbl(Val(R!FCPremium.ToString)) '  'ค่าเบี้ยประกันชีวิตส่วนบุคคล
                .Cfg_ModLendingforHousing = CDbl(Val(R!FCInterest.ToString)) ' 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย

                .Cfg_ModLTFChk = CDbl(Val(R!FCUnitLTF.ToString)) 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
                .Cfg_ModMateFatherReduction = CDbl(Val(R!FCModMateFather.ToString)) ' 'ลดหย่อนบิดา คู่สมรส
                .Cfg_ModMateMotherReduction = CDbl(Val(R!FCModMateMother.ToString)) '  'ลดหย่อนมารดา คู่สมรส
                .Cfg_ModMotherReduction = CDbl(Val(R!FCModMother.ToString)) ' 'ลดหย่อนมารดา

                .Cfg_ModPersonalExpenChk = 0 ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน

                .Cfg_ModRateReductionsByMarital = (IIf(R!FTMaritalCode.ToString = "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
                .Cfg_ModRateReductionsBySingle = (IIf(R!FTMaritalCode.ToString <> "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ โสด 

                .Cfg_ModRMFChk = CDbl(Val(R!FCUnitRMF.ToString)) '  ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 
                .FCDisabledDependents = CDbl(Val(R!FCDisabledDependents.ToString)) '  'ค่าอุปการะเลี้ยงดูคนพิการหรือทุพพลภาพ
                .FCHealthInsurFatherMotherMate = CDbl(Val(R!FCHealthInsurFatherMotherMate.ToString)) '   'เบี้ยประกันสุขภาพบิดามารดาของผู้มีเงินได้และคู่สมสร

                .FCExceptAgeOver = CDbl(Val(R!FCExceptAgeOver.ToString)) ' ' 'รายการเงินได้ที่ได้รับยกเว้น ของผู้มีเงินได้ตั้งแต่ 65 ปีขึ้นไป 
                .FCExceptAgeOverMate = CDbl(Val(R!FCExceptAgeOverMate.ToString)) ' 'รายการเงินได้ที่ได้รับยกเว้น ของคู่สมรสอายุตั้งแต่ 65 ปีขึ้นไป
                '----------------------------------------------------
            End With
            '---------------------------------------- ลดหย่อน------------------------------------

            _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = "0" : _FTOtherAddCalculateTax = "0" : _FCOtherAddOt = 0
            _FTOtherAddOtCalculateSocial = "0" : _FTOtherAddOtCalculateTax = "0" : _FCBFShiftMoney = 0 : _FTShiftMoneyCalculateSocial = "0"
            _FTShiftMoneyCalculateTax = "0" : _FCDiligent = 0 : _FTDiligentCalculateSocial = "0" : _FTDiligentCalculateTax = "0"
            _FCBonusEndYear = 0 : _FTBonusEndCalculateSocial = "0" : _FTBonusEndCalculateTax = "0" : _FCShelter = 0
            _FTShelterCalculateSocial = "0" : _FTShelterCalculateTax = "0" : _FCShareFactory = 0 : _FTShareFactoryCalculateSocial = "0"
            _FNNetpayOrg = 0.0
            _FNNetpay = 0.0
            _FCSalary = -99
            _FTSlary = (_FTSlary)

            If IsNumeric(_FTSlary) Then


                _MSlary = _FTSlary
                _FCSalary = CDbl(_FTSlary)


                '------------------ คำนวณคืนพักร้อน ----------------------------

                If (_ReturnVacation > 0) Or (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                    Dim _Month As Integer = 0
                    Dim _Leave As Double = 0
                    Dim _SumLeaveVacation As Double = 0
                    Dim _ResetDate As String = ""

                    Dim _DateReset2 As String



                    _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
                    _Qry &= vbCrLf & "  FROM"
                    _Qry &= vbCrLf & " ("
                    '_Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),convert(date, '" & (_EndDate) & "'),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK )"
                    _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
                    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                    _Qry &= vbCrLf & " ) As T"

                    _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & ("") & "','" & (_EndDate) & "') AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "


                    ElseIf _PayTerm = "01" Then
                        ''  MsgBox("b")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'2022/01/01','2022/12/31') AS FNEmpVacation"
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "



                    Else
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & (_DateReset) & "','" & (_EndDate) & "') AS FNEmpVacation"
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                    End If


                    _Leave = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                    _Qry = "  "
                    If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                        If _PayTerm <> "01" Then
                            _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & ("") & "','" & (_EndDate) & "') AS FNEmpVacation"
                            _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                            _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "


                            _Leave = _Leave + (HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        End If



                    End If

                    If _Leave > 0 And _DateReset <> "" Then


                        If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98' OR ISNULL(FTStateDeductVacation,'') ='1' )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"

                            'Else
                            '    _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            '    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            '    _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            '    _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '    '_Qry &= vbCrLf & " 	AND  FTDateTrans < '" & (_DateReset) & "'"
                            '    _Qry &= vbCrLf & " 	AND  FTDateTrans < Convert(varchar(10),DateAdd(year,1,Convert(Datetime,'" & (_DateReset) & "')),111)"
                            '    '_Qry &= vbCrLf & " 	AND  FTDateTrans >=Convert(varchar(10),DateAdd(year,-1,Convert(Datetime,'" & (_DateReset) & "')),111)"
                            '    _Qry &= vbCrLf & " 	AND  FTDateTrans >='" & (_DateReset) & "'"
                        End If

                        _SumLeaveVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                        If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) And _PayTerm <> "01" Then
                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"

                            _SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                        Else
                            ''        MsgBox("g")
                            '_Qry = " "
                            '_Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            '_Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            '_Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '_Qry &= vbCrLf & " 	AND  FTDateTrans >= '2023/01/01'"
                            '_Qry &= vbCrLf & " 	AND  FTDateTrans <= '2023/12/31'"
                            '_SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                        End If



                        If _ReturnVacation <= 0 Then
                            _Qry = " SELECT   TOP 1 FCCfgRetValue"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigReturnVacationSet WITH(NOLOCK) "
                            _Qry &= vbCrLf & "  WHERE      (FNCalType =" & Val(_EmpType) & ")"

                            _ReturnVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        End If

                        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                        Select Case FNStateSalaryType
                            Case 0 'ต่อเดือน

                                _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.0000000"))
                            Case 1 'ต่อวัน

                                _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                        End Select
                        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                        Dim _FNSlaryPerDayRetVa As Double = 0
                        _FNSlaryPerDayRetVa = HI.Conn.SQLConn.GetField("Select Top 1 FNSalary From THRTPayRoll WITH(NOLOCK) where  FNHSysEmpID = " & Val(_EmpCode) & " and  FTPayYear +'/'+FTPayTerm  <'" & _PayYear & "/" & _PayTerm & "'  Order by FTPayYear +'/'+FTPayTerm DESC ", Conn.DB.DataBaseName.DB_HR, "0")


                        If (_Leave * 480) > _SumLeaveVacation Then
                            Dim _MoneyRetVacationPerDay As Double = 0
                            If FTAddAvg24Period = "1" Then
                                _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), _Leave, _FCSalary, CountDayPerMonth, _WorkAgeDay)
                            Else
                                _MoneyRetVacationPerDay = _FNSlaryPerDay
                            End If


                            Dim _ReteReturnVacPerDay As Double = 0
                            If _FNEmpStatus = "2" Or _FDDateEnd <= _EndDate Then
                                If _WorkAge <= 0 Then
                                    Dim _ReVacationDay As Double = 0
                                    Dim _ReVacationPiad As Double = 0

                                    '  _ReVacationDay = Double.Parse(Format(((_Leave / 26) * _WorkAgeDay), "0.000"))
                                    '  _ReVacationDay = Double.Parse((_Leave / 26) * _WorkAgeDay)
                                    '   _Leave = _ReVacationDay
                                    _ReVacationDay = _Leave
                                End If
                                _ReteReturnVacPerDay = _MoneyRetVacationPerDay
                            Else
                                _ReteReturnVacPerDay = _MoneyRetVacationPerDay  ' CDbl(Format((_FNSlaryPerDayRetVa) / CountDayPerMonth, "0.0000000"))
                                FNVacationPerDayLapaid = _MoneyRetVacationPerDay
                            End If
                            FNVacationRetMin = (_Leave * 480) - _SumLeaveVacation
                            If FNVacationRetMin <= 0 Then
                                FNVacationRetMin = 0
                            End If

                            FNVacationRetAmt = 0
                            'Dim _RetVaclationBal As Double = CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000"))

                            _AmtReturnVacation = CDbl(Format((CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000")) * (_ReturnVacation * (_ReteReturnVacPerDay / 480))), "0.000"))
                            FNVacationRetMin = CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000"))
                            FNVacationRetAmt = _AmtReturnVacation

                        End If

                    End If
                End If
                '------------------ คำนวณคืนพักร้อน ----------------------------

                ''------------------ คำนวณคืนพักร้อน ----------------------------
                'If _ReturnVacation > 0 Then
                '    Dim _Month As Integer = 0
                '    Dim _Leave As Double = 0
                '    Dim _SumLeaveVacation As Double = 0
                '    Dim _ResetDate As String = ""
                '    Dim _dttempdata3 As DataTable

                '    _Qry = "    SELECT TOP 1  VC.FNLeaveRight, VC.FNAgeBegin, VC.FNAgeEnd, VC.FTCmpCode, VC.FTTypeEmp"
                '    _Qry &= vbCrLf & ",ISNULL((SELECT TOP 1 FTLeaveReset FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave WITH(NOLOCK) WHERE FNHSysEmpTypeId =" & Val(_EmpType) & "  AND FTLeaveCode='98'  ),'') AS FTReset"
                '    _Qry &= vbCrLf & " FROM      [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeaveVacation AS VC WITH(NOLOCK) "
                '    _Qry &= vbCrLf & "  WHERE   VC.FNHSysEmpTypeId='" & Val(_EmpType) & "' "
                '    _Qry &= vbCrLf & "  AND   VC.FNAgeBegin<=" & _Month & " "
                '    _Qry &= vbCrLf & "  AND   VC.FNAgeEnd>=" & _Month & " "

                '    _dttempdata3 = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '    For Each R3 As DataRow In _dttempdata3.Rows
                '        _Leave = Val(R3!FNLeaveRight.ToString)
                '        _ResetDate = R3!FTReset.ToString
                '        Exit For
                '    Next
                '    _dttempdata3.Dispose()

                '    Dim _DateReset2 As String

                '    _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
                '    _Qry &= vbCrLf & "  FROM"
                '    _Qry &= vbCrLf & " ("
                '    _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                '    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK )"
                '    _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
                '    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                '    _Qry &= vbCrLf & " ) As T"

                '    _DateReset2 = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                '    _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,1,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                '    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                '    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Leave = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                '    If _Leave > 0 And _ResetDate <> "" Then

                '        _Qry = "     SELECT       (SUM(FNTotalMinute)/480.00) AS FNTotalMinute"
                '        _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                '        _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98')"
                '        _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                '        _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset2) & "'"
                '        _Qry &= vbCrLf & " 	AND  FTDateTrans <=Convert(varchar(10),DateAdd(year,1,Convert(Datetime,'" & (_DateReset2) & "')),111)"

                '        _SumLeaveVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                '        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                '        Select Case FNStateSalaryType
                '            Case 0 'ต่อเดือน

                '                _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.0000000"))
                '            Case 1 'ต่อวัน

                '                _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                '        End Select
                '        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ


                '        If _Leave > _SumLeaveVacation Then
                '            _AmtReturnVacation = CDbl(Format(((_Leave - _SumLeaveVacation) * (_ReturnVacation * _FNSlaryPerDay)), "0.00"))
                '        End If

                '    End If
                'End If
                ''------------------ คำนวณคืนพักร้อน ----------------------------

                _SocialMinIncome = HCfg.HSocialRate.SocialIncomeMin
                _SocialMaxIncome = HCfg.HSocialRate.SocialIncomeMax
                _SocialRate = HCfg.HSocialRate.CalSocialRate
                _StateSocialOnlyCmppay = HCfg.HSocialRate.StateSocialOnlyCmppay

                _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
                _AmtPlus = 0

                _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                For Each R3 As DataRow In _dtot.Rows
                    Select Case R3!FTCfgOTCode.ToString.ToUpper
                        Case "01"
                            _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                        Case "02"
                            _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                        Case "03"
                            _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                        Case "04"
                            _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "05"
                            _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                    End Select

                Next

                '---------รายได้รายหัก อื่นๆ-------------------------
                _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"




                If _EmpCalType = "0" Then
                    If Val(_PayTerm) Mod 2 = 0 Then
                        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                    Else
                        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                    End If
                End If
                ' _Qry &= vbCrLf & "  AND FTPayType <> '" & IIf(_EmpCalType = "0" Or (Val(_PayTerm) Mod 2 = 0), "", "1") & "' "




                _dtAddOtherAmt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                'If _dtAddOtherAmt.Select("FTFinCode ='044'").Length <= 0 Then
                '    _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  7.5 As FCFinAmt   , FM.FTFinType"
                '    _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                '    _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                '    _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                '    _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                '    _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"
                '    _Qry &= vbCrLf & " FROM         [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)    INNER JOIN"
                '    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                '    _Qry &= vbCrLf & " WHERE    FN.FTFinCode = '044'"
                '    _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"
                '    If _EmpCalType = "0" Then
                '        If Val(_PayTerm) Mod 2 = 0 Then
                '            _Qry &= vbCrLf & "  AND FTPayType <> '' "
                '        Else
                '            _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                '        End If
                '    End If

                '    _dtAddOtherAmt.BeginInit()
                '    _dtAddOtherAmt.Rows.Add(HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR).Rows)

                '    _dtAddOtherAmt.EndInit()

                'End If


                _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
                _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
                _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
                _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet"
                _Qry &= vbCrLf & "  WHERE        (FTFinCode = N'001') OR  (FTFinCode = N'007') "
                _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _GAmtAddCalOT = 0
                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTStaCalOT='1' AND FTPayType='0' ")
                    _GAmtAddCalOT = _GAmtAddCalOT + Val(R2!FCFinAmt.ToString)
                Next

                _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = 0 : _FTOtherAddCalculateTax = 0 : _FCOtherDeduct = 0

                '---------------- Adjust Before Calculate------------------------------------
                _Qry = " SELECT        FN.FTStaTax, FN.FTStaSocial, (ISNULL(BF.FCFinAmt,0))  AS FCFinAmt, FM.FTFinType,ISNULL(BF.FNDay,-1) As FNDay,BF.FTFinCode "
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE        (BF.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "')"
                _Qry &= vbCrLf & "  AND (BF.FTPayTerm = '" & HI.UL.ULF.rpQuoted(_PayTerm) & "') "
                _Qry &= vbCrLf & " AND (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"

                If _AmtReturnVacation > 0 Then
                    _Qry &= vbCrLf & " UNION ALL "
                    _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial, " & _AmtReturnVacation & "  AS FCFinAmt, FM.FTFinType,-1 As FNDay,FM.FTFinCode "
                    _Qry &= vbCrLf & " FROM     [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)  INNER JOIN"
                    _Qry &= vbCrLf & "          [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE (FM.FTFinCode='019')"
                End If

                _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                For Each R2 As DataRow In _dt.Select("FNDay<=0")
                    Select Case R2!FTFinType.ToString
                        Case "1"
                            _FCOtherAdd = _FCOtherAdd + Val((R2!FCFinAmt.ToString))

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax + Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial + Val((R2!FCFinAmt.ToString))

                        Case "2"

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax - Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial - Val((R2!FCFinAmt.ToString))


                            _FCOtherDeduct = _FCOtherDeduct + Val((R2!FCFinAmt.ToString))
                    End Select
                Next

                _DayAdjAdd = 0
                _WageAdjAdd = 0

                For Each R2 As DataRow In _dt.Select("FNDay> 0")

                    _DayAdjAdd = _DayAdjAdd + Val((R2!FNDay.ToString))
                    _WageAdjAdd = _WageAdjAdd + Val((R2!FCFinAmt.ToString))

                Next

                _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
                _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= 480 THEN 480   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= 480 THEN 480   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= 480 THEN 480 ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
                _Qry &= vbCrLf & " , FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO,Max(ISNULL(FTStateMedicalCertificate,'')) AS FTStateMedicalCertificate "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_EmpCode) & " )"

                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_DateStartOfMonth) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_DateEndOfMonth) & "' "
                Else
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                End If

                _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

                _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	,Isnull(SH.FNRatePaid,1) AS FNRatePaid , Isnull(SH.FNStateShift,0) AS FNStateShift  "
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) )     AS FNTime"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT1_5,0) AS FNOT1_5"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT2,0 ) AS FNOT2  , ISNULL(T.FNOT3,0) AS FNOT3, ISNULL(T.FNOT4,0) AS FNOT4"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(T.FNLateNormalCut,0 )   AS FNLateNormalCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateOtMin,0) As FNLateOtMin,ISNULL(T.FNLateOtCut,0) As FNLateOtCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateMMin,0) As FNLateMorning"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateAfMin,0) AS FNLateAfternoon,Isnull(T.FNAbsentCut,0) AS FNAbsentCut "
                _Qry &= vbCrLf & " 	, (CASE WHEN ISNULL(T.FNAbsentSP,0) = ISNULL(T.FNAbsent,0) THEN 0 ELSE  ISNULL(T.FNAbsent,0)  END ) AS FNAbsent_Cut "
                _Qry &= vbCrLf & " 	, ISNULL(T.FNCutAbsent,0) AS FNAbsent "
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) )   AS FNTimeMin"
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0)) As FNTimeMinOrg"
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1Min,0) As FNOT1Min  "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1_5Min,0) As FNOT1_5Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNOT2Min,0) As FNOT2Min "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNLateMMin,0) AS FNLateMMin "
                _Qry &= vbCrLf & " , ISNULL(T.FNLateAfMin,0) AS FNLateAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireMMin,0) AS FNRetireMMin "
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireAfMin,0 )  as FNRetireAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireNormalCut,0) As FNRetireNormalCut "
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireOtMin,0) AS FNRetireOtMin"
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"
                _Qry &= vbCrLf & " ,CASE WHEN T.FTWeekDay=1 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSunday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSunday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=2 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTMonday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTMonday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=3 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTTuesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTTuesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=4 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTWednesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTWednesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=5 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTThursday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTThursday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=6 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTFriday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTFriday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=7 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSaturday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSaturday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  ELSE '0' END AS FTWeekly,ISNULL(FTStateAccept,'') AS FTStateAccept "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
                _Qry &= vbCrLf & "   INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK)  ON  T.FNHSysEmpID =  M.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeWeekly AS EHL WITH (NOLOCK) ON T.FNHSysEmpID=EHL.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmpTypeWeeklySpecial AS ETHL WITH (NOLOCK) ON T.FTDateTrans = ETHL.FDHolidayDate AND M.FNHSysEmpTypeId=ETHL.FNHSysEmpTypeId"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS SH WITH (NOLOCK) ON T.FNHSysShiftID = SH.FNHSysShiftID"

                _Qry &= vbCrLf & "  WHERE (T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "'  "

                If _FDDateEnd <> "" Then
                    _Qry &= vbCrLf & " 	AND T.FTDateTrans < '" & HI.UL.ULDate.ConvertEnDB(_FDDateEnd) & "'  "
                End If
                If _FTEmpState <> "2" And _FTEmpState <> "3" Then ' คำนวณค่าแรงพนักงานรายเดือน
                    _Qry &= vbCrLf & " 	AND T.FTStateAccept = '1'  "
                End If

                _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '---------------Get Trans Daily--------------------------------------
                _GFNTime = 0 : _GFNNotRegis = 0 : _GFNOT1 = 0 : _GFNOT1_5 = 0
                _GFNOT2 = 0 : _GFNOT3 = 0 : _GFNOT4 = 0 : _GFNLeaveSick = 0 : _GFNLeaveBusiness = 0
                _GFNLeaveVacation = 0 : _GFNLeavePregnant = 0 : _GFNLeaveOrdain = 0 : _GFNLeaveMarry = 0 : _GFNLeaveSpecial = 0
                _GFNLeaveOther = 0 : _GFNLateNormalMin = 0 : _GFNLateNormalCut = 0 : _GFNLateOtMin = 0
                _GFNLateOtCut = 0 : _GFNLateMorning = 0 : _GFNLateAfternoon = 0
                _GFNAbsent = 0 : _GFNCutAbsent = 0 : _GFNLeavePay = 0 : _GFNTimeMin = 0 : _GFNOT1Min = 0 : _GFNOT1_5Min = 0
                _GFNOT2Min = 0 : _GFNOT3Min = 0 : _GFNLateMMin = 0 : _GFNLateAfMin = 0 : _GFNRetireMMin = 0
                _GFNRetireAfMin = 0 : _GFNRetireNormalCut = 0 : _GFNRetireOtMin = 0 : _GFNRetireOtCut = 0
                _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
                _Gtotalleave = 0 : _GtotalleavePay = 0 : _GtotalleaveNotPay = 0 : _GtotalleavePayCalSso = 0 : _GtotalleavePayCalSsoAmt = 0
                _TotalHoliDay = 0
                _GFNLateNormalMinNotHoliday = 0


                '------------------- เริ่มการคำนวณรายวัน
                Dim _oHoliday As Integer = 0
                Dim _Day As Integer = 0
                _TotalWorkDay = 0
                _ShiftAmt = 0
                _ShiftValue = 0
                _ShiftOTValue = 0
                _ShiftOTAmt = 0
                _FCAdd = 0 : _FTAddCalculateSocial = 0 : _FTAddCalculateTax = 0 : _FCDeduct = 0
                _GAmtPlus = 0


                Dim _RateShipftPerDay As Double = 0
                Dim _StateShift As Integer = 0
                If _FDDateStart > _FTSatrtCalculateDate Then _FTSatrtCalculateDate = _FDDateStart

                Do While _FTSatrtCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTSatrtCalculateDate < _FDDateEnd)

                    _RateShipftPerDay = 0
                    _oHoliday = 0
                    FTHldType = 0
                    _StateShift = 0
                    Dim _NewSlary As String

                    _Qry = "  SELECT   TOP 1   FNCurrentSlary  AS AMT"
                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK) "
                    _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "') "
                    _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    _FCSalary = _MSlary
                    If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    _Holiday = ""

                    For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                        _Holiday = "H"
                        FTHldType = Val(IR!FTHldType.ToString)
                        Exit For
                    Next

                    _FTShift = ""

                    _FNTime = 0
                    _FNNotRegis = 0
                    _FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
                    _FNOT3 = 0 : _FNOT4 = 0
                    _FNLateNormalMin = 0 : _FNLateNormalCut = 0
                    _FNLateOtMin = 0 : _FNLateOtCut = 0
                    _FNLateMorning = 0 : _FNLateAfternoon = 0
                    _LateCutAbsent = 0 : _FNAbsent = 0
                    _FNTimeMin = 0 : _FNOT1Min = 0
                    _FNOT1_5Min = 0 : _FNOT2Min = 0
                    _FNOT3Min = 0 : _FNOT4Min = 0
                    _FNLateMMin = 0 : _FNLateAfMin = 0
                    _FNRetireMMin = 0 : _FNRetireAfMin = 0
                    _FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
                    _FNRetireOtMin = 0 : _FNRetireOtMin = 0
                    _FNRetireOtCut = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _AmtAddCalOT = 0
                    _GtotalleavePayCalSso = 0
                    _LeaveCode = ""

                    Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                    Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                    For Each R2 In _R

                        _RatePay = Double.Parse("0" & R2!FNRatePaid.ToString)
                        _RateShipftPerDay = _RatePay
                        _StateShift = Integer.Parse("0" & R2!FNStateShift.ToString)

                        _FTShift = R2!FTShift.ToString
                        _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                        _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                        _FNNotRegis = Val(R2!FNNotRegis.ToString)
                        _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                        _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                        _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                        _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                        _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                        _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent_Cut.ToString)
                        _FNOT1Min = Val(R2!FNOT1Min.ToString)
                        _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                        _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                        _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                        _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                        _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                        _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                        _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                        _InOT = R2!FTIn3.ToString
                        _OutOT = R2!FTOut3.ToString

                        _Over = R2!FTOverClock.ToString

                        If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            _TotalWorkDay = _TotalWorkDay + 1

                            _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                            If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                If _FNOT1Min + _FNOT2Min + _FNOT4Min + _FNOT1_5Min > 0 Then
                                    _FNNetOTMealAmt = _FNNetOTMealAmt + _FNOTMealAmt
                                End If

                                _SPDateType = 0

                                _Holiday = ""

                                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _Holiday = "H"
                                    Exit For
                                Next

                                If _Holiday <> "" Then _SPDateType = 2

                                Dim _StateLeaveOther As Boolean = False
                                Dim _StateLeavacation As Boolean = False
                                Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                Dim _SumLeave As Integer = 0

                                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                    If Val(sR!LeaveType) = 1 Then
                                        _StateLeavacation = True
                                    Else
                                        _StateLeaveOther = True
                                    End If

                                    If Val(sR!LeaveType) = 2 Then
                                        _StateFTStaMaternityleaveNotpay = True
                                    End If

                                Next

                                '-----ข---------------------- ค่ากะ -------------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)



                                    If _StatePass Then
                                        _ShiftAmt = _ShiftAmt + _ShiftValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ -------------------------------------

                                '****************************** Bonus 

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='008' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        Dim _Amt As Double = 0
                                        Dim _Cmd As String = ""
                                        _Cmd = "Select Top 1 isnull(FNAmt,0) AS  FNAmt From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus with(nolock)"
                                        _Cmd &= vbCrLf & "where FNHSysEmpID=" & Integer.Parse(_EmpCode)
                                        _Cmd &= vbCrLf & "and FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'"
                                        _Amt = Double.Parse(HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "0"))
                                        _BonusAmt = _BonusAmt + _Amt

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _Amt
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _Amt
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _Amt
                                    End If
                                Next


                                '****************************** End Bonus

                                '--------------------------- ค่ากะ OT ----------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        _ShiftOTAmt = _ShiftOTAmt + _ShiftOTValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftOTValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftOTValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftOTValue

                                    End If

                                Next
                                '--------------------------- ค่ากะ OT ----------------------------------

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='0' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then

                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + Val(RFin!FCFinAmt.ToString)

                                        If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                            _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                        Else

                                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                            Next

                                        End If
                                    End If
                                Next
                            End If
                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                        End If

                    Next


                    'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                    Select Case FNStateSalaryType
                        Case 0 'ต่อเดือน
                            _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.000"))
                            _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                            ' _SalaryPayLeave = CDbl(Format((_FCSalary) / 26, "0.000")) ' ลาป่วย หารวันทำงานในงวด  meeting 20180227 pMote , pWest , pTuk cd , pAnuwat 

                            _SalaryPayLeave = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                        Case 1 'ต่อวัน
                            _FNSlaryPerMonth = CDbl(Format((_FCSalary * CountDayPerMonth), "0.000"))
                            _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.000"))
                            _SalaryPayLeave = _FNSlaryPerDay
                    End Select
                    'เพิ่มค่าแรง กัมพูชา 20161206
                    '  _SalaryPayLeave = _FNSlaryPerDay
                    _FNSlaryPerMonth = _FNSlaryPerMonth
                    _FNSlaryPerDay = _FNSlaryPerDay
                    _SalaryPayOTKM = _FNSlaryPerDay


                    'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ

                    'กะกลางคืน *  130 % เฉพราะส่วนของค่าแรง
                    'If _RateShipftPerDay > 1 Then
                    '    ' _FNSlaryPerDay = _FNSlaryPerDay * _RateShipftPerDay
                    '    _FNSlaryPerDayShiftNinght = _FNSlaryPerDay * _RateShipftPerDay
                    'End If

                    If _StateShift = 1 Then
                        _Qry = " SELECT FTCfgOTCode,Isnull(FCCfgOTNightValue,0) as  FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus   "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    Else
                        _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    End If




                    _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000"))
                    _FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000"))
                    '_SalaryPayLeaveMin = CDbl(Format(CDbl(Format(_SalaryPayLeave / 8, "0.00000")) / 60, "0.00000"))
                    _SalaryPayLeaveMin = CDbl(_SalaryPayLeave / 8) / 60

                    _FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_SalaryPayOTKM + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000")) / 60, "0.00000"))

                    _FNSlaryOTPerHour = CDbl(Format((_SalaryPayOTKM + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000"))

                    If _FTShift = "" Then
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If
                    Else

                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If

                        If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _WorkDay = _WorkDay + 1
                        End If

                        If _Holiday = "" Then
                            _GFNLateNormalMinNotHoliday = _GFNLateNormalMinNotHoliday + _FNLateNormalMin
                        End If

                        _GFNLateNormalMin = _GFNLateNormalMin + _FNLateNormalMin
                        _GFNLateNormalCut = _GFNLateNormalCut + _FNLateNormalCut
                        _GFNLateOtMin = _GFNLateOtMin + _FNLateOtMin
                        _GFNLateOtCut = _GFNLateOtCut + _FNLateOtCut
                        _GFNLateMorning = _GFNLateMorning + _FNLateMorning
                        _GFNLateAfternoon = _GFNLateAfternoon + _FNLateAfternoon
                        _GFNAbsent = _GFNAbsent + _FNAbsent
                        _GFNCutAbsent = _GFNCutAbsent + _LateCutAbsent
                        _GFNTimeMin = _GFNTimeMin + _FNTimeMin
                        _GFNOT1Min = _GFNOT1Min + _FNOT1Min
                        _GFNOT1_5Min = _GFNOT1_5Min + _FNOT1_5Min
                        _GFNOT2Min = _GFNOT2Min + _FNOT2Min
                        _GFNOT3Min = _GFNOT3Min + _FNOT3Min
                        _GFNOT4Min = _GFNOT4Min + _FNOT4Min
                        _GFNLateMMin = _GFNLateMMin + _FNLateMMin
                        _GFNLateAfMin = _GFNLateAfMin + _FNLateAfMin
                        _GFNRetireOtMin = _GFNRetireOtMin + _FNRetireOtMin
                        _GFNRetireOtCut = _GFNRetireOtCut + _FNRetireOtCut
                        _GFNRetireMMin = _GFNRetireMMin + _FNRetireMMin
                        _GFNRetireAfMin = _GFNRetireAfMin + _FNRetireAfMin
                        _GFNRetireNormalCut = _GFNRetireNormalCut + _FNRetireNormalCut

                    End If

                    _TmpLeavePay = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0 : FNPayLeaveSpecialBahtMin = 0
                    _FNLeaveNotPay = 0 : FNParturitionLeaveMin = 0
                    _LeaveCode = ""
                    For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' ")
                        _LeaveCode = sR!LFTLeaveCode.ToString

                        _TmpLeavePay = Val(sR!FNTotalPayMinute.ToString)

                        Select Case sR!LFTLeaveCode.ToString.ToUpper
                            Case "97"

                            Case Else

                                _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                                _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                                _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                                If sR!FTStaCalSSO.ToString = "1" Then
                                    _GtotalleavePayCalSso = Val(sR!FNTotalPayMinute.ToString)
                                End If
                                _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)
                        End Select
                        'besy
                        ' _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        Select Case sR!LFTLeaveCode.ToString.ToUpper '""Val(sR!LeaveType)
                            Case "98"
                                _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                            Case "998"
                                _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                            Case "1"
                                FNPayLeaveBusinessBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveBusinessBahtMin = GFNPayLeaveBusinessBahtMin + FNPayLeaveBusinessBahtMin

                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                            Case "0"

                                FNPayLeaveSickBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveSickBahtMin = GFNPayLeaveSickBahtMin + FNPayLeaveSickBahtMin
                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)

                                If FNPayLeaveSickBahtMin > 0 Then
                                    _LeaveSickPay = _LeaveSickPay + 1

                                    Dim _PayPer As Double = 0
                                    Select Case _LeaveSickPay
                                        Case Is <= 30
                                            _PayPer = 100
                                        Case Is <= 90
                                            _PayPer = 60
                                        Case Is <= 180
                                            _PayPer = 0
                                    End Select

                                    If _PayPer = 0 Then
                                        FNPayLeaveSickBahtMin = 0
                                        GFNPayLeaveSickBahtMin = GFNPayLeaveSickBahtMin - FNPayLeaveSickBahtMin
                                        _GFNLeaveOther = _GFNLeaveOther - FNPayLeaveSickBahtMin
                                    End If

                                    If _DTEmpPayLeaveSick.Select("FNSalary=" & _SalaryPayLeave & " AND FNPayPer=" & _PayPer & " ").Length > 0 Then
                                        For Each Rx As DataRow In _DTEmpPayLeaveSick.Select("FNSalary=" & _SalaryPayLeave & "  AND FNPayPer=" & _PayPer & "  ")
                                            Rx!FNDay = Val(Rx!FNDay) + FNPayLeaveSickBahtMin
                                            Exit For
                                        Next
                                    Else
                                        _DTEmpPayLeaveSick.Rows.Add(_SalaryPayLeave, FNPayLeaveSickBahtMin, _PayPer)
                                    End If


                                End If
                            Case "999"
                                FNPayLeaveSpecialBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveSpecial = _GFNLeaveSpecial + FNPayLeaveSpecialBahtMin

                            Case "97"
                                ''best  แก้ไข วันลาคลอด  202211 17
                                ''FNParturitionLeaveMin = Val(sR!FNTotalPayMinute.ToString)
                                FNParturitionLeaveMin = Val(sR!FNTotalMinute.ToString)
                                GFNParturitionLeaveMin = GFNParturitionLeaveMin + FNParturitionLeaveMin

                                ' _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                            Case Else
                                _FNLeavePay = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End Select

                    Next

                    _GFNLeavePay = _GFNLeavePay + _FNLeavePay
                    _SocialBefore = 0
                    _SocialBeforeAmt = 0

                    Dim _WageAmtPerDay As Double = 0
                    Dim _WageOTAmtPerDay As Double = 0
                    Dim _TimeOTMdr As Integer = 0

                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    Else
                        _WageAmtPerDay = CDbl(Format((_FNTimeMin) * _FNSlaryPerMin, "0.000"))
                        _FNEmpBaht = _FNEmpBaht + _WageAmtPerDay
                    End If

                    _nBahtOt1 = _nBahtOt1 + CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000"))


                    If FTHldType = 1 And _FNOT3Min > 0 Then
                        _GAmtPlus = _GAmtPlus + _AmtPlus
                    End If

                    _nBahtOt15 = _nBahtOt15 + CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.000"))

                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.000"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.000"))

                    _LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.000"))

                    Dim _TmpFNLapaidAmt As Double = CDbl(Format(_TmpLeavePay * _SalaryPayLeaveMin, "0.000"))
                    Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _SalaryPayLeaveMin, "0.000"))

                    _Lapaid = _Lapaid + _TmpLapaidAmt
                    _GtotalleavePayCalSsoAmt = _GtotalleavePayCalSsoAmt + CDbl(Format(_GtotalleavePayCalSso * _FNSlaryPerMin, "0.000"))  'เงินลาจ่ายที่นำไปคิดประกันสังคม

                    If _LeaveCode <> "" And _FNLeaveVacation > 0 Then
                        ''พักร้อน
                        Dim _MoneyRetVacationPerDay As Double

                        If FTAddAvg24Period = "1" Then

                            _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay)
                        Else
                            _MoneyRetVacationPerDay = _FNSlaryPerDay
                        End If
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * (_MoneyRetVacationPerDay / 480), "0.000"))
                        _FCDeductSourceVacationBaht = _FCDeductSourceVacationBaht + +CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.000"))
                    Else
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.000"))
                        _FCDeductSourceVacationBaht = _FCDeductSourceVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.000"))
                    End If

                    If _FTStatePayHoliday <> "1" Then
                        _oHoliday = 0
                    Else

                        If (_FNLeaveNotPay <= 0) Then
                            If _TmpFNLapaidAmt <= 0 Then
                                _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.000"))
                            Else
                                _TotalHoliDay = _TotalHoliDay - _oHoliday
                                _oHoliday = 0
                            End If
                        Else

                            _TotalHoliDay = _TotalHoliDay - _oHoliday
                            _oHoliday = 0
                        End If

                    End If


                    _FNSlaryPerDayNormal = CDbl(Format(_FNSlaryPerDay, "0.00000"))
                    If _RateShipftPerDay > 1 And _FNTimeMin > 0 Then
                        _FNSlaryPerDay = _FNSlaryPerDay * _RateShipftPerDay
                        '_FNSlaryPerDayShiftNinght = _FNSlaryPerDay * _RateShipftPerDay
                    End If
                    _FNSlaryPerDay = CDbl(Format(_FNSlaryPerDay, "0.00000"))
                    _Day = 1

                    If _DTEmpWorkDay.Select("FNSalary=" & _FNSlaryPerDay & "").Length > 0 Then
                        For Each Rx As DataRow In _DTEmpWorkDay.Select("FNSalary=" & _FNSlaryPerDay & " and FNShiftNo=" & _StateShift)
                            Rx!FNTotalDay = Val(Rx!FNTotalDay) + _Day
                            Rx!FNDay = Val(Rx!FNDay) + _FNTimeMin
                            Rx!FNOT1 = Val(Rx!FNOT1) + _FNOT1Min
                            Rx!FNOT15 = Val(Rx!FNOT15) + _FNOT1_5Min
                            Rx!FNOT2 = Val(Rx!FNOT2) + _FNOT2Min
                            Rx!FNOT3 = Val(Rx!FNOT3) + _FNOT3Min
                            Rx!FNOT4 = Val(Rx!FNOT4) + _FNOT4Min
                            Rx!FNHoloday = Val(Rx!FNHoloday) + (_oHoliday)
                            Rx!FNLate = Val(Rx!FNLate) + _FNLateNormalCut
                            Rx!FNAbsent = Val(Rx!FNAbsent) + _FNAbsent
                            Rx!FNLateCutAmtAbsent = Val(Rx!FNLateCutAmtAbsent) + _LateCutAbsent
                            Rx!FNLeavePay = Val(Rx!FNLeavePay) + _FNLeavePay
                            Rx!FNLeaveNotPay = Val(Rx!FNLeaveNotPay) + (_FNLeaveNotPay)
                            Rx!FNBusiness = Val(Rx!FNBusiness) + FNPayLeaveBusinessBahtMin
                            Rx!FNSpecial = Val(Rx!FNSpecial) + FNPayLeaveSpecialBahtMin
                            Rx!FNParturition = Val(Rx!FNParturition) + FNParturitionLeaveMin
                            Rx!FNVacation = Val(Rx!FNVacation) + _FNLeaveVacation
                            Rx!FNShiftNo = _StateShift
                            Rx!FNSlaryOTPerMin = _FNSlaryOTPerMin
                            Rx!FNSlaryNormal = _FNSlaryPerDayNormal
                            Exit For
                        Next
                    Else
                        _DTEmpWorkDay.Rows.Add(_FNSlaryPerDay, _Day, _FNTimeMin, _FNOT1Min, _FNOT1_5Min,
                                               _FNOT2Min, _FNOT3Min, _FNOT4Min, (_oHoliday),
                                               _FNLateNormalCut, _FNAbsent, _LateCutAbsent, _FNLeavePay,
                                               _FNLeaveNotPay, FNPayLeaveBusinessBahtMin, FNPayLeaveSpecialBahtMin, FNParturitionLeaveMin, _FNLeaveVacation, _StateShift, _FNSlaryOTPerMin, _FNSlaryPerDayNormal)
                    End If

                    _FTSatrtCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTSatrtCalculateDate, 1))

                Loop

                _FNEmpBaht = 0
                _FNEmpBaht = 0
                _nBahtOt1 = 0
                _nBahtOt15 = 0
                _nBahtOt2 = 0
                _nBahtOt3 = 0
                _nBahtOt4 = 0
                _nBahtAbsent = 0
                _LateCutAmt = 0
                _LateCutAmtAbsent = 0
                _HBaht = 0
                _LaNotpaid = 0
                _Lapaid = 0
                FNPayLeaveBusinessBaht = 0 : FNPayLeaveSickBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0
                _FCPayVacationBaht = 0
                _FNSlaryOTPerMin = 0
                Dim _TotalxDay As Integer = 0

                Dim _FNEmpBahtShiftDiff As Double = 0

                Dim FullPreroid As String = ""
                If (_FDDateEnd = "" Or _EndDate < _FDDateEnd) And _FDDateStart <= _StartDate Then ''_FTEndCalculateDate
                    FullPreroid = "Y"
                End If

                Dim _FNDay As Integer = 0

                For Each Rx As DataRow In _DTEmpWorkDay.Rows 'คิดค่าแรงจากวันทำงาน

                    _FNDay = _FNDay + Val(Rx!FNDay)

                    If _DTEmpWorkDay.Rows.Count > 1 Then


                        If Rx!FNShiftNo = 1 And Val(Rx!FNDay) > 0 Then
                            'หาเงินส่วนต่าง ค่าแรงกะกลางคืน 
                            _FNEmpBahtShiftDiff = _FNEmpBahtShiftDiff + (CDbl(Format(CDbl(Rx!FNSalary) * (Rx!FNDay / 480), "0.00000")) - CDbl(Format(CDbl(Rx!FNSlaryNormal) * (Rx!FNDay / 480), "0.00000")))

                            'ElseIf Rx!FNDay > 0 And Rx!FNDay < 12 Then
                            '    _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (Rx!FNDay / 480), "0.00000"))
                        ElseIf FullPreroid = "Y" Then
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_FNSlaryPerMonth / 2, "0.000"))
                        ElseIf _FNDay < 6240 Then
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (_FNDay / 480), "0.00000"))
                        Else
                            '_FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSalary) * Rx!FNTotalDay, "0.00000"))

                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_FNSlaryPerMonth / 2, "0.000"))
                        End If


                    Else

                        If _FNDay > 0 And _FNDay < 5760 And Rx!FNParturition > 1 Then ''หักเงินเดือนปกติของวันที่ลาคลอด
                            _FNEmpBaht = _FNEmpBaht + (CDbl(Format(_FNSlaryPerMonth / 2, "0.000")) - CDbl(Format(CDbl(Rx!FNSlaryNormal) * (Rx!FNParturition / 480), "0.00000")))
                        ElseIf FullPreroid = "Y" And _FNDay > 0 Then
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_FNSlaryPerMonth / 2, "0.000"))
                        ElseIf FullPreroid = "Y" And _FNDay = 0 Then
                            _FNEmpBaht = _FNEmpBaht + 0
                        ElseIf (_FDDateEnd <> "" And _FDDateEnd <= _FTEndCalculateDate) Or _FDDateStart > _StartDate Then ''ลาออกระหว่างงวด ''เริ่มงานระหว่างงวด
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (_FNDay / 480), "0.00000"))
                        ElseIf _FNDay < 6240 Then
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (_FNDay / 480), "0.00000"))
                        Else
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_FNSlaryPerMonth / 2, "0.000"))

                        End If

                    End If



                    '' คำนวนรายเดือน ฐานค่าแรงต่อวันปกติ
                    _FNSlaryPerMin = CDbl(Format(CDbl(Rx!FNSlaryNormal) / 480, "0.00000"))
                    _FNSlaryPerDay = CDbl(Format(CDbl(Rx!FNSlaryNormal), "0.00000"))
                    _FNSlaryOTPerMin = Double.Parse("0" & Rx!FNSlaryOTPerMin)

                    _TotalxDay = 0




                    If Double.Parse(Rx!FNShiftNo.ToString) = 1 Then
                        _Qry = " SELECT FTCfgOTCode,Isnull(FCCfgOTNightValue,0) as  FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus   "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    Else
                        _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    End If


                    _nBahtOt1 = _nBahtOt1 + CDbl(Format(Val(Rx!FNOT1) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000"))
                    _nBahtOt15 = _nBahtOt15 + CDbl(Format(Val(Rx!FNOT15) * ((_FNSlaryOTPerMin) * _RateOT15), "0.000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format(Val(Rx!FNOT2) * ((_FNSlaryOTPerMin) * _RateOT2), "0.000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format(Val(Rx!FNOT3) * ((_FNSlaryOTPerMin) * _RateOT3), "0.000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format(Val(Rx!FNOT4) * ((_FNSlaryOTPerMin) * _RateOT4), "0.000"))
                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(Val(Rx!FNAbsent) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((Val(Rx!FNLate)) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((Val(Rx!FNLateCutAmtAbsent)) * _FNSlaryPerMin, "0.000"))
                    _HBaht = _HBaht + CDbl(Format(Val(Rx!FNHoloday) * CDbl(Rx!FNSalary), "0.000"))
                    _LaNotpaid = _LaNotpaid + CDbl(Format(Val(Rx!FNLeaveNotPay) * _FNSlaryPerMin, "0.000"))
                    _Lapaid = _Lapaid + CDbl(Format(Val(Rx!FNLeavePay) * _SalaryPayLeaveMin, "0.000"))
                    FNPayLeaveBusinessBaht = FNPayLeaveBusinessBaht + CDbl(Format(Val(Rx!FNBusiness) * _FNSlaryPerMin, "0.000"))

                    ' FNParturitionLeave = FNParturitionLeave + CDbl(Format(Val(Rx!FNParturition) * _FNSlaryPerMin, "0.000"))
                    ''พักร้อน
                    Dim _MoneyRetVacationPerDay As Double = 0
                    If FTAddAvg24Period = "1" Then
                        _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                    Else
                        _MoneyRetVacationPerDay = _FNSlaryPerDay

                    End If

                    _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(Val(Rx!FNVacation) * (_MoneyRetVacationPerDay / 480), "0.000"))


                    FNPayLeaveSpecialBaht = FNPayLeaveSpecialBaht + CDbl(Format(Val(Rx!FNSpecial) * (_MoneyRetVacationPerDay / 480), "0.000"))
                    _FCDeductSourceVacationBaht = _FCDeductSourceVacationBaht + CDbl(Format(Val(Rx!FNSpecial) * _FNSlaryPerMin, "0.000"))
                    GFNPayLeaveSpecialBahtMin = Val(Rx!FNSpecial)
                    FNVacationRetMin = Val(Rx!FNVacation)

                Next

                'ค่าแรงรายเดือน + ค่าแรงกะกลางคือ 130%
                _FNEmpBaht = _FNEmpBaht + _FNEmpBahtShiftDiff



                FNPayLeaveSickBaht = 0
                For Each Rx As DataRow In _DTEmpPayLeaveSick.Rows
                    _FNSlaryPerMin = (CDbl(CDbl(Rx!FNSalary) / 480) * CDbl(Rx!FNPayPer)) / 100.0
                    FNPayLeaveSickBaht = FNPayLeaveSickBaht + CDbl(Format(Val(Rx!FNDay) * _FNSlaryPerMin, "0.000"))
                Next

                _FNNetOTMealAmtUS = Format(_FNNetOTMealAmt / _FNExchangeRate, "0.000")

                If _FDDateEnd <> "" And _FDDateEnd <= _TmpFDDateEndP Then
                    'ลาออกในงวดแรก อายุงาน มากกว่า 13 วัน  จ่ายค่าเดินทาง & ค่าสุขภาพ เต็มเดือน

                    If _WorkAge >= 1 Or _WorkingDayN > 13 Then
                        If Val(_PayTerm) Mod 2 = 1 Then
                            _FNTransportAmt = _FNTransportAmt + _FNTransportAmt
                            _FNHealtCareAmt = _FNHealtCareAmt + _FNHealtCareAmt
                        End If
                    End If
                End If


                If _FTEmpState = "2" Or _FTEmpState = "3" Or (_FDDateEnd <= _EndDate And _FDDateEnd <> "") Then

                    FNPayLeaveBusinessBahtMin = 0 : FNPayLeaveSickBahtMin = 0 : FNParturitionLeaveMin = 0
                    GFNPayLeaveBusinessBahtMin = 0 : GFNPayLeaveSickBahtMin = 0 : GFNParturitionLeaveMin = 0
                    FNPayLeaveBusinessBaht = 0 : FNParturitionLeave = 0
                    'FNPayLeaveSickBaht = 0 : ไม่มี เคสคำนวณ ในกรณีลาออก ใช้จากคำนวณปกติ
                    ': FNPayLeaveSpecialBahtMin = 0 : FNPayLeaveSpecialBaht = 0 
                    If _dttran.Select("FTStateAccept<>'1' AND FTWeekly <>'1' ").Length > 0 Or _dttran.Rows.Count <= 0 Then
                        Return False
                    End If



                    FNParturitionLeave = 0
                    GFNParturitionLeaveMin = 0
                    Dim _DeductAttandanceAmt As Double = 0
                    Call CalculateParturition(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), FNParturitionLeave, GFNParturitionLeaveMin, _DeductAttandanceAmt, _WorkAge, _WorkAgeParturition, FNParturitionLeaveReCalTax)

                    '_FCSalary = _MSlary
                    ''อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                    'Select Case FNStateSalaryType
                    '    Case 0 'ต่อเดือน
                    '        _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.000"))
                    '        _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                    '    Case 1 'ต่อวัน
                    '        _FNSlaryPerMonth = CDbl(Format((_FCSalary * CountDayPerMonth), "0.000"))
                    '        _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.000"))
                    'End Select
                    ''เพิ่มค่าแรง กัมพูชา 20161206
                    '_FNSlaryPerMonth = _FNSlaryPerMonth
                    '_FNSlaryPerDay = _FNSlaryPerDay
                    ''อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ

                    _Gtotalleave = 0
                    _GtotalleavePay = 0
                    _GtotalleaveNotPay = 0
                    _GFNLeaveOther = 0
                    _GFNLeavePay = 0
                    _GtotalleavePayCalSso = 0
                    '_LaNotpaid = 0

                    Dim _NewSlary As String = ""

                    For Each sR As DataRow In _dtLeave.Rows

                        _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                        _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)

                        If sR!LFTLeaveCode.ToString <> "97" Then
                            _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                        End If


                        If sR!FTStaCalSSO.ToString = "1" Then
                            _GtotalleavePayCalSso = Val(sR!FNTotalPayMinute.ToString)
                        End If

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                        Else
                            _GFNLeavePay = _GFNLeavePay + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End If

                    Next

                    _LaNotpaid = CDbl(Format(_GtotalleaveNotPay * _FNSlaryPerMin, "0.000"))

                    'If _LaNotpaid > _FNSlaryPerMonth Then
                    '    _LaNotpaid = _FNSlaryPerMonth
                    'End If

                    _WorkingDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_DateEndOfMonth))) + 1



                    '' custom เงินเดือนคนงาออก ไม่ ตรง 20180601
                    'If _FDDateStart <= _StartDate And (_FDDateEnd >= _DateEndOfMonth Or _FDDateEnd = "") Then

                    '    Dim _SmDate As String = _DateStartOfMonth
                    '    Dim _EmDate As String = _DateEndOfMonth
                    '    Dim _dtSalary As New DataTable

                    '    _dtSalary.Columns.Add("FNCurrentSlary", GetType(Double))
                    '    _dtSalary.Columns.Add("FNDay", GetType(Integer))

                    '    Do While _SmDate <= _EmDate

                    '        _Qry = "  SELECT      TOP 1   FNCurrentSlary  AS AMT"
                    '        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK)"
                    '        _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_SmDate) & "') "
                    '        _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '        _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    '        _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    '        _FCSalary = _FNSlaryPerMonth
                    '        If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    '        If _dtSalary.Select("FNCurrentSlary=" & _FCSalary & "").Length > 0 Then

                    '            For Each Rxx As DataRow In _dtSalary.Select("FNCurrentSlary=" & _FCSalary & "")
                    '                Rxx!FNDay = Integer.Parse(Val(Rxx!FNDay)) + 1
                    '                Exit For
                    '            Next

                    '        Else
                    '            _dtSalary.Rows.Add(_FCSalary, 1)
                    '        End If

                    '        _SmDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_SmDate, 1))
                    '    Loop

                    '    Dim _TotalDay As Integer = 0
                    '    _FNEmpBaht = 0
                    '    If _dtSalary.Select("FNCurrentSlary<>" & _FNSlaryPerMonth & "").Length > 0 Then
                    '        For Each Rxx As DataRow In _dtSalary.Select("FNCurrentSlary<>" & _FNSlaryPerMonth & "")
                    '            _TotalDay = _TotalDay + Integer.Parse(Val(Rxx!FNDay))

                    '            _FNEmpBaht = _FNEmpBaht + Double.Parse(Format((Integer.Parse(Val(Rxx!FNDay)) * Double.Parse(Val(Rxx!FNCurrentSlary))), "0.000"))
                    '        Next

                    '        _FNEmpBaht = _FNEmpBaht + (_FNSlaryPerMonth - CDbl(Format(_TotalDay * _FNSlaryPerDay, "0.000")))

                    '    Else
                    '        _FNEmpBaht = _FNSlaryPerMonth
                    '    End If

                    '    _dtSalary.Dispose()

                    'Else

                    '    Dim _TotalDay As Integer = 0
                    '    If _FDDateStart > _StartDate And _FDDateEnd < _EndDate And _FDDateEnd <> "" Then
                    '        _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_FDDateStart), CDate(_FDDateEnd))) + 1

                    '    ElseIf _FDDateStart > _StartDate Then
                    '        _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_FDDateStart)))
                    '    ElseIf _FDDateEnd < _EndDate And _FDDateEnd <> "" Then
                    '        If _FDDateEnd < _DateStartOfMonth Then
                    '            _TotalDay = _WorkingDay
                    '        Else
                    '            _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_FDDateEnd), CDate(_DateEndOfMonth))) + 1
                    '        End If
                    '    End If

                    '    If _TotalDay >= _WorkingDay Then
                    '        _FNEmpBaht = 0
                    '        _WorkingDay = 0
                    '    Else
                    '        '      _FNEmpBaht = _FNSlaryPerMonth - CDbl(Format(_TotalDay * _FNSlaryPerDay, "0.000"))
                    '        If _WorkingDay > 30 Then _WorkingDay = 30
                    '        _WorkingDay = _WorkingDay - _TotalDay
                    '    End If

                    'End If

                    If _WorkingDay > 30 Then _WorkingDay = 30

                    _WorkingDay = CDbl(Format(((_WorkingDay * 480) - (_Gtotalleave)) / 480, "0.000"))
                    _WorkingDay = _WorkingDay - (_GFNAbsent / 480)
                    If _WorkingDay < 0 Then
                        _WorkingDay = 0
                    End If

                Else
                    _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.000"))
                End If

                _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.000"))  '2018/03/02 ยกมา คำนวณคนลาออก ไม่ตรง

                '-----------calculate Other Add For KKN ------------------ 
                Dim _ChkLeave As Integer = 0
                For Each sR As DataRow In _dtLeave.Select("LFTLeaveCode='0' OR LFTLeaveCode='1' OR LFTLeaveCode='2' OR LFTLeaveCode='3' ")
                    _ChkLeave = _ChkLeave + Val(sR!FNTotalMinute.ToString)
                Next
                '_DateStartOfMonth = _StartDate  'วันแรกของเดือน
                '_DateEndOfMonth = _EndDate 'วันแของเดือน
                _FNNetAttandanceAmt = 0
                '  If (_FTEmpState = "2" Or (_FTEmpState <> "2" And _StartDate <= Left(_StartDate, 8) & "24" And _EndDate >= Left(_StartDate, 8) & "24")) And _FNAttandanceAmt > 0 Then
                If _FNAttandanceAmt > 0 Then

                    Dim _FNAttandanceAmtPerDay As Double = Double.Parse(Format(_FNAttandanceAmt / 13, "0.000"))
                    Dim _FNLateNormalMinBF As Integer = 0
                    Dim _leaaveSpecial As Integer = 0
                    Dim _leaaveOther As Integer = 0
                    Dim _leaaveSickCard As Integer = 0
                    Dim _leaaveOSickNoCard As Integer = 0
                    Dim _leaaveNotPayAttdance As Integer = 0
                    Dim _StateNotPayAttdance As Boolean = True

                    'For Each Rxm As DataRow In _dtLeave.Select("LFTLeaveCode='9' ")
                    '    _leaaveSpecial = _leaaveSpecial + Val(Rxm!FNTotalMinute.ToString)
                    'Next

                    'For Each Rxm As DataRow In _dtLeave.Select("LFTLeaveCode<>'0'   AND LFTLeaveCode<>'98' AND LFTLeaveCode<>'9' ")
                    '    _leaaveOther = _leaaveOther + Val(Rxm!FNTotalMinute.ToString)
                    'Next

                    'For Each Rxm As DataRow In _dtLeave.Select("LFTLeaveCode='0'   AND FTStateMedicalCertificate<>'1'")
                    '    _leaaveOSickNoCard = _leaaveOSickNoCard + Val(Rxm!FNTotalMinute.ToString)
                    'Next

                    'For Each Rxm As DataRow In _dtLeave.Select("LFTLeaveCode='0'   AND FTStateMedicalCertificate='1'")
                    '    _leaaveSickCard = _leaaveSickCard + Val(Rxm!FNTotalMinute.ToString)
                    'Next

                    For Each Rxm As DataRow In _dtLeave.Select("FNTotalNotPayMinute>0")
                        _leaaveNotPayAttdance = _leaaveNotPayAttdance + 480 ' Val(Rxm!FNTotalNotPayMinute.ToString)
                    Next


                    For Each Rzm As DataRow In _dtLeave.Select("FNTotalPayMinute > 0 ")
                        If Rzm!LFTLeaveCode.ToString = "97" And Rzm!FNTotalPayMinute.ToString = "480.00" Then 'Or Rzm!LFTLeaveCode.ToString = "98" Or Rzm!LFTLeaveCode.ToString = "1"
                            '(Rzm!LFTLeaveCode.ToString = "0" And Rzm!FTStateMedicalCertificate.ToString = "1") Or    'ลาป่วยมีใบรับรองแพทย์ จ่ายเต็มวัน  / ก่อนหน้าไม่จ่ายวันที่ลา 20181206
                            _leaaveNotPayAttdance = _leaaveNotPayAttdance + 480

                        Else
                            If Rzm!LFTLeaveCode.ToString = "0" And Rzm!FTStateMedicalCertificate.ToString = "0" Then
                                _StateNotPayAttdance = False
                            End If
                        End If
                    Next

                    For Each Rzm As DataRow In _dtLeave.Rows   ''พักงาน ไม่ได้รับเบี้ยขยันทั้งงวด
                        If Rzm!LFTLeaveCode.ToString = "99" Then
                            _StateNotPayAttdance = False
                        End If
                    Next

                    ''ลาคลอดอายุงานมากว่า 1 ปี ไม่ได้ค่าสุขภาพใงวดที่ไม่มีวันทำงาน
                    'If _WorkAgeParturition > 12 Then
                    '    If _dtLeave.Select("FNTotalPayMinute > 0  and LFTLeaveCode ='97' ").Length > 0 Then
                    '        If _dttran.Select("FNTime > 0  OR FNAbsent > 0 ").Length <= 0 Then
                    '            _FNTransportAmt = 0
                    '            _FNHealtCareAmt = 0
                    '        End If
                    '    End If
                    'End If

                    ''ลาคลอดอายุงานมากว่า 1 ปี ไม่ได้ค่าสุขภาพใงวดที่ไม่มีวันทำงาน
                    If _WorkAgeParturition >= 12 Then
                        If _dtLeave.Select("FNTotalPayMinute > 0  and LFTLeaveCode ='97' ").Length > 0 Then
                            If _dttran.Select("FNTime > 0  OR FNAbsent > 0 ").Length <= 0 Then
                                _FNTransportAmt = 0
                                _FNHealtCareAmt = 0
                            End If
                        End If
                        If _dtLeave.Select("FNTotalNotPayMinute > 0  and LFTLeaveCode ='97' ").Length > 0 Then
                            If _dttran.Select("FNTime > 0  OR FNAbsent > 0 ").Length <= 0 Then
                                _FNAttandanceAmt = 0
                                _FNTransportAmt = 0
                                _FNHealtCareAmt = 0
                            End If
                        End If
                    Else

                    End If


                    If _GFNAbsent <= 0 And (_GFNLateNormalMinNotHoliday + _FNLateNormalMinBF) <= 0 And _leaaveOSickNoCard <= 0 And _leaaveOther <= 0 Then

                        Dim _FNWorkingDayBF As Integer = 0
                        '_Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNWorkingDay,0)) AS FNWorkingDay"
                        '_Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                        '_Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        '_Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                        '_Qry &= vbCrLf & "AND P.FNHSysEmpID ='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                        '_Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                        '_Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                        '_Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                        '_Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                        '_Qry &= vbCrLf & "  Select FNMonth"
                        '_Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                        '_Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                        '_Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        '_Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                        '_Qry &= vbCrLf & "  )  "

                        '_FNWorkingDayBF = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")) ' Integer.Parse(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")))

                        _FNNetAttandanceAmt = _FNAttandanceAmt
                        'If _FDDateEnd <> "" And _FDDateEnd > _StartDate And _FDDateEnd <= _EndDate Then
                        'If _FDDateEnd <> "" And _FDDateEnd > _DateStartOfMonth And _FDDateEnd <= _DateEndOfMonth Then
                        '    'Modify 20150218 Resign Not Pay Attance Bonus
                        '    'If (_WorkingDay + _FNWorkingDayBF) < 13 And _EndDate <> "" Then
                        '    '    _FNNetAttandanceAmt = Format((_FNNetAttandanceAmt / 13) * (_WorkingDay + _FNWorkingDayBF), "0.00")
                        '    'End If
                        '    _FNNetAttandanceAmt = 0
                        '    'ElseIf _FDDateStart > _StartDate And _FDDateStart <= _EndDate Then
                        'ElseIf _FDDateStart > _DateStartOfMonth And _FDDateStart <= _DateEndOfMonth Then
                        '    If (_WorkingDay + _FNWorkingDayBF) < 13 Then
                        '        _FNNetAttandanceAmt = Format((_FNNetAttandanceAmt / 13) * (_WorkingDay + _FNWorkingDayBF), "0.00")
                        '    End If
                        'End If
                        If _FDDateEnd <> "" And _FDDateEnd > _StartDate And _FDDateEnd <= _EndDate Then
                            'Modify 20150218 Resign Not Pay Attance Bonus
                            'If (_WorkingDay + _FNWorkingDayBF) < 13 And _EndDate <> "" Then
                            '    _FNNetAttandanceAmt = Format((_FNNetAttandanceAmt / 13) * (_WorkingDay + _FNWorkingDayBF), "0.00")
                            'End If
                            _FNNetAttandanceAmt = 0
                            'ElseIf _FDDateStart > _StartDate And _FDDateStart <= _EndDate Then
                        ElseIf _FDDateStart > _StartDate And _FDDateStart <= _EndDate Then
                            ' If (_WorkingDay ) < 13 Then
                            _FNNetAttandanceAmt = Format((_FNNetAttandanceAmt / 13) * (_WorkingDay + _TotalHoliDay), "0.000")
                            'End If
                        End If

                        If _leaaveNotPayAttdance > 0 And _FNNetAttandanceAmt > 0 Then
                            Dim _DeductAttAmt As Double = Double.Parse(Format(((_leaaveNotPayAttdance / 480) * _FNAttandanceAmtPerDay), "0.00"))
                            _FNNetAttandanceAmt = _FNNetAttandanceAmt - _DeductAttAmt

                            If _FNNetAttandanceAmt < 0 Then
                                _FNNetAttandanceAmt = 0
                            End If

                        End If
                        If Not (_StateNotPayAttdance) Then
                            _FNNetAttandanceAmt = 0
                        End If

                        'If _leaaveSickCard > 0 And _FNNetAttandanceAmt > 0 Then

                        '    Dim _Disamt As Double = 0

                        '    _Disamt = Format((_FNNetAttandanceAmt / (13 * 480)) * (_leaaveSickCard), "0.00")
                        '    _FNNetAttandanceAmt = _FNNetAttandanceAmt - _Disamt

                        'End If
                    End If
                End If

                '-----------calculate Other Add For KKN ------------------
                _WorkingDay = _WorkingDay + _DayAdjAdd

                _GFNTimeMin = _GFNTimeMin + (_DayAdjAdd * 480)
                _FNEmpBaht = _FNEmpBaht + _WageAdjAdd
                _nBahtOt1 = CDbl(Format(_nBahtOt1, "0.000"))
                _nBahtOt15 = CDbl(Format(_nBahtOt15, "0.000"))
                _nBahtOt2 = CDbl(Format(_nBahtOt2, "0.000"))
                _nBahtOt3 = CDbl(Format(_nBahtOt3, "0.000")) + _GAmtPlus  ' ได้เงินพิเศษช่วงเทศกาลเพิ่ม
                _nBahtOt4 = CDbl(Format(_nBahtOt4, "0.000"))

                Dim _TmpPe As String = ""

                If _FTEmpState = "2" Then
                Else
                    _TmpPe = IIf(Val(_PayTerm) - 1 Mod 2 = 1, (Val(_PayTerm) - 1).ToString("00"), "")
                End If

                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน ประเภทจ่ายเป็นเดือน ของงวดก่อนหน้า ---------------------
                'If _FTStatePayHoliday <> "1" Then '--------- รายเดือนไม่ได้ค่าจ้างวันหยุด---------------
                'Else
                If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='1'  ").Length > 0 Then

                    Dim _BFSDate As String = ""
                    Dim _BFEDate As String = ""

                    _Qry = " SELECT TOP 1  FDCalDateBegin, FDCalDateEnd"
                    _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & " WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & " AND FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & " AND FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND FTPayMonth IN (   "
                    _Qry &= vbCrLf & "  Select FTPayMonth"
                    _Qry &= vbCrLf & "    FROM THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "   AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & " )  "

                    _dttemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                    For Each Row As DataRow In _dttemp.Rows
                        _BFSDate = Row!FDCalDateBegin.ToString
                        _BFEDate = Row!FDCalDateEnd.ToString
                    Next

                    If _BFSDate <> "" And _BFEDate <> "" Then

                        _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                        _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                        _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                        _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                        _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                        _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                        _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                        _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                        _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                        _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0)  + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                        _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                        _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                        _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                        _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                        _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                        _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                        _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                        _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                        _Qry &= vbCrLf & ",P.FTOverClock,P.FTWeekDay"
                        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN "
                        _Qry &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                        _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                        _Qry &= vbCrLf & " 	And T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                        _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                        _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Do While _BFSDate <= _BFEDate
                            _FTShift = ""
                            Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                            Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                            For Each R2 In _R

                                _FTShift = R2!FTShift.ToString
                                _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)

                                _InOT = R2!FTIn3.ToString
                                _OutOT = R2!FTOut3.ToString

                                _Over = R2!FTOverClock.ToString

                                If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    If _FTShift <> "" Then

                                        _SPDateType = 0

                                        _Holiday = ""

                                        _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                        _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                        _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'  AND FTStateActive='1'  "
                                        _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                        If _Holiday <> "" Then _SPDateType = 2

                                        Dim _StateLeaveOther As Boolean = False
                                        Dim _StateLeavacation As Boolean = False


                                        Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                        Dim _SumLeave As Integer = 0

                                        For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                            _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                            If Val(sR!LeaveType) = 1 Then
                                                _StateLeavacation = True
                                            Else
                                                _StateLeaveOther = True
                                            End If

                                            If Val(sR!LeaveType) = 2 Then
                                                _StateFTStaMaternityleaveNotpay = True
                                            End If

                                        Next

                                        For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='1' ")
                                            Dim _StatePass As Boolean = True

                                            If _OutOT <> "" Then
                                                Beep()
                                            End If

                                            If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                            If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                            If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                            If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                            If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                            If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                            If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                            End If

                                            If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                            If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                            If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                If _STime.Length = _ETime.Length Then
                                                    If IsDate(_STime) And IsDate(_ETime) Then
                                                        If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If
                                                Else
                                                    _StatePass = False
                                                End If

                                            End If

                                            If _StatePass Then
                                                _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                                    _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                                Else
                                                    For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                        xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                    Next
                                                End If

                                            End If
                                        Next
                                    End If
                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                                End If
                            Next

                            _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                        Loop
                    End If
                End If
                ' End If
                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------


                '-------- รายได้อื่นๆจ่ายงวดกลางเดือน--------------------
                If _FTEmpState <> "2" And Val(_PayTerm) Mod 2 = 1 Then
                    If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='2'  ").Length > 0 Then

                        Dim _BFSDate As String = ""
                        Dim _BFEDate As String = ""

                        _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                        _BFEDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_BFSDate, 8) & "01", 1), -1)) 'วันสุดท้ายของเดือน

                        If _BFSDate <> "" And _BFEDate <> "" Then

                            _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                            _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                            _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                            _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                            _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                            _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                            _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                            _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                            _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                            _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                            _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                            _Qry &= vbCrLf & " ,P.FTOverClock,P.FTWeekDay"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                            _Qry &= vbCrLf & "    WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                            _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                            Do While _BFSDate <= _BFEDate
                                _FTShift = ""
                                Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                                Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                For Each R2 In _R

                                    _FTShift = R2!FTShift.ToString
                                    _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                    _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                    _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                    _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                    _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                    _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                    _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                    _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                    _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                    _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                    _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                    _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                    _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                    _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                    _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                    _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                    _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                                    _InOT = R2!FTIn3.ToString
                                    _OutOT = R2!FTOut3.ToString
                                    _Over = R2!FTOverClock.ToString

                                    If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                        If _FTShift <> "" Then

                                            _SPDateType = 0

                                            _Holiday = ""

                                            _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                            _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'  AND FTStateActive='1' "
                                            _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                            If _Holiday <> "" Then _SPDateType = 2

                                            Dim _StateLeaveOther As Boolean = False
                                            Dim _StateLeavacation As Boolean = False


                                            Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                            Dim _SumLeave As Integer = 0

                                            For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                                _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                                If Val(sR!LeaveType) = 1 Then
                                                    _StateLeavacation = True
                                                Else
                                                    _StateLeaveOther = True
                                                End If

                                                If Val(sR!LeaveType) = 2 Then
                                                    _StateFTStaMaternityleaveNotpay = True
                                                End If

                                            Next

                                            For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='2' ")
                                                Dim _StatePass As Boolean = True

                                                If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                                If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                                If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                                If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                                If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                                If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)

                                                If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                    _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                                End If

                                                If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                                If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                                If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                    Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                    Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                    If _STime.Length = _ETime.Length Then
                                                        If IsDate(_STime) And IsDate(_ETime) Then
                                                            If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                                _StatePass = False
                                                            End If
                                                        Else
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If

                                                End If

                                                If _StatePass Then
                                                    _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                    If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                    If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                    If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                                        _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                                    Else
                                                        For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                            xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                        Next
                                                    End If

                                                End If
                                            Next
                                        End If
                                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    End If

                                Next

                                _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                            Loop
                        End If
                    End If
                End If
                '-------------------------------------------------------------------------------------------
                If _FTEmpState = "2" And Val(_PayTerm) Mod 2 = 0 Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1'")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                            Else
                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next

                ElseIf _FDDateEnd <> "" And _FDDateEnd < _EndDate Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0' and FTFinCode='013' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay)
                                Next

                            End If
                        End If
                    Next
                ElseIf _FDDateEnd = "" Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0' and FTFinCode='013' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Double.Parse(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Double.Parse(R2!FCFinAmt.ToString))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Double.Parse(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next
                End If

                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0'  and FTFinCode <> '013' ")
                    Dim _StatePass As Boolean = True

                    If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                    If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                    If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                    If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                    If _StatePass Then

                        _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                        If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                        If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                        If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                            _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                        Else

                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                            Next

                        End If
                    End If
                Next

                For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTFinType='2'")

                    _FCDeduct = _FCDeduct + Val(R2!FCFinAmt.ToString)


                Next
                '---------รายได้รายหัก อื่นๆ-------------------------

                '------------------- สิ้นสุดการคำนวณรายวัน
                _FTWorkmenAmtBefore = 0
                _FTTotalCalWorkmenBefore = 0

                _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FCSocial"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocial,0)) AS FCSocialAmt"
                _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                _Qry &= vbCrLf & "  Select FNMonth"
                _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                _Qry &= vbCrLf & "  )  "

                Dim _DtSso As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                If _DtSso.Rows.Count > 0 Then
                    _SocialBefore = Val(_DtSso.Rows(0)!FCSocial.ToString)
                    _SocialBeforeAmt = Val(_DtSso.Rows(0)!FCSocialAmt.ToString)
                End If

                If _FTEmpState = "2" Or _FTEmpState = "3" Then

                    If (_FDDateEnd <> "" And _FDDateEnd <= _FTEndCalculateDate) Or _FDDateStart > _StartDate Then ''ลาออกระหว่างงวด ''เริ่มงานระหว่างงวด 
                        ''ค่าแรงเแพราะวันทำงานจริง
                    Else
                        If FTStaDeductAbsent = 0 Then

                            If FullPreroid = "" Then
                                _LaNotpaid = 0
                            End If
                            '_FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent + _nBahtAbsent)
                            _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent + _nBahtAbsent)
                        Else
                            _nBahtAbsent = 0
                            _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent)
                        End If

                        If _FNEmpBaht < 0 Then _FNEmpBaht = 0
                    End If





                End If

                _TotalCalTax = 0 : _TaxAmt = 0

                FNUnionAmt = 0
                FNUnionRate = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNUnionAmt,0) AS FNUnionAmt  FROM   " & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & ".dbo.THRMCfgWelfareKM with(nolock) Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")
                If FNUnionRate > 0 Then

                    Dim _StatePass As Boolean = True

                    If _FDDateEnd <> "" Then
                        If _EndDate < _FDDateEnd Then

                            _StatePass = True

                        Else
                            _StatePass = False
                        End If
                    End If

                    If Not (FNStateUnionMember = "1") Then _StatePass = False

                    'If _WorkAge <= 0 Then
                    '    _StatePass = False
                    'Else
                    '    If FDStartDateUnion < _StartDate Then

                    '    End If
                    'End If

                    If Not (Val(_PayTerm) Mod 2 = 0) Then
                        _StatePass = False
                    End If

                    If _StatePass Then
                        ''_FCDeduct = _FCDeduct + FNUnionRate
                        FNUnionAmt = FNUnionRate
                    End If

                End If

                '_TotalCalSso = Double.Parse(Format(_FNEmpBaht + _HBaht + _FTOtherAddCalculateSocial + _FTAddCalculateSocial + _GtotalleavePayCalSsoAmt, "0.00"))
                '_TotalCalSso = _TotalCalSso + Double.Parse(Format(_FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS, "0.00"))



                ''---------------คิดค่าแรงเฉพราะวันทำงาน ไม่รวมวันลาจ่าย
                ''_FNEmpBaht = _FNEmpBaht - (0 + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave + _FCPayVacationBaht)

                _FCAdd = _FCAdd + _ShiftAmt + _ShiftOTAmt

                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    If FullPreroid = "Y" Then
                        _TotalCalSso = Double.Parse(Format((_FNEmpBaht + 0 + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct + _FCDeductSourceVacationBaht), "0.000"))
                        _TotalCalTax = Double.Parse(Format((_FNEmpBaht + 0 + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct + _FCDeductSourceVacationBaht), "0.000"))

                    Else
                        _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct + _FCDeductSourceVacationBaht), "0.000"))
                        _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct + 0), "0.000"))

                    End If

                    '_TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                    '_TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000"))

                Else

                    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + 0 + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000")) '+ _FCDeductSourceVacationBaht
                    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + 0 + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000")) '+ _FCDeductSourceVacationBaht


                    '_TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                    '_TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000"))


                End If
                '_TotalCalTax +=+ _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                '-----------------หักเงินเข้า กองทุนสำรองเลี้ยงชีพ-------------------------------
                If _ContributedFundBeginPay Then
                    Dim _EMpWorkAge As Integer = Val(R!FNEmpWorkAge.ToString)

                    For Each sR As DataRow In _THRMContributedFund.Select(" FNAgeBegin <= " & _EMpWorkAge & " AND FNAgeEnd >=" & _EMpWorkAge & " ")

                        FTTotalCalContributedAmt = _TotalCalSso

                        FTContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNEmpAmtPer.ToString)) / 100.0), "0"))
                        FTCmpContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNCmpAmtPer.ToString)) / 100.0), "0"))

                        Exit For

                    Next

                End If
                '-----------------หักเงินเข้า กองทุนสำรองเลี้ยงชีพ----------------------------
                '-----------------หักเงินเข้า กองทุนทดแทน---------------------------------
                FTTotalCalWorkmen = _TotalCalSso

                If _FTMaxCalWorkmen > 0 Then

                    _SocialPayMax = CDbl(Format(((_FTMaxCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))

                    If (_TotalCalSso + _FTTotalCalWorkmenBefore) > _FTMaxCalWorkmen Then
                        FTTotalCalWorkmen = _FTMaxCalWorkmen
                    ElseIf FTTotalCalWorkmen > 0 Then
                        FTTotalCalWorkmen = FTTotalCalWorkmen
                    Else
                        FTTotalCalWorkmen = 0
                    End If

                    If _FTTotalCalWorkmenBefore > 0 Then
                        FTWorkmenAmt = CDbl(Format((((_CalSo + _FTTotalCalWorkmenBefore) * _FTMaxWorkmenRate) / 100.0), "0"))
                        FTWorkmenAmt = FTWorkmenAmt - _FTWorkmenAmtBefore
                    Else
                        FTWorkmenAmt = CDbl(Format(((FTTotalCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))
                    End If
                End If

                '-----------------หักเงินเข้า กองทุนทดแทน-------------------------------

                '--------- คิดประกันสังคม-----------
                _SocialPayMax = HCfg.HMaxSocialBaht
                _CalSo = 0
                _FCSocial = 0
                _TotalCalSso = (_TotalCalSso * SocialExchangeRate)
                _FNSocialBase = 0



                _FNEmpDiligent = 0
                _FTStateInDustin = ""
                _FNDeligentPeriod = 0

                If _CalIns <> "" Then
                    Dim _StateCalIns As Boolean = False
                    _Qry = "SELECT TOP 1 FNPayDeligent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMDiligentConfigHD WHERE FTDeligentCode='" & HI.UL.ULF.rpQuoted(_CalIns) & "' "
                    If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") = "1" Then
                        If Val(_PayTerm) Mod 2 = 1 Then

                            _FTSatrtCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                            _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1), -1)) 'วันแของเดือน
                            _StateCalIns = True
                        End If
                    Else

                        _StateCalIns = True
                    End If

                    If _StateCalIns Then
                        _Qry = " SELECT   ISNULL(PayIndus,0) As PayIndus , ISNULL(StateIndus,'') AS StateIndus,ISnuLL(FNDeligentPeriod,0) AS FNDeligentPeriod"
                        _Qry &= vbCrLf & "	FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.FN_CALCULATE_INDUST(" & Val(_EmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDateIns) & "','" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDateIns) & "','" & HI.UL.ULF.rpQuoted(_CalIns) & "')"

                        Dim _DtIns As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        If _DtIns.Rows.Count > 0 Then
                            _FNEmpDiligent = Val(_DtIns.Rows(0)!PayIndus.ToString)
                            _FTStateInDustin = _DtIns.Rows(0)!StateIndus.ToString
                            _FNDeligentPeriod = Val(_DtIns.Rows(0)!FNDeligentPeriod.ToString)
                        End If

                    End If
                End If





                Dim _tmpTotalincome As Double = 0
                Dim _DiffTotalincome As Double = 0
                Dim _tmpTotalNetPay As Double = 0
                Dim _DiffTotalNetPay As Double = 0
                Dim _FNServicefee, _FNFinTransFee As Double
                _FNServicefee = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNServicefee,0) AS FNServicefee  FROM     THRMCfgWelfareKM  Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")
                _FNFinTransFee = _FNServicefee = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNFinTransFee,0) AS FNFinTransFee  FROM     THRMCfgWelfareKM  Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")

                If FullPreroid = "Y" Then
                    '_tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                    '_tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + 0 + 0) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct + _FCDeductSourceVacationBaht), "0.000"))
                    _tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct + _FCDeductSourceVacationBaht), "0.000"))

                    _tmpTotalNetPay = (_tmpTotalincome - (FTContributedAmt))

                    '_Net = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct), "0.00"))
                    '_Net = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + 0 + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct + _FCDeductSourceVacationBaht), "0.00"))
                    _Net = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct + _FCDeductSourceVacationBaht), "0.00"))


                Else
                    '_tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                    '_tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + 0 + 0) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct + _FCDeductSourceVacationBaht), "0.000"))
                    _tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + 0) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000")) '+ _FCDeductSourceVacationBaht

                    _tmpTotalNetPay = (_tmpTotalincome - (FTContributedAmt))

                    '_Net = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct), "0.00"))
                    '_Net = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + 0 + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct + _FCDeductSourceVacationBaht), "0.00"))
                    _Net = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct), "0.00")) '+ _FCDeductSourceVacationBaht


                End If







                _FCBaht = _FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4

                _FNNetpay = Format((_Net - (FNUnionAmt + FTContributedAmt + _TaxAmt + Format(((FNSocialInsuranceEmployee) / SocialExchangeRate), "0.000"))), "0.00")
                _FNNetpayOrg = _FNNetpay

                _DiffTotalincome = _Net - _tmpTotalincome
                _DiffTotalNetPay = _FNNetpay - _tmpTotalNetPay

                If _tmpTotalincome <= 0 Then
                    _FNServicefee = 0
                    _FNFinTransFee = 0
                    _tmpTotalincome = 0
                    _tmpTotalNetPay = 0
                    _Net = 0
                    _FCBaht = 0
                    _FNNetpay = 0
                    _FNNetpayOrg = 0
                    _DiffTotalincome = 0
                    _DiffTotalNetPay = 0
                End If

                Dim _FNParturitionLeaveUS1 As Double = 0
                Dim _FNParturitionLeaveUS2 As Double = 0
                Dim _FNParturitionLeaveUS3 As Double = 0

                If (FNParturitionLeave > 0) Then
                    _FNParturitionLeaveUS1 = Double.Parse(Format(FNParturitionLeave / 3.0, "0.00"))
                    _FNParturitionLeaveUS2 = Double.Parse(Format(FNParturitionLeave / 3.0, "0.00"))
                    _FNParturitionLeaveUS3 = Double.Parse(Format(FNParturitionLeave / 3.0, "0.00"))
                    '' _FNParturitionLeaveUS3 ''' = FNParturitionLeave - (_FNParturitionLeaveUS1 + _FNParturitionLeaveUS2)

                End If


                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll (FTInsUser, FTInsDate, FTInsTime,"
                _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,FTEmpIdNo1,FTSocialNo,"
                _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
                _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId,  FNHSysPayRollPayId"
                _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
                _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
                _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
                _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
                _Qry &= vbCrLf & ",FNTotalWKNMin,  FNOt1Min, FNOt15Min, FNOt2Min"
                _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
                _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
                _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
                _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
                _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
                _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
                _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
                _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
                _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
                _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
                _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
                _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
                _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
                _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin, FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
                _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate , FNServicefee ,FNFinTransFee,FNSocialInsuranceEmployee , FNSocialInsuranceEmployer, FNUnionInsuranceEmployee "


                _Qry &= vbCrLf & " ,FNUnion "
                _Qry &= vbCrLf & ", FNParturitionLeaveUS1 "
                _Qry &= vbCrLf & ", FNParturitionLeaveUS2"
                _Qry &= vbCrLf & ", FNParturitionLeaveUS3"
                _Qry &= vbCrLf & ")"

                _Qry &= vbCrLf & " 	SELECT '" & HI.UL.ULF.rpQuoted(_User) & "',CONVERT(varchar(10),GetDate(),111),CONVERT(varchar(8),GetDate(),114)"
                _Qry &= vbCrLf & " 	,'" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ""
                _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo1) & "','" & HI.UL.ULF.rpQuoted(_FTSocialNo) & "','" & _EmpType & "','" & HI.UL.ULDate.ConvertEnDB(_PayDate) & "'"
                _Qry &= vbCrLf & " 	," & Val(_FTDeptCode) & ""
                _Qry &= vbCrLf & " 	," & Val(_FTDivCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTSectCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTUnitCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPos) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPaymentCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBankCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBranchCode) & " "
                _Qry &= vbCrLf & " 	,N'" & HI.UL.ULF.rpQuoted(_FTAccNo) & "'," & _TotalHoliDay & ""
                _Qry &= vbCrLf & " 	," & _FCSalary & ""
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNTimeMin & " / 60) + Convert(numeric(18,2),(( " & _GFNTimeMin & " %60) /100.00)) "
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1_5Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1_5Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT2Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT2Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2)," & _GFNOT3Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT3Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GFNOT4Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT4Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleavePay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleavePay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleaveNotPay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleaveNotPay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _Gtotalleave & " / 60) + Convert(numeric(18,2),(( " & _Gtotalleave & " %60) /100.00))"
                _Qry &= vbCrLf & " 	, " & _GFNTimeMin
                _Qry &= vbCrLf & " 	, " & _GFNOT1Min
                _Qry &= vbCrLf & " 	, " & _GFNOT1_5Min
                _Qry &= vbCrLf & ", " & _GFNOT2Min
                _Qry &= vbCrLf & "," & _GFNOT3Min
                _Qry &= vbCrLf & ",  " & _GFNOT4Min
                _Qry &= vbCrLf & ",  " & _GFNLateNormalMin
                _Qry &= vbCrLf & ",  " & _GFNLateNormalCut
                _Qry &= vbCrLf & ",  " & _GFNCutAbsent
                _Qry &= vbCrLf & ",  " & _GFNAbsent & "," & (_GFNTimeMin + _GFNOT1Min + _GFNOT1_5Min + _GFNOT2Min + _GFNOT3Min + _GFNOT4Min)
                _Qry &= vbCrLf & ",  " & _GtotalleavePay
                _Qry &= vbCrLf & ", " & _GtotalleaveNotPay
                _Qry &= vbCrLf & ", " & _Gtotalleave
                _Qry &= vbCrLf & ", " & _FNEmpBaht & " "
                _Qry &= vbCrLf & ", " & _nBahtOt1 & " "
                _Qry &= vbCrLf & "," & _nBahtOt15 & " "
                _Qry &= vbCrLf & "," & _nBahtOt2 & " "
                _Qry &= vbCrLf & "," & _nBahtOt3 & " "
                _Qry &= vbCrLf & "," & _nBahtOt4 & " "
                _Qry &= vbCrLf & "," & (_FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FNIncentiveAmt + _BonusAmt) & " "
                _Qry &= vbCrLf & "," & _FNEmpDiligent & " "
                _Qry &= vbCrLf & "," & _FCPayVacationBaht & " "
                _Qry &= vbCrLf & "," & _Lapaid & " "
                _Qry &= vbCrLf & "," & _LateCutAmt & " "
                _Qry &= vbCrLf & "," & _LateCutAmtAbsent & " "
                _Qry &= vbCrLf & "," & _nBahtAbsent & " "
                _Qry &= vbCrLf & "," & _TotalCalSso & " "
                _Qry &= vbCrLf & "," & _TotalCalTax & " "
                _Qry &= vbCrLf & "," & _FCAdd & " "
                _Qry &= vbCrLf & "," & _FCOtherAdd & " "
                _Qry &= vbCrLf & "," & _FCDeduct & " "
                _Qry &= vbCrLf & "," & _FCOtherDeduct & " "
                _Qry &= vbCrLf & "," & _Net & " "
                _Qry &= vbCrLf & "," & _FCSocial & " "
                _Qry &= vbCrLf & "," & _TaxAmt & " "
                _Qry &= vbCrLf & "," & _HBaht & " "
                _Qry &= vbCrLf & "," & (_FNNetpay) & ""
                _Qry &= vbCrLf & "," & (_Net + _FCAccumulateIncome) & ""
                _Qry &= vbCrLf & "," & (_FCSocial + _FCAccumulateSocial) & ""
                _Qry &= vbCrLf & "," & (_TaxAmt + _FCAccumulateTax) & ""
                _Qry &= vbCrLf & ",'" & _FTStateInDustin & "' "
                _Qry &= vbCrLf & "," & (FTTotalCalContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTCmpContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTTotalCalWorkmen) & ""
                _Qry &= vbCrLf & "," & (FTWorkmenAmt) & ""
                _Qry &= vbCrLf & "," & _AmtRetire & ""
                _Qry &= vbCrLf & "," & _GtotalleavePayCalSsoAmt & ""
                _Qry &= vbCrLf & "," & _WorkingDay & " "
                _Qry &= vbCrLf & "," & _WageAdjAdd & ""
                _Qry &= vbCrLf & "," & _FNIncentiveAmt & ""
                _Qry &= vbCrLf & "," & _FNNetpayOrg & ""
                _Qry &= vbCrLf & "," & _FNNetAttandanceAmt & ""
                _Qry &= vbCrLf & "," & _FNHealtCareAmt & ""
                _Qry &= vbCrLf & "," & _FNTransportAmt & ""
                _Qry &= vbCrLf & "," & _FNNetChildCareAmt & ""
                _Qry &= vbCrLf & "," & _FNNetOTMealAmt & ""
                _Qry &= vbCrLf & "," & _FNSocialBase & ""
                _Qry &= vbCrLf & "," & _FNWorkAgeSalary & ""
                _Qry &= vbCrLf & "," & _FNNetOTMealAmtUS & ""
                _Qry &= vbCrLf & "," & _FNExchangeRate & ""
                _Qry &= vbCrLf & "," & FNPayLeaveSickBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveSickBahtMin & ""
                _Qry &= vbCrLf & "," & FNPayLeaveBusinessBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveBusinessBahtMin & ""
                _Qry &= vbCrLf & "," & FNPayLeaveSpecialBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveSpecialBahtMin & ""
                _Qry &= vbCrLf & "," & FNParturitionLeave & ""
                _Qry &= vbCrLf & "," & GFNParturitionLeaveMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetAmt & ""
                _Qry &= vbCrLf & "," & _FNExchangeRateTHB & ""
                _Qry &= vbCrLf & "," & FNWorkDayInWeek & ""
                _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(_FTCalSocialSta) & "'"
                _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(_FTCalTaxSta) & "'"
                _Qry &= vbCrLf & "," & _DiffTotalincome & ""
                _Qry &= vbCrLf & "," & _DiffTotalNetPay & ""
                _Qry &= vbCrLf & "," & SocialExchangeRate & ""
                _Qry &= vbCrLf & "," & TaxExchangeRate & ""
                _Qry &= vbCrLf & "," & _FNServicefee
                _Qry &= vbCrLf & "," & _FNFinTransFee
                _Qry &= vbCrLf & "," & FNSocialInsuranceEmployee
                _Qry &= vbCrLf & "," & FNSocialInsuranceEmployer
                _Qry &= vbCrLf & "," & FNUnionAmt
                _Qry &= vbCrLf & "," & _FNUnion

                _Qry &= vbCrLf & "," & _FNParturitionLeaveUS1
                _Qry &= vbCrLf & "," & _FNParturitionLeaveUS2
                _Qry &= vbCrLf & "," & _FNParturitionLeaveUS3
                '  , FNVacationRetMin, FNVacationRetAmt
                '_FNNetpayOrg
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)



                ' Start คิดค่า seniority ind
                If ((_WorkingDayN >= 21) Or _WorkAgeSeniority >= 1) And (_FDDateEnd >= _EndDate Or _FDDateEnd = "") Then  'จ่ายค่า seniority ind สำหรับพนักงานอายุงาน 1 เดือนขึ้นไป (กรณีเข้างานเดือนเดียวกันกับงวดการจ่าย 21 วันขึ้นไปให้คิดเป็นเดือน) และสถานะต้องเป็นพนักงาน

                    Dim _SeniorityIndOld As Double = 0
                    'For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTFinCode='044'")
                    '    _SeniorityIndOld = _SeniorityIndOld + Val(R2!FCFinAmt.ToString)
                    'Next
                    Try
                        _SeniorityIndOld = (_FCOtherAdd - _FTOtherAddCalculateTax)
                    Catch ex As Exception

                    End Try


                    Dim _dtSeniorityAmt As New DataTable
                    _Qry = "Select  T.FNSeniorityAmt, T.FNSalaryPerDay , T.FTStatePayback , T.FTPaybackYear"
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgSeniorityIndemnty AS T WITH(NOLOCK)"
                    _Qry &= vbCrLf & " where  T.FNHSysEmpTypeId=" & Integer.Parse(Val(_EmpType))
                    _Qry &= vbCrLf & " and T.FTPayTerm='" & _PayTerm & "'"
                    _Qry &= vbCrLf & " and  isnull(T.FTStateActive,'0') = '1'"
                    _dtSeniorityAmt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    If _dtSeniorityAmt.Rows.Count > 0 Then

                        For Each Rc As DataRow In _dtSeniorityAmt.Select("FTPaybackYear='" & _PayYear & "'")

                            _SeniorityAmt += +Double.Parse(Rc!FNSeniorityAmt.ToString) * Double.Parse("0" & MoneyRetSeniorityPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay, _SeniorityIndOld))

                            Exit For
                        Next
                        For Each Rc As DataRow In _dtSeniorityAmt.Select("FTPaybackYear >='" & Microsoft.VisualBasic.Left(_FDDateStart, 4) & "' and FTStatePayback='1'")
                            _SeniorityAmt += +Double.Parse(Rc!FNSeniorityAmt.ToString) * Double.Parse(Rc!FNSalaryPerDay.ToString)
                            Exit For
                        Next
                    End If

                    If _FDDateProbation >= _EndDate Then
                        _SeniorityAmt = 0
                    Else

                        _FCAdd += +_SeniorityAmt
                    End If



                End If
                'End คิดค่า seniority ind


                If _FTCalSocialSta <> "1" Then ' 1 ไม่่คิดประกันสังคม


                    '_Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FNTotalRecalSSO , sum( isnull(P.FNSocialInsuranceEmployee , 0 ) ) AS FNSocialInsuranceEmployee "
                    '_Qry &= vbCrLf & " ,  sum( isnull(P.FNSocialInsuranceEmployer , 0 ) ) AS FNSocialInsuranceEmployer   "
                    '_Qry &= vbCrLf & "  ,SUM(ISNULL(P.FNSocial,0)  ) AS FNSocial "
                    '_Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                    '_Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    '_Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                    '_Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                    '_Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    '_Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                    '_Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                    '_Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                    '_Qry &= vbCrLf & "  Select FNMonth"
                    '_Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    '_Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    '_Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    '_Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    '_Qry &= vbCrLf & "  )  "

                    _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FNTotalRecalSSO , sum( isnull(P.FNSocialInsuranceEmployee , 0 ) ) AS FNSocialInsuranceEmployee "
                    _Qry &= vbCrLf & " ,  sum( isnull(P.FNSocialInsuranceEmployer , 0 ) ) AS FNSocialInsuranceEmployer   "
                    _Qry &= vbCrLf & "  ,SUM(ISNULL(P.FNSocial,0)  ) AS FNSocial "
                    _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                    _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                    _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                    _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                    _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                    _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                    _Qry &= vbCrLf & "  Select FNMonth"
                    _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & "  )  "

                    Dim _DtSsoc As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    If _DtSso.Rows.Count > 0 Then
                        _SsoBefore = Val(_DtSsoc.Rows(0)!FNTotalRecalSSO.ToString)
                        _SsoBeforeAmt = Val(_DtSsoc.Rows(0)!FNSocial.ToString)
                        _InsuranceEmpyeeBefore = Val(_DtSsoc.Rows(0)!FNSocialInsuranceEmployee.ToString)
                        _InsuranceEmpyerBefore = Val(_DtSsoc.Rows(0)!FNSocialInsuranceEmployer.ToString)
                    End If
                    _DtSso.Dispose()

                    _TotalCalSso = _SsoBefore + _TotalCalSso
                    For Each Rsso As DataRow In _tmpSocailRateKM.Select("FNSocialStartRange<=" & _TotalCalSso & " AND  FNSocialEndRange>=" & _TotalCalSso & "")

                        _FNSocialBase = Val(Rsso!FNSocialBase.ToString)
                        _FCSocial = Val(Rsso!FNSocialAmt.ToString)
                        '_FCSocial = (_FNSocialBase * FNSocialEmployerRate) / 100
                        FNSocialInsuranceEmployer = (_FNSocialBase * _SocialRate) / 100
                        FNSocialInsuranceEmployee = (_FNSocialBase * _SocialRate) / 100

                        Exit For
                    Next


                    FNSocialInsuranceEmployer = FNSocialInsuranceEmployer - _InsuranceEmpyerBefore

                    If (_StateSocialOnlyCmppay) Then
                        'บริษัทจ่ายให้ 
                        FNSocialInsuranceEmployee = 0
                        _FCSocial = 0
                    Else
                        FNSocialInsuranceEmployee = FNSocialInsuranceEmployee - _InsuranceEmpyeeBefore

                        '   _FCSocial = _FCSocial - _SsoBeforeAmt
                        '   _FCSocial = CDbl(Format((FNSocialInsuranceEmployee / SocialExchangeRate), "0.00"))
                        _FCSocial = Math.Round(Decimal.Parse(((FNSocialInsuranceEmployee + _InsuranceEmpyeeBefore) / SocialExchangeRate)), 2) - Math.Round(Decimal.Parse((_InsuranceEmpyeeBefore / SocialExchangeRate)), 2)

                    End If

                Else
                    _TotalCalSso = 0
                End If

                If _FTCalTaxSta <> "1" Then
                    Dim _TaxBefore As Double = 0
                    Dim _TaxBeforeAmt As Double = 0
                    Dim _DeReCalTax As Double = 0

                    For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTStaTax='0'")
                        _DeReCalTax = _DeReCalTax + Val(R2!FCFinAmt.ToString)
                    Next



                    If (_PayTerm Mod 2 = 1) And _FTEmpState = "3" Then


                        With _EmpDisTax
                            .FTSosial = 0
                            .BaseSlary = CDbl(Format((_TotalCalTax * TaxExchangeRate), "0.000")) + CDbl(Format((_FCSalary / 2) * TaxExchangeRate, "0.000"))
                            ''  .OtherSlary = _FTOtherAddCalculateTax + _FTAddCalculateTax + _FNEmpDiligent + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                            '' .OtherSlary = Format(.OtherSlary * TaxExchangeRate, "0.000")
                            .Cfg_ContributedDeducToTheFund = 0

                        End With

                        ''_TotalCalTax = (_EmpDisTax.BaseSlary + _EmpDisTax.OtherSlary)
                        _TotalCalTax = (_EmpDisTax.BaseSlary)
                        Dim _TaxOther As Double = 0 '_EmpDisTax.OtherSlary 
                        Dim _TaxOtherAmt As Double = 0
                        Dim _Total As Double = GETnRecalDiscTax(_EmpDisTax, _EmpTaxYear)

                        _EmpTaxYear.FTSocial = FNSocialInsuranceEmployee
                        _EmpTaxYear.FTTotalCalTax = _Total - (FNSocialInsuranceEmployee + _InsuranceEmpyeeBefore)
                        Dim _TotalTax As Double = GETnTax_KM(_EmpTaxYear.FTTotalCalTax, _TaxOther, _TaxOtherAmt)
                        _TotalTax = (_TotalTax / 2)
                        _EmpTaxYear.FTTotalTax = _TotalTax 'ภาษีที่ต้องจ่าย

                        _TotalTax = CDbl(Format(_TotalTax, "0.000"))
                        If _TotalTax > 0 Then
                            _TaxAmt = CDbl(Format((_TotalTax / TaxExchangeRate), "0.000"))
                        Else
                            _TaxAmt = 0
                        End If
                        _EmpTaxYear.FTTotalTaxPay = _TaxAmt + _FCAccumulateTax
                        _TotalCalTax = (_TotalCalTax / 2)




                    Else


                        '_Qry = "  SELECT  TOP 1 case when max(P.FNParturitionLeaveBaht) > 0  then  sum(( (P.FNHealtCareAmt*24)+ ( P.FNTransportAmt *24)+   P.FNChildCareAmt   ))   else 0 end  AS Amt"
                        '_Qry &= vbCrLf & ",  case when max(P.FNParturitionLeaveBaht) > 0  then "
                        '_Qry &= vbCrLf & "  (select sum(PG.FNOTMealAmtUS) FROM dbo.THRTPayRoll AS PG WITH (NOLOCK)"
                        '_Qry &= vbCrLf & "   where PG.FTPayYear+ PG.FTPayTerm >= convert(varchar(30), CONVERT(int ,min( P.FTPayYear)) - 1  )+ min(P.FTPayTerm)  "
                        '_Qry &= vbCrLf & "    AND PG.FTEmpIdNo =min(P.FTEmpIdNo  )) else 0 end as FNOTMealAmtUS "
                        '_Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                        '_Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        '_Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                        '_Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                        '_Qry &= vbCrLf & " AND PD.FTPayTerm <= '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                        '_Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                        '_Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                        '_Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                        '_Qry &= vbCrLf & "  Select FNMonth"
                        '_Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                        '_Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                        '_Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        '_Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                        '_Qry &= vbCrLf & "  )  "

                        Dim _MealParturitionAmt As Double = 0
                        'Dim _oMdt As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        'For Each Rz As DataRow In _oMdt.Rows
                        '    _MealParturitionAmt = Val(Rz!FNOTMealAmtUS.ToString) + Val(Rz!Amt.ToString)
                        'Next


                        _TotalCalTax = _TotalCalTax - _MealParturitionAmt
                        _TotalCalTax = IIf(_TotalCalTax < 0, 0, _TotalCalTax)
                        Try
                            ' best     _TotalCalTax = _TotalCalTax - (_FCOtherAdd - _FTOtherAddCalculateTax)
                        Catch ex As Exception

                        End Try

                        _ReturnTaxAmt = 0


                        '_Qry = " SELECT  TOP 1 case when max(isnull(P.FNParturitionLeaveBaht,0)) <= 0 then   SUM((isnull(P.FNTotalIncome,0) - ( P.FNHealtCareAmt+ P.FNTransportAmt+ P.FNOTMealAmtUS + P.FNChildCareAmt + isnull(F4.FCTotalFinAmt,0)+ isnull(F.FCTotalFinAmt,0) ) ) * P.FNTaxExchangeRate ) else  SUM((isnull(P.FNTotalIncome,0) ) * P.FNTaxExchangeRate ) end  AS FNTotalRecalTAX "
                        '_Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTax,0) *  ISNULL(P.FNTaxExchangeRate,1)) AS FNTax"

                        _Qry = " SELECT  TOP 1  SUM((isnull(P.FNTotalRecalTAX,0) ) * P.FNTaxExchangeRate )   AS FNTotalRecalTAX "
                        _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTax,0) *  ISNULL(P.FNTaxExchangeRate,1)) AS FNTax"

                        _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK) "
                        _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '044') F4"
                        _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '046') F"

                        ''_Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '048') F48"

                        _Qry &= vbCrLf & " , (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD  "
                        _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                        _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                        _Qry &= vbCrLf & " AND PD.FTPayTerm <  '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                        _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                        _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                        _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                        _Qry &= vbCrLf & "  Select FNMonth"
                        _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                        _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                        _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                        _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                        _Qry &= vbCrLf & "  )  "


                        Dim _DtTax As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        If _DtTax.Rows.Count > 0 Then
                            _TaxBefore = Val(_DtTax.Rows(0)!FNTotalRecalTAX.ToString)
                            _TaxBeforeAmt = Val(_DtTax.Rows(0)!FNTax.ToString)
                        End If
                        _DtTax.Dispose()

                        _EmpDisTax.BeforeIncom = 0
                        _EmpDisTax.BeforeTax = _TaxBeforeAmt
                        _TaxBefore = IIf(_TotalCalTax <= 0, 0, _TaxBefore)

                        With _EmpDisTax
                            .FTSosial = 0 '_FCAccumulateSocial + _FCSocial + (_FCSocial * (_TotalInstalment - _Instalment))

                            'If .FTSosial > (((_SocialMaxIncome * _SocialRate) / 100.0) * 12) Then
                            '    .FTSosial = CDbl(Format((((_SocialMaxIncome * _SocialRate) / 100.0) * 12), "0.00"))
                            'End If

                            .BaseSlary = CDbl(Format((_TotalCalTax * TaxExchangeRate), "0.000")) + _TaxBefore '(_TotalCalTax * (_TotalInstalment - _Instalment)) + _TotalCalTax
                            .OtherSlary = 0 ' _FTOtherAddCalculateTax + _FTAddCalculateTax + _FNEmpDiligent + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                            .OtherSlary = Format(.OtherSlary * TaxExchangeRate, "0.000") '+ _FNNetOTMealAmt
                            ' _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary
                            .Cfg_ContributedDeducToTheFund = 0 '.Cfg_ContributedDeducToTheFund + FTContributedAmt + (FTContributedAmt * (_TotalInstalment - _Instalment))

                        End With


                        _TotalCalTax = (_EmpDisTax.BaseSlary + _EmpDisTax.OtherSlary)
                        Dim _TaxOther As Double = 0 '_EmpDisTax.OtherSlary
                        Dim _TaxOtherAmt As Double = 0
                        Dim _Total As Double = GETnRecalDiscTax(_EmpDisTax, _EmpTaxYear)




                        _EmpTaxYear.FTSocial = FNSocialInsuranceEmployee '_EmpDisTax.FTSosial '   _FCAccumulateSocial + _FCSocial  'ประกันสังคม

                        _EmpTaxYear.FTTotalCalTax = _Total - (FNSocialInsuranceEmployee + _InsuranceEmpyeeBefore)   '_EmpDisTaxChildAmt



                        Dim _TotalTax As Double = GETnTax_KM(_EmpTaxYear.FTTotalCalTax, _TaxOther, _TaxOtherAmt)

                        _EmpTaxYear.FTTotalTax = _TotalTax 'ภาษีที่ต้องจ่ายจากรวม 2 งวด

                        _TotalTax = CDbl(Format(_TotalTax - _EmpDisTax.BeforeTax, "0.000"))

                        If _TotalTax > 0 Then
                            _TaxAmt = CDbl(Format((_TotalTax / TaxExchangeRate), "0.000")) ' CDbl(Format((_TotalTax / ((_TotalInstalment - _Instalment) + 1)), "0.00"))

                            ' _TaxAmt = _TaxAmt + _TaxOtherAmt
                        Else
                            _TaxAmt = 0
                            _ReturnTaxAmt = Abs(CDbl(Format((_TotalTax / TaxExchangeRate), "0.000")))
                        End If
                        'If _TaxBeforeAmt > 0 Then
                        '    _TaxBeforeAmt = CDbl(Format((_TaxBeforeAmt / TaxExchangeRate), "0.00"))
                        'Else
                        '    _TaxBeforeAmt = 0
                        'End If

                        _EmpTaxYear.FTTotalTaxPay = _TaxAmt + _FCAccumulateTax - _ReturnTaxAmt


                        _TotalCalTax = _TotalCalTax - _TaxBefore

                        ' _TaxAmt = _TaxAmt - _TaxBeforeAmt



                    End If




                Else

                    '_TotalCalTax = 0
                    '_TaxAmt = 0

                End If




                _FNServicefee = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNServicefee,0) AS FNServicefee  FROM     THRMCfgWelfareKM  Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")
                _FNFinTransFee = _FNServicefee = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNFinTransFee,0) AS FNFinTransFee  FROM     THRMCfgWelfareKM  Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")

                '_tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + 0 + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct + _FCDeductSourceVacationBaht), "0.000"))

                If FullPreroid = "Y" Then


                    _tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt + _ReturnTaxAmt) - (_FCOtherDeduct + _FCDeduct + 0 + _FCDeductSourceVacationBaht), "0.000"))
                    _tmpTotalNetPay = (_tmpTotalincome - (FTContributedAmt))


                    '_Net = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + 0 + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct + _FCDeductSourceVacationBaht), "0.00"))
                    _Net = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt + _ReturnTaxAmt) - (_FCOtherDeduct + _FCDeduct + 0 + _FCDeductSourceVacationBaht), "0.00"))
                Else
                    _tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _ReturnTaxAmt) - (_FCOtherDeduct + _FCDeduct + 0), "0.000")) '+ _FCDeductSourceVacationBaht
                    _tmpTotalNetPay = (_tmpTotalincome - (FTContributedAmt))


                    '_Net = Double.Parse(Format((_FNEmpBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + 0 + 0 + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct + _FCDeductSourceVacationBaht), "0.00"))
                    _Net = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + 0 + (0 + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt + _ReturnTaxAmt) - (_FCOtherDeduct + _FCDeduct + 0), "0.00")) ''++ _FCDeductSourceVacationBaht

                End If


                _FCBaht = _FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4

                _FNNetpay = Format((_Net - (FNUnionAmt + FTContributedAmt + _TaxAmt + Format(((FNSocialInsuranceEmployee) / SocialExchangeRate), "0.000"))), "0.00")
                _FNNetpayOrg = _FNNetpay

                _DiffTotalincome = _Net - _tmpTotalincome
                _DiffTotalNetPay = _FNNetpay - _tmpTotalNetPay
                If _tmpTotalincome <= 0 Then
                    _FNServicefee = 0
                    _FNFinTransFee = 0
                    _tmpTotalincome = 0
                    _tmpTotalNetPay = 0
                    _TaxAmt = 0
                    _Net = 0
                    _FCBaht = 0
                    _FNNetpay = 0
                    _FNNetpayOrg = 0
                    _FNNetpay = 0
                    _FNNetpayOrg = 0
                    _DiffTotalincome = 0
                    _DiffTotalNetPay = 0
                End If
                'FNNetIncome
                _Qry = "Update [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & "set FNNetIncome=" & _Net
                _Qry &= vbCrLf & ", FNTotalIncome=" & _Net
                _Qry &= vbCrLf & " ,FNNetpay=" & _FNNetpay
                _Qry &= vbCrLf & " ,FNSocial=" & _FCSocial
                _Qry &= vbCrLf & " , FNTax=" & _TaxAmt
                _Qry &= vbCrLf & " , FNReturnTax=" & _ReturnTaxAmt
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                If _FTCalTaxSta <> "1" And _FTEmpIdNo <> "" Then
                    '-----------------------------ภาษี -----------------------------------------------------
                    _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTaxYear "
                    _Qry &= vbCrLf & "  WHERE FTYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & "  AND  FTEmpIdNo='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' AND FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " "
                    _Qry &= vbCrLf & "  INSERT INTO THRTTaxYear (FNHSysCmpId,FTYear, FTEmpIdNo, FNAmt, FNExpenses, FNNetAmt, "
                    _Qry &= vbCrLf & "  FNModEmp, FNModMate, FNChildNotLern, FNChildLern, FNChildNotLernAmt, FNChildLernAmt, FNInsurance, FNProvidentfund, FNInterest, FNSocial, FNDonation, "
                    _Qry &= vbCrLf & "  FNProvidentfundOver, FNGPF, FNSavingsFund, FNCommutation, FNUnitRMF, FNModFather, FNModMother, FNModFatherMate, FNModMotherMate, FNUnitLTF, "
                    _Qry &= vbCrLf & "  FNDonationLern, FNParentsHealthInsurance, FNSupportSport, FNAcquisitionOfProperty, FNPension, FNTravel, FNTotalCalTax, FNTotalTax,FNTotalTaxPay )"
                    _Qry &= vbCrLf & "  SELECT " & HI.ST.SysInfo.CmpID & ",'" & _PayYear & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "

                    With _EmpTaxYear

                        _Qry &= vbCrLf & "," & .FTAmt & " "
                        _Qry &= vbCrLf & "," & .FTExpenses & ""
                        _Qry &= vbCrLf & "," & .FTNetAmt & ""
                        _Qry &= vbCrLf & "," & .FTModEmp & ""
                        _Qry &= vbCrLf & "," & .FTModMate & ""
                        _Qry &= vbCrLf & "," & .FNChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FNChildLern & " "
                        _Qry &= vbCrLf & "," & .FTChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FTChildLern & ""
                        _Qry &= vbCrLf & "," & .FTInsurance & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfund & ""
                        _Qry &= vbCrLf & "," & .FTInterest & ""
                        _Qry &= vbCrLf & "," & .FTSocial & ""
                        _Qry &= vbCrLf & "," & .FTDonation & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfundOver & ""
                        _Qry &= vbCrLf & "," & .FTGPF & ""
                        _Qry &= vbCrLf & "," & .FTSavingsFund & ""
                        _Qry &= vbCrLf & "," & .FTCommutation & ""
                        _Qry &= vbCrLf & "," & .FTUnitRMF & ""
                        _Qry &= vbCrLf & "," & .FTModFather & ""
                        _Qry &= vbCrLf & "," & .FTModMother & ""
                        _Qry &= vbCrLf & "," & .FTModFatherMate & ""
                        _Qry &= vbCrLf & "," & .FTModMotherMate & ""
                        _Qry &= vbCrLf & "," & .FTUnitLTF & ""
                        _Qry &= vbCrLf & "," & .FTDonationLern & ""
                        _Qry &= vbCrLf & "," & .FTParentsHealthInsurance & ""
                        _Qry &= vbCrLf & "," & .FTSupportSport & ""
                        _Qry &= vbCrLf & "," & .FTAcquisitionOfProperty & ""
                        _Qry &= vbCrLf & "," & .FTPension & ""
                        _Qry &= vbCrLf & "," & .FTTravel & ""
                        _Qry &= vbCrLf & "," & .FTTotalCalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTaxPay & ""

                    End With

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    '----------------------------- ภาษี -----------------------------------------------------
                End If

                '-----------------------------รายได้อื่นๆ -----------------------------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Dim _AllFincode As String = ""

                For Each _R As DataRow In _DtFin.Rows
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTFinCode, FTFinAmt," & _R!FCTotalFinAmt.ToString & ",0," & _R!FCTotalFinAmt.ToString & ""
                    _Qry &= vbCrLf & " FROM  THRMEmployeeFin "
                    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND  FTFinCode = ('" & _AllFincode & "') "

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Next

                For Each _R As DataRow In _dt.Select("FCFinAmt<>0")
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_R!FCFinAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FCFinAmtOther=" & _R!FCFinAmt.ToString & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _AllFincode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then

                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ",'" & _AllFincode & "',0, 0," & _R!FCFinAmt.ToString & "," & _R!FCFinAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    End If

                Next

                If _ShiftAmt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='001' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '001'," & _ShiftValue.ToString & "," & _ShiftAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _ShiftOTAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftOTAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='007' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '007'," & _ShiftOTValue.ToString & "," & _ShiftOTAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _SeniorityAmt > 0 Then

                    Dim _xFinCode As String = "046"
                    If (_FTStateWorkpermit = "1") Then
                        _xFinCode = "047"
                    End If
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_SeniorityAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _xFinCode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '" & _xFinCode & "'," & _SeniorityAmt.ToString & "," & _SeniorityAmt.ToString & ""
                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _BonusAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_BonusAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='008' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _BonusAmt.ToString & "," & _BonusAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _FNIncentiveAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNIncentiveAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='011' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '011'," & _FNIncentiveAmt.ToString & "," & _FNIncentiveAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If FNUnionAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(FNUnionAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='108' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '108'," & Val(FNUnionAmt.ToString) & "," & Val(FNUnionAmt.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _FNEmpDiligent > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNEmpDiligent.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    If _FNDeligentPeriod = 0 Then
                        _Qry &= vbCrLf & " AND FTFinCode='008' "
                    Else
                        _Qry &= vbCrLf & " AND FTFinCode='009' "

                    End If


                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        If _FNDeligentPeriod = 0 Then
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                        Else
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '009'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                        End If
                    End If

                End If


                '_Qry = " SELECT   top 1    SUM((isnull(P.FNTotalIncome,0) - (  isnull(F44.FCTotalFinAmt,0) +  isnull(F45.FCTotalFinAmt,0) +  isnull(F46.FCTotalFinAmt,0)+  isnull(F47.FCTotalFinAmt,0) +  isnull(F19.FCTotalFinAmt,0)) ) )   AS FNTotalIncome "
                ''' _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTax,0) *  ISNULL(P.FNTaxExchangeRate,1)) AS FNTax"
                '_Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK)"
                '_Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '044') F44 "
                '_Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '045') F45 "
                '_Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '046') F46 "
                '_Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '047') F47 "
                '_Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '019') F19 "
                '_Qry &= vbCrLf & " , (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                '_Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                '_Qry &= vbCrLf & "AND ISNULL(P.FNTotalIncome,0) > 0 "
                '_Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                '''_Qry &= vbCrLf & " AND PD.FTPayTerm <  '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                '_Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                '_Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                '_Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                '_Qry &= vbCrLf & "  Select FNMonth"
                '_Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                '_Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                '_Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                '_Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                '_Qry &= vbCrLf & "  )  "


                Dim _FNTotalIncomeSum As Double = 0


                '' check resgin   and  check  period 2 of month     _StartDate    _EndDate   _FDDateEnd

                Dim pension_FNParturitionLeaveUS1 As Double = 0
                Dim pension_FNParturitionLeaveUS2 As Double = 0
                Dim pension_FNParturitionLeaveUS3 As Double = 0

                ''   MsgBox(FNParturitionLeave)
                ''งวดที่ 1 
                ''  IfVal(_PayTerm) Mod 2 = 1 And (_FDDateEnd >= _StartDate And _FDDateEnd <= _EndDate And _FDDateEnd <> "") Or FNParturitionLeave > 0 Then
                If Val(_PayTerm) Mod 2 = 1 And ((_FDDateEnd <> "") Or FNParturitionLeave > 0) Then


                    _Qry = " SELECT   top 1    SUM((isnull(P.FNTotalIncome,0) - (  isnull(F44.FCTotalFinAmt,0) +  isnull(F45.FCTotalFinAmt,0) +  isnull(F46.FCTotalFinAmt,0)+  isnull(F47.FCTotalFinAmt,0) +  isnull(F19.FCTotalFinAmt,0)) ) )   AS FNTotalIncome "

                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNParturitionLeaveUS1,0) ) AS FNParturitionLeaveUS1 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNParturitionLeaveUS2,0) ) AS FNParturitionLeaveUS2 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNParturitionLeaveUS3,0) ) AS FNParturitionLeaveUS3 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNPensionSchemeAdvance2,0) ) AS FNPensionSchemeAdvance2 "
                    _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNPensionSchemeAdvance3,0) ) AS FNPensionSchemeAdvance3 "


                    '' _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTax,0) *  ISNULL(P.FNTaxExchangeRate,1)) AS FNTax"
                    _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK)"
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '044') F44 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '045') F45 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '046') F46 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '047') F47 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '019') F19 "
                    _Qry &= vbCrLf & " , (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                    _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "AND ISNULL(P.FNTotalIncome,0) > 0 "
                    _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                    ''_Qry &= vbCrLf & " AND PD.FTPayTerm <  '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                    _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                    _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                    _Qry &= vbCrLf & "  Select FNMonth"
                    _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & "  )  "

                    Dim _DtTotal As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    If _DtTotal.Rows.Count > 0 Then
                        _FNTotalIncomeSum = Val(_DtTotal.Rows(0)!FNTotalIncome.ToString)
                        pension_FNParturitionLeaveUS1 = Val(_DtTotal.Rows(0)!FNParturitionLeaveUS1.ToString)
                        pension_FNParturitionLeaveUS2 = Val(_DtTotal.Rows(0)!FNParturitionLeaveUS2.ToString)
                        pension_FNParturitionLeaveUS3 = Val(_DtTotal.Rows(0)!FNParturitionLeaveUS3.ToString)


                    End If
                    _DtTotal.Dispose()


                    Dim _FNTotalIncomeSum2 As Double = 0
                    Dim _FNTotalIncomeSum3 As Double = 0

                    If (_FNTotalIncomeSum) >= 2 Then



                        _FNTotalIncomeSum = (_FNTotalIncomeSum - (pension_FNParturitionLeaveUS2 + pension_FNParturitionLeaveUS3)) * SocialExchangeRate

                        _FNTotalIncomeSum2 = (pension_FNParturitionLeaveUS2) * SocialExchangeRate
                        _FNTotalIncomeSum3 = (pension_FNParturitionLeaveUS3) * SocialExchangeRate

                        Dim _FNTotalIncomePension As Double = 0
                        Dim _FNTotalIncomePensionDefault As Double = 0

                        _Qry = " SELECT  FNHSysPensionRankID "
                        _Qry &= vbCrLf & " ,[FNSeq],[FNTotalRecalFrom],[FNTotalRecalTo] "
                        _Qry &= vbCrLf & " ,[FNCalPensionType],[FNTotalRecalDefault] "
                        _Qry &= vbCrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].[dbo].[THRMCfgSocailKMPensionRank]  "
                        _Qry &= vbCrLf & ""

                        Dim _DtPensionRank As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        For Each Rp As DataRow In _DtPensionRank.Select("FNTotalRecalFrom<=" & _FNTotalIncomeSum & " AND  FNTotalRecalTo>=" & _FNTotalIncomeSum & "")
                            If (Rp!FNCalPensionType.ToString = "0") Then
                                _FNTotalIncomePension = Val(Rp!FNTotalRecalDefault.ToString)
                            Else
                                _FNTotalIncomePension = Val(_FNTotalIncomeSum)
                            End If

                        Next
                        '' MsgBox(_FNTotalIncomePension)



                        Dim _FNPensionEmp As Double = 0
                        Dim _FNPensionCmp As Double = 0

                        '_FNPensionEmp = _FNTotalIncomePension * 0.02   
                        '_FNPensionCmp = _FNTotalIncomePension * 0.02

                        _FNPensionEmp = (Format(((_FNTotalIncomePension * 0.02) / SocialExchangeRate), "0.00"))
                        _FNPensionCmp = (Format(((_FNTotalIncomePension * 0.02) / SocialExchangeRate), "0.00"))


                        Dim _FNPension2 As Double = 0

                        Dim _FNPension3 As Double = 0

                        If _FNTotalIncomeSum2 > 0 And _FNTotalIncomeSum3 > 0 Then
                            _FNPension2 = (Format(((_FNTotalIncomeSum2 * 0.02) / SocialExchangeRate), "0.00"))
                            _FNPension3 = (Format(((_FNTotalIncomeSum3 * 0.02) / SocialExchangeRate), "0.00"))
                        End If





                        _FNNetpay = Format((_FNNetpay - (_FNPensionEmp + _FNPension2 + _FNPension3)), "0.00")




                        If _FNNetpay < 0 Then
                            _FNNetpay = 0
                        End If
                        ''    MsgBox(_FNNetpay)
                        'FNNetIncome
                        _Qry = "Update [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                        _Qry &= vbCrLf & "set FNTotalRecalPensionScheme=" & Val(_FNTotalIncomeSum)
                        _Qry &= vbCrLf & ", FNPensionSchemeRateEmp=" & Val(2)
                        _Qry &= vbCrLf & " ,FNPensionSchemeRateCmp=" & Val(2)
                        _Qry &= vbCrLf & " ,FNPensionScheme=" & Val(_FNPensionEmp)
                        _Qry &= vbCrLf & " , FNPensionSchemeCmp=" & Val(_FNPensionCmp)

                        _Qry &= vbCrLf & " , FNPensionSchemeAdvance2=" & Val(_FNPension2)
                        _Qry &= vbCrLf & " , FNPensionSchemeAdvance3=" & Val(_FNPension3)

                        _Qry &= vbCrLf & " ,FNNetpay=" & _FNNetpay

                        _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                        _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                        _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                        ''   MsgBox(_Qry)
                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    End If


                    '' งวดที่สองของเดือน
                ElseIf Val(_PayTerm) Mod 2 = 0 Then

                    _Qry = " SELECT   top 1    SUM((isnull(P.FNTotalIncome,0) - (  isnull(F44.FCTotalFinAmt,0) +  isnull(F45.FCTotalFinAmt,0) +  isnull(F46.FCTotalFinAmt,0)+  isnull(F47.FCTotalFinAmt,0) +  isnull(F19.FCTotalFinAmt,0)) ) )   AS FNTotalIncome "
                    '' _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTax,0) *  ISNULL(P.FNTaxExchangeRate,1)) AS FNTax"
                    _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK)"
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '044') F44 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '045') F45 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '046') F46 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '047') F47 "
                    _Qry &= vbCrLf & " OUTER APPLY (SELECT FCTotalFinAmt FROM THRTPayRollFin WHERE FTPayYear=P.FTPayYear AND FTPayTerm=P.FTPayTerm AND FNHSysEmpID=P.FNHSysEmpID AND FTFinCode = '019') F19 "
                    _Qry &= vbCrLf & " , (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                    _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "AND ISNULL(P.FNTotalIncome,0) > 0 "
                    _Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                    ''_Qry &= vbCrLf & " AND PD.FTPayTerm <  '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                    _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                    _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                    _Qry &= vbCrLf & "  Select FNMonth"
                    _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & "  )  "


                    Dim _DtTotal As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    If _DtTotal.Rows.Count > 0 Then
                        _FNTotalIncomeSum = Val(_DtTotal.Rows(0)!FNTotalIncome.ToString)
                    End If
                    _DtTotal.Dispose()


                    If (_FNTotalIncomeSum) >= 2 Then

                        _FNTotalIncomeSum = _FNTotalIncomeSum * SocialExchangeRate

                        Dim _FNTotalIncomePension As Double = 0
                        Dim _FNTotalIncomePensionDefault As Double = 0

                        _Qry = " SELECT  FNHSysPensionRankID "
                        _Qry &= vbCrLf & " ,[FNSeq],[FNTotalRecalFrom],[FNTotalRecalTo] "
                        _Qry &= vbCrLf & " ,[FNCalPensionType],[FNTotalRecalDefault] "
                        _Qry &= vbCrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].[dbo].[THRMCfgSocailKMPensionRank]  "
                        _Qry &= vbCrLf & ""

                        Dim _DtPensionRank As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        For Each Rp As DataRow In _DtPensionRank.Select("FNTotalRecalFrom<=" & _FNTotalIncomeSum & " AND  FNTotalRecalTo>=" & _FNTotalIncomeSum & "")
                            If (Rp!FNCalPensionType.ToString = "0") Then
                                _FNTotalIncomePension = Val(Rp!FNTotalRecalDefault.ToString)
                            Else
                                _FNTotalIncomePension = Val(_FNTotalIncomeSum)
                            End If


                        Next

                        Dim _FNPensionEmp As Double = 0
                        Dim _FNPensionCmp As Double = 0

                        '_FNPensionEmp = _FNTotalIncomePension * 0.02   
                        '_FNPensionCmp = _FNTotalIncomePension * 0.02

                        _FNPensionEmp = (Format(((_FNTotalIncomePension * 0.02) / SocialExchangeRate), "0.00"))
                        _FNPensionCmp = (Format(((_FNTotalIncomePension * 0.02) / SocialExchangeRate), "0.00"))



                        _FNNetpay = Format((_FNNetpay - _FNPensionEmp), "0.00")

                        If _FNNetpay < 0 Then
                            _FNNetpay = 0
                        End If


                        'FNNetIncome
                        _Qry = "Update [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                        _Qry &= vbCrLf & "set FNTotalRecalPensionScheme=" & Val(_FNTotalIncomeSum)
                        _Qry &= vbCrLf & ", FNPensionSchemeRateEmp=" & Val(2)
                        _Qry &= vbCrLf & " ,FNPensionSchemeRateCmp=" & Val(2)
                        _Qry &= vbCrLf & " ,FNPensionScheme=" & Val(_FNPensionEmp)
                        _Qry &= vbCrLf & " , FNPensionSchemeCmp=" & Val(_FNPensionCmp)

                        _Qry &= vbCrLf & " ,FNNetpay=" & _FNNetpay

                        _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                        _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                        _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    End If





                End If






                'Dim _FNTotalIncomeSum As Double = 0


                'Dim _DtTotal As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                'If _DtTotal.Rows.Count > 0 Then
                '    _FNTotalIncomeSum = Val(_DtTotal.Rows(0)!FNTotalIncome.ToString)
                'End If
                '_DtTotal.Dispose()

                ''' check resgin   and  check  period 2 of month     _StartDate    _EndDate   _FDDateEnd
                '''  



                '''   If Val(_PayTerm) Mod 2 = 0 Or (_FDDateEnd >= _StartDate And _FDDateEnd <= _EndDate And _FDDateEnd <> "") Then      ''งวดสิ้นเดือน   กับ คนลาออก
                'If Val(_PayTerm) Mod 2 = 0 Then
                '    If (_FNTotalIncomeSum) >= 2 Then

                '        _FNTotalIncomeSum = (Format(((_FNTotalIncomeSum) * SocialExchangeRate), "0.000"))

                '        Dim _FNTotalIncomePension As Double = 0
                '        Dim _FNTotalIncomePensionDefault As Double = 0

                '        _Qry = " SELECT  FNHSysPensionRankID "
                '        _Qry &= vbCrLf & " ,[FNSeq],[FNTotalRecalFrom],[FNTotalRecalTo] "
                '        _Qry &= vbCrLf & " ,[FNCalPensionType],[FNTotalRecalDefault] "
                '        _Qry &= vbCrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].[dbo].[THRMCfgSocailKMPensionRank]  "
                '        _Qry &= vbCrLf & ""

                '        Dim _DtPensionRank As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '        For Each Rp As DataRow In _DtPensionRank.Select("FNTotalRecalFrom<=" & _FNTotalIncomeSum & " AND  FNTotalRecalTo>=" & _FNTotalIncomeSum & "")
                '            If (Rp!FNCalPensionType.ToString = "0") Then
                '                _FNTotalIncomePension = Val(Rp!FNTotalRecalDefault.ToString)
                '            Else
                '                _FNTotalIncomePension = Val(_FNTotalIncomeSum)
                '            End If


                '        Next

                '        Dim _FNPensionEmp As Double = 0
                '        Dim _FNPensionCmp As Double = 0

                '        '_FNPensionEmp = _FNTotalIncomePension * 0.02
                '        '_FNPensionCmp = _FNTotalIncomePension * 0.02

                '        '_FNNetpay = Format((_FNNetpay - (Format(((_FNPensionEmp) / SocialExchangeRate), "0.000"))), "0.00")

                '        '_FNPensionEmp = _FNTotalIncomePension * 0.02   
                '        '_FNPensionCmp = _FNTotalIncomePension * 0.02

                '        _FNPensionEmp = (Format(((_FNTotalIncomePension * 0.02) / SocialExchangeRate), "0.00"))
                '        _FNPensionCmp = (Format(((_FNTotalIncomePension * 0.02) / SocialExchangeRate), "0.00"))



                '        _FNNetpay = Format((_FNNetpay - _FNPensionEmp), "0.00")

                '        If _FNNetpay < 0 Then
                '            _FNNetpay = 0
                '        End If
                '        'FNNetIncome
                '        _Qry = "Update [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                '        _Qry &= vbCrLf & "set FNTotalRecalPensionScheme=" & Val(_FNTotalIncomeSum)
                '        _Qry &= vbCrLf & ", FNPensionSchemeRateEmp=" & Val(2)
                '        _Qry &= vbCrLf & " ,FNPensionSchemeRateCmp=" & Val(2)
                '        _Qry &= vbCrLf & " ,FNPensionScheme=" & Val(_FNPensionEmp)
                '        _Qry &= vbCrLf & " , FNPensionSchemeCmp=" & Val(_FNPensionCmp)

                '        _Qry &= vbCrLf & " ,FNNetpay=" & _FNNetpay

                '        _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                '        _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                '        _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                '    End If


                'End If




                'If _ShiftAmt > 0 Then
                '    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '001'," & _ShiftValue.ToString & "," & _ShiftAmt.ToString & ""

                '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                'End If

                'If _ShiftOTAmt > 0 Then
                '    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '007'," & _ShiftOTValue.ToString & "," & _ShiftOTAmt.ToString & ""

                '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                'End If

                'If _FNEmpDiligent > 0 Then
                '    If _FNDeligentPeriod = 0 Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    Else
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '009'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If
                'End If

                'If _AmtReturnVacation > 0 Then
                '    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '023'," & _ShiftValue.ToString & "," & _AmtReturnVacation.ToString & ""

                '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                'End If
                ''----------- เงินคืนพักร้อน-------------------------------



                'If _AmtReturnVacation > 0 Then

                '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_AmtReturnVacation.ToString) & " "
                '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTFinCode='023' "

                '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '023'," & _ShiftValue.ToString & "," & _AmtReturnVacation.ToString & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If

                'End If
                ''----------- เงินคืนพักร้อน-------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave (FTPayYear, FTPayTerm, FNHSysEmpID, FTLeaveType, FNTotalHour, FNTotalMinute, FNTotalPayHour, FNTotalPayMinute, FNTotalNotPayHour,FNTotalNotPayMinute)"
                _Qry &= vbCrLf & "  SELECT      '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTLeaveType,Convert(numeric(18,2), Sum(FNTotalMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalMinute) %60) /100.00)) , "
                _Qry &= vbCrLf & "  Sum(FNTotalMinute), Convert(numeric(18,2), Sum(FNTotalPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalPayMinute) %60) /100.00)), Sum(FNTotalPayMinute),  Convert(numeric(18,2),Sum(FNTotalNotPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalNotPayMinute) %60) /100.00)), SUM(FNTotalNotPayMinute)"
                _Qry &= vbCrLf & "  FROM THRTTransLeave "
                _Qry &= vbCrLf & " WHERE        (FNHSysEmpID = '" & Val(_EmpCode) & "') "
                _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' "
                _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "' "
                _Qry &= vbCrLf & "  GROUP BY   FNHSysEmpID, FTLeaveType"

                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            End If

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & "  	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate (FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & " FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate)"
            _Qry &= vbCrLf & " SELECT TOP 1  FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & "FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            _Qry &= vbCrLf & " SELECT FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate ( FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay)"
            _Qry &= vbCrLf & " SELECT  FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

        Next

        Return True

    End Function

    Public Shared Function CalculateWeekEnd_CVN(ByVal _User As String, ByVal _EmpCode As String,
          ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
          ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
          Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
          Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0,
          Optional FNStateSalaryType As Integer = 0, Optional FNWorkDayInWeek As Integer = 15, Optional FNWorkDayInMonth As Integer = 30) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim _Qry As String
        Dim _dt As DataTable
        Dim _dttemp As DataTable
        Dim _dttempdata As DataTable
        Dim _dttran As DataTable
        Dim _SalaryDevide As Integer = 0
        Dim FNVacationRetMin, FNVacationRetAmt As Double

        Dim _DtFin As New DataTable
        _DtFin.Columns.Add("FTFinCode", GetType(String))
        _DtFin.Columns.Add("FCTotalFinAmt", GetType(String))

        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTPaymentCode As String, _FTBankCode As String, _FNChildNotLearn As Double
        Dim _FCReduceDonate As Double, _FCLifeInsurance As Double
        Dim _FCLoanHouse As Double
        Dim _FCShare As Double, _FCReduceFather As Double, _FCReduceMother As Double
        Dim _FCReSpouseFather As Double, _FCReSpouseMother As Double, _FCReduceEducationSupport As Double, _FTMarryIncome As String
        Dim _FTCalSocialSta As String, _FTCalTaxSta As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FTEmpIdNo As String, _FTBranchCode As String, _FTAccNo As String, _FCLifeFeeMoney As Double
        Dim _FCOtherAdd As Double, _FTOtherAddCalculateSocial As String, _FTOtherAddCalculateTax As String
        Dim _FCOtherAddOt As Double, _FTOtherAddOtCalculateSocial As String, _FTOtherAddOtCalculateTax As String, _FCBFShiftMoney As Double
        Dim _FTShiftMoneyCalculateSocial As String, _FTShiftMoneyCalculateTax As String, _FCDiligent As Double
        Dim _FTDiligentCalculateSocial As String, _FTDiligentCalculateTax As String, _FCBonusEndYear As Double
        Dim _FTBonusEndCalculateSocial As String, _FCOtherDeduct As Double, _FTBonusEndCalculateTax As String
        Dim _FCShelter As Double, _FTShelterCalculateSocial As String, _FTShelterCalculateTax As String
        Dim _FCShareFactory As Double, _FTShareFactoryCalculateSocial As String
        Dim _FTShift As String
        Dim _FNTime, _FNNotRegis, _FNTimeOrg As Double
        Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
        Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
        Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
        Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double, _FNAbsentCutTime As Double
        Dim _FNLeavePay, _FNLeaveNotPay As Double, _TimeMin, _FNTimeMin, _FNOT1Min As Double
        Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
        Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
        Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
        Dim _GFNTime, _GFNNotRegis As Double
        Dim _GFNOT1 As Double, _GFNOT1_5 As Double, _GFNOT2 As Double, _GFNOT3 As Double, _GFNOT4 As Double
        Dim _GFNLeaveSick As Double, _GFNLeaveBusiness As Double
        Dim _GFNLeaveVacation As Double, _GFNLeavePregnant As Double, _GFNLeaveOrdain As Double
        Dim _GFNLeaveMarry As Double, _GFNLeaveOther As Double, _GFNLateNormalMin As Double
        Dim _GFNLateNormalCut As Double, _GFNLateOtMin As Double, _GFNLateOtCut As Double
        Dim _GFNLateMorning As Double, _GFNLateAfternoon As Double, _GFNAbsent, _GFNCutAbsent, _GFNAbsentCutTime As Double
        Dim _GFNLeavePay As Double, _GFNTimeMin, _GFNOT1Min As Double
        Dim _GFNOT1_5Min As Double, _GFNOT2Min As Double, _GFNOT3Min As Double, _GFNOT4Min As Double, _GFNLateMMin As Double
        Dim _GFNLateAfMin As Double, _GFNRetireMMin As Double, _GFNRetireAfMin As Double
        Dim _GFNRetireNormalCut As Double, _GFNRetireOtMin As Double, _GFNRetireOtCut As Double
        Dim _dtot As DataTable
        Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double
        Dim _FCAccumulateIncome As Double, _FCAccumulateSocial As Double, _FCAccumulateTax As Double, _FCAccumulateContributed As Double
        Dim _FTSatrtCalculateDate As String, _FTEndCalculateDate As String, _FNEmpDiligent As Double, _FTStateInDustin As String, _FNDeligentPeriod As Integer
        Dim _FTSatrtCalculateDateIns As String, _FTEndCalculateDateIns As String
        Dim _FNEmpBaht, _nBahtOt1 As Double, _nBahtOt15 As Double, _nBahtOt2 As Double, _nBahtOt3 As Double, _nBahtOt4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
        Dim _SocialRate As Double, _SocialRateCmp As Double
        Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
        Dim _TotalHoliDay As Integer
        Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String
        Dim _FNSlaryPerDayRetVa As Double
        Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double
        Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
        Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
        Dim _FTSlary, _FTDivCode, _FTPos As String
        Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
        Dim _Dtemp As DataTable
        Dim _SocialBefore, _SocialBeforeAmt, _SocialPayMax As Double
        Dim _FCAdd, _FTAddCalculateSocial, _FTAddCalculateTax, _FCDeduct, _TotalCalSso, _TotalCalTax, _TaxAmt As Double
        Dim _Gtotalleave, _GtotalleavePay, _GtotalleaveNotPay, _GtotalleavePayCalSso, _GtotalleavePayCalSsoAmt As Double
        Dim _dtLeave As DataTable
        Dim _LeaveCode As String = ""
        Dim _dtAddExpend As DataTable
        Dim _dtAddOtherAmt As DataTable
        Dim _dtAddOtherAmtshift As DataTable
        Dim FCModFather, FCModMother, FCModMateFather, FCModMateMother As Double
        Dim FCPremium, FCInterest, FCUnitRMF, FCUnitLTF, FCDeductDonate, FCDisabledDependents, FCDeductDonateStudy As Double
        Dim FCHealthInsurFatherMotherMate, FTHealthInsurIDFather, FTHealthInsurIDMother As Double
        Dim FTHealthInsurIDFatherMate, FTHealthInsurIDMotherMate As Double
        Dim FTTotalCalContributedAmt, FTContributedAmt, FTCmpContributedAmt, FTTotalCalContributedAcc As Double
        Dim FTAccumulateContributedAmtInYear As Double = 0
        Dim FTTotalCalWorkmen, FTWorkmenAmt, _FTMaxCalWorkmen, _FTMaxWorkmenRate, FTTotalCalWorkmenAcc As Double
        Dim _FTWorkmenAmtBefore, _FTTotalCalWorkmenBefore As Double
        Dim _ShiftAmt As Double = 0
        Dim _ShiftOTAmt As Double = 0
        Dim _ShiftValue As Double = 0
        Dim _ShiftOTValue As Double = 0
        Dim _WorkingDay As Double = 0
        Dim _THRMContributedFund As DataTable
        Dim _EmpDisTax As New HCfg.EmployeeDiscountTax
        Dim _EmpTaxYear As New HCfg.EmpTaxYear
        Dim _FNNetpayOrg As Double = 0.0
        Dim _FNNetpay As Double = 0.0
        Dim _AmtAddCalOT, _GAmtAddCalOT As Double
        Dim CountTerm As Integer = 0
        Dim _SPDateType, _TotalInstalment, _Instalment As Integer
        Dim _ContributedFundBeginPay As Boolean = False
        Dim FNStateCmpFund As Integer = 0
        Dim _DTHoliday As DataTable
        Dim _ShiftAdv As Double = 0
        Dim _AmtPlus As Double = 0
        Dim _GAmtPlus As Double = 0
        Dim FTHldType As Integer = 0
        Dim _AmtRetire As Double = 0
        Dim _WorkAge As Integer = 0
        Dim _AmtReturnVacation As Double = 0
        Dim _FNIncentiveAmt As Double = 0
        Dim _FNPayterm25Amt As Double = 0
        Dim _FTInsurType As Integer = 0
        Dim _DayAdjAdd As Double = 0
        Dim _WageAdjAdd As Double = 0
        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        Dim _FTStatePayHoliday As String = ""
        Dim _FTEmployeeCode As String = ""
        Dim _TmpFDDateEnd As String = ""
        Dim _DTEmpWorkDay As New DataTable
        Dim _BonusAmt As Double = 0
        Dim _Erode As Double = 0
        Dim _SpBonus As Double = 0
        Dim _EmpTypeCode As String
        Dim _dtAddErodePay As DataTable
        Dim WorkingMinutePerDay As Integer = 480
        Dim WorkingHourPerDay As Decimal = 8
        Dim _FNFundRate As Double = 0
        Dim _FCExpend As Double = 0
        Dim _FNNetpayBeforeExpend As Double = 0
        Dim _FNTotalRecalContributedAmt As Double = 0
        Dim FTTotalCmpCalContributedAmt As Double = 0

        _DTEmpWorkDay.Columns.Add("FNSalary", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNDay", GetType(Double))

        Dim _DTEmpHolidayDay As New DataTable
        _DTEmpHolidayDay.Columns.Add("FNSalary", GetType(Double))
        _DTEmpHolidayDay.Columns.Add("FNDay", GetType(Double))

        Dim _DTEmpPayLeaveSick As New DataTable
        _DTEmpPayLeaveSick.Columns.Add("FNSalary", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNDay", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNPayPer", GetType(Double))

        Dim _LeaveSickPay As Integer = 0

        _Qry = "SELECT TOP 1 FNCalType FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType WHERE FNHSysEmpTypeId=" & Val(_EmpType) & "  "
        Dim _TmpCalType As Integer = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "0"))


        _Qry = "SELECT TOP 1 FNStateCmpFund FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCmpSocialDiscountTaxConfig WHERE FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID) & "  "
        FNStateCmpFund = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

        If FTStaCalPayRoll = 0 Then
            _DateStartOfMonth = _StartDate  'วันแรกของเดือน
            _DateEndOfMonth = _EndDate 'วันแของเดือน
        Else
            _DateStartOfMonth = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
            _DateEndOfMonth = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        End If
        '----------------------------------   Variable  ------------------------------------

        If _PayTerm = "01" Then

            _Qry = "SELECT TOP 1  FNNetpay"
            _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll AS A WITH(NOLOCK)"
            _Qry &= vbCrLf & "  WHERE  (FTPayTerm = '25') "
            _Qry &= vbCrLf & " AND (FTPayYear = '" & (Integer.Parse(Val(_PayYear)) - 1).ToString("0000") & "')"
            _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ")"

            _FNPayterm25Amt = Double.Parse(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

        End If


        With _EmpTaxYear
            .FTAmt = 0 'เงินได้ก่อนหักค่าใช้จ่าย
            .FTExpenses = 0 'ค่าใช้จ่ายส่วนตัว
            .FTNetAmt = 0 'เงินได้หลังหักค่าใช้จ่าย
            .FTModEmp = 0 'ลดหย่อนส่วนตัว
            .FTModMate = 0 'ลดหย่อนคู่สมรส
            .FNChildNotLern = 0 'จำนวนบุตรไม่ศึกษา
            .FNChildLern = 0 'จำนวนบุตรศึกษา
            .FTChildNotLern = 0 'ลดหย่อนบุตรไม่ศึกษา
            .FTChildLern = 0 'ลดหย่อนบุตรศึกษา
            .FTInsurance = 0 'ลดหย่อนเบี้ยประกัน
            .FTProvidentfund = 0 'กองทุนเลียงชีพส่วนที่ไม่เกิน 10000
            .FTInterest = 0 'ดอกเบี้ยเงินกู้
            .FTSocial = 0 'ประกันสังคม
            .FTDonation = 0 'เงินบริจาค
            .FTProvidentfundOver = 0 'กองทุนเลียงชีพส่วนที่เกิน 10000
            .FTGPF = 0 'เงิน กบข.
            .FTSavingsFund = 0 'เงินกองทุนสงเคราะห์
            .FTCommutation = 0 'เงินชดเชยตามกฎหมายแรงงาน
            .FTUnitRMF = 0 'ค่าซื้อหน่วยลงทุน RTF
            .FTModFather = 0 'ลดหย่อนบิดา
            .FTModMother = 0 'ลดหย่อนมารดา
            .FTModFatherMate = 0 'ลดหย่อนบิดาคู่สมรส
            .FTModMotherMate = 0 'ลดหย่อนมารดาคู่สมรส
            .FTUnitLTF = 0 'ค่าซื้อหน่วยลงทุน LTF
            .FTDonationLern = 0 'เงินบริจาคเพื่อสนับสนุนการศึกษา
            .FTParentsHealthInsurance = 0 'เบี้ยประกันสุขภาพบิดามารดา
            .FTSupportSport = 0 'เงินสนับสนุนการกีฬา
            .FTAcquisitionOfProperty = 0 'ค่าซื้ออาคาร
            .FTPension = 0 'บำนาญ
            .FTTravel = 0 'ท่องเที่ยวในประเทศ
            .FTTotalCalTax = 0 'เงินได้สุทธิ
            .FTTotalTax = 0 'ภาษีที่ต้องจ่าย
        End With
        '------------------ GetConfig WeekEnd ----------------------------------

        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------
        _Qry = "SELECT FNSeqNo, FNAgeBegin, FNAgeEnd, FNEmpPay As FNEmpAmtPer,  FNCmpPay AS FNCmpAmtPer"
        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMContributions WITH(NOLOCK) "
        _Qry &= vbCrLf & "  WHERE  FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID) & " "
        _THRMContributedFund = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------

        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday
        '------------------ GetConfig Holiday ----------------------------------
        FNVacationRetMin = 0 : FNVacationRetAmt = 0
        _FTSatrtCalculateDate = _StartDate
        _FTEndCalculateDate = _EndDate
        _FTSatrtCalculateDateIns = _StartDate
        _FTEndCalculateDateIns = _EndDate
        _FNEmpDiligent = 0 : _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
        _FTStateInDustin = "" : _FNSlaryPerMonth = 0
        _FNSlaryPerDay = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0
        _FTEmpState = "" : _FNEmpBaht = 0 : _nBahtOt1 = 0
        _nBahtOt15 = 0 : _nBahtOt2 = 0 : _nBahtOt3 = 0
        _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
        _FCPayVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0
        _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0 : _SocialRateCmp = 0
        _SocialMinIncome = 0 : _SocialMaxIncome = 0
        _Complete = 0 : _Err = 0 : _FCSalary = -99
        CountTerm = 0
        _TotalInstalment = 0 : _Instalment = 0

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode,M.FTEmpCode AS FTEmployeeCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, M.FNEmpStatus AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"
        _Qry &= vbCrLf & " ,M.FNHSysDeptId AS FTDeptCode ,ET.FTEmpTypeCode"
        _Qry &= vbCrLf & "  ,M.FNHSysDivisonId AS FTDivCode, M.FNHSysSectId AS FTSectCode,  M.FNHSysUnitSectId AS FTUnitSecCode"
        _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
        _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
        _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
        _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
        _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
        _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
        _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
        _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
        _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
        _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide"
        _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday "

        _Qry &= vbCrLf & " ,ISNULL(SH.FCHour,0) AS FCHour ,ISNULL(M.FNFundRate,0) AS FNFundRate "

        _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "  LEFT OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS SH WITH (NOLOCK) ON M.FNHSysShiftID = SH.FNHSysShiftID"
        _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_EmpCode) & " ) "

        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each R As DataRow In _Dtemp.Rows

            _DtFin.Rows.Clear()
            _AmtAddCalOT = 0

            _FNFundRate = Val(R!FNFundRate.ToString)

            _SalaryDevide = Val(R!FNSalaryDivide.ToString)
            _FTStatePayHoliday = R!FTStatePayHoliday.ToString

            _FTInsurType = Val(R!FTInsurType.ToString)

            If _SalaryDevide <= 0 Then
                _SalaryDevide = 1
            End If

            WorkingMinutePerDay = 480
            WorkingHourPerDay = 8
            WorkingHourPerDay = Val(R!FCHour)
            WorkingMinutePerDay = (((Val(R!FCHour) \ 1) * 60) + ((Val(R!FCHour) Mod 1) * 100))

            _FTSlary = R!FTSalary.ToString : _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString
            _FTPaymentCode = R!FTPayCode.ToString : _FTBankCode = R!FTBnkCode.ToString
            _FTCalSocialSta = R!FTCalSocialSta.ToString : _FTCalTaxSta = R!FTCalTaxSta.ToString

            _EmpTypeCode = R!FTEmpTypeCode.ToString
            _FTDeptCode = R!FTDeptCode.ToString : _FTDivCode = R!FTDivCode.ToString
            _FTSectCode = R!FTSectCode.ToString
            _FTUnitCode = R!FTUnitSecCode.ToString : _FTPos = R!FTPositCode.ToString

            _FTEmpState = R!FTCalType.ToString
            _FTEmpIdNo = R!FTTaxNo.ToString 'R!FTEmpIdNo.ToString
            _FTBranchCode = R!FTBnkBchCode.ToString
            _FTAccNo = R!FTAccNo.ToString
            '---------------------------------------- ลดหย่อน------------------------------------
            _FNChildNotLearn = 0 : _FCReduceDonate = 0 : _FCLifeInsurance = 0 : _FCLoanHouse = 0 : _FCReduceEducationSupport = 0
            _FCShare = 0 : _FCReduceFather = 0 : _FCReduceMother = 0 : _FCReSpouseFather = 0 : _FCReSpouseMother = 0 : _FTMarryIncome = 0
            _FCLifeFeeMoney = 0

            FCModFather = 0 : FCModMother = 0 : FCModMateFather = 0 : FCModMateMother = 0
            FCPremium = 0 : FCInterest = 0 : FCUnitRMF = 0 : FCUnitLTF = 0 : FCDeductDonate = 0 : FCDisabledDependents = 0 : FCDeductDonateStudy = 0
            FCHealthInsurFatherMotherMate = 0 : FTHealthInsurIDFather = 0 : FTHealthInsurIDMother = 0
            FTHealthInsurIDFatherMate = 0 : FTHealthInsurIDMotherMate = 0

            FTTotalCalContributedAmt = 0 : FTContributedAmt = 0 : FTCmpContributedAmt = 0
            FTTotalCalWorkmen = 0 : FTWorkmenAmt = 0 : _FTMaxCalWorkmen = 0 : _FTMaxWorkmenRate = 0 : FTTotalCalWorkmenAcc = 0
            _FNIncentiveAmt = 0
            _TmpFDDateEnd = _FDDateEnd


            If _TmpFDDateEnd <> "" Then

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,-1,Convert(Datetime,'" & _TmpFDDateEnd & "')),111)"
                _TmpFDDateEnd = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

            End If

            '--------- อายุงาน  เดือน
            _WorkAge = Val(R!FNWorkAge.ToString)

            If _FTEmpState = "2" Then
                _TotalInstalment = 12
            Else
                _TotalInstalment = 24
            End If

            _ContributedFundBeginPay = False
            If FNStateCmpFund > 0 Then
                If R!FDFundBegin.ToString <> "" Then
                    If R!FDFundBegin.ToString < _FTEndCalculateDate Then
                        If R!FDFundEnd.ToString <> "" Then
                            If R!FDFundEnd.ToString > _FTEndCalculateDate Then
                                _ContributedFundBeginPay = True
                            End If
                        Else
                            _ContributedFundBeginPay = True
                        End If
                    End If
                End If
            End If

            _Instalment = Val(_PayTerm)
            _FNIncentiveAmt = 0

            '-------------คำนวณ Incentive-------------------------------------------
            Select Case _FTInsurType
                Case 1

                    '---------ประกันเป็นวัน
                    _Qry = "SELECT SUM (CASE WHEN ISNULL(FNAmtFixedIncentive,0) >0 THEN  "
                    _Qry &= vbCrLf & " ( CASE WHEN ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END) < ISNULL(FNAmtFixedIncentive,0)  THEN ISNULL(FNAmtFixedIncentive,0)  ELSE  ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END)  END ) "
                    _Qry &= vbCrLf & " ELSE ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END) END   ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case 2
                    '---------ประกันเป็นเป็นงวด-------------------------------------------

                    _Qry = "SELECT  ( CASE WHEN ISNULL(FNAmtFixedIncentive,0) >0 THEN  (CASE WHEN (CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END)  < ISNULL(FNAmtFixedIncentive,0) THEN ISNULL(FNAmtFixedIncentive,0) ELSE (CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END)  END ) ELSE (CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END) END  ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM ( SELECT SUM(ISNULL(FNNetAmt,0) ) AS FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) AS FNNetProAmt"
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _Qry &= vbCrLf & " ) AS M"



                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case Else
            End Select
            '-------------------------------------

            '---------------------------------------- ลดหย่อน------------------------------------
            _Qry = " SELECT      FNHSysEmpID, FTChildSex, FTStudySta "
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeChild WITH(NOLOCK) "
            _Qry &= vbCrLf & " WHERE   (FNHSysEmpID = " & Val(_EmpCode) & ")"
            _dttempdata = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


            Dim _ChildNotStudy As Integer = 0
            Dim _ChildStudy As Integer = 0

            For Each _Drow As DataRow In _dttempdata.Rows

                If _Drow!FTStudySta.ToString = "1" Then
                    _ChildStudy = _ChildStudy + 1
                Else
                    _ChildNotStudy = _ChildNotStudy + 1
                End If

            Next

            _FCAccumulateIncome = 0 : _FCAccumulateSocial = 0 : _FCAccumulateTax = 0 : _FCAccumulateContributed = 0
            FTTotalCalContributedAcc = 0 : FTTotalCalWorkmenAcc = 0


            'FTTotalCalContributedAmt
            'FTTotalCmpCalContributedAmt
            'old FTTotalCalContributedAcc
            '----------- Get Summary ------------------
            LoadIncomeTax(_FTEmpIdNo, _PayYear, _PayTerm, _FCAccumulateIncome, _FCAccumulateTax, _FCAccumulateSocial, CountTerm, FTTotalCalContributedAmt, FTTotalCalWorkmenAcc, Integer.Parse(Val(_EmpCode)), FTTotalCmpCalContributedAmt, _FCAccumulateContributed)
            '----------- Get Summary ------------------

            With _EmpDisTax

                .BaseSlary = 0
                .OtherSlary = 0
                .BeforeIncom = _FCAccumulateIncome
                .BeforeTax = _FCAccumulateTax

                .BeforeContributed = _FCAccumulateContributed
                .FTMateIncome = (R!FTMateIncome.ToString = "0")
                ' ----------------------------------------- Clear Discount Tax Value -------------------------
                .Cfg_ModChildAllowanceRateNotStudied = _ChildNotStudy 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
                .Cfg_ModChildAllowanceRateStudy = _ChildStudy 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
                '-------------ลดหย่อนบุตร-----------------

                '--- หักเงินสมทบเข้ากองทุนเลี้ยงชีพก่อนหน้านี้ ทั้งปี
                .Cfg_ContributedDeducToTheFund = FTTotalCalContributedAmt 'TTotalCalContributedAcc 'ลูกจ้าง

                '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ

                .Cfg_ModDeductibleDonations = CDbl(Val(R!FCDeductDonate.ToString)) ' ' % ลดหย่อนเงินบริจาค
                .Cfg_ModDeductDonateStudy = CDbl(Val(R!FCDeductDonateStudy.ToString))
                .Cfg_ModFatherReduction = CDbl(Val(R!FCModFather.ToString)) '  'ลดหย่อนบิดา
                .Cfg_ModInsurancePremiums = CDbl(Val(R!FCPremium.ToString)) '  'ค่าเบี้ยประกันชีวิตส่วนบุคคล
                .Cfg_ModLendingforHousing = CDbl(Val(R!FCInterest.ToString)) ' 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย

                .Cfg_ModLTFChk = CDbl(Val(R!FCUnitLTF.ToString)) 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
                .Cfg_ModMateFatherReduction = CDbl(Val(R!FCModMateFather.ToString)) ' 'ลดหย่อนบิดา คู่สมรส
                .Cfg_ModMateMotherReduction = CDbl(Val(R!FCModMateMother.ToString)) '  'ลดหย่อนมารดา คู่สมรส
                .Cfg_ModMotherReduction = CDbl(Val(R!FCModMother.ToString)) ' 'ลดหย่อนมารดา

                .Cfg_ModPersonalExpenChk = 0 ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน

                .Cfg_ModRateReductionsByMarital = (IIf(R!FTMaritalCode.ToString = "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
                .Cfg_ModRateReductionsBySingle = (IIf(R!FTMaritalCode.ToString <> "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ โสด 

                .Cfg_ModRMFChk = CDbl(Val(R!FCUnitRMF.ToString)) '  ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 
                .FCDisabledDependents = CDbl(Val(R!FCDisabledDependents.ToString)) '  'ค่าอุปการะเลี้ยงดูคนพิการหรือทุพพลภาพ
                .FCHealthInsurFatherMotherMate = CDbl(Val(R!FCHealthInsurFatherMotherMate.ToString)) '   'เบี้ยประกันสุขภาพบิดามารดาของผู้มีเงินได้และคู่สมสร

                .FCExceptAgeOver = CDbl(Val(R!FCExceptAgeOver.ToString)) ' ' 'รายการเงินได้ที่ได้รับยกเว้น ของผู้มีเงินได้ตั้งแต่ 65 ปีขึ้นไป 
                .FCExceptAgeOverMate = CDbl(Val(R!FCExceptAgeOverMate.ToString)) ' 'รายการเงินได้ที่ได้รับยกเว้น ของคู่สมรสอายุตั้งแต่ 65 ปีขึ้นไป
                '----------------------------------------------------
            End With
            '---------------------------------------- ลดหย่อน------------------------------------

            _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = "0" : _FTOtherAddCalculateTax = "0" : _FCOtherAddOt = 0
            _FTOtherAddOtCalculateSocial = "0" : _FTOtherAddOtCalculateTax = "0" : _FCBFShiftMoney = 0 : _FTShiftMoneyCalculateSocial = "0"
            _FTShiftMoneyCalculateTax = "0" : _FCDiligent = 0 : _FTDiligentCalculateSocial = "0" : _FTDiligentCalculateTax = "0"
            _FCBonusEndYear = 0 : _FTBonusEndCalculateSocial = "0" : _FTBonusEndCalculateTax = "0" : _FCShelter = 0
            _FTShelterCalculateSocial = "0" : _FTShelterCalculateTax = "0" : _FCShareFactory = 0 : _FTShareFactoryCalculateSocial = "0"
            _FNNetpayOrg = 0.0
            _FNNetpay = 0.0
            _FCSalary = -99
            _FTSlary = (_FTSlary)

            If IsNumeric(_FTSlary) Then
                _MSlary = _FTSlary
                _FCSalary = CDbl(_FTSlary)

                '------------------ คำนวณคืนพักร้อน ----------------------------

                If (_ReturnVacation > 0) Or (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                    Dim _Month As Integer = 0
                    Dim _Leave As Double = 0
                    Dim _SumLeaveVacation As Double = 0
                    Dim _ResetDate As String = ""

                    Dim _DateReset As String
                    Dim _DateSetEmpReset As String
                    Dim _DateEndYaer As String = _PayYear & "/12/31"


                    _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
                    _Qry &= vbCrLf & "  FROM"
                    _Qry &= vbCrLf & " ("
                    _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK )"
                    _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
                    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                    _Qry &= vbCrLf & " ) As T"

                    _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    If _PayTerm = "24" Or _PayTerm = "25" Then
                        _DateReset = (Val(_PayYear) + 1).ToString("0000") & Microsoft.VisualBasic.Right(_DateReset, 6)
                    End If

                    _DateSetEmpReset = HI.UL.ULDate.AddDay(_DateReset, -1)

                    If _FDDateStart < _DateReset And _DateReset <> "" Then

                        If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                            '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                            '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                            _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),Convert(varchar(10),DateAdd(day,-1,'" & (_DateReset) & "')),111),'" & (_EndDate) & "') AS FNEmpVacation"
                            _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                            _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                        Else

                            If (_TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                                If _PayTerm = "24" Or _PayTerm = "25" Then

                                Else
                                    _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),Convert(varchar(10),DateAdd(day,-1,'" & (_DateReset) & "')),111),'" & (_EndDate) & "') AS FNEmpVacation"
                                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                                    _Leave = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                                End If

                            End If
                            Dim VacationLeaveType As String = ""
                            _Qry = " SELECT TOP 1 FTCfgData"
                            _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.TSESystemConfig AS Z WITH(NOLOCK) "
                            _Qry &= vbCrLf & " WHERE  (FTCfgName = N'VacationLeaveType')"

                            VacationLeaveType = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_SECURITY, "0")
                            If VacationLeaveType = "1" Then
                                _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Th(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                                _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                            Else
                                _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(day,-1,DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "'))),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                                _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                                _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                            End If



                        End If

                        _Leave = _Leave + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                        'If _PayTerm = "24" Or _PayTerm = "25" Then

                        'Else

                        '    If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                        '        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        '        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                        '        _Leave = _Leave + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                        '    End If

                        'End If

                        If _Leave > 0 And _DateReset <> "" Then

                            If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                                _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                                _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                                _Qry &= vbCrLf & "	   AND FNHSysEmpID =" & Val(_EmpCode) & " "
                                _Qry &= vbCrLf & " 	   AND  FTDateTrans >= '" & (_DateReset) & "'"

                            Else

                                _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                                _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                                _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                                _Qry &= vbCrLf & " 	AND  FTDateTrans < '" & (_DateReset) & "'"
                                _Qry &= vbCrLf & " 	AND  FTDateTrans >=Convert(varchar(10),DateAdd(year,-1,Convert(Datetime,'" & (_DateReset) & "')),111)"

                            End If

                            _SumLeaveVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                            If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                                _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                                _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                                _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                                _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"

                                _SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                            End If

                            If _ReturnVacation <= 0 Then

                                _Qry = " SELECT   TOP 1 FCCfgRetValue"
                                _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigReturnVacationSet WITH(NOLOCK) "
                                _Qry &= vbCrLf & "  WHERE      (FNCalType =" & Val(_EmpType) & ")"

                                _ReturnVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

                            End If

                            _FNSlaryPerDayRetVa = HI.Conn.SQLConn.GetField("Select Top 1 FNSalary From THRTPayRoll WITH(NOLOCK) where  FNHSysEmpID = " & Val(_EmpCode) & " and  FTPayYear +'/'+FTPayTerm  <'" & _PayYear & "/" & _PayTerm & "'  Order by FTPayYear +'/'+FTPayTerm DESC ", Conn.DB.DataBaseName.DB_HR, "0")

                            If _FTEmpState = "2" Or _FTEmpState = "3" Then
                                _FNSlaryPerDay = CDbl(Format(_FCSalary / 30, "0.00"))
                                _FNSlaryPerDayRetVa = CDbl(Format(_FNSlaryPerDayRetVa / 30, "0.00"))
                            Else
                                _FNSlaryPerDay = _FCSalary

                            End If

                            If _Leave > (_SumLeaveVacation / WorkingMinutePerDay) Then

                                FNVacationRetMin = (_Leave * WorkingMinutePerDay) - _SumLeaveVacation

                                If FNVacationRetMin <= 0 Then
                                    FNVacationRetMin = 0
                                End If

                                FNVacationRetAmt = 0

                                _AmtReturnVacation = CDbl(Format((((_Leave * WorkingMinutePerDay) - (_SumLeaveVacation)) * (_ReturnVacation * (_FNSlaryPerDayRetVa / WorkingMinutePerDay))), "0.00"))

                                FNVacationRetAmt = _AmtReturnVacation

                            End If

                        End If
                    End If

                End If
                '------------------ คำนวณคืนพักร้อน ----------------------------

                _SocialMinIncome = HCfg.HSocialRate.SocialIncomeMin
                _SocialMaxIncome = HCfg.HSocialRate.SocialIncomeMax
                _SocialRate = HCfg.HSocialRate.CalSocialRate
                _SocialRateCmp = HCfg.HSocialRate.CalSocialRateCmp

                _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
                _AmtPlus = 0

                _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                For Each R3 As DataRow In _dtot.Rows

                    Select Case R3!FTCfgOTCode.ToString.ToUpper
                        Case "01"
                            _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "02"
                            _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "03"
                            _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "04"
                            _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "05"
                            _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                    End Select

                Next

                '---------รายได้รายหัก อื่นๆ-------------------------
                _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay,"
                _Qry &= vbCrLf & " FN.FTStaLatePerDay,FN.FTStaAbsentPerDay,FN.FTStaLeavePerDay,FN.FTStaVacationPerDay,FN.FTStaMaternityleaveNotpayPerDay"
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"

                If _EmpCalType = "0" Then
                    If Val(_PayTerm) Mod 2 = 0 Then
                        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                    Else
                        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                    End If
                End If
                _Qry &= vbCrLf & "UNION  "
                _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial,  0 As FCFinAmt   , FM.FTFinType"
                _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay,"
                _Qry &= vbCrLf & " FN.FTStaLatePerDay,FN.FTStaAbsentPerDay,FN.FTStaLeavePerDay,FN.FTStaVacationPerDay,FN.FTStaMaternityleaveNotpayPerDay"

                _Qry &= vbCrLf & " FROM        [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)   INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE    (FM.FTFinType = '1' OR FM.FTFinType = '2')   and FN.FTFinCode ='008' "

                If _EmpCalType = "0" Then
                    If Val(_PayTerm) Mod 2 = 0 Then
                        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                    Else
                        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                    End If
                End If
                _Qry &= vbCrLf & " and FN.FTFinCode  not in (  Select FTFinCode From [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin  WITH (NOLOCK)  "
                _Qry &= vbCrLf & " WHERE    (FNHSysEmpID = " & Val(_EmpCode) & ") )"

                ' _Qry &= vbCrLf & "  AND FTPayType <> '" & IIf(_EmpCalType = "0" Or (Val(_PayTerm) Mod 2 = 0), "", "1") & "' "

                _dtAddOtherAmt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
                _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
                _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
                _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet"
                _Qry &= vbCrLf & "  WHERE        (FTFinCode = N'001') OR  (FTFinCode = N'007') "
                _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '_Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                '_Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                '_Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                '_Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                '_Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                '_Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"
                '_Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                '_Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                '_Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                '_Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                '_Qry &= vbCrLf & "  AND FN.FTFinCode = '012'"

                '_dtAddErodePay = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _GAmtAddCalOT = 0
                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTStaCalOT='1' AND FTPayType='0' ")
                    _GAmtAddCalOT = _GAmtAddCalOT + Val(R2!FCFinAmt.ToString)
                Next

                _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = 0 : _FTOtherAddCalculateTax = 0 : _FCOtherDeduct = 0

                '---------------- Adjust Before Calculate------------------------------------
                _Qry = " SELECT        FN.FTStaTax, FN.FTStaSocial, (ISNULL(BF.FCFinAmt,0))  AS FCFinAmt, FM.FTFinType,ISNULL(BF.FNDay,-1) As FNDay,BF.FTFinCode "
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE        (BF.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "')"
                _Qry &= vbCrLf & "  AND (BF.FTPayTerm = '" & HI.UL.ULF.rpQuoted(_PayTerm) & "') "
                _Qry &= vbCrLf & " AND (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"

                If _AmtReturnVacation > 0 Then

                    _Qry &= vbCrLf & " UNION ALL "
                    _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial, " & _AmtReturnVacation & "  AS FCFinAmt, FM.FTFinType,-1 As FNDay,FM.FTFinCode "
                    _Qry &= vbCrLf & " FROM     [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)  INNER JOIN"
                    _Qry &= vbCrLf & "          [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE (FM.FTFinCode='023')"

                End If

                _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                For Each R2 As DataRow In _dt.Select("FNDay<=0")
                    Select Case R2!FTFinType.ToString
                        Case "1"
                            _FCOtherAdd = _FCOtherAdd + Val((R2!FCFinAmt.ToString))

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax + Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial + Val((R2!FCFinAmt.ToString))

                        Case "2"

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax - Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial - Val((R2!FCFinAmt.ToString))

                            _FCOtherDeduct = _FCOtherDeduct + Val((R2!FCFinAmt.ToString))
                    End Select
                Next

                _DayAdjAdd = 0
                _WageAdjAdd = 0

                For Each R2 As DataRow In _dt.Select("FNDay> 0")

                    _DayAdjAdd = _DayAdjAdd + Val((R2!FNDay.ToString))
                    _WageAdjAdd = _WageAdjAdd + Val((R2!FCFinAmt.ToString))

                Next

                _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
                _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= " & WorkingMinutePerDay & " THEN " & WorkingMinutePerDay & "   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= " & WorkingMinutePerDay & " THEN " & WorkingMinutePerDay & "   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= " & WorkingMinutePerDay & " THEN " & WorkingMinutePerDay & " ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
                _Qry &= vbCrLf & " , FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_EmpCode) & " )"

                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_DateStartOfMonth) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_DateEndOfMonth) & "' "
                Else
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                End If

                _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

                _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	"
                _Qry &= vbCrLf & " ,case when ISNULL(T.FNTimeMin,0)+ ISNULL(T.FNSpecialTimeMin,0) > 0 then  (ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0)  )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  )  else  ISNULL(T.FNTimeMin,0)  end    AS FNTime"
                _Qry &= vbCrLf & " 	,ISNULL(T.FNTimeMin,0) AS TimeMin , ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT1_5,0) AS FNOT1_5"

                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT2,0 ) AS FNOT2  , ISNULL(T.FNOT3,0) AS FNOT3"
                ' _Qry &= vbCrLf & " , case when ISNULL(T.FNOT3,0) > 0 then   Convert(numeric(18,2),	( ( ISNULL(T.FNOT3Min,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  )) / 60) 	 + Convert(numeric(18,2),((( ( ISNULL(T.FNOT3Min,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0)  )) %60) /100.00))  else ISNULL(T.FNOT3,0)  end  AS FNOT3 "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT4,0) AS FNOT4"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(T.FNLateNormalCut,0 )   AS FNLateNormalCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateOtMin,0) As FNLateOtMin,ISNULL(T.FNLateOtCut,0) As FNLateOtCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateMMin,0) As FNLateMorning"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateAfMin,0) AS FNLateAfternoon,Isnull(T.FNAbsentCut,0) AS FNAbsentCut "
                _Qry &= vbCrLf & " 	,ISNULL(T.FNAbsent,0 ) AS FNAbsent_Cut "
                _Qry &= vbCrLf & " 	,ISNULL(T.FNCutAbsent,0) AS FNAbsent "
                _Qry &= vbCrLf & " ,case when  ISNULL(T.FNTimeMin,0)  + ISNULL(T.FNSpecialTimeMin,0)  > 0 then (ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) ) else  ISNULL(T.FNTimeMin,0)  end  AS FNTimeMin"
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0)) As FNTimeMinOrg"
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1Min,0) As FNOT1Min  "
                ' _Qry &= vbCrLf & " , ISNULL(T.FNOT1_5Min,0) As FNOT1_5Min "
                _Qry &= vbCrLf & " ,case when  ISNULL(T.FNOT1_5Min,0)  > 0 then (ISNULL(T.FNOT1_5Min,0)  + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) ) else  ISNULL(T.FNOT1_5Min,0)  end  AS  FNOT1_5Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNOT2Min,0) As FNOT2Min "
                '_Qry &= vbCrLf & " , ISNULL(T.FNOT3Min,0) As FNOT3Min"
                _Qry &= vbCrLf & " ,case when  ISNULL(T.FNOT3Min,0)  > 0 then (ISNULL(T.FNOT3Min,0)  + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) ) else  ISNULL(T.FNOT3Min,0)  end  AS  FNOT3Min"
                _Qry &= vbCrLf & " , ISNULL(FNOT4Min,0) As FNOT4Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNLateMMin,0) As FNLateMMin "
                _Qry &= vbCrLf & " , ISNULL(T.FNLateAfMin,0) As FNLateAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireMMin,0) As FNRetireMMin "
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireAfMin,0 )  As FNRetireAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireNormalCut,0) As FNRetireNormalCut "
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireOtMin,0) As FNRetireOtMin"
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireOtCut,0) As FNRetireOtCut,FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"

                _Qry &= vbCrLf & " ,ISNULL(SH.FCHour,0) AS FCHour"

                _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"
                _Qry &= vbCrLf & " ,CASE WHEN T.FTWeekDay=1 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSunday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSunday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=2 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTMonday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTMonday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=3 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTTuesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTTuesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=4 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTWednesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTWednesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=5 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTThursday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTThursday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=6 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTFriday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTFriday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=7 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSaturday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSaturday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  ELSE '0' END AS FTWeekly,ISNULL(FTStateAccept,'') AS FTStateAccept "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
                _Qry &= vbCrLf & "   INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK)  ON  T.FNHSysEmpID =  M.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeWeekly AS EHL WITH (NOLOCK) ON T.FNHSysEmpID=EHL.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmpTypeWeeklySpecial AS ETHL WITH (NOLOCK) ON T.FTDateTrans = ETHL.FDHolidayDate AND M.FNHSysEmpTypeId=ETHL.FNHSysEmpTypeId"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS SH WITH (NOLOCK) ON T.FNHSysShiftID = SH.FNHSysShiftID"

                _Qry &= vbCrLf & "  WHERE (T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "'  "

                If _FDDateEnd <> "" Then
                    _Qry &= vbCrLf & " 	AND T.FTDateTrans < '" & HI.UL.ULDate.ConvertEnDB(_FDDateEnd) & "'  "
                End If
                If _FTEmpState <> "2" And _FTEmpState <> "3" Then ' คำนวณค่าแรงพนักงานรายเดือน
                    _Qry &= vbCrLf & " 	AND T.FTStateAccept = '1'  "
                End If

                _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '---------------Get Trans Daily--------------------------------------
                _GFNTime = 0 : _GFNNotRegis = 0 : _GFNOT1 = 0 : _GFNOT1_5 = 0
                _GFNOT2 = 0 : _GFNOT3 = 0 : _GFNOT4 = 0 : _GFNLeaveSick = 0 : _GFNLeaveBusiness = 0
                _GFNLeaveVacation = 0 : _GFNLeavePregnant = 0 : _GFNLeaveOrdain = 0 : _GFNLeaveMarry = 0
                _GFNLeaveOther = 0 : _GFNLateNormalMin = 0 : _GFNLateNormalCut = 0 : _GFNLateOtMin = 0
                _GFNLateOtCut = 0 : _GFNLateMorning = 0 : _GFNLateAfternoon = 0
                _GFNAbsent = 0 : _GFNCutAbsent = 0 : _GFNLeavePay = 0 : _GFNTimeMin = 0 : _GFNOT1Min = 0 : _GFNOT1_5Min = 0
                _GFNOT2Min = 0 : _GFNOT3Min = 0 : _GFNLateMMin = 0 : _GFNLateAfMin = 0 : _GFNRetireMMin = 0
                _GFNRetireAfMin = 0 : _GFNRetireNormalCut = 0 : _GFNRetireOtMin = 0 : _GFNRetireOtCut = 0
                _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
                _Gtotalleave = 0 : _GtotalleavePay = 0 : _GtotalleaveNotPay = 0 : _GtotalleavePayCalSso = 0 : _GtotalleavePayCalSsoAmt = 0
                _TotalHoliDay = 0 : _GFNAbsentCutTime = 0
                _FNAbsentCutTime = 0
                '------------------- เริ่มการคำนวณรายวัน
                Dim _oHoliday As Integer = 0
                _TotalWorkDay = 0
                _ShiftAmt = 0
                _ShiftValue = 0
                _ShiftOTValue = 0
                _ShiftOTAmt = 0
                _FCAdd = 0 : _FTAddCalculateSocial = 0 : _FTAddCalculateTax = 0 : _FCDeduct = 0
                _GAmtPlus = 0


                '_DtFin เงินได้ของพนักงานรายเดือน แต่มีเงือนไขต่อวัน

                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='2' AND FTFinType='1'  AND FTPayType='1' ")
                    _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                Next


                If _FDDateStart > _FTSatrtCalculateDate Then _FTSatrtCalculateDate = _FDDateStart

                Do While _FTSatrtCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTSatrtCalculateDate < _FDDateEnd)

                    _oHoliday = 0
                    FTHldType = 0
                    Dim _NewSlary As String

                    _Qry = "  SELECT      TOP 1   FNCurrentSlary  AS AMT"
                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK) "
                    _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "') "
                    _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    _FCSalary = _MSlary
                    If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    _Holiday = ""

                    For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                        _Holiday = "H"
                        FTHldType = Val(IR!FTHldType.ToString)
                        Exit For
                    Next

                    _FTShift = ""

                    _FNTime = 0
                    _FNNotRegis = 0
                    _FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
                    _FNOT3 = 0 : _FNOT4 = 0
                    _FNLateNormalMin = 0 : _FNLateNormalCut = 0
                    _FNLateOtMin = 0 : _FNLateOtCut = 0
                    _FNLateMorning = 0 : _FNLateAfternoon = 0
                    _LateCutAbsent = 0 : _FNAbsent = 0
                    _FNTimeMin = 0 : _FNOT1Min = 0
                    _FNOT1_5Min = 0 : _FNOT2Min = 0
                    _FNOT3Min = 0 : _FNOT4Min = 0
                    _FNLateMMin = 0 : _FNLateAfMin = 0
                    _FNRetireMMin = 0 : _FNRetireAfMin = 0
                    _FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
                    _FNRetireOtMin = 0 : _FNRetireOtMin = 0
                    _FNRetireOtCut = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _AmtAddCalOT = 0
                    _GtotalleavePayCalSso = 0
                    _LeaveCode = ""
                    _FNAbsentCutTime = 0
                    _TimeMin = 0
                    Dim _AddPaySp, _AddPayErode As Double
                    Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""

                    Dim _FTin1 As String = "" : Dim _FTOut1 As String = "" : Dim _FTIn2 As String = "" : Dim _FTOut2 As String = ""

                    Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                    For Each R2 In _R

                        _AddPayErode = 0
                        _AddPaySp = 0
                        _FTShift = R2!FTShift.ToString
                        _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                        _FNTimeOrg = Val(R2!FNTimeMinOrg.ToString)
                        _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                        _TimeMin = IIf(Val(R2!TimeMin.ToString) < 0, 0, Val(R2!TimeMin.ToString))
                        _FNNotRegis = Val(R2!FNNotRegis.ToString)
                        _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                        _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                        _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                        _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                        _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                        _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent_Cut.ToString)
                        _FNAbsentCutTime = Val(R2!FNAbsent.ToString)

                        _FNOT1Min = Val(R2!FNOT1Min.ToString)
                        _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                        _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                        _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                        _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                        _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                        _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                        _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                        _InOT = R2!FTIn3.ToString
                        _OutOT = R2!FTOut3.ToString

                        _Over = R2!FTOverClock.ToString

                        _FTin1 = R2!FTIn1.ToString : _FTOut1 = R2!FTOut1.ToString : _FTIn2 = R2!FTIn2.ToString : _FTOut2 = R2!FTOut2.ToString

                        WorkingHourPerDay = Val(R2!FCHour)
                        WorkingMinutePerDay = (((Val(R2!FCHour) \ 1) * 60) + ((Val(R2!FCHour) Mod 1) * 100))

                        If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))
                            For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")

                                If Not (RFin!FTStaCheckLate.ToString = "1" And (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))) Then
                                    _ShiftValue = CDbl(Format((_ShiftValue / WorkingMinutePerDay) * _FNTimeOrg, "0.00"))
                                Else
                                    _ShiftValue = CDbl(Format((_ShiftValue / WorkingMinutePerDay) * _FNTime, "0.00"))
                                End If

                            Next

                            _TotalWorkDay = _TotalWorkDay + 1

                            _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                            If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                _SPDateType = 0

                                _Holiday = ""

                                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _Holiday = "H"
                                    Exit For
                                Next

                                If _Holiday <> "" Then _SPDateType = 2

                                Dim _StateLeaveOther As Boolean = False
                                Dim _StateLeavacation As Boolean = False
                                Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                Dim _SumLeave As Integer = 0

                                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                    If Val(sR!LeaveType) = 1 Then
                                        _StateLeavacation = True
                                    Else
                                        _StateLeaveOther = True
                                    End If

                                    If Val(sR!LeaveType) = 2 Then
                                        _StateFTStaMaternityleaveNotpay = True
                                    End If

                                Next

                                '--------------------------- ค่ากะ -------------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _ShiftAmt = _ShiftAmt + _ShiftValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ -------------------------------------


                                '****************************** Bonus 

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='008' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        Dim _Amt As Double = 0
                                        Dim _Cmd As String = ""
                                        _Cmd = "Select Top 1 isnull(FNAmt,0) AS  FNAmt From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus with(nolock)"
                                        _Cmd &= vbCrLf & "where FNHSysEmpID=" & Integer.Parse(_EmpCode)
                                        _Cmd &= vbCrLf & "and FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'"
                                        _Amt = Double.Parse(HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "0"))
                                        _BonusAmt = _BonusAmt + _Amt

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _Amt
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _Amt
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _Amt
                                    End If
                                Next


                                '****************************** End Bonus

                                '--------------------------- ค่าสึกหรอรายวัน -------------------------------------


                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='035' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    Dim _Amt As Double '= Val(RFin!FCFinAmt.ToString)
                                    Dim _AmtPerMin As Double = 0
                                    Dim _AmtPerDay As Double = Val(RFin!FCFinAmt)

                                    'If (_Erode = 0) Then
                                    '    _Erode = _Amt
                                    'End If

                                    '_AmtPerDay = _Amt / 30
                                    _AmtPerMin = _AmtPerDay / WorkingMinutePerDay

                                    If _StatePass Then
                                        '_Erode = _Erode + Val(RFin!FCFinAmt.ToString)
                                        'If (_FNTimeMin >= 480) Then
                                        If (_TimeMin >= WorkingMinutePerDay) Then
                                            _Erode = _Erode + _AmtPerDay
                                            _Amt = _AmtPerDay
                                            _AddPayErode = _AmtPerDay
                                            _AddPayErode = System.Math.Round(_AddPayErode, 2)
                                        Else
                                            '_Erode = _Erode + (_AmtPerMin * _FNTimeMin)
                                            '_Amt = (_AmtPerMin * _FNTimeMin)
                                            _Erode = _Erode + (_AmtPerMin * _TimeMin)
                                            _Amt = (_AmtPerMin * _TimeMin)
                                            _AddPayErode = (_AmtPerMin * _TimeMin)
                                            _AddPayErode = System.Math.Round(_AddPayErode, 2)
                                        End If

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _Amt
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _Amt
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _Amt
                                    End If
                                Next

                                '--------------------------- เงินพิเศษรายวัน -------------------------------------


                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='032' ")
                                    Dim _StatePass As Boolean = True




                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)

                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    Dim _AmtPerDay As Double = Val(RFin!FCFinAmt) '.ToString("####.00"))


                                    If _StatePass Then

                                        Dim _Amt As Double
                                        Dim _AmtPerMin As Double = 0


                                        ''_AmtPerDay = _AmtPerDay / 30
                                        '_AmtPerMin = _AmtPerDay / WorkingMinutePerDay

                                        ''_Erode = _Erode + Val(RFin!FCFinAmt.ToString)
                                        'If (_TimeMin >= WorkingMinutePerDay) Then
                                        '    _SpBonus = _SpBonus + _AmtPerDay
                                        '    _Amt = _AmtPerDay
                                        '    _AddPaySp = _AmtPerDay
                                        '    _AddPaySp = System.Math.Round(_AddPaySp, 2)
                                        'Else
                                        '    _SpBonus = _SpBonus + (_AmtPerMin * _TimeMin)
                                        '    _Amt = (_AmtPerMin * _TimeMin)
                                        '    _AddPaySp = (_AmtPerMin * _TimeMin)
                                        '    _AddPaySp = System.Math.Round(_AddPaySp, 2)
                                        'End If

                                        _Amt = _AmtPerDay
                                        _AddPaySp = _AmtPerDay
                                        _AddPaySp = System.Math.Round(_AddPaySp, 2)

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _Amt
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _Amt
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _Amt
                                    End If
                                Next

                                ''--------------------------- เงินพิเศษรายเดือน -------------------------------------


                                'For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='036' ")
                                '    Dim _StatePass As Boolean = True

                                '    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                '    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                '    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                '    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                '    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                '    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                '    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                '        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                '    End If

                                '    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                '    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                '    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                '        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                '        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                '        If _STime.Length = _ETime.Length Then
                                '            If IsDate(_STime) And IsDate(_ETime) Then
                                '                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                '                    _StatePass = False
                                '                End If
                                '            Else
                                '                _StatePass = False
                                '            End If
                                '        Else
                                '            _StatePass = False
                                '        End If

                                '    End If

                                '    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                '        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                '            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                '                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                '                    _StatePass = False
                                '                End If
                                '            Else
                                '                _StatePass = False
                                '            End If

                                '        End If
                                '    End If


                                '    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                '    Dim _AmtPerDay As Double = Val(RFin!FCFinAmt.ToString)


                                '    If _StatePass Then

                                '        Dim _Amt As Double
                                '        Dim _AmtPerMin As Double = 0

                                '        _SpBonus = _SpBonus + _AmtPerDay

                                '        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _AmtPerDay
                                '        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _AmtPerDay
                                '        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _AmtPerDay
                                '    End If
                                'Next

                                '--------------------------- ค่ากะ OT ----------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        _ShiftOTAmt = _ShiftOTAmt + _ShiftOTValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftOTValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftOTValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftOTValue

                                    End If

                                Next

                                '--------------------------- ค่ากะ OT และ ..ค่ารถ ค่าอาหาร ไม่ค่าฝีค่าฝีมือ----------------------------------

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='0' AND FTFinCode<>'043' AND FTFinCode<>'032'  ")
                                    Dim _StatePass As Boolean = True

                                    Dim a As String = ""
                                    If (RFin!FTFinCode.ToString = "034") Then
                                        a = ""
                                    End If

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        Dim _FCFinAmt As Double = 0
                                        'If (RFin!FTFinCode.ToString = "032") Or (RFin!FTFinCode.ToString = "035") Then
                                        If (RFin!FTFinCode.ToString = "032") Then
                                            If (RFin!FTFinCode.ToString = "032") Then
                                                _FCFinAmt = _AddPaySp
                                            Else
                                                _FCFinAmt = _AddPayErode
                                            End If
                                        ElseIf (RFin!FTFinCode.ToString = "043") Then
                                            If _FNTimeMin >= WorkingMinutePerDay - Val(RFin!FTLateMin.ToString) Then
                                                _FCFinAmt = Val(RFin!FCFinAmt.ToString)
                                            Else
                                                _FCFinAmt = Val(RFin!FCFinAmt.ToString) / 2
                                            End If
                                        Else
                                            _FCFinAmt = Val(RFin!FCFinAmt.ToString)
                                        End If

                                        _FCAdd = _FCAdd + _FCFinAmt

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _FCFinAmt
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _FCFinAmt
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _FCFinAmt

                                        'If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                        'If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)
                                        'If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + Val(RFin!FCFinAmt.ToString)

                                        'If (RFin!FTFinCode.ToString = "032") Or (RFin!FTFinCode.ToString = "035") Then
                                        '    RFin!FTFinCode = RFin!FTFinCode
                                        'End If

                                        If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                            _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                        Else

                                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                'If (RFin!FTFinCode.ToString = "032") Or (RFin!FTFinCode.ToString = "035") Then
                                                If (RFin!FTFinCode.ToString = "032") Then
                                                    If (RFin!FTFinCode.ToString = "032") Then
                                                        xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + _AddPaySp
                                                    Else
                                                        xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + _AddPayErode
                                                    End If
                                                Else
                                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + _FCFinAmt
                                                    'xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                End If

                                                'xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                            Next

                                        End If
                                    End If
                                Next


                                '--------------------------- ค่าฝีมือ  only จ่ายคิดต่อวัน  แต่แบ่งเช็คสายครึ่งวัน----------------------------------

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='0' AND FTFinCode='043' ")
                                    '   _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))

                                    Dim _StatePass As Boolean = True

                                    Dim a As String = ""
                                    If (RFin!FTFinCode.ToString = "043") Then
                                        a = ""
                                    End If

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If

                                    Dim _rate As Decimal = 0.0
                                    If RFin!FTStaCheckLate.ToString = "1" And _FTin1 <> "" And _FTOut1 <> "" Then
                                        If _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString)) Then
                                            ' _rate = _rate + 0.5
                                            _rate = 1
                                        End If
                                    End If

                                    'If RFin!FTStaCheckLate.ToString = "1" And _FTIn2 <> "" And _FTOut2 <> "" Then
                                    '    If _StatePass = (_FNLateAfternoon <= Val(RFin!FTLateMin.ToString)) Then
                                    '        _rate = _rate + 0.5
                                    '    End If
                                    'End If

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    'If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)

                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)



                                    '_FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))

                                    If _StatePass Then

                                        Dim _FCFinAmt As Double = 0
                                        If (RFin!FTFinCode.ToString = "032") Then
                                            'If (RFin!FTFinCode.ToString = "032") Then
                                            '    _FCFinAmt = _AddPaySp
                                            'Else
                                            '    _FCFinAmt = _AddPayErode
                                            'End If
                                        ElseIf (RFin!FTFinCode.ToString = "043") Then
                                            'If _FNTimeMin >= WorkingMinutePerDay - Val(RFin!FTLateMin.ToString) Then
                                            '    _FCFinAmt = Val(RFin!FCFinAmt.ToString)
                                            'Else
                                            _FCFinAmt = Val(RFin!FCFinAmt.ToString) * _rate
                                            'End If
                                        Else
                                            _FCFinAmt = Val(RFin!FCFinAmt.ToString)
                                        End If

                                        _FCAdd = _FCAdd + _FCFinAmt

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _FCFinAmt
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _FCFinAmt
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _FCFinAmt

                                        If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                            _DtFin.Rows.Add(RFin!FTFinCode.ToString, _FCFinAmt)
                                        Else

                                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                If (RFin!FTFinCode.ToString = "032") Then
                                                    If (RFin!FTFinCode.ToString = "032") Then
                                                        xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + _AddPaySp
                                                    Else
                                                        xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + _AddPayErode
                                                    End If
                                                Else
                                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + _FCFinAmt
                                                End If

                                            Next

                                        End If
                                    End If
                                Next

                            End If
                            '-----------------End รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                        End If

                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน/ขาดงาน ลางาน สาย  คิดพนักงานเงินเดือน เงินงวด หักต่อวัน ---------------------
                        If _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1' AND FCFinAmt>0  ").Count > 0 Then




                            If _FTShift <> "" Then
                                _SPDateType = 0
                                _Holiday = ""

                                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _Holiday = "H"
                                    Exit For
                                Next

                                If _Holiday <> "" Then
                                    _SPDateType = 2
                                End If



                                Dim _StateLeaveOther As Boolean = False
                                Dim _StateLeavacation As Boolean = False
                                Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                Dim _SumLeave As Integer = 0

                                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                    If Val(sR!LeaveType) = 1 Then
                                        _StateLeavacation = True
                                    Else
                                        _StateLeaveOther = True
                                    End If

                                    If Val(sR!LeaveType) = 2 Then
                                        _StateFTStaMaternityleaveNotpay = True
                                    End If

                                Next


                                '--check fincode - add  amount  --> cal=Month, Pay=Month with condition 
                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1' AND FCFinAmt>0 ")
                                    Dim b As String = ""
                                    If (RFin!FTFinCode.ToString = "034") Then
                                        b = ""
                                    End If
                                    If (RFin!FTFinCode.ToString = "012") Then
                                        b = ""
                                    End If

                                    Dim deductDay As Integer = 0
                                    Dim FinCode As String = RFin!FTFinCode.ToString
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLatePerDay.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsentPerDay.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeavePerDay.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacationPerDay.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)

                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpayPerDay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If _StatePass Then

                                    Else
                                        Dim _Amt As Double
                                        Dim _AmtPerMin As Double = 0
                                        Dim _AmtPerDay As Double = Val(RFin!FCFinAmt) / 30

                                        deductDay = deductDay + 1
                                        For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")

                                            xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) - _AmtPerDay

                                        Next
                                    End If

                                Next
                            End If

                        End If

                        '-----------------End รายได้อื่นๆประจำวัน กรณีมาทำงาน  คิดพนักงานเงือนเดือน หักต่อวัน ---------------------
                    Next





                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                        _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.00"))

                        If _FTEmpState = "3" Then
                            _FNSlaryPerMonth = CDbl(Format(_FNSlaryPerMonth / 2, "0.00"))
                        End If

                        _FNSlaryPerDay = CDbl(Format((_FCSalary) / 30, "0.00"))
                    Else

                        _FNSlaryPerMonth = 0
                        If _SalaryDevide > 1 Then
                            _FNSlaryPerDay = CDbl(Format(((_FCSalary) / 15), "0.00"))
                        Else
                            _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                        End If

                    End If

                    'If (_EmpTypeCode = "Z") Then
                    _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / WorkingHourPerDay, "0.00000000000"))
                    'Else
                    '    _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000000000"))
                    'End If
                    _FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000000000"))
                    _FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_FNSlaryPerDay + _AmtAddCalOT + _GAmtAddCalOT) / WorkingHourPerDay, "0.00000000000")) / 60, "0.00000000000"))
                    _FNSlaryOTPerHour = CDbl(Format((_FNSlaryPerDay + _AmtAddCalOT + _GAmtAddCalOT) / WorkingHourPerDay, "0.00"))

                    If _FTShift = "" Then
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If
                    Else


                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If

                        If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _WorkDay = _WorkDay + 1
                        End If

                        _GFNLateNormalMin = _GFNLateNormalMin + _FNLateNormalMin
                        _GFNLateNormalCut = _GFNLateNormalCut + _FNLateNormalCut
                        _GFNLateOtMin = _GFNLateOtMin + _FNLateOtMin
                        _GFNLateOtCut = _GFNLateOtCut + _FNLateOtCut
                        _GFNLateMorning = _GFNLateMorning + _FNLateMorning
                        _GFNLateAfternoon = _GFNLateAfternoon + _FNLateAfternoon
                        _GFNAbsent = _GFNAbsent + _FNAbsent
                        _GFNAbsentCutTime = _GFNAbsentCutTime + _FNAbsentCutTime

                        _GFNCutAbsent = _GFNCutAbsent + _LateCutAbsent
                        _GFNTimeMin = _GFNTimeMin + _FNTimeMin
                        _GFNOT1Min = _GFNOT1Min + _FNOT1Min
                        _GFNOT1_5Min = _GFNOT1_5Min + _FNOT1_5Min
                        _GFNOT2Min = _GFNOT2Min + _FNOT2Min
                        _GFNOT3Min = _GFNOT3Min + _FNOT3Min
                        _GFNOT4Min = _GFNOT4Min + _FNOT4Min
                        _GFNLateMMin = _GFNLateMMin + _FNLateMMin
                        _GFNLateAfMin = _GFNLateAfMin + _FNLateAfMin
                        _GFNRetireOtMin = _GFNRetireOtMin + _FNRetireOtMin
                        _GFNRetireOtCut = _GFNRetireOtCut + _FNRetireOtCut
                        _GFNRetireMMin = _GFNRetireMMin + _FNRetireMMin
                        _GFNRetireAfMin = _GFNRetireAfMin + _FNRetireAfMin
                        _GFNRetireNormalCut = _GFNRetireNormalCut + _FNRetireNormalCut

                    End If

                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _LeaveCode = ""

                    For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                        _LeaveCode = sR!LFTLeaveCode.ToString


                        _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                        _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                        _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                        If sR!FTStaCalSSO.ToString = "1" Then
                            _GtotalleavePayCalSso = _GtotalleavePayCalSso + Val(sR!FNTotalPayMinute.ToString)
                        End If

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            _FNLeaveVacation = _FNLeaveVacation + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                        Else
                            _FNLeavePay = _FNLeavePay + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End If

                    Next

                    _GFNLeavePay = _GFNLeavePay + _FNLeavePay
                    _SocialBefore = 0
                    _SocialBeforeAmt = 0

                    Dim _WageAmtPerDay As Double = 0
                    Dim _WageOTAmtPerDay As Double = 0
                    Dim _TimeOTMdr As Integer = 0

                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    Else
                        _WageAmtPerDay = CDbl(Format((_FNTimeMin) * _FNSlaryPerMin, "0.00"))
                        _FNEmpBaht = _FNEmpBaht + _WageAmtPerDay
                    End If

                    _nBahtOt1 = _nBahtOt1 + CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000000"))

                    If FTHldType = 1 And _FNOT3Min > 0 Then
                        _GAmtPlus = _GAmtPlus + _AmtPlus
                    End If

                    _nBahtOt15 = _nBahtOt15 + CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.00000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.00000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.00000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.00000"))
                    '_FNAbsentCutTime
                    ' _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsentCutTime * _FNSlaryPerMin, "0.00"))
                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.00"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.00"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.00"))

                    _LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.00"))
                    Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _FNSlaryPerMin, "0.00"))
                    _Lapaid = _Lapaid + _TmpLapaidAmt
                    _GtotalleavePayCalSsoAmt = _GtotalleavePayCalSsoAmt + CDbl(Format(_GtotalleavePayCalSso * _FNSlaryPerMin, "0.00"))  'เงินลาจ่ายที่นำไปคิดประกันสังคม

                    If _LeaveCode <> "" And _FNLeaveVacation > 0 Then
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    Else
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    End If

                    If _FTStatePayHoliday <> "1" Then '--------- ไม่ได้ค่าจ้างวันหยุด---------------
                    Else

                        If (_FNLeaveNotPay <= 0) Then
                            If _TmpLapaidAmt <= 0 Then

                                _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.00"))

                            Else
                                _TotalHoliDay = _TotalHoliDay - _oHoliday
                            End If
                        Else
                            _TotalHoliDay = _TotalHoliDay - _oHoliday
                        End If

                    End If

                    _FTSatrtCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTSatrtCalculateDate, 1))

                Loop
                ' ---------end loop date

                'check deduct tax sso from FinCode and accumurate Money

                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='2' AND FTFinType='1' AND FTPayType='1' ")
                    For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + xRow!FCTotalFinAmt
                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + xRow!FCTotalFinAmt
                        _FCAdd = _FCAdd + xRow!FCTotalFinAmt
                    Next
                Next
                '-----------------

                If _FTEmpState = "2" Or _FTEmpState = "3" Then ' คำนวณค่าแรงพนักงานรายเดือน

                    If _dttran.Select("FTStateAccept<>'1' AND FTWeekly <>'1' ").Length > 0 Or _dttran.Rows.Count <= 0 Then
                        Return False
                    End If

                    _FNSlaryPerMonth = _MSlary


                    If _FTEmpState = "3" Then

                        _FNSlaryPerMonth = CDbl(Format(_FNSlaryPerMonth / 2, "0.00"))
                        _FNSlaryPerDay = CDbl(Format((_FNSlaryPerMonth) / 15, "0.00"))

                    Else

                        _FNSlaryPerDay = CDbl(Format((_FNSlaryPerMonth) / 30, "0.00"))
                    End If


                    _Gtotalleave = 0
                    _GtotalleavePay = 0
                    _GtotalleaveNotPay = 0
                    _GFNLeaveOther = 0
                    _GFNLeavePay = 0
                    _GtotalleavePayCalSso = 0
                    _LaNotpaid = 0
                    _Lapaid = 0
                    _FCPayVacationBaht = 0
                    _GtotalleavePayCalSsoAmt = 0
                    _nBahtAbsent = 0

                    Dim _NewSlary As String = ""

                    For Each sR As DataRow In _dtLeave.Rows

                        _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                        _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                        _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                        If sR!FTStaCalSSO.ToString = "1" Then
                            _GtotalleavePayCalSso = _GtotalleavePayCalSso + Val(sR!FNTotalPayMinute.ToString)
                        End If

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                        Else
                            _GFNLeavePay = _GFNLeavePay + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End If

                    Next

                    _LaNotpaid = CDbl(Format(_GtotalleaveNotPay * _FNSlaryPerMin, "0.00"))

                    If _LaNotpaid > _FNSlaryPerMonth Then
                        _LaNotpaid = _FNSlaryPerMonth
                    End If

                    _WorkingDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_DateEndOfMonth))) + 1

                    If _FDDateStart <= _StartDate And (_FDDateEnd >= _DateEndOfMonth Or _FDDateEnd = "") Then

                        Dim _SmDate As String = _DateStartOfMonth
                        Dim _EmDate As String = _DateEndOfMonth
                        Dim _dtSalary As New DataTable

                        _dtSalary.Columns.Add("FNCurrentSlary", GetType(Double))
                        _dtSalary.Columns.Add("FNDay", GetType(Integer))

                        Do While _SmDate <= _EmDate

                            _Qry = "  SELECT      TOP 1   FNCurrentSlary  AS AMT"
                            _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK)"
                            _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_SmDate) & "') "
                            _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                            _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                            _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                            _FCSalary = _FNSlaryPerMonth
                            If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                            If _dtSalary.Select("FNCurrentSlary=" & _FCSalary & "").Length > 0 Then

                                For Each Rxx As DataRow In _dtSalary.Select("FNCurrentSlary=" & _FCSalary & "")
                                    Rxx!FNDay = Integer.Parse(Val(Rxx!FNDay)) + 1
                                    Exit For
                                Next

                            Else
                                _dtSalary.Rows.Add(_FCSalary, 1)
                            End If

                            _SmDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_SmDate, 1))
                        Loop

                        Dim _TotalDay As Integer = 0
                        _FNEmpBaht = 0
                        If _dtSalary.Select("FNCurrentSlary<>" & _FNSlaryPerMonth & "").Length > 0 Then
                            For Each Rxx As DataRow In _dtSalary.Select("FNCurrentSlary<>" & _FNSlaryPerMonth & "")
                                _TotalDay = _TotalDay + Integer.Parse(Val(Rxx!FNDay))

                                _FNEmpBaht = _FNEmpBaht + Double.Parse(Format((Integer.Parse(Val(Rxx!FNDay)) * Double.Parse(Val(Rxx!FNCurrentSlary) / 30)), "0.00"))
                            Next

                            _FNEmpBaht = _FNEmpBaht + (_FNSlaryPerMonth - CDbl(Format(_TotalDay * _FNSlaryPerDay, "0.00")))

                        Else
                            _FNEmpBaht = _FNSlaryPerMonth
                        End If

                        _dtSalary.Dispose()

                    Else

                        Dim _TotalDay As Integer = 0
                        If _FDDateStart > _StartDate And _FDDateEnd < _EndDate And _FDDateEnd <> "" Then
                            _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_FDDateStart), CDate(_FDDateEnd))) + 1

                        ElseIf _FDDateStart > _StartDate Then
                            _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_FDDateStart))) - 1
                        ElseIf _FDDateEnd < _EndDate And _FDDateEnd <> "" Then
                            If _FDDateEnd < _DateStartOfMonth Then
                                _TotalDay = _WorkingDay
                            Else
                                _TotalDay = Abs(DateDiff(DateInterval.Day, CDate(_FDDateEnd), CDate(_DateEndOfMonth))) + 1
                            End If
                        End If

                        If _TotalDay >= _WorkingDay Then
                            _FNEmpBaht = 0
                            _WorkingDay = 0
                        Else
                            _FNEmpBaht = _FNSlaryPerMonth - CDbl(Format(_TotalDay * _FNSlaryPerDay, "0.00"))
                            If _WorkingDay > 30 Then _WorkingDay = 30
                            _WorkingDay = _WorkingDay - _TotalDay
                        End If

                    End If

                    If _WorkingDay > 30 Then _WorkingDay = 30

                    _WorkingDay = CDbl(Format(((_WorkingDay * WorkingMinutePerDay) - (_Gtotalleave)) / WorkingMinutePerDay, "0.00"))
                    _WorkingDay = _WorkingDay - (_GFNAbsent / WorkingMinutePerDay)

                    If _GFNAbsentCutTime > 0 Then
                        _nBahtAbsent = CDbl(Format((_GFNAbsentCutTime / WorkingMinutePerDay) * _FNSlaryPerDay, "0.00"))
                        ' _FNEmpBaht = _FNEmpBaht - _nBahtAbsent
                    End If

                    If _WorkingDay < 0 Then
                        _WorkingDay = 0
                    End If

                Else

                    If (_EmpTypeCode = "Z") Then
                        _WorkingDay = CDbl(Format(_GFNTimeMin / WorkingMinutePerDay, "0.00"))
                    Else
                        _WorkingDay = CDbl(Format(_GFNTimeMin / WorkingMinutePerDay, "0.00"))
                    End If
                End If

                _WorkingDay = _WorkingDay + _DayAdjAdd

                _GFNTimeMin = _GFNTimeMin + (_DayAdjAdd * WorkingMinutePerDay)
                _FNEmpBaht = _FNEmpBaht + _WageAdjAdd
                _nBahtOt1 = CDbl(Format(_nBahtOt1, "0.00"))
                _nBahtOt15 = CDbl(Format(_nBahtOt15, "0.00"))
                _nBahtOt2 = CDbl(Format(_nBahtOt2, "0.00"))
                _nBahtOt3 = CDbl(Format(_nBahtOt3, "0.00")) + _GAmtPlus
                _nBahtOt4 = CDbl(Format(_nBahtOt4, "0.00"))

                Dim _TmpPe As String = ""

                If _FTEmpState = "2" Then
                Else
                    _TmpPe = IIf(Val(_PayTerm) - 1 Mod 2 = 1, (Val(_PayTerm) - 1).ToString("00"), "")
                End If

                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน ประเภทจ่ายเป็นเดือน ของงวดก่อนหน้า ---------------------

                If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='1'  ").Length > 0 Then

                    Dim _BFSDate As String = ""
                    Dim _BFEDate As String = ""

                    _Qry = " SELECT TOP 1  FDCalDateBegin, FDCalDateEnd"
                    _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & " WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & " AND FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & " AND FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND FTPayMonth IN (   "
                    _Qry &= vbCrLf & "  Select FTPayMonth"
                    _Qry &= vbCrLf & "    FROM THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "   AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & " )  "

                    _dttempdata = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                    For Each Row As DataRow In _dttempdata.Rows
                        _BFSDate = Row!FDCalDateBegin.ToString
                        _BFEDate = Row!FDCalDateEnd.ToString
                    Next

                    If _BFSDate <> "" And _BFEDate <> "" Then

                        _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                        _Qry &= vbCrLf & " 	,ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                        _Qry &= vbCrLf & " 	,ISNULL(FNOT1_5,0) AS FNOT1_5"
                        _Qry &= vbCrLf & " 	,ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                        _Qry &= vbCrLf & " 	,ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                        _Qry &= vbCrLf & " ,ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                        _Qry &= vbCrLf & " ,ISNULL(FNLateMMin,0) As FNLateMorning"
                        _Qry &= vbCrLf & " 	,ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                        _Qry &= vbCrLf & " 	,ISNULL(FNAbsent,0) AS FNAbsent "
                        _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0)  + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                        _Qry &= vbCrLf & " ,ISNULL(FNOT1Min,0) As FNOT1Min  "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                        _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                        _Qry &= vbCrLf & " ,ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                        _Qry &= vbCrLf & ",P.FTOverClock,P.FTWeekDay"
                        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                        _Qry &= vbCrLf & "    WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                        _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                        _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                        _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Do While _BFSDate <= _BFEDate
                            _FTShift = ""
                            Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                            Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                            For Each R2 In _R

                                _FTShift = R2!FTShift.ToString
                                _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)

                                _InOT = R2!FTIn3.ToString
                                _OutOT = R2!FTOut3.ToString

                                _Over = R2!FTOverClock.ToString

                                If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    If _FTShift <> "" Then

                                        _SPDateType = 0

                                        _Holiday = ""

                                        _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                        _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                        _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' AND FTStateActive='1' "
                                        _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                        If _Holiday <> "" Then _SPDateType = 2

                                        Dim _StateLeaveOther As Boolean = False
                                        Dim _StateLeavacation As Boolean = False


                                        Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                        Dim _SumLeave As Integer = 0

                                        For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                            _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                            If Val(sR!LeaveType) = 1 Then
                                                _StateLeavacation = True
                                            Else
                                                _StateLeaveOther = True
                                            End If

                                            If Val(sR!LeaveType) = 2 Then
                                                _StateFTStaMaternityleaveNotpay = True
                                            End If

                                        Next

                                        For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='1' ")
                                            Dim _StatePass As Boolean = True

                                            If _OutOT <> "" Then
                                                Beep()
                                            End If

                                            If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                            If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                            If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                            If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                            If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                            If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                            If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                            End If

                                            If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                            If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                            If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                If _STime.Length = _ETime.Length Then
                                                    If IsDate(_STime) And IsDate(_ETime) Then
                                                        If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If
                                                Else
                                                    _StatePass = False
                                                End If

                                            End If

                                            If _StatePass Then
                                                _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then

                                                    _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))

                                                Else

                                                    For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                        xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                    Next

                                                End If

                                            End If
                                        Next
                                    End If
                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                                End If
                            Next

                            _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                        Loop
                    End If
                End If

                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                '-------- รายได้อื่นๆจ่ายงวดกลางเดือน--------------------
                If _FTEmpState <> "2" And Val(_PayTerm) Mod 2 = 1 Then
                    If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='2'  ").Length > 0 Then

                        Dim _BFSDate As String = ""
                        Dim _BFEDate As String = ""

                        _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                        _BFEDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_BFSDate, 8) & "01", 1), -1)) 'วันสุดท้ายของเดือน

                        If _BFSDate <> "" And _BFEDate <> "" Then

                            _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                            _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                            _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                            _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                            _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                            _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                            _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                            _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                            _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                            _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                            _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                            _Qry &= vbCrLf & " ,P.FTOverClock,P.FTWeekDay"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                            _Qry &= vbCrLf & "    WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                            _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                            Do While _BFSDate <= _BFEDate
                                _FTShift = ""
                                Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                                Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                For Each R2 In _R

                                    _FTShift = R2!FTShift.ToString
                                    _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                    _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                    _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                    _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                    _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                    _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                    _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                    _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                    _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                    _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                    _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                    _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                    _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                    _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                    _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                    _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                    _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                                    _InOT = R2!FTIn3.ToString
                                    _OutOT = R2!FTOut3.ToString
                                    _Over = R2!FTOverClock.ToString

                                    If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                        If _FTShift <> "" Then

                                            _SPDateType = 0

                                            _Holiday = ""

                                            _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                            _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'  AND FTStateActive='1' "
                                            _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                            If _Holiday <> "" Then _SPDateType = 2

                                            Dim _StateLeaveOther As Boolean = False
                                            Dim _StateLeavacation As Boolean = False


                                            Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                            Dim _SumLeave As Integer = 0

                                            For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                                _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                                If Val(sR!LeaveType) = 1 Then
                                                    _StateLeavacation = True
                                                Else
                                                    _StateLeaveOther = True
                                                End If

                                                If Val(sR!LeaveType) = 2 Then
                                                    _StateFTStaMaternityleaveNotpay = True
                                                End If

                                            Next

                                            For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='2' ")
                                                Dim _StatePass As Boolean = True

                                                If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                                If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                                If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                                If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                                If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                                If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)

                                                If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                    _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                                End If

                                                If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                                If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                                If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                    Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                    Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                    If _STime.Length = _ETime.Length Then
                                                        If IsDate(_STime) And IsDate(_ETime) Then
                                                            If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                                _StatePass = False
                                                            End If
                                                        Else
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If

                                                End If

                                                If _StatePass Then
                                                    _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                    If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                    If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                    If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                                        _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                                    Else
                                                        For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                            xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                        Next
                                                    End If

                                                End If
                                            Next
                                        End If
                                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    End If

                                Next

                                _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                            Loop
                        End If
                    End If
                End If
                '------------------'-----END--- รายได้อื่นๆจ่ายงวดกลางเดือน---------------------------------------------------------------------------------------------


                If _FTEmpState = "2" And Val(_PayTerm) Mod 2 = 0 Then
                    'For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1'")
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType='3' AND FTFinType='1' AND FTPayType='1'")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next
                End If
                '''''-
                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0'")
                    Dim _StatePass As Boolean = True

                    If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                    If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                    If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                    If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                    If _StatePass Then

                        _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                        If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                        If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                        If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                            _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                        Else

                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                            Next

                        End If
                    End If
                Next
                '''''''''''''''''''''best
                'For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1'")
                '    Dim _StatePass As Boolean = True

                '    If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                '    If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                '    If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                '    If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                '    If _StatePass Then

                '        _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                '        If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                '        If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                '        If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                '            _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                '        Else

                '            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                '                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                '            Next

                '        End If
                '    End If
                'Next

                '-รายหัก ยกเว้น  เงืนกองทุนสำรองเลี้ยงชีพ
                For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTFinType='2'")
                    If (R2!FTFinCode.ToString <> "106") Then
                        _FCDeduct = _FCDeduct + Val(R2!FCFinAmt.ToString)
                    End If
                Next
                '---------รายได้รายหัก อื่นๆ-------------------------
                Dim Tawi As Double = 0

                'For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='106' ") 'กองทุนสำรองชีพธนชาติทวีค่า
                '    Tawi = _FNSlaryPerMonth * RFin!FCFinAmt / 100
                'Next

                '------------------- สิ้นสุดการคำนวณรายวัน
                _FTWorkmenAmtBefore = 0
                _FTTotalCalWorkmenBefore = 0

                _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FCSocial"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocial,0)) AS FCSocialAmt"
                _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                _Qry &= vbCrLf & "  Select FNMonth"
                _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                _Qry &= vbCrLf & "  )  "

                Dim _DtSso As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                If _DtSso.Rows.Count > 0 Then
                    _SocialBefore = Val(_DtSso.Rows(0)!FCSocial.ToString)
                    _SocialBeforeAmt = Val(_DtSso.Rows(0)!FCSocialAmt.ToString)
                End If

                If _FTEmpState = "2" Or _FTEmpState = "3" Then

                    If FTStaDeductAbsent = 0 Then
                        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent + _nBahtAbsent)
                    Else
                        _nBahtAbsent = 0
                        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent)
                    End If


                    If _FNEmpBaht < 0 Then _FNEmpBaht = 0
                End If

                _TotalCalTax = 0 : _TaxAmt = 0

                _TotalCalSso = _FNEmpBaht + _HBaht + _FTOtherAddCalculateSocial + _FTAddCalculateSocial + _GtotalleavePayCalSsoAmt
                ' _TotalCalTax = _FNEmpBaht + _HBaht + _Lapaid + _FCPayVacationBaht
                _TotalCalTax = _FNEmpBaht + _HBaht + _Lapaid + _FCPayVacationBaht + _FNIncentiveAmt

                '-----------------กองทุนสำรองเลี้ยงชีพ-------------------------------
                'If _ContributedFundBeginPay Then
                '    Dim _EMpWorkAge As Integer = Val(R!FNEmpWorkAge.ToString)

                '    For Each sR As DataRow In _THRMContributedFund.Select(" FNAgeBegin <= " & _EMpWorkAge & " AND FNAgeEnd >=" & _EMpWorkAge & " ")

                '        FTTotalCalContributedAmt = _TotalCalSso

                '        FTContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNEmpAmtPer.ToString)) / 100.0), "0"))
                '        FTCmpContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNCmpAmtPer.ToString)) / 100.0), "0"))

                '        Exit For

                '    Next

                'End If

                'check fund type
                ' FTTotalCalContributedAmt  _FCSalary
                ' _FNTotalRecalContributedAmt = _FNEmpBaht
                _FNTotalRecalContributedAmt = _FCSalary
                If _ContributedFundBeginPay Then
                    Dim _EMpWorkAge As Integer = Val(R!FNEmpWorkAge.ToString)

                    'For Each sR As DataRow In _THRMContributedFund.Select(" FNAgeBegin <= " & _EMpWorkAge & " AND FNAgeEnd >=" & _EMpWorkAge & " ")

                    'FTTotalCalContributedAmt = _FCSalary

                    FTContributedAmt = CDbl(Format(((_FNTotalRecalContributedAmt * Val(_FNFundRate.ToString)) / 100.0), "0"))
                    FTCmpContributedAmt = CDbl(Format(((_FNTotalRecalContributedAmt * Val(_FNFundRate.ToString)) / 100.0), "0"))

                    'Exit For

                    'Next


                End If


                '-----------------กองทุนสำรองเลี้ยงชีพ----------------------------

                '-----------------หักองทุนทดแทน---------------------------------
                FTTotalCalWorkmen = _TotalCalSso

                If _FTMaxCalWorkmen > 0 Then

                    _SocialPayMax = CDbl(Format(((_FTMaxCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))

                    If (_TotalCalSso + _FTTotalCalWorkmenBefore) > _FTMaxCalWorkmen Then
                        FTTotalCalWorkmen = _FTMaxCalWorkmen
                    ElseIf FTTotalCalWorkmen > 0 Then
                        FTTotalCalWorkmen = FTTotalCalWorkmen
                    Else
                        FTTotalCalWorkmen = 0
                    End If

                    If _FTTotalCalWorkmenBefore > 0 Then
                        FTWorkmenAmt = CDbl(Format((((_CalSo + _FTTotalCalWorkmenBefore) * _FTMaxWorkmenRate) / 100.0), "0"))
                        FTWorkmenAmt = FTWorkmenAmt - _FTWorkmenAmtBefore
                    Else
                        FTWorkmenAmt = CDbl(Format(((FTTotalCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))
                    End If
                End If

                '-----------------กองทุนทดแทน-------------------------------

                '--------- คิดประกันสังคม-----------
                _SocialPayMax = HCfg.HMaxSocialBaht
                _CalSo = 0
                _FCSocial = 0

                If _FTCalSocialSta <> "1" Then ' 1 ไม่่คิดประกันสังคม

                    If (_TotalCalSso + _SocialBefore) >= _SocialMaxIncome Then
                        _CalSo = _SocialMaxIncome
                    ElseIf (_TotalCalSso + _SocialBefore) < _SocialMaxIncome And (_TotalCalSso + _SocialBefore) >= _SocialMinIncome Then
                        _CalSo = (_TotalCalSso + _SocialBefore)
                    ElseIf _TotalCalSso > 0 Then
                        _CalSo = _SocialMinIncome
                    Else
                        _CalSo = 0
                    End If

                    If _SocialBefore > 0 Then
                        _FCSocial = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRate) / 100.0), "0.00")), "0"))
                        _FCSocial = IIf(_SocialBeforeAmt > _FCSocial, 0, _FCSocial - _SocialBeforeAmt)
                    Else
                        _FCSocial = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRate) / 100.0), "0.00")), "0"))
                    End If

                Else
                    _TotalCalSso = 0
                End If

                _FNEmpDiligent = 0
                _FTStateInDustin = ""
                _FNDeligentPeriod = 0

                If _CalIns <> "" Then
                    Dim _StateCalIns As Boolean = False
                    Dim StateTypePayDeligent As String = ""

                    _Qry = "SELECT TOP 1 FNPayDeligent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMDiligentConfigHD WHERE FTDeligentCode='" & HI.UL.ULF.rpQuoted(_CalIns) & "' "
                    StateTypePayDeligent = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    Select Case StateTypePayDeligent
                        Case "0"

                            _StateCalIns = True
                        Case "1"

                            If Val(_PayTerm) Mod 2 = 1 Then

                                _FTSatrtCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                                _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1), -1)) 'วันสุดท้ายของเดือน
                                _StateCalIns = True
                            End If

                        Case "2"

                            If Right(Left(_EndDate, 7), 2) = "12" Or Right(Left(_StartDate, 7), 2) = "12" Then


                            Else
                                If Val(_PayTerm) = 1 Then

                                    _FTSatrtCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                                    _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1), -1)) 'วันสุดท้ายของเดือน
                                    _StateCalIns = True

                                Else
                                    If Val(_PayTerm) Mod 2 = 0 Then

                                        _FTSatrtCalculateDateIns = Left(_StartDate, 7) & "/01"  'วันแรกของเดือน
                                        _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_StartDate, 7) & "/01", 1), -1)) 'วันสุดท้ายของเดือน

                                        _StateCalIns = True

                                    End If
                                End If
                            End If




                    End Select



                    If _StateCalIns Then
                        _Qry = " SELECT   ISNULL(PayIndus,0) As PayIndus , ISNULL(StateIndus,'') AS StateIndus,ISnuLL(FNDeligentPeriod,0) AS FNDeligentPeriod"
                        _Qry &= vbCrLf & "	FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.FN_CALCULATE_INDUST(" & Val(_EmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDateIns) & "','" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDateIns) & "','" & HI.UL.ULF.rpQuoted(_CalIns) & "')"

                        Dim _DtIns As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        If _DtIns.Rows.Count > 0 Then
                            _FNEmpDiligent = Val(_DtIns.Rows(0)!PayIndus.ToString)
                            _FTStateInDustin = _DtIns.Rows(0)!StateIndus.ToString
                            _FNDeligentPeriod = Val(_DtIns.Rows(0)!FNDeligentPeriod.ToString)
                        End If

                    End If
                End If

                _FTAddCalculateTax = _FTAddCalculateTax + _ShiftOTAmt
                _FCAdd = _FCAdd + _ShiftAmt + _ShiftOTAmt

                If _FTCalTaxSta <> "1" Then

                    With _EmpDisTax
                        .FTSosial = _FCAccumulateSocial + _FCSocial + (_FCSocial * (_TotalInstalment - _Instalment))

                        If .FTSosial > (((_SocialMaxIncome * _SocialRate) / 100.0) * 12) Then
                            .FTSosial = CDbl(Format((((_SocialMaxIncome * _SocialRate) / 100.0) * 12), "0.00"))
                        End If

                        .BaseSlary = (_TotalCalTax * (_TotalInstalment - _Instalment)) + _TotalCalTax
                        .OtherSlary = _FTOtherAddCalculateTax + _FTAddCalculateTax + _FNEmpDiligent + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4


                        If .Cfg_ContributedDeducToTheFund > 10000 Then
                        Else
                            .Cfg_ContributedDeducToTheFund = .Cfg_ContributedDeducToTheFund + FTContributedAmt + (FTContributedAmt * (_TotalInstalment - _Instalment)) + .BeforeContributed
                            ' .Cfg_ContributedDeducToTheFundOver = 0
                        End If


                    End With

                    _TotalCalTax = _TotalCalTax + _EmpDisTax.OtherSlary
                    Dim _TaxOther As Double = _EmpDisTax.OtherSlary
                    Dim _TaxOtherAmt As Double = 0
                    Dim _Total As Double = GETnRecalDiscTax(_EmpDisTax, _EmpTaxYear)

                    _EmpTaxYear.FTSocial = _EmpDisTax.FTSosial

                    _EmpTaxYear.FTTotalCalTax = _Total


                    Dim _TotalTax As Double = GETnTax(_Total, _TaxOther, _TaxOtherAmt)

                    _EmpTaxYear.FTTotalTax = (_TotalTax + _TaxOtherAmt) 'ภาษีที่ต้องจ่าย

                    _TotalTax = CDbl(Format(_TotalTax - _EmpDisTax.BeforeTax, "0.00"))

                    If _TotalTax > 0 Then
                        _TaxAmt = CDbl(Format((_TotalTax / ((_TotalInstalment - _Instalment) + 1)), "0.00"))
                        _TaxAmt = _TaxAmt + _TaxOtherAmt
                    Else
                        _TaxAmt = 0
                    End If

                    _EmpTaxYear.FTTotalTaxPay = _FCAccumulateTax + _TaxAmt

                Else

                    _TotalCalTax = 0
                    _TaxAmt = 0

                End If



                _FCOtherAdd = _FCOtherAdd + _FNPayterm25Amt '+ _Erode + _SpBonus
                ' _FCDeduct before Expend
                _FCDeduct = _FCDeduct + Tawi
                _Net = (_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _BonusAmt) - _FCOtherDeduct - _FCDeduct
                _FCBaht = _FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4

                _FNNetpay = (_Net - (_FCSocial + _TaxAmt + FTContributedAmt))
                _FNNetpayOrg = _FNNetpay
                _FNNetpayBeforeExpend = _FNNetpay  ' Set _FNNetpayBeforeExpend

                '------------------------------Calculate Expend exclude tax sso-----------------------------------------
                Dim _PayYearTerm As String
                _PayYearTerm = _PayYear + _PayTerm

                _Qry = "SELECT FTFinCode, FCFinAmt, FCFinAmtTotal
                        FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.V_Finance_Expend
                            WHERE FTFinType=2 AND FTType=1 AND FTCalType=0 AND FTPayType=0 
                            AND FNHSysEmpID= " & Val(_EmpCode) & " " &
                          " And PayBegin <= '" & _PayYearTerm & "' AND PayEnd >= '" & _PayYearTerm & "'"
                _dtAddExpend = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                'Set Actual FNNetpay
                For Each drExp As DataRow In _dtAddExpend.Rows
                    _FCExpend = _FCExpend + Val(drExp!FCFinAmt.ToString)
                    _FNNetpay = _FNNetpay - Val(drExp!FCFinAmt.ToString)
                Next

                '_FCDeduct  After calculate Expend
                _FCDeduct = _FCDeduct + _FCExpend

                '------------------------------Expend exclude tax sso-----------------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll (FTInsUser, FTInsDate, FTInsTime,"
                _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
                _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
                _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId,  FNHSysPayRollPayId"
                _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
                _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
                _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
                _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
                _Qry &= vbCrLf & ",FNTotalWKNMin,  FNOt1Min, FNOt15Min, FNOt2Min"
                _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
                _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
                _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
                _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
                _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
                _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
                _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
                _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
                _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
                _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
                _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg , FNVacationRetMin, FNVacationRetAmt,FNWorkDay,FTStateCalSocial,FTStateCalTax,FNFundRate, FNNetpayBeforeExpend, FNTotalCalCmpContributedAmt, FNTotalRecalContributedAmt, FNSocialRateEmp, FNSocialRateCmp)"
                _Qry &= vbCrLf & " 	SELECT '" & HI.UL.ULF.rpQuoted(_User) & "',CONVERT(varchar(10),GetDate(),111),CONVERT(varchar(8),GetDate(),114)"
                _Qry &= vbCrLf & " 	,'" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ""
                _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "','" & _EmpType & "','" & HI.UL.ULDate.ConvertEnDB(_PayDate) & "'"
                _Qry &= vbCrLf & " 	," & Val(_FTDeptCode) & ""
                _Qry &= vbCrLf & " 	," & Val(_FTDivCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTSectCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTUnitCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPos) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPaymentCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBankCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBranchCode) & " "
                _Qry &= vbCrLf & " 	,'" & HI.UL.ULF.rpQuoted(_FTAccNo) & "'," & _TotalHoliDay & ""
                _Qry &= vbCrLf & " 	," & _FCSalary & ""
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNTimeMin & " / 60) + Convert(numeric(18,2),(( " & _GFNTimeMin & " %60) /100.00)) "
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1_5Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1_5Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT2Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT2Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2)," & _GFNOT3Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT3Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GFNOT4Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT4Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleavePay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleavePay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleaveNotPay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleaveNotPay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _Gtotalleave & " / 60) + Convert(numeric(18,2),(( " & _Gtotalleave & " %60) /100.00))"
                _Qry &= vbCrLf & " 	, " & _GFNTimeMin
                _Qry &= vbCrLf & " 	, " & _GFNOT1Min
                _Qry &= vbCrLf & " 	, " & _GFNOT1_5Min
                _Qry &= vbCrLf & ", " & _GFNOT2Min
                _Qry &= vbCrLf & "," & _GFNOT3Min
                _Qry &= vbCrLf & ",  " & _GFNOT4Min
                _Qry &= vbCrLf & ",  " & _GFNLateNormalMin
                _Qry &= vbCrLf & ",  " & _GFNLateNormalCut
                _Qry &= vbCrLf & ",  " & _GFNCutAbsent
                _Qry &= vbCrLf & ",  " & _GFNAbsent & "," & (_GFNTimeMin + _GFNOT1Min + _GFNOT1_5Min + _GFNOT2Min + _GFNOT3Min + _GFNOT4Min)
                _Qry &= vbCrLf & ",  " & _GtotalleavePay
                _Qry &= vbCrLf & ", " & _GtotalleaveNotPay
                _Qry &= vbCrLf & ", " & _Gtotalleave
                _Qry &= vbCrLf & ", " & _FNEmpBaht & " "
                _Qry &= vbCrLf & ", " & _nBahtOt1 & " "
                _Qry &= vbCrLf & "," & _nBahtOt15 & " "
                _Qry &= vbCrLf & "," & _nBahtOt2 & " "
                _Qry &= vbCrLf & "," & _nBahtOt3 & " "
                _Qry &= vbCrLf & "," & _nBahtOt4 & " "
                _Qry &= vbCrLf & "," & (_FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FNIncentiveAmt + _BonusAmt) & " "
                _Qry &= vbCrLf & "," & _FNEmpDiligent & " "
                _Qry &= vbCrLf & "," & _FCPayVacationBaht & " "
                _Qry &= vbCrLf & "," & _Lapaid & " "
                _Qry &= vbCrLf & "," & _LateCutAmt & " "
                _Qry &= vbCrLf & "," & _LateCutAmtAbsent & " "
                _Qry &= vbCrLf & "," & _nBahtAbsent & " "
                _Qry &= vbCrLf & "," & _TotalCalSso & " "
                _Qry &= vbCrLf & "," & _TotalCalTax & " "
                _Qry &= vbCrLf & "," & _FCAdd & " "
                _Qry &= vbCrLf & "," & _FCOtherAdd & " "
                _Qry &= vbCrLf & "," & _FCDeduct & " "
                _Qry &= vbCrLf & "," & _FCOtherDeduct & " "
                _Qry &= vbCrLf & "," & _Net & " "
                _Qry &= vbCrLf & "," & _FCSocial & " "
                _Qry &= vbCrLf & "," & _TaxAmt & " "
                _Qry &= vbCrLf & "," & _HBaht & " "
                _Qry &= vbCrLf & "," & (_FNNetpay) & ""
                _Qry &= vbCrLf & "," & (_Net + _FCAccumulateIncome) & ""
                _Qry &= vbCrLf & "," & (_FCSocial + _FCAccumulateSocial) & ""
                _Qry &= vbCrLf & "," & (_TaxAmt + _FCAccumulateTax) & ""
                _Qry &= vbCrLf & ",'" & _FTStateInDustin & "' "
                _Qry &= vbCrLf & "," & (FTContributedAmt + FTTotalCalContributedAmt + _FCAccumulateContributed) & ""
                _Qry &= vbCrLf & "," & (FTContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTCmpContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTTotalCalWorkmen) & ""
                _Qry &= vbCrLf & "," & (FTWorkmenAmt) & ""
                _Qry &= vbCrLf & "," & _AmtRetire & ""
                _Qry &= vbCrLf & "," & _GtotalleavePayCalSsoAmt & ""
                _Qry &= vbCrLf & "," & _WorkingDay & " "
                _Qry &= vbCrLf & "," & _WageAdjAdd & ""
                _Qry &= vbCrLf & "," & _FNIncentiveAmt & ""
                _Qry &= vbCrLf & "," & _FNNetpayOrg & ""
                _Qry &= vbCrLf & "," & FNVacationRetMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetAmt & ""
                _Qry &= vbCrLf & "," & FNWorkDayInWeek & ""
                _Qry &= vbCrLf & " 	,'" & HI.UL.ULF.rpQuoted(_FTCalSocialSta) & "'"
                _Qry &= vbCrLf & " 	,'" & HI.UL.ULF.rpQuoted(_FTCalTaxSta) & "'"
                _Qry &= vbCrLf & "," & _FNFundRate & ""
                _Qry &= vbCrLf & "," & _FNNetpayBeforeExpend & ""

                _Qry &= vbCrLf & "," & (FTCmpContributedAmt + FTTotalCmpCalContributedAmt + _FCAccumulateContributed) & ""
                _Qry &= vbCrLf & "," & _FNTotalRecalContributedAmt & ""
                _Qry &= vbCrLf & "," & _SocialRate & ""
                _Qry &= vbCrLf & "," & _SocialRateCmp & ""


                'FNWorkDay
                ' , FNVacationRetMin, FNVacationRetAmt
                '_FNNetpayOrg
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                If _FTCalTaxSta <> "1" And _FTEmpIdNo <> "" Then
                    '-----------------------------ภาษี -----------------------------------------------------
                    _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTaxYear "
                    _Qry &= vbCrLf & "  WHERE FTYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & "  AND  FTEmpIdNo='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' AND FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " "
                    _Qry &= vbCrLf & "  INSERT INTO THRTTaxYear (FNHSysCmpId,FTYear, FTEmpIdNo, FNAmt, FNExpenses, FNNetAmt, "
                    _Qry &= vbCrLf & "  FNModEmp, FNModMate, FNChildNotLern, FNChildLern, FNChildNotLernAmt, FNChildLernAmt, FNInsurance, FNProvidentfund, FNInterest, FNSocial, FNDonation, "
                    _Qry &= vbCrLf & "  FNProvidentfundOver, FNGPF, FNSavingsFund, FNCommutation, FNUnitRMF, FNModFather, FNModMother, FNModFatherMate, FNModMotherMate, FNUnitLTF, "
                    _Qry &= vbCrLf & "  FNDonationLern, FNParentsHealthInsurance, FNSupportSport, FNAcquisitionOfProperty, FNPension, FNTravel, FNTotalCalTax, FNTotalTax,FNTotalTaxPay )"
                    _Qry &= vbCrLf & "  SELECT " & HI.ST.SysInfo.CmpID & ",'" & _PayYear & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "

                    With _EmpTaxYear

                        _Qry &= vbCrLf & "," & .FTAmt + _TotalCalTax & " "
                        _Qry &= vbCrLf & "," & .FTExpenses & ""
                        _Qry &= vbCrLf & "," & .FTNetAmt & ""
                        _Qry &= vbCrLf & "," & .FTModEmp & ""
                        _Qry &= vbCrLf & "," & .FTModMate & ""
                        _Qry &= vbCrLf & "," & .FNChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FNChildLern & " "
                        _Qry &= vbCrLf & "," & .FTChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FTChildLern & ""
                        _Qry &= vbCrLf & "," & .FTInsurance & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfund & ""
                        _Qry &= vbCrLf & "," & .FTInterest & ""
                        _Qry &= vbCrLf & "," & .FTSocial + _FCSocial & ""
                        _Qry &= vbCrLf & "," & .FTDonation & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfundOver & ""
                        _Qry &= vbCrLf & "," & .FTGPF & ""
                        _Qry &= vbCrLf & "," & .FTSavingsFund & ""
                        _Qry &= vbCrLf & "," & .FTCommutation & ""
                        _Qry &= vbCrLf & "," & .FTUnitRMF & ""
                        _Qry &= vbCrLf & "," & .FTModFather & ""
                        _Qry &= vbCrLf & "," & .FTModMother & ""
                        _Qry &= vbCrLf & "," & .FTModFatherMate & ""
                        _Qry &= vbCrLf & "," & .FTModMotherMate & ""
                        _Qry &= vbCrLf & "," & .FTUnitLTF & ""
                        _Qry &= vbCrLf & "," & .FTDonationLern & ""
                        _Qry &= vbCrLf & "," & .FTParentsHealthInsurance & ""
                        _Qry &= vbCrLf & "," & .FTSupportSport & ""
                        _Qry &= vbCrLf & "," & .FTAcquisitionOfProperty & ""
                        _Qry &= vbCrLf & "," & .FTPension & ""
                        _Qry &= vbCrLf & "," & .FTTravel & ""
                        _Qry &= vbCrLf & "," & .FTTotalCalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTaxPay & ""

                    End With

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    '----------------------------- ภาษี -----------------------------------------------------
                End If

                '-----------------------------รายได้อื่นๆ -----------------------------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Dim _AllFincode As String = ""

                For Each _R As DataRow In _DtFin.Select("FCTotalFinAmt <> '0'")
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTFinCode, FTFinAmt," & _R!FCTotalFinAmt.ToString & ",0," & _R!FCTotalFinAmt.ToString & ""
                    _Qry &= vbCrLf & " FROM  THRMEmployeeFin "
                    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND  FTFinCode = ('" & _AllFincode & "') "

                    HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR)

                Next

                For Each _R As DataRow In _dt.Select("FCFinAmt<>0")
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_R!FCFinAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FCFinAmtOther=" & _R!FCFinAmt.ToString & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _AllFincode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then

                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ",'" & _AllFincode & "',0, 0," & _R!FCFinAmt.ToString & "," & _R!FCFinAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR)

                    End If

                Next

                If _ShiftAmt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='001' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '001'," & _ShiftValue.ToString & "," & _ShiftAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _ShiftOTAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftOTAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='007' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '007'," & _ShiftOTValue.ToString & "," & _ShiftOTAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If


                If _FNPayterm25Amt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNPayterm25Amt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='024' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '024'," & _FNPayterm25Amt.ToString & "," & _FNPayterm25Amt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                'If Tawi > 0 Then
                '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Tawi & " "
                '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTFinCode='106' "
                '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '106'," & Tawi & "," & Tawi & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If
                'End If

                If FTContributedAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & FTContributedAmt & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='106' "
                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '106'," & FTContributedAmt & "," & FTContributedAmt & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _FNIncentiveAmt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNIncentiveAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='011' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '011'," & _FNIncentiveAmt.ToString & "," & _FNIncentiveAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _BonusAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_BonusAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='008' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _BonusAmt.ToString & "," & _BonusAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _FNEmpDiligent > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNEmpDiligent.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    If _FNDeligentPeriod = 0 Then
                        _Qry &= vbCrLf & " AND FTFinCode='008' "
                    Else
                        _Qry &= vbCrLf & " AND FTFinCode='009' "

                    End If


                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        If _FNDeligentPeriod = 0 Then
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                        Else
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '009'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                        End If
                    End If

                End If

                ' Expennd Fincode 108
                If _FCExpend > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FCExpend.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='108' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '108'," & _FCExpend.ToString & "," & _FCExpend.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                'If _AmtReturnVacation > 0 Then

                '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_AmtReturnVacation.ToString) & " "
                '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTFinCode='023' "

                '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '023'," & _ShiftValue.ToString & "," & _AmtReturnVacation.ToString & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If

                'End If
                '----------- เงินคืนพักร้อน-------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave (FTPayYear, FTPayTerm, FNHSysEmpID, FTLeaveType, FNTotalHour, FNTotalMinute, FNTotalPayHour, FNTotalPayMinute, FNTotalNotPayHour,FNTotalNotPayMinute,FNTotalPayAmt,FNTotalNotPayAmt)"
                _Qry &= vbCrLf & "  SELECT      '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTLeaveType,Convert(numeric(18,2), Sum(FNTotalMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalMinute) %60) /100.00)) , "
                _Qry &= vbCrLf & "  Sum(FNTotalMinute), Convert(numeric(18,2), Sum(FNTotalPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalPayMinute) %60) /100.00)), Sum(FNTotalPayMinute),  Convert(numeric(18,2),Sum(FNTotalNotPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalNotPayMinute) %60) /100.00)), SUM(FNTotalNotPayMinute)"
                _Qry &= vbCrLf & ", Sum(FNTotalPayMinute) * " & _FNSlaryPerMin & ", SUM(FNTotalNotPayMinute) * " & _FNSlaryPerMin
                _Qry &= vbCrLf & "  FROM THRTTransLeave "
                _Qry &= vbCrLf & " WHERE        (FNHSysEmpID = '" & Val(_EmpCode) & "') "
                _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' "
                _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "' "
                _Qry &= vbCrLf & "  GROUP BY   FNHSysEmpID, FTLeaveType"
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            End If

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & "  	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate (FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg, FNVacationRetMin, FNVacationRetAmt,FNWorkDay,FTStateCalSocial,FTStateCalTax, FNFundRate, FNNetpayBeforeExpend)"
            _Qry &= vbCrLf & " SELECT TOP 1  FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg, FNVacationRetMin, FNVacationRetAmt,FNWorkDay,FTStateCalSocial,FTStateCalTax, FNFundRate, FNNetpayBeforeExpend"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            _Qry &= vbCrLf & " SELECT FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate ( FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay)"
            _Qry &= vbCrLf & " SELECT  FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

        Next

        Return True

    End Function

    Public Shared Function CalculateWeekEnd_LA(ByVal _User As String, ByVal _EmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
        ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
        Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
        Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0, Optional FNStateSalaryType As Integer = 0,
        Optional _FNExchangeRate As Double = 0, Optional _FNExchangeRateTHB As Double = 0, Optional FNWorkDayInWeek As Integer = 13,
        Optional FNWorkDayInMonth As Integer = 26, Optional FNWorkDayInWeekBF As Integer = 0, Optional SocialExchangeRate As Double = 0, Optional TaxExchangeRate As Double = 0, Optional _FNCalType As Integer = 0) As Boolean

        Dim result As Boolean = False


        If _FNCalType = "2" Or _FNCalType = "3" Then

            If _EmpType = "2012610375" Then
                result = CalculateWeekEnd_LA_Monthly_THAI(_User, _EmpCode,
                    _EmpType, _StartDate, _EndDate, _PayYear,
                    _PayTerm, _PayDate, _CalIns, _EmpCalType,
                    _StateCalRetire, _ReturnVacation,
                    FTStaDeductAbsent, FTStaCalPayRoll, 0,
                    _FNExchangeRate, _FNExchangeRateTHB, FNWorkDayInWeek,
                    FNWorkDayInMonth, FNWorkDayInWeekBF, SocialExchangeRate, TaxExchangeRate)

            Else
                result = CalculateWeekEnd_LA_Monthly(_User, _EmpCode,
                    _EmpType, _StartDate, _EndDate, _PayYear,
                    _PayTerm, _PayDate, _CalIns, _EmpCalType,
                    _StateCalRetire, _ReturnVacation,
                    FTStaDeductAbsent, FTStaCalPayRoll, 0,
                    _FNExchangeRate, _FNExchangeRateTHB, FNWorkDayInWeek,
                    FNWorkDayInMonth, FNWorkDayInWeekBF, SocialExchangeRate, TaxExchangeRate)
            End If




        Else
            result = CalculateWeekEnd_LA_Daily(_User, _EmpCode,
                    _EmpType, _StartDate, _EndDate, _PayYear,
                    _PayTerm, _PayDate, _CalIns, _EmpCalType,
                    _StateCalRetire, _ReturnVacation,
                    FTStaDeductAbsent, FTStaCalPayRoll, 1,
                    _FNExchangeRate, _FNExchangeRateTHB, FNWorkDayInWeek,
                    FNWorkDayInMonth, FNWorkDayInWeekBF, SocialExchangeRate, TaxExchangeRate)
        End If

        Return result
    End Function

    Public Shared Function CalculateWeekEnd_LA_Monthly_THAI(ByVal _User As String, ByVal _EmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
        ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
        Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
        Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0, Optional FNStateSalaryType As Integer = 0,
        Optional _FNExchangeRate As Double = 0, Optional _FNExchangeRateTHB As Double = 0, Optional FNWorkDayInWeek As Integer = 13,
        Optional FNWorkDayInMonth As Integer = 26, Optional FNWorkDayInWeekBF As Integer = 0, Optional SocialExchangeRate As Double = 0, Optional TaxExchangeRate As Double = 0) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim CountDayPerMonth As Integer = FNWorkDayInMonth
        Dim _Qry As String
        Dim _SalaryDevide As Integer = 0
        Dim FNVacationRetMin, FNVacationRetAmt, FNVacationPerDayLapaid As Double



        Dim _DtFin As New DataTable
        _DtFin.Columns.Add("FTFinCode", GetType(String))
        _DtFin.Columns.Add("FCTotalFinAmt", GetType(String))
        Dim _SeniorityAmt As Double = 0
        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTPaymentCode As String, _FTBankCode As String, _FNChildNotLearn As Double
        Dim _FTCalSocialSta As String, _FTCalTaxSta As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FTDivCode As String, _FTPos As String


        Dim _FTEmpIdNo As String, _FTEmpIdNo1 As String, _FTSocialNo As String, _FTBranchCode As String, _FTAccNo As String, _FCLifeFeeMoney As Double
        Dim _FTShift As String




        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน

        Dim _tmpSocailRateKM As DataTable
        Dim _tmpWelfareKM As DataTable
        Dim _tmpWorkAge As DataTable
        Dim _TmpFDDateEnd As String = ""
        Dim _TmpFDDateEndP As String = ""  ' เพิ่มเงือนไข วันที่ลาออก มีผล วันที่ 2 - 16  จ่ายค่า health & transsport
        Dim _DTEmpWorkDay As New DataTable

        Dim _FCOt1_Baht, _FNTotalIncome, _FNTotalRecalSSO, _FNSocial, _FNSocialCmp, _FNTotalRecalTAX, _FNTax, _FNNetpay As Double
        Dim _Dtemp As DataTable

        Dim _SocialRate, _SocialRateCmp As Double


        _Qry = " SELECT  M.FNHSysEmpID , E.FTEmpCode "
        _Qry &= vbCrLf & " , M.FNSalary, FCOt1_Baht, FNTotalIncome  "
        _Qry &= vbCrLf & " , FNTotalRecalSSO, FNSocial, FNSocialCmp "
        _Qry &= vbCrLf & " , FNTotalRecalTAX, FNTax, FNTax5, FNTax10, FNTax15 , FNTax20, FNTax25 "
        _Qry &= vbCrLf & "  , FNNetpay   , M.FNHSysCmpId   , FTStateActive "
        _Qry &= vbCrLf & "  ,FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId,  FNHSysPayRollPayId  "
        _Qry &= vbCrLf & "  , E.FNHSysBankId, E.FNHSysBankBranchId, E.FTAccNo, E.FTSocialNo, E.FTTaxNo , E.FTEmpIdNo "
        _Qry &= vbCrLf & " FROM    [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMPayroll_Monthly M  "
        _Qry &= vbCrLf & " LEFT JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee E ON E.FNHSysEmpID = M.FNHSysEmpID AND  E.FNHSysCmpId = M.FNHSysCmpId "
        _Qry &= vbCrLf & " WHERE FTStateActive ='1' "
        _Qry &= vbCrLf & " AND M.FNHSysEmpID =" & Val(_EmpCode) & " "
        _Qry &= vbCrLf & " AND M.FNHSysCmpId = " & Val(HI.ST.SysInfo.CmpID) & " "


        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        Dim _n As Integer = 0


        For Each R As DataRow In _Dtemp.Rows

            _n = 1

            _FCSalary = R!FNSalary.ToString
            _FCOt1_Baht = R!FCOt1_Baht.ToString
            _FNTotalIncome = R!FNTotalIncome.ToString
            _FNTotalRecalSSO = R!FNTotalRecalSSO.ToString
            _FNSocial = R!FNSocial.ToString
            _FNSocialCmp = R!FNSocialCmp.ToString
            _FNTotalRecalTAX = R!FNTotalRecalTAX.ToString
            _FNTax = R!FNTax.ToString
            _FNNetpay = R!FNNetpay.ToString

            _FTPaymentCode = R!FNHSysPayRollPayId.ToString
            _FTBankCode = R!FNHSysBankId.ToString
            _FTBranchCode = R!FNHSysBankBranchId.ToString

            _FTDeptCode = R!FNHSysDeptId.ToString : _FTDivCode = R!FNHSysDivisonId.ToString
            _FTSectCode = R!FNHSysSectId.ToString
            _FTUnitCode = R!FNHSysUnitSectId.ToString : _FTPos = R!FNHSysPositId.ToString

            _FTEmpIdNo = R!FTTaxNo.ToString 'R!FTEmpIdNo.ToString
            _FTEmpIdNo1 = R!FTEmpIdNo.ToString
            _FTSocialNo = R!FTSocialNo.ToString

            _FTAccNo = R!FTAccNo.ToString

        Next



        _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
        _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
        _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
        _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

        _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
        _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
        _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
        _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

        If _n > 0 Then




            _Qry = "	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll (FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,FTEmpIdNo1,FTSocialNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId,  FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo "
            _Qry &= vbCrLf & "   ,FNSalary"
            ''    _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"

            _Qry &= vbCrLf & " , FCOt1_Baht"
            ''_Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & " , FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FNNetpay "
            _Qry &= vbCrLf & " , FNSocialRateEmp,FNSocialRateCmp,FNSocialCmp )"
            _Qry &= vbCrLf & " 	SELECT '" & HI.UL.ULF.rpQuoted(_User) & "',CONVERT(varchar(10),GetDate(),111),CONVERT(varchar(8),GetDate(),114)"
            _Qry &= vbCrLf & " 	,'" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ""
            _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo1) & "','" & HI.UL.ULF.rpQuoted(_FTSocialNo) & "','" & _EmpType & "','" & HI.UL.ULDate.ConvertEnDB(_PayDate) & "'"
            _Qry &= vbCrLf & " 	," & Val(_FTDeptCode) & ""
            _Qry &= vbCrLf & " 	," & Val(_FTDivCode) & " "
            _Qry &= vbCrLf & " 	," & Val(_FTSectCode) & " "
            _Qry &= vbCrLf & " 	," & Val(_FTUnitCode) & " "
            _Qry &= vbCrLf & " 	," & Val(_FTPos) & " "

            _Qry &= vbCrLf & " 	," & Val(_FTPaymentCode) & " "
            _Qry &= vbCrLf & " 	," & Val(_FTBankCode) & " "
            _Qry &= vbCrLf & " 	," & Val(_FTBranchCode) & " "

            _Qry &= vbCrLf & " 	,N'" & HI.UL.ULF.rpQuoted(_FTAccNo) & "' "


            _Qry &= vbCrLf & " 	," & Val(_FCSalary) & ""
            _Qry &= vbCrLf & ", " & Val(_FCOt1_Baht) & " "

            _Qry &= vbCrLf & "," & Val(_FNTotalRecalSSO) & " "
            _Qry &= vbCrLf & "," & Val(_FNTotalRecalTAX) & " "

            _Qry &= vbCrLf & "," & Val(_FNTotalIncome) & " "
            _Qry &= vbCrLf & "," & Val(_FNSocial) & " "
            _Qry &= vbCrLf & "," & Val(_FNTax) & " "
            _Qry &= vbCrLf & "," & Val(_FNNetpay) & ""

            _Qry &= vbCrLf & "," & Val(_SocialRate) & " "
            _Qry &= vbCrLf & "," & Val(_SocialRateCmp) & " "
            _Qry &= vbCrLf & "," & Val(_FNSocialCmp) & " "


            '  , FNVacationRetMin, FNVacationRetAmt
            '_FNNetpayOrg
            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)




            'If _FTCalTaxSta <> "1" And _FTEmpIdNo <> "" Then
            '    '-----------------------------ภาษี -----------------------------------------------------
            '    _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTaxYear "
            '    _Qry &= vbCrLf & "  WHERE FTYear='" & _PayYear & "' "
            '    _Qry &= vbCrLf & "  AND  FTEmpIdNo='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' AND FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " "
            '    _Qry &= vbCrLf & "  INSERT INTO THRTTaxYear (FNHSysCmpId,FTYear, FTEmpIdNo, FNAmt, FNExpenses, FNNetAmt, "
            '    _Qry &= vbCrLf & "  FNModEmp, FNModMate, FNChildNotLern, FNChildLern, FNChildNotLernAmt, FNChildLernAmt, FNInsurance, FNProvidentfund, FNInterest, FNSocial, FNDonation, "
            '    _Qry &= vbCrLf & "  FNProvidentfundOver, FNGPF, FNSavingsFund, FNCommutation, FNUnitRMF, FNModFather, FNModMother, FNModFatherMate, FNModMotherMate, FNUnitLTF, "
            '    _Qry &= vbCrLf & "  FNDonationLern, FNParentsHealthInsurance, FNSupportSport, FNAcquisitionOfProperty, FNPension, FNTravel, FNTotalCalTax, FNTotalTax,FNTotalTaxPay )"
            '    _Qry &= vbCrLf & "  SELECT " & HI.ST.SysInfo.CmpID & ",'" & _PayYear & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "

            '    With _EmpTaxYear

            '        _Qry &= vbCrLf & "," & .FTAmt & " "
            '        _Qry &= vbCrLf & "," & .FTExpenses & ""
            '        _Qry &= vbCrLf & "," & .FTNetAmt & ""
            '        _Qry &= vbCrLf & "," & .FTModEmp & ""
            '        _Qry &= vbCrLf & "," & .FTModMate & ""
            '        _Qry &= vbCrLf & "," & .FNChildNotLern & ""
            '        _Qry &= vbCrLf & "," & .FNChildLern & " "
            '        _Qry &= vbCrLf & "," & .FTChildNotLern & ""
            '        _Qry &= vbCrLf & "," & .FTChildLern & ""
            '        _Qry &= vbCrLf & "," & .FTInsurance & ""
            '        _Qry &= vbCrLf & "," & .FTProvidentfund & ""
            '        _Qry &= vbCrLf & "," & .FTInterest & ""
            '        _Qry &= vbCrLf & "," & .FTSocial & ""
            '        _Qry &= vbCrLf & "," & .FTDonation & ""
            '        _Qry &= vbCrLf & "," & .FTProvidentfundOver & ""
            '        _Qry &= vbCrLf & "," & .FTGPF & ""
            '        _Qry &= vbCrLf & "," & .FTSavingsFund & ""
            '        _Qry &= vbCrLf & "," & .FTCommutation & ""
            '        _Qry &= vbCrLf & "," & .FTUnitRMF & ""
            '        _Qry &= vbCrLf & "," & .FTModFather & ""
            '        _Qry &= vbCrLf & "," & .FTModMother & ""
            '        _Qry &= vbCrLf & "," & .FTModFatherMate & ""
            '        _Qry &= vbCrLf & "," & .FTModMotherMate & ""
            '        _Qry &= vbCrLf & "," & .FTUnitLTF & ""
            '        _Qry &= vbCrLf & "," & .FTDonationLern & ""
            '        _Qry &= vbCrLf & "," & .FTParentsHealthInsurance & ""
            '        _Qry &= vbCrLf & "," & .FTSupportSport & ""
            '        _Qry &= vbCrLf & "," & .FTAcquisitionOfProperty & ""
            '        _Qry &= vbCrLf & "," & .FTPension & ""
            '        _Qry &= vbCrLf & "," & .FTTravel & ""
            '        _Qry &= vbCrLf & "," & .FTTotalCalTax & ""
            '        _Qry &= vbCrLf & "," & .FTTotalTax & ""
            '        _Qry &= vbCrLf & "," & .FTTotalTaxPay & ""

            '    End With

            '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            '    '----------------------------- ภาษี -----------------------------------------------------
            'End If

            '-----------------------------รายได้อื่นๆ -----------------------------------------------------

            _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            'Dim _AllFincode As String = ""

            'For Each _R As DataRow In _DtFin.Rows
            '    _AllFincode = _R!FTFincode.ToString

            '    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            '    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTFinCode, FTFinAmt," & _R!FCTotalFinAmt.ToString & ",0," & _R!FCTotalFinAmt.ToString & ""
            '    _Qry &= vbCrLf & " FROM  THRMEmployeeFin "
            '    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
            '    _Qry &= vbCrLf & " AND  FTFinCode = ('" & _AllFincode & "') "

            '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            'Next

            'For Each _R As DataRow In _dt.Select("FCFinAmt<>0")
            '    _AllFincode = _R!FTFincode.ToString

            '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_R!FCFinAmt.ToString) & " "
            '    _Qry &= vbCrLf & " ,FCFinAmtOther=" & _R!FCFinAmt.ToString & " "
            '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
            '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
            '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
            '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
            '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
            '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
            '    _Qry &= vbCrLf & " AND FTFinCode='" & _AllFincode & "' "

            '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then

            '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ",'" & _AllFincode & "',0, 0," & _R!FCFinAmt.ToString & "," & _R!FCFinAmt.ToString & ""

            '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            '    End If

            'Next




            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & "  	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate (FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & " FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate)"
            _Qry &= vbCrLf & " SELECT TOP 1  FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & "FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            _Qry &= vbCrLf & " SELECT FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate ( FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay)"
            _Qry &= vbCrLf & " SELECT  FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)



            Return True
        Else
            Return False

        End If




    End Function

    Public Shared Function CalculateWeekEnd_LA_Monthly(ByVal _User As String, ByVal _EmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
        ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
        Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
        Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0, Optional FNStateSalaryType As Integer = 0,
        Optional _FNExchangeRate As Double = 0, Optional _FNExchangeRateTHB As Double = 0, Optional FNWorkDayInWeek As Integer = 13,
        Optional FNWorkDayInMonth As Integer = 26, Optional FNWorkDayInWeekBF As Integer = 0, Optional SocialExchangeRate As Double = 0, Optional TaxExchangeRate As Double = 0) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim CountDayPerMonth As Integer = FNWorkDayInMonth
        Dim _Qry As String
        Dim _dt As DataTable
        Dim _dttemp As DataTable
        Dim _dttran As DataTable
        Dim _SalaryDevide As Integer = 0
        Dim FNVacationRetMin, FNVacationRetAmt, FNVacationPerDayLapaid As Double


        Dim _SsoBefore As Double = 0
        Dim _SsoBeforeAmt As Double = 0

        Dim _InsuranceEmpyeeBefore As Double = 0
        Dim _InsuranceEmpyerBefore As Double = 0

        Dim _DtFin As New DataTable
        _DtFin.Columns.Add("FTFinCode", GetType(String))
        _DtFin.Columns.Add("FCTotalFinAmt", GetType(String))
        Dim _SeniorityAmt As Double = 0
        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTPaymentCode As String, _FTBankCode As String, _FNChildNotLearn As Double
        Dim _FCReduceDonate As Double, _FCLifeInsurance As Double
        Dim _FCLoanHouse As Double
        Dim _FCShare As Double, _FCReduceFather As Double, _FCReduceMother As Double
        Dim _FCReSpouseFather As Double, _FCReSpouseMother As Double, _FCReduceEducationSupport As Double, _FTMarryIncome As String
        Dim _FTCalSocialSta As String, _FTCalTaxSta As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FTEmpIdNo As String, _FTEmpIdNo1 As String, _FTSocialNo As String, _FTBranchCode As String, _FTAccNo As String, _FCLifeFeeMoney As Double
        Dim _FCOtherAdd As Double, _FTOtherAddCalculateSocial As String, _FTOtherAddCalculateTax As String
        Dim _FCOtherAddOt As Double, _FTOtherAddOtCalculateSocial As String, _FTOtherAddOtCalculateTax As String, _FCBFShiftMoney As Double
        Dim _FTShiftMoneyCalculateSocial As String, _FTShiftMoneyCalculateTax As String, _FCDiligent As Double
        Dim _FTDiligentCalculateSocial As String, _FTDiligentCalculateTax As String, _FCBonusEndYear As Double
        Dim _FTBonusEndCalculateSocial As String, _FCOtherDeduct As Double, _FTBonusEndCalculateTax As String
        Dim _FCShelter As Double, _FTShelterCalculateSocial As String, _FTShelterCalculateTax As String
        Dim _FCShareFactory As Double, _FTShareFactoryCalculateSocial As String
        Dim FNPayLeaveBusinessBaht, FNPayLeaveSickBaht, FNPayLeaveSpecialBaht, FNParturitionLeave As Double, FNParturitionLeaveReCalTax As Double
        Dim FNPayLeaveBusinessBahtMin, FNPayLeaveSickBahtMin, FNPayLeaveSpecialBahtMin, FNParturitionLeaveMin As Double
        Dim GFNPayLeaveBusinessBahtMin, GFNPayLeaveSickBahtMin, GFNPayLeaveSpecialBahtMin, GFNParturitionLeaveMin As Integer
        Dim _FTShift As String
        Dim _FNTime, _FNNotRegis As Double
        Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
        Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
        Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
        Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double
        Dim _FNLeavePay, _FNLeaveNotPay As Double, _FNTimeMin, _FNOT1Min As Double
        Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
        Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
        Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
        Dim _GFNTime, _GFNNotRegis As Double
        Dim _GFNOT1 As Double, _GFNOT1_5 As Double, _GFNOT2 As Double, _GFNOT3 As Double, _GFNOT4 As Double
        Dim _GFNLeaveSick As Double, _GFNLeaveBusiness As Double
        Dim _GFNLeaveVacation As Double, _GFNLeavePregnant As Double, _GFNLeaveOrdain As Double, _GFNLeaveSpecial As Double
        Dim _GFNLeaveMarry As Double, _GFNLeaveOther As Double, _GFNLateNormalMin As Double
        Dim _GFNLateNormalMinNotHoliday As Double = 0
        Dim _GFNLateNormalCut As Double, _GFNLateOtMin As Double, _GFNLateOtCut As Double
        Dim _GFNLateMorning As Double, _GFNLateAfternoon As Double, _GFNAbsent, _GFNCutAbsent As Double
        Dim _GFNLeavePay As Double, _GFNTimeMin, _GFNOT1Min, _GFNTimeMin_Real_After_Probation As Double
        Dim _GFNOT1_5Min As Double, _GFNOT2Min As Double, _GFNOT3Min As Double, _GFNOT4Min As Double, _GFNLateMMin As Double
        Dim _GFNLateAfMin As Double, _GFNRetireMMin As Double, _GFNRetireAfMin As Double
        Dim _GFNRetireNormalCut As Double, _GFNRetireOtMin As Double, _GFNRetireOtCut As Double
        Dim _dtot As DataTable
        Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double
        Dim _FCAccumulateIncome As Double, _FCAccumulateSocial As Double, _FCAccumulateTax As Double
        Dim _FTSatrtCalculateDate As String, _FTEndCalculateDate As String, _FNEmpDiligent As Double, _FTStateInDustin As String, _FNDeligentPeriod As Integer
        Dim _FTSatrtCalculateDateIns As String, _FTEndCalculateDateIns As String
        Dim _FNEmpBaht, _nBahtOt1 As Double, _nBahtOt15 As Double, _nBahtOt2 As Double, _nBahtOt3 As Double, _nBahtOt4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
        Dim _SocialRate As Double, _SocialRateCmp As Double : Dim _StateSocialOnlyCmppay As Boolean
        Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
        Dim _TotalHoliDay As Integer
        Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String

        Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _FCDeductSourceVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double, _FCSocialCmp As Double
        Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
        Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
        Dim _FTSlary, _FTDivCode, _FTPos As String
        Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
        Dim _Dtemp As DataTable
        Dim _SocialBefore, _SocialBeforeAmt, _SocialPayMax As Double
        Dim _FCAdd, _FTAddCalculateSocial, _FTAddCalculateTax, _FCDeduct, _TotalCalSso, _TotalCalTax, _TaxAmt As Double
        Dim _Gtotalleave, _GtotalleavePay, _GtotalleaveNotPay, _GtotalleavePayCalSso, _GtotalleavePayCalSsoAmt As Double
        Dim _dtLeave As DataTable
        Dim _LeaveCode As String = ""
        Dim _dtAddOtherAmt As DataTable
        Dim _dtAddOtherAmtshift As DataTable
        Dim FCModFather, FCModMother, FCModMateFather, FCModMateMother As Double
        Dim FCPremium, FCInterest, FCUnitRMF, FCUnitLTF, FCDeductDonate, FCDisabledDependents, FCDeductDonateStudy As Double
        Dim FCHealthInsurFatherMotherMate, FTHealthInsurIDFather, FTHealthInsurIDMother As Double
        Dim FTHealthInsurIDFatherMate, FTHealthInsurIDMotherMate As Double
        Dim FTTotalCalContributedAmt, FTContributedAmt, FTCmpContributedAmt, FTTotalCalContributedAcc As Double
        Dim FTTotalCalWorkmen, FTWorkmenAmt, _FTMaxCalWorkmen, _FTMaxWorkmenRate, FTTotalCalWorkmenAcc As Double
        Dim _FTWorkmenAmtBefore, _FTTotalCalWorkmenBefore As Double
        Dim _ShiftAmt As Double = 0
        Dim _ShiftOTAmt As Double = 0
        Dim _ShiftValue As Double = 0
        Dim _ShiftOTValue As Double = 0
        Dim _WorkingDay As Double = 0
        Dim _THRMContributedFund As DataTable
        Dim _EmpDisTax As New HCfg.EmployeeDiscountTax
        Dim _EmpTaxYear As New HCfg.EmpTaxYear
        '   HI.HRCAL.Calculate.LoadDiscountTax()

        Dim _FNSlaryPerDayShiftNinght As Double, _FNSlaryPerDayNormal As Double

        Dim _EmpDisTaxChildAmt As Double = 0
        Dim _FNNetpayOrg As Double = 0.0
        Dim _FNNetpay As Double = 0.0
        Dim _AmtAddCalOT, _GAmtAddCalOT As Double
        Dim CountTerm As Integer = 0
        Dim _SPDateType, _TotalInstalment, _Instalment As Integer
        Dim _ContributedFundBeginPay As Boolean = False
        Dim _DTHoliday As DataTable
        Dim _ShiftAdv As Double = 0
        Dim _AmtPlus As Double = 0
        Dim _GAmtPlus As Double = 0
        Dim FTHldType As Integer = 0
        Dim _AmtRetire As Double = 0
        Dim _WorkAge As Integer = 0 : Dim _WorkAgeDay As Integer = 0 : Dim _WorkAgeSeniority As Integer = 0 : Dim _WorkingDayN As Integer = 0
        Dim _WorkAgeParturition As Integer = 0
        Dim _AmtReturnVacation As Double = 0
        Dim _FNIncentiveAmt As Double = 0
        Dim _FTInsurType As Integer = 0
        Dim _DayAdjAdd As Double = 0
        Dim _WageAdjAdd As Double = 0
        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        Dim _FTStatePayHoliday As String = ""
        Dim _FTEmployeeCode As String = ""
        Dim _FNAttandanceAmt As Double = 0
        Dim _FNHealtCareAmt As Double = 0
        Dim _FNTransportAmt As Double = 0
        Dim _FNChildCareAmt As Double = 0
        Dim _FNChildCareStartAge As Double = 0
        Dim _FNChildCareEndAge As Double = 0
        Dim _FNOTMealAmt As Double = 0
        Dim _FNSocialBase As Double = 0
        Dim _FNWorkAgeSalary As Double = 0
        Dim _FNOTMealAmtUS As Double = 0
        Dim _FNSickLeave As Double = 0
        Dim _LeaveSickPay As Integer = 0
        Dim _FNTotalChildCare As Integer = 0
        Dim _FNNetAttandanceAmt As Double = 0
        Dim _FNNetChildCareAmt As Double = 0
        Dim _FNNetOTMealAmt As Double = 0
        Dim _FNNetSocialBase As Double = 0
        Dim _FNNetOTMealAmtUS As Double = 0
        Dim _FNEmpWorkAge As Integer = 0
        Dim _tmpSocailRateKM As DataTable
        Dim _tmpWelfareKM As DataTable
        Dim _tmpWorkAge As DataTable
        Dim _TmpFDDateEnd As String = ""
        Dim _TmpFDDateEndP As String = ""  ' เพิ่มเงือนไข วันที่ลาออก มีผล วันที่ 2 - 16  จ่ายค่า health & transsport
        Dim _DTEmpWorkDay As New DataTable
        Dim _TmpLeavePay As Integer = 0
        Dim _EmpSex As Integer = 0
        Dim _RatePay As Double = 1
        Dim _SalaryPayOTKM As Double = 0
        Dim _SalaryPayLeave As Double = 0
        Dim _SalaryPayLeaveMin As Double = 0
        Dim _FNEmpStatus As Integer = 0
        Dim _FTStateWorkpermit As String = ""
        Dim _FTStateMedicalCertificate As String = ""
        Dim _BonusAmt As Double = 0

        Calculate.LoadInsuranceVNRate()
        Dim FNSocialEmployeeRate As Double = 0
        Dim FNSocialEmployerRate As Double = 0
        Dim FNHealthEmployeeRate As Double = 0
        Dim FNHealthEmployerRate As Double = 0
        Dim FNUnemploymentEmployeeRate As Double = 0
        Dim FNUnemploymentEmployerRate As Double = 0
        Dim FNUnionEmployeeRate As Double = 0
        Dim FNUnionEmployerRate As Double = 0
        Dim FNStateUnionMember As String = ""
        Dim FDStartDateUnion As String = ""
        Dim FDEndDateUnion As String = ""
        Dim FNUnionAmt As Double = 0
        Dim FNUnionRate As Double = 0

        Dim _FDDateProbation As String = ""

        Dim _FNMoneyMeal As Integer = 0

        _Qry = "SELECT TOP 1 FTCfgData FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.TSESystemConfig WHERE FTCfgName='CfgMeal_LA'"
        _FNMoneyMeal = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_SECURITY, "0"))

        Try
            FNSocialEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eSocialInsurance).FNEmployeeRate
            FNSocialEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eSocialInsurance).FNEmployerRate
            FNHealthEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eHealthInsurance).FNEmployeeRate
            FNHealthEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eHealthInsurance).FNEmployerRate
            FNUnemploymentEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnemploymentInsurance).FNEmployeeRate
            FNUnemploymentEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnemploymentInsurance).FNEmployerRate
            FNUnionEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnionInsurance).FNEmployeeRate
            FNUnionEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnionInsurance).FNEmployerRate
        Catch ex As Exception
            'MG.ShowMsg.mInfo("Invalid Config Value...", 1503310001, "", "")
        End Try


        Dim FNSocialInsuranceEmployee As Double = 0.0
        Dim FNSocialInsuranceEmployer As Double = 0.0
        Dim FNHealthInsuranceEmployee As Double = 0.0
        Dim FNHealthInsuranceEmployer As Double = 0.0
        Dim FNUnemploymentInsuranceEmployee As Double = 0.0
        Dim FNUnemploymentInsuranceEmployer As Double = 0.0
        Dim FNUnionInsuranceEmployee As Double = 0.0
        Dim FNUnionInsuranceEmployer As Double = 0.0

        Dim FNSocialInsuranceEmployeeOrg As Double = 0.0
        Dim FNSocialInsuranceEmployerOrg As Double = 0.0
        Dim FNHealthInsuranceEmployeeOrg As Double = 0.0
        Dim FNHealthInsuranceEmployerOrg As Double = 0.0
        Dim FNUnemploymentInsuranceEmployeeOrg As Double = 0.0
        Dim FNUnemploymentInsuranceEmployerOrg As Double = 0.0
        Dim FNUnionInsuranceEmployeeOrg As Double = 0.0
        Dim FNUnionInsuranceEmployerOrg As Double = 0.0




        _DTEmpWorkDay.Columns.Add("FNSalary", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNDay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT1", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT15", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT2", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT3", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT4", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNHoloday", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLate", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNAbsent", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLateCutAmtAbsent", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeavePay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeaveNotPay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNBusiness", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSpecial", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNParturition", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNVacation", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNShiftNo", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSlaryOTPerMin", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSlaryNormal", GetType(Double))



        Dim _DTEmpPayLeaveSick As New DataTable
        _DTEmpPayLeaveSick.Columns.Add("FNSalary", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNDay", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNPayPer", GetType(Double))

        _Qry = "Select TOP 1 FNCalType FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType WHERE FNHSysEmpTypeId=" & Val(_EmpType) & "  "
        Dim _TmpCalType As Integer = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "0"))

        If FTStaCalPayRoll = 0 Then
            _DateStartOfMonth = _StartDate  'วันแรกของเดือน
            _DateEndOfMonth = _EndDate 'วันแของเดือน
        Else
            _DateStartOfMonth = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
            _DateEndOfMonth = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        End If
        '----------------------------------   Variable  ------------------------------------

        Dim _DateReset As String
        _Qry = " Select Case When RiGHT(FTCurrenDate, 5) >= FTLeaveReset Then LEFT(FTCurrenDate, 4) Else  LEFT(FTBefore,4)  End +'/' + FTLeaveReset"
        _Qry &= vbCrLf & "  FROM"
        _Qry &= vbCrLf & " ("
        _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
        _Qry &= vbCrLf & " FROM            THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN THRMEmployee AS M WITH(NOLOCK )"
        _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "  WHERE   M.FNHSysEmpID=" & Val(_EmpCode) & " "
        _Qry &= vbCrLf & " ) As T"

        _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")
        '------------------ รวมวันลาป่วย---------------------------------

        _Qry = "   SELECT        (SUM(FNTotalPayMinute) / 480) AS FNTotalPayMinute  "
        _Qry &= vbCrLf & "     "
        _Qry &= vbCrLf & "    FROM THRTTransLeave "
        _Qry &= vbCrLf & "  WHERE        (FTLeaveType = '0')"
        _Qry &= vbCrLf & "  AND (FTDateTrans >= N'" & (_DateReset) & "') "
        _Qry &= vbCrLf & "  AND (FTDateTrans < N'" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "') "
        _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ")"

        _LeaveSickPay = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

        '------------------ รวมวันลาป่วย---------------------------------

        With _EmpTaxYear
            .FTAmt = 0 'เงินได้ก่อนหักค่าใช้จ่าย
            .FTExpenses = 0 'ค่าใช้จ่ายส่วนตัว
            .FTNetAmt = 0 'เงินได้หลังหักค่าใช้จ่าย
            .FTModEmp = 0 'ลดหย่อนส่วนตัว
            .FTModMate = 0 'ลดหย่อนคู่สมรส
            .FNChildNotLern = 0 'จำนวนบุตรไม่ศึกษา
            .FNChildLern = 0 'จำนวนบุตรศึกษา
            .FTChildNotLern = 0 'ลดหย่อนบุตรไม่ศึกษา
            .FTChildLern = 0 'ลดหย่อนบุตรศึกษา
            .FTInsurance = 0 'ลดหย่อนเบี้ยประกัน
            .FTProvidentfund = 0 'กองทุนเลียงชีพส่วนที่ไม่เกิน 10000
            .FTInterest = 0 'ดอกเบี้ยเงินกู้
            .FTSocial = 0 'ประกันสังคม
            .FTDonation = 0 'เงินบริจาค
            .FTProvidentfundOver = 0 'กองทุนเลียงชีพส่วนที่เกิน 10000
            .FTGPF = 0 'เงิน กบข.
            .FTSavingsFund = 0 'เงินกองทุนสงเคราะห์
            .FTCommutation = 0 'เงินชดเชยตามกฎหมายแรงงาน
            .FTUnitRMF = 0 'ค่าซื้อหน่วยลงทุน RTF
            .FTModFather = 0 'ลดหย่อนบิดา
            .FTModMother = 0 'ลดหย่อนมารดา
            .FTModFatherMate = 0 'ลดหย่อนบิดาคู่สมรส
            .FTModMotherMate = 0 'ลดหย่อนมารดาคู่สมรส
            .FTUnitLTF = 0 'ค่าซื้อหน่วยลงทุน LTF
            .FTDonationLern = 0 'เงินบริจาคเพื่อสนับสนุนการศึกษา
            .FTParentsHealthInsurance = 0 'เบี้ยประกันสุขภาพบิดามารดา
            .FTSupportSport = 0 'เงินสนับสนุนการกีฬา
            .FTAcquisitionOfProperty = 0 'ค่าซื้ออาคาร
            .FTPension = 0 'บำนาญ
            .FTTravel = 0 'ท่องเที่ยวในประเทศ
            .FTTotalCalTax = 0 'เงินได้สุทธิ
            .FTTotalTax = 0 'ภาษีที่ต้องจ่าย
        End With
        '------------------ GetConfig WeekEnd ----------------------------------

        ' get discount tax

        With _EmpDisTax
            .Cfg_ModChildAllowanceAgeStart = HCfg._DiscountTax.Cfg_ModChildAllowanceAgeStart
            .Cfg_ModChildAllowanceAgeEnd = HCfg._DiscountTax.Cfg_ModChildAllowanceAgeEnd
            .Cfg_ModChildAllowanceRateNotStudied = HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied
            .Cfg_ModChildAllowanceRateStudy = HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy
        End With
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------
        _Qry = "SELECT FNSeqNo, FNAgeBegin, FNAgeEnd, FNEmpPay As FNEmpAmtPer,  FNCmpPay AS FNCmpAmtPer"
        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMContributions WITH(NOLOCK) "
        _Qry &= vbCrLf & "  WHERE  FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID) & " "
        _THRMContributedFund = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------

        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday
        '------------------ GetConfig Holiday ----------------------------------

        _tmpSocailRateKM = LoadSocailRateKM
        '_tmpWelfareKM = LoadWelfareKM(Integer.Parse(Val(_EmpType)))
        _tmpWorkAge = GetWorkAgeRate(Val(HI.ST.SysInfo.CmpID))

        'For Each ZRow In _tmpWelfareKM.Rows

        '    _FNAttandanceAmt = Val(ZRow!FNAttandanceAmt.ToString)
        '    _FNHealtCareAmt = Val(ZRow!FNHealtCareAmt.ToString)
        '    _FNTransportAmt = Val(ZRow!FNTransportAmt.ToString)
        '    _FNChildCareAmt = Val(ZRow!FNChildCareAmt.ToString)
        '    _FNChildCareStartAge = Val(ZRow!FNChildCareStartAge.ToString)
        '    _FNChildCareEndAge = Val(ZRow!FNChildCareEndAge.ToString)
        '    _FNOTMealAmt = Val(ZRow!FNOTMealAmt.ToString)

        '    Exit For
        'Next

        'FNAttandanceAmt, FNHealtCareAmt, FNTransportAmt, FNChildCareAmt, FNChildCareStartAge, FNChildCareEndAge, FNOTMealAmt
        FNVacationRetMin = 0 : FNVacationRetAmt = 0
        _FTSatrtCalculateDate = _StartDate
        _FTEndCalculateDate = _EndDate
        _FTSatrtCalculateDateIns = _StartDate
        _FTEndCalculateDateIns = _EndDate
        _FNEmpDiligent = 0 : _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
        _FTStateInDustin = "" : _FNSlaryPerMonth = 0
        _FNSlaryPerDay = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0
        _FTEmpState = "" : _FNEmpBaht = 0 : _nBahtOt1 = 0
        _nBahtOt15 = 0 : _nBahtOt2 = 0 : _nBahtOt3 = 0
        _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
        _FCPayVacationBaht = 0 : _FCDeductSourceVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0 : _FCSocialCmp = 0
        _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0 : _SocialRateCmp = 0
        _SocialMinIncome = 0 : _SocialMaxIncome = 0
        _Complete = 0 : _Err = 0 : _FCSalary = -99
        CountTerm = 0
        _TotalInstalment = 0 : _Instalment = 0

        FNPayLeaveBusinessBahtMin = 0 : FNPayLeaveSickBahtMin = 0 : FNPayLeaveSpecialBahtMin = 0 : FNParturitionLeaveMin = 0
        GFNPayLeaveBusinessBahtMin = 0 : GFNPayLeaveSickBahtMin = 0 : GFNPayLeaveSpecialBahtMin = 0 : GFNParturitionLeaveMin = 0
        FNPayLeaveBusinessBaht = 0 : FNPayLeaveSickBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode,M.FTEmpCode AS FTEmployeeCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, Isnull( M.FNEmpStatus,0) AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"
        _Qry &= vbCrLf & " ,M.FNHSysDeptId AS FTDeptCode , M.FNEmpSex "
        _Qry &= vbCrLf & "  ,M.FNHSysDivisonId AS FTDivCode, M.FNHSysSectId AS FTSectCode,  M.FNHSysUnitSectId AS FTUnitSecCode"
        _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
        _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
        _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
        _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
        _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
        _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
        _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
        _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
        _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
        _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide , isnull( M.FTStateWorkpermit ,'0') as FTStateWorkpermit"
        _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge(M.FdDateStart,'" & _EndDate & "') AS FNEmpWorkAgeNew"
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_MonthSeniority(M.FdDateStart,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeMonthSeniority     "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_Salary_CD_NEW(M.FdDateStart,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeNewCD ,  dbo.[FN_Get_Emp_WorkAge_Day](M.FDDateStart,M.FDDateEnd) as FNEmpWorkAgeNewDay"
        _Qry &= vbCrLf & " ,  dbo.[FN_Get_Emp_WorkAge_Day_CD](M.FDDateStart,M.FDDateEnd,M.FNHSysEmpID,'" & _EndDate & "') as FNEmpWorkAgeNewDay_CD "
        _Qry &= vbCrLf & " , isnull(M.FTStateUnionMember,'') as FTStateUnionMember  , isnull(M.FDStartDateUnion,'') as FDStartDateUnion , isnull(M.FDEndDateUnion,'') as FDEndDateUnion"
        _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_EmpCode) & " ) "

        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each R As DataRow In _Dtemp.Rows

            _DtFin.Rows.Clear()
            _FNEmpStatus = Integer.Parse("0" & R!FTStatus.ToString)
            _AmtAddCalOT = 0
            _EmpSex = Val("0" & R!FNEmpSex.ToString)
            _FTStateWorkpermit = R!FTStateWorkpermit.ToString

            _FDDateProbation = R!FDDateProbation.ToString

            FNStateUnionMember = R!FTStateUnionMember.ToString : FDStartDateUnion = R!FDStartDateUnion.ToString : FDEndDateUnion = R!FDEndDateUnion.ToString

            _SalaryDevide = Val(R!FNSalaryDivide.ToString)
            _FTStatePayHoliday = R!FTStatePayHoliday.ToString
            _FNEmpWorkAge = Integer.Parse(Val(R!FNEmpWorkAge.ToString))
            _FTInsurType = Val(R!FTInsurType.ToString)

            If _SalaryDevide <= 0 Then
                _SalaryDevide = 1
            End If

            _FTSlary = R!FTSalary.ToString : _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString
            _FTPaymentCode = R!FTPayCode.ToString : _FTBankCode = R!FTBnkCode.ToString
            _FTCalSocialSta = R!FTCalSocialSta.ToString : _FTCalTaxSta = R!FTCalTaxSta.ToString

            _FTDeptCode = R!FTDeptCode.ToString : _FTDivCode = R!FTDivCode.ToString
            _FTSectCode = R!FTSectCode.ToString
            _FTUnitCode = R!FTUnitSecCode.ToString : _FTPos = R!FTPositCode.ToString

            _FTEmpState = R!FTCalType.ToString

            _FTEmpIdNo = R!FTTaxNo.ToString 'R!FTEmpIdNo.ToString
            _FTEmpIdNo1 = R!FTEmpIdNo.ToString
            _FTSocialNo = R!FTSocialNo.ToString



            _FTBranchCode = R!FTBnkBchCode.ToString
            _FTAccNo = R!FTAccNo.ToString
            '---------------------------------------- ลดหย่อน------------------------------------
            _FNChildNotLearn = 0 : _FCReduceDonate = 0 : _FCLifeInsurance = 0 : _FCLoanHouse = 0 : _FCReduceEducationSupport = 0
            _FCShare = 0 : _FCReduceFather = 0 : _FCReduceMother = 0 : _FCReSpouseFather = 0 : _FCReSpouseMother = 0 : _FTMarryIncome = 0
            _FCLifeFeeMoney = 0

            FCModFather = 0 : FCModMother = 0 : FCModMateFather = 0 : FCModMateMother = 0
            FCPremium = 0 : FCInterest = 0 : FCUnitRMF = 0 : FCUnitLTF = 0 : FCDeductDonate = 0 : FCDisabledDependents = 0 : FCDeductDonateStudy = 0
            FCHealthInsurFatherMotherMate = 0 : FTHealthInsurIDFather = 0 : FTHealthInsurIDMother = 0
            FTHealthInsurIDFatherMate = 0 : FTHealthInsurIDMotherMate = 0

            FTTotalCalContributedAmt = 0 : FTContributedAmt = 0 : FTCmpContributedAmt = 0
            FTTotalCalWorkmen = 0 : FTWorkmenAmt = 0 : _FTMaxCalWorkmen = 0 : _FTMaxWorkmenRate = 0 : FTTotalCalWorkmenAcc = 0
            _FNIncentiveAmt = 0

            _TmpFDDateEnd = _FDDateEnd
            _TmpFDDateEndP = _FDDateEnd

            If _TmpFDDateEnd <> "" Then

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,-1,Convert(Datetime,'" & _TmpFDDateEnd & "')),111)"
                _TmpFDDateEnd = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,Convert(Datetime,'" & _EndDate & "')),111)"
                _TmpFDDateEndP = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

            End If

            '--------- อายุงาน  เดือน
            _WorkAge = Val(R!FNEmpWorkAgeNewCD.ToString)

            '---------อายุงาน วัน
            _WorkAgeDay = Val(R!FNEmpWorkAgeNewDay.ToString)

            '---------อายุงาน เดือน ไม่ปัดขึ้น เพื่อคิด ค่ารางวัลอายุงาน 
            _WorkAgeSeniority = Val(R!FNEmpWorkAgeMonthSeniority.ToString)

            '---------วันทำงาน 
            _WorkingDayN = Val("0" & R!FNEmpWorkAgeNewDay_CD.ToString)

            '----------- Calculate Seniority Bonus For KKN---------------
            _FNWorkAgeSalary = 0
            'If _FTEmpState <> "2" And _FTEmpState <> "3" Then
            ''If-- Val(_PayTerm) Mod 2 <> 0 Then


            'If (_StartDate <= Left(_StartDate, 8) & "24" And _EndDate >= Left(_StartDate, 8) & "24") Then
            '    For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & _WorkAge & " AND  FNWorkAgeEnd>=" & _WorkAge & " ")
            '        _FNWorkAgeSalary = Val(ZRow!FNWorkAgeAmt.ToString)
            '        Exit For
            '    Next
            'End If
            ''End If

            'End If

            '----------- Calculate Seniority Bonus For KKN---------------

            If _FTEmpState = "2" Then
                _TotalInstalment = 12
            Else
                _TotalInstalment = 24
            End If

            _ContributedFundBeginPay = False
            If R!FDFundBegin.ToString <> "" Then
                If R!FDFundBegin.ToString < _FTEndCalculateDate Then

                    If R!FDFundEnd.ToString <> "" Then
                        If R!FDFundEnd.ToString > _FTEndCalculateDate Then
                            _ContributedFundBeginPay = True
                        End If
                    Else
                        _ContributedFundBeginPay = True
                    End If

                End If
            End If

            _Instalment = Val(_PayTerm)
            _FNIncentiveAmt = 0

            '-------------คำนวณ Incentive-------------------------------------------
            Select Case _FTInsurType
                Case 1

                    '---------ประกันเป็นวัน
                    '_Qry = "SELECT SUM ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END  ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    _Qry = " SELECT  SUM(case when (ISNULL(FNProNormal,0)-  ISNULL(FNAmtNormal,0))>0 THEN ISNULL(FNProNormal,0)-  ISNULL(FNAmtNormal,0) ELSE  0  END  "
                    _Qry &= vbCrLf & " + case when (ISNULL(FNProOT,0)-  ISNULL(FNAmtOT,0))>0 THEN ISNULL(FNProOT,0)-  ISNULL(FNAmtOT,0) ELSE  0 END "
                    _Qry &= vbCrLf & " )AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    '_Qry = "SELECT SUM (  ISNULL(FNNetAmt,0)   ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                    '_Qry = "SELECT sum(Isnull(FNAmt,0)) as FNAmt  "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    '_FNIncentiveAmt = _FNIncentiveAmt + CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case 2
                    '---------ประกันเป็นเป็นงวด-------------------------------------------

                    _Qry = "SELECT  ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END  ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM ( SELECT SUM(ISNULL(FNNetAmt,0) ) AS FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) AS FNNetProAmt"
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _Qry &= vbCrLf & " ) AS M"

                    '_Qry = "SELECT   SUM (  ISNULL(FNNetAmt,0)   ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM ( Select SUM(ISNULL(FNNetAmt,0) ) As FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) As FNNetProAmt"
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily With(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	And FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    '_Qry &= vbCrLf & " ) AS M"
                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))
                    '_Qry = "SELECT sum(Isnull(FNAmt,0)) as FNAmt  "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                    '_FNIncentiveAmt = _FNIncentiveAmt + CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case Else
            End Select
            '-------------------------------------

            '---------------------------------------- ลดหย่อน------------------------------------
            _Qry = " SELECT      FNHSysEmpID, FTChildSex, FTStudySta  ,isnull( FTStateNotDisTax ,'0') AS FTStateNotDisTax "
            '_Qry &= vbCrLf & ", dbo.FN_Get_ChildEmp_Age(FDChildBirthDate,'') AS FNChildAge"
            _Qry &= vbCrLf & ",dbo.FN_Get_Emp_WorkAge(FDChildBirthDate,'" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "') AS FNChildAge"
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeChild WITH(NOLOCK) "
            _Qry &= vbCrLf & " WHERE   (FNHSysEmpID = " & Val(_EmpCode) & ")"
            _dttemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)



            Dim _ChildNotStudy As Integer = 0
            Dim _ChildStudy As Integer = 0
            _FNTotalChildCare = 0
            _EmpDisTaxChildAmt = 0

            If (_EmpSex = 1) Then 'Employee Male Not Cal ChildCare
                For Each _Drow As DataRow In _dttemp.Select("FTStateNotDisTax = '0'")

                    '--------  Add Child Care For KKN--------------
                    If Val(_Drow!FNChildAge.ToString) >= _FNChildCareStartAge And Val(_Drow!FNChildAge.ToString) < _FNChildCareEndAge Then
                        _FNTotalChildCare = _FNTotalChildCare + 1
                    End If
                    '--------  Add Child Care For KKN--------------

                    If _Drow!FTStudySta.ToString = "1" Then
                        _ChildStudy = _ChildStudy + 1
                    Else
                        _ChildNotStudy = _ChildNotStudy + 1
                    End If


                    '--------  Add Amt Child Distax For KKN--------------
                    If _Drow!FTStudySta.ToString = "0" Then
                        If _Drow!FTStudySta.ToString = "1" Then
                            If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                                _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateStudy
                            End If
                        Else

                            If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                                _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateNotStudied
                            End If
                        End If

                    End If

                    ' อายุมากกว่า แต่ศึกษาอยู่ ลดหย่อนได้

                    '--------  Add Amt Child Distax For KKN--------------



                Next

                _FNNetChildCareAmt = Format(_FNTotalChildCare * _FNChildCareAmt, "0.00")

            Else
                For Each _Drow As DataRow In _dttemp.Select("FTStateNotDisTax = '0'")
                    If _Drow!FTStudySta.ToString = "1" Then
                        If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                            _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateStudy
                        End If
                    Else

                        If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                            _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateNotStudied
                        End If
                    End If

                    If _Drow!FTStudySta.ToString = "1" Then
                        _ChildStudy = _ChildStudy + 1
                    Else
                        _ChildNotStudy = _ChildNotStudy + 1
                    End If

                Next
            End If



            _FCAccumulateIncome = 0 : _FCAccumulateSocial = 0 : _FCAccumulateTax = 0
            FTTotalCalContributedAcc = 0 : FTTotalCalWorkmenAcc = 0

            '----------- Get Summary ------------------
            LoadIncomeTax(_FTEmpIdNo, _PayYear, _PayTerm, _FCAccumulateIncome, _FCAccumulateTax, _FCAccumulateSocial, CountTerm, FTTotalCalContributedAcc, FTTotalCalWorkmenAcc, Integer.Parse(Val(_EmpCode)))
            '----------- Get Summary ------------------

            With _EmpDisTax

                .BaseSlary = 0
                .OtherSlary = 0
                .BeforeIncom = 0 ' _FCAccumulateIncome
                .BeforeTax = _FCAccumulateTax
                .FTMateIncome = (R!FTMateIncome.ToString = "0")
                ' ----------------------------------------- Clear Discount Tax Value -------------------------
                .Cfg_ModChildAllowanceRateNotStudied = _ChildNotStudy 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
                .Cfg_ModChildAllowanceRateStudy = _ChildStudy 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
                '-------------ลดหย่อนบุตร-----------------

                '--- หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
                .Cfg_ContributedDeducToTheFund = FTTotalCalContributedAcc 'ลูกจ้าง
                '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ

                .Cfg_ModDeductibleDonations = CDbl(Val(R!FCDeductDonate.ToString)) ' ' % ลดหย่อนเงินบริจาค
                .Cfg_ModDeductDonateStudy = CDbl(Val(R!FCDeductDonateStudy.ToString))
                .Cfg_ModFatherReduction = CDbl(Val(R!FCModFather.ToString)) '  'ลดหย่อนบิดา
                .Cfg_ModInsurancePremiums = CDbl(Val(R!FCPremium.ToString)) '  'ค่าเบี้ยประกันชีวิตส่วนบุคคล
                .Cfg_ModLendingforHousing = CDbl(Val(R!FCInterest.ToString)) ' 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย

                .Cfg_ModLTFChk = CDbl(Val(R!FCUnitLTF.ToString)) 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
                .Cfg_ModMateFatherReduction = CDbl(Val(R!FCModMateFather.ToString)) ' 'ลดหย่อนบิดา คู่สมรส
                .Cfg_ModMateMotherReduction = CDbl(Val(R!FCModMateMother.ToString)) '  'ลดหย่อนมารดา คู่สมรส
                .Cfg_ModMotherReduction = CDbl(Val(R!FCModMother.ToString)) ' 'ลดหย่อนมารดา

                .Cfg_ModPersonalExpenChk = 0 ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน

                .Cfg_ModRateReductionsByMarital = (IIf(R!FTMaritalCode.ToString = "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
                .Cfg_ModRateReductionsBySingle = (IIf(R!FTMaritalCode.ToString <> "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ โสด 

                .Cfg_ModRMFChk = CDbl(Val(R!FCUnitRMF.ToString)) '  ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 
                .FCDisabledDependents = CDbl(Val(R!FCDisabledDependents.ToString)) '  'ค่าอุปการะเลี้ยงดูคนพิการหรือทุพพลภาพ
                .FCHealthInsurFatherMotherMate = CDbl(Val(R!FCHealthInsurFatherMotherMate.ToString)) '   'เบี้ยประกันสุขภาพบิดามารดาของผู้มีเงินได้และคู่สมสร

                .FCExceptAgeOver = CDbl(Val(R!FCExceptAgeOver.ToString)) ' ' 'รายการเงินได้ที่ได้รับยกเว้น ของผู้มีเงินได้ตั้งแต่ 65 ปีขึ้นไป 
                .FCExceptAgeOverMate = CDbl(Val(R!FCExceptAgeOverMate.ToString)) ' 'รายการเงินได้ที่ได้รับยกเว้น ของคู่สมรสอายุตั้งแต่ 65 ปีขึ้นไป
                '----------------------------------------------------
            End With
            '---------------------------------------- ลดหย่อน------------------------------------

            _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = "0" : _FTOtherAddCalculateTax = "0" : _FCOtherAddOt = 0
            _FTOtherAddOtCalculateSocial = "0" : _FTOtherAddOtCalculateTax = "0" : _FCBFShiftMoney = 0 : _FTShiftMoneyCalculateSocial = "0"
            _FTShiftMoneyCalculateTax = "0" : _FCDiligent = 0 : _FTDiligentCalculateSocial = "0" : _FTDiligentCalculateTax = "0"
            _FCBonusEndYear = 0 : _FTBonusEndCalculateSocial = "0" : _FTBonusEndCalculateTax = "0" : _FCShelter = 0
            _FTShelterCalculateSocial = "0" : _FTShelterCalculateTax = "0" : _FCShareFactory = 0 : _FTShareFactoryCalculateSocial = "0"
            _FNNetpayOrg = 0.0
            _FNNetpay = 0.0
            _FCSalary = -99
            _FTSlary = (_FTSlary)

            If IsNumeric(_FTSlary) Then
                _MSlary = _FTSlary
                _FCSalary = CDbl(_FTSlary)


                '------------------ คำนวณคืนพักร้อน ----------------------------

                If (_ReturnVacation > 0) Or (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                    Dim _Month As Integer = 0
                    Dim _Leave As Double = 0
                    Dim _SumLeaveVacation As Double = 0
                    Dim _ResetDate As String = ""

                    Dim _DateReset2 As String



                    _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
                    _Qry &= vbCrLf & "  FROM"
                    _Qry &= vbCrLf & " ("
                    '_Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),convert(date, '" & (_EndDate) & "'),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK )"
                    _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
                    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                    _Qry &= vbCrLf & " ) As T"

                    _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                        ''  MsgBox("a")

                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & ("") & "','" & (_EndDate) & "') AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                    ElseIf _PayTerm = "01" Then
                        ''  MsgBox("b")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'2021/01/01','2021/12/31') AS FNEmpVacation"
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                    Else
                        ''  MsgBox("c")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & (_DateReset) & "','" & (_EndDate) & "') AS FNEmpVacation"
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                    End If


                    _Leave = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                    '' MsgBox(_Leave)
                    If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                        ''    MsgBox("d")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'2022/01/01','" & (_EndDate) & "') AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "


                        _Leave = _Leave + (HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        ''     MsgBox(_Leave)

                    End If

                    If _Leave > 0 And _DateReset <> "" Then

                        _Qry = ""
                        If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98' OR ISNULL(FTStateDeductVacation,'') ='1' )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"

                            ''      MsgBox("e")
                            'Else
                            '    _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            '    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            '    _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            '    _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '    '_Qry &= vbCrLf & " 	AND  FTDateTrans < '" & (_DateReset) & "'"
                            '    _Qry &= vbCrLf & " 	AND  FTDateTrans < Convert(varchar(10),DateAdd(year,1,Convert(Datetime,'" & (_DateReset) & "')),111)"
                            '    '_Qry &= vbCrLf & " 	AND  FTDateTrans >=Convert(varchar(10),DateAdd(year,-1,Convert(Datetime,'" & (_DateReset) & "')),111)"
                            '    _Qry &= vbCrLf & " 	AND  FTDateTrans >='" & (_DateReset) & "'"
                        End If

                        _SumLeaveVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        ''    MsgBox(_SumLeaveVacation)
                        If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            ''       MsgBox("f")
                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '' _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & ("2022/01/01") & "'"

                            _SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                            ''         MsgBox(_SumLeaveVacation)
                        Else
                            ''        MsgBox("g")
                            _Qry = " "
                            '_Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            '_Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            '_Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '_Qry &= vbCrLf & " 	AND  FTDateTrans >= '2022/01/01'"
                            '_Qry &= vbCrLf & " 	AND  FTDateTrans <= '2022/12/31'"
                            '_SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                            '''      MsgBox(_SumLeaveVacation)
                        End If



                        If _ReturnVacation <= 0 Then
                            _Qry = " SELECT   TOP 1 FCCfgRetValue"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigReturnVacationSet WITH(NOLOCK) "
                            _Qry &= vbCrLf & "  WHERE      (FNCalType =" & Val(_EmpType) & ")"

                            _ReturnVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        End If

                        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                        Select Case FNStateSalaryType
                            Case 0 'ต่อเดือน

                                _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.0000000"))
                            Case 1 'ต่อวัน

                                _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                        End Select
                        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                        Dim _FNSlaryPerDayRetVa As Double = 0
                        _FNSlaryPerDayRetVa = HI.Conn.SQLConn.GetField("Select Top 1 FNSalary From THRTPayRoll WITH(NOLOCK) where  FNHSysEmpID = " & Val(_EmpCode) & " and  FTPayYear +'/'+FTPayTerm  <'" & _PayYear & "/" & _PayTerm & "'  Order by FTPayYear +'/'+FTPayTerm DESC ", Conn.DB.DataBaseName.DB_HR, "0")


                        If (_Leave * 480) > _SumLeaveVacation Then

                            '' Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), _Leave, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                            Dim _MoneyRetVacationPerDay = _FNSlaryPerDay

                            Dim _ReteReturnVacPerDay As Double = 0
                            If _FNEmpStatus = "2" Or _FDDateEnd <= _EndDate Then
                                If _WorkAge <= 0 Then
                                    Dim _ReVacationDay As Double = 0
                                    Dim _ReVacationPiad As Double = 0

                                    '  _ReVacationDay = Double.Parse(Format(((_Leave / 26) * _WorkAgeDay), "0.000"))
                                    '  _ReVacationDay = Double.Parse((_Leave / 26) * _WorkAgeDay)
                                    '   _Leave = _ReVacationDay
                                    _ReVacationDay = _Leave
                                End If
                                _ReteReturnVacPerDay = _MoneyRetVacationPerDay
                            Else
                                _ReteReturnVacPerDay = _MoneyRetVacationPerDay  ' CDbl(Format((_FNSlaryPerDayRetVa) / CountDayPerMonth, "0.0000000"))
                                FNVacationPerDayLapaid = _MoneyRetVacationPerDay
                            End If
                            FNVacationRetMin = (_Leave * 480) - _SumLeaveVacation
                            If FNVacationRetMin <= 0 Then
                                FNVacationRetMin = 0
                            End If

                            FNVacationRetAmt = 0
                            'Dim _RetVaclationBal As Double = CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000"))

                            _AmtReturnVacation = CDbl(Format((CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000")) * (_ReturnVacation * (_ReteReturnVacPerDay / 480))), "0.000"))
                            FNVacationRetMin = CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000"))
                            FNVacationRetAmt = _AmtReturnVacation

                        End If

                    End If
                End If
                '------------------ คำนวณคืนพักร้อน ----------------------------

                ''------------------ คำนวณคืนพักร้อน ----------------------------

                ''------------------ คำนวณคืนพักร้อน ----------------------------

                _SocialMinIncome = HCfg.HSocialRate.SocialIncomeMin
                _SocialMaxIncome = HCfg.HSocialRate.SocialIncomeMax
                _SocialRate = HCfg.HSocialRate.CalSocialRate
                _SocialRateCmp = HCfg.HSocialRate.CalSocialRateCmp
                _StateSocialOnlyCmppay = HCfg.HSocialRate.StateSocialOnlyCmppay

                _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
                _AmtPlus = 0

                _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                For Each R3 As DataRow In _dtot.Rows
                    Select Case R3!FTCfgOTCode.ToString.ToUpper
                        Case "01"
                            _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                        Case "02"
                            _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                        Case "03"
                            _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                        Case "04"
                            _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "05"
                            _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                    End Select

                Next

                '---------รายได้รายหัก อื่นๆ-------------------------
                '_Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                '_Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                '_Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                '_Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                '_Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                '_Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"

                '_Qry &= vbCrLf & "   , ISNULL(FN.FTStaLateM,0) FTStaLateM ,  ISNULL(FN.FTStaLateA,0) FTStaLateA "

                '_Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                '_Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                '_Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                '_Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ")   AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                '_Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"




                'If _EmpCalType = "0" Then
                '    If Val(_PayTerm) Mod 2 = 0 Then
                '        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                '    Else
                '        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                '    End If
                'End If
                '---------รายได้รายหัก อื่นๆ-------------------------
                _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay,"
                _Qry &= vbCrLf & " FN.FTStaLatePerDay,FN.FTStaAbsentPerDay,FN.FTStaLeavePerDay,FN.FTStaVacationPerDay,FN.FTStaMaternityleaveNotpayPerDay"
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ") AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"

                If _EmpCalType = "0" Then
                    If Val(_PayTerm) Mod 2 = 0 Then
                        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                    Else
                        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                    End If
                End If
                _Qry &= vbCrLf & "UNION  "
                _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial,  0 As FCFinAmt   , FM.FTFinType"
                _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay,"
                _Qry &= vbCrLf & " FN.FTStaLatePerDay,FN.FTStaAbsentPerDay,FN.FTStaLeavePerDay,FN.FTStaVacationPerDay,FN.FTStaMaternityleaveNotpayPerDay"

                _Qry &= vbCrLf & " FROM        [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)   INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE    (FM.FTFinType = '1' OR FM.FTFinType = '2')   and FN.FTFinCode ='008'  AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)

                If _EmpCalType = "0" Then
                    If Val(_PayTerm) Mod 2 = 0 Then
                        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                    Else
                        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                    End If
                End If
                _Qry &= vbCrLf & " and FN.FTFinCode  not in (  Select FTFinCode From [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin  WITH (NOLOCK)  "
                _Qry &= vbCrLf & " WHERE    (FNHSysEmpID = " & Val(_EmpCode) & ") )"

                ' _Qry &= vbCrLf & "  AND FTPayType <> '" & IIf(_EmpCalType = "0" Or (Val(_PayTerm) Mod 2 = 0), "", "1") & "' "



                _dtAddOtherAmt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)




                _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
                _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
                _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
                _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet"
                _Qry &= vbCrLf & "  WHERE        (FTFinCode = N'001') OR  (FTFinCode = N'007')  AND  FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _GAmtAddCalOT = 0
                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTStaCalOT='1' AND FTPayType='0' ")
                    _GAmtAddCalOT = _GAmtAddCalOT + Val(R2!FCFinAmt.ToString)
                Next

                _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = 0 : _FTOtherAddCalculateTax = 0 : _FCOtherDeduct = 0

                '---------------- Adjust Before Calculate------------------------------------
                _Qry = " SELECT        FN.FTStaTax, FN.FTStaSocial, (ISNULL(BF.FCFinAmt,0))  AS FCFinAmt, FM.FTFinType,ISNULL(BF.FNDay,-1) As FNDay,BF.FTFinCode "
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE        (BF.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "')"
                _Qry &= vbCrLf & "  AND (BF.FTPayTerm = '" & HI.UL.ULF.rpQuoted(_PayTerm) & "') "
                _Qry &= vbCrLf & " AND (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2') AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)

                If _AmtReturnVacation > 0 Then
                    _Qry &= vbCrLf & " UNION ALL "
                    _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial, " & _AmtReturnVacation & "  AS FCFinAmt, FM.FTFinType,-1 As FNDay,FM.FTFinCode "
                    _Qry &= vbCrLf & " FROM     [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)  INNER JOIN"
                    _Qry &= vbCrLf & "          [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE (FM.FTFinCode='019') AND   FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                End If

                _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                For Each R2 As DataRow In _dt.Select("FNDay<=0")
                    Select Case R2!FTFinType.ToString
                        Case "1"
                            _FCOtherAdd = _FCOtherAdd + Val((R2!FCFinAmt.ToString))

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax + Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial + Val((R2!FCFinAmt.ToString))

                        Case "2"

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax - Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial - Val((R2!FCFinAmt.ToString))


                            _FCOtherDeduct = _FCOtherDeduct + Val((R2!FCFinAmt.ToString))
                    End Select
                Next

                _DayAdjAdd = 0
                _WageAdjAdd = 0

                For Each R2 As DataRow In _dt.Select("FNDay> 0")

                    _DayAdjAdd = _DayAdjAdd + Val((R2!FNDay.ToString))
                    _WageAdjAdd = _WageAdjAdd + Val((R2!FCFinAmt.ToString))

                Next

                _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
                _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= 480 THEN 480   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= 480 THEN 480   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= 480 THEN 480 ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
                _Qry &= vbCrLf & " , FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO,Max(ISNULL(FTStateMedicalCertificate,'')) AS FTStateMedicalCertificate "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_EmpCode) & " )"

                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_DateStartOfMonth) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_DateEndOfMonth) & "' "
                Else
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                End If

                _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

                _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	,Isnull(SH.FNRatePaid,1) AS FNRatePaid , Isnull(SH.FNStateShift,0) AS FNStateShift  "
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) )     AS FNTime"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT1_5,0) AS FNOT1_5"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT2,0 ) AS FNOT2  , ISNULL(T.FNOT3,0) AS FNOT3, ISNULL(T.FNOT4,0) AS FNOT4"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(T.FNLateNormalCut,0 )   AS FNLateNormalCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateOtMin,0) As FNLateOtMin,ISNULL(T.FNLateOtCut,0) As FNLateOtCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateMMin,0) As FNLateMorning"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateAfMin,0) AS FNLateAfternoon,Isnull(T.FNAbsentCut,0) AS FNAbsentCut "
                _Qry &= vbCrLf & " 	, (CASE WHEN ISNULL(T.FNAbsentSP,0) = ISNULL(T.FNAbsent,0) THEN 0 ELSE  ISNULL(T.FNAbsent,0)  END ) AS FNAbsent_Cut "
                _Qry &= vbCrLf & " 	, ISNULL(T.FNCutAbsent,0) AS FNAbsent "
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) )   AS FNTimeMin"
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0)) As FNTimeMinOrg"
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1Min,0) As FNOT1Min  "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1_5Min,0) As FNOT1_5Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNOT2Min,0) As FNOT2Min "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNLateMMin,0) AS FNLateMMin "
                _Qry &= vbCrLf & " , ISNULL(T.FNLateAfMin,0) AS FNLateAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireMMin,0) AS FNRetireMMin "
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireAfMin,0 )  as FNRetireAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireNormalCut,0) As FNRetireNormalCut "
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireOtMin,0) AS FNRetireOtMin"
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"
                _Qry &= vbCrLf & " ,CASE WHEN T.FTWeekDay=1 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSunday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSunday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=2 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTMonday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTMonday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=3 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTTuesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTTuesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=4 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTWednesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTWednesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=5 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTThursday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTThursday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=6 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTFriday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTFriday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=7 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSaturday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSaturday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  ELSE '0' END AS FTWeekly,ISNULL(FTStateAccept,'') AS FTStateAccept "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
                _Qry &= vbCrLf & "   INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK)  ON  T.FNHSysEmpID =  M.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeWeekly AS EHL WITH (NOLOCK) ON T.FNHSysEmpID=EHL.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmpTypeWeeklySpecial AS ETHL WITH (NOLOCK) ON T.FTDateTrans = ETHL.FDHolidayDate AND M.FNHSysEmpTypeId=ETHL.FNHSysEmpTypeId"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS SH WITH (NOLOCK) ON T.FNHSysShiftID = SH.FNHSysShiftID"

                _Qry &= vbCrLf & "  WHERE (T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "'  "

                If _FDDateEnd <> "" Then
                    _Qry &= vbCrLf & " 	AND T.FTDateTrans < '" & HI.UL.ULDate.ConvertEnDB(_FDDateEnd) & "'  "
                End If
                If _FTEmpState <> "2" And _FTEmpState <> "3" Then ' คำนวณค่าแรงพนักงานรายเดือน
                    _Qry &= vbCrLf & " 	AND T.FTStateAccept = '1'  "
                End If

                _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '---------------Get Trans Daily--------------------------------------
                _GFNTime = 0 : _GFNNotRegis = 0 : _GFNOT1 = 0 : _GFNOT1_5 = 0
                _GFNOT2 = 0 : _GFNOT3 = 0 : _GFNOT4 = 0 : _GFNLeaveSick = 0 : _GFNLeaveBusiness = 0
                _GFNLeaveVacation = 0 : _GFNLeavePregnant = 0 : _GFNLeaveOrdain = 0 : _GFNLeaveMarry = 0 : _GFNLeaveSpecial = 0
                _GFNLeaveOther = 0 : _GFNLateNormalMin = 0 : _GFNLateNormalCut = 0 : _GFNLateOtMin = 0
                _GFNLateOtCut = 0 : _GFNLateMorning = 0 : _GFNLateAfternoon = 0
                _GFNAbsent = 0 : _GFNCutAbsent = 0 : _GFNLeavePay = 0 : _GFNTimeMin = 0 : _GFNOT1Min = 0 : _GFNOT1_5Min = 0 : _GFNTimeMin_Real_After_Probation = 0
                _GFNOT2Min = 0 : _GFNOT3Min = 0 : _GFNLateMMin = 0 : _GFNLateAfMin = 0 : _GFNRetireMMin = 0
                _GFNRetireAfMin = 0 : _GFNRetireNormalCut = 0 : _GFNRetireOtMin = 0 : _GFNRetireOtCut = 0
                _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
                _Gtotalleave = 0 : _GtotalleavePay = 0 : _GtotalleaveNotPay = 0 : _GtotalleavePayCalSso = 0 : _GtotalleavePayCalSsoAmt = 0
                _TotalHoliDay = 0
                _GFNLateNormalMinNotHoliday = 0

                '------------------- เริ่มการคำนวณรายวัน
                Dim _oHoliday As Integer = 0

                _TotalWorkDay = 0
                _ShiftAmt = 0
                _ShiftValue = 0
                _ShiftOTValue = 0
                _ShiftOTAmt = 0
                _FCAdd = 0 : _FTAddCalculateSocial = 0 : _FTAddCalculateTax = 0 : _FCDeduct = 0
                _GAmtPlus = 0

                Dim _RateShipftPerDay As Double = 0
                Dim _StateShift As Integer = 0
                If _FDDateStart > _FTSatrtCalculateDate Then _FTSatrtCalculateDate = _FDDateStart

                Dim _fnMonthWorkAge As Integer = 0

                Dim temp As Date
                Dim temp1 As Integer
                Dim i As Integer
                Dim day1 As Integer
                Dim day2 As Integer

                Dim Day As Integer
                Dim Month As Integer







                Do While _FTSatrtCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTSatrtCalculateDate < _FDDateEnd)

                    ''  _fnMonthWorkAge = DateDiff("m", _FDDateStart, HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate))



                    temp1 = DateDiff("m", HI.UL.ULDate.ConvertEnDB(_FDDateStart), HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate))

                    day1 = DatePart("d", HI.UL.ULDate.ConvertEnDB(_FDDateStart))
                    day2 = DatePart("d", HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate))
                    If day1 > day2 Then
                        temp = DateAdd("m", (temp1 - 1), HI.UL.ULDate.ConvertEnDB(_FDDateStart))
                        Month = (temp1 - 1)
                    Else
                        temp = DateAdd("m", (temp1), HI.UL.ULDate.ConvertEnDB(_FDDateStart))
                        Month = (temp1)
                    End If

                    For i = 1 To 31
                        If temp = HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) Then Exit For
                        temp = DateAdd("d", 1, temp)
                    Next i

                    Day = (i - 1)

                    For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & Month & " AND  FNWorkAgeEnd>=" & Month & " ")
                        _FNWorkAgeSalary = _FNWorkAgeSalary + Val(ZRow!FNWorkAgeAmt.ToString)

                    Next

                    'For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & Month() & " AND  FNWorkAgeEnd>=" & Month() & " ")
                    '    _FNWorkAgeSalary = _FNWorkAgeSalary + Val(ZRow!FNWorkAgeAmt.ToString)

                    'Next


                    'If (_EndDate >= Left(_StartDate, 8) & "07" And _EndDate <= Left(_StartDate, 8) & "24") Then
                    'For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & _fnMonthWorkAge & " AND  FNWorkAgeEnd>=" & _fnMonthWorkAge & " ")
                    '        _FNWorkAgeSalary = _FNWorkAgeSalary + Val(ZRow!FNWorkAgeAmt.ToString)


                    'Next
                    'End If

                    _RateShipftPerDay = 0
                    _oHoliday = 0
                    FTHldType = 0
                    _StateShift = 0
                    Dim _NewSlary As String

                    _Qry = "  SELECT   TOP 1   FNCurrentSlary  AS AMT"
                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK) "
                    _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "') "
                    _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    _FCSalary = _MSlary
                    If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    _Holiday = ""

                    For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                        _Holiday = "H"
                        FTHldType = Val(IR!FTHldType.ToString)
                        Exit For
                    Next

                    _FTShift = ""

                    _FNTime = 0
                    _FNNotRegis = 0
                    _FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
                    _FNOT3 = 0 : _FNOT4 = 0
                    _FNLateNormalMin = 0 : _FNLateNormalCut = 0
                    _FNLateOtMin = 0 : _FNLateOtCut = 0
                    _FNLateMorning = 0 : _FNLateAfternoon = 0
                    _LateCutAbsent = 0 : _FNAbsent = 0
                    _FNTimeMin = 0 : _FNOT1Min = 0
                    _FNOT1_5Min = 0 : _FNOT2Min = 0
                    _FNOT3Min = 0 : _FNOT4Min = 0
                    _FNLateMMin = 0 : _FNLateAfMin = 0
                    _FNRetireMMin = 0 : _FNRetireAfMin = 0
                    _FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
                    _FNRetireOtMin = 0 : _FNRetireOtMin = 0
                    _FNRetireOtCut = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _AmtAddCalOT = 0
                    _GtotalleavePayCalSso = 0
                    _LeaveCode = ""










                    Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                    Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                    For Each R2 In _R

                        _RatePay = Double.Parse("0" & R2!FNRatePaid.ToString)
                        _RateShipftPerDay = _RatePay
                        _StateShift = Integer.Parse("0" & R2!FNStateShift.ToString)

                        _FTShift = R2!FTShift.ToString
                        _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                        _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                        _FNNotRegis = Val(R2!FNNotRegis.ToString)
                        _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                        _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                        _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                        _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                        _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                        _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent_Cut.ToString)
                        _FNOT1Min = Val(R2!FNOT1Min.ToString)
                        _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                        _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                        _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                        _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                        _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                        _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                        _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                        _InOT = R2!FTIn3.ToString
                        _OutOT = R2!FTOut3.ToString

                        _Over = R2!FTOverClock.ToString

                        If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            _TotalWorkDay = _TotalWorkDay + 1

                            _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                            If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                If _FNOT1Min + _FNOT2Min + _FNOT4Min + _FNOT1_5Min > 0 Then
                                    '' _FNNetOTMealAmt = _FNNetOTMealAmt + _FNOTMealAmt
                                End If

                                _SPDateType = 0

                                _Holiday = ""

                                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _Holiday = "H"
                                    Exit For
                                Next

                                If _Holiday <> "" Then _SPDateType = 2

                                Dim _StateLeaveOther As Boolean = False
                                Dim _StateLeavacation As Boolean = False
                                Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                Dim _SumLeave As Integer = 0

                                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                    If Val(sR!LeaveType) = 1 Then
                                        _StateLeavacation = True
                                    Else
                                        _StateLeaveOther = True
                                    End If

                                    If Val(sR!LeaveType) = 2 Then
                                        _StateFTStaMaternityleaveNotpay = True
                                    End If

                                Next

                                '--------------------------- ค่ากะ -------------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)



                                    If _StatePass Then
                                        _ShiftAmt = _ShiftAmt + _ShiftValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ -------------------------------------



                                ''--------------   incentive Header 
                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='011' ")




                                Next


                                '****************************** Bonus 

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='008' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        Dim _Amt As Double = 0
                                        Dim _Cmd As String = ""
                                        _Cmd = "Select Top 1 isnull(FNAmt,0) AS  FNAmt From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus with(nolock)"
                                        _Cmd &= vbCrLf & "where FNHSysEmpID=" & Integer.Parse(_EmpCode)
                                        _Cmd &= vbCrLf & "and FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'"
                                        _Amt = Double.Parse(HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "0"))
                                        _BonusAmt = _BonusAmt + _Amt

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _Amt
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _Amt
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _Amt
                                    End If
                                Next


                                '****************************** End Bonus

                                '--------------------------- ค่ากะ OT ----------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        _ShiftOTAmt = _ShiftOTAmt + _ShiftOTValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftOTValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftOTValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftOTValue

                                    End If

                                Next
                                '--------------------------- ค่ากะ OT ----------------------------------

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='0' And FTFinCode<>'057' And FTFinCode<>'043' And FTFinCode<>'061'  And FTFinCode<>'062' And FTFinCode<>'063' And FTFinCode<>'064' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then

                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + Val(RFin!FCFinAmt.ToString)

                                        If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                            _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                        Else

                                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                            Next

                                        End If
                                    End If
                                Next
                            End If
                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                        End If

                    Next


                    'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                    Select Case FNStateSalaryType
                        Case 0 'ต่อเดือน
                            _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.000"))
                            _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                            ' _SalaryPayLeave = CDbl(Format((_FCSalary) / 26, "0.000")) ' ลาป่วย หารวันทำงานในงวด  meeting 20180227 pMote , pWest , pTuk cd , pAnuwat 

                            _SalaryPayLeave = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                        Case 1 'ต่อวัน
                            _FNSlaryPerMonth = CDbl(Format((_FCSalary * CountDayPerMonth), "0.000"))
                            _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.000"))
                            _SalaryPayLeave = _FNSlaryPerDay
                    End Select
                    'เพิ่มค่าแรง กัมพูชา 20161206
                    '  _SalaryPayLeave = _FNSlaryPerDay
                    _FNSlaryPerMonth = _FNSlaryPerMonth
                    _FNSlaryPerDay = _FNSlaryPerDay
                    _SalaryPayOTKM = _FNSlaryPerDay


                    'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ

                    If _RateShipftPerDay > 1 Then
                        _FNSlaryPerDay = _FNSlaryPerDay * _RateShipftPerDay
                    End If

                    If _StateShift = 1 Then
                        _Qry = " SELECT FTCfgOTCode,Isnull(FCCfgOTNightValue,0) as  FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus   "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    Else
                        _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    End If




                    _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000"))
                    _FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000"))
                    '_SalaryPayLeaveMin = CDbl(Format(CDbl(Format(_SalaryPayLeave / 8, "0.00000")) / 60, "0.00000"))
                    _SalaryPayLeaveMin = CDbl(_SalaryPayLeave / 8) / 60

                    _FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_SalaryPayOTKM + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000")) / 60, "0.00000"))

                    _FNSlaryOTPerHour = CDbl(Format((_SalaryPayOTKM + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000"))

                    If _FTShift = "" Then
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If
                    Else

                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If

                        If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _WorkDay = _WorkDay + 1
                        End If

                        If _Holiday = "" Then
                            _GFNLateNormalMinNotHoliday = _GFNLateNormalMinNotHoliday + _FNLateNormalMin
                        End If

                        _GFNLateNormalMin = _GFNLateNormalMin + _FNLateNormalMin
                        _GFNLateNormalCut = _GFNLateNormalCut + _FNLateNormalCut
                        _GFNLateOtMin = _GFNLateOtMin + _FNLateOtMin
                        _GFNLateOtCut = _GFNLateOtCut + _FNLateOtCut
                        _GFNLateMorning = _GFNLateMorning + _FNLateMorning
                        _GFNLateAfternoon = _GFNLateAfternoon + _FNLateAfternoon
                        _GFNAbsent = _GFNAbsent + _FNAbsent
                        _GFNCutAbsent = _GFNCutAbsent + _LateCutAbsent
                        _GFNTimeMin = _GFNTimeMin + _FNTimeMin
                        _GFNOT1Min = _GFNOT1Min + _FNOT1Min
                        _GFNOT1_5Min = _GFNOT1_5Min + _FNOT1_5Min
                        _GFNOT2Min = _GFNOT2Min + _FNOT2Min
                        _GFNOT3Min = _GFNOT3Min + _FNOT3Min
                        _GFNOT4Min = _GFNOT4Min + _FNOT4Min
                        _GFNLateMMin = _GFNLateMMin + _FNLateMMin
                        _GFNLateAfMin = _GFNLateAfMin + _FNLateAfMin
                        _GFNRetireOtMin = _GFNRetireOtMin + _FNRetireOtMin
                        _GFNRetireOtCut = _GFNRetireOtCut + _FNRetireOtCut
                        _GFNRetireMMin = _GFNRetireMMin + _FNRetireMMin
                        _GFNRetireAfMin = _GFNRetireAfMin + _FNRetireAfMin
                        _GFNRetireNormalCut = _GFNRetireNormalCut + _FNRetireNormalCut

                        If HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) >= HI.UL.ULDate.ConvertEnDB(_FDDateProbation) Then
                            _GFNTimeMin_Real_After_Probation = _GFNTimeMin_Real_After_Probation + (_FNTimeMin - _FNLateNormalMin)
                        End If



                    End If

                    _TmpLeavePay = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0 : FNPayLeaveSpecialBahtMin = 0
                    _FNLeaveNotPay = 0
                    _LeaveCode = ""
                    For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' ")
                        _LeaveCode = sR!LFTLeaveCode.ToString

                        _TmpLeavePay = Val(sR!FNTotalPayMinute.ToString)

                        Select Case sR!LFTLeaveCode.ToString.ToUpper
                            Case "97"

                            Case Else

                                _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                                _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                                _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                                If sR!FTStaCalSSO.ToString = "1" Then
                                    _GtotalleavePayCalSso = Val(sR!FNTotalPayMinute.ToString)
                                End If
                        End Select

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        Select Case sR!LFTLeaveCode.ToString.ToUpper '""Val(sR!LeaveType)
                            Case "98"
                                _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                            Case "998"
                                _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                            Case "1"
                                FNPayLeaveBusinessBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveBusinessBahtMin = GFNPayLeaveBusinessBahtMin + FNPayLeaveBusinessBahtMin

                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                            Case "0"

                                FNPayLeaveSickBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveSickBahtMin = GFNPayLeaveSickBahtMin + FNPayLeaveSickBahtMin
                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)

                                If FNPayLeaveSickBahtMin > 0 Then
                                    _LeaveSickPay = _LeaveSickPay + 1

                                    Dim _PayPer As Double = 0
                                    Select Case _LeaveSickPay
                                        Case Is <= 30
                                            _PayPer = 100
                                        Case Is <= 90
                                            _PayPer = 60
                                        Case Is <= 180
                                            _PayPer = 0
                                    End Select

                                    If _PayPer = 0 Then
                                        FNPayLeaveSickBahtMin = 0
                                        GFNPayLeaveSickBahtMin = GFNPayLeaveSickBahtMin - FNPayLeaveSickBahtMin
                                        _GFNLeaveOther = _GFNLeaveOther - FNPayLeaveSickBahtMin
                                    End If

                                    If _DTEmpPayLeaveSick.Select("FNSalary=" & _SalaryPayLeave & " AND FNPayPer=" & _PayPer & " ").Length > 0 Then
                                        For Each Rx As DataRow In _DTEmpPayLeaveSick.Select("FNSalary=" & _SalaryPayLeave & "  AND FNPayPer=" & _PayPer & "  ")
                                            Rx!FNDay = Val(Rx!FNDay) + FNPayLeaveSickBahtMin
                                            Exit For
                                        Next
                                    Else
                                        _DTEmpPayLeaveSick.Rows.Add(_SalaryPayLeave, FNPayLeaveSickBahtMin, _PayPer)
                                    End If


                                End If


                            Case "999"
                                FNPayLeaveSpecialBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveSpecial = _GFNLeaveSpecial + FNPayLeaveSpecialBahtMin
                            Case "97"
                                FNParturitionLeaveMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNParturitionLeaveMin = GFNParturitionLeaveMin + FNParturitionLeaveMin

                                ' _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                            Case Else
                                _FNLeavePay = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End Select

                    Next

                    _GFNLeavePay = _GFNLeavePay + _FNLeavePay
                    _SocialBefore = 0
                    _SocialBeforeAmt = 0

                    Dim _WageAmtPerDay As Double = 0
                    Dim _WageOTAmtPerDay As Double = 0
                    Dim _TimeOTMdr As Integer = 0

                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    Else
                        _WageAmtPerDay = CDbl(Format((_FNTimeMin) * _FNSlaryPerMin, "0.000"))
                        _FNEmpBaht = _FNEmpBaht + _WageAmtPerDay
                    End If

                    _nBahtOt1 = _nBahtOt1 + CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000"))


                    If FTHldType = 1 And _FNOT3Min > 0 Then
                        _GAmtPlus = _GAmtPlus + _AmtPlus
                    End If

                    _nBahtOt15 = _nBahtOt15 + CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.000"))

                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.000"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.000"))

                    _LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.000"))

                    Dim _TmpFNLapaidAmt As Double = CDbl(Format(_TmpLeavePay * _SalaryPayLeaveMin, "0.000"))
                    Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _SalaryPayLeaveMin, "0.000"))

                    _Lapaid = _Lapaid + _TmpLapaidAmt
                    _GtotalleavePayCalSsoAmt = _GtotalleavePayCalSsoAmt + CDbl(Format(_GtotalleavePayCalSso * _SalaryPayLeaveMin, "0.000"))  'เงินลาจ่ายที่นำไปคิดประกันสังคม

                    If _LeaveCode <> "" And _FNLeaveVacation > 0 Then

                        'Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                        '_FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * (_MoneyRetVacationPerDay / 480), "0.000"))

                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    Else
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.000"))
                    End If

                    If _FTStatePayHoliday <> "1" Then
                        _oHoliday = 0
                    Else

                        If (_FNLeaveNotPay <= 0) Then
                            If _TmpFNLapaidAmt <= 0 Then
                                _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.000"))
                            Else
                                _TotalHoliDay = _TotalHoliDay - _oHoliday
                                _oHoliday = 0
                            End If
                        Else

                            _TotalHoliDay = _TotalHoliDay - _oHoliday
                            _oHoliday = 0
                        End If

                    End If

                    _FNSlaryPerDayNormal = CDbl(Format(_FNSlaryPerDay, "0.00000"))

                    If _DTEmpWorkDay.Select("FNSalary=" & _FNSlaryPerDay & "").Length > 0 Then
                        For Each Rx As DataRow In _DTEmpWorkDay.Select("FNSalary=" & _FNSlaryPerDay & "")

                            Rx!FNDay = Val(Rx!FNDay) + _FNTimeMin
                            Rx!FNOT1 = Val(Rx!FNOT1) + _FNOT1Min
                            Rx!FNOT15 = Val(Rx!FNOT15) + _FNOT1_5Min
                            Rx!FNOT2 = Val(Rx!FNOT2) + _FNOT2Min
                            Rx!FNOT3 = Val(Rx!FNOT3) + _FNOT3Min
                            Rx!FNOT4 = Val(Rx!FNOT4) + _FNOT4Min
                            Rx!FNHoloday = Val(Rx!FNHoloday) + (_oHoliday)
                            Rx!FNLate = Val(Rx!FNLate) + _FNLateNormalCut
                            Rx!FNAbsent = Val(Rx!FNAbsent) + _FNAbsent
                            Rx!FNLateCutAmtAbsent = Val(Rx!FNLateCutAmtAbsent) + _LateCutAbsent
                            Rx!FNLeavePay = Val(Rx!FNLeavePay) + _FNLeavePay
                            Rx!FNLeaveNotPay = Val(Rx!FNLeaveNotPay) + (_FNLeaveNotPay)
                            Rx!FNBusiness = Val(Rx!FNBusiness) + FNPayLeaveBusinessBahtMin
                            Rx!FNSpecial = Val(Rx!FNSpecial) + FNPayLeaveSpecialBahtMin
                            Rx!FNParturition = Val(Rx!FNParturition) + FNParturitionLeaveMin
                            Rx!FNVacation = Val(Rx!FNVacation) + _FNLeaveVacation
                            Rx!FNShiftNo = _StateShift
                            Rx!FNSlaryOTPerMin = _FNSlaryOTPerMin
                            Rx!FNSlaryNormal = _FNSlaryPerDayNormal
                            Exit For
                        Next
                    Else
                        _DTEmpWorkDay.Rows.Add(_FNSlaryPerDay, _FNTimeMin, _FNOT1Min, _FNOT1_5Min,
                                               _FNOT2Min, _FNOT3Min, _FNOT4Min, (_oHoliday),
                                               _FNLateNormalCut, _FNAbsent, _LateCutAbsent, _FNLeavePay,
                                               _FNLeaveNotPay, FNPayLeaveBusinessBahtMin, FNPayLeaveSpecialBahtMin, FNParturitionLeaveMin, _FNLeaveVacation, _StateShift, _FNSlaryOTPerMin, _FNSlaryPerDayNormal)
                    End If

                    _FTSatrtCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTSatrtCalculateDate, 1))

                Loop

                _FNEmpBaht = 0
                _FNEmpBaht = 0
                _nBahtOt1 = 0
                _nBahtOt15 = 0
                _nBahtOt2 = 0
                _nBahtOt3 = 0
                _nBahtOt4 = 0
                _nBahtAbsent = 0
                _LateCutAmt = 0
                _LateCutAmtAbsent = 0
                _HBaht = 0
                _LaNotpaid = 0
                _Lapaid = 0
                FNPayLeaveBusinessBaht = 0 : FNPayLeaveSickBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0
                _FCPayVacationBaht = 0
                _FNSlaryOTPerMin = 0
                Dim _TotalxDay As Integer = 0

                Dim _FNEmpBahtShiftDiff As Double = 0

                Dim FullPreroid As String = ""
                If (_FDDateEnd = "" Or _FTSatrtCalculateDate < _FDDateEnd) And _FDDateStart <= _StartDate Then ''_FTEndCalculateDate
                    FullPreroid = "Y"
                End If


                Dim _FNDaySickPay As Integer = 0
                For Each RxS As DataRow In _DTEmpPayLeaveSick.Rows
                    _FNDaySickPay = _FNDaySickPay + Val(RxS!FNDay)
                Next


                Dim _FNDay As Integer = 0

                For Each Rx As DataRow In _DTEmpWorkDay.Rows

                    _FNDay = _FNDay + Val(Rx!FNDay)

                    _FNSlaryPerMin = CDbl(Format(CDbl(Rx!FNSalary) / 480, "0.00000"))
                    _FNSlaryPerDay = CDbl(Format(CDbl(Rx!FNSalary), "0.00000"))
                    _FNSlaryOTPerMin = Double.Parse("0" & Rx!FNSlaryOTPerMin)

                    _TotalxDay = 0

                    If _DTEmpWorkDay.Rows.Count > 1 Then


                        If Rx!FNShiftNo = 1 And Val(Rx!FNDay) > 0 Then
                            'หาเงินส่วนต่าง ค่าแรงกะกลางคืน 
                            _FNEmpBahtShiftDiff = _FNEmpBahtShiftDiff + (CDbl(Format(CDbl(Rx!FNSalary) * (Rx!FNDay / 480), "0.00000")) - CDbl(Format(CDbl(Rx!FNSlaryNormal) * (Rx!FNDay / 480), "0.00000")))

                            'ElseIf Rx!FNDay > 0 And Rx!FNDay < 12 Then
                            '    _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (Rx!FNDay / 480), "0.00000"))
                        ElseIf FullPreroid = "Y" Then
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_FNSlaryPerMonth / 2, "0.000"))
                        ElseIf _FNDay < 6240 Then
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (_FNDay / 480), "0.00000"))
                        Else
                            '_FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSalary) * Rx!FNTotalDay, "0.00000"))

                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_FNSlaryPerMonth / 2, "0.000"))
                        End If


                    Else

                        If _FNDay > 0 And _FNDay < 5760 And Rx!FNParturition > 1 Then ''หักเงินเดือนปกติของวันที่ลาคลอด
                            ''_FNEmpBaht = _FNEmpBaht + (CDbl(Format(_FNSlaryPerMonth / 2, "0.000")) - CDbl(Format(CDbl(Rx!FNSlaryNormal) * (Rx!FNParturition / 480), "0.00000")))
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (_FNDay / 480), "0.00000"))

                        ElseIf FullPreroid = "Y" And _FNDay = 0 And _FNDaySickPay > 0 Then '' เต็มงวด  ไม่มีเวลาทำงาน  มีลาป่วยจ่าย
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (_FNDaySickPay / 480), "0.00000"))
                        ElseIf FullPreroid = "Y" Then
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_FNSlaryPerMonth / 2, "0.000"))
                        ElseIf (_FDDateEnd <> "" And _FDDateEnd <= _FTEndCalculateDate) Or _FDDateStart > _StartDate Then ''ลาออกระหว่างงวด ''เริ่มงานระหว่างงวด
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (_FNDay / 480), "0.00000"))
                        ElseIf _FNDay < 6240 Then
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (_FNDay / 480), "0.00000"))
                        Else
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_FNSlaryPerMonth / 2, "0.000"))

                        End If

                    End If


                    'Try
                    '    If FNWorkDayInWeekBF > 0 Then
                    '        'If Val(Rx!FNDay) > ((FNWorkDayInMonth - FNWorkDayInWeekBF) * 480) Then
                    '        '    _FNEmpBaht = _FNEmpBaht + CDbl(Format(((FNWorkDayInMonth - FNWorkDayInWeekBF) * 480) * _FNSlaryPerMin, "0.000"))
                    '        'Else

                    '        _TotalxDay = Val(Rx!FNDay) \ 480.0
                    '        _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                    '        _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                    '        ' End If
                    '    Else
                    '        _TotalxDay = Val(Rx!FNDay) \ 480.0
                    '        _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                    '        _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                    '    End If
                    'Catch ex As Exception
                    '    _TotalxDay = Val(Rx!FNDay) \ 480.0
                    '    _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                    '    _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                    'End Try


                    If Double.Parse(Rx!FNShiftNo.ToString) = 1 Then
                        _Qry = " SELECT FTCfgOTCode,Isnull(FCCfgOTNightValue,0) as  FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus   "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    Else
                        _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    End If



                    _nBahtOt1 = _nBahtOt1 + CDbl(Format(Val(Rx!FNOT1) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000"))
                    _nBahtOt15 = _nBahtOt15 + CDbl(Format(Val(Rx!FNOT15) * ((_FNSlaryOTPerMin) * _RateOT15), "0.000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format(Val(Rx!FNOT2) * ((_FNSlaryOTPerMin) * _RateOT2), "0.000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format(Val(Rx!FNOT3) * ((_FNSlaryOTPerMin) * _RateOT3), "0.000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format(Val(Rx!FNOT4) * ((_FNSlaryOTPerMin) * _RateOT4), "0.000"))
                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(Val(Rx!FNAbsent) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((Val(Rx!FNLate)) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((Val(Rx!FNLateCutAmtAbsent)) * _FNSlaryPerMin, "0.000"))
                    _HBaht = _HBaht + CDbl(Format(Val(Rx!FNHoloday) * CDbl(Rx!FNSalary), "0.000"))
                    _LaNotpaid = _LaNotpaid + CDbl(Format(Val(Rx!FNLeaveNotPay) * _FNSlaryOTPerMin, "0.000"))
                    _Lapaid = _Lapaid + CDbl(Format(Val(Rx!FNLeavePay) * _SalaryPayLeaveMin, "0.000"))
                    FNPayLeaveBusinessBaht = FNPayLeaveBusinessBaht + CDbl(Format(Val(Rx!FNBusiness) * _FNSlaryPerMin, "0.000"))

                    ' FNParturitionLeave = FNParturitionLeave + CDbl(Format(Val(Rx!FNParturition) * _FNSlaryPerMin, "0.000"))

                    '' Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                    Dim _MoneyRetVacationPerDay = _FNSlaryPerDay


                    '  MsgBox(_MoneyRetVacationPerDay)
                    _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(Val(Rx!FNVacation) * (_MoneyRetVacationPerDay / 480), "0.000"))
                    '   MsgBox(Val(Rx!FNVacation))
                    ' MsgBox(_FCPayVacationBaht)
                    _FCDeductSourceVacationBaht = _FCDeductSourceVacationBaht + CDbl(Format(Val(Rx!FNVacation) * _MoneyRetVacationPerDay / 480, "0.000"))

                    FNPayLeaveSpecialBaht = FNPayLeaveSpecialBaht + CDbl(Format(Val(Rx!FNSpecial) * (_MoneyRetVacationPerDay / 480), "0.000"))
                    GFNPayLeaveSpecialBahtMin = Val(Rx!FNSpecial)
                    FNVacationRetMin = Val(Rx!FNVacation)
                Next

                FNParturitionLeave = 0
                GFNParturitionLeaveMin = 0
                Dim _DeductAttandanceAmt As Double = 0
                Call CalculateParturition(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), FNParturitionLeave, GFNParturitionLeaveMin, _DeductAttandanceAmt, _WorkAge, _WorkAgeParturition, FNParturitionLeaveReCalTax)

                FNPayLeaveSickBaht = 0
                For Each Rx As DataRow In _DTEmpPayLeaveSick.Rows
                    _FNSlaryPerMin = (CDbl(CDbl(Rx!FNSalary) / 480) * CDbl(Rx!FNPayPer)) / 100.0
                    FNPayLeaveSickBaht = FNPayLeaveSickBaht + CDbl(Format(Val(Rx!FNDay) * _FNSlaryPerMin, "0.000"))
                Next

                ''_FNNetOTMealAmtUS = Format(_FNNetOTMealAmt / _FNExchangeRate, "0.000")

                If _FDDateEnd <> "" And _FDDateEnd <= _TmpFDDateEndP Then
                    'ลาออกในงวดแรก อายุงาน มากกว่า 13 วัน  จ่ายค่าเดินทาง & ค่าสุขภาพ เต็มเดือน

                    'If _WorkAge >= 1 Or _WorkingDayN > 13 Then
                    '    If Val(_PayTerm) Mod 2 = 1 Then
                    '        _FNTransportAmt = _FNTransportAmt + _FNTransportAmt
                    '        _FNHealtCareAmt = _FNHealtCareAmt + _FNHealtCareAmt
                    '    End If
                    'End If
                End If


                If _FTEmpState = "2" Or _FTEmpState = "3" Or (_FDDateEnd <= _EndDate And _FDDateEnd <> "") Then

                    FNPayLeaveBusinessBahtMin = 0 : FNPayLeaveSickBahtMin = 0 : FNPayLeaveSpecialBahtMin = 0 : FNParturitionLeaveMin = 0
                    GFNPayLeaveBusinessBahtMin = 0 : GFNPayLeaveSickBahtMin = 0 : GFNParturitionLeaveMin = 0
                    FNPayLeaveBusinessBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0
                    'FNPayLeaveSickBaht = 0 : ไม่มี เคสคำนวณ ในกรณีลาออก ใช้จากคำนวณปกติ

                    If _dttran.Select("FTStateAccept<>'1' AND FTWeekly <>'1' ").Length > 0 Or _dttran.Rows.Count <= 0 Then
                        Return False
                    End If


                    _Gtotalleave = 0
                    _GtotalleavePay = 0
                    _GtotalleaveNotPay = 0
                    _GFNLeaveOther = 0
                    _GFNLeavePay = 0
                    _GtotalleavePayCalSso = 0
                    _LaNotpaid = 0

                    Dim _NewSlary As String = ""

                    For Each sR As DataRow In _dtLeave.Rows

                        _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                        _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                        _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                        If sR!FTStaCalSSO.ToString = "1" Then
                            _GtotalleavePayCalSso = Val(sR!FNTotalPayMinute.ToString)
                        End If

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            '_FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                            '_GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                        Else
                            _GFNLeavePay = _GFNLeavePay + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End If

                    Next

                    _LaNotpaid = CDbl(Format(_GtotalleaveNotPay * _FNSlaryPerMin, "0.000"))

                    If _LaNotpaid > _FNSlaryPerMonth Then
                        _LaNotpaid = _FNSlaryPerMonth
                    End If

                    _WorkingDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_DateEndOfMonth))) + 1




                    If _WorkingDay > 30 Then _WorkingDay = 30

                    _WorkingDay = CDbl(Format(((_WorkingDay * 480) - (_Gtotalleave)) / 480, "0.000"))
                    _WorkingDay = _WorkingDay - (_GFNAbsent / 480)
                    If _WorkingDay < 0 Then
                        _WorkingDay = 0
                    End If

                Else
                    _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.000"))
                End If
                _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.000"))  '2018/03/02 ยกมา คำนวณคนลาออก ไม่ตรง

                '-----------calculate Other Add For KKN ------------------ 
                Dim _ChkLeave As Integer = 0
                For Each sR As DataRow In _dtLeave.Select("LFTLeaveCode='0' OR LFTLeaveCode='1' OR LFTLeaveCode='2' OR LFTLeaveCode='3' ")
                    _ChkLeave = _ChkLeave + Val(sR!FNTotalMinute.ToString)
                Next
                '_DateStartOfMonth = _StartDate  'วันแรกของเดือน
                '_DateEndOfMonth = _EndDate 'วันแของเดือน
                _FNNetAttandanceAmt = 0
                '  If (_FTEmpState = "2" Or (_FTEmpState <> "2" And _StartDate <= Left(_StartDate, 8) & "24" And _EndDate >= Left(_StartDate, 8) & "24")) And _FNAttandanceAmt > 0 Then

                Dim ChkParturitionLeaveMin As Integer = 0




                'If _WorkingDay = 0 Then
                '    _FNNetAttandanceAmt = 0
                'End If
                '-----------calculate Other Add For KKN ------------------
                _WorkingDay = _WorkingDay + _DayAdjAdd

                _GFNTimeMin = _GFNTimeMin + (_DayAdjAdd * 480)
                _FNEmpBaht = _FNEmpBaht + _WageAdjAdd
                _nBahtOt1 = CDbl(Format(_nBahtOt1, "0.000"))
                _nBahtOt15 = CDbl(Format(_nBahtOt15, "0.000"))
                _nBahtOt2 = CDbl(Format(_nBahtOt2, "0.000"))
                _nBahtOt3 = CDbl(Format(_nBahtOt3, "0.000")) + _GAmtPlus  ' ได้เงินพิเศษช่วงเทศกาลเพิ่ม
                _nBahtOt4 = CDbl(Format(_nBahtOt4, "0.000"))

                Dim _TmpPe As String = ""

                If _FTEmpState = "2" Then
                Else
                    _TmpPe = IIf(Val(_PayTerm) - 1 Mod 2 = 1, (Val(_PayTerm) - 1).ToString("00"), "")
                End If

                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน ประเภทจ่ายเป็นเดือน ของงวดก่อนหน้า ---------------------
                'If _FTStatePayHoliday <> "1" Then '--------- รายเดือนไม่ได้ค่าจ้างวันหยุด---------------
                'Else
                If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='1'  ").Length > 0 Then


                    Dim _BFSDate As String = ""
                    Dim _BFEDate As String = ""

                    _Qry = " SELECT TOP 1  FDCalDateBegin, FDCalDateEnd"
                    _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & " WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & " AND FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & " AND FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND FTPayMonth IN (   "
                    _Qry &= vbCrLf & "  Select FTPayMonth"
                    _Qry &= vbCrLf & "    FROM THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "   AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & " )  "

                    _dttemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                    For Each Row As DataRow In _dttemp.Rows
                        _BFSDate = Row!FDCalDateBegin.ToString
                        _BFEDate = Row!FDCalDateEnd.ToString
                    Next

                    If _BFSDate <> "" And _BFEDate <> "" Then

                        _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                        _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                        _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                        _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                        _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                        _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                        _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                        _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                        _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                        _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0)  + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                        _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                        _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                        _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                        _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                        _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                        _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                        _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                        _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                        _Qry &= vbCrLf & ",P.FTOverClock,P.FTWeekDay"
                        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN "
                        _Qry &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                        _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                        _Qry &= vbCrLf & " 	And T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                        _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                        _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Do While _BFSDate <= _BFEDate
                            _FTShift = ""
                            Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                            Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                            For Each R2 In _R

                                _FTShift = R2!FTShift.ToString
                                _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)

                                _InOT = R2!FTIn3.ToString
                                _OutOT = R2!FTOut3.ToString

                                _Over = R2!FTOverClock.ToString

                                If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    If _FTShift <> "" Then

                                        _SPDateType = 0

                                        _Holiday = ""

                                        _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                        _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                        _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'  AND FTStateActive='1'  "
                                        _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                        If _Holiday <> "" Then _SPDateType = 2

                                        Dim _StateLeaveOther As Boolean = False
                                        Dim _StateLeavacation As Boolean = False


                                        Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                        Dim _SumLeave As Integer = 0

                                        For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                            _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                            If Val(sR!LeaveType) = 1 Then
                                                _StateLeavacation = True
                                            Else
                                                _StateLeaveOther = True
                                            End If

                                            If Val(sR!LeaveType) = 2 Then
                                                _StateFTStaMaternityleaveNotpay = True
                                            End If

                                        Next

                                        For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='1' ")
                                            Dim _StatePass As Boolean = True

                                            If _OutOT <> "" Then
                                                Beep()
                                            End If

                                            If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                            If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                            If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                            If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                            If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                            If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                            If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                            End If

                                            If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                            If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                            If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                If _STime.Length = _ETime.Length Then
                                                    If IsDate(_STime) And IsDate(_ETime) Then
                                                        If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If
                                                Else
                                                    _StatePass = False
                                                End If

                                            End If

                                            If _StatePass Then
                                                _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                                    _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                                Else
                                                    For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                        xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                    Next
                                                End If

                                            End If
                                        Next
                                    End If
                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                                End If
                            Next

                            _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                        Loop
                    End If
                End If
                ' End If
                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------



                '-------------------------------------------------------------------------------------------
                If _FTEmpState = "2" And Val(_PayTerm) Mod 2 = 0 Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1' and FTFinCode<>'056'")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                            Else
                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next

                ElseIf _FDDateEnd <> "" And _FDDateEnd < _EndDate Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0' and FTFinCode='013' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay)
                                Next

                            End If
                        End If
                    Next
                ElseIf _FDDateEnd = "" Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0' and FTFinCode='013' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Double.Parse(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Double.Parse(R2!FCFinAmt.ToString))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Double.Parse(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next
                End If

                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0'  and FTFinCode <> '013' and FTFinCode <> '057' ")
                    Dim _StatePass As Boolean = True

                    If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                    If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                    If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                    If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                    If _StatePass Then

                        _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                        If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                        If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                        If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                            _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                        Else

                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                            Next

                        End If
                    End If
                Next





                Dim _TotalFuel As Double = 0 ''100000

                Dim _worktime_before As Integer = 0


                If _FTEmpState = "2" And Val(_PayTerm) Mod 2 = 0 Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType='2' AND FTFinType='1' AND FTPayType='1'  and FTFinCode='056' ")
                        _TotalFuel = Val(R2!FCFinAmt)
                    Next


                    _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalWKN_Real_Min,0)) AS FNTotalWKN_Real_Min "



                    _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                    _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                    _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                    _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                    _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                    _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                    _Qry &= vbCrLf & "  Select FNMonth"
                    _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & "  )  "

                    _worktime_before = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, 0)

                    _TotalFuel = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation + _worktime_before) / 480) * (_TotalFuel / 26)
                    _FCAdd = _FCAdd + _TotalFuel


                End If

                ''20221004 get responsed header line
                Dim inc As Integer = 0

                _Qry = "   SELECT COUnT(FNHSysEmpID) as n  "
                _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeHeader   AS M WITH(NOLOCK)"
                _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & "  AND M.FNHSysCmpID =  " & Val(HI.ST.SysInfo.CmpID)
                _Qry &= vbCrLf & "  AND   M.FTDateTrans BETWEEN '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' AND '" & (_EndDate) & "'"

                inc = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, 0))

                Dim DataIncentiveHeader As DataTable

                Dim _Emp_IncenAmt As Double = 0
                Dim _Emp_BonusAmt As Double = 0

                If inc > 0 Then
                    _Qry = "Exec [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.SP_CALCULATE_INCENTIVE_HEADER " & Val(_EmpCode) & "," & Val(HI.ST.SysInfo.CmpID) & ",'" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' , '" & (_EndDate) & "'"
                    DataIncentiveHeader = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


                    Dim _BFSDate As String = HI.UL.ULDate.ConvertEnDB(_StartDate)
                    Dim _BFEDate As String = HI.UL.ULDate.ConvertEnDB(_EndDate)

                    If DataIncentiveHeader.Rows.Count > 0 Then



                        If _BFSDate <> "" And _BFEDate <> "" Then

                            _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                            _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                            _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                            _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0)  + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                            _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                            _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                            _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                            _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                            _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                            _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                            _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                            _Qry &= vbCrLf & ",P.FTOverClock"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN "
                            _Qry &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                            _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                            _Qry &= vbCrLf & " 	And T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                            _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                            Do While _BFSDate <= _BFEDate
                                _FTShift = ""
                                Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                                Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                For Each R2 In _R
                                    _FNTimeMin = 0
                                    _FNOT1Min = 0
                                    _FNTimeMin = IIf(Val(R2!FNTimeMinOrg.ToString) < 0, 0, Val(R2!FNTimeMinOrg.ToString))
                                    _FNOT1Min = Val(R2!FNOT1Min.ToString)

                                    For Each RFin As DataRow In DataIncentiveHeader.Select("ftcalDate='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")

                                        _Emp_IncenAmt = _Emp_IncenAmt + Val(RFin!Emp_IncenAmt_perMin) * (_FNTimeMin + _FNOT1Min)
                                        _Emp_BonusAmt = _Emp_BonusAmt + Val(RFin!Emp_BonusAmt_perMin) * (_FNTimeMin + _FNOT1Min)

                                    Next
                                Next
                                _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                            Loop


                        End If

                    End If

                End If
                _FNIncentiveAmt = _Emp_IncenAmt
                _BonusAmt = _Emp_BonusAmt
                '' _FCAdd = _FCAdd + _Emp_IncenAmt
                ''_FCAdd = _FCAdd + _Emp_BonusAmt




                Dim _TotalMoneyMeal As Double = 0
                _ShiftValue = 0
                ''เงินอุดหนุนค่าอาหาร
                ''For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='053'")


                _TotalMoneyMeal = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _FNMoneyMeal
                _FCAdd = _FCAdd + _TotalMoneyMeal
                '_FTAddCalculateTax = _FTAddCalculateTax + _TotalMoneyMeal
                '_FTAddCalculateSocial = _FTAddCalculateSocial + _TotalMoneyMeal
                ''  _AmtAddCalOT = _AmtAddCalOT + _ShiftValue

                ''_DtFin.Rows.Add("053", Val(_TotalMoneyMeal))

                ''Next

                ''เงินอายุงาน
                '_FTAddCalculateTax = _FTAddCalculateTax + _FNWorkAgeSalary
                '_FTAddCalculateSocial = _FTAddCalculateSocial + _FNWorkAgeSalary
                ''_FCAdd = _FCAdd + _FNWorkAgeSalary
                ''_DtFin.Rows.Add("054", Val(_FNWorkAgeSalary))


                ''เงินเบี้ยขยัน

                Dim _FNDeligent_La_rate As Double = 0

                _Qry = "SELECT TOP 1 FTCfgData FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.TSESystemConfig WHERE FTCfgName='CfgDeligent_La_rate_M'"
                _FNDeligent_La_rate = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_SECURITY, "0"))

                'MsgBox("_GFNTimeMin_Real_After_Probation" & _GFNTimeMin_Real_After_Probation)
                'MsgBox("_GFNLeaveVacation" & _GFNLeaveVacation)
                'MsgBox("_FCSalary" & _FCSalary)
                'MsgBox("_FNDeligent_La_rate" & _FNDeligent_La_rate)
                Dim _TotalDeligent_La As Double = 0
                If _FNDeligent_La_rate > 0 Then
                    _TotalDeligent_La = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * (CDbl(Format((_FCSalary) / 26, "0.0000000")) * _FNDeligent_La_rate)
                    _FCAdd = _FCAdd + _TotalDeligent_La
                End If
                'MsgBox(CDbl(Format((_FCSalary) / 26, "0.0000000")))
                'MsgBox("_TotalDeligent_La" & _TotalDeligent_La)
                'Dim _TotalDeligent_La As Double = 0

                '_TotalDeligent_La = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * (CDbl(Format((_FCSalary) / 26, "0.0000000")) * 0.1)
                '_FCAdd = _FCAdd + _TotalDeligent_La
                '_FTAddCalculateTax = _FTAddCalculateTax + _TotalDeligent_La
                '_FTAddCalculateSocial = _FTAddCalculateSocial + _TotalDeligent_La

                ''_DtFin.Rows.Add("059", Val(_TotalDeligent_La))


                ''เงินทักษะ
                Dim _TotalMoneySkill As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='043'")
                    _TotalMoneySkill = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySkill = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySkill
                _FCAdd = _FCAdd + _TotalMoneySkill


                ''เงินทักษะเย็บ
                Dim _TotalMoneySkill_Sew As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='057'")
                    _TotalMoneySkill_Sew = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySkill_Sew = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySkill_Sew
                _FCAdd = _FCAdd + _TotalMoneySkill_Sew





                ''16.	ค่าจูงใจตำแหน่ง : เงินหัวหน้าทีมแผนกเย็บ(กัปตัน)   
                Dim _TotalMoneyHeaderCapton As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='061'")
                    _TotalMoneyHeaderCapton = Val(RFin!FCFinAmt)
                Next
                _TotalMoneyHeaderCapton = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneyHeaderCapton
                _FCAdd = _FCAdd + _TotalMoneyHeaderCapton

                ''17.	เงินค่าจูงใจ กลุ่มพนักงานสนับสนุนแผนกเย็บ  
                Dim _TotalMoneySupport_Sew As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='062'")
                    _TotalMoneySupport_Sew = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySupport_Sew = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySupport_Sew
                _FCAdd = _FCAdd + _TotalMoneySupport_Sew


                ''18.	ค่าจูงใจตำแหน่ง : เงินพนักงานช่างซ่อมจักร 
                Dim _TotalMoneySeviceMachine As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='063'")
                    _TotalMoneySeviceMachine = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySeviceMachine = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySeviceMachine
                _FCAdd = _FCAdd + _TotalMoneySeviceMachine

                ''20.	ค่าจูงใจตำแหน่ง : เงินพนักงาน QA 
                Dim _TotalMoneySkill_QA As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='064'")
                    _TotalMoneySkill_QA = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySkill_QA = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySkill_QA
                _FCAdd = _FCAdd + _TotalMoneySkill_QA








                For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTFinType='2'")

                    _FCDeduct = _FCDeduct + Val(R2!FCFinAmt.ToString)


                Next
                '---------รายได้รายหัก อื่นๆ-------------------------

                '------------------- สิ้นสุดการคำนวณรายวัน
                _FTWorkmenAmtBefore = 0
                _FTTotalCalWorkmenBefore = 0

                '_Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FCSocial"
                '_Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocial,0)) AS FCSocialAmt"
                '_Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                '_Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                '_Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                '_Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                '_Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                '_Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                '_Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                '_Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                '_Qry &= vbCrLf & "  Select FNMonth"
                '_Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                '_Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                '_Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                '_Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                '_Qry &= vbCrLf & "  )  "

                'Dim _DtSso As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                'If _DtSso.Rows.Count > 0 Then
                '    _SocialBefore = Val(_DtSso.Rows(0)!FCSocial.ToString)
                '    _SocialBeforeAmt = Val(_DtSso.Rows(0)!FCSocialAmt.ToString)
                'End If

                'If _FTEmpState = "2" Or _FTEmpState = "3" Then


                '    '_FNEmpBaht = CDbl(Format((_FCSalary), "0.000"))
                '    'If _FTEmpState = "3" Then
                '    '    _FNEmpBaht = CDbl(Format((_FCSalary) / 2, "0.000"))

                '    'End If


                '    If FTStaDeductAbsent = 0 Then
                '        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent) '+ _nBahtAbsent
                '    Else
                '        _nBahtAbsent = 0
                '        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent)
                '    End If


                '    If _FNEmpBaht < 0 Then _FNEmpBaht = 0



                'End If

                If _FTEmpState = "2" Or _FTEmpState = "3" Then

                    If (_FDDateEnd <> "" And _FDDateEnd <= _FTEndCalculateDate) Or _FDDateStart > _StartDate Then ''ลาออกระหว่างงวด ''เริ่มงานระหว่างงวด 
                        ''ค่าแรงเแพราะวันทำงานจริง
                    Else
                        If FTStaDeductAbsent = 0 Then
                            '_FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent + _nBahtAbsent)
                            _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent + _nBahtAbsent)
                        Else
                            _nBahtAbsent = 0
                            _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent)
                        End If

                        If _FNEmpBaht < 0 Then _FNEmpBaht = 0
                    End If





                End If

                _TotalCalTax = 0 : _TaxAmt = 0

                FNUnionAmt = 0
                'FNUnionRate = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNUnionAmt,0) AS FNUnionAmt  FROM   " & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & ".dbo.THRMCfgWelfareKM with(nolock) Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")
                'If FNUnionRate > 0 Then

                '    Dim _StatePass As Boolean = True

                '    If _FDDateEnd <> "" And _EndDate < _FDDateEnd Then
                '        _StatePass = False
                '    End If
                '    If Not (FNStateUnionMember = "1") Then _StatePass = False

                '    'If _WorkAge <= 0 Then
                '    '    _StatePass = False
                '    'Else
                '    '    If FDStartDateUnion < _StartDate Then

                '    '    End If
                '    'End If

                '    If Not (Val(_PayTerm) Mod 2 = 0) Then
                '        _StatePass = False
                '    End If

                '    If _StatePass Then
                '        ''  _FCDeduct = _FCDeduct + FNUnionRate
                '        FNUnionAmt = FNUnionRate
                '    End If

                'End If

                '_TotalCalSso = Double.Parse(Format(_FNEmpBaht + _HBaht + _FTOtherAddCalculateSocial + _FTAddCalculateSocial + _GtotalleavePayCalSsoAmt, "0.00"))
                '_TotalCalSso = _TotalCalSso + Double.Parse(Format(_FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS, "0.00"))


                '  _FTAddCalculateTax = _FTAddCalculateTax + _ShiftAmt + _ShiftOTAmt

                _HBaht = 0
                'If _FNDay > 0 Then
                '    _FNEmpBaht = _FNEmpBaht - (_FCDeductSourceVacationBaht + _Lapaid + FNPayLeaveBusinessBaht + FNPayLeaveSickBaht)
                'Else ''กรณีไม่มาทำงาน แต่มีลาป่วย
                '    _FNEmpBaht = _FNEmpBaht - (_FCDeductSourceVacationBaht + _Lapaid + FNPayLeaveBusinessBaht)  ''FNPayLeaveSickBaht จะมีค่าเงิน
                'End If

                _FNEmpBaht = _FNEmpBaht - (_FCDeductSourceVacationBaht + _Lapaid + FNPayLeaveBusinessBaht + FNPayLeaveSickBaht)

                If _FNEmpBaht < 0 Then
                    _FNEmpBaht = 0
                End If








                _FCAdd = _FCAdd + _ShiftAmt + _ShiftOTAmt

                If _FTEmpState = "2" Or _FTEmpState = "3" Then


                    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct + 0), "0.000"))
                    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct + 0), "0.000"))

                Else
                    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct + 0), "0.000"))
                    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct + 0), "0.000"))



                End If
                '-----------------หักเงินเข้า กองทุนสำรองเลี้ยงชีพ-------------------------------
                If _ContributedFundBeginPay Then
                    Dim _EMpWorkAge As Integer = Val(R!FNEmpWorkAge.ToString)

                    For Each sR As DataRow In _THRMContributedFund.Select(" FNAgeBegin <= " & _EMpWorkAge & " AND FNAgeEnd >=" & _EMpWorkAge & " ")

                        FTTotalCalContributedAmt = _TotalCalSso

                        FTContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNEmpAmtPer.ToString)) / 100.0), "0"))
                        FTCmpContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNCmpAmtPer.ToString)) / 100.0), "0"))

                        Exit For

                    Next

                End If
                '-----------------หักเงินเข้า กองทุนสำรองเลี้ยงชีพ----------------------------
                '-----------------หักเงินเข้า กองทุนทดแทน---------------------------------
                FTTotalCalWorkmen = _TotalCalSso

                If _FTMaxCalWorkmen > 0 Then

                    _SocialPayMax = CDbl(Format(((_FTMaxCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))

                    If (_TotalCalSso + _FTTotalCalWorkmenBefore) > _FTMaxCalWorkmen Then
                        FTTotalCalWorkmen = _FTMaxCalWorkmen
                    ElseIf FTTotalCalWorkmen > 0 Then
                        FTTotalCalWorkmen = FTTotalCalWorkmen
                    Else
                        FTTotalCalWorkmen = 0
                    End If

                    If _FTTotalCalWorkmenBefore > 0 Then
                        FTWorkmenAmt = CDbl(Format((((_CalSo + _FTTotalCalWorkmenBefore) * _FTMaxWorkmenRate) / 100.0), "0"))
                        FTWorkmenAmt = FTWorkmenAmt - _FTWorkmenAmtBefore
                    Else
                        FTWorkmenAmt = CDbl(Format(((FTTotalCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))
                    End If
                End If

                '-----------------หักเงินเข้า กองทุนทดแทน-------------------------------



                _FNEmpDiligent = 0
                _FTStateInDustin = ""
                _FNDeligentPeriod = 0

                If _CalIns <> "" Then
                    Dim _StateCalIns As Boolean = False
                    '_Qry = "SELECT TOP 1 FNPayDeligent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMDiligentConfigHD WHERE FTDeligentCode='" & HI.UL.ULF.rpQuoted(_CalIns) & "' "
                    'If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") = "1" Then
                    '    If Val(_PayTerm) Mod 2 = 1 Then

                    '        _FTSatrtCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                    '        _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1), -1)) 'วันแของเดือน
                    '        _StateCalIns = True
                    '    End If
                    'Else

                    '    _StateCalIns = True
                    'End If

                    'If _StateCalIns Then
                    '    _Qry = " SELECT   ISNULL(PayIndus,0) As PayIndus , ISNULL(StateIndus,'') AS StateIndus,ISnuLL(FNDeligentPeriod,0) AS FNDeligentPeriod"
                    '    _Qry &= vbCrLf & "	FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.FN_CALCULATE_INDUST(" & Val(_EmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDateIns) & "','" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDateIns) & "','" & HI.UL.ULF.rpQuoted(_CalIns) & "')"

                    '    Dim _DtIns As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    '    If _DtIns.Rows.Count > 0 Then
                    '        _FNEmpDiligent = Val(_DtIns.Rows(0)!PayIndus.ToString)
                    '        _FTStateInDustin = _DtIns.Rows(0)!StateIndus.ToString
                    '        _FNDeligentPeriod = Val(_DtIns.Rows(0)!FNDeligentPeriod.ToString)
                    '    End If

                    'End If
                End If



                Dim _tmpTotalincome As Double = 0
                Dim _DiffTotalincome As Double = 0
                Dim _tmpTotalNetPay As Double = 0
                Dim _DiffTotalNetPay As Double = 0
                Dim _FNServicefee, _FNFinTransFee As Double



                Dim _tmpTotalincome_for_tax As Double = 0

                _tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct + 0), "0.000"))

                _tmpTotalNetPay = (_tmpTotalincome - (FTContributedAmt))

                _TotalCalSso = CDbl(Format(_tmpTotalincome, "0"))



                _Net = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct + 0), "0.00"))

                '' best edit _tmpTotalincome_for_tax with out sick leave 
                _tmpTotalincome_for_tax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct + 0), "0.00"))

                _FCBaht = _FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4



                '--------- คิดประกันสังคม-----------
                _SocialPayMax = HCfg.HMaxSocialBaht
                _CalSo = 0
                _FCSocial = 0
                _FCSocialCmp = 0
                _TotalCalSso = (_TotalCalSso)
                _FNSocialBase = 0





                Dim _FCTotalRecalTaxBefore As Double = 0
                Dim _FCTaxAmtBefore As Double = 0

                Dim _nBahtOt1Before As Double = 0
                Dim _nBahtOt15Before As Double = 0
                Dim _nBahtOt2Before As Double = 0
                Dim _nBahtOt3Before As Double = 0
                Dim _nBahtOt4Before As Double = 0

                Dim _FNTotalIncome_before As Double = 0

                Dim _SocialBeforeAmtCmp As Double = 0


                Dim _FNSickLeaveBaht_before As Double = 0

                Dim _FNFinNotCalTax As Double = 0


                ''_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4

                '_Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
                '_Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht


                _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FCSocial"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocial,0)) AS FCSocialAmt"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocialCmp,0)) AS FCSocialAmtCmp"

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTotalIncome,0)) AS FNTotalIncome "

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTotalRecalTax,0)) AS FCTotalRecalTax"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTax,0)) AS FCTaxAmt"

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt1_Baht,0)) AS FCOt1_BahtAmt"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt15_Baht,0)) AS FCOt15_BahtAmt"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt2_Baht,0)) AS FCOt2_BahtAmt"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt3_Baht,0)) AS FCOt3_BahtAmt"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt4_Baht,0)) AS FCOt4_BahtAmt"

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSickLeaveBaht,0)) AS FNSickLeaveBaht"


                _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "AND ISNULL(P.FNTotalIncome,0) > 0 "
                _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                _Qry &= vbCrLf & "  Select FNMonth"
                _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                _Qry &= vbCrLf & "  )  "

                Dim _DtSso As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                If _DtSso.Rows.Count > 0 Then
                    _SocialBefore = Val(_DtSso.Rows(0)!FCSocial.ToString)
                    _SocialBeforeAmt = Val(_DtSso.Rows(0)!FCSocialAmt.ToString)

                    _SocialBeforeAmtCmp = Val(_DtSso.Rows(0)!FCSocialAmtCmp.ToString)


                    _FNTotalIncome_before = Val(_DtSso.Rows(0)!FNTotalIncome.ToString)
                    '' MsgBox("_FNTotalIncome_before" & _FNTotalIncome_before.ToString)

                    _FNSickLeaveBaht_before = Val(_DtSso.Rows(0)!FNSickLeaveBaht.ToString)

                    _FCTotalRecalTaxBefore = Val(_DtSso.Rows(0)!FCTotalRecalTax.ToString)
                    _FCTaxAmtBefore = Val(_DtSso.Rows(0)!FCTaxAmt.ToString)


                    _nBahtOt1Before = Val(_DtSso.Rows(0)!FCOt1_BahtAmt.ToString)
                    _nBahtOt15Before = Val(_DtSso.Rows(0)!FCOt15_BahtAmt.ToString)
                    _nBahtOt2Before = Val(_DtSso.Rows(0)!FCOt2_BahtAmt.ToString)
                    _nBahtOt3Before = Val(_DtSso.Rows(0)!FCOt3_BahtAmt.ToString)
                    _nBahtOt4Before = Val(_DtSso.Rows(0)!FCOt4_BahtAmt.ToString)


                End If



                _Qry = " SELECT SUM(P.FCTotalFinAmt) as FCTotalFinAmt   "
                _Qry &= vbCrLf & "FROM THRTPayRollFin P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"


                _Qry &= vbCrLf & " AND P.FTFinCode in (SELECT  FTFinCode FROM [dbo].[THRMFinanceSet] WHERE   FTStaActive = 1 and FTStaTax=0 and FNHSysCmpId = " & Val(HI.ST.SysInfo.CmpID) & ")"

                _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"

                _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                _Qry &= vbCrLf & "  Select FNMonth"
                _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                _Qry &= vbCrLf & "  )  "

                _FNFinNotCalTax = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, 0)



                If _FTCalSocialSta <> "1" Then ' 1 ไม่่คิดประกันสังคม

                    If (_TotalCalSso + _SocialBefore) >= _SocialMaxIncome Then
                        _CalSo = _SocialMaxIncome
                    ElseIf (_TotalCalSso + _SocialBefore) < _SocialMaxIncome And (_TotalCalSso + _SocialBefore) >= _SocialMinIncome Then
                        _CalSo = (_TotalCalSso + _SocialBefore)
                    ElseIf _TotalCalSso > 0 Then
                        _CalSo = _SocialMinIncome
                    Else
                        _CalSo = 0
                    End If

                    If _SocialBefore > 0 Then
                        _FCSocial = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRate) / 100.0), "0.00")), "0"))
                        _FCSocial = IIf(_SocialBeforeAmt > _FCSocial, 0, _FCSocial - _SocialBeforeAmt)

                        _FCSocialCmp = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRateCmp) / 100.0), "0.00")), "0"))
                        _FCSocialCmp = IIf(_SocialBeforeAmt > _FCSocialCmp, 0, _FCSocialCmp - _SocialBeforeAmtCmp)
                    Else
                        _FCSocial = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRate) / 100.0), "0.00")), "0"))
                        _FCSocialCmp = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRateCmp) / 100.0), "0.00")), "0"))
                    End If

                Else
                    _TotalCalSso = 0
                End If

                Dim _TotalCalTax_Sum As Double

                '_TotalCalTax_Sum = Format(((_Net + _SocialBefore) - (_FCSocial + _SocialBeforeAmt)), "0")

                '_TotalCalTax = Format((_Net - (_FCSocial)), "0")

                '' best edit 20230610  totalincome for cal tax  with out sick leave 


                'MsgBox("_tmpTotalincome_for_tax" & _tmpTotalincome_for_tax.ToString)
                'MsgBox("_SocialBefore" & _SocialBefore.ToString)
                'MsgBox("_FCSocial" & _FCSocial.ToString)
                'MsgBox("_SocialBeforeAmt" & _SocialBeforeAmt.ToString)
                'MsgBox("_FNSickLeaveBaht_before" & _FNSickLeaveBaht_before.ToString)


                ''_TotalCalTax_Sum = Format(((_tmpTotalincome_for_tax + _FNTotalIncome_before) - (_FCSocial + _SocialBeforeAmt + _FNSickLeaveBaht_before)), "0")
                _TotalCalTax_Sum = Format(((_tmpTotalincome_for_tax + _FNTotalIncome_before) - (_FCSocial + _SocialBeforeAmt + _FNFinNotCalTax)), "0")

                _TotalCalTax = Format((_tmpTotalincome_for_tax - (_FCSocial)), "0")



                If _FTCalTaxSta <> "1" Then

                    'With _EmpDisTax
                    '    .FTSosial = _FCAccumulateSocial + _FCSocial + (_FCSocial * (_TotalInstalment - _Instalment))

                    '    If .FTSosial > (((_SocialMaxIncome * _SocialRate) / 100.0) * 12) Then
                    '        .FTSosial = CDbl(Format((((_SocialMaxIncome * _SocialRate) / 100.0) * 12), "0.00"))
                    '    End If

                    '    .BaseSlary = (_TotalCalTax * (_TotalInstalment - _Instalment)) + _TotalCalTax
                    '    .OtherSlary = _FTOtherAddCalculateTax + _FTAddCalculateTax + _FNEmpDiligent + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                    '    .Cfg_ContributedDeducToTheFund = .Cfg_ContributedDeducToTheFund + FTContributedAmt + (FTContributedAmt * (_TotalInstalment - _Instalment))

                    'End With

                    '_TotalCalTax = _TotalCalTax + _EmpDisTax.OtherSlary
                    Dim _TaxOther As Double = _EmpDisTax.OtherSlary
                    Dim _TaxOtherAmt As Double = 0
                    Dim _Total As Double = 0
                    ''GETnRecalDiscTax(_EmpDisTax, _EmpTaxYear)


                    ''สิ้นเดือน
                    If Val(_PayTerm) Mod 2 = 0 Then

                        'MsgBox("_TotalCalTax_Sum" & _TotalCalTax_Sum.ToString)
                        'MsgBox("_FCTotalRecalTaxBefore" & _FCTotalRecalTaxBefore.ToString)




                        If (_TotalCalTax_Sum > 2000000) Then
                            _Total = _TotalCalTax_Sum   ''เงินรวมทั้งเดือน หักประกันสังคมแล้ว
                            _Total = Math.Round(Val(_Total), 0)
                            _TotalCalTax = _TotalCalTax_Sum - _FCTotalRecalTaxBefore
                        Else


                            _TotalCalTax = _TotalCalTax - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4)

                            _Total = _TotalCalTax_Sum - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _nBahtOt1Before + _nBahtOt15Before + _nBahtOt2Before + _nBahtOt3Before + _nBahtOt4Before)

                            _Total = Math.Round(Val(_Total), 0)

                        End If


                        'MsgBox("_Total" & _Total.ToString)
                        'MsgBox("_TotalCalTax" & _TotalCalTax.ToString)

                    Else
                        If (_TotalCalTax_Sum > 2000000) Then
                            _Total = _TotalCalTax
                            _Total = Math.Round(Val(_Total), 0)
                        Else
                            _Total = _TotalCalTax - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4)
                            _Total = Math.Round(Val(_Total), 0)
                            _TotalCalTax = _TotalCalTax - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4)

                        End If
                    End If




                    '_EmpTaxYear.FTSocial = _EmpDisTax.FTSosial

                    '_EmpTaxYear.FTTotalCalTax = _Total


                    Dim _TotalTax As Double = GETnTax(_Total, _TaxOther, _TaxOtherAmt)



                    _EmpTaxYear.FTTotalTax = (_TotalTax + _TaxOtherAmt) 'ภาษีที่ต้องจ่าย

                    '_TotalTax = CDbl(Format(_TotalTax - _EmpDisTax.BeforeTax, "0.00"))

                    _TotalTax = CDbl(Format(_TotalTax - _FCTaxAmtBefore, "0"))


                    If _TotalTax > 0 Then
                        _TaxAmt = CDbl(Format((_TotalTax), "0"))
                        _TaxAmt = _TaxAmt + _TaxOtherAmt
                    Else
                        _TaxAmt = 0
                    End If

                    _EmpTaxYear.FTTotalTaxPay = _FCAccumulateTax + _TaxAmt

                Else

                    _TotalCalTax = 0
                    _TaxAmt = 0

                End If




                _FNNetpay = Format((_Net - (_FCSocial + FTContributedAmt + _TaxAmt + 0)), "0.00")


                _FNNetpayOrg = _FNNetpay

                '_DiffTotalincome = _Net - _tmpTotalincome
                '_DiffTotalNetPay = _FNNetpay - _tmpTotalNetPay

                If _tmpTotalincome <= 0 Then
                    _FNServicefee = 0
                    _FNFinTransFee = 0
                    _tmpTotalincome = 0
                    _tmpTotalNetPay = 0
                    _Net = 0
                    _FCBaht = 0
                    _FNNetpay = 0
                    _FNNetpayOrg = 0
                    _DiffTotalincome = 0
                    _DiffTotalNetPay = 0
                End If


                _FNNetpay = CDbl(Format((_FNNetpay), "0"))


                If _FNNetpay > 0 Then



                    Dim a As Integer = 0

                    a = _FNNetpay.ToString.Length

                    Dim amt1 As Integer = 0
                    Dim amt2 As Integer = 0
                    Dim amtAdd As Integer = 0
                    If a > 3 Then

                        amt2 = Right(_FNNetpay, 3)

                        If (amt2 > 500) Then

                            amtAdd = 1000
                        Else
                            amtAdd = 500
                        End If

                        _FNNetpay = (_FNNetpay + amtAdd) - amt2
                    Else
                        amt2 = _FNNetpay

                        If (amt2 > 500) Then

                            amtAdd = 1000
                        Else
                            amtAdd = 500
                        End If

                        _FNNetpay = amtAdd

                    End If
                End If



                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll (FTInsUser, FTInsDate, FTInsTime,"
                _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,FTEmpIdNo1,FTSocialNo,"
                _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
                _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId,  FNHSysPayRollPayId"
                _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
                _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
                _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
                _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
                _Qry &= vbCrLf & ",FNTotalWKNMin,  FNOt1Min, FNOt15Min, FNOt2Min"
                _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
                _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
                _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
                _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
                _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
                _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
                _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
                _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
                _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
                _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
                _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
                _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
                _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
                _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin, FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
                _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate , FNServicefee ,FNFinTransFee,FNSocialInsuranceEmployee , FNSocialInsuranceEmployer, FNUnionInsuranceEmployee , FNTotalWKN_Real_Min , FNSocialRateEmp,FNSocialRateCmp,FNSocialCmp )"
                _Qry &= vbCrLf & " 	SELECT '" & HI.UL.ULF.rpQuoted(_User) & "',CONVERT(varchar(10),GetDate(),111),CONVERT(varchar(8),GetDate(),114)"
                _Qry &= vbCrLf & " 	,'" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ""
                _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo1) & "','" & HI.UL.ULF.rpQuoted(_FTSocialNo) & "','" & _EmpType & "','" & HI.UL.ULDate.ConvertEnDB(_PayDate) & "'"
                _Qry &= vbCrLf & " 	," & Val(_FTDeptCode) & ""
                _Qry &= vbCrLf & " 	," & Val(_FTDivCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTSectCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTUnitCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPos) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPaymentCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBankCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBranchCode) & " "
                _Qry &= vbCrLf & " 	,N'" & HI.UL.ULF.rpQuoted(_FTAccNo) & "'," & _TotalHoliDay & ""
                _Qry &= vbCrLf & " 	," & _FCSalary & ""
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNTimeMin & " / 60) + Convert(numeric(18,2),(( " & _GFNTimeMin & " %60) /100.00)) "
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1_5Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1_5Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT2Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT2Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2)," & _GFNOT3Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT3Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GFNOT4Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT4Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleavePay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleavePay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleaveNotPay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleaveNotPay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _Gtotalleave & " / 60) + Convert(numeric(18,2),(( " & _Gtotalleave & " %60) /100.00))"
                _Qry &= vbCrLf & " 	, " & _GFNTimeMin
                _Qry &= vbCrLf & " 	, " & _GFNOT1Min
                _Qry &= vbCrLf & " 	, " & _GFNOT1_5Min
                _Qry &= vbCrLf & ", " & _GFNOT2Min
                _Qry &= vbCrLf & "," & _GFNOT3Min
                _Qry &= vbCrLf & ",  " & _GFNOT4Min
                _Qry &= vbCrLf & ",  " & _GFNLateNormalMin
                _Qry &= vbCrLf & ",  " & _GFNLateNormalCut
                _Qry &= vbCrLf & ",  " & _GFNCutAbsent
                _Qry &= vbCrLf & ",  " & _GFNAbsent & "," & (_GFNTimeMin + _GFNOT1Min + _GFNOT1_5Min + _GFNOT2Min + _GFNOT3Min + _GFNOT4Min)
                _Qry &= vbCrLf & ",  " & _GtotalleavePay
                _Qry &= vbCrLf & ", " & _GtotalleaveNotPay
                _Qry &= vbCrLf & ", " & _Gtotalleave
                _Qry &= vbCrLf & ", " & _FNEmpBaht & " "
                _Qry &= vbCrLf & ", " & _nBahtOt1 & " "
                _Qry &= vbCrLf & "," & _nBahtOt15 & " "
                _Qry &= vbCrLf & "," & _nBahtOt2 & " "
                _Qry &= vbCrLf & "," & _nBahtOt3 & " "
                _Qry &= vbCrLf & "," & _nBahtOt4 & " "
                _Qry &= vbCrLf & "," & (_FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FNIncentiveAmt + _BonusAmt) & " "
                _Qry &= vbCrLf & "," & _FNEmpDiligent & " "
                _Qry &= vbCrLf & "," & _FCPayVacationBaht & " "
                _Qry &= vbCrLf & "," & _Lapaid & " "
                _Qry &= vbCrLf & "," & _LateCutAmt & " "
                _Qry &= vbCrLf & "," & _LateCutAmtAbsent & " "
                _Qry &= vbCrLf & "," & _nBahtAbsent & " "
                _Qry &= vbCrLf & "," & _TotalCalSso & " "
                _Qry &= vbCrLf & "," & _TotalCalTax & " "
                _Qry &= vbCrLf & "," & _FCAdd & " "
                _Qry &= vbCrLf & "," & _FCOtherAdd & " "
                _Qry &= vbCrLf & "," & _FCDeduct & " "
                _Qry &= vbCrLf & "," & _FCOtherDeduct & " "
                _Qry &= vbCrLf & "," & _tmpTotalincome & " "
                _Qry &= vbCrLf & "," & _FCSocial & " "
                _Qry &= vbCrLf & "," & _TaxAmt & " "
                _Qry &= vbCrLf & "," & _HBaht & " "
                _Qry &= vbCrLf & "," & (_FNNetpay) & ""
                _Qry &= vbCrLf & "," & (_Net + _FCAccumulateIncome) & ""
                _Qry &= vbCrLf & "," & (_FCSocial + _FCAccumulateSocial) & ""
                _Qry &= vbCrLf & "," & (_TaxAmt + _FCAccumulateTax) & ""
                _Qry &= vbCrLf & ",'" & _FTStateInDustin & "' "
                _Qry &= vbCrLf & "," & (FTTotalCalContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTCmpContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTTotalCalWorkmen) & ""
                _Qry &= vbCrLf & "," & (FTWorkmenAmt) & ""
                _Qry &= vbCrLf & "," & _AmtRetire & ""
                _Qry &= vbCrLf & "," & _GtotalleavePayCalSsoAmt & ""
                _Qry &= vbCrLf & "," & _WorkingDay & " "
                _Qry &= vbCrLf & "," & _WageAdjAdd & ""
                _Qry &= vbCrLf & "," & _FNIncentiveAmt & ""
                _Qry &= vbCrLf & "," & _FNNetpayOrg & ""
                _Qry &= vbCrLf & "," & _FNNetAttandanceAmt & ""
                _Qry &= vbCrLf & "," & _FNHealtCareAmt & ""
                _Qry &= vbCrLf & "," & _FNTransportAmt & ""
                _Qry &= vbCrLf & "," & _FNNetChildCareAmt & ""
                _Qry &= vbCrLf & "," & _FNNetOTMealAmt & ""
                _Qry &= vbCrLf & "," & _FNSocialBase & ""
                _Qry &= vbCrLf & "," & _FNWorkAgeSalary & ""
                _Qry &= vbCrLf & "," & _FNNetOTMealAmtUS & ""
                _Qry &= vbCrLf & "," & _FNExchangeRate & ""
                _Qry &= vbCrLf & "," & FNPayLeaveSickBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveSickBahtMin & ""
                _Qry &= vbCrLf & "," & FNPayLeaveBusinessBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveBusinessBahtMin & ""
                _Qry &= vbCrLf & "," & FNPayLeaveSpecialBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveSpecialBahtMin & ""
                _Qry &= vbCrLf & "," & FNParturitionLeave & ""
                _Qry &= vbCrLf & "," & GFNParturitionLeaveMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetAmt & ""
                _Qry &= vbCrLf & "," & _FNExchangeRateTHB & ""
                _Qry &= vbCrLf & "," & FNWorkDayInWeek & ""
                _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(_FTCalSocialSta) & "'"
                _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(_FTCalTaxSta) & "'"
                _Qry &= vbCrLf & "," & _DiffTotalincome & ""
                _Qry &= vbCrLf & "," & _DiffTotalNetPay & ""
                _Qry &= vbCrLf & "," & SocialExchangeRate & ""
                _Qry &= vbCrLf & "," & TaxExchangeRate & ""
                _Qry &= vbCrLf & "," & _FNServicefee
                _Qry &= vbCrLf & "," & _FNFinTransFee
                _Qry &= vbCrLf & "," & FNSocialInsuranceEmployee
                _Qry &= vbCrLf & "," & FNSocialInsuranceEmployer
                _Qry &= vbCrLf & "," & FNUnionAmt
                _Qry &= vbCrLf & "," & _GFNTimeMin_Real_After_Probation + _GFNLeaveVacation
                _Qry &= vbCrLf & "," & _SocialRate & " "
                _Qry &= vbCrLf & "," & _SocialRateCmp & " "
                _Qry &= vbCrLf & "," & _FCSocialCmp & " "


                '  , FNVacationRetMin, FNVacationRetAmt
                '_FNNetpayOrg
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)




                If _FTCalTaxSta <> "1" And _FTEmpIdNo <> "" Then
                    '-----------------------------ภาษี -----------------------------------------------------
                    _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTaxYear "
                    _Qry &= vbCrLf & "  WHERE FTYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & "  AND  FTEmpIdNo='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' AND FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " "
                    _Qry &= vbCrLf & "  INSERT INTO THRTTaxYear (FNHSysCmpId,FTYear, FTEmpIdNo, FNAmt, FNExpenses, FNNetAmt, "
                    _Qry &= vbCrLf & "  FNModEmp, FNModMate, FNChildNotLern, FNChildLern, FNChildNotLernAmt, FNChildLernAmt, FNInsurance, FNProvidentfund, FNInterest, FNSocial, FNDonation, "
                    _Qry &= vbCrLf & "  FNProvidentfundOver, FNGPF, FNSavingsFund, FNCommutation, FNUnitRMF, FNModFather, FNModMother, FNModFatherMate, FNModMotherMate, FNUnitLTF, "
                    _Qry &= vbCrLf & "  FNDonationLern, FNParentsHealthInsurance, FNSupportSport, FNAcquisitionOfProperty, FNPension, FNTravel, FNTotalCalTax, FNTotalTax,FNTotalTaxPay )"
                    _Qry &= vbCrLf & "  SELECT " & HI.ST.SysInfo.CmpID & ",'" & _PayYear & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "

                    With _EmpTaxYear

                        _Qry &= vbCrLf & "," & .FTAmt & " "
                        _Qry &= vbCrLf & "," & .FTExpenses & ""
                        _Qry &= vbCrLf & "," & .FTNetAmt & ""
                        _Qry &= vbCrLf & "," & .FTModEmp & ""
                        _Qry &= vbCrLf & "," & .FTModMate & ""
                        _Qry &= vbCrLf & "," & .FNChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FNChildLern & " "
                        _Qry &= vbCrLf & "," & .FTChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FTChildLern & ""
                        _Qry &= vbCrLf & "," & .FTInsurance & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfund & ""
                        _Qry &= vbCrLf & "," & .FTInterest & ""
                        _Qry &= vbCrLf & "," & .FTSocial & ""
                        _Qry &= vbCrLf & "," & .FTDonation & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfundOver & ""
                        _Qry &= vbCrLf & "," & .FTGPF & ""
                        _Qry &= vbCrLf & "," & .FTSavingsFund & ""
                        _Qry &= vbCrLf & "," & .FTCommutation & ""
                        _Qry &= vbCrLf & "," & .FTUnitRMF & ""
                        _Qry &= vbCrLf & "," & .FTModFather & ""
                        _Qry &= vbCrLf & "," & .FTModMother & ""
                        _Qry &= vbCrLf & "," & .FTModFatherMate & ""
                        _Qry &= vbCrLf & "," & .FTModMotherMate & ""
                        _Qry &= vbCrLf & "," & .FTUnitLTF & ""
                        _Qry &= vbCrLf & "," & .FTDonationLern & ""
                        _Qry &= vbCrLf & "," & .FTParentsHealthInsurance & ""
                        _Qry &= vbCrLf & "," & .FTSupportSport & ""
                        _Qry &= vbCrLf & "," & .FTAcquisitionOfProperty & ""
                        _Qry &= vbCrLf & "," & .FTPension & ""
                        _Qry &= vbCrLf & "," & .FTTravel & ""
                        _Qry &= vbCrLf & "," & .FTTotalCalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTaxPay & ""

                    End With

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    '----------------------------- ภาษี -----------------------------------------------------
                End If

                '-----------------------------รายได้อื่นๆ -----------------------------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Dim _AllFincode As String = ""

                For Each _R As DataRow In _DtFin.Rows
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTFinCode, FTFinAmt," & _R!FCTotalFinAmt.ToString & ",0," & _R!FCTotalFinAmt.ToString & ""
                    _Qry &= vbCrLf & " FROM  THRMEmployeeFin "
                    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND  FTFinCode = ('" & _AllFincode & "') "

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Next

                For Each _R As DataRow In _dt.Select("FCFinAmt<>0")
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_R!FCFinAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FCFinAmtOther=" & _R!FCFinAmt.ToString & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _AllFincode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then

                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ",'" & _AllFincode & "',0, 0," & _R!FCFinAmt.ToString & "," & _R!FCFinAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    End If

                Next

                _FCAdd = _FCAdd + _Emp_IncenAmt
                _FCAdd = _FCAdd + _Emp_BonusAmt


                '''----------- incentive-------------------------------


                'If _Emp_IncenAmt > 0 Then
                '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_Emp_IncenAmt.ToString) & " "
                '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTFinCode='011' "

                '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '011'," & _Emp_IncenAmt & "," & _Emp_IncenAmt & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If
                'End If


                ''----------- incentive--Bonus-----------------------------
                'If _Emp_BonusAmt > 0 Then
                '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_Emp_BonusAmt.ToString) & " "
                '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTFinCode='008' "

                '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _Emp_BonusAmt & "," & _Emp_BonusAmt & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If
                'End If


                ''----------- เงินคืนพักร้อน-------------------------------
                ''เงินน้ำมัน

                If _TotalFuel > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalFuel.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='056' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '056'," & _TotalFuel & "," & _TotalFuel & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                ''เงินเพิ่มอื่นๆ

                If _TotalMoneyMeal > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneyMeal.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='053' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '053'," & _TotalMoneyMeal & "," & _TotalMoneyMeal & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _FNWorkAgeSalary > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNWorkAgeSalary.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='054' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '054'," & _FNWorkAgeSalary & "," & _FNWorkAgeSalary & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalDeligent_La > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalDeligent_La.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='059' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '059'," & _TotalDeligent_La & "," & _TotalDeligent_La & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _ShiftAmt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='001' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '001'," & _ShiftValue.ToString & "," & _ShiftAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _ShiftOTAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftOTAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='007' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '007'," & _ShiftOTValue.ToString & "," & _ShiftOTAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _SeniorityAmt > 0 Then

                    Dim _xFinCode As String = "046"
                    If (_FTStateWorkpermit = "1") Then
                        _xFinCode = "047"
                    End If
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_SeniorityAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _xFinCode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '" & _xFinCode & "'," & _SeniorityAmt.ToString & "," & _SeniorityAmt.ToString & ""
                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _BonusAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_BonusAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='008' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _BonusAmt.ToString & "," & _BonusAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _FNIncentiveAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNIncentiveAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='011' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '011'," & _FNIncentiveAmt.ToString & "," & _FNIncentiveAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _TotalMoneySkill > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySkill.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='043' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '043'," & Val(_TotalMoneySkill.ToString) & "," & Val(_TotalMoneySkill.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySkill_Sew > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySkill_Sew.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='057' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '057'," & Val(_TotalMoneySkill_Sew.ToString) & "," & Val(_TotalMoneySkill_Sew.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneyHeaderCapton > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneyHeaderCapton.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='061' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '061'," & Val(_TotalMoneyHeaderCapton.ToString) & "," & Val(_TotalMoneyHeaderCapton.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySupport_Sew > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySupport_Sew.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='062' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '062'," & Val(_TotalMoneySupport_Sew.ToString) & "," & Val(_TotalMoneySupport_Sew.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySeviceMachine > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySeviceMachine.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='063' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '063'," & Val(_TotalMoneySeviceMachine.ToString) & "," & Val(_TotalMoneySeviceMachine.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySkill_QA > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySkill_QA.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='064' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '064'," & Val(_TotalMoneySkill_QA.ToString) & "," & Val(_TotalMoneySkill_QA.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If



                If FNUnionAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(FNUnionAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='108' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '108'," & Val(FNUnionAmt.ToString) & "," & Val(FNUnionAmt.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _FNEmpDiligent > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNEmpDiligent.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    If _FNDeligentPeriod = 0 Then
                        _Qry &= vbCrLf & " AND FTFinCode='008' "
                    Else
                        _Qry &= vbCrLf & " AND FTFinCode='009' "

                    End If


                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        If _FNDeligentPeriod = 0 Then
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Else

                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '009'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                        End If
                    End If

                End If


                ''----------- เงินคืนพักร้อน-------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave (FTPayYear, FTPayTerm, FNHSysEmpID, FTLeaveType, FNTotalHour, FNTotalMinute, FNTotalPayHour, FNTotalPayMinute, FNTotalNotPayHour,FNTotalNotPayMinute)"
                _Qry &= vbCrLf & "  SELECT      '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTLeaveType,Convert(numeric(18,2), Sum(FNTotalMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalMinute) %60) /100.00)) , "
                _Qry &= vbCrLf & "  Sum(FNTotalMinute), Convert(numeric(18,2), Sum(FNTotalPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalPayMinute) %60) /100.00)), Sum(FNTotalPayMinute),  Convert(numeric(18,2),Sum(FNTotalNotPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalNotPayMinute) %60) /100.00)), SUM(FNTotalNotPayMinute)"
                _Qry &= vbCrLf & "  FROM THRTTransLeave "
                _Qry &= vbCrLf & " WHERE        (FNHSysEmpID = '" & Val(_EmpCode) & "') "
                _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' "
                _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "' "
                _Qry &= vbCrLf & "  GROUP BY   FNHSysEmpID, FTLeaveType"

                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            End If








            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & "  	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate (FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & " FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate)"
            _Qry &= vbCrLf & " SELECT TOP 1  FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & "FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            _Qry &= vbCrLf & " SELECT FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate ( FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay)"
            _Qry &= vbCrLf & " SELECT  FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

        Next

        Return True

    End Function


    Public Shared Function CalculateWeekEnd_LA_Daily(ByVal _User As String, ByVal _EmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
        ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
        Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
        Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0, Optional FNStateSalaryType As Integer = 0,
        Optional _FNExchangeRate As Double = 0, Optional _FNExchangeRateTHB As Double = 0, Optional FNWorkDayInWeek As Integer = 13,
        Optional FNWorkDayInMonth As Integer = 26, Optional FNWorkDayInWeekBF As Integer = 0, Optional SocialExchangeRate As Double = 0, Optional TaxExchangeRate As Double = 0) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim CountDayPerMonth As Integer = FNWorkDayInMonth
        Dim _Qry As String
        Dim _dt As DataTable
        Dim _dttemp As DataTable
        Dim _dttran As DataTable
        Dim _SalaryDevide As Integer = 0
        Dim FNVacationRetMin, FNVacationRetAmt, FNVacationPerDayLapaid As Double


        Dim _SsoBefore As Double = 0
        Dim _SsoBeforeAmt As Double = 0

        Dim _InsuranceEmpyeeBefore As Double = 0
        Dim _InsuranceEmpyerBefore As Double = 0

        Dim _DtFin As New DataTable
        _DtFin.Columns.Add("FTFinCode", GetType(String))
        _DtFin.Columns.Add("FCTotalFinAmt", GetType(String))
        Dim _SeniorityAmt As Double = 0
        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTPaymentCode As String, _FTBankCode As String, _FNChildNotLearn As Double
        Dim _FCReduceDonate As Double, _FCLifeInsurance As Double
        Dim _FCLoanHouse As Double
        Dim _FCShare As Double, _FCReduceFather As Double, _FCReduceMother As Double
        Dim _FCReSpouseFather As Double, _FCReSpouseMother As Double, _FCReduceEducationSupport As Double, _FTMarryIncome As String
        Dim _FTCalSocialSta As String, _FTCalTaxSta As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FTEmpIdNo As String, _FTEmpIdNo1 As String, _FTSocialNo As String, _FTBranchCode As String, _FTAccNo As String, _FCLifeFeeMoney As Double
        Dim _FCOtherAdd As Double, _FTOtherAddCalculateSocial As String, _FTOtherAddCalculateTax As String
        Dim _FCOtherAddOt As Double, _FTOtherAddOtCalculateSocial As String, _FTOtherAddOtCalculateTax As String, _FCBFShiftMoney As Double
        Dim _FTShiftMoneyCalculateSocial As String, _FTShiftMoneyCalculateTax As String, _FCDiligent As Double
        Dim _FTDiligentCalculateSocial As String, _FTDiligentCalculateTax As String, _FCBonusEndYear As Double
        Dim _FTBonusEndCalculateSocial As String, _FCOtherDeduct As Double, _FTBonusEndCalculateTax As String
        Dim _FCShelter As Double, _FTShelterCalculateSocial As String, _FTShelterCalculateTax As String
        Dim _FCShareFactory As Double, _FTShareFactoryCalculateSocial As String
        Dim FNPayLeaveBusinessBaht, FNPayLeaveSickBaht, FNPayLeaveSpecialBaht, FNParturitionLeave As Double, FNParturitionLeaveReCalTax, FNPayLeaveAccidentBaht As Double
        Dim FNPayLeaveBusinessBahtMin, FNPayLeaveSickBahtMin, FNPayLeaveSpecialBahtMin, FNParturitionLeaveMin, FNPayLeaveAccidentBahtMin As Double
        Dim GFNPayLeaveBusinessBahtMin, GFNPayLeaveSickBahtMin, GFNPayLeaveSpecialBahtMin, GFNParturitionLeaveMin, GFNPayLeaveAccidentBahtMin As Integer


        Dim _FTShift As String
        Dim _FNTime, _FNNotRegis As Double
        Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
        Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
        Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
        Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double
        Dim _FNLeavePay, _FNLeaveNotPay As Double, _FNTimeMin, _FNOT1Min As Double
        Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
        Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
        Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
        Dim _GFNTime, _GFNNotRegis As Double
        Dim _GFNOT1 As Double, _GFNOT1_5 As Double, _GFNOT2 As Double, _GFNOT3 As Double, _GFNOT4 As Double
        Dim _GFNLeaveSick As Double, _GFNLeaveBusiness As Double
        Dim _GFNLeaveVacation As Double, _GFNLeavePregnant As Double, _GFNLeaveOrdain As Double, _GFNLeaveSpecial As Double
        Dim _GFNLeaveMarry As Double, _GFNLeaveOther As Double, _GFNLateNormalMin As Double
        Dim _GFNLateNormalMinNotHoliday As Double = 0
        Dim _GFNLateNormalCut As Double, _GFNLateOtMin As Double, _GFNLateOtCut As Double
        Dim _GFNLateMorning As Double, _GFNLateAfternoon As Double, _GFNAbsent, _GFNCutAbsent As Double
        Dim _GFNLeavePay As Double, _GFNTimeMin, _GFNOT1Min, _GFNTimeMin_Real_After_Probation As Double
        Dim _GFNOT1_5Min As Double, _GFNOT2Min As Double, _GFNOT3Min As Double, _GFNOT4Min As Double, _GFNLateMMin As Double
        Dim _GFNLateAfMin As Double, _GFNRetireMMin As Double, _GFNRetireAfMin As Double
        Dim _GFNRetireNormalCut As Double, _GFNRetireOtMin As Double, _GFNRetireOtCut As Double
        Dim _dtot As DataTable
        Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double
        Dim _FCAccumulateIncome As Double, _FCAccumulateSocial As Double, _FCAccumulateTax As Double
        Dim _FTSatrtCalculateDate As String, _FTEndCalculateDate As String, _FNEmpDiligent As Double, _FTStateInDustin As String, _FNDeligentPeriod As Integer
        Dim _FTSatrtCalculateDateIns As String, _FTEndCalculateDateIns As String
        Dim _FNEmpBaht, _nBahtOt1 As Double, _nBahtOt15 As Double, _nBahtOt2 As Double, _nBahtOt3 As Double, _nBahtOt4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
        Dim _SocialRate As Double, _SocialRateCmp As Double : Dim _StateSocialOnlyCmppay As Boolean
        Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
        Dim _TotalHoliDay As Integer
        Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String

        Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double, _FCSocialCmp As Double
        Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
        Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
        Dim _FTSlary, _FTDivCode, _FTPos As String
        Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
        Dim _Dtemp As DataTable
        Dim _SocialBefore, _SocialBeforeAmt, _SocialPayMax As Double
        Dim _FCAdd, _FTAddCalculateSocial, _FTAddCalculateTax, _FCDeduct, _TotalCalSso, _TotalCalTax, _TaxAmt As Double
        Dim _Gtotalleave, _GtotalleavePay, _GtotalleaveNotPay, _GtotalleavePayCalSso, _GtotalleavePayCalSsoAmt As Double
        Dim _dtLeave As DataTable
        Dim _LeaveCode As String = ""
        Dim _dtAddOtherAmt As DataTable
        Dim _dtAddOtherAmtshift As DataTable
        Dim FCModFather, FCModMother, FCModMateFather, FCModMateMother As Double
        Dim FCPremium, FCInterest, FCUnitRMF, FCUnitLTF, FCDeductDonate, FCDisabledDependents, FCDeductDonateStudy As Double
        Dim FCHealthInsurFatherMotherMate, FTHealthInsurIDFather, FTHealthInsurIDMother As Double
        Dim FTHealthInsurIDFatherMate, FTHealthInsurIDMotherMate As Double
        Dim FTTotalCalContributedAmt, FTContributedAmt, FTCmpContributedAmt, FTTotalCalContributedAcc As Double
        Dim FTTotalCalWorkmen, FTWorkmenAmt, _FTMaxCalWorkmen, _FTMaxWorkmenRate, FTTotalCalWorkmenAcc As Double
        Dim _FTWorkmenAmtBefore, _FTTotalCalWorkmenBefore As Double
        Dim _ShiftAmt As Double = 0
        Dim _ShiftOTAmt As Double = 0
        Dim _ShiftValue As Double = 0
        Dim _ShiftOTValue As Double = 0
        Dim _WorkingDay As Double = 0
        Dim _THRMContributedFund As DataTable
        Dim _EmpDisTax As New HCfg.EmployeeDiscountTax
        Dim _EmpTaxYear As New HCfg.EmpTaxYear
        Dim _FNSlaryPerDayShiftNinght As Double, _FNSlaryPerDayNormal As Double


        '   HI.HRCAL.Calculate.LoadDiscountTax()

        Dim _EmpDisTaxChildAmt As Double = 0
        Dim _FNNetpayOrg As Double = 0.0
        Dim _FNNetpay As Double = 0.0
        Dim _AmtAddCalOT, _GAmtAddCalOT As Double
        Dim CountTerm As Integer = 0
        Dim _SPDateType, _TotalInstalment, _Instalment As Integer
        Dim _ContributedFundBeginPay As Boolean = False
        Dim _DTHoliday As DataTable
        Dim _ShiftAdv As Double = 0
        Dim _AmtPlus As Double = 0
        Dim _GAmtPlus As Double = 0
        Dim FTHldType As Integer = 0
        Dim _AmtRetire As Double = 0
        Dim _WorkAge As Integer = 0 : Dim _WorkAgeDay As Integer = 0 : Dim _WorkAgeSeniority As Integer = 0 : Dim _WorkingDayN As Integer = 0
        Dim _WorkAgeParturition As Integer = 0
        Dim _AmtReturnVacation As Double = 0
        Dim _FNIncentiveAmt As Double = 0
        Dim _FTInsurType As Integer = 0
        Dim _DayAdjAdd As Double = 0
        Dim _WageAdjAdd As Double = 0
        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        Dim _FTStatePayHoliday As String = ""
        Dim _FTEmployeeCode As String = ""
        Dim _FNAttandanceAmt As Double = 0
        Dim _FNHealtCareAmt As Double = 0
        Dim _FNTransportAmt As Double = 0
        Dim _FNChildCareAmt As Double = 0
        Dim _FNChildCareStartAge As Double = 0
        Dim _FNChildCareEndAge As Double = 0
        Dim _FNOTMealAmt As Double = 0
        Dim _FNSocialBase As Double = 0
        Dim _FNWorkAgeSalary As Double = 0
        Dim _FNOTMealAmtUS As Double = 0
        Dim _FNSickLeave As Double = 0
        Dim _LeaveSickPay As Integer = 0
        Dim _FNTotalChildCare As Integer = 0
        Dim _FNNetAttandanceAmt As Double = 0
        Dim _FNNetChildCareAmt As Double = 0
        Dim _FNNetOTMealAmt As Double = 0
        Dim _FNNetSocialBase As Double = 0
        Dim _FNNetOTMealAmtUS As Double = 0
        Dim _FNEmpWorkAge As Integer = 0
        Dim _tmpSocailRateKM As DataTable
        Dim _tmpWelfareKM As DataTable
        Dim _tmpWorkAge As DataTable
        Dim _TmpFDDateEnd As String = ""
        Dim _TmpFDDateEndP As String = ""  ' เพิ่มเงือนไข วันที่ลาออก มีผล วันที่ 2 - 16  จ่ายค่า health & transsport
        Dim _DTEmpWorkDay As New DataTable
        Dim _TmpLeavePay As Integer = 0
        Dim _EmpSex As Integer = 0
        Dim _RatePay As Double = 1
        Dim _SalaryPayOTKM As Double = 0
        Dim _SalaryPayLeave As Double = 0
        Dim _SalaryPayLeaveMin As Double = 0
        Dim _FNEmpStatus As Integer = 0
        Dim _FTStateWorkpermit As String = ""
        Dim _FTStateMedicalCertificate As String = ""
        Dim _BonusAmt As Double = 0

        Calculate.LoadInsuranceVNRate()
        Dim FNSocialEmployeeRate As Double = 0
        Dim FNSocialEmployerRate As Double = 0
        Dim FNHealthEmployeeRate As Double = 0
        Dim FNHealthEmployerRate As Double = 0
        Dim FNUnemploymentEmployeeRate As Double = 0
        Dim FNUnemploymentEmployerRate As Double = 0
        Dim FNUnionEmployeeRate As Double = 0
        Dim FNUnionEmployerRate As Double = 0
        Dim FNStateUnionMember As String = ""
        Dim FDStartDateUnion As String = ""
        Dim FDEndDateUnion As String = ""
        Dim FNUnionAmt As Double = 0
        Dim FNUnionRate As Double = 0

        Dim _FDDateProbation As String = ""

        Dim _FNMoneyMeal As Integer = 0

        _Qry = "SELECT TOP 1 FTCfgData FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.TSESystemConfig WHERE FTCfgName='CfgMeal_LA'"
        _FNMoneyMeal = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_SECURITY, "0"))

        Try
            FNSocialEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eSocialInsurance).FNEmployeeRate
            FNSocialEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eSocialInsurance).FNEmployerRate
            FNHealthEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eHealthInsurance).FNEmployeeRate
            FNHealthEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eHealthInsurance).FNEmployerRate
            FNUnemploymentEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnemploymentInsurance).FNEmployeeRate
            FNUnemploymentEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnemploymentInsurance).FNEmployerRate
            FNUnionEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnionInsurance).FNEmployeeRate
            FNUnionEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnionInsurance).FNEmployerRate
        Catch ex As Exception
            'MG.ShowMsg.mInfo("Invalid Config Value...", 1503310001, "", "")
        End Try


        Dim FNSocialInsuranceEmployee As Double = 0.0
        Dim FNSocialInsuranceEmployer As Double = 0.0
        Dim FNHealthInsuranceEmployee As Double = 0.0
        Dim FNHealthInsuranceEmployer As Double = 0.0
        Dim FNUnemploymentInsuranceEmployee As Double = 0.0
        Dim FNUnemploymentInsuranceEmployer As Double = 0.0
        Dim FNUnionInsuranceEmployee As Double = 0.0
        Dim FNUnionInsuranceEmployer As Double = 0.0

        Dim FNSocialInsuranceEmployeeOrg As Double = 0.0
        Dim FNSocialInsuranceEmployerOrg As Double = 0.0
        Dim FNHealthInsuranceEmployeeOrg As Double = 0.0
        Dim FNHealthInsuranceEmployerOrg As Double = 0.0
        Dim FNUnemploymentInsuranceEmployeeOrg As Double = 0.0
        Dim FNUnemploymentInsuranceEmployerOrg As Double = 0.0
        Dim FNUnionInsuranceEmployeeOrg As Double = 0.0
        Dim FNUnionInsuranceEmployerOrg As Double = 0.0




        _DTEmpWorkDay.Columns.Add("FNSalary", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNDay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT1", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT15", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT2", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT3", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT4", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNHoloday", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLate", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNAbsent", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLateCutAmtAbsent", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeavePay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeaveNotPay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNBusiness", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSpecial", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNParturition", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNVacation", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNShiftNo", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSlaryOTPerMin", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSlaryNormal", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeaveAccident", GetType(Double))



        Dim _DTEmpPayLeaveSick As New DataTable
        _DTEmpPayLeaveSick.Columns.Add("FNSalary", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNDay", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNPayPer", GetType(Double))

        _Qry = "Select TOP 1 FNCalType FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType WHERE FNHSysEmpTypeId=" & Val(_EmpType) & "  "
        Dim _TmpCalType As Integer = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "0"))

        If FTStaCalPayRoll = 0 Then
            _DateStartOfMonth = _StartDate  'วันแรกของเดือน
            _DateEndOfMonth = _EndDate 'วันแของเดือน
        Else
            _DateStartOfMonth = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
            _DateEndOfMonth = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        End If
        '----------------------------------   Variable  ------------------------------------

        Dim _DateReset As String
        _Qry = " Select Case When RiGHT(FTCurrenDate, 5) >= FTLeaveReset Then LEFT(FTCurrenDate, 4) Else  LEFT(FTBefore,4)  End +'/' + FTLeaveReset"
        _Qry &= vbCrLf & "  FROM"
        _Qry &= vbCrLf & " ("
        _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
        _Qry &= vbCrLf & " FROM            THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN THRMEmployee AS M WITH(NOLOCK )"
        _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "  WHERE   M.FNHSysEmpID=" & Val(_EmpCode) & " "
        _Qry &= vbCrLf & " ) As T"

        _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")
        '------------------ รวมวันลาป่วย---------------------------------

        _Qry = "   SELECT        (SUM(FNTotalPayMinute) / 480) AS FNTotalPayMinute  "
        _Qry &= vbCrLf & "      AS TotalLeavePay"
        _Qry &= vbCrLf & "    FROM THRTTransLeave "
        _Qry &= vbCrLf & "  WHERE        (FTLeaveType = '0')"
        _Qry &= vbCrLf & "  AND (FTDateTrans >= N'" & (_DateReset) & "') "
        _Qry &= vbCrLf & "  AND (FTDateTrans < N'" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "') "
        _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ")"

        _LeaveSickPay = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

        '------------------ รวมวันลาป่วย---------------------------------

        With _EmpTaxYear
            .FTAmt = 0 'เงินได้ก่อนหักค่าใช้จ่าย
            .FTExpenses = 0 'ค่าใช้จ่ายส่วนตัว
            .FTNetAmt = 0 'เงินได้หลังหักค่าใช้จ่าย
            .FTModEmp = 0 'ลดหย่อนส่วนตัว
            .FTModMate = 0 'ลดหย่อนคู่สมรส
            .FNChildNotLern = 0 'จำนวนบุตรไม่ศึกษา
            .FNChildLern = 0 'จำนวนบุตรศึกษา
            .FTChildNotLern = 0 'ลดหย่อนบุตรไม่ศึกษา
            .FTChildLern = 0 'ลดหย่อนบุตรศึกษา
            .FTInsurance = 0 'ลดหย่อนเบี้ยประกัน
            .FTProvidentfund = 0 'กองทุนเลียงชีพส่วนที่ไม่เกิน 10000
            .FTInterest = 0 'ดอกเบี้ยเงินกู้
            .FTSocial = 0 'ประกันสังคม
            .FTDonation = 0 'เงินบริจาค
            .FTProvidentfundOver = 0 'กองทุนเลียงชีพส่วนที่เกิน 10000
            .FTGPF = 0 'เงิน กบข.
            .FTSavingsFund = 0 'เงินกองทุนสงเคราะห์
            .FTCommutation = 0 'เงินชดเชยตามกฎหมายแรงงาน
            .FTUnitRMF = 0 'ค่าซื้อหน่วยลงทุน RTF
            .FTModFather = 0 'ลดหย่อนบิดา
            .FTModMother = 0 'ลดหย่อนมารดา
            .FTModFatherMate = 0 'ลดหย่อนบิดาคู่สมรส
            .FTModMotherMate = 0 'ลดหย่อนมารดาคู่สมรส
            .FTUnitLTF = 0 'ค่าซื้อหน่วยลงทุน LTF
            .FTDonationLern = 0 'เงินบริจาคเพื่อสนับสนุนการศึกษา
            .FTParentsHealthInsurance = 0 'เบี้ยประกันสุขภาพบิดามารดา
            .FTSupportSport = 0 'เงินสนับสนุนการกีฬา
            .FTAcquisitionOfProperty = 0 'ค่าซื้ออาคาร
            .FTPension = 0 'บำนาญ
            .FTTravel = 0 'ท่องเที่ยวในประเทศ
            .FTTotalCalTax = 0 'เงินได้สุทธิ
            .FTTotalTax = 0 'ภาษีที่ต้องจ่าย
        End With
        '------------------ GetConfig WeekEnd ----------------------------------

        ' get discount tax

        With _EmpDisTax
            .Cfg_ModChildAllowanceAgeStart = HCfg._DiscountTax.Cfg_ModChildAllowanceAgeStart
            .Cfg_ModChildAllowanceAgeEnd = HCfg._DiscountTax.Cfg_ModChildAllowanceAgeEnd
            .Cfg_ModChildAllowanceRateNotStudied = HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied
            .Cfg_ModChildAllowanceRateStudy = HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy
        End With
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------
        _Qry = "SELECT FNSeqNo, FNAgeBegin, FNAgeEnd, FNEmpPay As FNEmpAmtPer,  FNCmpPay AS FNCmpAmtPer"
        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMContributions WITH(NOLOCK) "
        _Qry &= vbCrLf & "  WHERE  FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID) & " "
        _THRMContributedFund = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------

        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday
        '------------------ GetConfig Holiday ----------------------------------

        _tmpSocailRateKM = LoadSocailRateKM
        '_tmpWelfareKM = LoadWelfareKM(Integer.Parse(Val(_EmpType)))
        _tmpWorkAge = GetWorkAgeRate(Val(HI.ST.SysInfo.CmpID))

        'For Each ZRow In _tmpWelfareKM.Rows

        '    _FNAttandanceAmt = Val(ZRow!FNAttandanceAmt.ToString)
        '    _FNHealtCareAmt = Val(ZRow!FNHealtCareAmt.ToString)
        '    _FNTransportAmt = Val(ZRow!FNTransportAmt.ToString)
        '    _FNChildCareAmt = Val(ZRow!FNChildCareAmt.ToString)
        '    _FNChildCareStartAge = Val(ZRow!FNChildCareStartAge.ToString)
        '    _FNChildCareEndAge = Val(ZRow!FNChildCareEndAge.ToString)
        '    _FNOTMealAmt = Val(ZRow!FNOTMealAmt.ToString)

        '    Exit For
        'Next

        'FNAttandanceAmt, FNHealtCareAmt, FNTransportAmt, FNChildCareAmt, FNChildCareStartAge, FNChildCareEndAge, FNOTMealAmt
        FNVacationRetMin = 0 : FNVacationRetAmt = 0
        _FTSatrtCalculateDate = _StartDate
        _FTEndCalculateDate = _EndDate
        _FTSatrtCalculateDateIns = _StartDate
        _FTEndCalculateDateIns = _EndDate
        _FNEmpDiligent = 0 : _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
        _FTStateInDustin = "" : _FNSlaryPerMonth = 0
        _FNSlaryPerDay = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0
        _FTEmpState = "" : _FNEmpBaht = 0 : _nBahtOt1 = 0
        _nBahtOt15 = 0 : _nBahtOt2 = 0 : _nBahtOt3 = 0
        _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
        _FCPayVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0 : _FCSocialCmp = 0
        _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0 : _SocialRateCmp = 0
        _SocialMinIncome = 0 : _SocialMaxIncome = 0
        _Complete = 0 : _Err = 0 : _FCSalary = -99
        CountTerm = 0
        _TotalInstalment = 0 : _Instalment = 0

        FNPayLeaveBusinessBahtMin = 0 : FNPayLeaveSickBahtMin = 0 : FNPayLeaveSpecialBahtMin = 0 : FNParturitionLeaveMin = 0 : FNPayLeaveAccidentBahtMin = 0
        GFNPayLeaveBusinessBahtMin = 0 : GFNPayLeaveSickBahtMin = 0 : GFNPayLeaveSpecialBahtMin = 0 : GFNParturitionLeaveMin = 0 : GFNPayLeaveAccidentBahtMin = 0
        FNPayLeaveBusinessBaht = 0 : FNPayLeaveSickBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0 : FNPayLeaveAccidentBaht = 0

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode,M.FTEmpCode AS FTEmployeeCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, Isnull( M.FNEmpStatus,0) AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"
        _Qry &= vbCrLf & " ,M.FNHSysDeptId AS FTDeptCode , M.FNEmpSex "
        _Qry &= vbCrLf & "  ,M.FNHSysDivisonId AS FTDivCode, M.FNHSysSectId AS FTSectCode,  M.FNHSysUnitSectId AS FTUnitSecCode"
        _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
        _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
        _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
        _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
        _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
        _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
        _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
        _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
        _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
        _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide , isnull( M.FTStateWorkpermit ,'0') as FTStateWorkpermit"
        _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge(M.FdDateStart,'" & _EndDate & "') AS FNEmpWorkAgeNew"
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_MonthSeniority(M.FdDateStart,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeMonthSeniority     "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_Salary_CD_NEW(M.FdDateStart,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeNewCD ,  dbo.[FN_Get_Emp_WorkAge_Day](M.FDDateStart,M.FDDateEnd) as FNEmpWorkAgeNewDay"
        _Qry &= vbCrLf & " ,  dbo.[FN_Get_Emp_WorkAge_Day_CD](M.FDDateStart,M.FDDateEnd,M.FNHSysEmpID,'" & _EndDate & "') as FNEmpWorkAgeNewDay_CD "
        _Qry &= vbCrLf & " , isnull(M.FTStateUnionMember,'') as FTStateUnionMember  , isnull(M.FDStartDateUnion,'') as FDStartDateUnion , isnull(M.FDEndDateUnion,'') as FDEndDateUnion"
        _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_EmpCode) & " ) "

        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each R As DataRow In _Dtemp.Rows

            _DtFin.Rows.Clear()
            _FNEmpStatus = Integer.Parse("0" & R!FTStatus.ToString)
            _AmtAddCalOT = 0
            _EmpSex = Val("0" & R!FNEmpSex.ToString)
            _FTStateWorkpermit = R!FTStateWorkpermit.ToString

            _FDDateProbation = R!FDDateProbation.ToString

            FNStateUnionMember = R!FTStateUnionMember.ToString : FDStartDateUnion = R!FDStartDateUnion.ToString : FDEndDateUnion = R!FDEndDateUnion.ToString

            _SalaryDevide = Val(R!FNSalaryDivide.ToString)
            _FTStatePayHoliday = R!FTStatePayHoliday.ToString
            _FNEmpWorkAge = Integer.Parse(Val(R!FNEmpWorkAge.ToString))
            _FTInsurType = Val(R!FTInsurType.ToString)

            If _SalaryDevide <= 0 Then
                _SalaryDevide = 1
            End If

            _FTSlary = R!FTSalary.ToString : _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString
            _FTPaymentCode = R!FTPayCode.ToString : _FTBankCode = R!FTBnkCode.ToString
            _FTCalSocialSta = R!FTCalSocialSta.ToString : _FTCalTaxSta = R!FTCalTaxSta.ToString

            _FTDeptCode = R!FTDeptCode.ToString : _FTDivCode = R!FTDivCode.ToString
            _FTSectCode = R!FTSectCode.ToString
            _FTUnitCode = R!FTUnitSecCode.ToString : _FTPos = R!FTPositCode.ToString

            _FTEmpState = R!FTCalType.ToString

            _FTEmpIdNo = R!FTTaxNo.ToString 'R!FTEmpIdNo.ToString
            _FTEmpIdNo1 = R!FTEmpIdNo.ToString
            _FTSocialNo = R!FTSocialNo.ToString



            _FTBranchCode = R!FTBnkBchCode.ToString
            _FTAccNo = R!FTAccNo.ToString
            '---------------------------------------- ลดหย่อน------------------------------------
            _FNChildNotLearn = 0 : _FCReduceDonate = 0 : _FCLifeInsurance = 0 : _FCLoanHouse = 0 : _FCReduceEducationSupport = 0
            _FCShare = 0 : _FCReduceFather = 0 : _FCReduceMother = 0 : _FCReSpouseFather = 0 : _FCReSpouseMother = 0 : _FTMarryIncome = 0
            _FCLifeFeeMoney = 0

            FCModFather = 0 : FCModMother = 0 : FCModMateFather = 0 : FCModMateMother = 0
            FCPremium = 0 : FCInterest = 0 : FCUnitRMF = 0 : FCUnitLTF = 0 : FCDeductDonate = 0 : FCDisabledDependents = 0 : FCDeductDonateStudy = 0
            FCHealthInsurFatherMotherMate = 0 : FTHealthInsurIDFather = 0 : FTHealthInsurIDMother = 0
            FTHealthInsurIDFatherMate = 0 : FTHealthInsurIDMotherMate = 0

            FTTotalCalContributedAmt = 0 : FTContributedAmt = 0 : FTCmpContributedAmt = 0
            FTTotalCalWorkmen = 0 : FTWorkmenAmt = 0 : _FTMaxCalWorkmen = 0 : _FTMaxWorkmenRate = 0 : FTTotalCalWorkmenAcc = 0
            _FNIncentiveAmt = 0

            _TmpFDDateEnd = _FDDateEnd
            _TmpFDDateEndP = _FDDateEnd

            If _TmpFDDateEnd <> "" Then

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,-1,Convert(Datetime,'" & _TmpFDDateEnd & "')),111)"
                _TmpFDDateEnd = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,Convert(Datetime,'" & _EndDate & "')),111)"
                _TmpFDDateEndP = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

            End If

            '--------- อายุงาน  เดือน
            _WorkAge = Val(R!FNEmpWorkAgeNewCD.ToString)

            '---------อายุงาน วัน
            _WorkAgeDay = Val(R!FNEmpWorkAgeNewDay.ToString)

            '---------อายุงาน เดือน ไม่ปัดขึ้น เพื่อคิด ค่ารางวัลอายุงาน 
            _WorkAgeSeniority = Val(R!FNEmpWorkAgeMonthSeniority.ToString)

            '---------วันทำงาน 
            _WorkingDayN = Val("0" & R!FNEmpWorkAgeNewDay_CD.ToString)

            '----------- Calculate Seniority Bonus For KKN---------------
            _FNWorkAgeSalary = 0
            'If _FTEmpState <> "2" And _FTEmpState <> "3" Then
            ''If-- Val(_PayTerm) Mod 2 <> 0 Then


            'If (_StartDate <= Left(_StartDate, 8) & "24" And _EndDate >= Left(_StartDate, 8) & "24") Then
            '    For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & _WorkAge & " AND  FNWorkAgeEnd>=" & _WorkAge & " ")
            '        _FNWorkAgeSalary = Val(ZRow!FNWorkAgeAmt.ToString)
            '        Exit For
            '    Next
            'End If
            ''End If

            'End If

            '----------- Calculate Seniority Bonus For KKN---------------

            If _FTEmpState = "2" Then
                _TotalInstalment = 12
            Else
                _TotalInstalment = 24
            End If

            _ContributedFundBeginPay = False
            If R!FDFundBegin.ToString <> "" Then
                If R!FDFundBegin.ToString < _FTEndCalculateDate Then

                    If R!FDFundEnd.ToString <> "" Then
                        If R!FDFundEnd.ToString > _FTEndCalculateDate Then
                            _ContributedFundBeginPay = True
                        End If
                    Else
                        _ContributedFundBeginPay = True
                    End If

                End If
            End If

            _Instalment = Val(_PayTerm)
            _FNIncentiveAmt = 0

            '-------------คำนวณ Incentive-------------------------------------------
            Select Case _FTInsurType
                Case 1

                    '---------ประกันเป็นวัน
                    '_Qry = "SELECT SUM ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END  ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "



                    _Qry = " SELECT  SUM(case when (ISNULL(FNProNormal,0)-  ISNULL(FNAmtNormal,0))>0 THEN ISNULL(FNProNormal,0)-  ISNULL(FNAmtNormal,0) ELSE  0  END  "
                    _Qry &= vbCrLf & " + case when (ISNULL(FNProOT,0)-  ISNULL(FNAmtOT,0))>0 THEN ISNULL(FNProOT,0)-  ISNULL(FNAmtOT,0) ELSE  0 END "
                    _Qry &= vbCrLf & " )AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                    '_Qry = "SELECT SUM (  ISNULL(FNNetAmt,0)   ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                    '_Qry = "SELECT sum(Isnull(FNAmt,0)) as FNAmt  "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    '_FNIncentiveAmt = _FNIncentiveAmt + CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case 2
                    '---------ประกันเป็นเป็นงวด-------------------------------------------

                    _Qry = "SELECT  ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END  ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM ( SELECT SUM(ISNULL(FNNetAmt,0) ) AS FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) AS FNNetProAmt"
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _Qry &= vbCrLf & " ) AS M"

                    '_Qry = "SELECT   SUM (  ISNULL(FNNetAmt,0)   ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM ( Select SUM(ISNULL(FNNetAmt,0) ) As FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) As FNNetProAmt"
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily With(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	And FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    '_Qry &= vbCrLf & " ) AS M"
                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))
                    '_Qry = "SELECT sum(Isnull(FNAmt,0)) as FNAmt  "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                    '_FNIncentiveAmt = _FNIncentiveAmt + CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case Else
            End Select
            '-------------------------------------

            '---------------------------------------- ลดหย่อน------------------------------------
            _Qry = " SELECT      FNHSysEmpID, FTChildSex, FTStudySta  ,isnull( FTStateNotDisTax ,'0') AS FTStateNotDisTax "
            '_Qry &= vbCrLf & ", dbo.FN_Get_ChildEmp_Age(FDChildBirthDate,'') AS FNChildAge"
            _Qry &= vbCrLf & ",dbo.FN_Get_Emp_WorkAge(FDChildBirthDate,'" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "') AS FNChildAge"
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeChild WITH(NOLOCK) "
            _Qry &= vbCrLf & " WHERE   (FNHSysEmpID = " & Val(_EmpCode) & ")"
            _dttemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)



            Dim _ChildNotStudy As Integer = 0
            Dim _ChildStudy As Integer = 0
            _FNTotalChildCare = 0
            _EmpDisTaxChildAmt = 0

            If (_EmpSex = 1) Then 'Employee Male Not Cal ChildCare
                For Each _Drow As DataRow In _dttemp.Select("FTStateNotDisTax = '0'")

                    '--------  Add Child Care For KKN--------------
                    If Val(_Drow!FNChildAge.ToString) >= _FNChildCareStartAge And Val(_Drow!FNChildAge.ToString) < _FNChildCareEndAge Then
                        _FNTotalChildCare = _FNTotalChildCare + 1
                    End If
                    '--------  Add Child Care For KKN--------------

                    If _Drow!FTStudySta.ToString = "1" Then
                        _ChildStudy = _ChildStudy + 1
                    Else
                        _ChildNotStudy = _ChildNotStudy + 1
                    End If


                    '--------  Add Amt Child Distax For KKN--------------
                    If _Drow!FTStudySta.ToString = "0" Then
                        If _Drow!FTStudySta.ToString = "1" Then
                            If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                                _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateStudy
                            End If
                        Else

                            If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                                _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateNotStudied
                            End If
                        End If

                    End If

                    ' อายุมากกว่า แต่ศึกษาอยู่ ลดหย่อนได้

                    '--------  Add Amt Child Distax For KKN--------------



                Next

                _FNNetChildCareAmt = Format(_FNTotalChildCare * _FNChildCareAmt, "0.00")

            Else
                For Each _Drow As DataRow In _dttemp.Select("FTStateNotDisTax = '0'")
                    If _Drow!FTStudySta.ToString = "1" Then
                        If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                            _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateStudy
                        End If
                    Else

                        If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                            _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateNotStudied
                        End If
                    End If

                    If _Drow!FTStudySta.ToString = "1" Then
                        _ChildStudy = _ChildStudy + 1
                    Else
                        _ChildNotStudy = _ChildNotStudy + 1
                    End If

                Next
            End If



            _FCAccumulateIncome = 0 : _FCAccumulateSocial = 0 : _FCAccumulateTax = 0
            FTTotalCalContributedAcc = 0 : FTTotalCalWorkmenAcc = 0

            '----------- Get Summary ------------------
            LoadIncomeTax(_FTEmpIdNo, _PayYear, _PayTerm, _FCAccumulateIncome, _FCAccumulateTax, _FCAccumulateSocial, CountTerm, FTTotalCalContributedAcc, FTTotalCalWorkmenAcc, Integer.Parse(Val(_EmpCode)))
            '----------- Get Summary ------------------

            With _EmpDisTax

                .BaseSlary = 0
                .OtherSlary = 0
                .BeforeIncom = 0 ' _FCAccumulateIncome
                .BeforeTax = _FCAccumulateTax
                .FTMateIncome = (R!FTMateIncome.ToString = "0")
                ' ----------------------------------------- Clear Discount Tax Value -------------------------
                .Cfg_ModChildAllowanceRateNotStudied = _ChildNotStudy 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
                .Cfg_ModChildAllowanceRateStudy = _ChildStudy 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
                '-------------ลดหย่อนบุตร-----------------

                '--- หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
                .Cfg_ContributedDeducToTheFund = FTTotalCalContributedAcc 'ลูกจ้าง
                '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ

                .Cfg_ModDeductibleDonations = CDbl(Val(R!FCDeductDonate.ToString)) ' ' % ลดหย่อนเงินบริจาค
                .Cfg_ModDeductDonateStudy = CDbl(Val(R!FCDeductDonateStudy.ToString))
                .Cfg_ModFatherReduction = CDbl(Val(R!FCModFather.ToString)) '  'ลดหย่อนบิดา
                .Cfg_ModInsurancePremiums = CDbl(Val(R!FCPremium.ToString)) '  'ค่าเบี้ยประกันชีวิตส่วนบุคคล
                .Cfg_ModLendingforHousing = CDbl(Val(R!FCInterest.ToString)) ' 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย

                .Cfg_ModLTFChk = CDbl(Val(R!FCUnitLTF.ToString)) 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
                .Cfg_ModMateFatherReduction = CDbl(Val(R!FCModMateFather.ToString)) ' 'ลดหย่อนบิดา คู่สมรส
                .Cfg_ModMateMotherReduction = CDbl(Val(R!FCModMateMother.ToString)) '  'ลดหย่อนมารดา คู่สมรส
                .Cfg_ModMotherReduction = CDbl(Val(R!FCModMother.ToString)) ' 'ลดหย่อนมารดา

                .Cfg_ModPersonalExpenChk = 0 ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน

                .Cfg_ModRateReductionsByMarital = (IIf(R!FTMaritalCode.ToString = "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
                .Cfg_ModRateReductionsBySingle = (IIf(R!FTMaritalCode.ToString <> "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ โสด 

                .Cfg_ModRMFChk = CDbl(Val(R!FCUnitRMF.ToString)) '  ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 
                .FCDisabledDependents = CDbl(Val(R!FCDisabledDependents.ToString)) '  'ค่าอุปการะเลี้ยงดูคนพิการหรือทุพพลภาพ
                .FCHealthInsurFatherMotherMate = CDbl(Val(R!FCHealthInsurFatherMotherMate.ToString)) '   'เบี้ยประกันสุขภาพบิดามารดาของผู้มีเงินได้และคู่สมสร

                .FCExceptAgeOver = CDbl(Val(R!FCExceptAgeOver.ToString)) ' ' 'รายการเงินได้ที่ได้รับยกเว้น ของผู้มีเงินได้ตั้งแต่ 65 ปีขึ้นไป 
                .FCExceptAgeOverMate = CDbl(Val(R!FCExceptAgeOverMate.ToString)) ' 'รายการเงินได้ที่ได้รับยกเว้น ของคู่สมรสอายุตั้งแต่ 65 ปีขึ้นไป
                '----------------------------------------------------
            End With
            '---------------------------------------- ลดหย่อน------------------------------------

            _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = "0" : _FTOtherAddCalculateTax = "0" : _FCOtherAddOt = 0
            _FTOtherAddOtCalculateSocial = "0" : _FTOtherAddOtCalculateTax = "0" : _FCBFShiftMoney = 0 : _FTShiftMoneyCalculateSocial = "0"
            _FTShiftMoneyCalculateTax = "0" : _FCDiligent = 0 : _FTDiligentCalculateSocial = "0" : _FTDiligentCalculateTax = "0"
            _FCBonusEndYear = 0 : _FTBonusEndCalculateSocial = "0" : _FTBonusEndCalculateTax = "0" : _FCShelter = 0
            _FTShelterCalculateSocial = "0" : _FTShelterCalculateTax = "0" : _FCShareFactory = 0 : _FTShareFactoryCalculateSocial = "0"
            _FNNetpayOrg = 0.0
            _FNNetpay = 0.0
            _FCSalary = -99
            _FTSlary = (_FTSlary)

            If IsNumeric(_FTSlary) Then
                _MSlary = _FTSlary
                _FCSalary = CDbl(_FTSlary)


                '------------------ คำนวณคืนพักร้อน ----------------------------

                If (_ReturnVacation > 0) Or (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                    Dim _Month As Integer = 0
                    Dim _Leave As Double = 0
                    Dim _SumLeaveVacation As Double = 0
                    Dim _ResetDate As String = ""

                    Dim _DateReset2 As String



                    _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
                    _Qry &= vbCrLf & "  FROM"
                    _Qry &= vbCrLf & " ("
                    '_Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),convert(date, '" & (_EndDate) & "'),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK )"
                    _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
                    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                    _Qry &= vbCrLf & " ) As T"

                    _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                        ''  MsgBox("a")

                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & ("") & "','" & (_EndDate) & "') AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                    ElseIf _PayTerm = "01" Then
                        ''  MsgBox("b")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'2021/01/01','2021/12/31') AS FNEmpVacation"
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                    Else
                        ''  MsgBox("c")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & (_DateReset) & "','" & (_EndDate) & "') AS FNEmpVacation"
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                    End If


                    _Leave = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                    '' MsgBox(_Leave)
                    If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                        ''    MsgBox("d")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'2022/01/01','" & (_EndDate) & "') AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "


                        _Leave = _Leave + (HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        ''     MsgBox(_Leave)

                    End If

                    If _Leave > 0 And _DateReset <> "" Then

                        _Qry = ""
                        If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98' OR ISNULL(FTStateDeductVacation,'') ='1' )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"

                            ''      MsgBox("e")
                            'Else
                            '    _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            '    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            '    _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            '    _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '    '_Qry &= vbCrLf & " 	AND  FTDateTrans < '" & (_DateReset) & "'"
                            '    _Qry &= vbCrLf & " 	AND  FTDateTrans < Convert(varchar(10),DateAdd(year,1,Convert(Datetime,'" & (_DateReset) & "')),111)"
                            '    '_Qry &= vbCrLf & " 	AND  FTDateTrans >=Convert(varchar(10),DateAdd(year,-1,Convert(Datetime,'" & (_DateReset) & "')),111)"
                            '    _Qry &= vbCrLf & " 	AND  FTDateTrans >='" & (_DateReset) & "'"
                        End If

                        _SumLeaveVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        ''    MsgBox(_SumLeaveVacation)
                        If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            ''       MsgBox("f")
                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '' _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & ("2022/01/01") & "'"

                            _SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                            ''         MsgBox(_SumLeaveVacation)
                        Else
                            ''        MsgBox("g")
                            _Qry = " "
                            '_Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            '_Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            '_Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '_Qry &= vbCrLf & " 	AND  FTDateTrans >= '2022/01/01'"
                            '_Qry &= vbCrLf & " 	AND  FTDateTrans <= '2022/12/31'"
                            '_SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                            '''      MsgBox(_SumLeaveVacation)
                        End If



                        If _ReturnVacation <= 0 Then
                            _Qry = " SELECT   TOP 1 FCCfgRetValue"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigReturnVacationSet WITH(NOLOCK) "
                            _Qry &= vbCrLf & "  WHERE      (FNCalType =" & Val(_EmpType) & ")"

                            _ReturnVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        End If

                        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                        Select Case FNStateSalaryType
                            Case 0 'ต่อเดือน

                                _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.0000000"))
                            Case 1 'ต่อวัน

                                _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                        End Select
                        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                        Dim _FNSlaryPerDayRetVa As Double = 0
                        _FNSlaryPerDayRetVa = HI.Conn.SQLConn.GetField("Select Top 1 FNSalary From THRTPayRoll WITH(NOLOCK) where  FNHSysEmpID = " & Val(_EmpCode) & " and  FTPayYear +'/'+FTPayTerm  <'" & _PayYear & "/" & _PayTerm & "'  Order by FTPayYear +'/'+FTPayTerm DESC ", Conn.DB.DataBaseName.DB_HR, "0")


                        If (_Leave * 480) > _SumLeaveVacation Then

                            ''Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), _Leave, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                            Dim _MoneyRetVacationPerDay = _FNSlaryPerDay


                            Dim _ReteReturnVacPerDay As Double = 0
                            If _FNEmpStatus = "2" Or _FDDateEnd <= _EndDate Then
                                If _WorkAge <= 0 Then
                                    Dim _ReVacationDay As Double = 0
                                    Dim _ReVacationPiad As Double = 0

                                    '  _ReVacationDay = Double.Parse(Format(((_Leave / 26) * _WorkAgeDay), "0.000"))
                                    '  _ReVacationDay = Double.Parse((_Leave / 26) * _WorkAgeDay)
                                    '   _Leave = _ReVacationDay
                                    _ReVacationDay = _Leave
                                End If
                                _ReteReturnVacPerDay = _MoneyRetVacationPerDay
                            Else
                                _ReteReturnVacPerDay = _MoneyRetVacationPerDay  ' CDbl(Format((_FNSlaryPerDayRetVa) / CountDayPerMonth, "0.0000000"))
                                FNVacationPerDayLapaid = _MoneyRetVacationPerDay
                            End If
                            FNVacationRetMin = (_Leave * 480) - _SumLeaveVacation
                            If FNVacationRetMin <= 0 Then
                                FNVacationRetMin = 0
                            End If

                            FNVacationRetAmt = 0
                            'Dim _RetVaclationBal As Double = CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000"))

                            _AmtReturnVacation = CDbl(Format((CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000")) * (_ReturnVacation * (_ReteReturnVacPerDay / 480))), "0.000"))
                            FNVacationRetMin = CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000"))
                            FNVacationRetAmt = _AmtReturnVacation

                        End If

                    End If
                End If
                '------------------ คำนวณคืนพักร้อน ----------------------------

                ''------------------ คำนวณคืนพักร้อน ----------------------------

                ''------------------ คำนวณคืนพักร้อน ----------------------------

                _SocialMinIncome = HCfg.HSocialRate.SocialIncomeMin
                _SocialMaxIncome = HCfg.HSocialRate.SocialIncomeMax
                _SocialRate = HCfg.HSocialRate.CalSocialRate
                _SocialRateCmp = HCfg.HSocialRate.CalSocialRateCmp
                _StateSocialOnlyCmppay = HCfg.HSocialRate.StateSocialOnlyCmppay

                _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
                _AmtPlus = 0

                _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                For Each R3 As DataRow In _dtot.Rows
                    Select Case R3!FTCfgOTCode.ToString.ToUpper
                        Case "01"
                            _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                        Case "02"
                            _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                        Case "03"
                            _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                        Case "04"
                            _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "05"
                            _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                    End Select

                Next

                '---------รายได้รายหัก อื่นๆ-------------------------
                '_Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                '_Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                '_Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                '_Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                '_Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                '_Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"

                '_Qry &= vbCrLf & "   , ISNULL(FN.FTStaLateM,0) FTStaLateM ,  ISNULL(FN.FTStaLateA,0) FTStaLateA "

                '_Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                '_Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                '_Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                '_Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ")   AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                '_Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"




                'If _EmpCalType = "0" Then
                '    If Val(_PayTerm) Mod 2 = 0 Then
                '        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                '    Else
                '        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                '    End If
                'End If
                '---------รายได้รายหัก อื่นๆ-------------------------
                _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay,"
                _Qry &= vbCrLf & " FN.FTStaLatePerDay,FN.FTStaAbsentPerDay,FN.FTStaLeavePerDay,FN.FTStaVacationPerDay,FN.FTStaMaternityleaveNotpayPerDay"
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ") AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"

                If _EmpCalType = "0" Then
                    If Val(_PayTerm) Mod 2 = 0 Then
                        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                    Else
                        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                    End If
                End If
                _Qry &= vbCrLf & "UNION  "
                _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial,  0 As FCFinAmt   , FM.FTFinType"
                _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay,"
                _Qry &= vbCrLf & " FN.FTStaLatePerDay,FN.FTStaAbsentPerDay,FN.FTStaLeavePerDay,FN.FTStaVacationPerDay,FN.FTStaMaternityleaveNotpayPerDay"

                _Qry &= vbCrLf & " FROM        [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)   INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE    (FM.FTFinType = '1' OR FM.FTFinType = '2')   and FN.FTFinCode ='008'  AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)

                If _EmpCalType = "0" Then
                    If Val(_PayTerm) Mod 2 = 0 Then
                        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                    Else
                        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                    End If
                End If
                _Qry &= vbCrLf & " and FN.FTFinCode  not in (  Select FTFinCode From [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin  WITH (NOLOCK)  "
                _Qry &= vbCrLf & " WHERE    (FNHSysEmpID = " & Val(_EmpCode) & ") )"

                ' _Qry &= vbCrLf & "  AND FTPayType <> '" & IIf(_EmpCalType = "0" Or (Val(_PayTerm) Mod 2 = 0), "", "1") & "' "



                _dtAddOtherAmt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)




                _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
                _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
                _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
                _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet"
                _Qry &= vbCrLf & "  WHERE        (FTFinCode = N'001') OR  (FTFinCode = N'007')  AND  FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _GAmtAddCalOT = 0
                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTStaCalOT='1' AND FTPayType='0' ")
                    _GAmtAddCalOT = _GAmtAddCalOT + Val(R2!FCFinAmt.ToString)
                Next

                _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = 0 : _FTOtherAddCalculateTax = 0 : _FCOtherDeduct = 0

                '---------------- Adjust Before Calculate------------------------------------
                _Qry = " SELECT        FN.FTStaTax, FN.FTStaSocial, (ISNULL(BF.FCFinAmt,0))  AS FCFinAmt, FM.FTFinType,ISNULL(BF.FNDay,-1) As FNDay,BF.FTFinCode "
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE        (BF.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "')"
                _Qry &= vbCrLf & "  AND (BF.FTPayTerm = '" & HI.UL.ULF.rpQuoted(_PayTerm) & "') "
                _Qry &= vbCrLf & " AND (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2') AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)

                If _AmtReturnVacation > 0 Then
                    _Qry &= vbCrLf & " UNION ALL "
                    _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial, " & _AmtReturnVacation & "  AS FCFinAmt, FM.FTFinType,-1 As FNDay,FM.FTFinCode "
                    _Qry &= vbCrLf & " FROM     [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)  INNER JOIN"
                    _Qry &= vbCrLf & "          [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE (FM.FTFinCode='019') AND   FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                End If

                _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                For Each R2 As DataRow In _dt.Select("FNDay<=0")
                    Select Case R2!FTFinType.ToString
                        Case "1"
                            _FCOtherAdd = _FCOtherAdd + Val((R2!FCFinAmt.ToString))

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax + Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial + Val((R2!FCFinAmt.ToString))

                        Case "2"

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax - Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial - Val((R2!FCFinAmt.ToString))


                            _FCOtherDeduct = _FCOtherDeduct + Val((R2!FCFinAmt.ToString))
                    End Select
                Next

                _DayAdjAdd = 0
                _WageAdjAdd = 0

                For Each R2 As DataRow In _dt.Select("FNDay> 0")

                    _DayAdjAdd = _DayAdjAdd + Val((R2!FNDay.ToString))
                    _WageAdjAdd = _WageAdjAdd + Val((R2!FCFinAmt.ToString))

                Next

                _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
                _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= 480 THEN 480   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= 480 THEN 480   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= 480 THEN 480 ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
                _Qry &= vbCrLf & " , FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO,Max(ISNULL(FTStateMedicalCertificate,'')) AS FTStateMedicalCertificate "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_EmpCode) & " )"

                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_DateStartOfMonth) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_DateEndOfMonth) & "' "
                Else
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                End If

                _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

                _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	,Isnull(SH.FNRatePaid,1) AS FNRatePaid , Isnull(SH.FNStateShift,0) AS FNStateShift  "
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) )     AS FNTime"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT1_5,0) AS FNOT1_5"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT2,0 ) AS FNOT2  , ISNULL(T.FNOT3,0) AS FNOT3, ISNULL(T.FNOT4,0) AS FNOT4"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(T.FNLateNormalCut,0 )   AS FNLateNormalCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateOtMin,0) As FNLateOtMin,ISNULL(T.FNLateOtCut,0) As FNLateOtCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateMMin,0) As FNLateMorning"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateAfMin,0) AS FNLateAfternoon,Isnull(T.FNAbsentCut,0) AS FNAbsentCut "
                _Qry &= vbCrLf & " 	, (CASE WHEN ISNULL(T.FNAbsentSP,0) = ISNULL(T.FNAbsent,0) THEN 0 ELSE  ISNULL(T.FNAbsent,0)  END ) AS FNAbsent_Cut "
                _Qry &= vbCrLf & " 	, ISNULL(T.FNCutAbsent,0) AS FNAbsent "
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) )   AS FNTimeMin"
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0)) As FNTimeMinOrg"
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1Min,0) As FNOT1Min  "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1_5Min,0) As FNOT1_5Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNOT2Min,0) As FNOT2Min "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNLateMMin,0) AS FNLateMMin "
                _Qry &= vbCrLf & " , ISNULL(T.FNLateAfMin,0) AS FNLateAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireMMin,0) AS FNRetireMMin "
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireAfMin,0 )  as FNRetireAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireNormalCut,0) As FNRetireNormalCut "
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireOtMin,0) AS FNRetireOtMin"
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"
                _Qry &= vbCrLf & " ,CASE WHEN T.FTWeekDay=1 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSunday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSunday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=2 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTMonday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTMonday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=3 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTTuesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTTuesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=4 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTWednesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTWednesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=5 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTThursday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTThursday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=6 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTFriday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTFriday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=7 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSaturday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSaturday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  ELSE '0' END AS FTWeekly,ISNULL(FTStateAccept,'') AS FTStateAccept "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
                _Qry &= vbCrLf & "   INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK)  ON  T.FNHSysEmpID =  M.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeWeekly AS EHL WITH (NOLOCK) ON T.FNHSysEmpID=EHL.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmpTypeWeeklySpecial AS ETHL WITH (NOLOCK) ON T.FTDateTrans = ETHL.FDHolidayDate AND M.FNHSysEmpTypeId=ETHL.FNHSysEmpTypeId"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS SH WITH (NOLOCK) ON T.FNHSysShiftID = SH.FNHSysShiftID"

                _Qry &= vbCrLf & "  WHERE (T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "'  "

                If _FDDateEnd <> "" Then
                    _Qry &= vbCrLf & " 	AND T.FTDateTrans < '" & HI.UL.ULDate.ConvertEnDB(_FDDateEnd) & "'  "
                End If
                If _FTEmpState <> "2" And _FTEmpState <> "3" Then ' คำนวณค่าแรงพนักงานรายเดือน
                    _Qry &= vbCrLf & " 	AND T.FTStateAccept = '1'  "
                End If

                _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '---------------Get Trans Daily--------------------------------------
                _GFNTime = 0 : _GFNNotRegis = 0 : _GFNOT1 = 0 : _GFNOT1_5 = 0
                _GFNOT2 = 0 : _GFNOT3 = 0 : _GFNOT4 = 0 : _GFNLeaveSick = 0 : _GFNLeaveBusiness = 0
                _GFNLeaveVacation = 0 : _GFNLeavePregnant = 0 : _GFNLeaveOrdain = 0 : _GFNLeaveMarry = 0 : _GFNLeaveSpecial = 0
                _GFNLeaveOther = 0 : _GFNLateNormalMin = 0 : _GFNLateNormalCut = 0 : _GFNLateOtMin = 0
                _GFNLateOtCut = 0 : _GFNLateMorning = 0 : _GFNLateAfternoon = 0
                _GFNAbsent = 0 : _GFNCutAbsent = 0 : _GFNLeavePay = 0 : _GFNTimeMin = 0 : _GFNOT1Min = 0 : _GFNOT1_5Min = 0 : _GFNTimeMin_Real_After_Probation = 0
                _GFNOT2Min = 0 : _GFNOT3Min = 0 : _GFNLateMMin = 0 : _GFNLateAfMin = 0 : _GFNRetireMMin = 0
                _GFNRetireAfMin = 0 : _GFNRetireNormalCut = 0 : _GFNRetireOtMin = 0 : _GFNRetireOtCut = 0
                _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
                _Gtotalleave = 0 : _GtotalleavePay = 0 : _GtotalleaveNotPay = 0 : _GtotalleavePayCalSso = 0 : _GtotalleavePayCalSsoAmt = 0
                _TotalHoliDay = 0
                _GFNLateNormalMinNotHoliday = 0

                '------------------- เริ่มการคำนวณรายวัน
                Dim _oHoliday As Integer = 0

                _TotalWorkDay = 0
                _ShiftAmt = 0
                _ShiftValue = 0
                _ShiftOTValue = 0
                _ShiftOTAmt = 0
                _FCAdd = 0 : _FTAddCalculateSocial = 0 : _FTAddCalculateTax = 0 : _FCDeduct = 0
                _GAmtPlus = 0

                Dim _RateShipftPerDay As Double = 0
                Dim _StateShift As Integer = 0
                If _FDDateStart > _FTSatrtCalculateDate Then _FTSatrtCalculateDate = _FDDateStart

                Dim _fnMonthWorkAge As Integer = 0

                Dim temp As Date
                Dim temp1 As Integer
                Dim i As Integer
                Dim day1 As Integer
                Dim day2 As Integer

                Dim Day As Integer
                Dim Month As Integer


                Do While _FTSatrtCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTSatrtCalculateDate < _FDDateEnd)

                    '_fnMonthWorkAge = DateDiff("m", _FDDateStart, HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate))




                    temp1 = DateDiff("m", HI.UL.ULDate.ConvertEnDB(_FDDateStart), HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate))

                    day1 = DatePart("d", HI.UL.ULDate.ConvertEnDB(_FDDateStart))
                    day2 = DatePart("d", HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate))
                    If day1 > day2 Then
                        temp = DateAdd("m", (temp1 - 1), HI.UL.ULDate.ConvertEnDB(_FDDateStart))
                        Month = (temp1 - 1)
                    Else
                        temp = DateAdd("m", (temp1), HI.UL.ULDate.ConvertEnDB(_FDDateStart))
                        Month = (temp1)
                    End If

                    For i = 1 To 31
                        If temp = HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) Then Exit For
                        temp = DateAdd("d", 1, temp)
                    Next i

                    Day = (i - 1)



                    'If (_EndDate >= Left(_StartDate, 8) & "07" And _EndDate <= Left(_StartDate, 8) & "24") Then
                    For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & Month & " AND  FNWorkAgeEnd>=" & Month & " ")
                        _FNWorkAgeSalary = _FNWorkAgeSalary + Val(ZRow!FNWorkAgeAmt.ToString)

                    Next
                    'End If

                    _RateShipftPerDay = 0
                    _oHoliday = 0
                    FTHldType = 0
                    _StateShift = 0
                    Dim _NewSlary As String

                    _Qry = "  SELECT   TOP 1   FNCurrentSlary  AS AMT"
                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK) "
                    _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "') "
                    _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    _FCSalary = _MSlary
                    If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    _Holiday = ""

                    For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                        _Holiday = "H"
                        FTHldType = Val(IR!FTHldType.ToString)
                        Exit For
                    Next

                    _FTShift = ""

                    _FNTime = 0
                    _FNNotRegis = 0
                    _FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
                    _FNOT3 = 0 : _FNOT4 = 0
                    _FNLateNormalMin = 0 : _FNLateNormalCut = 0
                    _FNLateOtMin = 0 : _FNLateOtCut = 0
                    _FNLateMorning = 0 : _FNLateAfternoon = 0
                    _LateCutAbsent = 0 : _FNAbsent = 0
                    _FNTimeMin = 0 : _FNOT1Min = 0
                    _FNOT1_5Min = 0 : _FNOT2Min = 0
                    _FNOT3Min = 0 : _FNOT4Min = 0
                    _FNLateMMin = 0 : _FNLateAfMin = 0
                    _FNRetireMMin = 0 : _FNRetireAfMin = 0
                    _FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
                    _FNRetireOtMin = 0 : _FNRetireOtMin = 0
                    _FNRetireOtCut = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _AmtAddCalOT = 0
                    _GtotalleavePayCalSso = 0
                    _LeaveCode = ""

                    Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                    Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                    For Each R2 In _R

                        _RatePay = Double.Parse("0" & R2!FNRatePaid.ToString)
                        _RateShipftPerDay = _RatePay
                        _StateShift = Integer.Parse("0" & R2!FNStateShift.ToString)

                        _FTShift = R2!FTShift.ToString
                        _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                        _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                        _FNNotRegis = Val(R2!FNNotRegis.ToString)
                        _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                        _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                        _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                        _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                        _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                        _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent_Cut.ToString)
                        _FNOT1Min = Val(R2!FNOT1Min.ToString)
                        _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                        _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                        _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                        _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                        _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                        _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                        _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                        _InOT = R2!FTIn3.ToString
                        _OutOT = R2!FTOut3.ToString

                        _Over = R2!FTOverClock.ToString

                        If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            _TotalWorkDay = _TotalWorkDay + 1

                            _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                            If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                If _FNOT1Min + _FNOT2Min + _FNOT4Min + _FNOT1_5Min > 0 Then
                                    '' _FNNetOTMealAmt = _FNNetOTMealAmt + _FNOTMealAmt
                                End If

                                _SPDateType = 0

                                _Holiday = ""

                                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _Holiday = "H"
                                    Exit For
                                Next

                                If _Holiday <> "" Then _SPDateType = 2

                                Dim _StateLeaveOther As Boolean = False
                                Dim _StateLeavacation As Boolean = False
                                Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                Dim _SumLeave As Integer = 0

                                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                    If Val(sR!LeaveType) = 1 Then
                                        _StateLeavacation = True
                                    Else
                                        _StateLeaveOther = True
                                    End If

                                    If Val(sR!LeaveType) = 2 Then
                                        _StateFTStaMaternityleaveNotpay = True
                                    End If

                                Next

                                '--------------------------- ค่ากะ -------------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)



                                    If _StatePass Then
                                        _ShiftAmt = _ShiftAmt + _ShiftValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ -------------------------------------

                                '****************************** Bonus 

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='008' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        Dim _Amt As Double = 0
                                        Dim _Cmd As String = ""
                                        _Cmd = "Select Top 1 isnull(FNAmt,0) AS  FNAmt From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus with(nolock)"
                                        _Cmd &= vbCrLf & "where FNHSysEmpID=" & Integer.Parse(_EmpCode)
                                        _Cmd &= vbCrLf & "and FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'"
                                        _Amt = Double.Parse(HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "0"))
                                        _BonusAmt = _BonusAmt + _Amt

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _Amt
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _Amt
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _Amt
                                    End If
                                Next


                                '****************************** End Bonus

                                '--------------------------- ค่ากะ OT ----------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        _ShiftOTAmt = _ShiftOTAmt + _ShiftOTValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftOTValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftOTValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftOTValue

                                    End If

                                Next
                                '--------------------------- ค่ากะ OT ----------------------------------

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='0' And FTFinCode<>'057' And FTFinCode<>'043' And FTFinCode<>'061'  And FTFinCode<>'062' And FTFinCode<>'063' And FTFinCode<>'064' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then

                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + Val(RFin!FCFinAmt.ToString)

                                        If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                            _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                        Else

                                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                            Next

                                        End If
                                    End If
                                Next
                            End If
                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                        End If

                    Next


                    'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                    Select Case FNStateSalaryType
                        Case 0 'ต่อเดือน
                            _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.000"))
                            _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                            ' _SalaryPayLeave = CDbl(Format((_FCSalary) / 26, "0.000")) ' ลาป่วย หารวันทำงานในงวด  meeting 20180227 pMote , pWest , pTuk cd , pAnuwat 

                            _SalaryPayLeave = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                        Case 1 'ต่อวัน
                            _FNSlaryPerMonth = CDbl(Format((_FCSalary * CountDayPerMonth), "0.000"))
                            _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.000"))
                            _SalaryPayLeave = _FNSlaryPerDay
                    End Select
                    'เพิ่มค่าแรง กัมพูชา 20161206
                    '  _SalaryPayLeave = _FNSlaryPerDay
                    _FNSlaryPerMonth = _FNSlaryPerMonth
                    _FNSlaryPerDay = _FNSlaryPerDay
                    _SalaryPayOTKM = _FNSlaryPerDay


                    'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ

                    If _RateShipftPerDay > 1 Then
                        _FNSlaryPerDay = _FNSlaryPerDay * _RateShipftPerDay
                    End If

                    If _StateShift = 1 Then
                        _Qry = " SELECT FTCfgOTCode,Isnull(FCCfgOTNightValue,0) as  FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus   "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    Else
                        _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    End If




                    _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000"))
                    _FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000"))
                    '_SalaryPayLeaveMin = CDbl(Format(CDbl(Format(_SalaryPayLeave / 8, "0.00000")) / 60, "0.00000"))
                    _SalaryPayLeaveMin = CDbl(_SalaryPayLeave / 8) / 60

                    _FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_SalaryPayOTKM + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000")) / 60, "0.00000"))

                    _FNSlaryOTPerHour = CDbl(Format((_SalaryPayOTKM + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000"))

                    If _FTShift = "" Then
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If
                    Else

                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If

                        If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _WorkDay = _WorkDay + 1
                        End If

                        If _Holiday = "" Then
                            _GFNLateNormalMinNotHoliday = _GFNLateNormalMinNotHoliday + _FNLateNormalMin
                        End If

                        _GFNLateNormalMin = _GFNLateNormalMin + _FNLateNormalMin
                        _GFNLateNormalCut = _GFNLateNormalCut + _FNLateNormalCut
                        _GFNLateOtMin = _GFNLateOtMin + _FNLateOtMin
                        _GFNLateOtCut = _GFNLateOtCut + _FNLateOtCut
                        _GFNLateMorning = _GFNLateMorning + _FNLateMorning
                        _GFNLateAfternoon = _GFNLateAfternoon + _FNLateAfternoon
                        _GFNAbsent = _GFNAbsent + _FNAbsent
                        _GFNCutAbsent = _GFNCutAbsent + _LateCutAbsent
                        _GFNTimeMin = _GFNTimeMin + _FNTimeMin
                        _GFNOT1Min = _GFNOT1Min + _FNOT1Min
                        _GFNOT1_5Min = _GFNOT1_5Min + _FNOT1_5Min
                        _GFNOT2Min = _GFNOT2Min + _FNOT2Min
                        _GFNOT3Min = _GFNOT3Min + _FNOT3Min
                        _GFNOT4Min = _GFNOT4Min + _FNOT4Min
                        _GFNLateMMin = _GFNLateMMin + _FNLateMMin
                        _GFNLateAfMin = _GFNLateAfMin + _FNLateAfMin
                        _GFNRetireOtMin = _GFNRetireOtMin + _FNRetireOtMin
                        _GFNRetireOtCut = _GFNRetireOtCut + _FNRetireOtCut
                        _GFNRetireMMin = _GFNRetireMMin + _FNRetireMMin
                        _GFNRetireAfMin = _GFNRetireAfMin + _FNRetireAfMin
                        _GFNRetireNormalCut = _GFNRetireNormalCut + _FNRetireNormalCut

                        If HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) >= HI.UL.ULDate.ConvertEnDB(_FDDateProbation) Then
                            _GFNTimeMin_Real_After_Probation = _GFNTimeMin_Real_After_Probation + (_FNTimeMin - _FNLateNormalMin)
                        End If



                    End If

                    _TmpLeavePay = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0 : FNPayLeaveSpecialBahtMin = 0
                    _FNLeaveNotPay = 0
                    _LeaveCode = ""
                    For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' ")
                        _LeaveCode = sR!LFTLeaveCode.ToString

                        _TmpLeavePay = Val(sR!FNTotalPayMinute.ToString)

                        Select Case sR!LFTLeaveCode.ToString.ToUpper
                            Case "97"

                            Case Else

                                _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                                _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                                _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                                If sR!FTStaCalSSO.ToString = "1" Then
                                    _GtotalleavePayCalSso = Val(sR!FNTotalPayMinute.ToString)
                                End If
                        End Select

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        Select Case sR!LFTLeaveCode.ToString.ToUpper '""Val(sR!LeaveType)
                            Case "98"
                                _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                            Case "998"
                                _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                            Case "1"
                                FNPayLeaveBusinessBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveBusinessBahtMin = GFNPayLeaveBusinessBahtMin + FNPayLeaveBusinessBahtMin

                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                            Case "0"

                                FNPayLeaveSickBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveSickBahtMin = GFNPayLeaveSickBahtMin + FNPayLeaveSickBahtMin
                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)

                                If FNPayLeaveSickBahtMin > 0 Then
                                    _LeaveSickPay = _LeaveSickPay + 1

                                    Dim _PayPer As Double = 0
                                    Select Case _LeaveSickPay
                                        Case Is <= 30
                                            _PayPer = 100
                                        Case Is <= 90
                                            _PayPer = 60
                                        Case Is <= 180
                                            _PayPer = 0
                                    End Select

                                    If _PayPer = 0 Then
                                        FNPayLeaveSickBahtMin = 0
                                        GFNPayLeaveSickBahtMin = GFNPayLeaveSickBahtMin - FNPayLeaveSickBahtMin
                                        _GFNLeaveOther = _GFNLeaveOther - FNPayLeaveSickBahtMin
                                    End If

                                    If _DTEmpPayLeaveSick.Select("FNSalary=" & _SalaryPayLeave & " AND FNPayPer=" & _PayPer & " ").Length > 0 Then
                                        For Each Rx As DataRow In _DTEmpPayLeaveSick.Select("FNSalary=" & _SalaryPayLeave & "  AND FNPayPer=" & _PayPer & "  ")
                                            Rx!FNDay = Val(Rx!FNDay) + FNPayLeaveSickBahtMin
                                            Exit For
                                        Next
                                    Else
                                        _DTEmpPayLeaveSick.Rows.Add(_SalaryPayLeave, FNPayLeaveSickBahtMin, _PayPer)
                                    End If


                                End If

                            Case "16" ''Accident on work
                                FNPayLeaveAccidentBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveAccidentBahtMin = GFNPayLeaveAccidentBahtMin + FNPayLeaveAccidentBahtMin
                            Case "999"
                                FNPayLeaveSpecialBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveSpecial = _GFNLeaveSpecial + FNPayLeaveSpecialBahtMin
                            Case "97"
                                FNParturitionLeaveMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNParturitionLeaveMin = GFNParturitionLeaveMin + FNParturitionLeaveMin

                                ' _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                            Case Else
                                _FNLeavePay = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End Select

                    Next

                    _GFNLeavePay = _GFNLeavePay + _FNLeavePay
                    _SocialBefore = 0
                    _SocialBeforeAmt = 0

                    Dim _WageAmtPerDay As Double = 0
                    Dim _WageOTAmtPerDay As Double = 0
                    Dim _TimeOTMdr As Integer = 0

                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    Else
                        _WageAmtPerDay = CDbl(Format((_FNTimeMin) * _FNSlaryPerMin, "0.000"))
                        _FNEmpBaht = _FNEmpBaht + _WageAmtPerDay
                    End If

                    _nBahtOt1 = _nBahtOt1 + CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000"))


                    If FTHldType = 1 And _FNOT3Min > 0 Then
                        _GAmtPlus = _GAmtPlus + _AmtPlus
                    End If

                    _nBahtOt15 = _nBahtOt15 + CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.000"))

                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.000"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.000"))

                    _LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.000"))

                    Dim _TmpFNLapaidAmt As Double = CDbl(Format(_TmpLeavePay * _SalaryPayLeaveMin, "0.000"))
                    Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _SalaryPayLeaveMin, "0.000"))

                    _Lapaid = _Lapaid + _TmpLapaidAmt
                    _GtotalleavePayCalSsoAmt = _GtotalleavePayCalSsoAmt + CDbl(Format(_GtotalleavePayCalSso * _SalaryPayLeaveMin, "0.000"))  'เงินลาจ่ายที่นำไปคิดประกันสังคม

                    If _LeaveCode <> "" And _FNLeaveVacation > 0 Then

                        'Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                        '_FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * (_MoneyRetVacationPerDay / 480), "0.000"))

                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    Else
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.000"))
                    End If

                    If _FTStatePayHoliday <> "1" Then
                        _oHoliday = 0
                    Else

                        If (_FNLeaveNotPay <= 0) Then
                            If _TmpFNLapaidAmt <= 0 Then
                                _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.000"))
                            Else
                                _TotalHoliDay = _TotalHoliDay - _oHoliday
                                _oHoliday = 0
                            End If
                        Else

                            _TotalHoliDay = _TotalHoliDay - _oHoliday
                            _oHoliday = 0
                        End If

                    End If
                    _FNSlaryPerDayNormal = CDbl(Format(_FNSlaryPerDay, "0.00000"))


                    If _DTEmpWorkDay.Select("FNSalary=" & _FNSlaryPerDay & "").Length > 0 Then
                        For Each Rx As DataRow In _DTEmpWorkDay.Select("FNSalary=" & _FNSlaryPerDay & "")

                            Rx!FNDay = Val(Rx!FNDay) + _FNTimeMin
                            Rx!FNOT1 = Val(Rx!FNOT1) + _FNOT1Min
                            Rx!FNOT15 = Val(Rx!FNOT15) + _FNOT1_5Min
                            Rx!FNOT2 = Val(Rx!FNOT2) + _FNOT2Min
                            Rx!FNOT3 = Val(Rx!FNOT3) + _FNOT3Min
                            Rx!FNOT4 = Val(Rx!FNOT4) + _FNOT4Min
                            Rx!FNHoloday = Val(Rx!FNHoloday) + (_oHoliday)
                            Rx!FNLate = Val(Rx!FNLate) + _FNLateNormalCut
                            Rx!FNAbsent = Val(Rx!FNAbsent) + _FNAbsent
                            Rx!FNLateCutAmtAbsent = Val(Rx!FNLateCutAmtAbsent) + _LateCutAbsent
                            Rx!FNLeavePay = Val(Rx!FNLeavePay) + _FNLeavePay
                            Rx!FNLeaveNotPay = Val(Rx!FNLeaveNotPay) + (_FNLeaveNotPay)
                            Rx!FNBusiness = Val(Rx!FNBusiness) + FNPayLeaveBusinessBahtMin
                            Rx!FNSpecial = Val(Rx!FNSpecial) + FNPayLeaveSpecialBahtMin
                            Rx!FNParturition = Val(Rx!FNParturition) + FNParturitionLeaveMin
                            Rx!FNVacation = Val(Rx!FNVacation) + _FNLeaveVacation
                            Rx!FNShiftNo = _StateShift
                            Rx!FNSlaryOTPerMin = _FNSlaryOTPerMin
                            Rx!FNSlaryNormal = _FNSlaryPerDayNormal

                            Rx!FNLeaveAccident = Val(Rx!FNLeaveAccident) + FNPayLeaveAccidentBahtMin

                            Exit For
                        Next
                    Else
                        _DTEmpWorkDay.Rows.Add(_FNSlaryPerDay, _FNTimeMin, _FNOT1Min, _FNOT1_5Min,
                                               _FNOT2Min, _FNOT3Min, _FNOT4Min, (_oHoliday),
                                               _FNLateNormalCut, _FNAbsent, _LateCutAbsent, _FNLeavePay,
                                               _FNLeaveNotPay, FNPayLeaveBusinessBahtMin, FNPayLeaveSpecialBahtMin, FNParturitionLeaveMin, _FNLeaveVacation, _StateShift, _FNSlaryOTPerMin, _FNSlaryPerDayNormal, FNPayLeaveAccidentBahtMin)
                    End If

                    _FTSatrtCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTSatrtCalculateDate, 1))

                Loop

                _FNEmpBaht = 0
                _FNEmpBaht = 0
                _nBahtOt1 = 0
                _nBahtOt15 = 0
                _nBahtOt2 = 0
                _nBahtOt3 = 0
                _nBahtOt4 = 0
                _nBahtAbsent = 0
                _LateCutAmt = 0
                _LateCutAmtAbsent = 0
                _HBaht = 0
                _LaNotpaid = 0
                _Lapaid = 0
                FNPayLeaveBusinessBaht = 0 : FNPayLeaveSickBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0 : FNPayLeaveAccidentBaht = 0
                _FCPayVacationBaht = 0
                _FNSlaryOTPerMin = 0
                Dim _TotalxDay As Integer = 0
                For Each Rx As DataRow In _DTEmpWorkDay.Rows

                    _FNSlaryPerMin = CDbl(Format(CDbl(Rx!FNSalary) / 480, "0.00000"))
                    _FNSlaryPerDay = CDbl(Format(CDbl(Rx!FNSalary), "0.00000"))
                    _FNSlaryOTPerMin = Double.Parse("0" & Rx!FNSlaryOTPerMin)

                    _TotalxDay = 0



                    Try
                        If FNWorkDayInWeekBF > 0 Then
                            'If Val(Rx!FNDay) > ((FNWorkDayInMonth - FNWorkDayInWeekBF) * 480) Then
                            '    _FNEmpBaht = _FNEmpBaht + CDbl(Format(((FNWorkDayInMonth - FNWorkDayInWeekBF) * 480) * _FNSlaryPerMin, "0.000"))
                            'Else

                            _TotalxDay = Val(Rx!FNDay) \ 480.0
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                            ' End If
                        Else
                            _TotalxDay = Val(Rx!FNDay) \ 480.0
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                        End If
                    Catch ex As Exception
                        _TotalxDay = Val(Rx!FNDay) \ 480.0
                        _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                        _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                    End Try


                    If Double.Parse(Rx!FNShiftNo.ToString) = 1 Then
                        _Qry = " SELECT FTCfgOTCode,Isnull(FCCfgOTNightValue,0) as  FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus   "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    Else
                        _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    End If



                    _nBahtOt1 = _nBahtOt1 + CDbl(Format(Val(Rx!FNOT1) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000"))
                    _nBahtOt15 = _nBahtOt15 + CDbl(Format(Val(Rx!FNOT15) * ((_FNSlaryOTPerMin) * _RateOT15), "0.000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format(Val(Rx!FNOT2) * ((_FNSlaryOTPerMin) * _RateOT2), "0.000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format(Val(Rx!FNOT3) * ((_FNSlaryOTPerMin) * _RateOT3), "0.000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format(Val(Rx!FNOT4) * ((_FNSlaryOTPerMin) * _RateOT4), "0.000"))
                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(Val(Rx!FNAbsent) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((Val(Rx!FNLate)) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((Val(Rx!FNLateCutAmtAbsent)) * _FNSlaryPerMin, "0.000"))
                    _HBaht = _HBaht + CDbl(Format(Val(Rx!FNHoloday) * CDbl(Rx!FNSalary), "0.000"))
                    _LaNotpaid = _LaNotpaid + CDbl(Format(Val(Rx!FNLeaveNotPay) * _FNSlaryOTPerMin, "0.000"))
                    _Lapaid = _Lapaid + CDbl(Format(Val(Rx!FNLeavePay) * _SalaryPayLeaveMin, "0.000"))
                    FNPayLeaveBusinessBaht = FNPayLeaveBusinessBaht + CDbl(Format(Val(Rx!FNBusiness) * _FNSlaryPerMin, "0.000"))

                    FNPayLeaveAccidentBaht = FNPayLeaveAccidentBaht + CDbl(Format(Val(Rx!FNLeaveAccident) * _FNSlaryPerMin, "0.000"))


                    ' FNParturitionLeave = FNParturitionLeave + CDbl(Format(Val(Rx!FNParturition) * _FNSlaryPerMin, "0.000"))

                    ''Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay)


                    Dim _MoneyRetVacationPerDay = _FNSlaryPerDay


                    '  MsgBox(_MoneyRetVacationPerDay)
                    _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(Val(Rx!FNVacation) * (_MoneyRetVacationPerDay / 480), "0.000"))
                    '   MsgBox(Val(Rx!FNVacation))
                    ' MsgBox(_FCPayVacationBaht)

                    '' FNPayLeaveSpecialBaht = FNPayLeaveSpecialBaht + CDbl(Format(Val(Rx!FNSpecial) * (_MoneyRetVacationPerDay / 480), "0.000"))
                    GFNPayLeaveSpecialBahtMin = Val(Rx!FNSpecial)
                    FNVacationRetMin = Val(Rx!FNVacation)
                Next

                FNParturitionLeave = 0
                GFNParturitionLeaveMin = 0
                Dim _DeductAttandanceAmt As Double = 0
                Call CalculateParturition(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), FNParturitionLeave, GFNParturitionLeaveMin, _DeductAttandanceAmt, _WorkAge, _WorkAgeParturition, FNParturitionLeaveReCalTax)

                FNPayLeaveSickBaht = 0
                For Each Rx As DataRow In _DTEmpPayLeaveSick.Rows
                    _FNSlaryPerMin = (CDbl(CDbl(Rx!FNSalary) / 480) * CDbl(Rx!FNPayPer)) / 100.0
                    FNPayLeaveSickBaht = FNPayLeaveSickBaht + CDbl(Format(Val(Rx!FNDay) * _FNSlaryPerMin, "0.000"))
                Next

                ''_FNNetOTMealAmtUS = Format(_FNNetOTMealAmt / _FNExchangeRate, "0.000")

                If _FDDateEnd <> "" And _FDDateEnd <= _TmpFDDateEndP Then
                    'ลาออกในงวดแรก อายุงาน มากกว่า 13 วัน  จ่ายค่าเดินทาง & ค่าสุขภาพ เต็มเดือน

                    'If _WorkAge >= 1 Or _WorkingDayN > 13 Then
                    '    If Val(_PayTerm) Mod 2 = 1 Then
                    '        _FNTransportAmt = _FNTransportAmt + _FNTransportAmt
                    '        _FNHealtCareAmt = _FNHealtCareAmt + _FNHealtCareAmt
                    '    End If
                    'End If
                End If


                If _FTEmpState = "2" Or _FTEmpState = "3" Or (_FDDateEnd <= _EndDate And _FDDateEnd <> "") Then

                    FNPayLeaveBusinessBahtMin = 0 : FNPayLeaveSickBahtMin = 0 : FNPayLeaveSpecialBahtMin = 0 : FNParturitionLeaveMin = 0 : FNPayLeaveAccidentBahtMin = 0
                    GFNPayLeaveBusinessBahtMin = 0 : GFNPayLeaveSickBahtMin = 0 : GFNParturitionLeaveMin = 0 : GFNPayLeaveAccidentBahtMin = 0
                    FNPayLeaveBusinessBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0
                    'FNPayLeaveSickBaht = 0 : ไม่มี เคสคำนวณ ในกรณีลาออก ใช้จากคำนวณปกติ

                    If _dttran.Select("FTStateAccept<>'1' AND FTWeekly <>'1' ").Length > 0 Or _dttran.Rows.Count <= 0 Then
                        Return False
                    End If


                    _Gtotalleave = 0
                    _GtotalleavePay = 0
                    _GtotalleaveNotPay = 0
                    _GFNLeaveOther = 0
                    _GFNLeavePay = 0
                    _GtotalleavePayCalSso = 0
                    _LaNotpaid = 0

                    Dim _NewSlary As String = ""

                    For Each sR As DataRow In _dtLeave.Rows

                        _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                        _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                        _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                        If sR!FTStaCalSSO.ToString = "1" Then
                            _GtotalleavePayCalSso = Val(sR!FNTotalPayMinute.ToString)
                        End If

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                        Else
                            _GFNLeavePay = _GFNLeavePay + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End If

                    Next

                    _LaNotpaid = CDbl(Format(_GtotalleaveNotPay * _FNSlaryPerMin, "0.000"))

                    If _LaNotpaid > _FNSlaryPerMonth Then
                        _LaNotpaid = _FNSlaryPerMonth
                    End If

                    _WorkingDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_DateEndOfMonth))) + 1




                    If _WorkingDay > 30 Then _WorkingDay = 30

                    _WorkingDay = CDbl(Format(((_WorkingDay * 480) - (_Gtotalleave)) / 480, "0.000"))
                    _WorkingDay = _WorkingDay - (_GFNAbsent / 480)
                    If _WorkingDay < 0 Then
                        _WorkingDay = 0
                    End If

                Else
                    _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.000"))
                End If
                _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.000"))  '2018/03/02 ยกมา คำนวณคนลาออก ไม่ตรง

                '-----------calculate Other Add For KKN ------------------ 
                Dim _ChkLeave As Integer = 0
                For Each sR As DataRow In _dtLeave.Select("LFTLeaveCode='0' OR LFTLeaveCode='1' OR LFTLeaveCode='2' OR LFTLeaveCode='3' ")
                    _ChkLeave = _ChkLeave + Val(sR!FNTotalMinute.ToString)
                Next
                '_DateStartOfMonth = _StartDate  'วันแรกของเดือน
                '_DateEndOfMonth = _EndDate 'วันแของเดือน
                _FNNetAttandanceAmt = 0
                '  If (_FTEmpState = "2" Or (_FTEmpState <> "2" And _StartDate <= Left(_StartDate, 8) & "24" And _EndDate >= Left(_StartDate, 8) & "24")) And _FNAttandanceAmt > 0 Then

                Dim ChkParturitionLeaveMin As Integer = 0




                'If _WorkingDay = 0 Then
                '    _FNNetAttandanceAmt = 0
                'End If
                '-----------calculate Other Add For KKN ------------------
                _WorkingDay = _WorkingDay + _DayAdjAdd

                _GFNTimeMin = _GFNTimeMin + (_DayAdjAdd * 480)
                _FNEmpBaht = _FNEmpBaht + _WageAdjAdd
                _nBahtOt1 = CDbl(Format(_nBahtOt1, "0.000"))
                _nBahtOt15 = CDbl(Format(_nBahtOt15, "0.000"))
                _nBahtOt2 = CDbl(Format(_nBahtOt2, "0.000"))
                _nBahtOt3 = CDbl(Format(_nBahtOt3, "0.000")) + _GAmtPlus  ' ได้เงินพิเศษช่วงเทศกาลเพิ่ม
                _nBahtOt4 = CDbl(Format(_nBahtOt4, "0.000"))

                Dim _TmpPe As String = ""

                If _FTEmpState = "2" Then
                Else
                    _TmpPe = IIf(Val(_PayTerm) - 1 Mod 2 = 1, (Val(_PayTerm) - 1).ToString("00"), "")
                End If

                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน ประเภทจ่ายเป็นเดือน ของงวดก่อนหน้า ---------------------
                'If _FTStatePayHoliday <> "1" Then '--------- รายเดือนไม่ได้ค่าจ้างวันหยุด---------------
                'Else
                If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='1'  ").Length > 0 Then


                    Dim _BFSDate As String = ""
                    Dim _BFEDate As String = ""

                    _Qry = " SELECT TOP 1  FDCalDateBegin, FDCalDateEnd"
                    _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & " WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & " AND FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & " AND FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND FTPayMonth IN (   "
                    _Qry &= vbCrLf & "  Select FTPayMonth"
                    _Qry &= vbCrLf & "    FROM THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "   AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & " )  "

                    _dttemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                    For Each Row As DataRow In _dttemp.Rows
                        _BFSDate = Row!FDCalDateBegin.ToString
                        _BFEDate = Row!FDCalDateEnd.ToString
                    Next

                    If _BFSDate <> "" And _BFEDate <> "" Then

                        _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                        _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                        _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                        _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                        _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                        _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                        _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                        _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                        _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                        _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0)  + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                        _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                        _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                        _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                        _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                        _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                        _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                        _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                        _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                        _Qry &= vbCrLf & ",P.FTOverClock,P.FTWeekDay"
                        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN "
                        _Qry &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                        _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                        _Qry &= vbCrLf & " 	And T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                        _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                        _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Do While _BFSDate <= _BFEDate
                            _FTShift = ""
                            Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                            Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                            For Each R2 In _R

                                _FTShift = R2!FTShift.ToString
                                _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)

                                _InOT = R2!FTIn3.ToString
                                _OutOT = R2!FTOut3.ToString

                                _Over = R2!FTOverClock.ToString

                                If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    If _FTShift <> "" Then

                                        _SPDateType = 0

                                        _Holiday = ""

                                        _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                        _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                        _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'  AND FTStateActive='1'  "
                                        _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                        If _Holiday <> "" Then _SPDateType = 2

                                        Dim _StateLeaveOther As Boolean = False
                                        Dim _StateLeavacation As Boolean = False


                                        Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                        Dim _SumLeave As Integer = 0

                                        For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                            _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                            If Val(sR!LeaveType) = 1 Then
                                                _StateLeavacation = True
                                            Else
                                                _StateLeaveOther = True
                                            End If

                                            If Val(sR!LeaveType) = 2 Then
                                                _StateFTStaMaternityleaveNotpay = True
                                            End If

                                        Next

                                        For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='1' ")
                                            Dim _StatePass As Boolean = True

                                            If _OutOT <> "" Then
                                                Beep()
                                            End If

                                            If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                            If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                            If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                            If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                            If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                            If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                            If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                            End If

                                            If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                            If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                            If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                If _STime.Length = _ETime.Length Then
                                                    If IsDate(_STime) And IsDate(_ETime) Then
                                                        If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If
                                                Else
                                                    _StatePass = False
                                                End If

                                            End If

                                            If _StatePass Then
                                                _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                                    _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                                Else
                                                    For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                        xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                    Next
                                                End If

                                            End If
                                        Next
                                    End If
                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                                End If
                            Next

                            _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                        Loop
                    End If
                End If
                ' End If
                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------



                '-------------------------------------------------------------------------------------------
                If _FTEmpState = "0" And Val(_PayTerm) Mod 2 = 0 Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1'  and FTFinCode<>'056' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                            Else
                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next

                ElseIf _FDDateEnd <> "" And _FDDateEnd < _EndDate Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0' and FTFinCode='013' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay)
                                Next

                            End If
                        End If
                    Next
                ElseIf _FDDateEnd = "" Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0' and FTFinCode='013' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Double.Parse(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Double.Parse(R2!FCFinAmt.ToString))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Double.Parse(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next
                End If

                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0'  and FTFinCode <> '013' and FTFinCode <> '057' ")
                    Dim _StatePass As Boolean = True

                    If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                    If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                    If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                    If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                    If _StatePass Then

                        _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                        If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                        If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                        If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                            _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                        Else

                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                            Next

                        End If
                    End If
                Next

                Dim _TotalFuel As Double = 0 ''100000

                Dim _worktime_before As Integer = 0


                If _FTEmpState = "0" And Val(_PayTerm) Mod 2 = 0 Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType='2' AND FTFinType='1' AND FTPayType='1'  and FTFinCode='056' ")
                        _TotalFuel = Val(R2!FCFinAmt)
                    Next


                    _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalWKN_Real_Min,0)) AS FNTotalWKN_Real_Min "



                    _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                    _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                    _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                    _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                    _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                    _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                    _Qry &= vbCrLf & "  Select FNMonth"
                    _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & "  )  "

                    _worktime_before = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, 0)

                    _TotalFuel = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation + _worktime_before) / 480) * (_TotalFuel / 26)
                    _FCAdd = _FCAdd + _TotalFuel


                End If



                ''20221004 get responsed header line

                'If _FNIncentiveAmt = 0 Then



                Dim inc As Integer = 0

                _Qry = "   SELECT COUnT(FNHSysEmpID) as n  "
                _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeHeader   AS M WITH(NOLOCK)"
                _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & "  AND M.FNHSysCmpID =  " & Val(HI.ST.SysInfo.CmpID)
                _Qry &= vbCrLf & "  AND   M.FTDateTrans BETWEEN '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' AND '" & (_EndDate) & "'"

                inc = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, 0))

                Dim DataIncentiveHeader As DataTable

                Dim _Emp_IncenAmt As Double = 0
                Dim _Emp_BonusAmt As Double = 0

                If inc > 0 Then
                    _Qry = "Exec [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.SP_CALCULATE_INCENTIVE_HEADER " & Val(_EmpCode) & "," & Val(HI.ST.SysInfo.CmpID) & ",'" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' , '" & (_EndDate) & "'"
                    DataIncentiveHeader = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


                    Dim _BFSDate As String = HI.UL.ULDate.ConvertEnDB(_StartDate)
                    Dim _BFEDate As String = HI.UL.ULDate.ConvertEnDB(_EndDate)

                    If DataIncentiveHeader.Rows.Count > 0 Then



                        If _BFSDate <> "" And _BFEDate <> "" Then

                            _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                            _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                            _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                            _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0)  + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                            _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                            _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                            _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                            _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                            _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                            _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                            _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                            _Qry &= vbCrLf & ",P.FTOverClock"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN "
                            _Qry &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                            _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                            _Qry &= vbCrLf & " 	And T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                            _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                            Do While _BFSDate <= _BFEDate
                                _FTShift = ""
                                Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                                Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                For Each R2 In _R
                                    _FNTimeMin = 0
                                    _FNOT1Min = 0
                                    _FNTimeMin = IIf(Val(R2!FNTimeMinOrg.ToString) < 0, 0, Val(R2!FNTimeMinOrg.ToString))
                                    _FNOT1Min = Val(R2!FNOT1Min.ToString)

                                    For Each RFin As DataRow In DataIncentiveHeader.Select("ftcalDate='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")

                                        _Emp_IncenAmt = _Emp_IncenAmt + Val(RFin!Emp_IncenAmt_perMin) * (_FNTimeMin + _FNOT1Min)
                                        _Emp_BonusAmt = _Emp_BonusAmt + Val(RFin!Emp_BonusAmt_perMin) * (_FNTimeMin + _FNOT1Min)

                                    Next
                                Next
                                _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                            Loop


                        End If

                    End If

                End If

                _FNIncentiveAmt = _Emp_IncenAmt + _FNIncentiveAmt
                _BonusAmt = _Emp_BonusAmt + _BonusAmt

                'End If




                Dim _TotalMoneyMeal As Double = 0
                _ShiftValue = 0
                ''เงินอุดหนุนค่าอาหาร
                ''For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='053'")


                _TotalMoneyMeal = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _FNMoneyMeal
                _FCAdd = _FCAdd + _TotalMoneyMeal
                '_FTAddCalculateTax = _FTAddCalculateTax + _TotalMoneyMeal
                '_FTAddCalculateSocial = _FTAddCalculateSocial + _TotalMoneyMeal
                ''  _AmtAddCalOT = _AmtAddCalOT + _ShiftValue

                ''_DtFin.Rows.Add("053", Val(_TotalMoneyMeal))

                ''Next

                ''เงินอายุงาน
                '_FTAddCalculateTax = _FTAddCalculateTax + _FNWorkAgeSalary
                '_FTAddCalculateSocial = _FTAddCalculateSocial + _FNWorkAgeSalary
                ''_FCAdd = _FCAdd + _FNWorkAgeSalary
                ''_DtFin.Rows.Add("054", Val(_FNWorkAgeSalary))


                ''เงินเบี้ยขยัน
                Dim _FNDeligent_La_rate As Double = 0

                _Qry = "SELECT TOP 1 FTCfgData FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.TSESystemConfig WHERE FTCfgName='CfgDeligent_La_rate'"
                _FNDeligent_La_rate = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_SECURITY, "0"))

                Dim _TotalDeligent_La As Double = 0
                '''If _FNDeligent_La_rate > 0 Then
                '''    _TotalDeligent_La = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * (_FCSalary * _FNDeligent_La_rate)
                '''    _FCAdd = _FCAdd + _TotalDeligent_La
                '''End If

                If _FNDeligent_La_rate > 0 Then
                    _TotalDeligent_La = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * (8000)
                    _FCAdd = _FCAdd + _TotalDeligent_La
                End If

                '_FTAddCalculateTax = _FTAddCalculateTax + _TotalDeligent_La
                '_FTAddCalculateSocial = _FTAddCalculateSocial + _TotalDeligent_La

                ''_DtFin.Rows.Add("059", Val(_TotalDeligent_La))


                ''เงินทักษะ
                Dim _TotalMoneySkill As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='043'")
                    _TotalMoneySkill = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySkill = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySkill
                _FCAdd = _FCAdd + _TotalMoneySkill


                ''เงินทักษะเย็บ
                Dim _TotalMoneySkill_Sew As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='057'")
                    _TotalMoneySkill_Sew = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySkill_Sew = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySkill_Sew
                _FCAdd = _FCAdd + _TotalMoneySkill_Sew





                ''16.	ค่าจูงใจตำแหน่ง : เงินหัวหน้าทีมแผนกเย็บ(กัปตัน)   
                Dim _TotalMoneyHeaderCapton As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='061'")
                    _TotalMoneyHeaderCapton = Val(RFin!FCFinAmt)
                Next
                _TotalMoneyHeaderCapton = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneyHeaderCapton
                _FCAdd = _FCAdd + _TotalMoneyHeaderCapton

                ''17.	เงินค่าจูงใจ กลุ่มพนักงานสนับสนุนแผนกเย็บ  
                Dim _TotalMoneySupport_Sew As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='062'")
                    _TotalMoneySupport_Sew = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySupport_Sew = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySupport_Sew
                _FCAdd = _FCAdd + _TotalMoneySupport_Sew


                ''18.	ค่าจูงใจตำแหน่ง : เงินพนักงานช่างซ่อมจักร 
                Dim _TotalMoneySeviceMachine As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='063'")
                    _TotalMoneySeviceMachine = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySeviceMachine = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySeviceMachine
                _FCAdd = _FCAdd + _TotalMoneySeviceMachine

                ''20.	ค่าจูงใจตำแหน่ง : เงินพนักงาน QA 
                Dim _TotalMoneySkill_QA As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='064'")
                    _TotalMoneySkill_QA = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySkill_QA = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySkill_QA
                _FCAdd = _FCAdd + _TotalMoneySkill_QA




                For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTFinType='2'")

                    _FCDeduct = _FCDeduct + Val(R2!FCFinAmt.ToString)


                Next
                '---------รายได้รายหัก อื่นๆ-------------------------

                '------------------- สิ้นสุดการคำนวณรายวัน
                _FTWorkmenAmtBefore = 0
                _FTTotalCalWorkmenBefore = 0

                '_Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FCSocial"
                '_Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocial,0)) AS FCSocialAmt"
                '_Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                '_Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                '_Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                '_Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                '_Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                '_Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                '_Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                '_Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                '_Qry &= vbCrLf & "  Select FNMonth"
                '_Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                '_Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                '_Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                '_Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                '_Qry &= vbCrLf & "  )  "

                'Dim _DtSso As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                'If _DtSso.Rows.Count > 0 Then
                '    _SocialBefore = Val(_DtSso.Rows(0)!FCSocial.ToString)
                '    _SocialBeforeAmt = Val(_DtSso.Rows(0)!FCSocialAmt.ToString)
                'End If

                If _FTEmpState = "2" Or _FTEmpState = "3" Then


                    '_FNEmpBaht = CDbl(Format((_FCSalary), "0.000"))
                    'If _FTEmpState = "3" Then
                    '    _FNEmpBaht = CDbl(Format((_FCSalary) / 2, "0.000"))

                    'End If


                    If FTStaDeductAbsent = 0 Then
                        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent) '+ _nBahtAbsent
                    Else
                        _nBahtAbsent = 0
                        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent)
                    End If


                    If _FNEmpBaht < 0 Then _FNEmpBaht = 0



                End If

                _TotalCalTax = 0 : _TaxAmt = 0

                FNUnionAmt = 0
                'FNUnionRate = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNUnionAmt,0) AS FNUnionAmt  FROM   " & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & ".dbo.THRMCfgWelfareKM with(nolock) Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")
                'If FNUnionRate > 0 Then

                '    Dim _StatePass As Boolean = True

                '    If _FDDateEnd <> "" And _EndDate < _FDDateEnd Then
                '        _StatePass = False
                '    End If
                '    If Not (FNStateUnionMember = "1") Then _StatePass = False

                '    'If _WorkAge <= 0 Then
                '    '    _StatePass = False
                '    'Else
                '    '    If FDStartDateUnion < _StartDate Then

                '    '    End If
                '    'End If

                '    If Not (Val(_PayTerm) Mod 2 = 0) Then
                '        _StatePass = False
                '    End If

                '    If _StatePass Then
                '        ''  _FCDeduct = _FCDeduct + FNUnionRate
                '        FNUnionAmt = FNUnionRate
                '    End If

                'End If

                '_TotalCalSso = Double.Parse(Format(_FNEmpBaht + _HBaht + _FTOtherAddCalculateSocial + _FTAddCalculateSocial + _GtotalleavePayCalSsoAmt, "0.00"))
                '_TotalCalSso = _TotalCalSso + Double.Parse(Format(_FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS, "0.00"))


                '  _FTAddCalculateTax = _FTAddCalculateTax + _ShiftAmt + _ShiftOTAmt
                _FCAdd = _FCAdd + _ShiftAmt + _ShiftOTAmt

                'If _FTEmpState = "2" Or _FTEmpState = "3" Then


                '    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                '    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000"))

                'Else
                '    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                '    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000"))



                'End If

                If _FTEmpState = "2" Or _FTEmpState = "3" Then


                    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveAccidentBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveAccidentBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000"))

                Else
                    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveAccidentBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveAccidentBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000"))



                End If

                '-----------------หักเงินเข้า กองทุนสำรองเลี้ยงชีพ-------------------------------
                If _ContributedFundBeginPay Then
                    Dim _EMpWorkAge As Integer = Val(R!FNEmpWorkAge.ToString)

                    For Each sR As DataRow In _THRMContributedFund.Select(" FNAgeBegin <= " & _EMpWorkAge & " AND FNAgeEnd >=" & _EMpWorkAge & " ")

                        FTTotalCalContributedAmt = _TotalCalSso

                        FTContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNEmpAmtPer.ToString)) / 100.0), "0"))
                        FTCmpContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNCmpAmtPer.ToString)) / 100.0), "0"))

                        Exit For

                    Next

                End If
                '-----------------หักเงินเข้า กองทุนสำรองเลี้ยงชีพ----------------------------
                '-----------------หักเงินเข้า กองทุนทดแทน---------------------------------
                FTTotalCalWorkmen = _TotalCalSso

                If _FTMaxCalWorkmen > 0 Then

                    _SocialPayMax = CDbl(Format(((_FTMaxCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))

                    If (_TotalCalSso + _FTTotalCalWorkmenBefore) > _FTMaxCalWorkmen Then
                        FTTotalCalWorkmen = _FTMaxCalWorkmen
                    ElseIf FTTotalCalWorkmen > 0 Then
                        FTTotalCalWorkmen = FTTotalCalWorkmen
                    Else
                        FTTotalCalWorkmen = 0
                    End If

                    If _FTTotalCalWorkmenBefore > 0 Then
                        FTWorkmenAmt = CDbl(Format((((_CalSo + _FTTotalCalWorkmenBefore) * _FTMaxWorkmenRate) / 100.0), "0"))
                        FTWorkmenAmt = FTWorkmenAmt - _FTWorkmenAmtBefore
                    Else
                        FTWorkmenAmt = CDbl(Format(((FTTotalCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))
                    End If
                End If

                '-----------------หักเงินเข้า กองทุนทดแทน-------------------------------



                _FNEmpDiligent = 0
                _FTStateInDustin = ""
                _FNDeligentPeriod = 0

                If _CalIns <> "" Then
                    Dim _StateCalIns As Boolean = False
                    '_Qry = "SELECT TOP 1 FNPayDeligent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMDiligentConfigHD WHERE FTDeligentCode='" & HI.UL.ULF.rpQuoted(_CalIns) & "' "
                    'If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") = "1" Then
                    '    If Val(_PayTerm) Mod 2 = 1 Then

                    '        _FTSatrtCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                    '        _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1), -1)) 'วันแของเดือน
                    '        _StateCalIns = True
                    '    End If
                    'Else

                    '    _StateCalIns = True
                    'End If

                    'If _StateCalIns Then
                    '    _Qry = " SELECT   ISNULL(PayIndus,0) As PayIndus , ISNULL(StateIndus,'') AS StateIndus,ISnuLL(FNDeligentPeriod,0) AS FNDeligentPeriod"
                    '    _Qry &= vbCrLf & "	FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.FN_CALCULATE_INDUST(" & Val(_EmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDateIns) & "','" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDateIns) & "','" & HI.UL.ULF.rpQuoted(_CalIns) & "')"

                    '    Dim _DtIns As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    '    If _DtIns.Rows.Count > 0 Then
                    '        _FNEmpDiligent = Val(_DtIns.Rows(0)!PayIndus.ToString)
                    '        _FTStateInDustin = _DtIns.Rows(0)!StateIndus.ToString
                    '        _FNDeligentPeriod = Val(_DtIns.Rows(0)!FNDeligentPeriod.ToString)
                    '    End If

                    'End If
                End If



                Dim _tmpTotalincome As Double = 0
                Dim _DiffTotalincome As Double = 0
                Dim _tmpTotalNetPay As Double = 0
                Dim _DiffTotalNetPay As Double = 0
                Dim _FNServicefee, _FNFinTransFee As Double

                Dim _tmpTotalincome_for_tax As Double = 0

                _tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveAccidentBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct), "0.000"))

                ''With out sick leave
                _tmpTotalincome_for_tax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveAccidentBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct), "0.000"))


                _tmpTotalNetPay = (_tmpTotalincome - (FTContributedAmt))

                _TotalCalSso = CDbl(Format(_tmpTotalincome, "0"))



                _Net = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveAccidentBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct), "0.00"))
                _FCBaht = _FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4



                '--------- คิดประกันสังคม-----------
                _SocialPayMax = HCfg.HMaxSocialBaht
                _CalSo = 0
                _FCSocial = 0
                _FCSocialCmp = 0
                _TotalCalSso = (_TotalCalSso)
                _FNSocialBase = 0

                Dim _FCTotalRecalTaxBefore As Double = 0
                Dim _FCTaxAmtBefore As Double = 0
                Dim _TotalCalTaxAll As Double = 0

                Dim _FCOt1_Baht_Amt As Double = 0
                Dim _FCOt15_Baht_Amt As Double = 0
                Dim _FCOt2_Baht_Amt As Double = 0
                Dim _FCOt3_Baht_Amt As Double = 0
                Dim _FCOt4_Baht_Amt As Double = 0

                Dim _FNTotalIncome_before As Double = 0

                Dim _SocialBeforeAmtCmp As Double = 0

                Dim _FNSickLeaveBaht_before As Double = 0

                Dim _FNFinNotCalTax As Double = 0


                _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FCSocial "

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTotalIncome,0)) AS FNTotalIncome "

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocial,0)) AS FCSocialAmt "
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocialCmp,0)) AS FCSocialAmtCmp "

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTotalRecalTax,0)) AS FCTotalRecalTax "
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTax,0)) AS FCTaxAmt "


                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt1_Baht,0)) AS FCOt1_Baht "
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt15_Baht,0)) AS FCOt15_Baht "
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt2_Baht,0)) AS FCOt2_Baht "
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt3_Baht,0)) AS FCOt3_Baht "
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt4_Baht,0)) AS FCOt4_Baht "

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSickLeaveBaht,0)) AS FNSickLeaveBaht"


                _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "AND ISNULL(P.FNTotalIncome,0) > 0 "
                _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"

                _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                _Qry &= vbCrLf & "  Select FNMonth"
                _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                _Qry &= vbCrLf & "  )  "



                Dim _DtSso As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                If _DtSso.Rows.Count > 0 Then
                    _SocialBefore = Val(_DtSso.Rows(0)!FCSocial.ToString)
                    _SocialBeforeAmt = Val(_DtSso.Rows(0)!FCSocialAmt.ToString)
                    _SocialBeforeAmtCmp = Val(_DtSso.Rows(0)!FCSocialAmtCmp.ToString)

                    _FNTotalIncome_before = Val(_DtSso.Rows(0)!FNTotalIncome.ToString)

                    _FCTotalRecalTaxBefore = Val(_DtSso.Rows(0)!FCTotalRecalTax.ToString)
                    _FCTaxAmtBefore = Val(_DtSso.Rows(0)!FCTaxAmt.ToString)

                    _FNSickLeaveBaht_before = Val(_DtSso.Rows(0)!FNSickLeaveBaht.ToString)


                    _FCOt1_Baht_Amt = Val(_DtSso.Rows(0)!FCOt1_Baht.ToString)
                    _FCOt15_Baht_Amt = Val(_DtSso.Rows(0)!FCOt15_Baht.ToString)
                    _FCOt2_Baht_Amt = Val(_DtSso.Rows(0)!FCOt2_Baht.ToString)
                    _FCOt3_Baht_Amt = Val(_DtSso.Rows(0)!FCOt3_Baht.ToString)
                    _FCOt4_Baht_Amt = Val(_DtSso.Rows(0)!FCOt4_Baht.ToString)

                End If



                If _FTCalSocialSta <> "1" Then ' 1 ไม่่คิดประกันสังคม

                    If (_TotalCalSso + _SocialBefore) >= _SocialMaxIncome Then
                        _CalSo = _SocialMaxIncome
                    ElseIf (_TotalCalSso + _SocialBefore) < _SocialMaxIncome And (_TotalCalSso + _SocialBefore) >= _SocialMinIncome Then
                        _CalSo = (_TotalCalSso + _SocialBefore)
                    ElseIf _TotalCalSso > 0 Then
                        _CalSo = _SocialMinIncome
                    Else
                        _CalSo = 0
                    End If

                    If _SocialBefore > 0 Then
                        _FCSocial = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRate) / 100.0), "0.00")), "0"))
                        _FCSocial = IIf(_SocialBeforeAmt > _FCSocial, 0, _FCSocial - _SocialBeforeAmt)

                        _FCSocialCmp = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRateCmp) / 100.0), "0.00")), "0"))
                        _FCSocialCmp = IIf(_SocialBeforeAmt > _FCSocialCmp, 0, _FCSocialCmp - _SocialBeforeAmtCmp)

                    Else
                        _FCSocial = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRate) / 100.0), "0.00")), "0"))
                        _FCSocialCmp = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRateCmp) / 100.0), "0.00")), "0"))
                    End If

                Else
                    _TotalCalSso = 0
                End If


                _Qry = " SELECT SUM(P.FCTotalFinAmt) as FCTotalFinAmt   "
                _Qry &= vbCrLf & "FROM THRTPayRollFin P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"


                _Qry &= vbCrLf & " AND P.FTFinCode in (SELECT  FTFinCode FROM [dbo].[THRMFinanceSet] WHERE   FTStaActive = 1 and FTStaTax=0 and FNHSysCmpId = " & Val(HI.ST.SysInfo.CmpID) & ")"

                _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"

                _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                _Qry &= vbCrLf & "  Select FNMonth"
                _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                _Qry &= vbCrLf & "  )  "


                _FNFinNotCalTax = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, 0)



                'MsgBox("_TotalCalTax" & _TotalCalTax.ToString())
                'MsgBox("_tmpTotalincome_for_tax" & _tmpTotalincome_for_tax.ToString())
                'MsgBox("_FCSocial" & _FCSocial.ToString())

                '' edit 20230610  best   _tmpTotalincome_for_tax    with out sick leave 
                _TotalCalTax = Format((_tmpTotalincome_for_tax - (_FCSocial)), "0")
                'MsgBox("zz_tmpTotalincome_for_tax" & _tmpTotalincome_for_tax.ToString())

                'MsgBox("_FNTotalIncome_before" & _FNTotalIncome_before.ToString())
                'MsgBox("_FCSocial" & _FCSocial.ToString())
                'MsgBox("_SocialBeforeAmt" & _SocialBeforeAmt.ToString())
                'MsgBox("_FNSickLeaveBaht_before" & _FNSickLeaveBaht_before.ToString())


                Dim _TotalCalTax_Sum As Double

                '' _TotalCalTax_Sum = Format(((_tmpTotalincome_for_tax + _FNTotalIncome_before) - (_FCSocial + _SocialBeforeAmt + _FNSickLeaveBaht_before)), "0")
                _TotalCalTax_Sum = Format(((_tmpTotalincome_for_tax + _FNTotalIncome_before) - (_FCSocial + _SocialBeforeAmt + _FNFinNotCalTax)), "0")

                'MsgBox("_TotalCalTax_Sum" & _TotalCalTax_Sum.ToString())

                If _FTCalTaxSta <> "1" Then

                    'With _EmpDisTax
                    '    .FTSosial = _FCAccumulateSocial + _FCSocial + (_FCSocial * (_TotalInstalment - _Instalment))

                    '    If .FTSosial > (((_SocialMaxIncome * _SocialRate) / 100.0) * 12) Then
                    '        .FTSosial = CDbl(Format((((_SocialMaxIncome * _SocialRate) / 100.0) * 12), "0.00"))
                    '    End If

                    '    .BaseSlary = (_TotalCalTax * (_TotalInstalment - _Instalment)) + _TotalCalTax
                    '    .OtherSlary = _FTOtherAddCalculateTax + _FTAddCalculateTax + _FNEmpDiligent + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                    '    .Cfg_ContributedDeducToTheFund = .Cfg_ContributedDeducToTheFund + FTContributedAmt + (FTContributedAmt * (_TotalInstalment - _Instalment))

                    'End With

                    '_TotalCalTax = _TotalCalTax + _EmpDisTax.OtherSlary
                    Dim _TaxOther As Double = _EmpDisTax.OtherSlary
                    Dim _TaxOtherAmt As Double = 0
                    Dim _Total As Double = 0

                    ''GETnRecalDiscTax(_EmpDisTax, _EmpTaxYear)

                    ''สิ้นเดือน
                    If Val(_PayTerm) Mod 2 = 0 Then


                        If (_TotalCalTax_Sum > 2000000) Then
                            _Total = _TotalCalTax_Sum   ''เงินรวมทั้งเดือน หักประกันสังคมแล้ว
                            'MsgBox("1_Total" & _Total.ToString())

                            _Total = Math.Round(Val(_Total), 0)
                            _TotalCalTax = _TotalCalTax_Sum - _FCTotalRecalTaxBefore



                            'MsgBox("_TotalCalTax" & _TotalCalTax.ToString())
                        Else

                            ''ของทั้งเดือน สำหรับคิด  tax
                            _Total = _TotalCalTax_Sum - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCOt1_Baht_Amt + _FCOt15_Baht_Amt + _FCOt2_Baht_Amt + _FCOt3_Baht_Amt + _FCOt4_Baht_Amt)
                            ''    MsgBox("2_Total" & _Total.ToString())



                            ''ของ เฉพราะ งวด 2
                            ''_TotalCalTax = _TotalCalTax - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4)

                            _Total = Math.Round(Val(_Total), 0)
                            _TotalCalTax = _Total - _FCTotalRecalTaxBefore
                            ''    MsgBox("2_TotalCalTax" & _TotalCalTax.ToString())
                        End If

                    Else
                        If (_TotalCalTax_Sum > 2000000) Then
                            _Total = _TotalCalTax

                            _Total = Math.Round(Val(_Total), 0)
                        Else

                            _Total = _TotalCalTax - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4)
                            _Total = Math.Round(Val(_Total), 0)

                            _TotalCalTax = _TotalCalTax - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4)

                        End If
                    End If


                    '_EmpTaxYear.FTSocial = _EmpDisTax.FTSosial

                    '_EmpTaxYear.FTTotalCalTax = _Total

                    'MsgBox("_Total" & _Total.ToString())

                    'MsgBox("Best" & (_Total - _FCTotalRecalTaxBefore).ToString)
                    Dim _TotalTax As Double = GETnTax(_Total, _TaxOther, _TaxOtherAmt)

                    _EmpTaxYear.FTTotalTax = (_TotalTax + _TaxOtherAmt) 'ภาษีที่ต้องจ่าย

                    'MsgBox("_FCTaxAmtBefore" & _FCTaxAmtBefore.ToString())

                    _TotalTax = CDbl(Format(_TotalTax - _FCTaxAmtBefore, "0"))

                    'MsgBox("_TotalTax" & _TotalTax.ToString())

                    If _TotalTax > 0 Then
                        _TaxAmt = CDbl(Format((_TotalTax), "0.00"))

                        'MsgBox("_TaxAmt" & _TaxAmt.ToString())
                        'MsgBox("_TaxOtherAmt" & _TaxOtherAmt.ToString())

                        _TaxAmt = _TaxAmt + _TaxOtherAmt

                    Else
                        _TaxAmt = 0
                    End If

                    _EmpTaxYear.FTTotalTaxPay = _FCAccumulateTax + _TaxAmt

                Else

                    _TotalCalTax = 0
                    _TaxAmt = 0

                End If




                _FNNetpay = Format((_tmpTotalincome - (_FCSocial + FTContributedAmt + _TaxAmt + 0)), "0.00")
                _FNNetpayOrg = _FNNetpay

                '_DiffTotalincome = _Net - _tmpTotalincome
                '_DiffTotalNetPay = _FNNetpay - _tmpTotalNetPay

                If _tmpTotalincome <= 0 Then
                    _FNServicefee = 0
                    _FNFinTransFee = 0
                    _tmpTotalincome = 0
                    _tmpTotalNetPay = 0
                    _Net = 0
                    _FCBaht = 0
                    _FNNetpay = 0
                    _FNNetpayOrg = 0
                    _DiffTotalincome = 0
                    _DiffTotalNetPay = 0
                End If

                _FNNetpay = CDbl(Format((_FNNetpay), "0"))


                If _FNNetpay > 0 Then



                    Dim a As Integer = 0

                    a = _FNNetpay.ToString.Length

                    Dim amt1 As Integer = 0
                    Dim amt2 As Integer = 0
                    Dim amtAdd As Integer = 0
                    If a > 3 Then

                        amt2 = Right(_FNNetpay, 3)

                        If (amt2 > 500) Then

                            amtAdd = 1000
                        Else
                            amtAdd = 500
                        End If

                        _FNNetpay = (_FNNetpay + amtAdd) - amt2
                    Else
                        amt2 = _FNNetpay

                        If (amt2 > 500) Then

                            amtAdd = 1000
                        Else
                            amtAdd = 500
                        End If

                        _FNNetpay = amtAdd

                    End If
                End If


                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll (FTInsUser, FTInsDate, FTInsTime,"
                _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,FTEmpIdNo1,FTSocialNo,"
                _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
                _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId,  FNHSysPayRollPayId"
                _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
                _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
                _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
                _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
                _Qry &= vbCrLf & ",FNTotalWKNMin,  FNOt1Min, FNOt15Min, FNOt2Min"
                _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
                _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
                _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
                _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
                _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
                _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
                _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
                _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
                _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
                _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
                _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
                _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
                _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
                _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin, FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
                _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate , FNServicefee ,FNFinTransFee,FNSocialInsuranceEmployee , FNSocialInsuranceEmployer, FNUnionInsuranceEmployee , FNTotalWKN_Real_Min , FNSocialRateEmp,FNSocialRateCmp, FNSocialCmp )"
                _Qry &= vbCrLf & " 	SELECT '" & HI.UL.ULF.rpQuoted(_User) & "',CONVERT(varchar(10),GetDate(),111),CONVERT(varchar(8),GetDate(),114)"
                _Qry &= vbCrLf & " 	,'" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ""
                _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo1) & "','" & HI.UL.ULF.rpQuoted(_FTSocialNo) & "','" & _EmpType & "','" & HI.UL.ULDate.ConvertEnDB(_PayDate) & "'"
                _Qry &= vbCrLf & " 	," & Val(_FTDeptCode) & ""
                _Qry &= vbCrLf & " 	," & Val(_FTDivCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTSectCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTUnitCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPos) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPaymentCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBankCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBranchCode) & " "
                _Qry &= vbCrLf & " 	,N'" & HI.UL.ULF.rpQuoted(_FTAccNo) & "'," & _TotalHoliDay & ""
                _Qry &= vbCrLf & " 	," & _FCSalary & ""
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNTimeMin & " / 60) + Convert(numeric(18,2),(( " & _GFNTimeMin & " %60) /100.00)) "
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1_5Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1_5Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT2Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT2Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2)," & _GFNOT3Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT3Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GFNOT4Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT4Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleavePay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleavePay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleaveNotPay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleaveNotPay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _Gtotalleave & " / 60) + Convert(numeric(18,2),(( " & _Gtotalleave & " %60) /100.00))"
                _Qry &= vbCrLf & " 	, " & _GFNTimeMin
                _Qry &= vbCrLf & " 	, " & _GFNOT1Min
                _Qry &= vbCrLf & " 	, " & _GFNOT1_5Min
                _Qry &= vbCrLf & ", " & _GFNOT2Min
                _Qry &= vbCrLf & "," & _GFNOT3Min
                _Qry &= vbCrLf & ",  " & _GFNOT4Min
                _Qry &= vbCrLf & ",  " & _GFNLateNormalMin
                _Qry &= vbCrLf & ",  " & _GFNLateNormalCut
                _Qry &= vbCrLf & ",  " & _GFNCutAbsent
                _Qry &= vbCrLf & ",  " & _GFNAbsent & "," & (_GFNTimeMin + _GFNOT1Min + _GFNOT1_5Min + _GFNOT2Min + _GFNOT3Min + _GFNOT4Min)
                _Qry &= vbCrLf & ",  " & _GtotalleavePay
                _Qry &= vbCrLf & ", " & _GtotalleaveNotPay
                _Qry &= vbCrLf & ", " & _Gtotalleave
                _Qry &= vbCrLf & ", " & _FNEmpBaht & " "
                _Qry &= vbCrLf & ", " & _nBahtOt1 & " "
                _Qry &= vbCrLf & "," & _nBahtOt15 & " "
                _Qry &= vbCrLf & "," & _nBahtOt2 & " "
                _Qry &= vbCrLf & "," & _nBahtOt3 & " "
                _Qry &= vbCrLf & "," & _nBahtOt4 & " "
                _Qry &= vbCrLf & "," & (_FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FNIncentiveAmt + _BonusAmt) & " "
                _Qry &= vbCrLf & "," & _FNEmpDiligent & " "
                _Qry &= vbCrLf & "," & _FCPayVacationBaht & " "
                _Qry &= vbCrLf & "," & _Lapaid & " "
                _Qry &= vbCrLf & "," & _LateCutAmt & " "
                _Qry &= vbCrLf & "," & _LateCutAmtAbsent & " "
                _Qry &= vbCrLf & "," & _nBahtAbsent & " "
                _Qry &= vbCrLf & "," & _TotalCalSso & " "  '1252332.349
                _Qry &= vbCrLf & "," & _TotalCalTax & " "
                _Qry &= vbCrLf & "," & _FCAdd & " "
                _Qry &= vbCrLf & "," & _FCOtherAdd & " "
                _Qry &= vbCrLf & "," & _FCDeduct & " "
                _Qry &= vbCrLf & "," & _FCOtherDeduct & " "
                _Qry &= vbCrLf & "," & _tmpTotalincome & " "
                _Qry &= vbCrLf & "," & _FCSocial & " "
                _Qry &= vbCrLf & "," & _TaxAmt & " "
                _Qry &= vbCrLf & "," & _HBaht & " "
                _Qry &= vbCrLf & "," & (_FNNetpay) & ""
                _Qry &= vbCrLf & "," & (_Net + _FCAccumulateIncome) & ""
                _Qry &= vbCrLf & "," & (_FCSocial + _FCAccumulateSocial) & ""
                _Qry &= vbCrLf & "," & (_TaxAmt + _FCAccumulateTax) & ""
                _Qry &= vbCrLf & ",'" & _FTStateInDustin & "' "
                _Qry &= vbCrLf & "," & (FTTotalCalContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTCmpContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTTotalCalWorkmen) & ""
                _Qry &= vbCrLf & "," & (FTWorkmenAmt) & ""
                _Qry &= vbCrLf & "," & _AmtRetire & ""
                _Qry &= vbCrLf & "," & _GtotalleavePayCalSsoAmt & ""
                _Qry &= vbCrLf & "," & _WorkingDay & " "
                _Qry &= vbCrLf & "," & _WageAdjAdd & ""
                _Qry &= vbCrLf & "," & _FNIncentiveAmt & ""
                _Qry &= vbCrLf & "," & _FNNetpayOrg & ""
                _Qry &= vbCrLf & "," & _FNNetAttandanceAmt & ""
                _Qry &= vbCrLf & "," & _FNHealtCareAmt & ""
                _Qry &= vbCrLf & "," & _FNTransportAmt & ""
                _Qry &= vbCrLf & "," & _FNNetChildCareAmt & ""
                _Qry &= vbCrLf & "," & _FNNetOTMealAmt & ""
                _Qry &= vbCrLf & "," & _FNSocialBase & ""
                _Qry &= vbCrLf & "," & _FNWorkAgeSalary & ""
                _Qry &= vbCrLf & "," & _FNNetOTMealAmtUS & ""
                _Qry &= vbCrLf & "," & _FNExchangeRate & ""
                _Qry &= vbCrLf & "," & FNPayLeaveSickBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveSickBahtMin & ""
                _Qry &= vbCrLf & "," & FNPayLeaveBusinessBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveBusinessBahtMin & ""
                _Qry &= vbCrLf & "," & FNPayLeaveSpecialBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveSpecialBahtMin & ""
                _Qry &= vbCrLf & "," & FNParturitionLeave & ""
                _Qry &= vbCrLf & "," & GFNParturitionLeaveMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetAmt & ""
                _Qry &= vbCrLf & "," & _FNExchangeRateTHB & ""
                _Qry &= vbCrLf & "," & FNWorkDayInWeek & ""
                _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(_FTCalSocialSta) & "'"
                _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(_FTCalTaxSta) & "'"
                _Qry &= vbCrLf & "," & _DiffTotalincome & ""
                _Qry &= vbCrLf & "," & _DiffTotalNetPay & ""
                _Qry &= vbCrLf & "," & SocialExchangeRate & ""
                _Qry &= vbCrLf & "," & TaxExchangeRate & ""
                _Qry &= vbCrLf & "," & _FNServicefee
                _Qry &= vbCrLf & "," & _FNFinTransFee
                _Qry &= vbCrLf & "," & FNSocialInsuranceEmployee
                _Qry &= vbCrLf & "," & FNSocialInsuranceEmployer
                _Qry &= vbCrLf & "," & FNUnionAmt
                _Qry &= vbCrLf & "," & _GFNTimeMin_Real_After_Probation + _GFNLeaveVacation
                _Qry &= vbCrLf & "," & _SocialRate & " "
                _Qry &= vbCrLf & "," & _SocialRateCmp & " "
                _Qry &= vbCrLf & "," & _FCSocialCmp & " "


                '  , FNVacationRetMin, FNVacationRetAmt
                '_FNNetpayOrg
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)


                ''best202207  ปรับคนลาออก ใส่คืนพักร้อนมือ  ต้องอัพเดท 
                'Dim retVacationAmt_Terminate As Double = 0


                'For Each _R As DataRow In _dt.Select("FCFinAmt<>0 and FTFincode = '019'")
                '    '' _AllFincode = _R!FTFincode.ToString


                '    retVacationAmt_Terminate = Val(_R!FCFinAmt.ToString)

                'Next


                'If retVacationAmt_Terminate > 0 Then
                '    _Qry = " update  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll SET  "
                '    _Qry &= vbCrLf & " FNVacationRetAmt =" & Val(retVacationAmt_Terminate)
                '    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                'End If



                If _FTCalTaxSta <> "1" And _FTEmpIdNo <> "" Then
                    '-----------------------------ภาษี -----------------------------------------------------
                    _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTaxYear "
                    _Qry &= vbCrLf & "  WHERE FTYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & "  AND  FTEmpIdNo='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' AND FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " "
                    _Qry &= vbCrLf & "  INSERT INTO THRTTaxYear (FNHSysCmpId,FTYear, FTEmpIdNo, FNAmt, FNExpenses, FNNetAmt, "
                    _Qry &= vbCrLf & "  FNModEmp, FNModMate, FNChildNotLern, FNChildLern, FNChildNotLernAmt, FNChildLernAmt, FNInsurance, FNProvidentfund, FNInterest, FNSocial, FNDonation, "
                    _Qry &= vbCrLf & "  FNProvidentfundOver, FNGPF, FNSavingsFund, FNCommutation, FNUnitRMF, FNModFather, FNModMother, FNModFatherMate, FNModMotherMate, FNUnitLTF, "
                    _Qry &= vbCrLf & "  FNDonationLern, FNParentsHealthInsurance, FNSupportSport, FNAcquisitionOfProperty, FNPension, FNTravel, FNTotalCalTax, FNTotalTax,FNTotalTaxPay )"
                    _Qry &= vbCrLf & "  SELECT " & HI.ST.SysInfo.CmpID & ",'" & _PayYear & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "

                    With _EmpTaxYear

                        _Qry &= vbCrLf & "," & .FTAmt & " "
                        _Qry &= vbCrLf & "," & .FTExpenses & ""
                        _Qry &= vbCrLf & "," & .FTNetAmt & ""
                        _Qry &= vbCrLf & "," & .FTModEmp & ""
                        _Qry &= vbCrLf & "," & .FTModMate & ""
                        _Qry &= vbCrLf & "," & .FNChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FNChildLern & " "
                        _Qry &= vbCrLf & "," & .FTChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FTChildLern & ""
                        _Qry &= vbCrLf & "," & .FTInsurance & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfund & ""
                        _Qry &= vbCrLf & "," & .FTInterest & ""
                        _Qry &= vbCrLf & "," & .FTSocial & ""
                        _Qry &= vbCrLf & "," & .FTDonation & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfundOver & ""
                        _Qry &= vbCrLf & "," & .FTGPF & ""
                        _Qry &= vbCrLf & "," & .FTSavingsFund & ""
                        _Qry &= vbCrLf & "," & .FTCommutation & ""
                        _Qry &= vbCrLf & "," & .FTUnitRMF & ""
                        _Qry &= vbCrLf & "," & .FTModFather & ""
                        _Qry &= vbCrLf & "," & .FTModMother & ""
                        _Qry &= vbCrLf & "," & .FTModFatherMate & ""
                        _Qry &= vbCrLf & "," & .FTModMotherMate & ""
                        _Qry &= vbCrLf & "," & .FTUnitLTF & ""
                        _Qry &= vbCrLf & "," & .FTDonationLern & ""
                        _Qry &= vbCrLf & "," & .FTParentsHealthInsurance & ""
                        _Qry &= vbCrLf & "," & .FTSupportSport & ""
                        _Qry &= vbCrLf & "," & .FTAcquisitionOfProperty & ""
                        _Qry &= vbCrLf & "," & .FTPension & ""
                        _Qry &= vbCrLf & "," & .FTTravel & ""
                        _Qry &= vbCrLf & "," & .FTTotalCalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTaxPay & ""

                    End With

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    '----------------------------- ภาษี -----------------------------------------------------
                End If

                '-----------------------------รายได้อื่นๆ -----------------------------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Dim _AllFincode As String = ""

                For Each _R As DataRow In _DtFin.Rows
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTFinCode, FTFinAmt," & _R!FCTotalFinAmt.ToString & ",0," & _R!FCTotalFinAmt.ToString & ""
                    _Qry &= vbCrLf & " FROM  THRMEmployeeFin "
                    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND  FTFinCode = ('" & _AllFincode & "') "

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Next

                For Each _R As DataRow In _dt.Select("FCFinAmt<>0")
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_R!FCFinAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FCFinAmtOther=" & _R!FCFinAmt.ToString & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _AllFincode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then

                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ",'" & _AllFincode & "',0, 0," & _R!FCFinAmt.ToString & "," & _R!FCFinAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    End If

                Next



                ''----------- เงินคืนพักร้อน-------------------------------

                ''เงินน้ำมัน

                If _TotalFuel > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalFuel.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='056' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '056'," & _TotalFuel & "," & _TotalFuel & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                ''เงินเพิ่มอื่นๆ

                If _TotalMoneyMeal > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneyMeal.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='053' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '053'," & _TotalMoneyMeal & "," & _TotalMoneyMeal & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _FNWorkAgeSalary > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNWorkAgeSalary.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='054' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '054'," & _FNWorkAgeSalary & "," & _FNWorkAgeSalary & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalDeligent_La > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalDeligent_La.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='059' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '059'," & _TotalDeligent_La & "," & _TotalDeligent_La & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _ShiftAmt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='001' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '001'," & _ShiftValue.ToString & "," & _ShiftAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _ShiftOTAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftOTAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='007' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '007'," & _ShiftOTValue.ToString & "," & _ShiftOTAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _SeniorityAmt > 0 Then

                    Dim _xFinCode As String = "046"
                    If (_FTStateWorkpermit = "1") Then
                        _xFinCode = "047"
                    End If
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_SeniorityAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _xFinCode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '" & _xFinCode & "'," & _SeniorityAmt.ToString & "," & _SeniorityAmt.ToString & ""
                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _BonusAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_BonusAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='008' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _BonusAmt.ToString & "," & _BonusAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _FNIncentiveAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNIncentiveAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='011' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '011'," & _FNIncentiveAmt.ToString & "," & _FNIncentiveAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _TotalMoneySkill > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySkill.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='043' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '043'," & Val(_TotalMoneySkill.ToString) & "," & Val(_TotalMoneySkill.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySkill_Sew > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySkill_Sew.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='057' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '057'," & Val(_TotalMoneySkill_Sew.ToString) & "," & Val(_TotalMoneySkill_Sew.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneyHeaderCapton > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneyHeaderCapton.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='061' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '061'," & Val(_TotalMoneyHeaderCapton.ToString) & "," & Val(_TotalMoneyHeaderCapton.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySupport_Sew > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySupport_Sew.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='062' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '062'," & Val(_TotalMoneySupport_Sew.ToString) & "," & Val(_TotalMoneySupport_Sew.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySeviceMachine > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySeviceMachine.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='063' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '063'," & Val(_TotalMoneySeviceMachine.ToString) & "," & Val(_TotalMoneySeviceMachine.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySkill_QA > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySkill_QA.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='064' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '064'," & Val(_TotalMoneySkill_QA.ToString) & "," & Val(_TotalMoneySkill_QA.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If



                If FNUnionAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(FNUnionAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='108' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '108'," & Val(FNUnionAmt.ToString) & "," & Val(FNUnionAmt.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _FNEmpDiligent > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNEmpDiligent.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    If _FNDeligentPeriod = 0 Then
                        _Qry &= vbCrLf & " AND FTFinCode='008' "
                    Else
                        _Qry &= vbCrLf & " AND FTFinCode='009' "

                    End If


                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        If _FNDeligentPeriod = 0 Then
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Else

                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '009'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                        End If
                    End If

                End If

                'If _AmtReturnVacation > 0 Then

                '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_AmtReturnVacation.ToString) & " "
                '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTFinCode='023' "

                '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '023'," & _ShiftValue.ToString & "," & _AmtReturnVacation.ToString & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If

                'End If
                ''----------- เงินคืนพักร้อน-------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave (FTPayYear, FTPayTerm, FNHSysEmpID, FTLeaveType, FNTotalHour, FNTotalMinute, FNTotalPayHour, FNTotalPayMinute, FNTotalNotPayHour,FNTotalNotPayMinute)"
                _Qry &= vbCrLf & "  SELECT      '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTLeaveType,Convert(numeric(18,2), Sum(FNTotalMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalMinute) %60) /100.00)) , "
                _Qry &= vbCrLf & "  Sum(FNTotalMinute), Convert(numeric(18,2), Sum(FNTotalPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalPayMinute) %60) /100.00)), Sum(FNTotalPayMinute),  Convert(numeric(18,2),Sum(FNTotalNotPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalNotPayMinute) %60) /100.00)), SUM(FNTotalNotPayMinute)"
                _Qry &= vbCrLf & "  FROM THRTTransLeave "
                _Qry &= vbCrLf & " WHERE        (FNHSysEmpID = '" & Val(_EmpCode) & "') "
                _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' "
                _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "' "
                _Qry &= vbCrLf & "  GROUP BY   FNHSysEmpID, FTLeaveType"

                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            End If


            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & "  	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate (FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & " FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate)"
            _Qry &= vbCrLf & " SELECT TOP 1  FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & "FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            _Qry &= vbCrLf & " SELECT FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate ( FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay)"
            _Qry &= vbCrLf & " SELECT  FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

        Next

        Return True

    End Function

#Region "Cals Payroll week Laos 2"


    Public Shared Function CalculateWeekEnd_LA2(ByVal _User As String, ByVal _EmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
        ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
        Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
        Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0, Optional FNStateSalaryType As Integer = 0,
        Optional _FNExchangeRate As Double = 0, Optional _FNExchangeRateTHB As Double = 0, Optional FNWorkDayInWeek As Integer = 13,
        Optional FNWorkDayInMonth As Integer = 26, Optional FNWorkDayInWeekBF As Integer = 0, Optional SocialExchangeRate As Double = 0, Optional TaxExchangeRate As Double = 0, Optional _FNCalType As Integer = 0) As Boolean

        Dim result As Boolean = False


        If _FNCalType = "2" Or _FNCalType = "3" Then

            If _EmpType = "2012610375" Then
                result = CalculateWeekEnd_LA2_Monthly_THAI(_User, _EmpCode,
                    _EmpType, _StartDate, _EndDate, _PayYear,
                    _PayTerm, _PayDate, _CalIns, _EmpCalType,
                    _StateCalRetire, _ReturnVacation,
                    FTStaDeductAbsent, FTStaCalPayRoll, 0,
                    _FNExchangeRate, _FNExchangeRateTHB, FNWorkDayInWeek,
                    FNWorkDayInMonth, FNWorkDayInWeekBF, SocialExchangeRate, TaxExchangeRate)

            Else
                result = CalculateWeekEnd_LA2_Monthly(_User, _EmpCode,
                    _EmpType, _StartDate, _EndDate, _PayYear,
                    _PayTerm, _PayDate, _CalIns, _EmpCalType,
                    _StateCalRetire, _ReturnVacation,
                    FTStaDeductAbsent, FTStaCalPayRoll, 0,
                    _FNExchangeRate, _FNExchangeRateTHB, FNWorkDayInWeek,
                    FNWorkDayInMonth, FNWorkDayInWeekBF, SocialExchangeRate, TaxExchangeRate)
            End If




        Else
            result = CalculateWeekEnd_LA2_Daily(_User, _EmpCode,
                    _EmpType, _StartDate, _EndDate, _PayYear,
                    _PayTerm, _PayDate, _CalIns, _EmpCalType,
                    _StateCalRetire, _ReturnVacation,
                    FTStaDeductAbsent, FTStaCalPayRoll, 1,
                    _FNExchangeRate, _FNExchangeRateTHB, FNWorkDayInWeek,
                    FNWorkDayInMonth, FNWorkDayInWeekBF, SocialExchangeRate, TaxExchangeRate)
        End If

        Return result
    End Function



    Public Shared Function CalculateWeekEnd_LA2_Monthly_THAI(ByVal _User As String, ByVal _EmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
        ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
        Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
        Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0, Optional FNStateSalaryType As Integer = 0,
        Optional _FNExchangeRate As Double = 0, Optional _FNExchangeRateTHB As Double = 0, Optional FNWorkDayInWeek As Integer = 13,
        Optional FNWorkDayInMonth As Integer = 26, Optional FNWorkDayInWeekBF As Integer = 0, Optional SocialExchangeRate As Double = 0, Optional TaxExchangeRate As Double = 0) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim CountDayPerMonth As Integer = FNWorkDayInMonth
        Dim _Qry As String
        Dim _SalaryDevide As Integer = 0
        Dim FNVacationRetMin, FNVacationRetAmt, FNVacationPerDayLapaid As Double



        Dim _DtFin As New DataTable
        _DtFin.Columns.Add("FTFinCode", GetType(String))
        _DtFin.Columns.Add("FCTotalFinAmt", GetType(String))
        Dim _SeniorityAmt As Double = 0
        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTPaymentCode As String, _FTBankCode As String, _FNChildNotLearn As Double
        Dim _FTCalSocialSta As String, _FTCalTaxSta As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FTDivCode As String, _FTPos As String


        Dim _FTEmpIdNo As String, _FTEmpIdNo1 As String, _FTSocialNo As String, _FTBranchCode As String, _FTAccNo As String, _FCLifeFeeMoney As Double
        Dim _FTShift As String




        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน

        Dim _tmpSocailRateKM As DataTable
        Dim _tmpWelfareKM As DataTable
        Dim _tmpWorkAge As DataTable
        Dim _TmpFDDateEnd As String = ""
        Dim _TmpFDDateEndP As String = ""  ' เพิ่มเงือนไข วันที่ลาออก มีผล วันที่ 2 - 16  จ่ายค่า health & transsport
        Dim _DTEmpWorkDay As New DataTable

        Dim _FCOt1_Baht, _FNTotalIncome, _FNTotalRecalSSO, _FNSocial, _FNSocialCmp, _FNTotalRecalTAX, _FNTax, _FNNetpay As Double
        Dim _Dtemp As DataTable

        Dim _SocialRate, _SocialRateCmp As Double


        _Qry = " SELECT  M.FNHSysEmpID , E.FTEmpCode "
        _Qry &= vbCrLf & " , M.FNSalary, FCOt1_Baht, FNTotalIncome  "
        _Qry &= vbCrLf & " , FNTotalRecalSSO, FNSocial, FNSocialCmp "
        _Qry &= vbCrLf & " , FNTotalRecalTAX, FNTax, FNTax5, FNTax10, FNTax15 , FNTax20, FNTax25 "
        _Qry &= vbCrLf & "  , FNNetpay   , M.FNHSysCmpId   , FTStateActive "
        _Qry &= vbCrLf & "  ,FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId,  FNHSysPayRollPayId  "
        _Qry &= vbCrLf & "  , E.FNHSysBankId, E.FNHSysBankBranchId, E.FTAccNo, E.FTSocialNo, E.FTTaxNo , E.FTEmpIdNo "
        _Qry &= vbCrLf & " FROM    [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMPayroll_Monthly M  "
        _Qry &= vbCrLf & " LEFT JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee E ON E.FNHSysEmpID = M.FNHSysEmpID AND  E.FNHSysCmpId = M.FNHSysCmpId "
        _Qry &= vbCrLf & " WHERE FTStateActive ='1' "
        _Qry &= vbCrLf & " AND M.FNHSysEmpID =" & Val(_EmpCode) & " "
        _Qry &= vbCrLf & " AND M.FNHSysCmpId = " & Val(HI.ST.SysInfo.CmpID) & " "


        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        Dim _n As Integer = 0


        For Each R As DataRow In _Dtemp.Rows

            _n = 1

            _FCSalary = R!FNSalary.ToString
            _FCOt1_Baht = R!FCOt1_Baht.ToString
            _FNTotalIncome = R!FNTotalIncome.ToString
            _FNTotalRecalSSO = R!FNTotalRecalSSO.ToString
            _FNSocial = R!FNSocial.ToString
            _FNSocialCmp = R!FNSocialCmp.ToString
            _FNTotalRecalTAX = R!FNTotalRecalTAX.ToString
            _FNTax = R!FNTax.ToString
            _FNNetpay = R!FNNetpay.ToString

            _FTPaymentCode = R!FNHSysPayRollPayId.ToString
            _FTBankCode = R!FNHSysBankId.ToString
            _FTBranchCode = R!FNHSysBankBranchId.ToString

            _FTDeptCode = R!FNHSysDeptId.ToString : _FTDivCode = R!FNHSysDivisonId.ToString
            _FTSectCode = R!FNHSysSectId.ToString
            _FTUnitCode = R!FNHSysUnitSectId.ToString : _FTPos = R!FNHSysPositId.ToString

            _FTEmpIdNo = R!FTTaxNo.ToString 'R!FTEmpIdNo.ToString
            _FTEmpIdNo1 = R!FTEmpIdNo.ToString
            _FTSocialNo = R!FTSocialNo.ToString

            _FTAccNo = R!FTAccNo.ToString

        Next



        _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
        _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
        _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
        _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

        _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
        _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
        _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
        _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

        If _n > 0 Then




            _Qry = "	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll (FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,FTEmpIdNo1,FTSocialNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId,  FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo "
            _Qry &= vbCrLf & "   ,FNSalary"
            ''    _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"

            _Qry &= vbCrLf & " , FCOt1_Baht"
            ''_Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & " , FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FNNetpay "
            _Qry &= vbCrLf & " , FNSocialRateEmp,FNSocialRateCmp,FNSocialCmp )"
            _Qry &= vbCrLf & " 	SELECT '" & HI.UL.ULF.rpQuoted(_User) & "',CONVERT(varchar(10),GetDate(),111),CONVERT(varchar(8),GetDate(),114)"
            _Qry &= vbCrLf & " 	,'" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ""
            _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo1) & "','" & HI.UL.ULF.rpQuoted(_FTSocialNo) & "','" & _EmpType & "','" & HI.UL.ULDate.ConvertEnDB(_PayDate) & "'"
            _Qry &= vbCrLf & " 	," & Val(_FTDeptCode) & ""
            _Qry &= vbCrLf & " 	," & Val(_FTDivCode) & " "
            _Qry &= vbCrLf & " 	," & Val(_FTSectCode) & " "
            _Qry &= vbCrLf & " 	," & Val(_FTUnitCode) & " "
            _Qry &= vbCrLf & " 	," & Val(_FTPos) & " "

            _Qry &= vbCrLf & " 	," & Val(_FTPaymentCode) & " "
            _Qry &= vbCrLf & " 	," & Val(_FTBankCode) & " "
            _Qry &= vbCrLf & " 	," & Val(_FTBranchCode) & " "

            _Qry &= vbCrLf & " 	,N'" & HI.UL.ULF.rpQuoted(_FTAccNo) & "' "


            _Qry &= vbCrLf & " 	," & Val(_FCSalary) & ""
            _Qry &= vbCrLf & ", " & Val(_FCOt1_Baht) & " "

            _Qry &= vbCrLf & "," & Val(_FNTotalRecalSSO) & " "
            _Qry &= vbCrLf & "," & Val(_FNTotalRecalTAX) & " "

            _Qry &= vbCrLf & "," & Val(_FNTotalIncome) & " "
            _Qry &= vbCrLf & "," & Val(_FNSocial) & " "
            _Qry &= vbCrLf & "," & Val(_FNTax) & " "
            _Qry &= vbCrLf & "," & Val(_FNNetpay) & ""

            _Qry &= vbCrLf & "," & Val(_SocialRate) & " "
            _Qry &= vbCrLf & "," & Val(_SocialRateCmp) & " "
            _Qry &= vbCrLf & "," & Val(_FNSocialCmp) & " "


            '  , FNVacationRetMin, FNVacationRetAmt
            '_FNNetpayOrg
            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)




            'If _FTCalTaxSta <> "1" And _FTEmpIdNo <> "" Then
            '    '-----------------------------ภาษี -----------------------------------------------------
            '    _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTaxYear "
            '    _Qry &= vbCrLf & "  WHERE FTYear='" & _PayYear & "' "
            '    _Qry &= vbCrLf & "  AND  FTEmpIdNo='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' AND FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " "
            '    _Qry &= vbCrLf & "  INSERT INTO THRTTaxYear (FNHSysCmpId,FTYear, FTEmpIdNo, FNAmt, FNExpenses, FNNetAmt, "
            '    _Qry &= vbCrLf & "  FNModEmp, FNModMate, FNChildNotLern, FNChildLern, FNChildNotLernAmt, FNChildLernAmt, FNInsurance, FNProvidentfund, FNInterest, FNSocial, FNDonation, "
            '    _Qry &= vbCrLf & "  FNProvidentfundOver, FNGPF, FNSavingsFund, FNCommutation, FNUnitRMF, FNModFather, FNModMother, FNModFatherMate, FNModMotherMate, FNUnitLTF, "
            '    _Qry &= vbCrLf & "  FNDonationLern, FNParentsHealthInsurance, FNSupportSport, FNAcquisitionOfProperty, FNPension, FNTravel, FNTotalCalTax, FNTotalTax,FNTotalTaxPay )"
            '    _Qry &= vbCrLf & "  SELECT " & HI.ST.SysInfo.CmpID & ",'" & _PayYear & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "

            '    With _EmpTaxYear

            '        _Qry &= vbCrLf & "," & .FTAmt & " "
            '        _Qry &= vbCrLf & "," & .FTExpenses & ""
            '        _Qry &= vbCrLf & "," & .FTNetAmt & ""
            '        _Qry &= vbCrLf & "," & .FTModEmp & ""
            '        _Qry &= vbCrLf & "," & .FTModMate & ""
            '        _Qry &= vbCrLf & "," & .FNChildNotLern & ""
            '        _Qry &= vbCrLf & "," & .FNChildLern & " "
            '        _Qry &= vbCrLf & "," & .FTChildNotLern & ""
            '        _Qry &= vbCrLf & "," & .FTChildLern & ""
            '        _Qry &= vbCrLf & "," & .FTInsurance & ""
            '        _Qry &= vbCrLf & "," & .FTProvidentfund & ""
            '        _Qry &= vbCrLf & "," & .FTInterest & ""
            '        _Qry &= vbCrLf & "," & .FTSocial & ""
            '        _Qry &= vbCrLf & "," & .FTDonation & ""
            '        _Qry &= vbCrLf & "," & .FTProvidentfundOver & ""
            '        _Qry &= vbCrLf & "," & .FTGPF & ""
            '        _Qry &= vbCrLf & "," & .FTSavingsFund & ""
            '        _Qry &= vbCrLf & "," & .FTCommutation & ""
            '        _Qry &= vbCrLf & "," & .FTUnitRMF & ""
            '        _Qry &= vbCrLf & "," & .FTModFather & ""
            '        _Qry &= vbCrLf & "," & .FTModMother & ""
            '        _Qry &= vbCrLf & "," & .FTModFatherMate & ""
            '        _Qry &= vbCrLf & "," & .FTModMotherMate & ""
            '        _Qry &= vbCrLf & "," & .FTUnitLTF & ""
            '        _Qry &= vbCrLf & "," & .FTDonationLern & ""
            '        _Qry &= vbCrLf & "," & .FTParentsHealthInsurance & ""
            '        _Qry &= vbCrLf & "," & .FTSupportSport & ""
            '        _Qry &= vbCrLf & "," & .FTAcquisitionOfProperty & ""
            '        _Qry &= vbCrLf & "," & .FTPension & ""
            '        _Qry &= vbCrLf & "," & .FTTravel & ""
            '        _Qry &= vbCrLf & "," & .FTTotalCalTax & ""
            '        _Qry &= vbCrLf & "," & .FTTotalTax & ""
            '        _Qry &= vbCrLf & "," & .FTTotalTaxPay & ""

            '    End With

            '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            '    '----------------------------- ภาษี -----------------------------------------------------
            'End If

            '-----------------------------รายได้อื่นๆ -----------------------------------------------------

            _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            'Dim _AllFincode As String = ""

            'For Each _R As DataRow In _DtFin.Rows
            '    _AllFincode = _R!FTFincode.ToString

            '    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            '    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTFinCode, FTFinAmt," & _R!FCTotalFinAmt.ToString & ",0," & _R!FCTotalFinAmt.ToString & ""
            '    _Qry &= vbCrLf & " FROM  THRMEmployeeFin "
            '    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
            '    _Qry &= vbCrLf & " AND  FTFinCode = ('" & _AllFincode & "') "

            '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            'Next

            'For Each _R As DataRow In _dt.Select("FCFinAmt<>0")
            '    _AllFincode = _R!FTFincode.ToString

            '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_R!FCFinAmt.ToString) & " "
            '    _Qry &= vbCrLf & " ,FCFinAmtOther=" & _R!FCFinAmt.ToString & " "
            '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
            '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
            '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
            '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
            '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
            '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
            '    _Qry &= vbCrLf & " AND FTFinCode='" & _AllFincode & "' "

            '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then

            '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ",'" & _AllFincode & "',0, 0," & _R!FCFinAmt.ToString & "," & _R!FCFinAmt.ToString & ""

            '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            '    End If

            'Next




            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & "  	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate (FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & " FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate)"
            _Qry &= vbCrLf & " SELECT TOP 1  FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & "FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            _Qry &= vbCrLf & " SELECT FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate ( FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay)"
            _Qry &= vbCrLf & " SELECT  FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)



            Return True
        Else
            Return False

        End If




    End Function

    Public Shared Function CalculateWeekEnd_LA2_Monthly(ByVal _User As String, ByVal _EmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
        ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
        Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
        Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0, Optional FNStateSalaryType As Integer = 0,
        Optional _FNExchangeRate As Double = 0, Optional _FNExchangeRateTHB As Double = 0, Optional FNWorkDayInWeek As Integer = 13,
        Optional FNWorkDayInMonth As Integer = 26, Optional FNWorkDayInWeekBF As Integer = 0, Optional SocialExchangeRate As Double = 0, Optional TaxExchangeRate As Double = 0) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim CountDayPerMonth As Integer = FNWorkDayInMonth
        Dim _Qry As String
        Dim _dt As DataTable
        Dim _dttemp As DataTable
        Dim _dttran As DataTable
        Dim _SalaryDevide As Integer = 0
        Dim FNVacationRetMin, FNVacationRetAmt, FNVacationPerDayLapaid As Double


        Dim _SsoBefore As Double = 0
        Dim _SsoBeforeAmt As Double = 0

        Dim _InsuranceEmpyeeBefore As Double = 0
        Dim _InsuranceEmpyerBefore As Double = 0

        Dim _DtFin As New DataTable
        _DtFin.Columns.Add("FTFinCode", GetType(String))
        _DtFin.Columns.Add("FCTotalFinAmt", GetType(String))
        Dim _SeniorityAmt As Double = 0
        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTPaymentCode As String, _FTBankCode As String, _FNChildNotLearn As Double
        Dim _FCReduceDonate As Double, _FCLifeInsurance As Double
        Dim _FCLoanHouse As Double
        Dim _FCShare As Double, _FCReduceFather As Double, _FCReduceMother As Double
        Dim _FCReSpouseFather As Double, _FCReSpouseMother As Double, _FCReduceEducationSupport As Double, _FTMarryIncome As String
        Dim _FTCalSocialSta As String, _FTCalTaxSta As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FTEmpIdNo As String, _FTEmpIdNo1 As String, _FTSocialNo As String, _FTBranchCode As String, _FTAccNo As String, _FCLifeFeeMoney As Double
        Dim _FCOtherAdd As Double, _FTOtherAddCalculateSocial As String, _FTOtherAddCalculateTax As String
        Dim _FCOtherAddOt As Double, _FTOtherAddOtCalculateSocial As String, _FTOtherAddOtCalculateTax As String, _FCBFShiftMoney As Double
        Dim _FTShiftMoneyCalculateSocial As String, _FTShiftMoneyCalculateTax As String, _FCDiligent As Double
        Dim _FTDiligentCalculateSocial As String, _FTDiligentCalculateTax As String, _FCBonusEndYear As Double
        Dim _FTBonusEndCalculateSocial As String, _FCOtherDeduct As Double, _FTBonusEndCalculateTax As String
        Dim _FCShelter As Double, _FTShelterCalculateSocial As String, _FTShelterCalculateTax As String
        Dim _FCShareFactory As Double, _FTShareFactoryCalculateSocial As String
        Dim FNPayLeaveBusinessBaht, FNPayLeaveSickBaht, FNPayLeaveSpecialBaht, FNParturitionLeave As Double, FNParturitionLeaveReCalTax As Double
        Dim FNPayLeaveBusinessBahtMin, FNPayLeaveSickBahtMin, FNPayLeaveSpecialBahtMin, FNParturitionLeaveMin As Double
        Dim GFNPayLeaveBusinessBahtMin, GFNPayLeaveSickBahtMin, GFNPayLeaveSpecialBahtMin, GFNParturitionLeaveMin As Integer
        Dim _FTShift As String
        Dim _FNTime, _FNNotRegis As Double
        Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
        Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
        Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
        Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double
        Dim _FNLeavePay, _FNLeaveNotPay As Double, _FNTimeMin, _FNOT1Min As Double
        Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
        Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
        Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
        Dim _GFNTime, _GFNNotRegis As Double
        Dim _GFNOT1 As Double, _GFNOT1_5 As Double, _GFNOT2 As Double, _GFNOT3 As Double, _GFNOT4 As Double
        Dim _GFNLeaveSick As Double, _GFNLeaveBusiness As Double
        Dim _GFNLeaveVacation As Double, _GFNLeavePregnant As Double, _GFNLeaveOrdain As Double, _GFNLeaveSpecial As Double
        Dim _GFNLeaveMarry As Double, _GFNLeaveOther As Double, _GFNLateNormalMin As Double
        Dim _GFNLateNormalMinNotHoliday As Double = 0
        Dim _GFNLateNormalCut As Double, _GFNLateOtMin As Double, _GFNLateOtCut As Double
        Dim _GFNLateMorning As Double, _GFNLateAfternoon As Double, _GFNAbsent, _GFNCutAbsent As Double
        Dim _GFNLeavePay As Double, _GFNTimeMin, _GFNOT1Min, _GFNTimeMin_Real_After_Probation As Double
        Dim _GFNOT1_5Min As Double, _GFNOT2Min As Double, _GFNOT3Min As Double, _GFNOT4Min As Double, _GFNLateMMin As Double
        Dim _GFNLateAfMin As Double, _GFNRetireMMin As Double, _GFNRetireAfMin As Double
        Dim _GFNRetireNormalCut As Double, _GFNRetireOtMin As Double, _GFNRetireOtCut As Double
        Dim _dtot As DataTable
        Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double
        Dim _FCAccumulateIncome As Double, _FCAccumulateSocial As Double, _FCAccumulateTax As Double
        Dim _FTSatrtCalculateDate As String, _FTEndCalculateDate As String, _FNEmpDiligent As Double, _FTStateInDustin As String, _FNDeligentPeriod As Integer
        Dim _FTSatrtCalculateDateIns As String, _FTEndCalculateDateIns As String
        Dim _FNEmpBaht, _nBahtOt1 As Double, _nBahtOt15 As Double, _nBahtOt2 As Double, _nBahtOt3 As Double, _nBahtOt4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
        Dim _SocialRate As Double, _SocialRateCmp As Double : Dim _StateSocialOnlyCmppay As Boolean
        Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
        Dim _TotalHoliDay As Integer
        Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String

        Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _FCDeductSourceVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double, _FCSocialCmp As Double
        Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
        Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
        Dim _FTSlary, _FTDivCode, _FTPos As String
        Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
        Dim _Dtemp As DataTable
        Dim _SocialBefore, _SocialBeforeAmt, _SocialPayMax As Double
        Dim _FCAdd, _FTAddCalculateSocial, _FTAddCalculateTax, _FCDeduct, _TotalCalSso, _TotalCalTax, _TaxAmt As Double
        Dim _Gtotalleave, _GtotalleavePay, _GtotalleaveNotPay, _GtotalleavePayCalSso, _GtotalleavePayCalSsoAmt As Double
        Dim _dtLeave As DataTable
        Dim _LeaveCode As String = ""
        Dim _dtAddOtherAmt As DataTable
        Dim _dtAddOtherAmtshift As DataTable
        Dim FCModFather, FCModMother, FCModMateFather, FCModMateMother As Double
        Dim FCPremium, FCInterest, FCUnitRMF, FCUnitLTF, FCDeductDonate, FCDisabledDependents, FCDeductDonateStudy As Double
        Dim FCHealthInsurFatherMotherMate, FTHealthInsurIDFather, FTHealthInsurIDMother As Double
        Dim FTHealthInsurIDFatherMate, FTHealthInsurIDMotherMate As Double
        Dim FTTotalCalContributedAmt, FTContributedAmt, FTCmpContributedAmt, FTTotalCalContributedAcc As Double
        Dim FTTotalCalWorkmen, FTWorkmenAmt, _FTMaxCalWorkmen, _FTMaxWorkmenRate, FTTotalCalWorkmenAcc As Double
        Dim _FTWorkmenAmtBefore, _FTTotalCalWorkmenBefore As Double
        Dim _ShiftAmt As Double = 0
        Dim _ShiftOTAmt As Double = 0
        Dim _ShiftValue As Double = 0
        Dim _ShiftOTValue As Double = 0
        Dim _WorkingDay As Double = 0
        Dim _THRMContributedFund As DataTable
        Dim _EmpDisTax As New HCfg.EmployeeDiscountTax
        Dim _EmpTaxYear As New HCfg.EmpTaxYear
        '   HI.HRCAL.Calculate.LoadDiscountTax()

        Dim _FNSlaryPerDayShiftNinght As Double, _FNSlaryPerDayNormal As Double

        Dim _EmpDisTaxChildAmt As Double = 0
        Dim _FNNetpayOrg As Double = 0.0
        Dim _FNNetpay As Double = 0.0
        Dim _AmtAddCalOT, _GAmtAddCalOT As Double
        Dim CountTerm As Integer = 0
        Dim _SPDateType, _TotalInstalment, _Instalment As Integer
        Dim _ContributedFundBeginPay As Boolean = False
        Dim _DTHoliday As DataTable
        Dim _ShiftAdv As Double = 0
        Dim _AmtPlus As Double = 0
        Dim _GAmtPlus As Double = 0
        Dim FTHldType As Integer = 0
        Dim _AmtRetire As Double = 0
        Dim _WorkAge As Integer = 0 : Dim _WorkAgeDay As Integer = 0 : Dim _WorkAgeSeniority As Integer = 0 : Dim _WorkingDayN As Integer = 0
        Dim _WorkAgeParturition As Integer = 0
        Dim _AmtReturnVacation As Double = 0
        Dim _FNIncentiveAmt As Double = 0
        Dim _FTInsurType As Integer = 0
        Dim _DayAdjAdd As Double = 0
        Dim _WageAdjAdd As Double = 0
        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        Dim _FTStatePayHoliday As String = ""
        Dim _FTEmployeeCode As String = ""
        Dim _FNAttandanceAmt As Double = 0
        Dim _FNHealtCareAmt As Double = 0
        Dim _FNTransportAmt As Double = 0
        Dim _FNChildCareAmt As Double = 0
        Dim _FNChildCareStartAge As Double = 0
        Dim _FNChildCareEndAge As Double = 0
        Dim _FNOTMealAmt As Double = 0
        Dim _FNSocialBase As Double = 0
        Dim _FNWorkAgeSalary As Double = 0
        Dim _FNOTMealAmtUS As Double = 0
        Dim _FNSickLeave As Double = 0
        Dim _LeaveSickPay As Integer = 0
        Dim _FNTotalChildCare As Integer = 0
        Dim _FNNetAttandanceAmt As Double = 0
        Dim _FNNetChildCareAmt As Double = 0
        Dim _FNNetOTMealAmt As Double = 0
        Dim _FNNetSocialBase As Double = 0
        Dim _FNNetOTMealAmtUS As Double = 0
        Dim _FNEmpWorkAge As Integer = 0
        Dim _tmpSocailRateKM As DataTable
        Dim _tmpWelfareKM As DataTable
        Dim _tmpWorkAge As DataTable
        Dim _TmpFDDateEnd As String = ""
        Dim _TmpFDDateEndP As String = ""  ' เพิ่มเงือนไข วันที่ลาออก มีผล วันที่ 2 - 16  จ่ายค่า health & transsport
        Dim _DTEmpWorkDay As New DataTable
        Dim _TmpLeavePay As Integer = 0
        Dim _EmpSex As Integer = 0
        Dim _RatePay As Double = 1
        Dim _SalaryPayOTKM As Double = 0
        Dim _SalaryPayLeave As Double = 0
        Dim _SalaryPayLeaveMin As Double = 0
        Dim _FNEmpStatus As Integer = 0
        Dim _FTStateWorkpermit As String = ""
        Dim _FTStateMedicalCertificate As String = ""
        Dim _BonusAmt As Double = 0

        Calculate.LoadInsuranceVNRate()
        Dim FNSocialEmployeeRate As Double = 0
        Dim FNSocialEmployerRate As Double = 0
        Dim FNHealthEmployeeRate As Double = 0
        Dim FNHealthEmployerRate As Double = 0
        Dim FNUnemploymentEmployeeRate As Double = 0
        Dim FNUnemploymentEmployerRate As Double = 0
        Dim FNUnionEmployeeRate As Double = 0
        Dim FNUnionEmployerRate As Double = 0
        Dim FNStateUnionMember As String = ""
        Dim FDStartDateUnion As String = ""
        Dim FDEndDateUnion As String = ""
        Dim FNUnionAmt As Double = 0
        Dim FNUnionRate As Double = 0

        Dim _FDDateProbation As String = ""

        Dim _FNMoneyMeal As Integer = 0

        _Qry = "SELECT TOP 1 FTCfgData FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.TSESystemConfig WHERE FTCfgName='CfgMeal_LA'"
        _FNMoneyMeal = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_SECURITY, "0"))

        Try
            FNSocialEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eSocialInsurance).FNEmployeeRate
            FNSocialEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eSocialInsurance).FNEmployerRate
            FNHealthEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eHealthInsurance).FNEmployeeRate
            FNHealthEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eHealthInsurance).FNEmployerRate
            FNUnemploymentEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnemploymentInsurance).FNEmployeeRate
            FNUnemploymentEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnemploymentInsurance).FNEmployerRate
            FNUnionEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnionInsurance).FNEmployeeRate
            FNUnionEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnionInsurance).FNEmployerRate
        Catch ex As Exception
            'MG.ShowMsg.mInfo("Invalid Config Value...", 1503310001, "", "")
        End Try


        Dim FNSocialInsuranceEmployee As Double = 0.0
        Dim FNSocialInsuranceEmployer As Double = 0.0
        Dim FNHealthInsuranceEmployee As Double = 0.0
        Dim FNHealthInsuranceEmployer As Double = 0.0
        Dim FNUnemploymentInsuranceEmployee As Double = 0.0
        Dim FNUnemploymentInsuranceEmployer As Double = 0.0
        Dim FNUnionInsuranceEmployee As Double = 0.0
        Dim FNUnionInsuranceEmployer As Double = 0.0

        Dim FNSocialInsuranceEmployeeOrg As Double = 0.0
        Dim FNSocialInsuranceEmployerOrg As Double = 0.0
        Dim FNHealthInsuranceEmployeeOrg As Double = 0.0
        Dim FNHealthInsuranceEmployerOrg As Double = 0.0
        Dim FNUnemploymentInsuranceEmployeeOrg As Double = 0.0
        Dim FNUnemploymentInsuranceEmployerOrg As Double = 0.0
        Dim FNUnionInsuranceEmployeeOrg As Double = 0.0
        Dim FNUnionInsuranceEmployerOrg As Double = 0.0




        _DTEmpWorkDay.Columns.Add("FNSalary", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNDay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT1", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT15", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT2", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT3", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT4", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNHoloday", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLate", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNAbsent", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLateCutAmtAbsent", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeavePay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeaveNotPay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNBusiness", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSpecial", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNParturition", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNVacation", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNShiftNo", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSlaryOTPerMin", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSlaryNormal", GetType(Double))



        Dim _DTEmpPayLeaveSick As New DataTable
        _DTEmpPayLeaveSick.Columns.Add("FNSalary", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNDay", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNPayPer", GetType(Double))

        _Qry = "Select TOP 1 FNCalType FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType WHERE FNHSysEmpTypeId=" & Val(_EmpType) & "  "
        Dim _TmpCalType As Integer = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "0"))

        If FTStaCalPayRoll = 0 Then
            _DateStartOfMonth = _StartDate  'วันแรกของเดือน
            _DateEndOfMonth = _EndDate 'วันแของเดือน
        Else
            _DateStartOfMonth = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
            _DateEndOfMonth = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        End If
        '----------------------------------   Variable  ------------------------------------

        Dim _DateReset As String
        _Qry = " Select Case When RiGHT(FTCurrenDate, 5) >= FTLeaveReset Then LEFT(FTCurrenDate, 4) Else  LEFT(FTBefore,4)  End +'/' + FTLeaveReset"
        _Qry &= vbCrLf & "  FROM"
        _Qry &= vbCrLf & " ("
        _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
        _Qry &= vbCrLf & " FROM            THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN THRMEmployee AS M WITH(NOLOCK )"
        _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "  WHERE   M.FNHSysEmpID=" & Val(_EmpCode) & " "
        _Qry &= vbCrLf & " ) As T"

        _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")
        '------------------ รวมวันลาป่วย---------------------------------

        _Qry = "   SELECT        (SUM(FNTotalPayMinute) / 480) AS FNTotalPayMinute  "
        _Qry &= vbCrLf & "     "
        _Qry &= vbCrLf & "    FROM THRTTransLeave "
        _Qry &= vbCrLf & "  WHERE        (FTLeaveType = '0')"
        _Qry &= vbCrLf & "  AND (FTDateTrans >= N'" & (_DateReset) & "') "
        _Qry &= vbCrLf & "  AND (FTDateTrans < N'" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "') "
        _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ")"

        _LeaveSickPay = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

        '------------------ รวมวันลาป่วย---------------------------------

        With _EmpTaxYear
            .FTAmt = 0 'เงินได้ก่อนหักค่าใช้จ่าย
            .FTExpenses = 0 'ค่าใช้จ่ายส่วนตัว
            .FTNetAmt = 0 'เงินได้หลังหักค่าใช้จ่าย
            .FTModEmp = 0 'ลดหย่อนส่วนตัว
            .FTModMate = 0 'ลดหย่อนคู่สมรส
            .FNChildNotLern = 0 'จำนวนบุตรไม่ศึกษา
            .FNChildLern = 0 'จำนวนบุตรศึกษา
            .FTChildNotLern = 0 'ลดหย่อนบุตรไม่ศึกษา
            .FTChildLern = 0 'ลดหย่อนบุตรศึกษา
            .FTInsurance = 0 'ลดหย่อนเบี้ยประกัน
            .FTProvidentfund = 0 'กองทุนเลียงชีพส่วนที่ไม่เกิน 10000
            .FTInterest = 0 'ดอกเบี้ยเงินกู้
            .FTSocial = 0 'ประกันสังคม
            .FTDonation = 0 'เงินบริจาค
            .FTProvidentfundOver = 0 'กองทุนเลียงชีพส่วนที่เกิน 10000
            .FTGPF = 0 'เงิน กบข.
            .FTSavingsFund = 0 'เงินกองทุนสงเคราะห์
            .FTCommutation = 0 'เงินชดเชยตามกฎหมายแรงงาน
            .FTUnitRMF = 0 'ค่าซื้อหน่วยลงทุน RTF
            .FTModFather = 0 'ลดหย่อนบิดา
            .FTModMother = 0 'ลดหย่อนมารดา
            .FTModFatherMate = 0 'ลดหย่อนบิดาคู่สมรส
            .FTModMotherMate = 0 'ลดหย่อนมารดาคู่สมรส
            .FTUnitLTF = 0 'ค่าซื้อหน่วยลงทุน LTF
            .FTDonationLern = 0 'เงินบริจาคเพื่อสนับสนุนการศึกษา
            .FTParentsHealthInsurance = 0 'เบี้ยประกันสุขภาพบิดามารดา
            .FTSupportSport = 0 'เงินสนับสนุนการกีฬา
            .FTAcquisitionOfProperty = 0 'ค่าซื้ออาคาร
            .FTPension = 0 'บำนาญ
            .FTTravel = 0 'ท่องเที่ยวในประเทศ
            .FTTotalCalTax = 0 'เงินได้สุทธิ
            .FTTotalTax = 0 'ภาษีที่ต้องจ่าย
        End With
        '------------------ GetConfig WeekEnd ----------------------------------

        ' get discount tax

        With _EmpDisTax
            .Cfg_ModChildAllowanceAgeStart = HCfg._DiscountTax.Cfg_ModChildAllowanceAgeStart
            .Cfg_ModChildAllowanceAgeEnd = HCfg._DiscountTax.Cfg_ModChildAllowanceAgeEnd
            .Cfg_ModChildAllowanceRateNotStudied = HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied
            .Cfg_ModChildAllowanceRateStudy = HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy
        End With
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------
        _Qry = "SELECT FNSeqNo, FNAgeBegin, FNAgeEnd, FNEmpPay As FNEmpAmtPer,  FNCmpPay AS FNCmpAmtPer"
        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMContributions WITH(NOLOCK) "
        _Qry &= vbCrLf & "  WHERE  FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID) & " "
        _THRMContributedFund = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------

        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday
        '------------------ GetConfig Holiday ----------------------------------

        _tmpSocailRateKM = LoadSocailRateKM
        '_tmpWelfareKM = LoadWelfareKM(Integer.Parse(Val(_EmpType)))
        _tmpWorkAge = GetWorkAgeRate(Val(HI.ST.SysInfo.CmpID))

        'For Each ZRow In _tmpWelfareKM.Rows

        '    _FNAttandanceAmt = Val(ZRow!FNAttandanceAmt.ToString)
        '    _FNHealtCareAmt = Val(ZRow!FNHealtCareAmt.ToString)
        '    _FNTransportAmt = Val(ZRow!FNTransportAmt.ToString)
        '    _FNChildCareAmt = Val(ZRow!FNChildCareAmt.ToString)
        '    _FNChildCareStartAge = Val(ZRow!FNChildCareStartAge.ToString)
        '    _FNChildCareEndAge = Val(ZRow!FNChildCareEndAge.ToString)
        '    _FNOTMealAmt = Val(ZRow!FNOTMealAmt.ToString)

        '    Exit For
        'Next

        'FNAttandanceAmt, FNHealtCareAmt, FNTransportAmt, FNChildCareAmt, FNChildCareStartAge, FNChildCareEndAge, FNOTMealAmt
        FNVacationRetMin = 0 : FNVacationRetAmt = 0
        _FTSatrtCalculateDate = _StartDate
        _FTEndCalculateDate = _EndDate
        _FTSatrtCalculateDateIns = _StartDate
        _FTEndCalculateDateIns = _EndDate
        _FNEmpDiligent = 0 : _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
        _FTStateInDustin = "" : _FNSlaryPerMonth = 0
        _FNSlaryPerDay = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0
        _FTEmpState = "" : _FNEmpBaht = 0 : _nBahtOt1 = 0
        _nBahtOt15 = 0 : _nBahtOt2 = 0 : _nBahtOt3 = 0
        _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
        _FCPayVacationBaht = 0 : _FCDeductSourceVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0 : _FCSocialCmp = 0
        _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0 : _SocialRateCmp = 0
        _SocialMinIncome = 0 : _SocialMaxIncome = 0
        _Complete = 0 : _Err = 0 : _FCSalary = -99
        CountTerm = 0
        _TotalInstalment = 0 : _Instalment = 0

        FNPayLeaveBusinessBahtMin = 0 : FNPayLeaveSickBahtMin = 0 : FNPayLeaveSpecialBahtMin = 0 : FNParturitionLeaveMin = 0
        GFNPayLeaveBusinessBahtMin = 0 : GFNPayLeaveSickBahtMin = 0 : GFNPayLeaveSpecialBahtMin = 0 : GFNParturitionLeaveMin = 0
        FNPayLeaveBusinessBaht = 0 : FNPayLeaveSickBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode,M.FTEmpCode AS FTEmployeeCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, Isnull( M.FNEmpStatus,0) AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"
        _Qry &= vbCrLf & " ,M.FNHSysDeptId AS FTDeptCode , M.FNEmpSex "
        _Qry &= vbCrLf & "  ,M.FNHSysDivisonId AS FTDivCode, M.FNHSysSectId AS FTSectCode,  M.FNHSysUnitSectId AS FTUnitSecCode"
        _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
        _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
        _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
        _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
        _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
        _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
        _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
        _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
        _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
        _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide , isnull( M.FTStateWorkpermit ,'0') as FTStateWorkpermit"
        _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge(M.FdDateStart,'" & _EndDate & "') AS FNEmpWorkAgeNew"
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_MonthSeniority(M.FdDateStart,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeMonthSeniority     "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_Salary_CD_NEW(M.FdDateStart,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeNewCD ,  dbo.[FN_Get_Emp_WorkAge_Day](M.FDDateStart,M.FDDateEnd) as FNEmpWorkAgeNewDay"
        _Qry &= vbCrLf & " ,  dbo.[FN_Get_Emp_WorkAge_Day_CD](M.FDDateStart,M.FDDateEnd,M.FNHSysEmpID,'" & _EndDate & "') as FNEmpWorkAgeNewDay_CD "
        _Qry &= vbCrLf & " , isnull(M.FTStateUnionMember,'') as FTStateUnionMember  , isnull(M.FDStartDateUnion,'') as FDStartDateUnion , isnull(M.FDEndDateUnion,'') as FDEndDateUnion"
        _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_EmpCode) & " ) "

        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each R As DataRow In _Dtemp.Rows

            _DtFin.Rows.Clear()
            _FNEmpStatus = Integer.Parse("0" & R!FTStatus.ToString)
            _AmtAddCalOT = 0
            _EmpSex = Val("0" & R!FNEmpSex.ToString)
            _FTStateWorkpermit = R!FTStateWorkpermit.ToString

            _FDDateProbation = R!FDDateProbation.ToString

            FNStateUnionMember = R!FTStateUnionMember.ToString : FDStartDateUnion = R!FDStartDateUnion.ToString : FDEndDateUnion = R!FDEndDateUnion.ToString

            _SalaryDevide = Val(R!FNSalaryDivide.ToString)
            _FTStatePayHoliday = R!FTStatePayHoliday.ToString
            _FNEmpWorkAge = Integer.Parse(Val(R!FNEmpWorkAge.ToString))
            _FTInsurType = Val(R!FTInsurType.ToString)

            If _SalaryDevide <= 0 Then
                _SalaryDevide = 1
            End If

            _FTSlary = R!FTSalary.ToString : _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString
            _FTPaymentCode = R!FTPayCode.ToString : _FTBankCode = R!FTBnkCode.ToString
            _FTCalSocialSta = R!FTCalSocialSta.ToString : _FTCalTaxSta = R!FTCalTaxSta.ToString

            _FTDeptCode = R!FTDeptCode.ToString : _FTDivCode = R!FTDivCode.ToString
            _FTSectCode = R!FTSectCode.ToString
            _FTUnitCode = R!FTUnitSecCode.ToString : _FTPos = R!FTPositCode.ToString

            _FTEmpState = R!FTCalType.ToString

            _FTEmpIdNo = R!FTTaxNo.ToString 'R!FTEmpIdNo.ToString
            _FTEmpIdNo1 = R!FTEmpIdNo.ToString
            _FTSocialNo = R!FTSocialNo.ToString



            _FTBranchCode = R!FTBnkBchCode.ToString
            _FTAccNo = R!FTAccNo.ToString
            '---------------------------------------- ลดหย่อน------------------------------------
            _FNChildNotLearn = 0 : _FCReduceDonate = 0 : _FCLifeInsurance = 0 : _FCLoanHouse = 0 : _FCReduceEducationSupport = 0
            _FCShare = 0 : _FCReduceFather = 0 : _FCReduceMother = 0 : _FCReSpouseFather = 0 : _FCReSpouseMother = 0 : _FTMarryIncome = 0
            _FCLifeFeeMoney = 0

            FCModFather = 0 : FCModMother = 0 : FCModMateFather = 0 : FCModMateMother = 0
            FCPremium = 0 : FCInterest = 0 : FCUnitRMF = 0 : FCUnitLTF = 0 : FCDeductDonate = 0 : FCDisabledDependents = 0 : FCDeductDonateStudy = 0
            FCHealthInsurFatherMotherMate = 0 : FTHealthInsurIDFather = 0 : FTHealthInsurIDMother = 0
            FTHealthInsurIDFatherMate = 0 : FTHealthInsurIDMotherMate = 0

            FTTotalCalContributedAmt = 0 : FTContributedAmt = 0 : FTCmpContributedAmt = 0
            FTTotalCalWorkmen = 0 : FTWorkmenAmt = 0 : _FTMaxCalWorkmen = 0 : _FTMaxWorkmenRate = 0 : FTTotalCalWorkmenAcc = 0
            _FNIncentiveAmt = 0

            _TmpFDDateEnd = _FDDateEnd
            _TmpFDDateEndP = _FDDateEnd

            If _TmpFDDateEnd <> "" Then

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,-1,Convert(Datetime,'" & _TmpFDDateEnd & "')),111)"
                _TmpFDDateEnd = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,Convert(Datetime,'" & _EndDate & "')),111)"
                _TmpFDDateEndP = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

            End If

            '--------- อายุงาน  เดือน
            _WorkAge = Val(R!FNEmpWorkAgeNewCD.ToString)

            '---------อายุงาน วัน
            _WorkAgeDay = Val(R!FNEmpWorkAgeNewDay.ToString)

            '---------อายุงาน เดือน ไม่ปัดขึ้น เพื่อคิด ค่ารางวัลอายุงาน 
            _WorkAgeSeniority = Val(R!FNEmpWorkAgeMonthSeniority.ToString)

            '---------วันทำงาน 
            _WorkingDayN = Val("0" & R!FNEmpWorkAgeNewDay_CD.ToString)

            '----------- Calculate Seniority Bonus For KKN---------------
            _FNWorkAgeSalary = 0
            'If _FTEmpState <> "2" And _FTEmpState <> "3" Then
            ''If-- Val(_PayTerm) Mod 2 <> 0 Then


            'If (_StartDate <= Left(_StartDate, 8) & "24" And _EndDate >= Left(_StartDate, 8) & "24") Then
            '    For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & _WorkAge & " AND  FNWorkAgeEnd>=" & _WorkAge & " ")
            '        _FNWorkAgeSalary = Val(ZRow!FNWorkAgeAmt.ToString)
            '        Exit For
            '    Next
            'End If
            ''End If

            'End If

            '----------- Calculate Seniority Bonus For KKN---------------

            If _FTEmpState = "2" Then
                _TotalInstalment = 12
            Else
                _TotalInstalment = 24
            End If

            _ContributedFundBeginPay = False
            If R!FDFundBegin.ToString <> "" Then
                If R!FDFundBegin.ToString < _FTEndCalculateDate Then

                    If R!FDFundEnd.ToString <> "" Then
                        If R!FDFundEnd.ToString > _FTEndCalculateDate Then
                            _ContributedFundBeginPay = True
                        End If
                    Else
                        _ContributedFundBeginPay = True
                    End If

                End If
            End If

            _Instalment = Val(_PayTerm)
            _FNIncentiveAmt = 0

            '-------------คำนวณ Incentive-------------------------------------------
            Select Case _FTInsurType
                Case 1

                    '---------ประกันเป็นวัน
                    '_Qry = "SELECT SUM ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END  ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    _Qry = " SELECT  SUM(case when (ISNULL(FNProNormal,0)-  ISNULL(FNAmtNormal,0))>0 THEN ISNULL(FNProNormal,0)-  ISNULL(FNAmtNormal,0) ELSE  0  END  "
                    _Qry &= vbCrLf & " + case when (ISNULL(FNProOT,0)-  ISNULL(FNAmtOT,0))>0 THEN ISNULL(FNProOT,0)-  ISNULL(FNAmtOT,0) ELSE  0 END "
                    _Qry &= vbCrLf & " )AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    '_Qry = "SELECT SUM (  ISNULL(FNNetAmt,0)   ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                    '_Qry = "SELECT sum(Isnull(FNAmt,0)) as FNAmt  "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    '_FNIncentiveAmt = _FNIncentiveAmt + CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case 2
                    '---------ประกันเป็นเป็นงวด-------------------------------------------

                    _Qry = "SELECT  ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END  ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM ( SELECT SUM(ISNULL(FNNetAmt,0) ) AS FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) AS FNNetProAmt"
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _Qry &= vbCrLf & " ) AS M"

                    '_Qry = "SELECT   SUM (  ISNULL(FNNetAmt,0)   ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM ( Select SUM(ISNULL(FNNetAmt,0) ) As FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) As FNNetProAmt"
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily With(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	And FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    '_Qry &= vbCrLf & " ) AS M"
                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))
                    '_Qry = "SELECT sum(Isnull(FNAmt,0)) as FNAmt  "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                    '_FNIncentiveAmt = _FNIncentiveAmt + CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case Else
            End Select
            '-------------------------------------

            '---------------------------------------- ลดหย่อน------------------------------------
            _Qry = " SELECT      FNHSysEmpID, FTChildSex, FTStudySta  ,isnull( FTStateNotDisTax ,'0') AS FTStateNotDisTax "
            '_Qry &= vbCrLf & ", dbo.FN_Get_ChildEmp_Age(FDChildBirthDate,'') AS FNChildAge"
            _Qry &= vbCrLf & ",dbo.FN_Get_Emp_WorkAge(FDChildBirthDate,'" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "') AS FNChildAge"
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeChild WITH(NOLOCK) "
            _Qry &= vbCrLf & " WHERE   (FNHSysEmpID = " & Val(_EmpCode) & ")"
            _dttemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)



            Dim _ChildNotStudy As Integer = 0
            Dim _ChildStudy As Integer = 0
            _FNTotalChildCare = 0
            _EmpDisTaxChildAmt = 0

            If (_EmpSex = 1) Then 'Employee Male Not Cal ChildCare
                For Each _Drow As DataRow In _dttemp.Select("FTStateNotDisTax = '0'")

                    '--------  Add Child Care For KKN--------------
                    If Val(_Drow!FNChildAge.ToString) >= _FNChildCareStartAge And Val(_Drow!FNChildAge.ToString) < _FNChildCareEndAge Then
                        _FNTotalChildCare = _FNTotalChildCare + 1
                    End If
                    '--------  Add Child Care For KKN--------------

                    If _Drow!FTStudySta.ToString = "1" Then
                        _ChildStudy = _ChildStudy + 1
                    Else
                        _ChildNotStudy = _ChildNotStudy + 1
                    End If


                    '--------  Add Amt Child Distax For KKN--------------
                    If _Drow!FTStudySta.ToString = "0" Then
                        If _Drow!FTStudySta.ToString = "1" Then
                            If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                                _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateStudy
                            End If
                        Else

                            If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                                _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateNotStudied
                            End If
                        End If

                    End If

                    ' อายุมากกว่า แต่ศึกษาอยู่ ลดหย่อนได้

                    '--------  Add Amt Child Distax For KKN--------------



                Next

                _FNNetChildCareAmt = Format(_FNTotalChildCare * _FNChildCareAmt, "0.00")

            Else
                For Each _Drow As DataRow In _dttemp.Select("FTStateNotDisTax = '0'")
                    If _Drow!FTStudySta.ToString = "1" Then
                        If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                            _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateStudy
                        End If
                    Else

                        If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                            _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateNotStudied
                        End If
                    End If

                    If _Drow!FTStudySta.ToString = "1" Then
                        _ChildStudy = _ChildStudy + 1
                    Else
                        _ChildNotStudy = _ChildNotStudy + 1
                    End If

                Next
            End If



            _FCAccumulateIncome = 0 : _FCAccumulateSocial = 0 : _FCAccumulateTax = 0
            FTTotalCalContributedAcc = 0 : FTTotalCalWorkmenAcc = 0

            '----------- Get Summary ------------------
            LoadIncomeTax(_FTEmpIdNo, _PayYear, _PayTerm, _FCAccumulateIncome, _FCAccumulateTax, _FCAccumulateSocial, CountTerm, FTTotalCalContributedAcc, FTTotalCalWorkmenAcc, Integer.Parse(Val(_EmpCode)))
            '----------- Get Summary ------------------

            With _EmpDisTax

                .BaseSlary = 0
                .OtherSlary = 0
                .BeforeIncom = 0 ' _FCAccumulateIncome
                .BeforeTax = _FCAccumulateTax
                .FTMateIncome = (R!FTMateIncome.ToString = "0")
                ' ----------------------------------------- Clear Discount Tax Value -------------------------
                .Cfg_ModChildAllowanceRateNotStudied = _ChildNotStudy 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
                .Cfg_ModChildAllowanceRateStudy = _ChildStudy 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
                '-------------ลดหย่อนบุตร-----------------

                '--- หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
                .Cfg_ContributedDeducToTheFund = FTTotalCalContributedAcc 'ลูกจ้าง
                '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ

                .Cfg_ModDeductibleDonations = CDbl(Val(R!FCDeductDonate.ToString)) ' ' % ลดหย่อนเงินบริจาค
                .Cfg_ModDeductDonateStudy = CDbl(Val(R!FCDeductDonateStudy.ToString))
                .Cfg_ModFatherReduction = CDbl(Val(R!FCModFather.ToString)) '  'ลดหย่อนบิดา
                .Cfg_ModInsurancePremiums = CDbl(Val(R!FCPremium.ToString)) '  'ค่าเบี้ยประกันชีวิตส่วนบุคคล
                .Cfg_ModLendingforHousing = CDbl(Val(R!FCInterest.ToString)) ' 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย

                .Cfg_ModLTFChk = CDbl(Val(R!FCUnitLTF.ToString)) 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
                .Cfg_ModMateFatherReduction = CDbl(Val(R!FCModMateFather.ToString)) ' 'ลดหย่อนบิดา คู่สมรส
                .Cfg_ModMateMotherReduction = CDbl(Val(R!FCModMateMother.ToString)) '  'ลดหย่อนมารดา คู่สมรส
                .Cfg_ModMotherReduction = CDbl(Val(R!FCModMother.ToString)) ' 'ลดหย่อนมารดา

                .Cfg_ModPersonalExpenChk = 0 ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน

                .Cfg_ModRateReductionsByMarital = (IIf(R!FTMaritalCode.ToString = "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
                .Cfg_ModRateReductionsBySingle = (IIf(R!FTMaritalCode.ToString <> "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ โสด 

                .Cfg_ModRMFChk = CDbl(Val(R!FCUnitRMF.ToString)) '  ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 
                .FCDisabledDependents = CDbl(Val(R!FCDisabledDependents.ToString)) '  'ค่าอุปการะเลี้ยงดูคนพิการหรือทุพพลภาพ
                .FCHealthInsurFatherMotherMate = CDbl(Val(R!FCHealthInsurFatherMotherMate.ToString)) '   'เบี้ยประกันสุขภาพบิดามารดาของผู้มีเงินได้และคู่สมสร

                .FCExceptAgeOver = CDbl(Val(R!FCExceptAgeOver.ToString)) ' ' 'รายการเงินได้ที่ได้รับยกเว้น ของผู้มีเงินได้ตั้งแต่ 65 ปีขึ้นไป 
                .FCExceptAgeOverMate = CDbl(Val(R!FCExceptAgeOverMate.ToString)) ' 'รายการเงินได้ที่ได้รับยกเว้น ของคู่สมรสอายุตั้งแต่ 65 ปีขึ้นไป
                '----------------------------------------------------
            End With
            '---------------------------------------- ลดหย่อน------------------------------------

            _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = "0" : _FTOtherAddCalculateTax = "0" : _FCOtherAddOt = 0
            _FTOtherAddOtCalculateSocial = "0" : _FTOtherAddOtCalculateTax = "0" : _FCBFShiftMoney = 0 : _FTShiftMoneyCalculateSocial = "0"
            _FTShiftMoneyCalculateTax = "0" : _FCDiligent = 0 : _FTDiligentCalculateSocial = "0" : _FTDiligentCalculateTax = "0"
            _FCBonusEndYear = 0 : _FTBonusEndCalculateSocial = "0" : _FTBonusEndCalculateTax = "0" : _FCShelter = 0
            _FTShelterCalculateSocial = "0" : _FTShelterCalculateTax = "0" : _FCShareFactory = 0 : _FTShareFactoryCalculateSocial = "0"
            _FNNetpayOrg = 0.0
            _FNNetpay = 0.0
            _FCSalary = -99
            _FTSlary = (_FTSlary)

            If IsNumeric(_FTSlary) Then
                _MSlary = _FTSlary
                _FCSalary = CDbl(_FTSlary)


                '------------------ คำนวณคืนพักร้อน ----------------------------

                If (_ReturnVacation > 0) Or (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                    Dim _Month As Integer = 0
                    Dim _Leave As Double = 0
                    Dim _SumLeaveVacation As Double = 0
                    Dim _ResetDate As String = ""

                    Dim _DateReset2 As String



                    _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
                    _Qry &= vbCrLf & "  FROM"
                    _Qry &= vbCrLf & " ("
                    '_Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),convert(date, '" & (_EndDate) & "'),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK )"
                    _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
                    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                    _Qry &= vbCrLf & " ) As T"

                    _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                        ''  MsgBox("a")

                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & ("") & "','" & (_EndDate) & "') AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                    ElseIf _PayTerm = "01" Then
                        ''  MsgBox("b")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'2021/01/01','2021/12/31') AS FNEmpVacation"
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                    Else
                        ''  MsgBox("c")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & (_DateReset) & "','" & (_EndDate) & "') AS FNEmpVacation"
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                    End If


                    _Leave = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                    '' MsgBox(_Leave)
                    If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                        ''    MsgBox("d")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'2022/01/01','" & (_EndDate) & "') AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "


                        _Leave = _Leave + (HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        ''     MsgBox(_Leave)

                    End If

                    If _Leave > 0 And _DateReset <> "" Then

                        _Qry = ""
                        If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98' OR ISNULL(FTStateDeductVacation,'') ='1' )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"

                            ''      MsgBox("e")
                            'Else
                            '    _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            '    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            '    _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            '    _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '    '_Qry &= vbCrLf & " 	AND  FTDateTrans < '" & (_DateReset) & "'"
                            '    _Qry &= vbCrLf & " 	AND  FTDateTrans < Convert(varchar(10),DateAdd(year,1,Convert(Datetime,'" & (_DateReset) & "')),111)"
                            '    '_Qry &= vbCrLf & " 	AND  FTDateTrans >=Convert(varchar(10),DateAdd(year,-1,Convert(Datetime,'" & (_DateReset) & "')),111)"
                            '    _Qry &= vbCrLf & " 	AND  FTDateTrans >='" & (_DateReset) & "'"
                        End If

                        _SumLeaveVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        ''    MsgBox(_SumLeaveVacation)
                        If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            ''       MsgBox("f")
                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '' _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & ("2022/01/01") & "'"

                            _SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                            ''         MsgBox(_SumLeaveVacation)
                        Else
                            ''        MsgBox("g")
                            _Qry = " "
                            '_Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            '_Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            '_Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '_Qry &= vbCrLf & " 	AND  FTDateTrans >= '2022/01/01'"
                            '_Qry &= vbCrLf & " 	AND  FTDateTrans <= '2022/12/31'"
                            '_SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                            '''      MsgBox(_SumLeaveVacation)
                        End If



                        If _ReturnVacation <= 0 Then
                            _Qry = " SELECT   TOP 1 FCCfgRetValue"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigReturnVacationSet WITH(NOLOCK) "
                            _Qry &= vbCrLf & "  WHERE      (FNCalType =" & Val(_EmpType) & ")"

                            _ReturnVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        End If

                        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                        Select Case FNStateSalaryType
                            Case 0 'ต่อเดือน

                                _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.0000000"))
                            Case 1 'ต่อวัน

                                _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                        End Select
                        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                        Dim _FNSlaryPerDayRetVa As Double = 0
                        _FNSlaryPerDayRetVa = HI.Conn.SQLConn.GetField("Select Top 1 FNSalary From THRTPayRoll WITH(NOLOCK) where  FNHSysEmpID = " & Val(_EmpCode) & " and  FTPayYear +'/'+FTPayTerm  <'" & _PayYear & "/" & _PayTerm & "'  Order by FTPayYear +'/'+FTPayTerm DESC ", Conn.DB.DataBaseName.DB_HR, "0")


                        If (_Leave * 480) > _SumLeaveVacation Then

                            '' Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), _Leave, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                            Dim _MoneyRetVacationPerDay = _FNSlaryPerDay

                            Dim _ReteReturnVacPerDay As Double = 0
                            If _FNEmpStatus = "2" Or _FDDateEnd <= _EndDate Then
                                If _WorkAge <= 0 Then
                                    Dim _ReVacationDay As Double = 0
                                    Dim _ReVacationPiad As Double = 0

                                    '  _ReVacationDay = Double.Parse(Format(((_Leave / 26) * _WorkAgeDay), "0.000"))
                                    '  _ReVacationDay = Double.Parse((_Leave / 26) * _WorkAgeDay)
                                    '   _Leave = _ReVacationDay
                                    _ReVacationDay = _Leave
                                End If
                                _ReteReturnVacPerDay = _MoneyRetVacationPerDay
                            Else
                                _ReteReturnVacPerDay = _MoneyRetVacationPerDay  ' CDbl(Format((_FNSlaryPerDayRetVa) / CountDayPerMonth, "0.0000000"))
                                FNVacationPerDayLapaid = _MoneyRetVacationPerDay
                            End If
                            FNVacationRetMin = (_Leave * 480) - _SumLeaveVacation
                            If FNVacationRetMin <= 0 Then
                                FNVacationRetMin = 0
                            End If

                            FNVacationRetAmt = 0
                            'Dim _RetVaclationBal As Double = CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000"))

                            _AmtReturnVacation = CDbl(Format((CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000")) * (_ReturnVacation * (_ReteReturnVacPerDay / 480))), "0.000"))
                            FNVacationRetMin = CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000"))
                            FNVacationRetAmt = _AmtReturnVacation

                        End If

                    End If
                End If
                '------------------ คำนวณคืนพักร้อน ----------------------------

                ''------------------ คำนวณคืนพักร้อน ----------------------------

                ''------------------ คำนวณคืนพักร้อน ----------------------------

                _SocialMinIncome = HCfg.HSocialRate.SocialIncomeMin
                _SocialMaxIncome = HCfg.HSocialRate.SocialIncomeMax
                _SocialRate = HCfg.HSocialRate.CalSocialRate
                _SocialRateCmp = HCfg.HSocialRate.CalSocialRateCmp
                _StateSocialOnlyCmppay = HCfg.HSocialRate.StateSocialOnlyCmppay

                _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
                _AmtPlus = 0

                _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                For Each R3 As DataRow In _dtot.Rows
                    Select Case R3!FTCfgOTCode.ToString.ToUpper
                        Case "01"
                            _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                        Case "02"
                            _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                        Case "03"
                            _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                        Case "04"
                            _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "05"
                            _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                    End Select

                Next

                '---------รายได้รายหัก อื่นๆ-------------------------
                '_Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                '_Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                '_Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                '_Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                '_Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                '_Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"

                '_Qry &= vbCrLf & "   , ISNULL(FN.FTStaLateM,0) FTStaLateM ,  ISNULL(FN.FTStaLateA,0) FTStaLateA "

                '_Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                '_Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                '_Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                '_Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ")   AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                '_Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"




                'If _EmpCalType = "0" Then
                '    If Val(_PayTerm) Mod 2 = 0 Then
                '        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                '    Else
                '        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                '    End If
                'End If
                '---------รายได้รายหัก อื่นๆ-------------------------
                _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay,"
                _Qry &= vbCrLf & " FN.FTStaLatePerDay,FN.FTStaAbsentPerDay,FN.FTStaLeavePerDay,FN.FTStaVacationPerDay,FN.FTStaMaternityleaveNotpayPerDay"
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ") AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"

                If _EmpCalType = "0" Then
                    If Val(_PayTerm) Mod 2 = 0 Then
                        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                    Else
                        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                    End If
                End If
                _Qry &= vbCrLf & "UNION  "
                _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial,  0 As FCFinAmt   , FM.FTFinType"
                _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay,"
                _Qry &= vbCrLf & " FN.FTStaLatePerDay,FN.FTStaAbsentPerDay,FN.FTStaLeavePerDay,FN.FTStaVacationPerDay,FN.FTStaMaternityleaveNotpayPerDay"

                _Qry &= vbCrLf & " FROM        [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)   INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE    (FM.FTFinType = '1' OR FM.FTFinType = '2')   and FN.FTFinCode ='008'  AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)

                If _EmpCalType = "0" Then
                    If Val(_PayTerm) Mod 2 = 0 Then
                        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                    Else
                        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                    End If
                End If
                _Qry &= vbCrLf & " and FN.FTFinCode  not in (  Select FTFinCode From [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin  WITH (NOLOCK)  "
                _Qry &= vbCrLf & " WHERE    (FNHSysEmpID = " & Val(_EmpCode) & ") )"

                ' _Qry &= vbCrLf & "  AND FTPayType <> '" & IIf(_EmpCalType = "0" Or (Val(_PayTerm) Mod 2 = 0), "", "1") & "' "



                _dtAddOtherAmt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)




                _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
                _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
                _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
                _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet"
                _Qry &= vbCrLf & "  WHERE        (FTFinCode = N'001') OR  (FTFinCode = N'007')  AND  FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _GAmtAddCalOT = 0
                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTStaCalOT='1' AND FTPayType='0' ")
                    _GAmtAddCalOT = _GAmtAddCalOT + Val(R2!FCFinAmt.ToString)
                Next

                _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = 0 : _FTOtherAddCalculateTax = 0 : _FCOtherDeduct = 0

                '---------------- Adjust Before Calculate------------------------------------
                _Qry = " SELECT        FN.FTStaTax, FN.FTStaSocial, (ISNULL(BF.FCFinAmt,0))  AS FCFinAmt, FM.FTFinType,ISNULL(BF.FNDay,-1) As FNDay,BF.FTFinCode "
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE        (BF.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "')"
                _Qry &= vbCrLf & "  AND (BF.FTPayTerm = '" & HI.UL.ULF.rpQuoted(_PayTerm) & "') "
                _Qry &= vbCrLf & " AND (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2') AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)

                If _AmtReturnVacation > 0 Then
                    _Qry &= vbCrLf & " UNION ALL "
                    _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial, " & _AmtReturnVacation & "  AS FCFinAmt, FM.FTFinType,-1 As FNDay,FM.FTFinCode "
                    _Qry &= vbCrLf & " FROM     [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)  INNER JOIN"
                    _Qry &= vbCrLf & "          [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE (FM.FTFinCode='019') AND   FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                End If

                _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                For Each R2 As DataRow In _dt.Select("FNDay<=0")
                    Select Case R2!FTFinType.ToString
                        Case "1"
                            _FCOtherAdd = _FCOtherAdd + Val((R2!FCFinAmt.ToString))

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax + Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial + Val((R2!FCFinAmt.ToString))

                        Case "2"

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax - Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial - Val((R2!FCFinAmt.ToString))


                            _FCOtherDeduct = _FCOtherDeduct + Val((R2!FCFinAmt.ToString))
                    End Select
                Next

                _DayAdjAdd = 0
                _WageAdjAdd = 0

                For Each R2 As DataRow In _dt.Select("FNDay> 0")

                    _DayAdjAdd = _DayAdjAdd + Val((R2!FNDay.ToString))
                    _WageAdjAdd = _WageAdjAdd + Val((R2!FCFinAmt.ToString))

                Next

                _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
                _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= 480 THEN 480   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= 480 THEN 480   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= 480 THEN 480 ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
                _Qry &= vbCrLf & " , FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO,Max(ISNULL(FTStateMedicalCertificate,'')) AS FTStateMedicalCertificate "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_EmpCode) & " )"

                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_DateStartOfMonth) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_DateEndOfMonth) & "' "
                Else
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                End If

                _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

                _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	,Isnull(SH.FNRatePaid,1) AS FNRatePaid , Isnull(SH.FNStateShift,0) AS FNStateShift  "
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) )     AS FNTime"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT1_5,0) AS FNOT1_5"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT2,0 ) AS FNOT2  , ISNULL(T.FNOT3,0) AS FNOT3, ISNULL(T.FNOT4,0) AS FNOT4"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(T.FNLateNormalCut,0 )   AS FNLateNormalCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateOtMin,0) As FNLateOtMin,ISNULL(T.FNLateOtCut,0) As FNLateOtCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateMMin,0) As FNLateMorning"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateAfMin,0) AS FNLateAfternoon,Isnull(T.FNAbsentCut,0) AS FNAbsentCut "
                _Qry &= vbCrLf & " 	, (CASE WHEN ISNULL(T.FNAbsentSP,0) = ISNULL(T.FNAbsent,0) THEN 0 ELSE  ISNULL(T.FNAbsent,0)  END ) AS FNAbsent_Cut "
                _Qry &= vbCrLf & " 	, ISNULL(T.FNCutAbsent,0) AS FNAbsent "
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) )   AS FNTimeMin"
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0)) As FNTimeMinOrg"
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1Min,0) As FNOT1Min  "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1_5Min,0) As FNOT1_5Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNOT2Min,0) As FNOT2Min "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNLateMMin,0) AS FNLateMMin "
                _Qry &= vbCrLf & " , ISNULL(T.FNLateAfMin,0) AS FNLateAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireMMin,0) AS FNRetireMMin "
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireAfMin,0 )  as FNRetireAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireNormalCut,0) As FNRetireNormalCut "
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireOtMin,0) AS FNRetireOtMin"
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"
                _Qry &= vbCrLf & " ,CASE WHEN T.FTWeekDay=1 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSunday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSunday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=2 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTMonday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTMonday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=3 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTTuesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTTuesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=4 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTWednesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTWednesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=5 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTThursday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTThursday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=6 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTFriday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTFriday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=7 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSaturday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSaturday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  ELSE '0' END AS FTWeekly,ISNULL(FTStateAccept,'') AS FTStateAccept "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
                _Qry &= vbCrLf & "   INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK)  ON  T.FNHSysEmpID =  M.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeWeekly AS EHL WITH (NOLOCK) ON T.FNHSysEmpID=EHL.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmpTypeWeeklySpecial AS ETHL WITH (NOLOCK) ON T.FTDateTrans = ETHL.FDHolidayDate AND M.FNHSysEmpTypeId=ETHL.FNHSysEmpTypeId"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS SH WITH (NOLOCK) ON T.FNHSysShiftID = SH.FNHSysShiftID"

                _Qry &= vbCrLf & "  WHERE (T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "'  "

                If _FDDateEnd <> "" Then
                    _Qry &= vbCrLf & " 	AND T.FTDateTrans < '" & HI.UL.ULDate.ConvertEnDB(_FDDateEnd) & "'  "
                End If
                If _FTEmpState <> "2" And _FTEmpState <> "3" Then ' คำนวณค่าแรงพนักงานรายเดือน
                    _Qry &= vbCrLf & " 	AND T.FTStateAccept = '1'  "
                End If

                _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '---------------Get Trans Daily--------------------------------------
                _GFNTime = 0 : _GFNNotRegis = 0 : _GFNOT1 = 0 : _GFNOT1_5 = 0
                _GFNOT2 = 0 : _GFNOT3 = 0 : _GFNOT4 = 0 : _GFNLeaveSick = 0 : _GFNLeaveBusiness = 0
                _GFNLeaveVacation = 0 : _GFNLeavePregnant = 0 : _GFNLeaveOrdain = 0 : _GFNLeaveMarry = 0 : _GFNLeaveSpecial = 0
                _GFNLeaveOther = 0 : _GFNLateNormalMin = 0 : _GFNLateNormalCut = 0 : _GFNLateOtMin = 0
                _GFNLateOtCut = 0 : _GFNLateMorning = 0 : _GFNLateAfternoon = 0
                _GFNAbsent = 0 : _GFNCutAbsent = 0 : _GFNLeavePay = 0 : _GFNTimeMin = 0 : _GFNOT1Min = 0 : _GFNOT1_5Min = 0 : _GFNTimeMin_Real_After_Probation = 0
                _GFNOT2Min = 0 : _GFNOT3Min = 0 : _GFNLateMMin = 0 : _GFNLateAfMin = 0 : _GFNRetireMMin = 0
                _GFNRetireAfMin = 0 : _GFNRetireNormalCut = 0 : _GFNRetireOtMin = 0 : _GFNRetireOtCut = 0
                _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
                _Gtotalleave = 0 : _GtotalleavePay = 0 : _GtotalleaveNotPay = 0 : _GtotalleavePayCalSso = 0 : _GtotalleavePayCalSsoAmt = 0
                _TotalHoliDay = 0
                _GFNLateNormalMinNotHoliday = 0

                '------------------- เริ่มการคำนวณรายวัน
                Dim _oHoliday As Integer = 0

                _TotalWorkDay = 0
                _ShiftAmt = 0
                _ShiftValue = 0
                _ShiftOTValue = 0
                _ShiftOTAmt = 0
                _FCAdd = 0 : _FTAddCalculateSocial = 0 : _FTAddCalculateTax = 0 : _FCDeduct = 0
                _GAmtPlus = 0

                Dim _RateShipftPerDay As Double = 0
                Dim _StateShift As Integer = 0
                If _FDDateStart > _FTSatrtCalculateDate Then _FTSatrtCalculateDate = _FDDateStart

                Dim _fnMonthWorkAge As Integer = 0

                Dim temp As Date
                Dim temp1 As Integer
                Dim i As Integer
                Dim day1 As Integer
                Dim day2 As Integer

                Dim Day As Integer
                Dim Month As Integer







                Do While _FTSatrtCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTSatrtCalculateDate < _FDDateEnd)

                    ''  _fnMonthWorkAge = DateDiff("m", _FDDateStart, HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate))



                    temp1 = DateDiff("m", HI.UL.ULDate.ConvertEnDB(_FDDateStart), HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate))

                    day1 = DatePart("d", HI.UL.ULDate.ConvertEnDB(_FDDateStart))
                    day2 = DatePart("d", HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate))
                    If day1 > day2 Then
                        temp = DateAdd("m", (temp1 - 1), HI.UL.ULDate.ConvertEnDB(_FDDateStart))
                        Month = (temp1 - 1)
                    Else
                        temp = DateAdd("m", (temp1), HI.UL.ULDate.ConvertEnDB(_FDDateStart))
                        Month = (temp1)
                    End If

                    For i = 1 To 31
                        If temp = HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) Then Exit For
                        temp = DateAdd("d", 1, temp)
                    Next i

                    Day = (i - 1)

                    For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & Month & " AND  FNWorkAgeEnd>=" & Month & " ")
                        _FNWorkAgeSalary = _FNWorkAgeSalary + Val(ZRow!FNWorkAgeAmt.ToString)

                    Next

                    'For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & Month() & " AND  FNWorkAgeEnd>=" & Month() & " ")
                    '    _FNWorkAgeSalary = _FNWorkAgeSalary + Val(ZRow!FNWorkAgeAmt.ToString)

                    'Next


                    'If (_EndDate >= Left(_StartDate, 8) & "07" And _EndDate <= Left(_StartDate, 8) & "24") Then
                    'For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & _fnMonthWorkAge & " AND  FNWorkAgeEnd>=" & _fnMonthWorkAge & " ")
                    '        _FNWorkAgeSalary = _FNWorkAgeSalary + Val(ZRow!FNWorkAgeAmt.ToString)


                    'Next
                    'End If

                    _RateShipftPerDay = 0
                    _oHoliday = 0
                    FTHldType = 0
                    _StateShift = 0
                    Dim _NewSlary As String

                    _Qry = "  SELECT   TOP 1   FNCurrentSlary  AS AMT"
                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK) "
                    _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "') "
                    _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    _FCSalary = _MSlary
                    If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    _Holiday = ""

                    For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                        _Holiday = "H"
                        FTHldType = Val(IR!FTHldType.ToString)
                        Exit For
                    Next

                    _FTShift = ""

                    _FNTime = 0
                    _FNNotRegis = 0
                    _FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
                    _FNOT3 = 0 : _FNOT4 = 0
                    _FNLateNormalMin = 0 : _FNLateNormalCut = 0
                    _FNLateOtMin = 0 : _FNLateOtCut = 0
                    _FNLateMorning = 0 : _FNLateAfternoon = 0
                    _LateCutAbsent = 0 : _FNAbsent = 0
                    _FNTimeMin = 0 : _FNOT1Min = 0
                    _FNOT1_5Min = 0 : _FNOT2Min = 0
                    _FNOT3Min = 0 : _FNOT4Min = 0
                    _FNLateMMin = 0 : _FNLateAfMin = 0
                    _FNRetireMMin = 0 : _FNRetireAfMin = 0
                    _FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
                    _FNRetireOtMin = 0 : _FNRetireOtMin = 0
                    _FNRetireOtCut = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _AmtAddCalOT = 0
                    _GtotalleavePayCalSso = 0
                    _LeaveCode = ""










                    Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                    Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                    For Each R2 In _R

                        _RatePay = Double.Parse("0" & R2!FNRatePaid.ToString)
                        _RateShipftPerDay = _RatePay
                        _StateShift = Integer.Parse("0" & R2!FNStateShift.ToString)

                        _FTShift = R2!FTShift.ToString
                        _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                        _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                        _FNNotRegis = Val(R2!FNNotRegis.ToString)
                        _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                        _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                        _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                        _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                        _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                        _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent_Cut.ToString)
                        _FNOT1Min = Val(R2!FNOT1Min.ToString)
                        _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                        _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                        _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                        _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                        _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                        _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                        _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                        _InOT = R2!FTIn3.ToString
                        _OutOT = R2!FTOut3.ToString

                        _Over = R2!FTOverClock.ToString

                        If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            _TotalWorkDay = _TotalWorkDay + 1

                            _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                            If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                If _FNOT1Min + _FNOT2Min + _FNOT4Min + _FNOT1_5Min > 0 Then
                                    '' _FNNetOTMealAmt = _FNNetOTMealAmt + _FNOTMealAmt
                                End If

                                _SPDateType = 0

                                _Holiday = ""

                                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _Holiday = "H"
                                    Exit For
                                Next

                                If _Holiday <> "" Then _SPDateType = 2

                                Dim _StateLeaveOther As Boolean = False
                                Dim _StateLeavacation As Boolean = False
                                Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                Dim _SumLeave As Integer = 0

                                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                    If Val(sR!LeaveType) = 1 Then
                                        _StateLeavacation = True
                                    Else
                                        _StateLeaveOther = True
                                    End If

                                    If Val(sR!LeaveType) = 2 Then
                                        _StateFTStaMaternityleaveNotpay = True
                                    End If

                                Next

                                '--------------------------- ค่ากะ -------------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)



                                    If _StatePass Then
                                        _ShiftAmt = _ShiftAmt + _ShiftValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ -------------------------------------



                                ''--------------   incentive Header 
                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='011' ")




                                Next


                                '****************************** Bonus 

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='008' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        Dim _Amt As Double = 0
                                        Dim _Cmd As String = ""
                                        _Cmd = "Select Top 1 isnull(FNAmt,0) AS  FNAmt From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus with(nolock)"
                                        _Cmd &= vbCrLf & "where FNHSysEmpID=" & Integer.Parse(_EmpCode)
                                        _Cmd &= vbCrLf & "and FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'"
                                        _Amt = Double.Parse(HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "0"))
                                        _BonusAmt = _BonusAmt + _Amt

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _Amt
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _Amt
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _Amt
                                    End If
                                Next


                                '****************************** End Bonus

                                '--------------------------- ค่ากะ OT ----------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        _ShiftOTAmt = _ShiftOTAmt + _ShiftOTValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftOTValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftOTValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftOTValue

                                    End If

                                Next
                                '--------------------------- ค่ากะ OT ----------------------------------

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='0' And FTFinCode<>'057' And FTFinCode<>'043' And FTFinCode<>'061'  And FTFinCode<>'062' And FTFinCode<>'063' And FTFinCode<>'064' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then

                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + Val(RFin!FCFinAmt.ToString)

                                        If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                            _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                        Else

                                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                            Next

                                        End If
                                    End If
                                Next
                            End If
                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                        End If

                    Next


                    'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                    Select Case FNStateSalaryType
                        Case 0 'ต่อเดือน
                            _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.000"))
                            _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                            ' _SalaryPayLeave = CDbl(Format((_FCSalary) / 26, "0.000")) ' ลาป่วย หารวันทำงานในงวด  meeting 20180227 pMote , pWest , pTuk cd , pAnuwat 

                            _SalaryPayLeave = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                        Case 1 'ต่อวัน
                            _FNSlaryPerMonth = CDbl(Format((_FCSalary * CountDayPerMonth), "0.000"))
                            _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.000"))
                            _SalaryPayLeave = _FNSlaryPerDay
                    End Select
                    'เพิ่มค่าแรง กัมพูชา 20161206
                    '  _SalaryPayLeave = _FNSlaryPerDay
                    _FNSlaryPerMonth = _FNSlaryPerMonth
                    _FNSlaryPerDay = _FNSlaryPerDay
                    _SalaryPayOTKM = _FNSlaryPerDay


                    'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ

                    If _RateShipftPerDay > 1 Then
                        _FNSlaryPerDay = _FNSlaryPerDay * _RateShipftPerDay
                    End If

                    If _StateShift = 1 Then
                        _Qry = " SELECT FTCfgOTCode,Isnull(FCCfgOTNightValue,0) as  FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus   "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    Else
                        _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    End If




                    _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000"))
                    _FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000"))
                    '_SalaryPayLeaveMin = CDbl(Format(CDbl(Format(_SalaryPayLeave / 8, "0.00000")) / 60, "0.00000"))
                    _SalaryPayLeaveMin = CDbl(_SalaryPayLeave / 8) / 60

                    _FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_SalaryPayOTKM + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000")) / 60, "0.00000"))

                    _FNSlaryOTPerHour = CDbl(Format((_SalaryPayOTKM + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000"))

                    If _FTShift = "" Then
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If
                    Else

                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If

                        If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _WorkDay = _WorkDay + 1
                        End If

                        If _Holiday = "" Then
                            _GFNLateNormalMinNotHoliday = _GFNLateNormalMinNotHoliday + _FNLateNormalMin
                        End If

                        _GFNLateNormalMin = _GFNLateNormalMin + _FNLateNormalMin
                        _GFNLateNormalCut = _GFNLateNormalCut + _FNLateNormalCut
                        _GFNLateOtMin = _GFNLateOtMin + _FNLateOtMin
                        _GFNLateOtCut = _GFNLateOtCut + _FNLateOtCut
                        _GFNLateMorning = _GFNLateMorning + _FNLateMorning
                        _GFNLateAfternoon = _GFNLateAfternoon + _FNLateAfternoon
                        _GFNAbsent = _GFNAbsent + _FNAbsent
                        _GFNCutAbsent = _GFNCutAbsent + _LateCutAbsent
                        _GFNTimeMin = _GFNTimeMin + _FNTimeMin
                        _GFNOT1Min = _GFNOT1Min + _FNOT1Min
                        _GFNOT1_5Min = _GFNOT1_5Min + _FNOT1_5Min
                        _GFNOT2Min = _GFNOT2Min + _FNOT2Min
                        _GFNOT3Min = _GFNOT3Min + _FNOT3Min
                        _GFNOT4Min = _GFNOT4Min + _FNOT4Min
                        _GFNLateMMin = _GFNLateMMin + _FNLateMMin
                        _GFNLateAfMin = _GFNLateAfMin + _FNLateAfMin
                        _GFNRetireOtMin = _GFNRetireOtMin + _FNRetireOtMin
                        _GFNRetireOtCut = _GFNRetireOtCut + _FNRetireOtCut
                        _GFNRetireMMin = _GFNRetireMMin + _FNRetireMMin
                        _GFNRetireAfMin = _GFNRetireAfMin + _FNRetireAfMin
                        _GFNRetireNormalCut = _GFNRetireNormalCut + _FNRetireNormalCut

                        If HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) >= HI.UL.ULDate.ConvertEnDB(_FDDateProbation) Then
                            _GFNTimeMin_Real_After_Probation = _GFNTimeMin_Real_After_Probation + (_FNTimeMin - _FNLateNormalMin)
                        End If



                    End If

                    _TmpLeavePay = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0 : FNPayLeaveSpecialBahtMin = 0
                    _FNLeaveNotPay = 0
                    _LeaveCode = ""
                    For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' ")
                        _LeaveCode = sR!LFTLeaveCode.ToString

                        _TmpLeavePay = Val(sR!FNTotalPayMinute.ToString)

                        Select Case sR!LFTLeaveCode.ToString.ToUpper
                            Case "97"

                            Case Else

                                _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                                _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                                _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                                If sR!FTStaCalSSO.ToString = "1" Then
                                    _GtotalleavePayCalSso = Val(sR!FNTotalPayMinute.ToString)
                                End If
                        End Select

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        Select Case sR!LFTLeaveCode.ToString.ToUpper '""Val(sR!LeaveType)
                            Case "98"
                                _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                            Case "998"
                                _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                            Case "1"
                                FNPayLeaveBusinessBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveBusinessBahtMin = GFNPayLeaveBusinessBahtMin + FNPayLeaveBusinessBahtMin

                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                            Case "0"

                                FNPayLeaveSickBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveSickBahtMin = GFNPayLeaveSickBahtMin + FNPayLeaveSickBahtMin
                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)

                                If FNPayLeaveSickBahtMin > 0 Then
                                    _LeaveSickPay = _LeaveSickPay + 1

                                    Dim _PayPer As Double = 0
                                    Select Case _LeaveSickPay
                                        Case Is <= 30
                                            _PayPer = 100
                                        Case Is <= 90
                                            _PayPer = 60
                                        Case Is <= 180
                                            _PayPer = 0
                                    End Select

                                    If _PayPer = 0 Then
                                        FNPayLeaveSickBahtMin = 0
                                        GFNPayLeaveSickBahtMin = GFNPayLeaveSickBahtMin - FNPayLeaveSickBahtMin
                                        _GFNLeaveOther = _GFNLeaveOther - FNPayLeaveSickBahtMin
                                    End If

                                    If _DTEmpPayLeaveSick.Select("FNSalary=" & _SalaryPayLeave & " AND FNPayPer=" & _PayPer & " ").Length > 0 Then
                                        For Each Rx As DataRow In _DTEmpPayLeaveSick.Select("FNSalary=" & _SalaryPayLeave & "  AND FNPayPer=" & _PayPer & "  ")
                                            Rx!FNDay = Val(Rx!FNDay) + FNPayLeaveSickBahtMin
                                            Exit For
                                        Next
                                    Else
                                        _DTEmpPayLeaveSick.Rows.Add(_SalaryPayLeave, FNPayLeaveSickBahtMin, _PayPer)
                                    End If


                                End If


                            Case "999"
                                FNPayLeaveSpecialBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveSpecial = _GFNLeaveSpecial + FNPayLeaveSpecialBahtMin
                            Case "97"
                                FNParturitionLeaveMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNParturitionLeaveMin = GFNParturitionLeaveMin + FNParturitionLeaveMin

                                ' _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                            Case Else
                                _FNLeavePay = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End Select

                    Next

                    _GFNLeavePay = _GFNLeavePay + _FNLeavePay
                    _SocialBefore = 0
                    _SocialBeforeAmt = 0

                    Dim _WageAmtPerDay As Double = 0
                    Dim _WageOTAmtPerDay As Double = 0
                    Dim _TimeOTMdr As Integer = 0

                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    Else
                        _WageAmtPerDay = CDbl(Format((_FNTimeMin) * _FNSlaryPerMin, "0.000"))
                        _FNEmpBaht = _FNEmpBaht + _WageAmtPerDay
                    End If

                    _nBahtOt1 = _nBahtOt1 + CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000"))


                    If FTHldType = 1 And _FNOT3Min > 0 Then
                        _GAmtPlus = _GAmtPlus + _AmtPlus
                    End If

                    _nBahtOt15 = _nBahtOt15 + CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.000"))

                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.000"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.000"))

                    _LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.000"))

                    Dim _TmpFNLapaidAmt As Double = CDbl(Format(_TmpLeavePay * _SalaryPayLeaveMin, "0.000"))
                    Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _SalaryPayLeaveMin, "0.000"))

                    _Lapaid = _Lapaid + _TmpLapaidAmt
                    _GtotalleavePayCalSsoAmt = _GtotalleavePayCalSsoAmt + CDbl(Format(_GtotalleavePayCalSso * _SalaryPayLeaveMin, "0.000"))  'เงินลาจ่ายที่นำไปคิดประกันสังคม

                    If _LeaveCode <> "" And _FNLeaveVacation > 0 Then

                        'Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                        '_FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * (_MoneyRetVacationPerDay / 480), "0.000"))

                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    Else
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.000"))
                    End If

                    If _FTStatePayHoliday <> "1" Then
                        _oHoliday = 0
                    Else

                        If (_FNLeaveNotPay <= 0) Then
                            If _TmpFNLapaidAmt <= 0 Then
                                _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.000"))
                            Else
                                _TotalHoliDay = _TotalHoliDay - _oHoliday
                                _oHoliday = 0
                            End If
                        Else

                            _TotalHoliDay = _TotalHoliDay - _oHoliday
                            _oHoliday = 0
                        End If

                    End If

                    _FNSlaryPerDayNormal = CDbl(Format(_FNSlaryPerDay, "0.00000"))

                    If _DTEmpWorkDay.Select("FNSalary=" & _FNSlaryPerDay & "").Length > 0 Then
                        For Each Rx As DataRow In _DTEmpWorkDay.Select("FNSalary=" & _FNSlaryPerDay & "")

                            Rx!FNDay = Val(Rx!FNDay) + _FNTimeMin
                            Rx!FNOT1 = Val(Rx!FNOT1) + _FNOT1Min
                            Rx!FNOT15 = Val(Rx!FNOT15) + _FNOT1_5Min
                            Rx!FNOT2 = Val(Rx!FNOT2) + _FNOT2Min
                            Rx!FNOT3 = Val(Rx!FNOT3) + _FNOT3Min
                            Rx!FNOT4 = Val(Rx!FNOT4) + _FNOT4Min
                            Rx!FNHoloday = Val(Rx!FNHoloday) + (_oHoliday)
                            Rx!FNLate = Val(Rx!FNLate) + _FNLateNormalCut
                            Rx!FNAbsent = Val(Rx!FNAbsent) + _FNAbsent
                            Rx!FNLateCutAmtAbsent = Val(Rx!FNLateCutAmtAbsent) + _LateCutAbsent
                            Rx!FNLeavePay = Val(Rx!FNLeavePay) + _FNLeavePay
                            Rx!FNLeaveNotPay = Val(Rx!FNLeaveNotPay) + (_FNLeaveNotPay)
                            Rx!FNBusiness = Val(Rx!FNBusiness) + FNPayLeaveBusinessBahtMin
                            Rx!FNSpecial = Val(Rx!FNSpecial) + FNPayLeaveSpecialBahtMin
                            Rx!FNParturition = Val(Rx!FNParturition) + FNParturitionLeaveMin
                            Rx!FNVacation = Val(Rx!FNVacation) + _FNLeaveVacation
                            Rx!FNShiftNo = _StateShift
                            Rx!FNSlaryOTPerMin = _FNSlaryOTPerMin
                            Rx!FNSlaryNormal = _FNSlaryPerDayNormal
                            Exit For
                        Next
                    Else
                        _DTEmpWorkDay.Rows.Add(_FNSlaryPerDay, _FNTimeMin, _FNOT1Min, _FNOT1_5Min,
                                               _FNOT2Min, _FNOT3Min, _FNOT4Min, (_oHoliday),
                                               _FNLateNormalCut, _FNAbsent, _LateCutAbsent, _FNLeavePay,
                                               _FNLeaveNotPay, FNPayLeaveBusinessBahtMin, FNPayLeaveSpecialBahtMin, FNParturitionLeaveMin, _FNLeaveVacation, _StateShift, _FNSlaryOTPerMin, _FNSlaryPerDayNormal)
                    End If

                    _FTSatrtCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTSatrtCalculateDate, 1))

                Loop

                _FNEmpBaht = 0
                _FNEmpBaht = 0
                _nBahtOt1 = 0
                _nBahtOt15 = 0
                _nBahtOt2 = 0
                _nBahtOt3 = 0
                _nBahtOt4 = 0
                _nBahtAbsent = 0
                _LateCutAmt = 0
                _LateCutAmtAbsent = 0
                _HBaht = 0
                _LaNotpaid = 0
                _Lapaid = 0
                FNPayLeaveBusinessBaht = 0 : FNPayLeaveSickBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0
                _FCPayVacationBaht = 0
                _FNSlaryOTPerMin = 0
                Dim _TotalxDay As Integer = 0

                Dim _FNEmpBahtShiftDiff As Double = 0

                Dim FullPreroid As String = ""
                If (_FDDateEnd = "" Or _FTSatrtCalculateDate < _FDDateEnd) And _FDDateStart <= _StartDate Then ''_FTEndCalculateDate
                    FullPreroid = "Y"
                End If


                Dim _FNDaySickPay As Integer = 0
                For Each RxS As DataRow In _DTEmpPayLeaveSick.Rows
                    _FNDaySickPay = _FNDaySickPay + Val(RxS!FNDay)
                Next


                Dim _FNDay As Integer = 0

                For Each Rx As DataRow In _DTEmpWorkDay.Rows

                    _FNDay = _FNDay + Val(Rx!FNDay)

                    _FNSlaryPerMin = CDbl(Format(CDbl(Rx!FNSalary) / 480, "0.00000"))
                    _FNSlaryPerDay = CDbl(Format(CDbl(Rx!FNSalary), "0.00000"))
                    _FNSlaryOTPerMin = Double.Parse("0" & Rx!FNSlaryOTPerMin)

                    _TotalxDay = 0

                    If _DTEmpWorkDay.Rows.Count > 1 Then


                        If Rx!FNShiftNo = 1 And Val(Rx!FNDay) > 0 Then
                            'หาเงินส่วนต่าง ค่าแรงกะกลางคืน 
                            _FNEmpBahtShiftDiff = _FNEmpBahtShiftDiff + (CDbl(Format(CDbl(Rx!FNSalary) * (Rx!FNDay / 480), "0.00000")) - CDbl(Format(CDbl(Rx!FNSlaryNormal) * (Rx!FNDay / 480), "0.00000")))

                            'ElseIf Rx!FNDay > 0 And Rx!FNDay < 12 Then
                            '    _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (Rx!FNDay / 480), "0.00000"))
                        ElseIf FullPreroid = "Y" Then
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_FNSlaryPerMonth / 2, "0.000"))
                        ElseIf _FNDay < 6240 Then
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (_FNDay / 480), "0.00000"))
                        Else
                            '_FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSalary) * Rx!FNTotalDay, "0.00000"))

                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_FNSlaryPerMonth / 2, "0.000"))
                        End If


                    Else

                        If _FNDay > 0 And _FNDay < 5760 And Rx!FNParturition > 1 Then ''หักเงินเดือนปกติของวันที่ลาคลอด
                            ''_FNEmpBaht = _FNEmpBaht + (CDbl(Format(_FNSlaryPerMonth / 2, "0.000")) - CDbl(Format(CDbl(Rx!FNSlaryNormal) * (Rx!FNParturition / 480), "0.00000")))
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (_FNDay / 480), "0.00000"))

                        ElseIf FullPreroid = "Y" And _FNDay = 0 And _FNDaySickPay > 0 Then '' เต็มงวด  ไม่มีเวลาทำงาน  มีลาป่วยจ่าย
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (_FNDaySickPay / 480), "0.00000"))
                        ElseIf FullPreroid = "Y" Then
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_FNSlaryPerMonth / 2, "0.000"))
                        ElseIf (_FDDateEnd <> "" And _FDDateEnd <= _FTEndCalculateDate) Or _FDDateStart > _StartDate Then ''ลาออกระหว่างงวด ''เริ่มงานระหว่างงวด
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (_FNDay / 480), "0.00000"))
                        ElseIf _FNDay < 6240 Then
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(CDbl(Rx!FNSlaryNormal) * (_FNDay / 480), "0.00000"))
                        Else
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_FNSlaryPerMonth / 2, "0.000"))

                        End If

                    End If


                    'Try
                    '    If FNWorkDayInWeekBF > 0 Then
                    '        'If Val(Rx!FNDay) > ((FNWorkDayInMonth - FNWorkDayInWeekBF) * 480) Then
                    '        '    _FNEmpBaht = _FNEmpBaht + CDbl(Format(((FNWorkDayInMonth - FNWorkDayInWeekBF) * 480) * _FNSlaryPerMin, "0.000"))
                    '        'Else

                    '        _TotalxDay = Val(Rx!FNDay) \ 480.0
                    '        _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                    '        _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                    '        ' End If
                    '    Else
                    '        _TotalxDay = Val(Rx!FNDay) \ 480.0
                    '        _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                    '        _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                    '    End If
                    'Catch ex As Exception
                    '    _TotalxDay = Val(Rx!FNDay) \ 480.0
                    '    _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                    '    _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                    'End Try


                    If Double.Parse(Rx!FNShiftNo.ToString) = 1 Then
                        _Qry = " SELECT FTCfgOTCode,Isnull(FCCfgOTNightValue,0) as  FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus   "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    Else
                        _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    End If



                    _nBahtOt1 = _nBahtOt1 + CDbl(Format(Val(Rx!FNOT1) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000"))
                    _nBahtOt15 = _nBahtOt15 + CDbl(Format(Val(Rx!FNOT15) * ((_FNSlaryOTPerMin) * _RateOT15), "0.000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format(Val(Rx!FNOT2) * ((_FNSlaryOTPerMin) * _RateOT2), "0.000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format(Val(Rx!FNOT3) * ((_FNSlaryOTPerMin) * _RateOT3), "0.000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format(Val(Rx!FNOT4) * ((_FNSlaryOTPerMin) * _RateOT4), "0.000"))
                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(Val(Rx!FNAbsent) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((Val(Rx!FNLate)) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((Val(Rx!FNLateCutAmtAbsent)) * _FNSlaryPerMin, "0.000"))
                    _HBaht = _HBaht + CDbl(Format(Val(Rx!FNHoloday) * CDbl(Rx!FNSalary), "0.000"))
                    _LaNotpaid = _LaNotpaid + CDbl(Format(Val(Rx!FNLeaveNotPay) * _FNSlaryOTPerMin, "0.000"))
                    _Lapaid = _Lapaid + CDbl(Format(Val(Rx!FNLeavePay) * _SalaryPayLeaveMin, "0.000"))
                    FNPayLeaveBusinessBaht = FNPayLeaveBusinessBaht + CDbl(Format(Val(Rx!FNBusiness) * _FNSlaryPerMin, "0.000"))

                    ' FNParturitionLeave = FNParturitionLeave + CDbl(Format(Val(Rx!FNParturition) * _FNSlaryPerMin, "0.000"))

                    '' Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                    Dim _MoneyRetVacationPerDay = _FNSlaryPerDay


                    '  MsgBox(_MoneyRetVacationPerDay)
                    _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(Val(Rx!FNVacation) * (_MoneyRetVacationPerDay / 480), "0.000"))
                    '   MsgBox(Val(Rx!FNVacation))
                    ' MsgBox(_FCPayVacationBaht)
                    _FCDeductSourceVacationBaht = _FCDeductSourceVacationBaht + CDbl(Format(Val(Rx!FNVacation) * _MoneyRetVacationPerDay / 480, "0.000"))

                    FNPayLeaveSpecialBaht = FNPayLeaveSpecialBaht + CDbl(Format(Val(Rx!FNSpecial) * (_MoneyRetVacationPerDay / 480), "0.000"))
                    GFNPayLeaveSpecialBahtMin = Val(Rx!FNSpecial)
                    FNVacationRetMin = Val(Rx!FNVacation)
                Next

                FNParturitionLeave = 0
                GFNParturitionLeaveMin = 0
                Dim _DeductAttandanceAmt As Double = 0
                Call CalculateParturition(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), FNParturitionLeave, GFNParturitionLeaveMin, _DeductAttandanceAmt, _WorkAge, _WorkAgeParturition, FNParturitionLeaveReCalTax)

                FNPayLeaveSickBaht = 0
                For Each Rx As DataRow In _DTEmpPayLeaveSick.Rows
                    _FNSlaryPerMin = (CDbl(CDbl(Rx!FNSalary) / 480) * CDbl(Rx!FNPayPer)) / 100.0
                    FNPayLeaveSickBaht = FNPayLeaveSickBaht + CDbl(Format(Val(Rx!FNDay) * _FNSlaryPerMin, "0.000"))
                Next

                ''_FNNetOTMealAmtUS = Format(_FNNetOTMealAmt / _FNExchangeRate, "0.000")

                If _FDDateEnd <> "" And _FDDateEnd <= _TmpFDDateEndP Then
                    'ลาออกในงวดแรก อายุงาน มากกว่า 13 วัน  จ่ายค่าเดินทาง & ค่าสุขภาพ เต็มเดือน

                    'If _WorkAge >= 1 Or _WorkingDayN > 13 Then
                    '    If Val(_PayTerm) Mod 2 = 1 Then
                    '        _FNTransportAmt = _FNTransportAmt + _FNTransportAmt
                    '        _FNHealtCareAmt = _FNHealtCareAmt + _FNHealtCareAmt
                    '    End If
                    'End If
                End If


                If _FTEmpState = "2" Or _FTEmpState = "3" Or (_FDDateEnd <= _EndDate And _FDDateEnd <> "") Then

                    FNPayLeaveBusinessBahtMin = 0 : FNPayLeaveSickBahtMin = 0 : FNPayLeaveSpecialBahtMin = 0 : FNParturitionLeaveMin = 0
                    GFNPayLeaveBusinessBahtMin = 0 : GFNPayLeaveSickBahtMin = 0 : GFNParturitionLeaveMin = 0
                    FNPayLeaveBusinessBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0
                    'FNPayLeaveSickBaht = 0 : ไม่มี เคสคำนวณ ในกรณีลาออก ใช้จากคำนวณปกติ

                    If _dttran.Select("FTStateAccept<>'1' AND FTWeekly <>'1' ").Length > 0 Or _dttran.Rows.Count <= 0 Then
                        Return False
                    End If


                    _Gtotalleave = 0
                    _GtotalleavePay = 0
                    _GtotalleaveNotPay = 0
                    _GFNLeaveOther = 0
                    _GFNLeavePay = 0
                    _GtotalleavePayCalSso = 0
                    _LaNotpaid = 0

                    Dim _NewSlary As String = ""

                    For Each sR As DataRow In _dtLeave.Rows

                        _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                        _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                        _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                        If sR!FTStaCalSSO.ToString = "1" Then
                            _GtotalleavePayCalSso = Val(sR!FNTotalPayMinute.ToString)
                        End If

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            '_FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                            '_GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                        Else
                            _GFNLeavePay = _GFNLeavePay + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End If

                    Next

                    _LaNotpaid = CDbl(Format(_GtotalleaveNotPay * _FNSlaryPerMin, "0.000"))

                    If _LaNotpaid > _FNSlaryPerMonth Then
                        _LaNotpaid = _FNSlaryPerMonth
                    End If

                    _WorkingDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_DateEndOfMonth))) + 1




                    If _WorkingDay > 30 Then _WorkingDay = 30

                    _WorkingDay = CDbl(Format(((_WorkingDay * 480) - (_Gtotalleave)) / 480, "0.000"))
                    _WorkingDay = _WorkingDay - (_GFNAbsent / 480)
                    If _WorkingDay < 0 Then
                        _WorkingDay = 0
                    End If

                Else
                    _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.000"))
                End If
                _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.000"))  '2018/03/02 ยกมา คำนวณคนลาออก ไม่ตรง

                '-----------calculate Other Add For KKN ------------------ 
                Dim _ChkLeave As Integer = 0
                For Each sR As DataRow In _dtLeave.Select("LFTLeaveCode='0' OR LFTLeaveCode='1' OR LFTLeaveCode='2' OR LFTLeaveCode='3' ")
                    _ChkLeave = _ChkLeave + Val(sR!FNTotalMinute.ToString)
                Next
                '_DateStartOfMonth = _StartDate  'วันแรกของเดือน
                '_DateEndOfMonth = _EndDate 'วันแของเดือน
                _FNNetAttandanceAmt = 0
                '  If (_FTEmpState = "2" Or (_FTEmpState <> "2" And _StartDate <= Left(_StartDate, 8) & "24" And _EndDate >= Left(_StartDate, 8) & "24")) And _FNAttandanceAmt > 0 Then

                Dim ChkParturitionLeaveMin As Integer = 0




                'If _WorkingDay = 0 Then
                '    _FNNetAttandanceAmt = 0
                'End If
                '-----------calculate Other Add For KKN ------------------
                _WorkingDay = _WorkingDay + _DayAdjAdd

                _GFNTimeMin = _GFNTimeMin + (_DayAdjAdd * 480)
                _FNEmpBaht = _FNEmpBaht + _WageAdjAdd
                _nBahtOt1 = CDbl(Format(_nBahtOt1, "0.000"))
                _nBahtOt15 = CDbl(Format(_nBahtOt15, "0.000"))
                _nBahtOt2 = CDbl(Format(_nBahtOt2, "0.000"))
                _nBahtOt3 = CDbl(Format(_nBahtOt3, "0.000")) + _GAmtPlus  ' ได้เงินพิเศษช่วงเทศกาลเพิ่ม
                _nBahtOt4 = CDbl(Format(_nBahtOt4, "0.000"))

                Dim _TmpPe As String = ""

                If _FTEmpState = "2" Then
                Else
                    _TmpPe = IIf(Val(_PayTerm) - 1 Mod 2 = 1, (Val(_PayTerm) - 1).ToString("00"), "")
                End If

                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน ประเภทจ่ายเป็นเดือน ของงวดก่อนหน้า ---------------------
                'If _FTStatePayHoliday <> "1" Then '--------- รายเดือนไม่ได้ค่าจ้างวันหยุด---------------
                'Else
                If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='1'  ").Length > 0 Then


                    Dim _BFSDate As String = ""
                    Dim _BFEDate As String = ""

                    _Qry = " SELECT TOP 1  FDCalDateBegin, FDCalDateEnd"
                    _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & " WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & " AND FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & " AND FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND FTPayMonth IN (   "
                    _Qry &= vbCrLf & "  Select FTPayMonth"
                    _Qry &= vbCrLf & "    FROM THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "   AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & " )  "

                    _dttemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                    For Each Row As DataRow In _dttemp.Rows
                        _BFSDate = Row!FDCalDateBegin.ToString
                        _BFEDate = Row!FDCalDateEnd.ToString
                    Next

                    If _BFSDate <> "" And _BFEDate <> "" Then

                        _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                        _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                        _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                        _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                        _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                        _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                        _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                        _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                        _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                        _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0)  + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                        _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                        _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                        _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                        _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                        _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                        _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                        _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                        _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                        _Qry &= vbCrLf & ",P.FTOverClock,P.FTWeekDay"
                        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN "
                        _Qry &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                        _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                        _Qry &= vbCrLf & " 	And T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                        _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                        _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Do While _BFSDate <= _BFEDate
                            _FTShift = ""
                            Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                            Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                            For Each R2 In _R

                                _FTShift = R2!FTShift.ToString
                                _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)

                                _InOT = R2!FTIn3.ToString
                                _OutOT = R2!FTOut3.ToString

                                _Over = R2!FTOverClock.ToString

                                If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    If _FTShift <> "" Then

                                        _SPDateType = 0

                                        _Holiday = ""

                                        _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                        _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                        _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'  AND FTStateActive='1'  "
                                        _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                        If _Holiday <> "" Then _SPDateType = 2

                                        Dim _StateLeaveOther As Boolean = False
                                        Dim _StateLeavacation As Boolean = False


                                        Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                        Dim _SumLeave As Integer = 0

                                        For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                            _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                            If Val(sR!LeaveType) = 1 Then
                                                _StateLeavacation = True
                                            Else
                                                _StateLeaveOther = True
                                            End If

                                            If Val(sR!LeaveType) = 2 Then
                                                _StateFTStaMaternityleaveNotpay = True
                                            End If

                                        Next

                                        For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='1' ")
                                            Dim _StatePass As Boolean = True

                                            If _OutOT <> "" Then
                                                Beep()
                                            End If

                                            If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                            If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                            If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                            If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                            If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                            If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                            If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                            End If

                                            If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                            If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                            If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                If _STime.Length = _ETime.Length Then
                                                    If IsDate(_STime) And IsDate(_ETime) Then
                                                        If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If
                                                Else
                                                    _StatePass = False
                                                End If

                                            End If

                                            If _StatePass Then
                                                _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                                    _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                                Else
                                                    For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                        xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                    Next
                                                End If

                                            End If
                                        Next
                                    End If
                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                                End If
                            Next

                            _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                        Loop
                    End If
                End If
                ' End If
                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------



                '-------------------------------------------------------------------------------------------
                If _FTEmpState = "2" And Val(_PayTerm) Mod 2 = 0 Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1' and FTFinCode<>'056'")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                            Else
                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next

                ElseIf _FDDateEnd <> "" And _FDDateEnd < _EndDate Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0' and FTFinCode='013' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay)
                                Next

                            End If
                        End If
                    Next
                ElseIf _FDDateEnd = "" Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0' and FTFinCode='013' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Double.Parse(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Double.Parse(R2!FCFinAmt.ToString))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Double.Parse(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next
                End If

                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0'  and FTFinCode <> '013' and FTFinCode <> '057' ")
                    Dim _StatePass As Boolean = True

                    If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                    If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                    If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                    If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                    If _StatePass Then

                        _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                        If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                        If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                        If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                            _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                        Else

                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                            Next

                        End If
                    End If
                Next





                Dim _TotalFuel As Double = 0 ''100000

                Dim _worktime_before As Integer = 0


                If _FTEmpState = "2" And Val(_PayTerm) Mod 2 = 0 Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType='2' AND FTFinType='1' AND FTPayType='1'  and FTFinCode='056' ")
                        _TotalFuel = Val(R2!FCFinAmt)
                    Next


                    _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalWKN_Real_Min,0)) AS FNTotalWKN_Real_Min "



                    _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                    _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                    _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                    _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                    _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                    _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                    _Qry &= vbCrLf & "  Select FNMonth"
                    _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & "  )  "

                    _worktime_before = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, 0)

                    _TotalFuel = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation + _worktime_before) / 480) * (_TotalFuel / 26)
                    _FCAdd = _FCAdd + _TotalFuel


                End If

                ''20221004 get responsed header line
                Dim inc As Integer = 0

                _Qry = "   SELECT COUnT(FNHSysEmpID) as n  "
                _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeHeader   AS M WITH(NOLOCK)"
                _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & "  AND M.FNHSysCmpID =  " & Val(HI.ST.SysInfo.CmpID)
                _Qry &= vbCrLf & "  AND   M.FTDateTrans BETWEEN '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' AND '" & (_EndDate) & "'"

                inc = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, 0))

                Dim DataIncentiveHeader As DataTable

                Dim _Emp_IncenAmt As Double = 0
                Dim _Emp_BonusAmt As Double = 0

                If inc > 0 Then
                    _Qry = "Exec [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.SP_CALCULATE_INCENTIVE_HEADER " & Val(_EmpCode) & "," & Val(HI.ST.SysInfo.CmpID) & ",'" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' , '" & (_EndDate) & "'"
                    DataIncentiveHeader = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


                    Dim _BFSDate As String = HI.UL.ULDate.ConvertEnDB(_StartDate)
                    Dim _BFEDate As String = HI.UL.ULDate.ConvertEnDB(_EndDate)

                    If DataIncentiveHeader.Rows.Count > 0 Then



                        If _BFSDate <> "" And _BFEDate <> "" Then

                            _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                            _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                            _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                            _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0)  + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                            _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                            _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                            _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                            _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                            _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                            _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                            _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                            _Qry &= vbCrLf & ",P.FTOverClock"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN "
                            _Qry &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                            _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                            _Qry &= vbCrLf & " 	And T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                            _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                            Do While _BFSDate <= _BFEDate
                                _FTShift = ""
                                Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                                Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                For Each R2 In _R
                                    _FNTimeMin = 0
                                    _FNOT1Min = 0
                                    _FNTimeMin = IIf(Val(R2!FNTimeMinOrg.ToString) < 0, 0, Val(R2!FNTimeMinOrg.ToString))
                                    _FNOT1Min = Val(R2!FNOT1Min.ToString)

                                    For Each RFin As DataRow In DataIncentiveHeader.Select("ftcalDate='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")

                                        _Emp_IncenAmt = _Emp_IncenAmt + Val(RFin!Emp_IncenAmt_perMin) * (_FNTimeMin + _FNOT1Min)
                                        _Emp_BonusAmt = _Emp_BonusAmt + Val(RFin!Emp_BonusAmt_perMin) * (_FNTimeMin + _FNOT1Min)

                                    Next
                                Next
                                _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                            Loop


                        End If

                    End If

                End If
                _FNIncentiveAmt = _Emp_IncenAmt
                _BonusAmt = _Emp_BonusAmt
                '' _FCAdd = _FCAdd + _Emp_IncenAmt
                ''_FCAdd = _FCAdd + _Emp_BonusAmt




                Dim _TotalMoneyMeal As Double = 0
                _ShiftValue = 0
                ''เงินอุดหนุนค่าอาหาร
                ''For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='053'")


                _TotalMoneyMeal = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _FNMoneyMeal
                _FCAdd = _FCAdd + _TotalMoneyMeal
                '_FTAddCalculateTax = _FTAddCalculateTax + _TotalMoneyMeal
                '_FTAddCalculateSocial = _FTAddCalculateSocial + _TotalMoneyMeal
                ''  _AmtAddCalOT = _AmtAddCalOT + _ShiftValue

                ''_DtFin.Rows.Add("053", Val(_TotalMoneyMeal))

                ''Next

                ''เงินอายุงาน
                '_FTAddCalculateTax = _FTAddCalculateTax + _FNWorkAgeSalary
                '_FTAddCalculateSocial = _FTAddCalculateSocial + _FNWorkAgeSalary
                ''_FCAdd = _FCAdd + _FNWorkAgeSalary
                ''_DtFin.Rows.Add("054", Val(_FNWorkAgeSalary))


                ''เงินเบี้ยขยัน

                Dim _FNDeligent_La_rate As Double = 0

                _Qry = "SELECT TOP 1 FTCfgData FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.TSESystemConfig WHERE FTCfgName='CfgDeligent_La_rate_M'"
                _FNDeligent_La_rate = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_SECURITY, "0"))

                'MsgBox("_GFNTimeMin_Real_After_Probation" & _GFNTimeMin_Real_After_Probation)
                'MsgBox("_GFNLeaveVacation" & _GFNLeaveVacation)
                'MsgBox("_FCSalary" & _FCSalary)
                'MsgBox("_FNDeligent_La_rate" & _FNDeligent_La_rate)
                Dim _TotalDeligent_La As Double = 0
                If _FNDeligent_La_rate > 0 Then
                    _TotalDeligent_La = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * (CDbl(Format((_FCSalary) / 26, "0.0000000")) * _FNDeligent_La_rate)
                    _FCAdd = _FCAdd + _TotalDeligent_La
                End If
                'MsgBox(CDbl(Format((_FCSalary) / 26, "0.0000000")))
                'MsgBox("_TotalDeligent_La" & _TotalDeligent_La)
                'Dim _TotalDeligent_La As Double = 0

                '_TotalDeligent_La = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * (CDbl(Format((_FCSalary) / 26, "0.0000000")) * 0.1)
                '_FCAdd = _FCAdd + _TotalDeligent_La
                '_FTAddCalculateTax = _FTAddCalculateTax + _TotalDeligent_La
                '_FTAddCalculateSocial = _FTAddCalculateSocial + _TotalDeligent_La

                ''_DtFin.Rows.Add("059", Val(_TotalDeligent_La))


                ''เงินทักษะ
                Dim _TotalMoneySkill As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='043'")
                    _TotalMoneySkill = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySkill = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySkill
                _FCAdd = _FCAdd + _TotalMoneySkill


                ''เงินทักษะเย็บ
                Dim _TotalMoneySkill_Sew As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='057'")
                    _TotalMoneySkill_Sew = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySkill_Sew = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySkill_Sew
                _FCAdd = _FCAdd + _TotalMoneySkill_Sew





                ''16.	ค่าจูงใจตำแหน่ง : เงินหัวหน้าทีมแผนกเย็บ(กัปตัน)   
                Dim _TotalMoneyHeaderCapton As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='061'")
                    _TotalMoneyHeaderCapton = Val(RFin!FCFinAmt)
                Next
                _TotalMoneyHeaderCapton = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneyHeaderCapton
                _FCAdd = _FCAdd + _TotalMoneyHeaderCapton

                ''17.	เงินค่าจูงใจ กลุ่มพนักงานสนับสนุนแผนกเย็บ  
                Dim _TotalMoneySupport_Sew As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='062'")
                    _TotalMoneySupport_Sew = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySupport_Sew = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySupport_Sew
                _FCAdd = _FCAdd + _TotalMoneySupport_Sew


                ''18.	ค่าจูงใจตำแหน่ง : เงินพนักงานช่างซ่อมจักร 
                Dim _TotalMoneySeviceMachine As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='063'")
                    _TotalMoneySeviceMachine = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySeviceMachine = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySeviceMachine
                _FCAdd = _FCAdd + _TotalMoneySeviceMachine

                ''20.	ค่าจูงใจตำแหน่ง : เงินพนักงาน QA 
                Dim _TotalMoneySkill_QA As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='064'")
                    _TotalMoneySkill_QA = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySkill_QA = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySkill_QA
                _FCAdd = _FCAdd + _TotalMoneySkill_QA








                For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTFinType='2'")

                    _FCDeduct = _FCDeduct + Val(R2!FCFinAmt.ToString)


                Next
                '---------รายได้รายหัก อื่นๆ-------------------------

                '------------------- สิ้นสุดการคำนวณรายวัน
                _FTWorkmenAmtBefore = 0
                _FTTotalCalWorkmenBefore = 0

                '_Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FCSocial"
                '_Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocial,0)) AS FCSocialAmt"
                '_Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                '_Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                '_Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                '_Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                '_Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                '_Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                '_Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                '_Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                '_Qry &= vbCrLf & "  Select FNMonth"
                '_Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                '_Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                '_Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                '_Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                '_Qry &= vbCrLf & "  )  "

                'Dim _DtSso As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                'If _DtSso.Rows.Count > 0 Then
                '    _SocialBefore = Val(_DtSso.Rows(0)!FCSocial.ToString)
                '    _SocialBeforeAmt = Val(_DtSso.Rows(0)!FCSocialAmt.ToString)
                'End If

                'If _FTEmpState = "2" Or _FTEmpState = "3" Then


                '    '_FNEmpBaht = CDbl(Format((_FCSalary), "0.000"))
                '    'If _FTEmpState = "3" Then
                '    '    _FNEmpBaht = CDbl(Format((_FCSalary) / 2, "0.000"))

                '    'End If


                '    If FTStaDeductAbsent = 0 Then
                '        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent) '+ _nBahtAbsent
                '    Else
                '        _nBahtAbsent = 0
                '        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent)
                '    End If


                '    If _FNEmpBaht < 0 Then _FNEmpBaht = 0



                'End If

                If _FTEmpState = "2" Or _FTEmpState = "3" Then

                    If (_FDDateEnd <> "" And _FDDateEnd <= _FTEndCalculateDate) Or _FDDateStart > _StartDate Then ''ลาออกระหว่างงวด ''เริ่มงานระหว่างงวด 
                        ''ค่าแรงเแพราะวันทำงานจริง
                    Else
                        If FTStaDeductAbsent = 0 Then
                            '_FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent + _nBahtAbsent)
                            _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent + _nBahtAbsent)
                        Else
                            _nBahtAbsent = 0
                            _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent)
                        End If

                        If _FNEmpBaht < 0 Then _FNEmpBaht = 0
                    End If





                End If

                _TotalCalTax = 0 : _TaxAmt = 0

                FNUnionAmt = 0
                'FNUnionRate = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNUnionAmt,0) AS FNUnionAmt  FROM   " & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & ".dbo.THRMCfgWelfareKM with(nolock) Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")
                'If FNUnionRate > 0 Then

                '    Dim _StatePass As Boolean = True

                '    If _FDDateEnd <> "" And _EndDate < _FDDateEnd Then
                '        _StatePass = False
                '    End If
                '    If Not (FNStateUnionMember = "1") Then _StatePass = False

                '    'If _WorkAge <= 0 Then
                '    '    _StatePass = False
                '    'Else
                '    '    If FDStartDateUnion < _StartDate Then

                '    '    End If
                '    'End If

                '    If Not (Val(_PayTerm) Mod 2 = 0) Then
                '        _StatePass = False
                '    End If

                '    If _StatePass Then
                '        ''  _FCDeduct = _FCDeduct + FNUnionRate
                '        FNUnionAmt = FNUnionRate
                '    End If

                'End If

                '_TotalCalSso = Double.Parse(Format(_FNEmpBaht + _HBaht + _FTOtherAddCalculateSocial + _FTAddCalculateSocial + _GtotalleavePayCalSsoAmt, "0.00"))
                '_TotalCalSso = _TotalCalSso + Double.Parse(Format(_FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS, "0.00"))


                '  _FTAddCalculateTax = _FTAddCalculateTax + _ShiftAmt + _ShiftOTAmt

                _HBaht = 0
                'If _FNDay > 0 Then
                '    _FNEmpBaht = _FNEmpBaht - (_FCDeductSourceVacationBaht + _Lapaid + FNPayLeaveBusinessBaht + FNPayLeaveSickBaht)
                'Else ''กรณีไม่มาทำงาน แต่มีลาป่วย
                '    _FNEmpBaht = _FNEmpBaht - (_FCDeductSourceVacationBaht + _Lapaid + FNPayLeaveBusinessBaht)  ''FNPayLeaveSickBaht จะมีค่าเงิน
                'End If

                _FNEmpBaht = _FNEmpBaht - (_FCDeductSourceVacationBaht + _Lapaid + FNPayLeaveBusinessBaht + FNPayLeaveSickBaht)

                If _FNEmpBaht < 0 Then
                    _FNEmpBaht = 0
                End If








                _FCAdd = _FCAdd + _ShiftAmt + _ShiftOTAmt

                If _FTEmpState = "2" Or _FTEmpState = "3" Then


                    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct + 0), "0.000"))
                    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct + 0), "0.000"))

                Else
                    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct + 0), "0.000"))
                    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct + 0), "0.000"))



                End If
                '-----------------หักเงินเข้า กองทุนสำรองเลี้ยงชีพ-------------------------------
                If _ContributedFundBeginPay Then
                    Dim _EMpWorkAge As Integer = Val(R!FNEmpWorkAge.ToString)

                    For Each sR As DataRow In _THRMContributedFund.Select(" FNAgeBegin <= " & _EMpWorkAge & " AND FNAgeEnd >=" & _EMpWorkAge & " ")

                        FTTotalCalContributedAmt = _TotalCalSso

                        FTContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNEmpAmtPer.ToString)) / 100.0), "0"))
                        FTCmpContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNCmpAmtPer.ToString)) / 100.0), "0"))

                        Exit For

                    Next

                End If
                '-----------------หักเงินเข้า กองทุนสำรองเลี้ยงชีพ----------------------------
                '-----------------หักเงินเข้า กองทุนทดแทน---------------------------------
                FTTotalCalWorkmen = _TotalCalSso

                If _FTMaxCalWorkmen > 0 Then

                    _SocialPayMax = CDbl(Format(((_FTMaxCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))

                    If (_TotalCalSso + _FTTotalCalWorkmenBefore) > _FTMaxCalWorkmen Then
                        FTTotalCalWorkmen = _FTMaxCalWorkmen
                    ElseIf FTTotalCalWorkmen > 0 Then
                        FTTotalCalWorkmen = FTTotalCalWorkmen
                    Else
                        FTTotalCalWorkmen = 0
                    End If

                    If _FTTotalCalWorkmenBefore > 0 Then
                        FTWorkmenAmt = CDbl(Format((((_CalSo + _FTTotalCalWorkmenBefore) * _FTMaxWorkmenRate) / 100.0), "0"))
                        FTWorkmenAmt = FTWorkmenAmt - _FTWorkmenAmtBefore
                    Else
                        FTWorkmenAmt = CDbl(Format(((FTTotalCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))
                    End If
                End If

                '-----------------หักเงินเข้า กองทุนทดแทน-------------------------------



                _FNEmpDiligent = 0
                _FTStateInDustin = ""
                _FNDeligentPeriod = 0

                If _CalIns <> "" Then
                    Dim _StateCalIns As Boolean = False
                    '_Qry = "SELECT TOP 1 FNPayDeligent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMDiligentConfigHD WHERE FTDeligentCode='" & HI.UL.ULF.rpQuoted(_CalIns) & "' "
                    'If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") = "1" Then
                    '    If Val(_PayTerm) Mod 2 = 1 Then

                    '        _FTSatrtCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                    '        _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1), -1)) 'วันแของเดือน
                    '        _StateCalIns = True
                    '    End If
                    'Else

                    '    _StateCalIns = True
                    'End If

                    'If _StateCalIns Then
                    '    _Qry = " SELECT   ISNULL(PayIndus,0) As PayIndus , ISNULL(StateIndus,'') AS StateIndus,ISnuLL(FNDeligentPeriod,0) AS FNDeligentPeriod"
                    '    _Qry &= vbCrLf & "	FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.FN_CALCULATE_INDUST(" & Val(_EmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDateIns) & "','" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDateIns) & "','" & HI.UL.ULF.rpQuoted(_CalIns) & "')"

                    '    Dim _DtIns As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    '    If _DtIns.Rows.Count > 0 Then
                    '        _FNEmpDiligent = Val(_DtIns.Rows(0)!PayIndus.ToString)
                    '        _FTStateInDustin = _DtIns.Rows(0)!StateIndus.ToString
                    '        _FNDeligentPeriod = Val(_DtIns.Rows(0)!FNDeligentPeriod.ToString)
                    '    End If

                    'End If
                End If



                Dim _tmpTotalincome As Double = 0
                Dim _DiffTotalincome As Double = 0
                Dim _tmpTotalNetPay As Double = 0
                Dim _DiffTotalNetPay As Double = 0
                Dim _FNServicefee, _FNFinTransFee As Double



                Dim _tmpTotalincome_for_tax As Double = 0

                _tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct + 0), "0.000"))

                _tmpTotalNetPay = (_tmpTotalincome - (FTContributedAmt))

                _TotalCalSso = CDbl(Format(_tmpTotalincome, "0"))



                _Net = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct + 0), "0.00"))

                '' best edit _tmpTotalincome_for_tax with out sick leave 
                _tmpTotalincome_for_tax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct + 0), "0.00"))

                _FCBaht = _FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4



                '--------- คิดประกันสังคม-----------
                _SocialPayMax = HCfg.HMaxSocialBaht
                _CalSo = 0
                _FCSocial = 0
                _FCSocialCmp = 0
                _TotalCalSso = (_TotalCalSso)
                _FNSocialBase = 0





                Dim _FCTotalRecalTaxBefore As Double = 0
                Dim _FCTaxAmtBefore As Double = 0

                Dim _nBahtOt1Before As Double = 0
                Dim _nBahtOt15Before As Double = 0
                Dim _nBahtOt2Before As Double = 0
                Dim _nBahtOt3Before As Double = 0
                Dim _nBahtOt4Before As Double = 0

                Dim _FNTotalIncome_before As Double = 0

                Dim _SocialBeforeAmtCmp As Double = 0


                Dim _FNSickLeaveBaht_before As Double = 0

                Dim _FNFinNotCalTax As Double = 0


                ''_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4

                '_Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
                '_Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht


                _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FCSocial"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocial,0)) AS FCSocialAmt"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocialCmp,0)) AS FCSocialAmtCmp"

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTotalIncome,0)) AS FNTotalIncome "

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTotalRecalTax,0)) AS FCTotalRecalTax"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTax,0)) AS FCTaxAmt"

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt1_Baht,0)) AS FCOt1_BahtAmt"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt15_Baht,0)) AS FCOt15_BahtAmt"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt2_Baht,0)) AS FCOt2_BahtAmt"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt3_Baht,0)) AS FCOt3_BahtAmt"
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt4_Baht,0)) AS FCOt4_BahtAmt"

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSickLeaveBaht,0)) AS FNSickLeaveBaht"


                _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "AND ISNULL(P.FNTotalIncome,0) > 0 "
                _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                _Qry &= vbCrLf & "  Select FNMonth"
                _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                _Qry &= vbCrLf & "  )  "

                Dim _DtSso As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                If _DtSso.Rows.Count > 0 Then
                    _SocialBefore = Val(_DtSso.Rows(0)!FCSocial.ToString)
                    _SocialBeforeAmt = Val(_DtSso.Rows(0)!FCSocialAmt.ToString)

                    _SocialBeforeAmtCmp = Val(_DtSso.Rows(0)!FCSocialAmtCmp.ToString)


                    _FNTotalIncome_before = Val(_DtSso.Rows(0)!FNTotalIncome.ToString)
                    '' MsgBox("_FNTotalIncome_before" & _FNTotalIncome_before.ToString)

                    _FNSickLeaveBaht_before = Val(_DtSso.Rows(0)!FNSickLeaveBaht.ToString)

                    _FCTotalRecalTaxBefore = Val(_DtSso.Rows(0)!FCTotalRecalTax.ToString)
                    _FCTaxAmtBefore = Val(_DtSso.Rows(0)!FCTaxAmt.ToString)


                    _nBahtOt1Before = Val(_DtSso.Rows(0)!FCOt1_BahtAmt.ToString)
                    _nBahtOt15Before = Val(_DtSso.Rows(0)!FCOt15_BahtAmt.ToString)
                    _nBahtOt2Before = Val(_DtSso.Rows(0)!FCOt2_BahtAmt.ToString)
                    _nBahtOt3Before = Val(_DtSso.Rows(0)!FCOt3_BahtAmt.ToString)
                    _nBahtOt4Before = Val(_DtSso.Rows(0)!FCOt4_BahtAmt.ToString)


                End If



                _Qry = " SELECT SUM(P.FCTotalFinAmt) as FCTotalFinAmt   "
                _Qry &= vbCrLf & "FROM THRTPayRollFin P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"


                _Qry &= vbCrLf & " AND P.FTFinCode in (SELECT  FTFinCode FROM [dbo].[THRMFinanceSet] WHERE   FTStaActive = 1 and FTStaTax=0 and FNHSysCmpId = " & Val(HI.ST.SysInfo.CmpID) & ")"

                _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"

                _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                _Qry &= vbCrLf & "  Select FNMonth"
                _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                _Qry &= vbCrLf & "  )  "

                _FNFinNotCalTax = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, 0)



                If _FTCalSocialSta <> "1" Then ' 1 ไม่่คิดประกันสังคม

                    If (_TotalCalSso + _SocialBefore) >= _SocialMaxIncome Then
                        _CalSo = _SocialMaxIncome
                    ElseIf (_TotalCalSso + _SocialBefore) < _SocialMaxIncome And (_TotalCalSso + _SocialBefore) >= _SocialMinIncome Then
                        _CalSo = (_TotalCalSso + _SocialBefore)
                    ElseIf _TotalCalSso > 0 Then
                        _CalSo = _SocialMinIncome
                    Else
                        _CalSo = 0
                    End If

                    If _SocialBefore > 0 Then
                        _FCSocial = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRate) / 100.0), "0.00")), "0"))
                        _FCSocial = IIf(_SocialBeforeAmt > _FCSocial, 0, _FCSocial - _SocialBeforeAmt)

                        _FCSocialCmp = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRateCmp) / 100.0), "0.00")), "0"))
                        _FCSocialCmp = IIf(_SocialBeforeAmt > _FCSocialCmp, 0, _FCSocialCmp - _SocialBeforeAmtCmp)
                    Else
                        _FCSocial = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRate) / 100.0), "0.00")), "0"))
                        _FCSocialCmp = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRateCmp) / 100.0), "0.00")), "0"))
                    End If

                Else
                    _TotalCalSso = 0
                End If

                Dim _TotalCalTax_Sum As Double

                '_TotalCalTax_Sum = Format(((_Net + _SocialBefore) - (_FCSocial + _SocialBeforeAmt)), "0")

                '_TotalCalTax = Format((_Net - (_FCSocial)), "0")

                '' best edit 20230610  totalincome for cal tax  with out sick leave 


                'MsgBox("_tmpTotalincome_for_tax" & _tmpTotalincome_for_tax.ToString)
                'MsgBox("_SocialBefore" & _SocialBefore.ToString)
                'MsgBox("_FCSocial" & _FCSocial.ToString)
                'MsgBox("_SocialBeforeAmt" & _SocialBeforeAmt.ToString)
                'MsgBox("_FNSickLeaveBaht_before" & _FNSickLeaveBaht_before.ToString)


                ''_TotalCalTax_Sum = Format(((_tmpTotalincome_for_tax + _FNTotalIncome_before) - (_FCSocial + _SocialBeforeAmt + _FNSickLeaveBaht_before)), "0")
                _TotalCalTax_Sum = Format(((_tmpTotalincome_for_tax + _FNTotalIncome_before) - (_FCSocial + _SocialBeforeAmt + _FNFinNotCalTax)), "0")

                _TotalCalTax = Format((_tmpTotalincome_for_tax - (_FCSocial)), "0")



                If _FTCalTaxSta <> "1" Then

                    'With _EmpDisTax
                    '    .FTSosial = _FCAccumulateSocial + _FCSocial + (_FCSocial * (_TotalInstalment - _Instalment))

                    '    If .FTSosial > (((_SocialMaxIncome * _SocialRate) / 100.0) * 12) Then
                    '        .FTSosial = CDbl(Format((((_SocialMaxIncome * _SocialRate) / 100.0) * 12), "0.00"))
                    '    End If

                    '    .BaseSlary = (_TotalCalTax * (_TotalInstalment - _Instalment)) + _TotalCalTax
                    '    .OtherSlary = _FTOtherAddCalculateTax + _FTAddCalculateTax + _FNEmpDiligent + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                    '    .Cfg_ContributedDeducToTheFund = .Cfg_ContributedDeducToTheFund + FTContributedAmt + (FTContributedAmt * (_TotalInstalment - _Instalment))

                    'End With

                    '_TotalCalTax = _TotalCalTax + _EmpDisTax.OtherSlary
                    Dim _TaxOther As Double = _EmpDisTax.OtherSlary
                    Dim _TaxOtherAmt As Double = 0
                    Dim _Total As Double = 0
                    GETnRecalDiscTax(_EmpDisTax, _EmpTaxYear)


                    ''สิ้นเดือน
                    If Val(_PayTerm) Mod 2 = 0 Then

                        'MsgBox("_TotalCalTax_Sum" & _TotalCalTax_Sum.ToString)
                        'MsgBox("_FCTotalRecalTaxBefore" & _FCTotalRecalTaxBefore.ToString)




                        'If (_TotalCalTax_Sum > 2000000) Then
                        _Total = _TotalCalTax_Sum    ''เงินรวมทั้งเดือน หักประกันสังคมแล้ว
                        _Total = Math.Round(Val(_Total), 0)

                        _TotalCalTax = (_TotalCalTax_Sum) - (_FCTotalRecalTaxBefore + _EmpTaxYear.FTModEmp)
                        _Total = _TotalCalTax
                        'Else


                        '    _TotalCalTax = _TotalCalTax - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4)

                        '    _Total = _TotalCalTax_Sum - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _nBahtOt1Before + _nBahtOt15Before + _nBahtOt2Before + _nBahtOt3Before + _nBahtOt4Before)

                        '    _Total = Math.Round(Val(_Total), 0)

                        'End If


                        'MsgBox("_Total" & _Total.ToString)
                        'MsgBox("_TotalCalTax" & _TotalCalTax.ToString)

                    Else
                        'If (_TotalCalTax_Sum > 2000000) Then
                        _TotalCalTax = (_TotalCalTax_Sum) - (_FCTotalRecalTaxBefore + _EmpTaxYear.FTModEmp)

                        _Total = _TotalCalTax
                        _Total = Math.Round(Val(_Total), 0)

                        'Else
                        '    _Total = _TotalCalTax - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4)
                        '    _Total = Math.Round(Val(_Total), 0)
                        '    _TotalCalTax = _TotalCalTax - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4)

                        'End If
                    End If




                    '_EmpTaxYear.FTSocial = _EmpDisTax.FTSosial

                    '_EmpTaxYear.FTTotalCalTax = _Total


                    Dim _TotalTax As Double = GETnTax(_Total, _TaxOther, _TaxOtherAmt)



                    _EmpTaxYear.FTTotalTax = (_TotalTax + _TaxOtherAmt) 'ภาษีที่ต้องจ่าย

                    '_TotalTax = CDbl(Format(_TotalTax - _EmpDisTax.BeforeTax, "0.00"))

                    _TotalTax = CDbl(Format(_TotalTax - _FCTaxAmtBefore, "0"))


                    If _TotalTax > 0 Then
                        _TaxAmt = CDbl(Format((_TotalTax), "0"))
                        _TaxAmt = _TaxAmt + _TaxOtherAmt
                    Else
                        _TaxAmt = 0
                    End If

                    _EmpTaxYear.FTTotalTaxPay = _FCAccumulateTax + _TaxAmt

                Else

                    _TotalCalTax = 0
                    _TaxAmt = 0

                End If




                _FNNetpay = Format((_Net - (_FCSocial + FTContributedAmt + _TaxAmt + 0)), "0.00")


                _FNNetpayOrg = _FNNetpay

                '_DiffTotalincome = _Net - _tmpTotalincome
                '_DiffTotalNetPay = _FNNetpay - _tmpTotalNetPay

                If _tmpTotalincome <= 0 Then
                    _FNServicefee = 0
                    _FNFinTransFee = 0
                    _tmpTotalincome = 0
                    _tmpTotalNetPay = 0
                    _Net = 0
                    _FCBaht = 0
                    _FNNetpay = 0
                    _FNNetpayOrg = 0
                    _DiffTotalincome = 0
                    _DiffTotalNetPay = 0
                End If


                _FNNetpay = CDbl(Format((_FNNetpay), "0"))


                If _FNNetpay > 0 Then



                    Dim a As Integer = 0

                    a = _FNNetpay.ToString.Length

                    Dim amt1 As Integer = 0
                    Dim amt2 As Integer = 0
                    Dim amtAdd As Integer = 0
                    If a > 3 Then

                        amt2 = Right(_FNNetpay, 3)

                        If (amt2 > 500) Then

                            amtAdd = 1000
                        Else
                            amtAdd = 500
                        End If

                        _FNNetpay = (_FNNetpay + amtAdd) - amt2
                    Else
                        amt2 = _FNNetpay

                        If (amt2 > 500) Then

                            amtAdd = 1000
                        Else
                            amtAdd = 500
                        End If

                        _FNNetpay = amtAdd

                    End If
                End If



                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll (FTInsUser, FTInsDate, FTInsTime,"
                _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,FTEmpIdNo1,FTSocialNo,"
                _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
                _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId,  FNHSysPayRollPayId"
                _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
                _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
                _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
                _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
                _Qry &= vbCrLf & ",FNTotalWKNMin,  FNOt1Min, FNOt15Min, FNOt2Min"
                _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
                _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
                _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
                _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
                _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
                _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
                _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
                _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
                _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
                _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
                _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
                _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
                _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
                _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin, FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
                _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate , FNServicefee ,FNFinTransFee,FNSocialInsuranceEmployee , FNSocialInsuranceEmployer, FNUnionInsuranceEmployee , FNTotalWKN_Real_Min , FNSocialRateEmp,FNSocialRateCmp,FNSocialCmp )"
                _Qry &= vbCrLf & " 	SELECT '" & HI.UL.ULF.rpQuoted(_User) & "',CONVERT(varchar(10),GetDate(),111),CONVERT(varchar(8),GetDate(),114)"
                _Qry &= vbCrLf & " 	,'" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ""
                _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo1) & "','" & HI.UL.ULF.rpQuoted(_FTSocialNo) & "','" & _EmpType & "','" & HI.UL.ULDate.ConvertEnDB(_PayDate) & "'"
                _Qry &= vbCrLf & " 	," & Val(_FTDeptCode) & ""
                _Qry &= vbCrLf & " 	," & Val(_FTDivCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTSectCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTUnitCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPos) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPaymentCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBankCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBranchCode) & " "
                _Qry &= vbCrLf & " 	,N'" & HI.UL.ULF.rpQuoted(_FTAccNo) & "'," & _TotalHoliDay & ""
                _Qry &= vbCrLf & " 	," & _FCSalary & ""
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNTimeMin & " / 60) + Convert(numeric(18,2),(( " & _GFNTimeMin & " %60) /100.00)) "
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1_5Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1_5Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT2Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT2Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2)," & _GFNOT3Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT3Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GFNOT4Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT4Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleavePay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleavePay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleaveNotPay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleaveNotPay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _Gtotalleave & " / 60) + Convert(numeric(18,2),(( " & _Gtotalleave & " %60) /100.00))"
                _Qry &= vbCrLf & " 	, " & _GFNTimeMin
                _Qry &= vbCrLf & " 	, " & _GFNOT1Min
                _Qry &= vbCrLf & " 	, " & _GFNOT1_5Min
                _Qry &= vbCrLf & ", " & _GFNOT2Min
                _Qry &= vbCrLf & "," & _GFNOT3Min
                _Qry &= vbCrLf & ",  " & _GFNOT4Min
                _Qry &= vbCrLf & ",  " & _GFNLateNormalMin
                _Qry &= vbCrLf & ",  " & _GFNLateNormalCut
                _Qry &= vbCrLf & ",  " & _GFNCutAbsent
                _Qry &= vbCrLf & ",  " & _GFNAbsent & "," & (_GFNTimeMin + _GFNOT1Min + _GFNOT1_5Min + _GFNOT2Min + _GFNOT3Min + _GFNOT4Min)
                _Qry &= vbCrLf & ",  " & _GtotalleavePay
                _Qry &= vbCrLf & ", " & _GtotalleaveNotPay
                _Qry &= vbCrLf & ", " & _Gtotalleave
                _Qry &= vbCrLf & ", " & _FNEmpBaht & " "
                _Qry &= vbCrLf & ", " & _nBahtOt1 & " "
                _Qry &= vbCrLf & "," & _nBahtOt15 & " "
                _Qry &= vbCrLf & "," & _nBahtOt2 & " "
                _Qry &= vbCrLf & "," & _nBahtOt3 & " "
                _Qry &= vbCrLf & "," & _nBahtOt4 & " "
                _Qry &= vbCrLf & "," & (_FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FNIncentiveAmt + _BonusAmt) & " "
                _Qry &= vbCrLf & "," & _FNEmpDiligent & " "
                _Qry &= vbCrLf & "," & _FCPayVacationBaht & " "
                _Qry &= vbCrLf & "," & _Lapaid & " "
                _Qry &= vbCrLf & "," & _LateCutAmt & " "
                _Qry &= vbCrLf & "," & _LateCutAmtAbsent & " "
                _Qry &= vbCrLf & "," & _nBahtAbsent & " "
                _Qry &= vbCrLf & "," & _TotalCalSso & " "
                _Qry &= vbCrLf & "," & _TotalCalTax & " "
                _Qry &= vbCrLf & "," & _FCAdd & " "
                _Qry &= vbCrLf & "," & _FCOtherAdd & " "
                _Qry &= vbCrLf & "," & _FCDeduct & " "
                _Qry &= vbCrLf & "," & _FCOtherDeduct & " "
                _Qry &= vbCrLf & "," & _tmpTotalincome & " "
                _Qry &= vbCrLf & "," & _FCSocial & " "
                _Qry &= vbCrLf & "," & _TaxAmt & " "
                _Qry &= vbCrLf & "," & _HBaht & " "
                _Qry &= vbCrLf & "," & (_FNNetpay) & ""
                _Qry &= vbCrLf & "," & (_Net + _FCAccumulateIncome) & ""
                _Qry &= vbCrLf & "," & (_FCSocial + _FCAccumulateSocial) & ""
                _Qry &= vbCrLf & "," & (_TaxAmt + _FCAccumulateTax) & ""
                _Qry &= vbCrLf & ",'" & _FTStateInDustin & "' "
                _Qry &= vbCrLf & "," & (FTTotalCalContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTCmpContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTTotalCalWorkmen) & ""
                _Qry &= vbCrLf & "," & (FTWorkmenAmt) & ""
                _Qry &= vbCrLf & "," & _AmtRetire & ""
                _Qry &= vbCrLf & "," & _GtotalleavePayCalSsoAmt & ""
                _Qry &= vbCrLf & "," & _WorkingDay & " "
                _Qry &= vbCrLf & "," & _WageAdjAdd & ""
                _Qry &= vbCrLf & "," & _FNIncentiveAmt & ""
                _Qry &= vbCrLf & "," & _FNNetpayOrg & ""
                _Qry &= vbCrLf & "," & _FNNetAttandanceAmt & ""
                _Qry &= vbCrLf & "," & _FNHealtCareAmt & ""
                _Qry &= vbCrLf & "," & _FNTransportAmt & ""
                _Qry &= vbCrLf & "," & _FNNetChildCareAmt & ""
                _Qry &= vbCrLf & "," & _FNNetOTMealAmt & ""
                _Qry &= vbCrLf & "," & _FNSocialBase & ""
                _Qry &= vbCrLf & "," & _FNWorkAgeSalary & ""
                _Qry &= vbCrLf & "," & _FNNetOTMealAmtUS & ""
                _Qry &= vbCrLf & "," & _FNExchangeRate & ""
                _Qry &= vbCrLf & "," & FNPayLeaveSickBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveSickBahtMin & ""
                _Qry &= vbCrLf & "," & FNPayLeaveBusinessBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveBusinessBahtMin & ""
                _Qry &= vbCrLf & "," & FNPayLeaveSpecialBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveSpecialBahtMin & ""
                _Qry &= vbCrLf & "," & FNParturitionLeave & ""
                _Qry &= vbCrLf & "," & GFNParturitionLeaveMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetAmt & ""
                _Qry &= vbCrLf & "," & _FNExchangeRateTHB & ""
                _Qry &= vbCrLf & "," & FNWorkDayInWeek & ""
                _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(_FTCalSocialSta) & "'"
                _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(_FTCalTaxSta) & "'"
                _Qry &= vbCrLf & "," & _DiffTotalincome & ""
                _Qry &= vbCrLf & "," & _DiffTotalNetPay & ""
                _Qry &= vbCrLf & "," & SocialExchangeRate & ""
                _Qry &= vbCrLf & "," & TaxExchangeRate & ""
                _Qry &= vbCrLf & "," & _FNServicefee
                _Qry &= vbCrLf & "," & _FNFinTransFee
                _Qry &= vbCrLf & "," & FNSocialInsuranceEmployee
                _Qry &= vbCrLf & "," & FNSocialInsuranceEmployer
                _Qry &= vbCrLf & "," & FNUnionAmt
                _Qry &= vbCrLf & "," & _GFNTimeMin_Real_After_Probation + _GFNLeaveVacation
                _Qry &= vbCrLf & "," & _SocialRate & " "
                _Qry &= vbCrLf & "," & _SocialRateCmp & " "
                _Qry &= vbCrLf & "," & _FCSocialCmp & " "


                '  , FNVacationRetMin, FNVacationRetAmt
                '_FNNetpayOrg
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)




                If _FTCalTaxSta <> "1" And _FTEmpIdNo <> "" Then
                    '-----------------------------ภาษี -----------------------------------------------------
                    _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTaxYear "
                    _Qry &= vbCrLf & "  WHERE FTYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & "  AND  FTEmpIdNo='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' AND FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " "
                    _Qry &= vbCrLf & "  INSERT INTO THRTTaxYear (FNHSysCmpId,FTYear, FTEmpIdNo, FNAmt, FNExpenses, FNNetAmt, "
                    _Qry &= vbCrLf & "  FNModEmp, FNModMate, FNChildNotLern, FNChildLern, FNChildNotLernAmt, FNChildLernAmt, FNInsurance, FNProvidentfund, FNInterest, FNSocial, FNDonation, "
                    _Qry &= vbCrLf & "  FNProvidentfundOver, FNGPF, FNSavingsFund, FNCommutation, FNUnitRMF, FNModFather, FNModMother, FNModFatherMate, FNModMotherMate, FNUnitLTF, "
                    _Qry &= vbCrLf & "  FNDonationLern, FNParentsHealthInsurance, FNSupportSport, FNAcquisitionOfProperty, FNPension, FNTravel, FNTotalCalTax, FNTotalTax,FNTotalTaxPay )"
                    _Qry &= vbCrLf & "  SELECT " & HI.ST.SysInfo.CmpID & ",'" & _PayYear & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "

                    With _EmpTaxYear

                        _Qry &= vbCrLf & "," & .FTAmt & " "
                        _Qry &= vbCrLf & "," & .FTExpenses & ""
                        _Qry &= vbCrLf & "," & .FTNetAmt & ""
                        _Qry &= vbCrLf & "," & .FTModEmp & ""
                        _Qry &= vbCrLf & "," & .FTModMate & ""
                        _Qry &= vbCrLf & "," & .FNChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FNChildLern & " "
                        _Qry &= vbCrLf & "," & .FTChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FTChildLern & ""
                        _Qry &= vbCrLf & "," & .FTInsurance & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfund & ""
                        _Qry &= vbCrLf & "," & .FTInterest & ""
                        _Qry &= vbCrLf & "," & .FTSocial & ""
                        _Qry &= vbCrLf & "," & .FTDonation & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfundOver & ""
                        _Qry &= vbCrLf & "," & .FTGPF & ""
                        _Qry &= vbCrLf & "," & .FTSavingsFund & ""
                        _Qry &= vbCrLf & "," & .FTCommutation & ""
                        _Qry &= vbCrLf & "," & .FTUnitRMF & ""
                        _Qry &= vbCrLf & "," & .FTModFather & ""
                        _Qry &= vbCrLf & "," & .FTModMother & ""
                        _Qry &= vbCrLf & "," & .FTModFatherMate & ""
                        _Qry &= vbCrLf & "," & .FTModMotherMate & ""
                        _Qry &= vbCrLf & "," & .FTUnitLTF & ""
                        _Qry &= vbCrLf & "," & .FTDonationLern & ""
                        _Qry &= vbCrLf & "," & .FTParentsHealthInsurance & ""
                        _Qry &= vbCrLf & "," & .FTSupportSport & ""
                        _Qry &= vbCrLf & "," & .FTAcquisitionOfProperty & ""
                        _Qry &= vbCrLf & "," & .FTPension & ""
                        _Qry &= vbCrLf & "," & .FTTravel & ""
                        _Qry &= vbCrLf & "," & .FTTotalCalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTaxPay & ""

                    End With

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    '----------------------------- ภาษี -----------------------------------------------------
                End If

                '-----------------------------รายได้อื่นๆ -----------------------------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Dim _AllFincode As String = ""

                For Each _R As DataRow In _DtFin.Rows
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTFinCode, FTFinAmt," & _R!FCTotalFinAmt.ToString & ",0," & _R!FCTotalFinAmt.ToString & ""
                    _Qry &= vbCrLf & " FROM  THRMEmployeeFin "
                    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND  FTFinCode = ('" & _AllFincode & "') "

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Next

                For Each _R As DataRow In _dt.Select("FCFinAmt<>0")
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_R!FCFinAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FCFinAmtOther=" & _R!FCFinAmt.ToString & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _AllFincode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then

                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ",'" & _AllFincode & "',0, 0," & _R!FCFinAmt.ToString & "," & _R!FCFinAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    End If

                Next

                _FCAdd = _FCAdd + _Emp_IncenAmt
                _FCAdd = _FCAdd + _Emp_BonusAmt


                '''----------- incentive-------------------------------


                'If _Emp_IncenAmt > 0 Then
                '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_Emp_IncenAmt.ToString) & " "
                '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTFinCode='011' "

                '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '011'," & _Emp_IncenAmt & "," & _Emp_IncenAmt & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If
                'End If


                ''----------- incentive--Bonus-----------------------------
                'If _Emp_BonusAmt > 0 Then
                '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_Emp_BonusAmt.ToString) & " "
                '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTFinCode='008' "

                '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _Emp_BonusAmt & "," & _Emp_BonusAmt & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If
                'End If


                ''----------- เงินคืนพักร้อน-------------------------------
                ''เงินน้ำมัน

                If _TotalFuel > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalFuel.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='056' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '056'," & _TotalFuel & "," & _TotalFuel & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                ''เงินเพิ่มอื่นๆ

                If _TotalMoneyMeal > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneyMeal.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='053' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '053'," & _TotalMoneyMeal & "," & _TotalMoneyMeal & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _FNWorkAgeSalary > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNWorkAgeSalary.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='054' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '054'," & _FNWorkAgeSalary & "," & _FNWorkAgeSalary & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalDeligent_La > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalDeligent_La.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='059' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '059'," & _TotalDeligent_La & "," & _TotalDeligent_La & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _ShiftAmt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='001' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '001'," & _ShiftValue.ToString & "," & _ShiftAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _ShiftOTAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftOTAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='007' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '007'," & _ShiftOTValue.ToString & "," & _ShiftOTAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _SeniorityAmt > 0 Then

                    Dim _xFinCode As String = "046"
                    If (_FTStateWorkpermit = "1") Then
                        _xFinCode = "047"
                    End If
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_SeniorityAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _xFinCode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '" & _xFinCode & "'," & _SeniorityAmt.ToString & "," & _SeniorityAmt.ToString & ""
                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _BonusAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_BonusAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='008' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _BonusAmt.ToString & "," & _BonusAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _FNIncentiveAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNIncentiveAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='011' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '011'," & _FNIncentiveAmt.ToString & "," & _FNIncentiveAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _TotalMoneySkill > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySkill.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='043' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '043'," & Val(_TotalMoneySkill.ToString) & "," & Val(_TotalMoneySkill.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySkill_Sew > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySkill_Sew.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='057' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '057'," & Val(_TotalMoneySkill_Sew.ToString) & "," & Val(_TotalMoneySkill_Sew.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneyHeaderCapton > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneyHeaderCapton.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='061' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '061'," & Val(_TotalMoneyHeaderCapton.ToString) & "," & Val(_TotalMoneyHeaderCapton.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySupport_Sew > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySupport_Sew.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='062' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '062'," & Val(_TotalMoneySupport_Sew.ToString) & "," & Val(_TotalMoneySupport_Sew.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySeviceMachine > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySeviceMachine.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='063' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '063'," & Val(_TotalMoneySeviceMachine.ToString) & "," & Val(_TotalMoneySeviceMachine.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySkill_QA > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySkill_QA.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='064' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '064'," & Val(_TotalMoneySkill_QA.ToString) & "," & Val(_TotalMoneySkill_QA.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If



                If FNUnionAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(FNUnionAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='108' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '108'," & Val(FNUnionAmt.ToString) & "," & Val(FNUnionAmt.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _FNEmpDiligent > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNEmpDiligent.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    If _FNDeligentPeriod = 0 Then
                        _Qry &= vbCrLf & " AND FTFinCode='008' "
                    Else
                        _Qry &= vbCrLf & " AND FTFinCode='009' "

                    End If


                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        If _FNDeligentPeriod = 0 Then
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Else

                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '009'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                        End If
                    End If

                End If


                ''----------- เงินคืนพักร้อน-------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave (FTPayYear, FTPayTerm, FNHSysEmpID, FTLeaveType, FNTotalHour, FNTotalMinute, FNTotalPayHour, FNTotalPayMinute, FNTotalNotPayHour,FNTotalNotPayMinute)"
                _Qry &= vbCrLf & "  SELECT      '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTLeaveType,Convert(numeric(18,2), Sum(FNTotalMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalMinute) %60) /100.00)) , "
                _Qry &= vbCrLf & "  Sum(FNTotalMinute), Convert(numeric(18,2), Sum(FNTotalPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalPayMinute) %60) /100.00)), Sum(FNTotalPayMinute),  Convert(numeric(18,2),Sum(FNTotalNotPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalNotPayMinute) %60) /100.00)), SUM(FNTotalNotPayMinute)"
                _Qry &= vbCrLf & "  FROM THRTTransLeave "
                _Qry &= vbCrLf & " WHERE        (FNHSysEmpID = '" & Val(_EmpCode) & "') "
                _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' "
                _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "' "
                _Qry &= vbCrLf & "  GROUP BY   FNHSysEmpID, FTLeaveType"

                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            End If








            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & "  	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate (FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & " FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate)"
            _Qry &= vbCrLf & " SELECT TOP 1  FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & "FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            _Qry &= vbCrLf & " SELECT FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate ( FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay)"
            _Qry &= vbCrLf & " SELECT  FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

        Next

        Return True

    End Function

    Public Shared Function CalculateWeekEnd_LA2_Daily(ByVal _User As String, ByVal _EmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, ByVal _PayYear As String,
        ByVal _PayTerm As String, ByVal _PayDate As String, ByVal _CalIns As String, ByVal _EmpCalType As String,
        Optional ByVal _StateCalRetire As Boolean = False, Optional ByVal _ReturnVacation As Double = 0,
        Optional FTStaDeductAbsent As Integer = 0, Optional FTStaCalPayRoll As Integer = 0, Optional FNStateSalaryType As Integer = 0,
        Optional _FNExchangeRate As Double = 0, Optional _FNExchangeRateTHB As Double = 0, Optional FNWorkDayInWeek As Integer = 13,
        Optional FNWorkDayInMonth As Integer = 26, Optional FNWorkDayInWeekBF As Integer = 0, Optional SocialExchangeRate As Double = 0, Optional TaxExchangeRate As Double = 0) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim CountDayPerMonth As Integer = FNWorkDayInMonth
        Dim _Qry As String
        Dim _dt As DataTable
        Dim _dttemp As DataTable
        Dim _dttran As DataTable
        Dim _SalaryDevide As Integer = 0
        Dim FNVacationRetMin, FNVacationRetAmt, FNVacationPerDayLapaid As Double


        Dim _SsoBefore As Double = 0
        Dim _SsoBeforeAmt As Double = 0

        Dim _InsuranceEmpyeeBefore As Double = 0
        Dim _InsuranceEmpyerBefore As Double = 0

        Dim _DtFin As New DataTable
        _DtFin.Columns.Add("FTFinCode", GetType(String))
        _DtFin.Columns.Add("FCTotalFinAmt", GetType(String))
        Dim _SeniorityAmt As Double = 0
        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTPaymentCode As String, _FTBankCode As String, _FNChildNotLearn As Double
        Dim _FCReduceDonate As Double, _FCLifeInsurance As Double
        Dim _FCLoanHouse As Double
        Dim _FCShare As Double, _FCReduceFather As Double, _FCReduceMother As Double
        Dim _FCReSpouseFather As Double, _FCReSpouseMother As Double, _FCReduceEducationSupport As Double, _FTMarryIncome As String
        Dim _FTCalSocialSta As String, _FTCalTaxSta As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FTEmpIdNo As String, _FTEmpIdNo1 As String, _FTSocialNo As String, _FTBranchCode As String, _FTAccNo As String, _FCLifeFeeMoney As Double
        Dim _FCOtherAdd As Double, _FTOtherAddCalculateSocial As String, _FTOtherAddCalculateTax As String
        Dim _FCOtherAddOt As Double, _FTOtherAddOtCalculateSocial As String, _FTOtherAddOtCalculateTax As String, _FCBFShiftMoney As Double
        Dim _FTShiftMoneyCalculateSocial As String, _FTShiftMoneyCalculateTax As String, _FCDiligent As Double
        Dim _FTDiligentCalculateSocial As String, _FTDiligentCalculateTax As String, _FCBonusEndYear As Double
        Dim _FTBonusEndCalculateSocial As String, _FCOtherDeduct As Double, _FTBonusEndCalculateTax As String
        Dim _FCShelter As Double, _FTShelterCalculateSocial As String, _FTShelterCalculateTax As String
        Dim _FCShareFactory As Double, _FTShareFactoryCalculateSocial As String
        Dim FNPayLeaveBusinessBaht, FNPayLeaveSickBaht, FNPayLeaveSpecialBaht, FNParturitionLeave As Double, FNParturitionLeaveReCalTax, FNPayLeaveAccidentBaht As Double
        Dim FNPayLeaveBusinessBahtMin, FNPayLeaveSickBahtMin, FNPayLeaveSpecialBahtMin, FNParturitionLeaveMin, FNPayLeaveAccidentBahtMin As Double
        Dim GFNPayLeaveBusinessBahtMin, GFNPayLeaveSickBahtMin, GFNPayLeaveSpecialBahtMin, GFNParturitionLeaveMin, GFNPayLeaveAccidentBahtMin As Integer


        Dim _FTShift As String
        Dim _FNTime, _FNNotRegis As Double
        Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
        Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
        Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
        Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double
        Dim _FNLeavePay, _FNLeaveNotPay As Double, _FNTimeMin, _FNOT1Min As Double
        Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
        Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
        Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
        Dim _GFNTime, _GFNNotRegis As Double
        Dim _GFNOT1 As Double, _GFNOT1_5 As Double, _GFNOT2 As Double, _GFNOT3 As Double, _GFNOT4 As Double
        Dim _GFNLeaveSick As Double, _GFNLeaveBusiness As Double
        Dim _GFNLeaveVacation As Double, _GFNLeavePregnant As Double, _GFNLeaveOrdain As Double, _GFNLeaveSpecial As Double
        Dim _GFNLeaveMarry As Double, _GFNLeaveOther As Double, _GFNLateNormalMin As Double
        Dim _GFNLateNormalMinNotHoliday As Double = 0
        Dim _GFNLateNormalCut As Double, _GFNLateOtMin As Double, _GFNLateOtCut As Double
        Dim _GFNLateMorning As Double, _GFNLateAfternoon As Double, _GFNAbsent, _GFNCutAbsent As Double
        Dim _GFNLeavePay As Double, _GFNTimeMin, _GFNOT1Min, _GFNTimeMin_Real_After_Probation As Double
        Dim _GFNOT1_5Min As Double, _GFNOT2Min As Double, _GFNOT3Min As Double, _GFNOT4Min As Double, _GFNLateMMin As Double
        Dim _GFNLateAfMin As Double, _GFNRetireMMin As Double, _GFNRetireAfMin As Double
        Dim _GFNRetireNormalCut As Double, _GFNRetireOtMin As Double, _GFNRetireOtCut As Double
        Dim _dtot As DataTable
        Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double
        Dim _FCAccumulateIncome As Double, _FCAccumulateSocial As Double, _FCAccumulateTax As Double
        Dim _FTSatrtCalculateDate As String, _FTEndCalculateDate As String, _FNEmpDiligent As Double, _FTStateInDustin As String, _FNDeligentPeriod As Integer
        Dim _FTSatrtCalculateDateIns As String, _FTEndCalculateDateIns As String
        Dim _FNEmpBaht, _nBahtOt1 As Double, _nBahtOt15 As Double, _nBahtOt2 As Double, _nBahtOt3 As Double, _nBahtOt4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
        Dim _SocialRate As Double, _SocialRateCmp As Double : Dim _StateSocialOnlyCmppay As Boolean
        Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
        Dim _TotalHoliDay As Integer
        Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String

        Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double, _FCSocialCmp As Double
        Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
        Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
        Dim _FTSlary, _FTDivCode, _FTPos As String
        Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
        Dim _Dtemp As DataTable
        Dim _SocialBefore, _SocialBeforeAmt, _SocialPayMax As Double
        Dim _FCAdd, _FTAddCalculateSocial, _FTAddCalculateTax, _FCDeduct, _TotalCalSso, _TotalCalTax, _TaxAmt As Double
        Dim _Gtotalleave, _GtotalleavePay, _GtotalleaveNotPay, _GtotalleavePayCalSso, _GtotalleavePayCalSsoAmt As Double
        Dim _dtLeave As DataTable
        Dim _LeaveCode As String = ""
        Dim _dtAddOtherAmt As DataTable
        Dim _dtAddOtherAmtshift As DataTable
        Dim FCModFather, FCModMother, FCModMateFather, FCModMateMother As Double
        Dim FCPremium, FCInterest, FCUnitRMF, FCUnitLTF, FCDeductDonate, FCDisabledDependents, FCDeductDonateStudy As Double
        Dim FCHealthInsurFatherMotherMate, FTHealthInsurIDFather, FTHealthInsurIDMother As Double
        Dim FTHealthInsurIDFatherMate, FTHealthInsurIDMotherMate As Double
        Dim FTTotalCalContributedAmt, FTContributedAmt, FTCmpContributedAmt, FTTotalCalContributedAcc As Double
        Dim FTTotalCalWorkmen, FTWorkmenAmt, _FTMaxCalWorkmen, _FTMaxWorkmenRate, FTTotalCalWorkmenAcc As Double
        Dim _FTWorkmenAmtBefore, _FTTotalCalWorkmenBefore As Double
        Dim _ShiftAmt As Double = 0
        Dim _ShiftOTAmt As Double = 0
        Dim _ShiftValue As Double = 0
        Dim _ShiftOTValue As Double = 0
        Dim _WorkingDay As Double = 0
        Dim _THRMContributedFund As DataTable
        Dim _EmpDisTax As New HCfg.EmployeeDiscountTax
        Dim _EmpTaxYear As New HCfg.EmpTaxYear
        Dim _FNSlaryPerDayShiftNinght As Double, _FNSlaryPerDayNormal As Double


        '   HI.HRCAL.Calculate.LoadDiscountTax()

        Dim _EmpDisTaxChildAmt As Double = 0
        Dim _FNNetpayOrg As Double = 0.0
        Dim _FNNetpay As Double = 0.0
        Dim _AmtAddCalOT, _GAmtAddCalOT As Double
        Dim CountTerm As Integer = 0
        Dim _SPDateType, _TotalInstalment, _Instalment As Integer
        Dim _ContributedFundBeginPay As Boolean = False
        Dim _DTHoliday As DataTable
        Dim _ShiftAdv As Double = 0
        Dim _AmtPlus As Double = 0
        Dim _GAmtPlus As Double = 0
        Dim FTHldType As Integer = 0
        Dim _AmtRetire As Double = 0
        Dim _WorkAge As Integer = 0 : Dim _WorkAgeDay As Integer = 0 : Dim _WorkAgeSeniority As Integer = 0 : Dim _WorkingDayN As Integer = 0
        Dim _WorkAgeParturition As Integer = 0
        Dim _AmtReturnVacation As Double = 0
        Dim _FNIncentiveAmt As Double = 0
        Dim _FTInsurType As Integer = 0
        Dim _DayAdjAdd As Double = 0
        Dim _WageAdjAdd As Double = 0
        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        Dim _FTStatePayHoliday As String = ""
        Dim _FTEmployeeCode As String = ""
        Dim _FNAttandanceAmt As Double = 0
        Dim _FNHealtCareAmt As Double = 0
        Dim _FNTransportAmt As Double = 0
        Dim _FNChildCareAmt As Double = 0
        Dim _FNChildCareStartAge As Double = 0
        Dim _FNChildCareEndAge As Double = 0
        Dim _FNOTMealAmt As Double = 0
        Dim _FNSocialBase As Double = 0
        Dim _FNWorkAgeSalary As Double = 0
        Dim _FNOTMealAmtUS As Double = 0
        Dim _FNSickLeave As Double = 0
        Dim _LeaveSickPay As Integer = 0
        Dim _FNTotalChildCare As Integer = 0
        Dim _FNNetAttandanceAmt As Double = 0
        Dim _FNNetChildCareAmt As Double = 0
        Dim _FNNetOTMealAmt As Double = 0
        Dim _FNNetSocialBase As Double = 0
        Dim _FNNetOTMealAmtUS As Double = 0
        Dim _FNEmpWorkAge As Integer = 0
        Dim _tmpSocailRateKM As DataTable
        Dim _tmpWelfareKM As DataTable
        Dim _tmpWorkAge As DataTable
        Dim _TmpFDDateEnd As String = ""
        Dim _TmpFDDateEndP As String = ""  ' เพิ่มเงือนไข วันที่ลาออก มีผล วันที่ 2 - 16  จ่ายค่า health & transsport
        Dim _DTEmpWorkDay As New DataTable
        Dim _TmpLeavePay As Integer = 0
        Dim _EmpSex As Integer = 0
        Dim _RatePay As Double = 1
        Dim _SalaryPayOTKM As Double = 0
        Dim _SalaryPayLeave As Double = 0
        Dim _SalaryPayLeaveMin As Double = 0
        Dim _FNEmpStatus As Integer = 0
        Dim _FTStateWorkpermit As String = ""
        Dim _FTStateMedicalCertificate As String = ""
        Dim _BonusAmt As Double = 0

        Calculate.LoadInsuranceVNRate()
        Dim FNSocialEmployeeRate As Double = 0
        Dim FNSocialEmployerRate As Double = 0
        Dim FNHealthEmployeeRate As Double = 0
        Dim FNHealthEmployerRate As Double = 0
        Dim FNUnemploymentEmployeeRate As Double = 0
        Dim FNUnemploymentEmployerRate As Double = 0
        Dim FNUnionEmployeeRate As Double = 0
        Dim FNUnionEmployerRate As Double = 0
        Dim FNStateUnionMember As String = ""
        Dim FDStartDateUnion As String = ""
        Dim FDEndDateUnion As String = ""
        Dim FNUnionAmt As Double = 0
        Dim FNUnionRate As Double = 0

        Dim _FDDateProbation As String = ""

        Dim _FNMoneyMeal As Integer = 0

        _Qry = "SELECT TOP 1 FTCfgData FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.TSESystemConfig WHERE FTCfgName='CfgMeal_LA'"
        _FNMoneyMeal = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_SECURITY, "0"))

        Try
            FNSocialEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eSocialInsurance).FNEmployeeRate
            FNSocialEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eSocialInsurance).FNEmployerRate
            FNHealthEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eHealthInsurance).FNEmployeeRate
            FNHealthEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eHealthInsurance).FNEmployerRate
            FNUnemploymentEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnemploymentInsurance).FNEmployeeRate
            FNUnemploymentEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnemploymentInsurance).FNEmployerRate
            FNUnionEmployeeRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnionInsurance).FNEmployeeRate
            FNUnionEmployerRate = HCfg.HCfg_InsuranceVNRate(eTypeInsuranceVN.eUnionInsurance).FNEmployerRate
        Catch ex As Exception
            'MG.ShowMsg.mInfo("Invalid Config Value...", 1503310001, "", "")
        End Try


        Dim FNSocialInsuranceEmployee As Double = 0.0
        Dim FNSocialInsuranceEmployer As Double = 0.0
        Dim FNHealthInsuranceEmployee As Double = 0.0
        Dim FNHealthInsuranceEmployer As Double = 0.0
        Dim FNUnemploymentInsuranceEmployee As Double = 0.0
        Dim FNUnemploymentInsuranceEmployer As Double = 0.0
        Dim FNUnionInsuranceEmployee As Double = 0.0
        Dim FNUnionInsuranceEmployer As Double = 0.0

        Dim FNSocialInsuranceEmployeeOrg As Double = 0.0
        Dim FNSocialInsuranceEmployerOrg As Double = 0.0
        Dim FNHealthInsuranceEmployeeOrg As Double = 0.0
        Dim FNHealthInsuranceEmployerOrg As Double = 0.0
        Dim FNUnemploymentInsuranceEmployeeOrg As Double = 0.0
        Dim FNUnemploymentInsuranceEmployerOrg As Double = 0.0
        Dim FNUnionInsuranceEmployeeOrg As Double = 0.0
        Dim FNUnionInsuranceEmployerOrg As Double = 0.0




        _DTEmpWorkDay.Columns.Add("FNSalary", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNDay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT1", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT15", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT2", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT3", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNOT4", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNHoloday", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLate", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNAbsent", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLateCutAmtAbsent", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeavePay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeaveNotPay", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNBusiness", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSpecial", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNParturition", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNVacation", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNShiftNo", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSlaryOTPerMin", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNSlaryNormal", GetType(Double))
        _DTEmpWorkDay.Columns.Add("FNLeaveAccident", GetType(Double))



        Dim _DTEmpPayLeaveSick As New DataTable
        _DTEmpPayLeaveSick.Columns.Add("FNSalary", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNDay", GetType(Double))
        _DTEmpPayLeaveSick.Columns.Add("FNPayPer", GetType(Double))

        _Qry = "Select TOP 1 FNCalType FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType WHERE FNHSysEmpTypeId=" & Val(_EmpType) & "  "
        Dim _TmpCalType As Integer = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "0"))

        If FTStaCalPayRoll = 0 Then
            _DateStartOfMonth = _StartDate  'วันแรกของเดือน
            _DateEndOfMonth = _EndDate 'วันแของเดือน
        Else
            _DateStartOfMonth = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
            _DateEndOfMonth = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        End If
        '----------------------------------   Variable  ------------------------------------

        Dim _DateReset As String
        _Qry = " Select Case When RiGHT(FTCurrenDate, 5) >= FTLeaveReset Then LEFT(FTCurrenDate, 4) Else  LEFT(FTBefore,4)  End +'/' + FTLeaveReset"
        _Qry &= vbCrLf & "  FROM"
        _Qry &= vbCrLf & " ("
        _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
        _Qry &= vbCrLf & " FROM            THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN THRMEmployee AS M WITH(NOLOCK )"
        _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "  WHERE   M.FNHSysEmpID=" & Val(_EmpCode) & " "
        _Qry &= vbCrLf & " ) As T"

        _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")
        '------------------ รวมวันลาป่วย---------------------------------

        _Qry = "   SELECT        (SUM(FNTotalPayMinute) / 480) AS FNTotalPayMinute  "
        _Qry &= vbCrLf & "      AS TotalLeavePay"
        _Qry &= vbCrLf & "    FROM THRTTransLeave "
        _Qry &= vbCrLf & "  WHERE        (FTLeaveType = '0')"
        _Qry &= vbCrLf & "  AND (FTDateTrans >= N'" & (_DateReset) & "') "
        _Qry &= vbCrLf & "  AND (FTDateTrans < N'" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "') "
        _Qry &= vbCrLf & "  AND (FNHSysEmpID =" & Val(_EmpCode) & ")"

        _LeaveSickPay = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))

        '------------------ รวมวันลาป่วย---------------------------------

        With _EmpTaxYear
            .FTAmt = 0 'เงินได้ก่อนหักค่าใช้จ่าย
            .FTExpenses = 0 'ค่าใช้จ่ายส่วนตัว
            .FTNetAmt = 0 'เงินได้หลังหักค่าใช้จ่าย
            .FTModEmp = 0 'ลดหย่อนส่วนตัว
            .FTModMate = 0 'ลดหย่อนคู่สมรส
            .FNChildNotLern = 0 'จำนวนบุตรไม่ศึกษา
            .FNChildLern = 0 'จำนวนบุตรศึกษา
            .FTChildNotLern = 0 'ลดหย่อนบุตรไม่ศึกษา
            .FTChildLern = 0 'ลดหย่อนบุตรศึกษา
            .FTInsurance = 0 'ลดหย่อนเบี้ยประกัน
            .FTProvidentfund = 0 'กองทุนเลียงชีพส่วนที่ไม่เกิน 10000
            .FTInterest = 0 'ดอกเบี้ยเงินกู้
            .FTSocial = 0 'ประกันสังคม
            .FTDonation = 0 'เงินบริจาค
            .FTProvidentfundOver = 0 'กองทุนเลียงชีพส่วนที่เกิน 10000
            .FTGPF = 0 'เงิน กบข.
            .FTSavingsFund = 0 'เงินกองทุนสงเคราะห์
            .FTCommutation = 0 'เงินชดเชยตามกฎหมายแรงงาน
            .FTUnitRMF = 0 'ค่าซื้อหน่วยลงทุน RTF
            .FTModFather = 0 'ลดหย่อนบิดา
            .FTModMother = 0 'ลดหย่อนมารดา
            .FTModFatherMate = 0 'ลดหย่อนบิดาคู่สมรส
            .FTModMotherMate = 0 'ลดหย่อนมารดาคู่สมรส
            .FTUnitLTF = 0 'ค่าซื้อหน่วยลงทุน LTF
            .FTDonationLern = 0 'เงินบริจาคเพื่อสนับสนุนการศึกษา
            .FTParentsHealthInsurance = 0 'เบี้ยประกันสุขภาพบิดามารดา
            .FTSupportSport = 0 'เงินสนับสนุนการกีฬา
            .FTAcquisitionOfProperty = 0 'ค่าซื้ออาคาร
            .FTPension = 0 'บำนาญ
            .FTTravel = 0 'ท่องเที่ยวในประเทศ
            .FTTotalCalTax = 0 'เงินได้สุทธิ
            .FTTotalTax = 0 'ภาษีที่ต้องจ่าย
        End With
        '------------------ GetConfig WeekEnd ----------------------------------

        ' get discount tax

        With _EmpDisTax
            .Cfg_ModChildAllowanceAgeStart = HCfg._DiscountTax.Cfg_ModChildAllowanceAgeStart
            .Cfg_ModChildAllowanceAgeEnd = HCfg._DiscountTax.Cfg_ModChildAllowanceAgeEnd
            .Cfg_ModChildAllowanceRateNotStudied = HCfg._DiscountTax.Cfg_ModChildAllowanceRateNotStudied
            .Cfg_ModChildAllowanceRateStudy = HCfg._DiscountTax.Cfg_ModChildAllowanceRateStudy
        End With
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------
        _Qry = "SELECT FNSeqNo, FNAgeBegin, FNAgeEnd, FNEmpPay As FNEmpAmtPer,  FNCmpPay AS FNCmpAmtPer"
        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMContributions WITH(NOLOCK) "
        _Qry &= vbCrLf & "  WHERE  FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID) & " "
        _THRMContributedFund = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
        '------------------ GetConfig หักกองทุนสำรองเลี้ยงชีพ ----------------------------------

        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday
        '------------------ GetConfig Holiday ----------------------------------

        _tmpSocailRateKM = LoadSocailRateKM
        '_tmpWelfareKM = LoadWelfareKM(Integer.Parse(Val(_EmpType)))
        _tmpWorkAge = GetWorkAgeRate(Val(HI.ST.SysInfo.CmpID))

        'For Each ZRow In _tmpWelfareKM.Rows

        '    _FNAttandanceAmt = Val(ZRow!FNAttandanceAmt.ToString)
        '    _FNHealtCareAmt = Val(ZRow!FNHealtCareAmt.ToString)
        '    _FNTransportAmt = Val(ZRow!FNTransportAmt.ToString)
        '    _FNChildCareAmt = Val(ZRow!FNChildCareAmt.ToString)
        '    _FNChildCareStartAge = Val(ZRow!FNChildCareStartAge.ToString)
        '    _FNChildCareEndAge = Val(ZRow!FNChildCareEndAge.ToString)
        '    _FNOTMealAmt = Val(ZRow!FNOTMealAmt.ToString)

        '    Exit For
        'Next

        'FNAttandanceAmt, FNHealtCareAmt, FNTransportAmt, FNChildCareAmt, FNChildCareStartAge, FNChildCareEndAge, FNOTMealAmt
        FNVacationRetMin = 0 : FNVacationRetAmt = 0
        _FTSatrtCalculateDate = _StartDate
        _FTEndCalculateDate = _EndDate
        _FTSatrtCalculateDateIns = _StartDate
        _FTEndCalculateDateIns = _EndDate
        _FNEmpDiligent = 0 : _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
        _FTStateInDustin = "" : _FNSlaryPerMonth = 0
        _FNSlaryPerDay = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0
        _FTEmpState = "" : _FNEmpBaht = 0 : _nBahtOt1 = 0
        _nBahtOt15 = 0 : _nBahtOt2 = 0 : _nBahtOt3 = 0
        _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
        _FCPayVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0 : _FCSocialCmp = 0
        _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0 : _SocialRateCmp = 0
        _SocialMinIncome = 0 : _SocialMaxIncome = 0
        _Complete = 0 : _Err = 0 : _FCSalary = -99
        CountTerm = 0
        _TotalInstalment = 0 : _Instalment = 0

        FNPayLeaveBusinessBahtMin = 0 : FNPayLeaveSickBahtMin = 0 : FNPayLeaveSpecialBahtMin = 0 : FNParturitionLeaveMin = 0 : FNPayLeaveAccidentBahtMin = 0
        GFNPayLeaveBusinessBahtMin = 0 : GFNPayLeaveSickBahtMin = 0 : GFNPayLeaveSpecialBahtMin = 0 : GFNParturitionLeaveMin = 0 : GFNPayLeaveAccidentBahtMin = 0
        FNPayLeaveBusinessBaht = 0 : FNPayLeaveSickBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0 : FNPayLeaveAccidentBaht = 0

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode,M.FTEmpCode AS FTEmployeeCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, Isnull( M.FNEmpStatus,0) AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"
        _Qry &= vbCrLf & " ,M.FNHSysDeptId AS FTDeptCode , M.FNEmpSex "
        _Qry &= vbCrLf & "  ,M.FNHSysDivisonId AS FTDivCode, M.FNHSysSectId AS FTSectCode,  M.FNHSysUnitSectId AS FTUnitSecCode"
        _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
        _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
        _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
        _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
        _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
        _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
        _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
        _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
        _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
        _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide , isnull( M.FTStateWorkpermit ,'0') as FTStateWorkpermit"
        _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge(M.FdDateStart,'" & _EndDate & "') AS FNEmpWorkAgeNew"
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_MonthSeniority(M.FdDateStart,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeMonthSeniority     "
        _Qry &= vbCrLf & ", dbo.FN_Get_Emp_WorkAge_Salary_CD_NEW(M.FdDateStart,M.FdDateEnd,'" & _EndDate & "') AS FNEmpWorkAgeNewCD ,  dbo.[FN_Get_Emp_WorkAge_Day](M.FDDateStart,M.FDDateEnd) as FNEmpWorkAgeNewDay"
        _Qry &= vbCrLf & " ,  dbo.[FN_Get_Emp_WorkAge_Day_CD](M.FDDateStart,M.FDDateEnd,M.FNHSysEmpID,'" & _EndDate & "') as FNEmpWorkAgeNewDay_CD "
        _Qry &= vbCrLf & " , isnull(M.FTStateUnionMember,'') as FTStateUnionMember  , isnull(M.FDStartDateUnion,'') as FDStartDateUnion , isnull(M.FDEndDateUnion,'') as FDEndDateUnion"
        _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_EmpCode) & " ) "

        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each R As DataRow In _Dtemp.Rows

            _DtFin.Rows.Clear()
            _FNEmpStatus = Integer.Parse("0" & R!FTStatus.ToString)
            _AmtAddCalOT = 0
            _EmpSex = Val("0" & R!FNEmpSex.ToString)
            _FTStateWorkpermit = R!FTStateWorkpermit.ToString

            _FDDateProbation = R!FDDateProbation.ToString

            FNStateUnionMember = R!FTStateUnionMember.ToString : FDStartDateUnion = R!FDStartDateUnion.ToString : FDEndDateUnion = R!FDEndDateUnion.ToString

            _SalaryDevide = Val(R!FNSalaryDivide.ToString)
            _FTStatePayHoliday = R!FTStatePayHoliday.ToString
            _FNEmpWorkAge = Integer.Parse(Val(R!FNEmpWorkAge.ToString))
            _FTInsurType = Val(R!FTInsurType.ToString)

            If _SalaryDevide <= 0 Then
                _SalaryDevide = 1
            End If

            _FTSlary = R!FTSalary.ToString : _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString
            _FTPaymentCode = R!FTPayCode.ToString : _FTBankCode = R!FTBnkCode.ToString
            _FTCalSocialSta = R!FTCalSocialSta.ToString : _FTCalTaxSta = R!FTCalTaxSta.ToString

            _FTDeptCode = R!FTDeptCode.ToString : _FTDivCode = R!FTDivCode.ToString
            _FTSectCode = R!FTSectCode.ToString
            _FTUnitCode = R!FTUnitSecCode.ToString : _FTPos = R!FTPositCode.ToString

            _FTEmpState = R!FTCalType.ToString

            _FTEmpIdNo = R!FTTaxNo.ToString 'R!FTEmpIdNo.ToString
            _FTEmpIdNo1 = R!FTEmpIdNo.ToString
            _FTSocialNo = R!FTSocialNo.ToString



            _FTBranchCode = R!FTBnkBchCode.ToString
            _FTAccNo = R!FTAccNo.ToString
            '---------------------------------------- ลดหย่อน------------------------------------
            _FNChildNotLearn = 0 : _FCReduceDonate = 0 : _FCLifeInsurance = 0 : _FCLoanHouse = 0 : _FCReduceEducationSupport = 0
            _FCShare = 0 : _FCReduceFather = 0 : _FCReduceMother = 0 : _FCReSpouseFather = 0 : _FCReSpouseMother = 0 : _FTMarryIncome = 0
            _FCLifeFeeMoney = 0

            FCModFather = 0 : FCModMother = 0 : FCModMateFather = 0 : FCModMateMother = 0
            FCPremium = 0 : FCInterest = 0 : FCUnitRMF = 0 : FCUnitLTF = 0 : FCDeductDonate = 0 : FCDisabledDependents = 0 : FCDeductDonateStudy = 0
            FCHealthInsurFatherMotherMate = 0 : FTHealthInsurIDFather = 0 : FTHealthInsurIDMother = 0
            FTHealthInsurIDFatherMate = 0 : FTHealthInsurIDMotherMate = 0

            FTTotalCalContributedAmt = 0 : FTContributedAmt = 0 : FTCmpContributedAmt = 0
            FTTotalCalWorkmen = 0 : FTWorkmenAmt = 0 : _FTMaxCalWorkmen = 0 : _FTMaxWorkmenRate = 0 : FTTotalCalWorkmenAcc = 0
            _FNIncentiveAmt = 0

            _TmpFDDateEnd = _FDDateEnd
            _TmpFDDateEndP = _FDDateEnd

            If _TmpFDDateEnd <> "" Then

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,-1,Convert(Datetime,'" & _TmpFDDateEnd & "')),111)"
                _TmpFDDateEnd = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,Convert(Datetime,'" & _EndDate & "')),111)"
                _TmpFDDateEndP = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

            End If

            '--------- อายุงาน  เดือน
            _WorkAge = Val(R!FNEmpWorkAgeNewCD.ToString)

            '---------อายุงาน วัน
            _WorkAgeDay = Val(R!FNEmpWorkAgeNewDay.ToString)

            '---------อายุงาน เดือน ไม่ปัดขึ้น เพื่อคิด ค่ารางวัลอายุงาน 
            _WorkAgeSeniority = Val(R!FNEmpWorkAgeMonthSeniority.ToString)

            '---------วันทำงาน 
            _WorkingDayN = Val("0" & R!FNEmpWorkAgeNewDay_CD.ToString)

            '----------- Calculate Seniority Bonus For KKN---------------
            _FNWorkAgeSalary = 0
            'If _FTEmpState <> "2" And _FTEmpState <> "3" Then
            ''If-- Val(_PayTerm) Mod 2 <> 0 Then


            'If (_StartDate <= Left(_StartDate, 8) & "24" And _EndDate >= Left(_StartDate, 8) & "24") Then
            '    For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & _WorkAge & " AND  FNWorkAgeEnd>=" & _WorkAge & " ")
            '        _FNWorkAgeSalary = Val(ZRow!FNWorkAgeAmt.ToString)
            '        Exit For
            '    Next
            'End If
            ''End If

            'End If

            '----------- Calculate Seniority Bonus For KKN---------------

            If _FTEmpState = "2" Then
                _TotalInstalment = 12
            Else
                _TotalInstalment = 24
            End If

            _ContributedFundBeginPay = False
            If R!FDFundBegin.ToString <> "" Then
                If R!FDFundBegin.ToString < _FTEndCalculateDate Then

                    If R!FDFundEnd.ToString <> "" Then
                        If R!FDFundEnd.ToString > _FTEndCalculateDate Then
                            _ContributedFundBeginPay = True
                        End If
                    Else
                        _ContributedFundBeginPay = True
                    End If

                End If
            End If

            _Instalment = Val(_PayTerm)
            _FNIncentiveAmt = 0

            '-------------คำนวณ Incentive-------------------------------------------
            Select Case _FTInsurType
                Case 1

                    '---------ประกันเป็นวัน
                    '_Qry = "SELECT SUM ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END  ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "



                    _Qry = " SELECT  SUM(case when (ISNULL(FNProNormal,0)-  ISNULL(FNAmtNormal,0))>0 THEN ISNULL(FNProNormal,0)-  ISNULL(FNAmtNormal,0) ELSE  0  END  "
                    _Qry &= vbCrLf & " + case when (ISNULL(FNProOT,0)-  ISNULL(FNAmtOT,0))>0 THEN ISNULL(FNProOT,0)-  ISNULL(FNAmtOT,0) ELSE  0 END "
                    _Qry &= vbCrLf & " )AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                    '_Qry = "SELECT SUM (  ISNULL(FNNetAmt,0)   ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                    '_Qry = "SELECT sum(Isnull(FNAmt,0)) as FNAmt  "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "


                    '_FNIncentiveAmt = _FNIncentiveAmt + CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case 2
                    '---------ประกันเป็นเป็นงวด-------------------------------------------

                    _Qry = "SELECT  ( CASE WHEN ISNULL(FNNetProAmt,0) > ISNULL(FNNetAmt,0) THEN  (ISNULL(FNNetProAmt,0) - ISNULL(FNNetAmt,0))  ELSE 0 END  ) AS FNIncentiveAmt "
                    _Qry &= vbCrLf & " FROM ( SELECT SUM(ISNULL(FNNetAmt,0) ) AS FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) AS FNNetProAmt"
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily WITH(NOLOCK) "
                    _Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    _Qry &= vbCrLf & " ) AS M"

                    '_Qry = "SELECT   SUM (  ISNULL(FNNetAmt,0)   ) AS FNIncentiveAmt "
                    '_Qry &= vbCrLf & " FROM ( Select SUM(ISNULL(FNNetAmt,0) ) As FNNetAmt , SUM(ISNULL(FNNetProAmt,0) ) As FNNetProAmt"
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily With(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	And FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                    '_Qry &= vbCrLf & " ) AS M"
                    _FNIncentiveAmt = CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))
                    '_Qry = "SELECT sum(Isnull(FNAmt,0)) as FNAmt  "
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus WITH(NOLOCK) "
                    '_Qry &= vbCrLf & " WHERE  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    '_Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    '_Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                    '_FNIncentiveAmt = _FNIncentiveAmt + CDbl(Format(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0")), "0.00"))

                Case Else
            End Select
            '-------------------------------------

            '---------------------------------------- ลดหย่อน------------------------------------
            _Qry = " SELECT      FNHSysEmpID, FTChildSex, FTStudySta  ,isnull( FTStateNotDisTax ,'0') AS FTStateNotDisTax "
            '_Qry &= vbCrLf & ", dbo.FN_Get_ChildEmp_Age(FDChildBirthDate,'') AS FNChildAge"
            _Qry &= vbCrLf & ",dbo.FN_Get_Emp_WorkAge(FDChildBirthDate,'" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "') AS FNChildAge"
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeChild WITH(NOLOCK) "
            _Qry &= vbCrLf & " WHERE   (FNHSysEmpID = " & Val(_EmpCode) & ")"
            _dttemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)



            Dim _ChildNotStudy As Integer = 0
            Dim _ChildStudy As Integer = 0
            _FNTotalChildCare = 0
            _EmpDisTaxChildAmt = 0

            If (_EmpSex = 1) Then 'Employee Male Not Cal ChildCare
                For Each _Drow As DataRow In _dttemp.Select("FTStateNotDisTax = '0'")

                    '--------  Add Child Care For KKN--------------
                    If Val(_Drow!FNChildAge.ToString) >= _FNChildCareStartAge And Val(_Drow!FNChildAge.ToString) < _FNChildCareEndAge Then
                        _FNTotalChildCare = _FNTotalChildCare + 1
                    End If
                    '--------  Add Child Care For KKN--------------

                    If _Drow!FTStudySta.ToString = "1" Then
                        _ChildStudy = _ChildStudy + 1
                    Else
                        _ChildNotStudy = _ChildNotStudy + 1
                    End If


                    '--------  Add Amt Child Distax For KKN--------------
                    If _Drow!FTStudySta.ToString = "0" Then
                        If _Drow!FTStudySta.ToString = "1" Then
                            If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                                _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateStudy
                            End If
                        Else

                            If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                                _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateNotStudied
                            End If
                        End If

                    End If

                    ' อายุมากกว่า แต่ศึกษาอยู่ ลดหย่อนได้

                    '--------  Add Amt Child Distax For KKN--------------



                Next

                _FNNetChildCareAmt = Format(_FNTotalChildCare * _FNChildCareAmt, "0.00")

            Else
                For Each _Drow As DataRow In _dttemp.Select("FTStateNotDisTax = '0'")
                    If _Drow!FTStudySta.ToString = "1" Then
                        If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                            _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateStudy
                        End If
                    Else

                        If Val(_Drow!FNChildAge.ToString) >= (_EmpDisTax.Cfg_ModChildAllowanceAgeStart * 12) And Val(_Drow!FNChildAge.ToString) < (_EmpDisTax.Cfg_ModChildAllowanceAgeEnd * 12) Then
                            _EmpDisTaxChildAmt = _EmpDisTaxChildAmt + _EmpDisTax.Cfg_ModChildAllowanceRateNotStudied
                        End If
                    End If

                    If _Drow!FTStudySta.ToString = "1" Then
                        _ChildStudy = _ChildStudy + 1
                    Else
                        _ChildNotStudy = _ChildNotStudy + 1
                    End If

                Next
            End If



            _FCAccumulateIncome = 0 : _FCAccumulateSocial = 0 : _FCAccumulateTax = 0
            FTTotalCalContributedAcc = 0 : FTTotalCalWorkmenAcc = 0

            '----------- Get Summary ------------------
            LoadIncomeTax(_FTEmpIdNo, _PayYear, _PayTerm, _FCAccumulateIncome, _FCAccumulateTax, _FCAccumulateSocial, CountTerm, FTTotalCalContributedAcc, FTTotalCalWorkmenAcc, Integer.Parse(Val(_EmpCode)))
            '----------- Get Summary ------------------

            With _EmpDisTax

                .BaseSlary = 0
                .OtherSlary = 0
                .BeforeIncom = 0 ' _FCAccumulateIncome
                .BeforeTax = _FCAccumulateTax
                .FTMateIncome = (R!FTMateIncome.ToString = "0")
                ' ----------------------------------------- Clear Discount Tax Value -------------------------
                .Cfg_ModChildAllowanceRateNotStudied = _ChildNotStudy 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
                .Cfg_ModChildAllowanceRateStudy = _ChildStudy 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
                '-------------ลดหย่อนบุตร-----------------

                '--- หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
                .Cfg_ContributedDeducToTheFund = FTTotalCalContributedAcc 'ลูกจ้าง
                '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ

                .Cfg_ModDeductibleDonations = CDbl(Val(R!FCDeductDonate.ToString)) ' ' % ลดหย่อนเงินบริจาค
                .Cfg_ModDeductDonateStudy = CDbl(Val(R!FCDeductDonateStudy.ToString))
                .Cfg_ModFatherReduction = CDbl(Val(R!FCModFather.ToString)) '  'ลดหย่อนบิดา
                .Cfg_ModInsurancePremiums = CDbl(Val(R!FCPremium.ToString)) '  'ค่าเบี้ยประกันชีวิตส่วนบุคคล
                .Cfg_ModLendingforHousing = CDbl(Val(R!FCInterest.ToString)) ' 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย

                .Cfg_ModLTFChk = CDbl(Val(R!FCUnitLTF.ToString)) 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
                .Cfg_ModMateFatherReduction = CDbl(Val(R!FCModMateFather.ToString)) ' 'ลดหย่อนบิดา คู่สมรส
                .Cfg_ModMateMotherReduction = CDbl(Val(R!FCModMateMother.ToString)) '  'ลดหย่อนมารดา คู่สมรส
                .Cfg_ModMotherReduction = CDbl(Val(R!FCModMother.ToString)) ' 'ลดหย่อนมารดา

                .Cfg_ModPersonalExpenChk = 0 ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน

                .Cfg_ModRateReductionsByMarital = (IIf(R!FTMaritalCode.ToString = "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
                .Cfg_ModRateReductionsBySingle = (IIf(R!FTMaritalCode.ToString <> "1", 1, 0)) 'อัตราลดหย่อน ตาม สถานภาพ โสด 

                .Cfg_ModRMFChk = CDbl(Val(R!FCUnitRMF.ToString)) '  ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 
                .FCDisabledDependents = CDbl(Val(R!FCDisabledDependents.ToString)) '  'ค่าอุปการะเลี้ยงดูคนพิการหรือทุพพลภาพ
                .FCHealthInsurFatherMotherMate = CDbl(Val(R!FCHealthInsurFatherMotherMate.ToString)) '   'เบี้ยประกันสุขภาพบิดามารดาของผู้มีเงินได้และคู่สมสร

                .FCExceptAgeOver = CDbl(Val(R!FCExceptAgeOver.ToString)) ' ' 'รายการเงินได้ที่ได้รับยกเว้น ของผู้มีเงินได้ตั้งแต่ 65 ปีขึ้นไป 
                .FCExceptAgeOverMate = CDbl(Val(R!FCExceptAgeOverMate.ToString)) ' 'รายการเงินได้ที่ได้รับยกเว้น ของคู่สมรสอายุตั้งแต่ 65 ปีขึ้นไป
                '----------------------------------------------------
            End With
            '---------------------------------------- ลดหย่อน------------------------------------

            _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = "0" : _FTOtherAddCalculateTax = "0" : _FCOtherAddOt = 0
            _FTOtherAddOtCalculateSocial = "0" : _FTOtherAddOtCalculateTax = "0" : _FCBFShiftMoney = 0 : _FTShiftMoneyCalculateSocial = "0"
            _FTShiftMoneyCalculateTax = "0" : _FCDiligent = 0 : _FTDiligentCalculateSocial = "0" : _FTDiligentCalculateTax = "0"
            _FCBonusEndYear = 0 : _FTBonusEndCalculateSocial = "0" : _FTBonusEndCalculateTax = "0" : _FCShelter = 0
            _FTShelterCalculateSocial = "0" : _FTShelterCalculateTax = "0" : _FCShareFactory = 0 : _FTShareFactoryCalculateSocial = "0"
            _FNNetpayOrg = 0.0
            _FNNetpay = 0.0
            _FCSalary = -99
            _FTSlary = (_FTSlary)

            If IsNumeric(_FTSlary) Then
                _MSlary = _FTSlary
                _FCSalary = CDbl(_FTSlary)


                '------------------ คำนวณคืนพักร้อน ----------------------------

                If (_ReturnVacation > 0) Or (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then

                    Dim _Month As Integer = 0
                    Dim _Leave As Double = 0
                    Dim _SumLeaveVacation As Double = 0
                    Dim _ResetDate As String = ""

                    Dim _DateReset2 As String



                    _Qry = " SELECT CASE WHEN RiGHT(FTCurrenDate,5) >=FTLeaveReset THEN LEFT(FTCurrenDate,4) ELSE  LEFT(FTBefore,4)  END +'/' + FTLeaveReset"
                    _Qry &= vbCrLf & "  FROM"
                    _Qry &= vbCrLf & " ("
                    '_Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),GetDate(),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " SELECT  TOP 1 Convert(varchar(10),convert(date, '" & (_EndDate) & "'),111)  AS FTCurrenDate ,Convert(varchar(10),DateAdd(YEAR,-1,GetDate()),111) AS FTBefore,L.FTLeaveReset"
                    _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigLeave  AS L WITH (NOLOCK)  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH(NOLOCK )"
                    _Qry &= vbCrLf & "  ON  L.FNHSysEmpTypeId=M.FNHSysEmpTypeId"
                    _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID='" & HI.UL.ULF.rpQuoted(_EmpCode) & "' "
                    _Qry &= vbCrLf & " ) As T"

                    _DateReset = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                        ''  MsgBox("a")

                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & ("") & "','" & (_EndDate) & "') AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                    ElseIf _PayTerm = "01" Then
                        ''  MsgBox("b")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'2021/01/01','2021/12/31') AS FNEmpVacation"
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "

                    Else
                        ''  MsgBox("c")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'" & (_DateReset) & "','" & (_EndDate) & "') AS FNEmpVacation"
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),Convert(varchar(10),DateAdd(year,0,Convert(Datetime,'" & (_DateReset) & "')),111),ISNULL(FDDateProbation,'')) AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                    End If


                    _Leave = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                    '' MsgBox(_Leave)
                    If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                        '_Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'') AS FNEmpVacation"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        '_Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "
                        ''    MsgBox("d")
                        _Qry = "   SELECT  TOP 1  dbo.FN_Get_Emp_Vacation_Ret_Period_CDNEW(FNHSysEmpID,FNHSysEmpTypeId,ISNULL(FDDateStart,''),ISNULL(FDDateEnd,''),ISNULL(FDDateProbation,''),'2022/01/01','" & (_EndDate) & "') AS FNEmpVacation"
                        _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee  AS M WITH(NOLOCK)"
                        _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & " "


                        _Leave = _Leave + (HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        ''     MsgBox(_Leave)

                    End If

                    If _Leave > 0 And _DateReset <> "" Then

                        _Qry = ""
                        If (_ReturnVacation <= 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98' OR ISNULL(FTStateDeductVacation,'') ='1' )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"

                            ''      MsgBox("e")
                            'Else
                            '    _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            '    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            '    _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            '    _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '    '_Qry &= vbCrLf & " 	AND  FTDateTrans < '" & (_DateReset) & "'"
                            '    _Qry &= vbCrLf & " 	AND  FTDateTrans < Convert(varchar(10),DateAdd(year,1,Convert(Datetime,'" & (_DateReset) & "')),111)"
                            '    '_Qry &= vbCrLf & " 	AND  FTDateTrans >=Convert(varchar(10),DateAdd(year,-1,Convert(Datetime,'" & (_DateReset) & "')),111)"
                            '    _Qry &= vbCrLf & " 	AND  FTDateTrans >='" & (_DateReset) & "'"
                        End If

                        _SumLeaveVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        ''    MsgBox(_SumLeaveVacation)
                        If (_ReturnVacation > 0 And _TmpFDDateEnd <> "" And _TmpFDDateEnd >= _StartDate And _TmpFDDateEnd <= _EndDate) Then
                            ''       MsgBox("f")
                            _Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            _Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            _Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '' _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & (_DateReset) & "'"
                            _Qry &= vbCrLf & " 	AND  FTDateTrans >= '" & ("2022/01/01") & "'"

                            _SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                            ''         MsgBox(_SumLeaveVacation)
                        Else
                            ''        MsgBox("g")
                            _Qry = " "
                            '_Qry = "     SELECT       (SUM(FNTotalMinute)) AS FNTotalMinute"
                            '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                            '_Qry &= vbCrLf & " WHERE        (FTLeaveType = '98'  OR ISNULL(FTStateDeductVacation,'') ='1'  )"
                            '_Qry &= vbCrLf & "	AND FNHSysEmpID =" & Val(_EmpCode) & " "
                            '_Qry &= vbCrLf & " 	AND  FTDateTrans >= '2022/01/01'"
                            '_Qry &= vbCrLf & " 	AND  FTDateTrans <= '2022/12/31'"
                            '_SumLeaveVacation = _SumLeaveVacation + Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                            '''      MsgBox(_SumLeaveVacation)
                        End If



                        If _ReturnVacation <= 0 Then
                            _Qry = " SELECT   TOP 1 FCCfgRetValue"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigReturnVacationSet WITH(NOLOCK) "
                            _Qry &= vbCrLf & "  WHERE      (FNCalType =" & Val(_EmpType) & ")"

                            _ReturnVacation = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "0"))
                        End If

                        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                        Select Case FNStateSalaryType
                            Case 0 'ต่อเดือน

                                _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.0000000"))
                            Case 1 'ต่อวัน

                                _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                        End Select
                        'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                        Dim _FNSlaryPerDayRetVa As Double = 0
                        _FNSlaryPerDayRetVa = HI.Conn.SQLConn.GetField("Select Top 1 FNSalary From THRTPayRoll WITH(NOLOCK) where  FNHSysEmpID = " & Val(_EmpCode) & " and  FTPayYear +'/'+FTPayTerm  <'" & _PayYear & "/" & _PayTerm & "'  Order by FTPayYear +'/'+FTPayTerm DESC ", Conn.DB.DataBaseName.DB_HR, "0")


                        If (_Leave * 480) > _SumLeaveVacation Then

                            ''Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), _Leave, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                            Dim _MoneyRetVacationPerDay = _FNSlaryPerDay


                            Dim _ReteReturnVacPerDay As Double = 0
                            If _FNEmpStatus = "2" Or _FDDateEnd <= _EndDate Then
                                If _WorkAge <= 0 Then
                                    Dim _ReVacationDay As Double = 0
                                    Dim _ReVacationPiad As Double = 0

                                    '  _ReVacationDay = Double.Parse(Format(((_Leave / 26) * _WorkAgeDay), "0.000"))
                                    '  _ReVacationDay = Double.Parse((_Leave / 26) * _WorkAgeDay)
                                    '   _Leave = _ReVacationDay
                                    _ReVacationDay = _Leave
                                End If
                                _ReteReturnVacPerDay = _MoneyRetVacationPerDay
                            Else
                                _ReteReturnVacPerDay = _MoneyRetVacationPerDay  ' CDbl(Format((_FNSlaryPerDayRetVa) / CountDayPerMonth, "0.0000000"))
                                FNVacationPerDayLapaid = _MoneyRetVacationPerDay
                            End If
                            FNVacationRetMin = (_Leave * 480) - _SumLeaveVacation
                            If FNVacationRetMin <= 0 Then
                                FNVacationRetMin = 0
                            End If

                            FNVacationRetAmt = 0
                            'Dim _RetVaclationBal As Double = CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000"))

                            _AmtReturnVacation = CDbl(Format((CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000")) * (_ReturnVacation * (_ReteReturnVacPerDay / 480))), "0.000"))
                            FNVacationRetMin = CDbl(Format(((_Leave * 480) - (_SumLeaveVacation)), "0.000"))
                            FNVacationRetAmt = _AmtReturnVacation

                        End If

                    End If
                End If
                '------------------ คำนวณคืนพักร้อน ----------------------------

                ''------------------ คำนวณคืนพักร้อน ----------------------------

                ''------------------ คำนวณคืนพักร้อน ----------------------------

                _SocialMinIncome = HCfg.HSocialRate.SocialIncomeMin
                _SocialMaxIncome = HCfg.HSocialRate.SocialIncomeMax
                _SocialRate = HCfg.HSocialRate.CalSocialRate
                _SocialRateCmp = HCfg.HSocialRate.CalSocialRateCmp
                _StateSocialOnlyCmppay = HCfg.HSocialRate.StateSocialOnlyCmppay

                _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
                _AmtPlus = 0

                _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                For Each R3 As DataRow In _dtot.Rows
                    Select Case R3!FTCfgOTCode.ToString.ToUpper
                        Case "01"
                            _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                        Case "02"
                            _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                        Case "03"
                            _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                        Case "04"
                            _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "05"
                            _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                    End Select

                Next

                '---------รายได้รายหัก อื่นๆ-------------------------
                '_Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                '_Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                '_Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                '_Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                '_Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                '_Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay"

                '_Qry &= vbCrLf & "   , ISNULL(FN.FTStaLateM,0) FTStaLateM ,  ISNULL(FN.FTStaLateA,0) FTStaLateA "

                '_Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                '_Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                '_Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                '_Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ")   AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                '_Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"




                'If _EmpCalType = "0" Then
                '    If Val(_PayTerm) Mod 2 = 0 Then
                '        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                '    Else
                '        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                '    End If
                'End If
                '---------รายได้รายหัก อื่นๆ-------------------------
                _Qry = " SELECT   FN.FTStaTax, FN.FTStaSocial,  (ISNULL(BF.FTFinAmt,0)) As FCFinAmt   , FM.FTFinType"
                _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay,"
                _Qry &= vbCrLf & " FN.FTStaLatePerDay,FN.FTStaAbsentPerDay,FN.FTStaLeavePerDay,FN.FTStaVacationPerDay,FN.FTStaMaternityleaveNotpayPerDay"
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode  INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE    (BF.FNHSysEmpID = " & Val(_EmpCode) & ") AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2')"

                If _EmpCalType = "0" Then
                    If Val(_PayTerm) Mod 2 = 0 Then
                        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                    Else
                        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                    End If
                End If
                _Qry &= vbCrLf & "UNION  "
                _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial,  0 As FCFinAmt   , FM.FTFinType"
                _Qry &= vbCrLf & ",FN.FTCalType, FN.FTPayType, FN.FTStaCalOT, FN.FTStaLate, FN.FTStaAbsent, FN.FTStaLeave"
                _Qry &= vbCrLf & ", FN.FTStaVacation, FN.FTStaRetire, FN.FTStaHoliday, FN.FNOTTimeM,"
                _Qry &= vbCrLf & "  FN.FTOTTime,FN.FTFinCode "
                _Qry &= vbCrLf & "  ,FN.FTStaCheckLate, FN.FTLateMin,"
                _Qry &= vbCrLf & " FN.FTStaCheckLeave, FN.FTLeaveMin, FN.FTStaCheckWorkTime, FN.FTCheckWorkTimeMin, FN.FTStaMaternityleaveNotpay,"
                _Qry &= vbCrLf & " FN.FTStaLatePerDay,FN.FTStaAbsentPerDay,FN.FTStaLeavePerDay,FN.FTStaVacationPerDay,FN.FTStaMaternityleaveNotpayPerDay"

                _Qry &= vbCrLf & " FROM        [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)   INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE    (FM.FTFinType = '1' OR FM.FTFinType = '2')   and FN.FTFinCode ='008'  AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)

                If _EmpCalType = "0" Then
                    If Val(_PayTerm) Mod 2 = 0 Then
                        _Qry &= vbCrLf & "  AND FTPayType <> '' "
                    Else
                        _Qry &= vbCrLf & "  AND FTPayType <> '1' "
                    End If
                End If
                _Qry &= vbCrLf & " and FN.FTFinCode  not in (  Select FTFinCode From [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeFin  WITH (NOLOCK)  "
                _Qry &= vbCrLf & " WHERE    (FNHSysEmpID = " & Val(_EmpCode) & ") )"

                ' _Qry &= vbCrLf & "  AND FTPayType <> '" & IIf(_EmpCalType = "0" Or (Val(_PayTerm) Mod 2 = 0), "", "1") & "' "



                _dtAddOtherAmt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)




                _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
                _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
                _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
                _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet"
                _Qry &= vbCrLf & "  WHERE        (FTFinCode = N'001') OR  (FTFinCode = N'007')  AND  FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _GAmtAddCalOT = 0
                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTStaCalOT='1' AND FTPayType='0' ")
                    _GAmtAddCalOT = _GAmtAddCalOT + Val(R2!FCFinAmt.ToString)
                Next

                _FCOtherAdd = 0 : _FTOtherAddCalculateSocial = 0 : _FTOtherAddCalculateTax = 0 : _FCOtherDeduct = 0

                '---------------- Adjust Before Calculate------------------------------------
                _Qry = " SELECT        FN.FTStaTax, FN.FTStaSocial, (ISNULL(BF.FCFinAmt,0))  AS FCFinAmt, FM.FTFinType,ISNULL(BF.FNDay,-1) As FNDay,BF.FTFinCode "
                _Qry &= vbCrLf & " FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage AS BF WITH (NOLOCK) INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK) ON BF.FTFinCode = FN.FTFinCode INNER JOIN"
                _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                _Qry &= vbCrLf & " WHERE        (BF.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "')"
                _Qry &= vbCrLf & "  AND (BF.FTPayTerm = '" & HI.UL.ULF.rpQuoted(_PayTerm) & "') "
                _Qry &= vbCrLf & " AND (BF.FNHSysEmpID = " & Val(_EmpCode) & ")"
                _Qry &= vbCrLf & "  AND (FM.FTFinType = '1' OR FM.FTFinType = '2') AND  FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)

                If _AmtReturnVacation > 0 Then
                    _Qry &= vbCrLf & " UNION ALL "
                    _Qry &= vbCrLf & " SELECT   FN.FTStaTax, FN.FTStaSocial, " & _AmtReturnVacation & "  AS FCFinAmt, FM.FTFinType,-1 As FNDay,FM.FTFinCode "
                    _Qry &= vbCrLf & " FROM     [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet AS FN WITH (NOLOCK)  INNER JOIN"
                    _Qry &= vbCrLf & "          [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinance AS FM WITH (NOLOCK) ON FN.FTFinCode = FM.FTFinCode"
                    _Qry &= vbCrLf & " WHERE (FM.FTFinCode='019') AND   FN.FNHSysCmpId=" & Val(HI.ST.SysInfo.CmpID)
                End If

                _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                For Each R2 As DataRow In _dt.Select("FNDay<=0")
                    Select Case R2!FTFinType.ToString
                        Case "1"
                            _FCOtherAdd = _FCOtherAdd + Val((R2!FCFinAmt.ToString))

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax + Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial + Val((R2!FCFinAmt.ToString))

                        Case "2"

                            If R2!FTStaTax.ToString = "1" Then _FTOtherAddCalculateTax = _FTOtherAddCalculateTax - Val((R2!FCFinAmt.ToString))
                            If R2!FTStaSocial.ToString = "1" Then _FTOtherAddCalculateSocial = _FTOtherAddCalculateSocial - Val((R2!FCFinAmt.ToString))


                            _FCOtherDeduct = _FCOtherDeduct + Val((R2!FCFinAmt.ToString))
                    End Select
                Next

                _DayAdjAdd = 0
                _WageAdjAdd = 0

                For Each R2 As DataRow In _dt.Select("FNDay> 0")

                    _DayAdjAdd = _DayAdjAdd + Val((R2!FNDay.ToString))
                    _WageAdjAdd = _WageAdjAdd + Val((R2!FCFinAmt.ToString))

                Next

                _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
                _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= 480 THEN 480   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= 480 THEN 480   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= 480 THEN 480 ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
                _Qry &= vbCrLf & " , FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO,Max(ISNULL(FTStateMedicalCertificate,'')) AS FTStateMedicalCertificate "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_EmpCode) & " )"

                If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_DateStartOfMonth) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_DateEndOfMonth) & "' "
                Else
                    _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                    _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "
                End If

                _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

                _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	,Isnull(SH.FNRatePaid,1) AS FNRatePaid , Isnull(SH.FNStateShift,0) AS FNStateShift  "
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) )     AS FNTime"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT1_5,0) AS FNOT1_5"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNOT2,0 ) AS FNOT2  , ISNULL(T.FNOT3,0) AS FNOT3, ISNULL(T.FNOT4,0) AS FNOT4"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(T.FNLateNormalCut,0 )   AS FNLateNormalCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateOtMin,0) As FNLateOtMin,ISNULL(T.FNLateOtCut,0) As FNLateOtCut"
                _Qry &= vbCrLf & " , ISNULL(T.FNLateMMin,0) As FNLateMorning"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNLateAfMin,0) AS FNLateAfternoon,Isnull(T.FNAbsentCut,0) AS FNAbsentCut "
                _Qry &= vbCrLf & " 	, (CASE WHEN ISNULL(T.FNAbsentSP,0) = ISNULL(T.FNAbsent,0) THEN 0 ELSE  ISNULL(T.FNAbsent,0)  END ) AS FNAbsent_Cut "
                _Qry &= vbCrLf & " 	, ISNULL(T.FNCutAbsent,0) AS FNAbsent "
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0) + ISNULL(T.FNLateNormalMin,0) )- (ISNULL(T.FNLateNormalCut,0) + ISNULL(T.FNAbsentCut,0) )   AS FNTimeMin"
                _Qry &= vbCrLf & " ,(ISNULL(T.FNTimeMin,0) + ISNULL(T.FNSpecialTimeMin,0)) As FNTimeMinOrg"
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1Min,0) As FNOT1Min  "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT1_5Min,0) As FNOT1_5Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNOT2Min,0) As FNOT2Min "
                _Qry &= vbCrLf & " , ISNULL(T.FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                _Qry &= vbCrLf & " ,ISNULL(T.FNLateMMin,0) AS FNLateMMin "
                _Qry &= vbCrLf & " , ISNULL(T.FNLateAfMin,0) AS FNLateAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireMMin,0) AS FNRetireMMin "
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireAfMin,0 )  as FNRetireAfMin"
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireNormalCut,0) As FNRetireNormalCut "
                _Qry &= vbCrLf & " , ISNULL(T.FNRetireOtMin,0) AS FNRetireOtMin"
                _Qry &= vbCrLf & " ,ISNULL(T.FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"
                _Qry &= vbCrLf & " ,CASE WHEN T.FTWeekDay=1 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSunday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSunday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=2 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTMonday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTMonday,'0') ='1'  ) THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=3 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTTuesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTTuesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=4 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTWednesday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTWednesday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=5 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTThursday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTThursday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=6 AND   ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTFriday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTFriday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  WHEN T.FTWeekDay=7 AND  ((EHL.FNHSysEmpID  IS NULL  AND ( ISNULL(SH.FTSaturday,'0') ='1' OR ISNULL(ETHL.FDHolidayDate,'') <>'' ))  OR ISNULL(EHL.FTSaturday,'0') ='1'  )  THEN '1'  "
                _Qry &= vbCrLf & "  ELSE '0' END AS FTWeekly,ISNULL(FTStateAccept,'') AS FTStateAccept "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
                _Qry &= vbCrLf & "   INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK)  ON  T.FNHSysEmpID =  M.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployeeWeekly AS EHL WITH (NOLOCK) ON T.FNHSysEmpID=EHL.FNHSysEmpID"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN   [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmpTypeWeeklySpecial AS ETHL WITH (NOLOCK) ON T.FTDateTrans = ETHL.FDHolidayDate AND M.FNHSysEmpTypeId=ETHL.FNHSysEmpTypeId"
                _Qry &= vbCrLf & "  LEFT OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS SH WITH (NOLOCK) ON T.FNHSysShiftID = SH.FNHSysShiftID"

                _Qry &= vbCrLf & "  WHERE (T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "'  "

                If _FDDateEnd <> "" Then
                    _Qry &= vbCrLf & " 	AND T.FTDateTrans < '" & HI.UL.ULDate.ConvertEnDB(_FDDateEnd) & "'  "
                End If
                If _FTEmpState <> "2" And _FTEmpState <> "3" Then ' คำนวณค่าแรงพนักงานรายเดือน
                    _Qry &= vbCrLf & " 	AND T.FTStateAccept = '1'  "
                End If

                _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                '---------------Get Trans Daily--------------------------------------
                _GFNTime = 0 : _GFNNotRegis = 0 : _GFNOT1 = 0 : _GFNOT1_5 = 0
                _GFNOT2 = 0 : _GFNOT3 = 0 : _GFNOT4 = 0 : _GFNLeaveSick = 0 : _GFNLeaveBusiness = 0
                _GFNLeaveVacation = 0 : _GFNLeavePregnant = 0 : _GFNLeaveOrdain = 0 : _GFNLeaveMarry = 0 : _GFNLeaveSpecial = 0
                _GFNLeaveOther = 0 : _GFNLateNormalMin = 0 : _GFNLateNormalCut = 0 : _GFNLateOtMin = 0
                _GFNLateOtCut = 0 : _GFNLateMorning = 0 : _GFNLateAfternoon = 0
                _GFNAbsent = 0 : _GFNCutAbsent = 0 : _GFNLeavePay = 0 : _GFNTimeMin = 0 : _GFNOT1Min = 0 : _GFNOT1_5Min = 0 : _GFNTimeMin_Real_After_Probation = 0
                _GFNOT2Min = 0 : _GFNOT3Min = 0 : _GFNLateMMin = 0 : _GFNLateAfMin = 0 : _GFNRetireMMin = 0
                _GFNRetireAfMin = 0 : _GFNRetireNormalCut = 0 : _GFNRetireOtMin = 0 : _GFNRetireOtCut = 0
                _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
                _Gtotalleave = 0 : _GtotalleavePay = 0 : _GtotalleaveNotPay = 0 : _GtotalleavePayCalSso = 0 : _GtotalleavePayCalSsoAmt = 0
                _TotalHoliDay = 0
                _GFNLateNormalMinNotHoliday = 0

                '------------------- เริ่มการคำนวณรายวัน
                Dim _oHoliday As Integer = 0

                _TotalWorkDay = 0
                _ShiftAmt = 0
                _ShiftValue = 0
                _ShiftOTValue = 0
                _ShiftOTAmt = 0
                _FCAdd = 0 : _FTAddCalculateSocial = 0 : _FTAddCalculateTax = 0 : _FCDeduct = 0
                _GAmtPlus = 0

                Dim _RateShipftPerDay As Double = 0
                Dim _StateShift As Integer = 0
                If _FDDateStart > _FTSatrtCalculateDate Then _FTSatrtCalculateDate = _FDDateStart

                Dim _fnMonthWorkAge As Integer = 0

                Dim temp As Date
                Dim temp1 As Integer
                Dim i As Integer
                Dim day1 As Integer
                Dim day2 As Integer

                Dim Day As Integer
                Dim Month As Integer


                Do While _FTSatrtCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTSatrtCalculateDate < _FDDateEnd)

                    '_fnMonthWorkAge = DateDiff("m", _FDDateStart, HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate))




                    temp1 = DateDiff("m", HI.UL.ULDate.ConvertEnDB(_FDDateStart), HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate))

                    day1 = DatePart("d", HI.UL.ULDate.ConvertEnDB(_FDDateStart))
                    day2 = DatePart("d", HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate))
                    If day1 > day2 Then
                        temp = DateAdd("m", (temp1 - 1), HI.UL.ULDate.ConvertEnDB(_FDDateStart))
                        Month = (temp1 - 1)
                    Else
                        temp = DateAdd("m", (temp1), HI.UL.ULDate.ConvertEnDB(_FDDateStart))
                        Month = (temp1)
                    End If

                    For i = 1 To 31
                        If temp = HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) Then Exit For
                        temp = DateAdd("d", 1, temp)
                    Next i

                    Day = (i - 1)



                    'If (_EndDate >= Left(_StartDate, 8) & "07" And _EndDate <= Left(_StartDate, 8) & "24") Then
                    For Each ZRow In _tmpWorkAge.Select(" FNWorkAgeStart<= " & Month & " AND  FNWorkAgeEnd>=" & Month & " ")
                        _FNWorkAgeSalary = _FNWorkAgeSalary + Val(ZRow!FNWorkAgeAmt.ToString)

                    Next
                    'End If

                    _RateShipftPerDay = 0
                    _oHoliday = 0
                    FTHldType = 0
                    _StateShift = 0
                    Dim _NewSlary As String

                    _Qry = "  SELECT   TOP 1   FNCurrentSlary  AS AMT"
                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary WITH(NOLOCK) "
                    _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "') "
                    _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_EmpCode) & ")"
                    _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    _FCSalary = _MSlary
                    If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    _Holiday = ""

                    For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                        _Holiday = "H"
                        FTHldType = Val(IR!FTHldType.ToString)
                        Exit For
                    Next

                    _FTShift = ""

                    _FNTime = 0
                    _FNNotRegis = 0
                    _FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
                    _FNOT3 = 0 : _FNOT4 = 0
                    _FNLateNormalMin = 0 : _FNLateNormalCut = 0
                    _FNLateOtMin = 0 : _FNLateOtCut = 0
                    _FNLateMorning = 0 : _FNLateAfternoon = 0
                    _LateCutAbsent = 0 : _FNAbsent = 0
                    _FNTimeMin = 0 : _FNOT1Min = 0
                    _FNOT1_5Min = 0 : _FNOT2Min = 0
                    _FNOT3Min = 0 : _FNOT4Min = 0
                    _FNLateMMin = 0 : _FNLateAfMin = 0
                    _FNRetireMMin = 0 : _FNRetireAfMin = 0
                    _FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
                    _FNRetireOtMin = 0 : _FNRetireOtMin = 0
                    _FNRetireOtCut = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _AmtAddCalOT = 0
                    _GtotalleavePayCalSso = 0
                    _LeaveCode = ""

                    Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                    Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                    For Each R2 In _R

                        _RatePay = Double.Parse("0" & R2!FNRatePaid.ToString)
                        _RateShipftPerDay = _RatePay
                        _StateShift = Integer.Parse("0" & R2!FNStateShift.ToString)

                        _FTShift = R2!FTShift.ToString
                        _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                        _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                        _FNNotRegis = Val(R2!FNNotRegis.ToString)
                        _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                        _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                        _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                        _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                        _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                        _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent_Cut.ToString)
                        _FNOT1Min = Val(R2!FNOT1Min.ToString)
                        _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                        _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                        _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                        _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                        _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                        _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                        _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)
                        _InOT = R2!FTIn3.ToString
                        _OutOT = R2!FTOut3.ToString

                        _Over = R2!FTOverClock.ToString

                        If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            _TotalWorkDay = _TotalWorkDay + 1

                            _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                            If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                If _FNOT1Min + _FNOT2Min + _FNOT4Min + _FNOT1_5Min > 0 Then
                                    '' _FNNetOTMealAmt = _FNNetOTMealAmt + _FNOTMealAmt
                                End If

                                _SPDateType = 0

                                _Holiday = ""

                                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _Holiday = "H"
                                    Exit For
                                Next

                                If _Holiday <> "" Then _SPDateType = 2

                                Dim _StateLeaveOther As Boolean = False
                                Dim _StateLeavacation As Boolean = False
                                Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                Dim _SumLeave As Integer = 0

                                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'")
                                    _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                    If Val(sR!LeaveType) = 1 Then
                                        _StateLeavacation = True
                                    Else
                                        _StateLeaveOther = True
                                    End If

                                    If Val(sR!LeaveType) = 2 Then
                                        _StateFTStaMaternityleaveNotpay = True
                                    End If

                                Next

                                '--------------------------- ค่ากะ -------------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)



                                    If _StatePass Then
                                        _ShiftAmt = _ShiftAmt + _ShiftValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ -------------------------------------

                                '****************************** Bonus 

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='008' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    ' If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        Dim _Amt As Double = 0
                                        Dim _Cmd As String = ""
                                        _Cmd = "Select Top 1 isnull(FNAmt,0) AS  FNAmt From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily_Bonus with(nolock)"
                                        _Cmd &= vbCrLf & "where FNHSysEmpID=" & Integer.Parse(_EmpCode)
                                        _Cmd &= vbCrLf & "and FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "'"
                                        _Amt = Double.Parse(HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "0"))
                                        _BonusAmt = _BonusAmt + _Amt

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _Amt
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _Amt
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _Amt
                                    End If
                                Next


                                '****************************** End Bonus

                                '--------------------------- ค่ากะ OT ----------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then

                                        _ShiftOTAmt = _ShiftOTAmt + _ShiftOTValue

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + _ShiftOTValue
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + _ShiftOTValue
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + _ShiftOTValue

                                    End If

                                Next
                                '--------------------------- ค่ากะ OT ----------------------------------

                                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='0' And FTFinCode<>'057' And FTFinCode<>'043' And FTFinCode<>'061'  And FTFinCode<>'062' And FTFinCode<>'063' And FTFinCode<>'064' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then

                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                        If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)
                                        If RFin!FTStaCalOT.ToString = "1" Then _AmtAddCalOT = _AmtAddCalOT + Val(RFin!FCFinAmt.ToString)

                                        If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                            _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                        Else

                                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                            Next

                                        End If
                                    End If
                                Next
                            End If
                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                        End If

                    Next


                    'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ
                    Select Case FNStateSalaryType
                        Case 0 'ต่อเดือน
                            _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.000"))
                            _FNSlaryPerDay = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                            ' _SalaryPayLeave = CDbl(Format((_FCSalary) / 26, "0.000")) ' ลาป่วย หารวันทำงานในงวด  meeting 20180227 pMote , pWest , pTuk cd , pAnuwat 

                            _SalaryPayLeave = CDbl(Format((_FCSalary) / CountDayPerMonth, "0.000"))
                        Case 1 'ต่อวัน
                            _FNSlaryPerMonth = CDbl(Format((_FCSalary * CountDayPerMonth), "0.000"))
                            _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.000"))
                            _SalaryPayLeave = _FNSlaryPerDay
                    End Select
                    'เพิ่มค่าแรง กัมพูชา 20161206
                    '  _SalaryPayLeave = _FNSlaryPerDay
                    _FNSlaryPerMonth = _FNSlaryPerMonth
                    _FNSlaryPerDay = _FNSlaryPerDay
                    _SalaryPayOTKM = _FNSlaryPerDay


                    'อัตราค่าแรงบันทึก ต่อเดือน หรือ ต่อวัน ฯลฯ

                    If _RateShipftPerDay > 1 Then
                        _FNSlaryPerDay = _FNSlaryPerDay * _RateShipftPerDay
                    End If

                    If _StateShift = 1 Then
                        _Qry = " SELECT FTCfgOTCode,Isnull(FCCfgOTNightValue,0) as  FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus   "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    Else
                        _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    End If




                    _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000"))
                    _FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000"))
                    '_SalaryPayLeaveMin = CDbl(Format(CDbl(Format(_SalaryPayLeave / 8, "0.00000")) / 60, "0.00000"))
                    _SalaryPayLeaveMin = CDbl(_SalaryPayLeave / 8) / 60

                    _FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_SalaryPayOTKM + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000")) / 60, "0.00000"))

                    _FNSlaryOTPerHour = CDbl(Format((_SalaryPayOTKM + _AmtAddCalOT + _GAmtAddCalOT) / 8, "0.00000"))

                    If _FTShift = "" Then
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If
                    Else

                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If

                        If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _WorkDay = _WorkDay + 1
                        End If

                        If _Holiday = "" Then
                            _GFNLateNormalMinNotHoliday = _GFNLateNormalMinNotHoliday + _FNLateNormalMin
                        End If

                        _GFNLateNormalMin = _GFNLateNormalMin + _FNLateNormalMin
                        _GFNLateNormalCut = _GFNLateNormalCut + _FNLateNormalCut
                        _GFNLateOtMin = _GFNLateOtMin + _FNLateOtMin
                        _GFNLateOtCut = _GFNLateOtCut + _FNLateOtCut
                        _GFNLateMorning = _GFNLateMorning + _FNLateMorning
                        _GFNLateAfternoon = _GFNLateAfternoon + _FNLateAfternoon
                        _GFNAbsent = _GFNAbsent + _FNAbsent
                        _GFNCutAbsent = _GFNCutAbsent + _LateCutAbsent
                        _GFNTimeMin = _GFNTimeMin + _FNTimeMin
                        _GFNOT1Min = _GFNOT1Min + _FNOT1Min
                        _GFNOT1_5Min = _GFNOT1_5Min + _FNOT1_5Min
                        _GFNOT2Min = _GFNOT2Min + _FNOT2Min
                        _GFNOT3Min = _GFNOT3Min + _FNOT3Min
                        _GFNOT4Min = _GFNOT4Min + _FNOT4Min
                        _GFNLateMMin = _GFNLateMMin + _FNLateMMin
                        _GFNLateAfMin = _GFNLateAfMin + _FNLateAfMin
                        _GFNRetireOtMin = _GFNRetireOtMin + _FNRetireOtMin
                        _GFNRetireOtCut = _GFNRetireOtCut + _FNRetireOtCut
                        _GFNRetireMMin = _GFNRetireMMin + _FNRetireMMin
                        _GFNRetireAfMin = _GFNRetireAfMin + _FNRetireAfMin
                        _GFNRetireNormalCut = _GFNRetireNormalCut + _FNRetireNormalCut

                        If HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) >= HI.UL.ULDate.ConvertEnDB(_FDDateProbation) Then
                            _GFNTimeMin_Real_After_Probation = _GFNTimeMin_Real_After_Probation + (_FNTimeMin - _FNLateNormalMin)
                        End If



                    End If

                    _TmpLeavePay = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0 : FNPayLeaveSpecialBahtMin = 0
                    _FNLeaveNotPay = 0
                    _LeaveCode = ""
                    For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDate) & "' ")
                        _LeaveCode = sR!LFTLeaveCode.ToString

                        _TmpLeavePay = Val(sR!FNTotalPayMinute.ToString)

                        Select Case sR!LFTLeaveCode.ToString.ToUpper
                            Case "97"

                            Case Else

                                _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                                _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                                _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                                If sR!FTStaCalSSO.ToString = "1" Then
                                    _GtotalleavePayCalSso = Val(sR!FNTotalPayMinute.ToString)
                                End If
                        End Select

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        Select Case sR!LFTLeaveCode.ToString.ToUpper '""Val(sR!LeaveType)
                            Case "98"
                                _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                            Case "998"
                                _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                            Case "1"
                                FNPayLeaveBusinessBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveBusinessBahtMin = GFNPayLeaveBusinessBahtMin + FNPayLeaveBusinessBahtMin

                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                            Case "0"

                                FNPayLeaveSickBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveSickBahtMin = GFNPayLeaveSickBahtMin + FNPayLeaveSickBahtMin
                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)

                                If FNPayLeaveSickBahtMin > 0 Then
                                    _LeaveSickPay = _LeaveSickPay + 1

                                    Dim _PayPer As Double = 0
                                    Select Case _LeaveSickPay
                                        Case Is <= 30
                                            _PayPer = 100
                                        Case Is <= 90
                                            _PayPer = 60
                                        Case Is <= 180
                                            _PayPer = 0
                                    End Select

                                    If _PayPer = 0 Then
                                        FNPayLeaveSickBahtMin = 0
                                        GFNPayLeaveSickBahtMin = GFNPayLeaveSickBahtMin - FNPayLeaveSickBahtMin
                                        _GFNLeaveOther = _GFNLeaveOther - FNPayLeaveSickBahtMin
                                    End If

                                    If _DTEmpPayLeaveSick.Select("FNSalary=" & _SalaryPayLeave & " AND FNPayPer=" & _PayPer & " ").Length > 0 Then
                                        For Each Rx As DataRow In _DTEmpPayLeaveSick.Select("FNSalary=" & _SalaryPayLeave & "  AND FNPayPer=" & _PayPer & "  ")
                                            Rx!FNDay = Val(Rx!FNDay) + FNPayLeaveSickBahtMin
                                            Exit For
                                        Next
                                    Else
                                        _DTEmpPayLeaveSick.Rows.Add(_SalaryPayLeave, FNPayLeaveSickBahtMin, _PayPer)
                                    End If


                                End If

                            Case "16" ''Accident on work
                                FNPayLeaveAccidentBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNPayLeaveAccidentBahtMin = GFNPayLeaveAccidentBahtMin + FNPayLeaveAccidentBahtMin
                            Case "999"
                                FNPayLeaveSpecialBahtMin = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveSpecial = _GFNLeaveSpecial + FNPayLeaveSpecialBahtMin
                            Case "97"
                                FNParturitionLeaveMin = Val(sR!FNTotalPayMinute.ToString)
                                GFNParturitionLeaveMin = GFNParturitionLeaveMin + FNParturitionLeaveMin

                                ' _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                            Case Else
                                _FNLeavePay = Val(sR!FNTotalPayMinute.ToString)
                                _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End Select

                    Next

                    _GFNLeavePay = _GFNLeavePay + _FNLeavePay
                    _SocialBefore = 0
                    _SocialBeforeAmt = 0

                    Dim _WageAmtPerDay As Double = 0
                    Dim _WageOTAmtPerDay As Double = 0
                    Dim _TimeOTMdr As Integer = 0

                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                    Else
                        _WageAmtPerDay = CDbl(Format((_FNTimeMin) * _FNSlaryPerMin, "0.000"))
                        _FNEmpBaht = _FNEmpBaht + _WageAmtPerDay
                    End If

                    _nBahtOt1 = _nBahtOt1 + CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000"))


                    If FTHldType = 1 And _FNOT3Min > 0 Then
                        _GAmtPlus = _GAmtPlus + _AmtPlus
                    End If

                    _nBahtOt15 = _nBahtOt15 + CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.000"))

                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.000"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.000"))

                    _LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.000"))

                    Dim _TmpFNLapaidAmt As Double = CDbl(Format(_TmpLeavePay * _SalaryPayLeaveMin, "0.000"))
                    Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _SalaryPayLeaveMin, "0.000"))

                    _Lapaid = _Lapaid + _TmpLapaidAmt
                    _GtotalleavePayCalSsoAmt = _GtotalleavePayCalSsoAmt + CDbl(Format(_GtotalleavePayCalSso * _SalaryPayLeaveMin, "0.000"))  'เงินลาจ่ายที่นำไปคิดประกันสังคม

                    If _LeaveCode <> "" And _FNLeaveVacation > 0 Then

                        'Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay)

                        '_FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * (_MoneyRetVacationPerDay / 480), "0.000"))

                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    Else
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.000"))
                    End If

                    If _FTStatePayHoliday <> "1" Then
                        _oHoliday = 0
                    Else

                        If (_FNLeaveNotPay <= 0) Then
                            If _TmpFNLapaidAmt <= 0 Then
                                _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.000"))
                            Else
                                _TotalHoliDay = _TotalHoliDay - _oHoliday
                                _oHoliday = 0
                            End If
                        Else

                            _TotalHoliDay = _TotalHoliDay - _oHoliday
                            _oHoliday = 0
                        End If

                    End If
                    _FNSlaryPerDayNormal = CDbl(Format(_FNSlaryPerDay, "0.00000"))


                    If _DTEmpWorkDay.Select("FNSalary=" & _FNSlaryPerDay & "").Length > 0 Then
                        For Each Rx As DataRow In _DTEmpWorkDay.Select("FNSalary=" & _FNSlaryPerDay & "")

                            Rx!FNDay = Val(Rx!FNDay) + _FNTimeMin
                            Rx!FNOT1 = Val(Rx!FNOT1) + _FNOT1Min
                            Rx!FNOT15 = Val(Rx!FNOT15) + _FNOT1_5Min
                            Rx!FNOT2 = Val(Rx!FNOT2) + _FNOT2Min
                            Rx!FNOT3 = Val(Rx!FNOT3) + _FNOT3Min
                            Rx!FNOT4 = Val(Rx!FNOT4) + _FNOT4Min
                            Rx!FNHoloday = Val(Rx!FNHoloday) + (_oHoliday)
                            Rx!FNLate = Val(Rx!FNLate) + _FNLateNormalCut
                            Rx!FNAbsent = Val(Rx!FNAbsent) + _FNAbsent
                            Rx!FNLateCutAmtAbsent = Val(Rx!FNLateCutAmtAbsent) + _LateCutAbsent
                            Rx!FNLeavePay = Val(Rx!FNLeavePay) + _FNLeavePay
                            Rx!FNLeaveNotPay = Val(Rx!FNLeaveNotPay) + (_FNLeaveNotPay)
                            Rx!FNBusiness = Val(Rx!FNBusiness) + FNPayLeaveBusinessBahtMin
                            Rx!FNSpecial = Val(Rx!FNSpecial) + FNPayLeaveSpecialBahtMin
                            Rx!FNParturition = Val(Rx!FNParturition) + FNParturitionLeaveMin
                            Rx!FNVacation = Val(Rx!FNVacation) + _FNLeaveVacation
                            Rx!FNShiftNo = _StateShift
                            Rx!FNSlaryOTPerMin = _FNSlaryOTPerMin
                            Rx!FNSlaryNormal = _FNSlaryPerDayNormal

                            Rx!FNLeaveAccident = Val(Rx!FNLeaveAccident) + FNPayLeaveAccidentBahtMin

                            Exit For
                        Next
                    Else
                        _DTEmpWorkDay.Rows.Add(_FNSlaryPerDay, _FNTimeMin, _FNOT1Min, _FNOT1_5Min,
                                               _FNOT2Min, _FNOT3Min, _FNOT4Min, (_oHoliday),
                                               _FNLateNormalCut, _FNAbsent, _LateCutAbsent, _FNLeavePay,
                                               _FNLeaveNotPay, FNPayLeaveBusinessBahtMin, FNPayLeaveSpecialBahtMin, FNParturitionLeaveMin, _FNLeaveVacation, _StateShift, _FNSlaryOTPerMin, _FNSlaryPerDayNormal, FNPayLeaveAccidentBahtMin)
                    End If

                    _FTSatrtCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTSatrtCalculateDate, 1))

                Loop

                _FNEmpBaht = 0
                _FNEmpBaht = 0
                _nBahtOt1 = 0
                _nBahtOt15 = 0
                _nBahtOt2 = 0
                _nBahtOt3 = 0
                _nBahtOt4 = 0
                _nBahtAbsent = 0
                _LateCutAmt = 0
                _LateCutAmtAbsent = 0
                _HBaht = 0
                _LaNotpaid = 0
                _Lapaid = 0
                FNPayLeaveBusinessBaht = 0 : FNPayLeaveSickBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0 : FNPayLeaveAccidentBaht = 0
                _FCPayVacationBaht = 0
                _FNSlaryOTPerMin = 0
                Dim _TotalxDay As Integer = 0
                For Each Rx As DataRow In _DTEmpWorkDay.Rows

                    _FNSlaryPerMin = CDbl(Format(CDbl(Rx!FNSalary) / 480, "0.00000"))
                    _FNSlaryPerDay = CDbl(Format(CDbl(Rx!FNSalary), "0.00000"))
                    _FNSlaryOTPerMin = Double.Parse("0" & Rx!FNSlaryOTPerMin)

                    _TotalxDay = 0



                    Try
                        If FNWorkDayInWeekBF > 0 Then
                            'If Val(Rx!FNDay) > ((FNWorkDayInMonth - FNWorkDayInWeekBF) * 480) Then
                            '    _FNEmpBaht = _FNEmpBaht + CDbl(Format(((FNWorkDayInMonth - FNWorkDayInWeekBF) * 480) * _FNSlaryPerMin, "0.000"))
                            'Else

                            _TotalxDay = Val(Rx!FNDay) \ 480.0
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                            ' End If
                        Else
                            _TotalxDay = Val(Rx!FNDay) \ 480.0
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                            _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                        End If
                    Catch ex As Exception
                        _TotalxDay = Val(Rx!FNDay) \ 480.0
                        _FNEmpBaht = _FNEmpBaht + CDbl(Format(_TotalxDay * _FNSlaryPerDay, "0.000"))
                        _FNEmpBaht = _FNEmpBaht + CDbl(Format((Val(Rx!FNDay) - (_TotalxDay * 480)) * _FNSlaryPerMin, "0.000"))
                    End Try


                    If Double.Parse(Rx!FNShiftNo.ToString) = 1 Then
                        _Qry = " SELECT FTCfgOTCode,Isnull(FCCfgOTNightValue,0) as  FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus   "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    Else
                        _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                        _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                        _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                        _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                        For Each R3 As DataRow In _dtot.Rows
                            Select Case R3!FTCfgOTCode.ToString.ToUpper
                                Case "01"
                                    _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                                Case "02"
                                    _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                                Case "03"
                                    _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                                Case "04"
                                    _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                                    _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                                Case "05"
                                    _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            End Select

                        Next
                    End If



                    _nBahtOt1 = _nBahtOt1 + CDbl(Format(Val(Rx!FNOT1) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000"))
                    _nBahtOt15 = _nBahtOt15 + CDbl(Format(Val(Rx!FNOT15) * ((_FNSlaryOTPerMin) * _RateOT15), "0.000"))
                    _nBahtOt2 = _nBahtOt2 + CDbl(Format(Val(Rx!FNOT2) * ((_FNSlaryOTPerMin) * _RateOT2), "0.000"))
                    _nBahtOt3 = _nBahtOt3 + CDbl(Format(Val(Rx!FNOT3) * ((_FNSlaryOTPerMin) * _RateOT3), "0.000"))
                    _nBahtOt4 = _nBahtOt4 + CDbl(Format(Val(Rx!FNOT4) * ((_FNSlaryOTPerMin) * _RateOT4), "0.000"))
                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(Val(Rx!FNAbsent) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((Val(Rx!FNLate)) * _FNSlaryPerMin, "0.000"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((Val(Rx!FNLateCutAmtAbsent)) * _FNSlaryPerMin, "0.000"))
                    _HBaht = _HBaht + CDbl(Format(Val(Rx!FNHoloday) * CDbl(Rx!FNSalary), "0.000"))
                    _LaNotpaid = _LaNotpaid + CDbl(Format(Val(Rx!FNLeaveNotPay) * _FNSlaryOTPerMin, "0.000"))
                    _Lapaid = _Lapaid + CDbl(Format(Val(Rx!FNLeavePay) * _SalaryPayLeaveMin, "0.000"))
                    FNPayLeaveBusinessBaht = FNPayLeaveBusinessBaht + CDbl(Format(Val(Rx!FNBusiness) * _FNSlaryPerMin, "0.000"))

                    FNPayLeaveAccidentBaht = FNPayLeaveAccidentBaht + CDbl(Format(Val(Rx!FNLeaveAccident) * _FNSlaryPerMin, "0.000"))


                    ' FNParturitionLeave = FNParturitionLeave + CDbl(Format(Val(Rx!FNParturition) * _FNSlaryPerMin, "0.000"))

                    ''Dim _MoneyRetVacationPerDay = MoneyRetVacationPerDay_KM(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), Val(_EmpType), 0, _FCSalary, CountDayPerMonth, _WorkAgeDay)


                    Dim _MoneyRetVacationPerDay = _FNSlaryPerDay


                    '  MsgBox(_MoneyRetVacationPerDay)
                    _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(Val(Rx!FNVacation) * (_MoneyRetVacationPerDay / 480), "0.000"))
                    '   MsgBox(Val(Rx!FNVacation))
                    ' MsgBox(_FCPayVacationBaht)

                    '' FNPayLeaveSpecialBaht = FNPayLeaveSpecialBaht + CDbl(Format(Val(Rx!FNSpecial) * (_MoneyRetVacationPerDay / 480), "0.000"))
                    GFNPayLeaveSpecialBahtMin = Val(Rx!FNSpecial)
                    FNVacationRetMin = Val(Rx!FNVacation)
                Next

                FNParturitionLeave = 0
                GFNParturitionLeaveMin = 0
                Dim _DeductAttandanceAmt As Double = 0
                Call CalculateParturition(_PayYear, _PayTerm, _StartDate, _EndDate, Val(_EmpCode), FNParturitionLeave, GFNParturitionLeaveMin, _DeductAttandanceAmt, _WorkAge, _WorkAgeParturition, FNParturitionLeaveReCalTax)

                FNPayLeaveSickBaht = 0
                For Each Rx As DataRow In _DTEmpPayLeaveSick.Rows
                    _FNSlaryPerMin = (CDbl(CDbl(Rx!FNSalary) / 480) * CDbl(Rx!FNPayPer)) / 100.0
                    FNPayLeaveSickBaht = FNPayLeaveSickBaht + CDbl(Format(Val(Rx!FNDay) * _FNSlaryPerMin, "0.000"))
                Next

                ''_FNNetOTMealAmtUS = Format(_FNNetOTMealAmt / _FNExchangeRate, "0.000")

                If _FDDateEnd <> "" And _FDDateEnd <= _TmpFDDateEndP Then
                    'ลาออกในงวดแรก อายุงาน มากกว่า 13 วัน  จ่ายค่าเดินทาง & ค่าสุขภาพ เต็มเดือน

                    'If _WorkAge >= 1 Or _WorkingDayN > 13 Then
                    '    If Val(_PayTerm) Mod 2 = 1 Then
                    '        _FNTransportAmt = _FNTransportAmt + _FNTransportAmt
                    '        _FNHealtCareAmt = _FNHealtCareAmt + _FNHealtCareAmt
                    '    End If
                    'End If
                End If


                If _FTEmpState = "2" Or _FTEmpState = "3" Or (_FDDateEnd <= _EndDate And _FDDateEnd <> "") Then

                    FNPayLeaveBusinessBahtMin = 0 : FNPayLeaveSickBahtMin = 0 : FNPayLeaveSpecialBahtMin = 0 : FNParturitionLeaveMin = 0 : FNPayLeaveAccidentBahtMin = 0
                    GFNPayLeaveBusinessBahtMin = 0 : GFNPayLeaveSickBahtMin = 0 : GFNParturitionLeaveMin = 0 : GFNPayLeaveAccidentBahtMin = 0
                    FNPayLeaveBusinessBaht = 0 : FNPayLeaveSpecialBaht = 0 : FNParturitionLeave = 0
                    'FNPayLeaveSickBaht = 0 : ไม่มี เคสคำนวณ ในกรณีลาออก ใช้จากคำนวณปกติ

                    If _dttran.Select("FTStateAccept<>'1' AND FTWeekly <>'1' ").Length > 0 Or _dttran.Rows.Count <= 0 Then
                        Return False
                    End If


                    _Gtotalleave = 0
                    _GtotalleavePay = 0
                    _GtotalleaveNotPay = 0
                    _GFNLeaveOther = 0
                    _GFNLeavePay = 0
                    _GtotalleavePayCalSso = 0
                    _LaNotpaid = 0

                    Dim _NewSlary As String = ""

                    For Each sR As DataRow In _dtLeave.Rows

                        _Gtotalleave = _Gtotalleave + Val(sR!FNTotalMinute.ToString)
                        _GtotalleavePay = _GtotalleavePay + Val(sR!FNTotalPayMinute.ToString)
                        _GtotalleaveNotPay = _GtotalleaveNotPay + Val(sR!FNTotalNotPayMinute.ToString)

                        If sR!FTStaCalSSO.ToString = "1" Then
                            _GtotalleavePayCalSso = Val(sR!FNTotalPayMinute.ToString)
                        End If

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveVacation = _GFNLeaveVacation + Val(sR!FNTotalMinute.ToString)
                        Else
                            _GFNLeavePay = _GFNLeavePay + Val(sR!FNTotalPayMinute.ToString)
                            _GFNLeaveOther = _GFNLeaveOther + Val(sR!FNTotalMinute.ToString)
                        End If

                    Next

                    _LaNotpaid = CDbl(Format(_GtotalleaveNotPay * _FNSlaryPerMin, "0.000"))

                    If _LaNotpaid > _FNSlaryPerMonth Then
                        _LaNotpaid = _FNSlaryPerMonth
                    End If

                    _WorkingDay = Abs(DateDiff(DateInterval.Day, CDate(_DateStartOfMonth), CDate(_DateEndOfMonth))) + 1




                    If _WorkingDay > 30 Then _WorkingDay = 30

                    _WorkingDay = CDbl(Format(((_WorkingDay * 480) - (_Gtotalleave)) / 480, "0.000"))
                    _WorkingDay = _WorkingDay - (_GFNAbsent / 480)
                    If _WorkingDay < 0 Then
                        _WorkingDay = 0
                    End If

                Else
                    _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.000"))
                End If
                _WorkingDay = CDbl(Format(_GFNTimeMin / 480, "0.000"))  '2018/03/02 ยกมา คำนวณคนลาออก ไม่ตรง

                '-----------calculate Other Add For KKN ------------------ 
                Dim _ChkLeave As Integer = 0
                For Each sR As DataRow In _dtLeave.Select("LFTLeaveCode='0' OR LFTLeaveCode='1' OR LFTLeaveCode='2' OR LFTLeaveCode='3' ")
                    _ChkLeave = _ChkLeave + Val(sR!FNTotalMinute.ToString)
                Next
                '_DateStartOfMonth = _StartDate  'วันแรกของเดือน
                '_DateEndOfMonth = _EndDate 'วันแของเดือน
                _FNNetAttandanceAmt = 0
                '  If (_FTEmpState = "2" Or (_FTEmpState <> "2" And _StartDate <= Left(_StartDate, 8) & "24" And _EndDate >= Left(_StartDate, 8) & "24")) And _FNAttandanceAmt > 0 Then

                Dim ChkParturitionLeaveMin As Integer = 0




                'If _WorkingDay = 0 Then
                '    _FNNetAttandanceAmt = 0
                'End If
                '-----------calculate Other Add For KKN ------------------
                _WorkingDay = _WorkingDay + _DayAdjAdd

                _GFNTimeMin = _GFNTimeMin + (_DayAdjAdd * 480)
                _FNEmpBaht = _FNEmpBaht + _WageAdjAdd
                _nBahtOt1 = CDbl(Format(_nBahtOt1, "0.000"))
                _nBahtOt15 = CDbl(Format(_nBahtOt15, "0.000"))
                _nBahtOt2 = CDbl(Format(_nBahtOt2, "0.000"))
                _nBahtOt3 = CDbl(Format(_nBahtOt3, "0.000")) + _GAmtPlus  ' ได้เงินพิเศษช่วงเทศกาลเพิ่ม
                _nBahtOt4 = CDbl(Format(_nBahtOt4, "0.000"))

                Dim _TmpPe As String = ""

                If _FTEmpState = "2" Then
                Else
                    _TmpPe = IIf(Val(_PayTerm) - 1 Mod 2 = 1, (Val(_PayTerm) - 1).ToString("00"), "")
                End If

                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน ประเภทจ่ายเป็นเดือน ของงวดก่อนหน้า ---------------------
                'If _FTStatePayHoliday <> "1" Then '--------- รายเดือนไม่ได้ค่าจ้างวันหยุด---------------
                'Else
                If _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1' AND FTPayType='1'  ").Length > 0 Then


                    Dim _BFSDate As String = ""
                    Dim _BFEDate As String = ""

                    _Qry = " SELECT TOP 1  FDCalDateBegin, FDCalDateEnd"
                    _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & " WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & " AND FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & " AND FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND FTPayMonth IN (   "
                    _Qry &= vbCrLf & "  Select FTPayMonth"
                    _Qry &= vbCrLf & "    FROM THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE        (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "   AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & " )  "

                    _dttemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                    For Each Row As DataRow In _dttemp.Rows
                        _BFSDate = Row!FDCalDateBegin.ToString
                        _BFEDate = Row!FDCalDateEnd.ToString
                    Next

                    If _BFSDate <> "" And _BFEDate <> "" Then

                        _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                        _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                        _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                        _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                        _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                        _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                        _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                        _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                        _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                        _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0)  + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                        _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                        _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                        _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                        _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                        _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                        _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                        _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                        _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                        _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                        _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                        _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                        _Qry &= vbCrLf & ",P.FTOverClock,P.FTWeekDay"
                        _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN "
                        _Qry &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                        _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                        _Qry &= vbCrLf & " 	And T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                        _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                        _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Do While _BFSDate <= _BFEDate
                            _FTShift = ""
                            Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                            Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                            For Each R2 In _R

                                _FTShift = R2!FTShift.ToString
                                _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                                _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                                _FNNotRegis = Val(R2!FNNotRegis.ToString)
                                _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                                _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                                _FNLateNormalMin = Val(R2!FNLateNormalMin.ToString) : _FNLateNormalCut = Val(R2!FNLateNormalCut.ToString)
                                _FNLateOtMin = Val(R2!FNLateOtMin.ToString) : _FNLateOtCut = Val(R2!FNLateOtCut.ToString)
                                _FNLateMorning = Val(R2!FNLateMorning.ToString) : _FNLateAfternoon = (Val(R2!FNLateAfternoon.ToString))
                                _LateCutAbsent = Val(R2!FNAbsentCut.ToString) : _FNAbsent = Val(R2!FNAbsent.ToString)
                                _FNOT1Min = Val(R2!FNOT1Min.ToString)
                                _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                                _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)
                                _FNLateMMin = Val(R2!FNLateMMin.ToString) : _FNLateAfMin = Val(R2!FNLateAfMin.ToString)
                                _FNRetireMMin = Val(R2!FNRetireMMin.ToString) : _FNRetireAfMin = Val(R2!FNRetireAfMin.ToString)
                                _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString) : _FNRetireNormalCut = Val(R2!FNRetireNormalCut.ToString)
                                _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString) : _FNRetireOtMin = Val(R2!FNRetireOtMin.ToString)
                                _FNRetireOtCut = Val(R2!FNRetireOtCut.ToString)

                                _InOT = R2!FTIn3.ToString
                                _OutOT = R2!FTOut3.ToString

                                _Over = R2!FTOverClock.ToString

                                If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                                    If _FTShift <> "" Then

                                        _SPDateType = 0

                                        _Holiday = ""

                                        _Qry = " SELECt TOP 1  'H' AS FTHoliday "
                                        _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMHoliday WITH(NOLOCK) "
                                        _Qry &= vbCrLf & "  WHERE   FDHolidayDate ='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'  AND FTStateActive='1'  "
                                        _Holiday = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "")

                                        If _Holiday <> "" Then _SPDateType = 2

                                        Dim _StateLeaveOther As Boolean = False
                                        Dim _StateLeavacation As Boolean = False


                                        Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                        Dim _SumLeave As Integer = 0

                                        For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                            _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                            If Val(sR!LeaveType) = 1 Then
                                                _StateLeavacation = True
                                            Else
                                                _StateLeaveOther = True
                                            End If

                                            If Val(sR!LeaveType) = 2 Then
                                                _StateFTStaMaternityleaveNotpay = True
                                            End If

                                        Next

                                        For Each RFin As DataRow In _dtAddOtherAmt.Select("FTCalType='0' AND FTFinType='1'  AND FTPayType='1' ")
                                            Dim _StatePass As Boolean = True

                                            If _OutOT <> "" Then
                                                Beep()
                                            End If

                                            If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                            If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                            If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                            If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                            If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                            If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                            If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                                _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                            End If

                                            If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                            If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                            If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                                Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                                Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                                If _STime.Length = _ETime.Length Then
                                                    If IsDate(_STime) And IsDate(_ETime) Then
                                                        If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                            _StatePass = False
                                                        End If
                                                    Else
                                                        _StatePass = False
                                                    End If
                                                Else
                                                    _StatePass = False
                                                End If

                                            End If

                                            If _StatePass Then
                                                _FCAdd = _FCAdd + Val(RFin!FCFinAmt.ToString)

                                                If RFin!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(RFin!FCFinAmt.ToString)
                                                If RFin!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(RFin!FCFinAmt.ToString)

                                                If _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'").Length <= 0 Then
                                                    _DtFin.Rows.Add(RFin!FTFinCode.ToString, Val(RFin!FCFinAmt.ToString))
                                                Else
                                                    For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & RFin!FTFinCode.ToString & "'")
                                                        xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(RFin!FCFinAmt.ToString)
                                                    Next
                                                End If

                                            End If
                                        Next
                                    End If
                                    '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                                End If
                            Next

                            _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                        Loop
                    End If
                End If
                ' End If
                '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------



                '-------------------------------------------------------------------------------------------
                If _FTEmpState = "0" And Val(_PayTerm) Mod 2 = 0 Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='1'  and FTFinCode<>'056' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                            Else
                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next

                ElseIf _FDDateEnd <> "" And _FDDateEnd < _EndDate Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0' and FTFinCode='013' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + ((Val(R2!FCFinAmt.ToString) / 13) * _WorkingDay)
                                Next

                            End If
                        End If
                    Next
                ElseIf _FDDateEnd = "" Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0' and FTFinCode='013' ")
                        Dim _StatePass As Boolean = True

                        If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                        If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                        If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                        If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                        If _StatePass Then

                            _FCAdd = _FCAdd + Double.Parse(R2!FCFinAmt.ToString)

                            If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                            If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                            If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                                _DtFin.Rows.Add(R2!FTFinCode.ToString, Double.Parse(R2!FCFinAmt.ToString))
                            Else

                                For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                    xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Double.Parse(R2!FCFinAmt.ToString)
                                Next

                            End If
                        End If
                    Next
                End If

                For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType<>'0' AND FTFinType='1' AND FTPayType='0'  and FTFinCode <> '013' and FTFinCode <> '057' ")
                    Dim _StatePass As Boolean = True

                    If R2!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_GFNLateNormalMin <= 0)
                    If R2!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_GFNAbsent <= 0)
                    If R2!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveOther <= 0)
                    If R2!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = (_GFNLeaveVacation <= 0)

                    If _StatePass Then

                        _FCAdd = _FCAdd + Val(R2!FCFinAmt.ToString)

                        If R2!FTStaTax.ToString = "1" Then _FTAddCalculateTax = _FTAddCalculateTax + Val(R2!FCFinAmt.ToString)
                        If R2!FTStaSocial.ToString = "1" Then _FTAddCalculateSocial = _FTAddCalculateSocial + Val(R2!FCFinAmt.ToString)

                        If _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'").Length <= 0 Then
                            _DtFin.Rows.Add(R2!FTFinCode.ToString, Val(R2!FCFinAmt.ToString))
                        Else

                            For Each xRow As DataRow In _DtFin.Select("FTFinCode='" & R2!FTFinCode.ToString & "'")
                                xRow!FCTotalFinAmt = Val(xRow!FCTotalFinAmt) + Val(R2!FCFinAmt.ToString)
                            Next

                        End If
                    End If
                Next

                Dim _TotalFuel As Double = 0 ''100000

                Dim _worktime_before As Integer = 0


                If _FTEmpState = "0" And Val(_PayTerm) Mod 2 = 0 Then
                    For Each R2 As DataRow In _dtAddOtherAmt.Select("FTCalType='2' AND FTFinType='1' AND FTPayType='1'  and FTFinCode='056' ")
                        _TotalFuel = Val(R2!FCFinAmt)
                    Next


                    _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalWKN_Real_Min,0)) AS FNTotalWKN_Real_Min "



                    _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                    _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                    _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                    _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                    _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                    _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                    _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                    _Qry &= vbCrLf & "  Select FNMonth"
                    _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                    _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                    _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                    _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                    _Qry &= vbCrLf & "  )  "

                    _worktime_before = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, 0)

                    _TotalFuel = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation + _worktime_before) / 480) * (_TotalFuel / 26)
                    _FCAdd = _FCAdd + _TotalFuel


                End If



                ''20221004 get responsed header line

                'If _FNIncentiveAmt = 0 Then



                Dim inc As Integer = 0

                _Qry = "   SELECT COUnT(FNHSysEmpID) as n  "
                _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeHeader   AS M WITH(NOLOCK)"
                _Qry &= vbCrLf & "  WHERE  M.FNHSysEmpID=" & Val(_EmpCode) & "  AND M.FNHSysCmpID =  " & Val(HI.ST.SysInfo.CmpID)
                _Qry &= vbCrLf & "  AND   M.FTDateTrans BETWEEN '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' AND '" & (_EndDate) & "'"

                inc = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, 0))

                Dim DataIncentiveHeader As DataTable

                Dim _Emp_IncenAmt As Double = 0
                Dim _Emp_BonusAmt As Double = 0

                If inc > 0 Then
                    _Qry = "Exec [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.SP_CALCULATE_INCENTIVE_HEADER " & Val(_EmpCode) & "," & Val(HI.ST.SysInfo.CmpID) & ",'" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' , '" & (_EndDate) & "'"
                    DataIncentiveHeader = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


                    Dim _BFSDate As String = HI.UL.ULDate.ConvertEnDB(_StartDate)
                    Dim _BFEDate As String = HI.UL.ULDate.ConvertEnDB(_EndDate)

                    If DataIncentiveHeader.Rows.Count > 0 Then



                        If _BFSDate <> "" And _BFEDate <> "" Then

                            _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	, (ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  AS FNTime"
                            _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                            _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 )  AS FNLateNormalCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                            _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                            _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                            _Qry &= vbCrLf & " 	, ISNULL(FNAbsent,0) AS FNAbsent "
                            _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNSpecialTimeMin,0) +ISNULL(FNLateNormalMin,0) ) - ( ISNULL(FNLateNormalCut,0 ) + ISNULL(FNAbsentCut,0 ))  As FNTimeMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0)  + ISNULL(FNSpecialTimeMin,0) As FNTimeMinOrg"
                            _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                            _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                            _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                            _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                            _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                            _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                            _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                            _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                            _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                            _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                            _Qry &= vbCrLf & ",P.FTOverClock"
                            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN "
                            _Qry &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID "
                            _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_EmpCode) & " )"
                            _Qry &= vbCrLf & " 	And T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "' "
                            _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_BFEDate) & "' "

                            _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                            Do While _BFSDate <= _BFEDate
                                _FTShift = ""
                                Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                                Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")
                                For Each R2 In _R
                                    _FNTimeMin = 0
                                    _FNOT1Min = 0
                                    _FNTimeMin = IIf(Val(R2!FNTimeMinOrg.ToString) < 0, 0, Val(R2!FNTimeMinOrg.ToString))
                                    _FNOT1Min = Val(R2!FNOT1Min.ToString)

                                    For Each RFin As DataRow In DataIncentiveHeader.Select("ftcalDate='" & HI.UL.ULDate.ConvertEnDB(_BFSDate) & "'")

                                        _Emp_IncenAmt = _Emp_IncenAmt + Val(RFin!Emp_IncenAmt_perMin) * (_FNTimeMin + _FNOT1Min)
                                        _Emp_BonusAmt = _Emp_BonusAmt + Val(RFin!Emp_BonusAmt_perMin) * (_FNTimeMin + _FNOT1Min)

                                    Next
                                Next
                                _BFSDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_BFSDate, 1))

                            Loop


                        End If

                    End If

                End If

                _FNIncentiveAmt = _Emp_IncenAmt + _FNIncentiveAmt
                _BonusAmt = _Emp_BonusAmt + _BonusAmt

                'End If




                Dim _TotalMoneyMeal As Double = 0
                _ShiftValue = 0
                ''เงินอุดหนุนค่าอาหาร
                ''For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='053'")


                _TotalMoneyMeal = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _FNMoneyMeal
                _FCAdd = _FCAdd + _TotalMoneyMeal
                '_FTAddCalculateTax = _FTAddCalculateTax + _TotalMoneyMeal
                '_FTAddCalculateSocial = _FTAddCalculateSocial + _TotalMoneyMeal
                ''  _AmtAddCalOT = _AmtAddCalOT + _ShiftValue

                ''_DtFin.Rows.Add("053", Val(_TotalMoneyMeal))

                ''Next

                ''เงินอายุงาน
                '_FTAddCalculateTax = _FTAddCalculateTax + _FNWorkAgeSalary
                '_FTAddCalculateSocial = _FTAddCalculateSocial + _FNWorkAgeSalary
                ''_FCAdd = _FCAdd + _FNWorkAgeSalary
                ''_DtFin.Rows.Add("054", Val(_FNWorkAgeSalary))


                ''เงินเบี้ยขยัน
                Dim _FNDeligent_La_rate As Double = 0

                _Qry = "SELECT TOP 1 FTCfgData FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.TSESystemConfig WHERE FTCfgName='CfgDeligent_La_rate'"
                _FNDeligent_La_rate = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_SECURITY, "0"))

                Dim _TotalDeligent_La As Double = 0
                '''If _FNDeligent_La_rate > 0 Then
                '''    _TotalDeligent_La = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * (_FCSalary * _FNDeligent_La_rate)
                '''    _FCAdd = _FCAdd + _TotalDeligent_La
                '''End If

                If _FNDeligent_La_rate > 0 Then
                    _TotalDeligent_La = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * (8000)
                    _FCAdd = _FCAdd + _TotalDeligent_La
                End If

                '_FTAddCalculateTax = _FTAddCalculateTax + _TotalDeligent_La
                '_FTAddCalculateSocial = _FTAddCalculateSocial + _TotalDeligent_La

                ''_DtFin.Rows.Add("059", Val(_TotalDeligent_La))


                ''เงินทักษะ
                Dim _TotalMoneySkill As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='043'")
                    _TotalMoneySkill = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySkill = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySkill
                _FCAdd = _FCAdd + _TotalMoneySkill


                ''เงินทักษะเย็บ
                Dim _TotalMoneySkill_Sew As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='057'")
                    _TotalMoneySkill_Sew = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySkill_Sew = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySkill_Sew
                _FCAdd = _FCAdd + _TotalMoneySkill_Sew





                ''16.	ค่าจูงใจตำแหน่ง : เงินหัวหน้าทีมแผนกเย็บ(กัปตัน)   
                Dim _TotalMoneyHeaderCapton As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='061'")
                    _TotalMoneyHeaderCapton = Val(RFin!FCFinAmt)
                Next
                _TotalMoneyHeaderCapton = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneyHeaderCapton
                _FCAdd = _FCAdd + _TotalMoneyHeaderCapton

                ''17.	เงินค่าจูงใจ กลุ่มพนักงานสนับสนุนแผนกเย็บ  
                Dim _TotalMoneySupport_Sew As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='062'")
                    _TotalMoneySupport_Sew = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySupport_Sew = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySupport_Sew
                _FCAdd = _FCAdd + _TotalMoneySupport_Sew


                ''18.	ค่าจูงใจตำแหน่ง : เงินพนักงานช่างซ่อมจักร 
                Dim _TotalMoneySeviceMachine As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='063'")
                    _TotalMoneySeviceMachine = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySeviceMachine = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySeviceMachine
                _FCAdd = _FCAdd + _TotalMoneySeviceMachine

                ''20.	ค่าจูงใจตำแหน่ง : เงินพนักงาน QA 
                Dim _TotalMoneySkill_QA As Double = 0
                For Each RFin As DataRow In _dtAddOtherAmt.Select("FTFinCode='064'")
                    _TotalMoneySkill_QA = Val(RFin!FCFinAmt)
                Next
                _TotalMoneySkill_QA = ((_GFNTimeMin_Real_After_Probation + _GFNLeaveVacation) / 480) * _TotalMoneySkill_QA
                _FCAdd = _FCAdd + _TotalMoneySkill_QA




                For Each R2 As DataRow In _dtAddOtherAmt.Select(" FTFinType='2'")

                    _FCDeduct = _FCDeduct + Val(R2!FCFinAmt.ToString)


                Next
                '---------รายได้รายหัก อื่นๆ-------------------------

                '------------------- สิ้นสุดการคำนวณรายวัน
                _FTWorkmenAmtBefore = 0
                _FTTotalCalWorkmenBefore = 0

                '_Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FCSocial"
                '_Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocial,0)) AS FCSocialAmt"
                '_Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                '_Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                '_Qry &= vbCrLf & "AND ISNULL(P.FNTotalRecalSSO,0) > 0 "
                '_Qry &= vbCrLf & "AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "
                '_Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                '_Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"
                '_Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                '_Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                '_Qry &= vbCrLf & "  Select FNMonth"
                '_Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                '_Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                '_Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                '_Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                '_Qry &= vbCrLf & "  )  "

                'Dim _DtSso As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                'If _DtSso.Rows.Count > 0 Then
                '    _SocialBefore = Val(_DtSso.Rows(0)!FCSocial.ToString)
                '    _SocialBeforeAmt = Val(_DtSso.Rows(0)!FCSocialAmt.ToString)
                'End If

                If _FTEmpState = "2" Or _FTEmpState = "3" Then


                    '_FNEmpBaht = CDbl(Format((_FCSalary), "0.000"))
                    'If _FTEmpState = "3" Then
                    '    _FNEmpBaht = CDbl(Format((_FCSalary) / 2, "0.000"))

                    'End If


                    If FTStaDeductAbsent = 0 Then
                        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent) '+ _nBahtAbsent
                    Else
                        _nBahtAbsent = 0
                        _FNEmpBaht = _FNEmpBaht - (_LaNotpaid + _LateCutAmt + _LateCutAmtAbsent)
                    End If


                    If _FNEmpBaht < 0 Then _FNEmpBaht = 0



                End If

                _TotalCalTax = 0 : _TaxAmt = 0

                FNUnionAmt = 0
                'FNUnionRate = HI.Conn.SQLConn.GetField("SELECT Top 1  Isnull(FNUnionAmt,0) AS FNUnionAmt  FROM   " & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & ".dbo.THRMCfgWelfareKM with(nolock) Where FNHSysEmpTypeId =" & Val(_EmpType), Conn.DB.DataBaseName.DB_HR, "0")
                'If FNUnionRate > 0 Then

                '    Dim _StatePass As Boolean = True

                '    If _FDDateEnd <> "" And _EndDate < _FDDateEnd Then
                '        _StatePass = False
                '    End If
                '    If Not (FNStateUnionMember = "1") Then _StatePass = False

                '    'If _WorkAge <= 0 Then
                '    '    _StatePass = False
                '    'Else
                '    '    If FDStartDateUnion < _StartDate Then

                '    '    End If
                '    'End If

                '    If Not (Val(_PayTerm) Mod 2 = 0) Then
                '        _StatePass = False
                '    End If

                '    If _StatePass Then
                '        ''  _FCDeduct = _FCDeduct + FNUnionRate
                '        FNUnionAmt = FNUnionRate
                '    End If

                'End If

                '_TotalCalSso = Double.Parse(Format(_FNEmpBaht + _HBaht + _FTOtherAddCalculateSocial + _FTAddCalculateSocial + _GtotalleavePayCalSsoAmt, "0.00"))
                '_TotalCalSso = _TotalCalSso + Double.Parse(Format(_FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS, "0.00"))


                '  _FTAddCalculateTax = _FTAddCalculateTax + _ShiftAmt + _ShiftOTAmt
                _FCAdd = _FCAdd + _ShiftAmt + _ShiftOTAmt

                'If _FTEmpState = "2" Or _FTEmpState = "3" Then


                '    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                '    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000"))

                'Else
                '    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                '    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000"))



                'End If

                If _FTEmpState = "2" Or _FTEmpState = "3" Then


                    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveAccidentBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveAccidentBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000"))

                Else
                    _TotalCalSso = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveAccidentBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateSocial + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS) - (_FCOtherDeduct + _FCDeduct), "0.000"))
                    _TotalCalTax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveAccidentBaht + FNPayLeaveSpecialBaht + FNParturitionLeaveReCalTax) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNWorkAgeSalary) - (_FCOtherDeduct + _FCDeduct), "0.000"))



                End If

                '-----------------หักเงินเข้า กองทุนสำรองเลี้ยงชีพ-------------------------------
                If _ContributedFundBeginPay Then
                    Dim _EMpWorkAge As Integer = Val(R!FNEmpWorkAge.ToString)

                    For Each sR As DataRow In _THRMContributedFund.Select(" FNAgeBegin <= " & _EMpWorkAge & " AND FNAgeEnd >=" & _EMpWorkAge & " ")

                        FTTotalCalContributedAmt = _TotalCalSso

                        FTContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNEmpAmtPer.ToString)) / 100.0), "0"))
                        FTCmpContributedAmt = CDbl(Format(((FTTotalCalContributedAmt * Val(sR!FNCmpAmtPer.ToString)) / 100.0), "0"))

                        Exit For

                    Next

                End If
                '-----------------หักเงินเข้า กองทุนสำรองเลี้ยงชีพ----------------------------
                '-----------------หักเงินเข้า กองทุนทดแทน---------------------------------
                FTTotalCalWorkmen = _TotalCalSso

                If _FTMaxCalWorkmen > 0 Then

                    _SocialPayMax = CDbl(Format(((_FTMaxCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))

                    If (_TotalCalSso + _FTTotalCalWorkmenBefore) > _FTMaxCalWorkmen Then
                        FTTotalCalWorkmen = _FTMaxCalWorkmen
                    ElseIf FTTotalCalWorkmen > 0 Then
                        FTTotalCalWorkmen = FTTotalCalWorkmen
                    Else
                        FTTotalCalWorkmen = 0
                    End If

                    If _FTTotalCalWorkmenBefore > 0 Then
                        FTWorkmenAmt = CDbl(Format((((_CalSo + _FTTotalCalWorkmenBefore) * _FTMaxWorkmenRate) / 100.0), "0"))
                        FTWorkmenAmt = FTWorkmenAmt - _FTWorkmenAmtBefore
                    Else
                        FTWorkmenAmt = CDbl(Format(((FTTotalCalWorkmen * _FTMaxWorkmenRate) / 100.0), "0"))
                    End If
                End If

                '-----------------หักเงินเข้า กองทุนทดแทน-------------------------------



                _FNEmpDiligent = 0
                _FTStateInDustin = ""
                _FNDeligentPeriod = 0

                If _CalIns <> "" Then
                    Dim _StateCalIns As Boolean = False
                    '_Qry = "SELECT TOP 1 FNPayDeligent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMDiligentConfigHD WHERE FTDeligentCode='" & HI.UL.ULF.rpQuoted(_CalIns) & "' "
                    'If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") = "1" Then
                    '    If Val(_PayTerm) Mod 2 = 1 Then

                    '        _FTSatrtCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", -1))  'วันแรกของเดือน
                    '        _FTEndCalculateDateIns = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddMonth(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1), -1)) 'วันแของเดือน
                    '        _StateCalIns = True
                    '    End If
                    'Else

                    '    _StateCalIns = True
                    'End If

                    'If _StateCalIns Then
                    '    _Qry = " SELECT   ISNULL(PayIndus,0) As PayIndus , ISNULL(StateIndus,'') AS StateIndus,ISnuLL(FNDeligentPeriod,0) AS FNDeligentPeriod"
                    '    _Qry &= vbCrLf & "	FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.FN_CALCULATE_INDUST(" & Val(_EmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTSatrtCalculateDateIns) & "','" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDateIns) & "','" & HI.UL.ULF.rpQuoted(_CalIns) & "')"

                    '    Dim _DtIns As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                    '    If _DtIns.Rows.Count > 0 Then
                    '        _FNEmpDiligent = Val(_DtIns.Rows(0)!PayIndus.ToString)
                    '        _FTStateInDustin = _DtIns.Rows(0)!StateIndus.ToString
                    '        _FNDeligentPeriod = Val(_DtIns.Rows(0)!FNDeligentPeriod.ToString)
                    '    End If

                    'End If
                End If



                Dim _tmpTotalincome As Double = 0
                Dim _DiffTotalincome As Double = 0
                Dim _tmpTotalNetPay As Double = 0
                Dim _DiffTotalNetPay As Double = 0
                Dim _FNServicefee, _FNFinTransFee As Double

                Dim _tmpTotalincome_for_tax As Double = 0

                _tmpTotalincome = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveAccidentBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct), "0.000"))

                ''With out sick leave
                _tmpTotalincome_for_tax = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveAccidentBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FTOtherAddCalculateTax + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct), "0.000"))


                _tmpTotalNetPay = (_tmpTotalincome - (FTContributedAmt))

                _TotalCalSso = CDbl(Format(_tmpTotalincome, "0"))



                _Net = Double.Parse(Format((_FNEmpBaht + _HBaht + _nBahtOt1 + _FNEmpDiligent + _Lapaid + (FNPayLeaveBusinessBaht + FNPayLeaveSickBaht + FNPayLeaveAccidentBaht + FNPayLeaveSpecialBaht + FNParturitionLeave) + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCPayVacationBaht + _FCOtherAdd + _FCAdd + _FNIncentiveAmt + _FNNetAttandanceAmt + _FNHealtCareAmt + _FNTransportAmt + _FNNetChildCareAmt + _FNWorkAgeSalary + _FNNetOTMealAmtUS + _BonusAmt) - (_FCOtherDeduct + _FCDeduct), "0.00"))
                _FCBaht = _FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4



                '--------- คิดประกันสังคม-----------
                _SocialPayMax = HCfg.HMaxSocialBaht
                _CalSo = 0
                _FCSocial = 0
                _FCSocialCmp = 0
                _TotalCalSso = (_TotalCalSso)
                _FNSocialBase = 0

                Dim _FCTotalRecalTaxBefore As Double = 0
                Dim _FCTaxAmtBefore As Double = 0
                Dim _TotalCalTaxAll As Double = 0

                Dim _FCOt1_Baht_Amt As Double = 0
                Dim _FCOt15_Baht_Amt As Double = 0
                Dim _FCOt2_Baht_Amt As Double = 0
                Dim _FCOt3_Baht_Amt As Double = 0
                Dim _FCOt4_Baht_Amt As Double = 0

                Dim _FNTotalIncome_before As Double = 0

                Dim _SocialBeforeAmtCmp As Double = 0

                Dim _FNSickLeaveBaht_before As Double = 0

                Dim _FNFinNotCalTax As Double = 0


                _Qry = " SELECT  TOP 1 SUM(ISNULL(P.FNTotalRecalSSO,0)) AS FCSocial "

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTotalIncome,0)) AS FNTotalIncome "

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocial,0)) AS FCSocialAmt "
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSocialCmp,0)) AS FCSocialAmtCmp "

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTotalRecalTax,0)) AS FCTotalRecalTax "
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNTax,0)) AS FCTaxAmt "


                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt1_Baht,0)) AS FCOt1_Baht "
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt15_Baht,0)) AS FCOt15_Baht "
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt2_Baht,0)) AS FCOt2_Baht "
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt3_Baht,0)) AS FCOt3_Baht "
                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FCOt4_Baht,0)) AS FCOt4_Baht "

                _Qry &= vbCrLf & " ,SUM(ISNULL(P.FNSickLeaveBaht,0)) AS FNSickLeaveBaht"


                _Qry &= vbCrLf & "FROM dbo.THRTPayRoll AS P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "AND ISNULL(P.FNTotalIncome,0) > 0 "
                _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"

                _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                _Qry &= vbCrLf & "  Select FNMonth"
                _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                _Qry &= vbCrLf & "  )  "



                Dim _DtSso As DataTable = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                If _DtSso.Rows.Count > 0 Then
                    _SocialBefore = Val(_DtSso.Rows(0)!FCSocial.ToString)
                    _SocialBeforeAmt = Val(_DtSso.Rows(0)!FCSocialAmt.ToString)
                    _SocialBeforeAmtCmp = Val(_DtSso.Rows(0)!FCSocialAmtCmp.ToString)

                    _FNTotalIncome_before = Val(_DtSso.Rows(0)!FNTotalIncome.ToString)

                    _FCTotalRecalTaxBefore = Val(_DtSso.Rows(0)!FCTotalRecalTax.ToString)
                    _FCTaxAmtBefore = Val(_DtSso.Rows(0)!FCTaxAmt.ToString)

                    _FNSickLeaveBaht_before = Val(_DtSso.Rows(0)!FNSickLeaveBaht.ToString)


                    _FCOt1_Baht_Amt = Val(_DtSso.Rows(0)!FCOt1_Baht.ToString)
                    _FCOt15_Baht_Amt = Val(_DtSso.Rows(0)!FCOt15_Baht.ToString)
                    _FCOt2_Baht_Amt = Val(_DtSso.Rows(0)!FCOt2_Baht.ToString)
                    _FCOt3_Baht_Amt = Val(_DtSso.Rows(0)!FCOt3_Baht.ToString)
                    _FCOt4_Baht_Amt = Val(_DtSso.Rows(0)!FCOt4_Baht.ToString)

                End If



                If _FTCalSocialSta <> "1" Then ' 1 ไม่่คิดประกันสังคม

                    If (_TotalCalSso + _SocialBefore) >= _SocialMaxIncome Then
                        _CalSo = _SocialMaxIncome
                    ElseIf (_TotalCalSso + _SocialBefore) < _SocialMaxIncome And (_TotalCalSso + _SocialBefore) >= _SocialMinIncome Then
                        _CalSo = (_TotalCalSso + _SocialBefore)
                    ElseIf _TotalCalSso > 0 Then
                        _CalSo = _SocialMinIncome
                    Else
                        _CalSo = 0
                    End If

                    If _SocialBefore > 0 Then
                        _FCSocial = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRate) / 100.0), "0.00")), "0"))
                        _FCSocial = IIf(_SocialBeforeAmt > _FCSocial, 0, _FCSocial - _SocialBeforeAmt)

                        _FCSocialCmp = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRateCmp) / 100.0), "0.00")), "0"))
                        _FCSocialCmp = IIf(_SocialBeforeAmt > _FCSocialCmp, 0, _FCSocialCmp - _SocialBeforeAmtCmp)

                    Else
                        _FCSocial = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRate) / 100.0), "0.00")), "0"))
                        _FCSocialCmp = CDbl(Format(CDbl(Format((((_CalSo) * _SocialRateCmp) / 100.0), "0.00")), "0"))
                    End If

                Else
                    _TotalCalSso = 0
                End If


                _Qry = " SELECT SUM(P.FCTotalFinAmt) as FCTotalFinAmt   "
                _Qry &= vbCrLf & "FROM THRTPayRollFin P WITH (NOLOCK), (SELECT FTPayYear ,FTPayTerm,FNMonth FROM THRMCfgPayDT  WITH (NOLOCK) WHERE  (FNHSysEmpTypeId =" & Val(_EmpType) & ") ) AS   PD "
                _Qry &= vbCrLf & "WHERE P.FTPayYear = '" & HI.UL.ULF.rpQuoted(_PayYear) & "'"


                _Qry &= vbCrLf & " AND P.FTFinCode in (SELECT  FTFinCode FROM [dbo].[THRMFinanceSet] WHERE   FTStaActive = 1 and FTStaTax=0 and FNHSysCmpId = " & Val(HI.ST.SysInfo.CmpID) & ")"

                _Qry &= vbCrLf & "AND P.FNHSysEmpID =" & Integer.Parse(Val(_EmpCode)) & " "
                _Qry &= vbCrLf & " AND PD.FTPayTerm < '" & HI.UL.ULF.rpQuoted(_PayTerm) & "'"
                _Qry &= vbCrLf & " AND P.FTPayYear=PD.FTPayYear"

                _Qry &= vbCrLf & " AND P.FTPayTerm=PD.FTPayTerm"
                _Qry &= vbCrLf & " AND PD.FNMonth IN (   "
                _Qry &= vbCrLf & "  Select FNMonth"
                _Qry &= vbCrLf & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT WITH (NOLOCK) "
                _Qry &= vbCrLf & "    WHERE     (FNHSysEmpTypeId =" & Val(_EmpType) & ")"
                _Qry &= vbCrLf & "  AND  FTPayYear ='" & HI.UL.ULF.rpQuoted(_PayYear) & "'"
                _Qry &= vbCrLf & "  AND FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayTerm) & "' "
                _Qry &= vbCrLf & "  )  "


                _FNFinNotCalTax = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, 0)



                'MsgBox("_TotalCalTax" & _TotalCalTax.ToString())
                'MsgBox("_tmpTotalincome_for_tax" & _tmpTotalincome_for_tax.ToString())
                'MsgBox("_FCSocial" & _FCSocial.ToString())

                '' edit 20230610  best   _tmpTotalincome_for_tax    with out sick leave 
                _TotalCalTax = Format((_tmpTotalincome_for_tax - (_FCSocial + _EmpTaxYear.FTModEmp)), "0")
                'MsgBox("zz_tmpTotalincome_for_tax" & _tmpTotalincome_for_tax.ToString())

                'MsgBox("_FNTotalIncome_before" & _FNTotalIncome_before.ToString())
                'MsgBox("_FCSocial" & _FCSocial.ToString())
                'MsgBox("_SocialBeforeAmt" & _SocialBeforeAmt.ToString())
                'MsgBox("_FNSickLeaveBaht_before" & _FNSickLeaveBaht_before.ToString())


                Dim _TotalCalTax_Sum As Double

                '' _TotalCalTax_Sum = Format(((_tmpTotalincome_for_tax + _FNTotalIncome_before) - (_FCSocial + _SocialBeforeAmt + _FNSickLeaveBaht_before)), "0")
                _TotalCalTax_Sum = Format(((_tmpTotalincome_for_tax + _FNTotalIncome_before) - (_FCSocial + _SocialBeforeAmt + _FNFinNotCalTax)), "0")

                'MsgBox("_TotalCalTax_Sum" & _TotalCalTax_Sum.ToString())

                If _FTCalTaxSta <> "1" Then

                    'With _EmpDisTax
                    '    .FTSosial = _FCAccumulateSocial + _FCSocial + (_FCSocial * (_TotalInstalment - _Instalment))

                    '    If .FTSosial > (((_SocialMaxIncome * _SocialRate) / 100.0) * 12) Then
                    '        .FTSosial = CDbl(Format((((_SocialMaxIncome * _SocialRate) / 100.0) * 12), "0.00"))
                    '    End If

                    '    .BaseSlary = (_TotalCalTax * (_TotalInstalment - _Instalment)) + _TotalCalTax
                    '    .OtherSlary = _FTOtherAddCalculateTax + _FTAddCalculateTax + _FNEmpDiligent + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4
                    '    .Cfg_ContributedDeducToTheFund = .Cfg_ContributedDeducToTheFund + FTContributedAmt + (FTContributedAmt * (_TotalInstalment - _Instalment))

                    'End With

                    '_TotalCalTax = _TotalCalTax + _EmpDisTax.OtherSlary
                    Dim _TaxOther As Double = _EmpDisTax.OtherSlary
                    Dim _TaxOtherAmt As Double = 0
                    Dim _Total As Double = 0

                    GETnRecalDiscTax(_EmpDisTax, _EmpTaxYear)

                    ''สิ้นเดือน
                    If Val(_PayTerm) Mod 2 = 0 Then


                        'If (_TotalCalTax_Sum > 2000000) Then
                        _Total = _TotalCalTax_Sum   ''เงินรวมทั้งเดือน หักประกันสังคมแล้ว
                        'MsgBox("1_Total" & _Total.ToString())

                        _Total = Math.Round(Val(_Total), 0)
                        _TotalCalTax = _TotalCalTax_Sum - _FCTotalRecalTaxBefore



                        '    'MsgBox("_TotalCalTax" & _TotalCalTax.ToString())
                        'Else

                        '    ''ของทั้งเดือน สำหรับคิด  tax
                        '    _Total = _TotalCalTax_Sum - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FCOt1_Baht_Amt + _FCOt15_Baht_Amt + _FCOt2_Baht_Amt + _FCOt3_Baht_Amt + _FCOt4_Baht_Amt)
                        '    ''    MsgBox("2_Total" & _Total.ToString())



                        '    ''ของ เฉพราะ งวด 2
                        '    ''_TotalCalTax = _TotalCalTax - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4)

                        '    _Total = Math.Round(Val(_Total), 0)
                        '    _TotalCalTax = _Total - _FCTotalRecalTaxBefore
                        '    ''    MsgBox("2_TotalCalTax" & _TotalCalTax.ToString())
                        'End If

                    Else
                        'If (_TotalCalTax_Sum > 2000000) Then
                        _Total = _TotalCalTax

                        _Total = Math.Round(Val(_Total), 0)
                        'Else

                        '    _Total = _TotalCalTax - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4)
                        '    _Total = Math.Round(Val(_Total), 0)

                        '    _TotalCalTax = _TotalCalTax - (_nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4)

                        'End If
                    End If


                    '_EmpTaxYear.FTSocial = _EmpDisTax.FTSosial

                    '_EmpTaxYear.FTTotalCalTax = _Total

                    'MsgBox("_Total" & _Total.ToString())

                    'MsgBox("Best" & (_Total - _FCTotalRecalTaxBefore).ToString)
                    Dim _TotalTax As Double = GETnTax(_Total, _TaxOther, _TaxOtherAmt)

                    _EmpTaxYear.FTTotalTax = (_TotalTax + _TaxOtherAmt) 'ภาษีที่ต้องจ่าย

                    'MsgBox("_FCTaxAmtBefore" & _FCTaxAmtBefore.ToString())

                    _TotalTax = CDbl(Format(_TotalTax - _FCTaxAmtBefore, "0"))

                    'MsgBox("_TotalTax" & _TotalTax.ToString())

                    If _TotalTax > 0 Then
                        _TaxAmt = CDbl(Format((_TotalTax), "0.00"))

                        'MsgBox("_TaxAmt" & _TaxAmt.ToString())
                        'MsgBox("_TaxOtherAmt" & _TaxOtherAmt.ToString())

                        _TaxAmt = _TaxAmt + _TaxOtherAmt

                    Else
                        _TaxAmt = 0
                    End If

                    _EmpTaxYear.FTTotalTaxPay = _FCAccumulateTax + _TaxAmt

                Else

                    _TotalCalTax = 0
                    _TaxAmt = 0

                End If




                _FNNetpay = Format((_tmpTotalincome - (_FCSocial + FTContributedAmt + _TaxAmt + 0)), "0.00")
                _FNNetpayOrg = _FNNetpay

                '_DiffTotalincome = _Net - _tmpTotalincome
                '_DiffTotalNetPay = _FNNetpay - _tmpTotalNetPay

                If _tmpTotalincome <= 0 Then
                    _FNServicefee = 0
                    _FNFinTransFee = 0
                    _tmpTotalincome = 0
                    _tmpTotalNetPay = 0
                    _Net = 0
                    _FCBaht = 0
                    _FNNetpay = 0
                    _FNNetpayOrg = 0
                    _DiffTotalincome = 0
                    _DiffTotalNetPay = 0
                End If

                _FNNetpay = CDbl(Format((_FNNetpay), "0"))


                If _FNNetpay > 0 Then



                    Dim a As Integer = 0

                    a = _FNNetpay.ToString.Length

                    Dim amt1 As Integer = 0
                    Dim amt2 As Integer = 0
                    Dim amtAdd As Integer = 0
                    If a > 3 Then

                        amt2 = Right(_FNNetpay, 3)

                        If (amt2 > 500) Then

                            amtAdd = 1000
                        Else
                            amtAdd = 500
                        End If

                        _FNNetpay = (_FNNetpay + amtAdd) - amt2
                    Else
                        amt2 = _FNNetpay

                        If (amt2 > 500) Then

                            amtAdd = 1000
                        Else
                            amtAdd = 500
                        End If

                        _FNNetpay = amtAdd

                    End If
                End If


                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
                _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll (FTInsUser, FTInsDate, FTInsTime,"
                _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,FTEmpIdNo1,FTSocialNo,"
                _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
                _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId,  FNHSysPayRollPayId"
                _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
                _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
                _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
                _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
                _Qry &= vbCrLf & ",FNTotalWKNMin,  FNOt1Min, FNOt15Min, FNOt2Min"
                _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
                _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
                _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
                _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
                _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
                _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
                _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
                _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
                _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
                _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
                _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
                _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
                _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
                _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin, FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
                _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate , FNServicefee ,FNFinTransFee,FNSocialInsuranceEmployee , FNSocialInsuranceEmployer, FNUnionInsuranceEmployee , FNTotalWKN_Real_Min , FNSocialRateEmp,FNSocialRateCmp, FNSocialCmp )"
                _Qry &= vbCrLf & " 	SELECT '" & HI.UL.ULF.rpQuoted(_User) & "',CONVERT(varchar(10),GetDate(),111),CONVERT(varchar(8),GetDate(),114)"
                _Qry &= vbCrLf & " 	,'" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ""
                _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo1) & "','" & HI.UL.ULF.rpQuoted(_FTSocialNo) & "','" & _EmpType & "','" & HI.UL.ULDate.ConvertEnDB(_PayDate) & "'"
                _Qry &= vbCrLf & " 	," & Val(_FTDeptCode) & ""
                _Qry &= vbCrLf & " 	," & Val(_FTDivCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTSectCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTUnitCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPos) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTPaymentCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBankCode) & " "
                _Qry &= vbCrLf & " 	," & Val(_FTBranchCode) & " "
                _Qry &= vbCrLf & " 	,N'" & HI.UL.ULF.rpQuoted(_FTAccNo) & "'," & _TotalHoliDay & ""
                _Qry &= vbCrLf & " 	," & _FCSalary & ""
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNTimeMin & " / 60) + Convert(numeric(18,2),(( " & _GFNTimeMin & " %60) /100.00)) "
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT1_5Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT1_5Min & "  %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2), " & _GFNOT2Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT2Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2)," & _GFNOT3Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT3Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GFNOT4Min & " / 60) + Convert(numeric(18,2),(( " & _GFNOT4Min & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleavePay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleavePay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _GtotalleaveNotPay & " / 60) + Convert(numeric(18,2),(( " & _GtotalleaveNotPay & " %60) /100.00))"
                _Qry &= vbCrLf & " 	,Convert(numeric(18,2),  " & _Gtotalleave & " / 60) + Convert(numeric(18,2),(( " & _Gtotalleave & " %60) /100.00))"
                _Qry &= vbCrLf & " 	, " & _GFNTimeMin
                _Qry &= vbCrLf & " 	, " & _GFNOT1Min
                _Qry &= vbCrLf & " 	, " & _GFNOT1_5Min
                _Qry &= vbCrLf & ", " & _GFNOT2Min
                _Qry &= vbCrLf & "," & _GFNOT3Min
                _Qry &= vbCrLf & ",  " & _GFNOT4Min
                _Qry &= vbCrLf & ",  " & _GFNLateNormalMin
                _Qry &= vbCrLf & ",  " & _GFNLateNormalCut
                _Qry &= vbCrLf & ",  " & _GFNCutAbsent
                _Qry &= vbCrLf & ",  " & _GFNAbsent & "," & (_GFNTimeMin + _GFNOT1Min + _GFNOT1_5Min + _GFNOT2Min + _GFNOT3Min + _GFNOT4Min)
                _Qry &= vbCrLf & ",  " & _GtotalleavePay
                _Qry &= vbCrLf & ", " & _GtotalleaveNotPay
                _Qry &= vbCrLf & ", " & _Gtotalleave
                _Qry &= vbCrLf & ", " & _FNEmpBaht & " "
                _Qry &= vbCrLf & ", " & _nBahtOt1 & " "
                _Qry &= vbCrLf & "," & _nBahtOt15 & " "
                _Qry &= vbCrLf & "," & _nBahtOt2 & " "
                _Qry &= vbCrLf & "," & _nBahtOt3 & " "
                _Qry &= vbCrLf & "," & _nBahtOt4 & " "
                _Qry &= vbCrLf & "," & (_FNEmpBaht + _nBahtOt1 + _nBahtOt15 + _nBahtOt2 + _nBahtOt3 + _nBahtOt4 + _FNIncentiveAmt + _BonusAmt) & " "
                _Qry &= vbCrLf & "," & _FNEmpDiligent & " "
                _Qry &= vbCrLf & "," & _FCPayVacationBaht & " "
                _Qry &= vbCrLf & "," & _Lapaid & " "
                _Qry &= vbCrLf & "," & _LateCutAmt & " "
                _Qry &= vbCrLf & "," & _LateCutAmtAbsent & " "
                _Qry &= vbCrLf & "," & _nBahtAbsent & " "
                _Qry &= vbCrLf & "," & _TotalCalSso & " "  '1252332.349
                _Qry &= vbCrLf & "," & _TotalCalTax & " "
                _Qry &= vbCrLf & "," & _FCAdd & " "
                _Qry &= vbCrLf & "," & _FCOtherAdd & " "
                _Qry &= vbCrLf & "," & _FCDeduct & " "
                _Qry &= vbCrLf & "," & _FCOtherDeduct & " "
                _Qry &= vbCrLf & "," & _tmpTotalincome & " "
                _Qry &= vbCrLf & "," & _FCSocial & " "
                _Qry &= vbCrLf & "," & _TaxAmt & " "
                _Qry &= vbCrLf & "," & _HBaht & " "
                _Qry &= vbCrLf & "," & (_FNNetpay) & ""
                _Qry &= vbCrLf & "," & (_Net + _FCAccumulateIncome) & ""
                _Qry &= vbCrLf & "," & (_FCSocial + _FCAccumulateSocial) & ""
                _Qry &= vbCrLf & "," & (_TaxAmt + _FCAccumulateTax) & ""
                _Qry &= vbCrLf & ",'" & _FTStateInDustin & "' "
                _Qry &= vbCrLf & "," & (FTTotalCalContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTCmpContributedAmt) & ""
                _Qry &= vbCrLf & "," & (FTTotalCalWorkmen) & ""
                _Qry &= vbCrLf & "," & (FTWorkmenAmt) & ""
                _Qry &= vbCrLf & "," & _AmtRetire & ""
                _Qry &= vbCrLf & "," & _GtotalleavePayCalSsoAmt & ""
                _Qry &= vbCrLf & "," & _WorkingDay & " "
                _Qry &= vbCrLf & "," & _WageAdjAdd & ""
                _Qry &= vbCrLf & "," & _FNIncentiveAmt & ""
                _Qry &= vbCrLf & "," & _FNNetpayOrg & ""
                _Qry &= vbCrLf & "," & _FNNetAttandanceAmt & ""
                _Qry &= vbCrLf & "," & _FNHealtCareAmt & ""
                _Qry &= vbCrLf & "," & _FNTransportAmt & ""
                _Qry &= vbCrLf & "," & _FNNetChildCareAmt & ""
                _Qry &= vbCrLf & "," & _FNNetOTMealAmt & ""
                _Qry &= vbCrLf & "," & _FNSocialBase & ""
                _Qry &= vbCrLf & "," & _FNWorkAgeSalary & ""
                _Qry &= vbCrLf & "," & _FNNetOTMealAmtUS & ""
                _Qry &= vbCrLf & "," & _FNExchangeRate & ""
                _Qry &= vbCrLf & "," & FNPayLeaveSickBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveSickBahtMin & ""
                _Qry &= vbCrLf & "," & FNPayLeaveBusinessBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveBusinessBahtMin & ""
                _Qry &= vbCrLf & "," & FNPayLeaveSpecialBaht & ""
                _Qry &= vbCrLf & "," & GFNPayLeaveSpecialBahtMin & ""
                _Qry &= vbCrLf & "," & FNParturitionLeave & ""
                _Qry &= vbCrLf & "," & GFNParturitionLeaveMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetMin & ""
                _Qry &= vbCrLf & "," & FNVacationRetAmt & ""
                _Qry &= vbCrLf & "," & _FNExchangeRateTHB & ""
                _Qry &= vbCrLf & "," & FNWorkDayInWeek & ""
                _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(_FTCalSocialSta) & "'"
                _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(_FTCalTaxSta) & "'"
                _Qry &= vbCrLf & "," & _DiffTotalincome & ""
                _Qry &= vbCrLf & "," & _DiffTotalNetPay & ""
                _Qry &= vbCrLf & "," & SocialExchangeRate & ""
                _Qry &= vbCrLf & "," & TaxExchangeRate & ""
                _Qry &= vbCrLf & "," & _FNServicefee
                _Qry &= vbCrLf & "," & _FNFinTransFee
                _Qry &= vbCrLf & "," & FNSocialInsuranceEmployee
                _Qry &= vbCrLf & "," & FNSocialInsuranceEmployer
                _Qry &= vbCrLf & "," & FNUnionAmt
                _Qry &= vbCrLf & "," & _GFNTimeMin_Real_After_Probation + _GFNLeaveVacation
                _Qry &= vbCrLf & "," & _SocialRate & " "
                _Qry &= vbCrLf & "," & _SocialRateCmp & " "
                _Qry &= vbCrLf & "," & _FCSocialCmp & " "


                '  , FNVacationRetMin, FNVacationRetAmt
                '_FNNetpayOrg
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)


                ''best202207  ปรับคนลาออก ใส่คืนพักร้อนมือ  ต้องอัพเดท 
                'Dim retVacationAmt_Terminate As Double = 0


                'For Each _R As DataRow In _dt.Select("FCFinAmt<>0 and FTFincode = '019'")
                '    '' _AllFincode = _R!FTFincode.ToString


                '    retVacationAmt_Terminate = Val(_R!FCFinAmt.ToString)

                'Next


                'If retVacationAmt_Terminate > 0 Then
                '    _Qry = " update  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll SET  "
                '    _Qry &= vbCrLf & " FNVacationRetAmt =" & Val(retVacationAmt_Terminate)
                '    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                '    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                'End If



                If _FTCalTaxSta <> "1" And _FTEmpIdNo <> "" Then
                    '-----------------------------ภาษี -----------------------------------------------------
                    _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTaxYear "
                    _Qry &= vbCrLf & "  WHERE FTYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & "  AND  FTEmpIdNo='" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' AND FNHSysCmpId=" & HI.ST.SysInfo.CmpID & " "
                    _Qry &= vbCrLf & "  INSERT INTO THRTTaxYear (FNHSysCmpId,FTYear, FTEmpIdNo, FNAmt, FNExpenses, FNNetAmt, "
                    _Qry &= vbCrLf & "  FNModEmp, FNModMate, FNChildNotLern, FNChildLern, FNChildNotLernAmt, FNChildLernAmt, FNInsurance, FNProvidentfund, FNInterest, FNSocial, FNDonation, "
                    _Qry &= vbCrLf & "  FNProvidentfundOver, FNGPF, FNSavingsFund, FNCommutation, FNUnitRMF, FNModFather, FNModMother, FNModFatherMate, FNModMotherMate, FNUnitLTF, "
                    _Qry &= vbCrLf & "  FNDonationLern, FNParentsHealthInsurance, FNSupportSport, FNAcquisitionOfProperty, FNPension, FNTravel, FNTotalCalTax, FNTotalTax,FNTotalTaxPay )"
                    _Qry &= vbCrLf & "  SELECT " & HI.ST.SysInfo.CmpID & ",'" & _PayYear & "','" & HI.UL.ULF.rpQuoted(_FTEmpIdNo) & "' "

                    With _EmpTaxYear

                        _Qry &= vbCrLf & "," & .FTAmt & " "
                        _Qry &= vbCrLf & "," & .FTExpenses & ""
                        _Qry &= vbCrLf & "," & .FTNetAmt & ""
                        _Qry &= vbCrLf & "," & .FTModEmp & ""
                        _Qry &= vbCrLf & "," & .FTModMate & ""
                        _Qry &= vbCrLf & "," & .FNChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FNChildLern & " "
                        _Qry &= vbCrLf & "," & .FTChildNotLern & ""
                        _Qry &= vbCrLf & "," & .FTChildLern & ""
                        _Qry &= vbCrLf & "," & .FTInsurance & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfund & ""
                        _Qry &= vbCrLf & "," & .FTInterest & ""
                        _Qry &= vbCrLf & "," & .FTSocial & ""
                        _Qry &= vbCrLf & "," & .FTDonation & ""
                        _Qry &= vbCrLf & "," & .FTProvidentfundOver & ""
                        _Qry &= vbCrLf & "," & .FTGPF & ""
                        _Qry &= vbCrLf & "," & .FTSavingsFund & ""
                        _Qry &= vbCrLf & "," & .FTCommutation & ""
                        _Qry &= vbCrLf & "," & .FTUnitRMF & ""
                        _Qry &= vbCrLf & "," & .FTModFather & ""
                        _Qry &= vbCrLf & "," & .FTModMother & ""
                        _Qry &= vbCrLf & "," & .FTModFatherMate & ""
                        _Qry &= vbCrLf & "," & .FTModMotherMate & ""
                        _Qry &= vbCrLf & "," & .FTUnitLTF & ""
                        _Qry &= vbCrLf & "," & .FTDonationLern & ""
                        _Qry &= vbCrLf & "," & .FTParentsHealthInsurance & ""
                        _Qry &= vbCrLf & "," & .FTSupportSport & ""
                        _Qry &= vbCrLf & "," & .FTAcquisitionOfProperty & ""
                        _Qry &= vbCrLf & "," & .FTPension & ""
                        _Qry &= vbCrLf & "," & .FTTravel & ""
                        _Qry &= vbCrLf & "," & .FTTotalCalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTax & ""
                        _Qry &= vbCrLf & "," & .FTTotalTaxPay & ""

                    End With

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    '----------------------------- ภาษี -----------------------------------------------------
                End If

                '-----------------------------รายได้อื่นๆ -----------------------------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Dim _AllFincode As String = ""

                For Each _R As DataRow In _DtFin.Rows
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                    _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTFinCode, FTFinAmt," & _R!FCTotalFinAmt.ToString & ",0," & _R!FCTotalFinAmt.ToString & ""
                    _Qry &= vbCrLf & " FROM  THRMEmployeeFin "
                    _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND  FTFinCode = ('" & _AllFincode & "') "

                    HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                Next

                For Each _R As DataRow In _dt.Select("FCFinAmt<>0")
                    _AllFincode = _R!FTFincode.ToString

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_R!FCFinAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FCFinAmtOther=" & _R!FCFinAmt.ToString & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _AllFincode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then

                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ",'" & _AllFincode & "',0, 0," & _R!FCFinAmt.ToString & "," & _R!FCFinAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                    End If

                Next



                ''----------- เงินคืนพักร้อน-------------------------------

                ''เงินน้ำมัน

                If _TotalFuel > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalFuel.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='056' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '056'," & _TotalFuel & "," & _TotalFuel & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                ''เงินเพิ่มอื่นๆ

                If _TotalMoneyMeal > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneyMeal.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='053' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '053'," & _TotalMoneyMeal & "," & _TotalMoneyMeal & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _FNWorkAgeSalary > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNWorkAgeSalary.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='054' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '054'," & _FNWorkAgeSalary & "," & _FNWorkAgeSalary & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalDeligent_La > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalDeligent_La.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='059' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '059'," & _TotalDeligent_La & "," & _TotalDeligent_La & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _ShiftAmt > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='001' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '001'," & _ShiftValue.ToString & "," & _ShiftAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _ShiftOTAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_ShiftOTAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='007' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '007'," & _ShiftOTValue.ToString & "," & _ShiftOTAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _SeniorityAmt > 0 Then

                    Dim _xFinCode As String = "046"
                    If (_FTStateWorkpermit = "1") Then
                        _xFinCode = "047"
                    End If
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_SeniorityAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='" & _xFinCode & "' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '" & _xFinCode & "'," & _SeniorityAmt.ToString & "," & _SeniorityAmt.ToString & ""
                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If

                End If

                If _BonusAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_BonusAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='008' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _BonusAmt.ToString & "," & _BonusAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _FNIncentiveAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNIncentiveAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='011' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '011'," & _FNIncentiveAmt.ToString & "," & _FNIncentiveAmt.ToString & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _TotalMoneySkill > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySkill.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='043' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '043'," & Val(_TotalMoneySkill.ToString) & "," & Val(_TotalMoneySkill.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySkill_Sew > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySkill_Sew.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='057' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '057'," & Val(_TotalMoneySkill_Sew.ToString) & "," & Val(_TotalMoneySkill_Sew.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneyHeaderCapton > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneyHeaderCapton.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='061' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '061'," & Val(_TotalMoneyHeaderCapton.ToString) & "," & Val(_TotalMoneyHeaderCapton.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySupport_Sew > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySupport_Sew.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='062' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '062'," & Val(_TotalMoneySupport_Sew.ToString) & "," & Val(_TotalMoneySupport_Sew.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySeviceMachine > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySeviceMachine.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='063' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '063'," & Val(_TotalMoneySeviceMachine.ToString) & "," & Val(_TotalMoneySeviceMachine.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If

                If _TotalMoneySkill_QA > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_TotalMoneySkill_QA.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='064' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '064'," & Val(_TotalMoneySkill_QA.ToString) & "," & Val(_TotalMoneySkill_QA.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If



                If FNUnionAmt > 0 Then
                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(FNUnionAmt.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    _Qry &= vbCrLf & " AND FTFinCode='108' "

                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '108'," & Val(FNUnionAmt.ToString) & "," & Val(FNUnionAmt.ToString) & ""

                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                    End If
                End If


                If _FNEmpDiligent > 0 Then

                    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_FNEmpDiligent.ToString) & " "
                    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                    If _FNDeligentPeriod = 0 Then
                        _Qry &= vbCrLf & " AND FTFinCode='008' "
                    Else
                        _Qry &= vbCrLf & " AND FTFinCode='009' "

                    End If


                    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                        If _FNDeligentPeriod = 0 Then
                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '008'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                        Else

                            _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,   FTFinCode, FCFinAmt,FCTotalFinAmt)"
                            _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '009'," & _FNEmpDiligent.ToString & "," & _FNEmpDiligent.ToString & ""

                            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                        End If
                    End If

                End If

                'If _AmtReturnVacation > 0 Then

                '    _Qry = " Update [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
                '    _Qry &= vbCrLf & " SET FCTotalFinAmt=FCTotalFinAmt+" & Val(_AmtReturnVacation.ToString) & " "
                '    _Qry &= vbCrLf & " ,FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                '    _Qry &= vbCrLf & " ,FTUpdDate=" & HI.UL.ULDate.FormatDateDB
                '    _Qry &= vbCrLf & " ,FTUpdTime=" & HI.UL.ULDate.FormatTimeDB
                '    _Qry &= vbCrLf & " WHERE FTPayYear='" & _PayYear & "' "
                '    _Qry &= vbCrLf & " AND FTPayTerm='" & _PayTerm & "' "
                '    _Qry &= vbCrLf & " AND FNHSysEmpID=" & Val(_EmpCode) & " "
                '    _Qry &= vbCrLf & " AND FTFinCode='023' "

                '    If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR) = False Then
                '        _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode, FCFinAmt,FCTotalFinAmt)"
                '        _Qry &= vbCrLf & " SELECT  '" & _PayYear & "','" & _PayTerm & "'," & Val(_EmpCode) & ", '023'," & _ShiftValue.ToString & "," & _AmtReturnVacation.ToString & ""

                '        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)
                '    End If

                'End If
                ''----------- เงินคืนพักร้อน-------------------------------

                _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave "
                _Qry &= vbCrLf & " WHERE   FNHSysEmpID=" & Val(_EmpCode) & " "
                _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
                _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

                _Qry = "INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollLeave (FTPayYear, FTPayTerm, FNHSysEmpID, FTLeaveType, FNTotalHour, FNTotalMinute, FNTotalPayHour, FNTotalPayMinute, FNTotalNotPayHour,FNTotalNotPayMinute)"
                _Qry &= vbCrLf & "  SELECT      '" & _PayYear & "','" & _PayTerm & "',FNHSysEmpID,  FTLeaveType,Convert(numeric(18,2), Sum(FNTotalMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalMinute) %60) /100.00)) , "
                _Qry &= vbCrLf & "  Sum(FNTotalMinute), Convert(numeric(18,2), Sum(FNTotalPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalPayMinute) %60) /100.00)), Sum(FNTotalPayMinute),  Convert(numeric(18,2),Sum(FNTotalNotPayMinute) / 60) + Convert(numeric(18,2),((Sum(FNTotalNotPayMinute) %60) /100.00)), SUM(FNTotalNotPayMinute)"
                _Qry &= vbCrLf & "  FROM THRTTransLeave "
                _Qry &= vbCrLf & " WHERE        (FNHSysEmpID = '" & Val(_EmpCode) & "') "
                _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "' "
                _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "' "
                _Qry &= vbCrLf & "  GROUP BY   FNHSysEmpID, FTLeaveType"

                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            End If


            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & "  	INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollCalculate (FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & " FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & " FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate)"
            _Qry &= vbCrLf & " SELECT TOP 1  FTInsUser, FTInsDate, FTInsTime,"
            _Qry &= vbCrLf & "   FTPayYear, FTPayTerm, FNHSysEmpID, FTEmpIdNo,"
            _Qry &= vbCrLf & "   FNHSysEmpTypeId, FTPayDate"
            _Qry &= vbCrLf & ",FNHSysDeptId, FNHSysDivisonId, FNHSysSectId, FNHSysUnitSectId, FNHSysPositId, FNHSysPayRollPayId"
            _Qry &= vbCrLf & " , FNHSysBankId, FNHSysBankBranchId, FTAccNo, FNHoliday"
            _Qry &= vbCrLf & "   ,FNSalary, FNWorkingHour"
            _Qry &= vbCrLf & "   ,FNOt1, FNOt15, FNOt2, FNOt3,FNOt4"
            _Qry &= vbCrLf & ", FNTotalLeavePay, FNTotalLeaveNotPay, FNTotalLeave"
            _Qry &= vbCrLf & ",FNTotalWKNMin, FNOt1Min, FNOt15Min, FNOt2Min"
            _Qry &= vbCrLf & ", FNOt3Min, FNOt4Min, FNTotalLateMin, FNLateCutMin, FNLateCutAbsentMin"
            _Qry &= vbCrLf & ",  FNAbsentMin, FNTotalWKMin, FNTotalLeavePayMin, FNTotalLeaveNotPayMin, FNTotalLeaveMin"
            _Qry &= vbCrLf & " , FCBaht, FCOt1_Baht"
            _Qry &= vbCrLf & ",FCOt15_Baht, FCOt2_Baht, FCOt3_Baht,FCOt4_Baht,FCNetBaht"
            _Qry &= vbCrLf & ", FNDiligentBaht, FNPayLeaveVacationBaht, FNPayLeaveOtherBaht "
            _Qry &= vbCrLf & ", FNLateCutAmt, FNLateCutAbsentAmt,FNAbsentAmt, FNTotalRecalSSO, FNTotalRecalTAX"
            _Qry &= vbCrLf & ", FNTotalAdd,FNTotalAddOther, FNTotalExpense, FNTotalExpenseOther, FNTotalIncome "
            _Qry &= vbCrLf & ",FNSocial, FNTax, FHolidayBaht, FNNetpay, FNAccumulateIncomeYear"
            _Qry &= vbCrLf & ", FNAccumulateSocialYear, FNAccumulateTax, FTStateInDustin"
            _Qry &= vbCrLf & ",FNTotalCalContributedAmt,FNContributedAmt,FNCmpContributedAmt,FNTotalCalWorkmen,FNWorkmenAmt ,FNAmtRetire"
            _Qry &= vbCrLf & ",FNPayLeaveSSo,FNWorkingDay,FNAdjBeforeCal,FNIncentiveAmt,FNNetpayOrg"
            _Qry &= vbCrLf & ", FNAttandanceAmt, FNHealtCareAmt, "
            _Qry &= vbCrLf & "FNTransportAmt, FNChildCareAmt, FNOTMealAmt, FNSocialBase, FNWorkAgeSalary, FNOTMealAmtUS, FNExchangeRate, FNSickLeaveBaht, FNSickLeaveMin, FNBusinessLeaveBaht, FNBusinessLeaveMin,"
            _Qry &= vbCrLf & "FNSpecialLeaveBaht, FNSpecialLeaveMin, FNParturitionLeaveBaht, FNParturitionLeaveMin , FNVacationRetMin, FNVacationRetAmt,FNExchangeRateTHB"
            _Qry &= vbCrLf & ",FNWorkDay,FTStateCalSocial,FTStateCalTax,FNTotalIncomeDiff,FNNetpayDiff,FNSocialExchangeRate,FNTaxExchangeRate"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFinCalculate (FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt)"
            _Qry &= vbCrLf & " SELECT FTPayYear, FTPayTerm, FNHSysEmpID,  FTFinCode,FCFin, FCFinAmt,FCFinAmtOther,FCTotalFinAmt "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRollFin "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

            _Qry = " DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "
            _Qry &= vbCrLf & " INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManageCalculate ( FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay)"
            _Qry &= vbCrLf & " SELECT  FTPayYear, FTPayTerm, FNHSysEmpID, FTFinCode, FCFinAmt, FNDay "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTManage "
            _Qry &= vbCrLf & " WHERE FNHSysEmpID=" & Val(_EmpCode) & " "
            _Qry &= vbCrLf & " AND FTPayYear='" & _PayYear & "' "
            _Qry &= vbCrLf & " AND  FTPayTerm='" & _PayTerm & "' "

            HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_HR)

        Next

        Return True

    End Function


#End Region

    Private Shared Sub CalculateParturition(ByVal _PayYear As String, ByVal _PayTerm As String, ByVal _StartDate As String, ByVal _EndDate As String, _EmpSysId As Integer, ByRef _FNParturitionLeave As Double, ByRef _FNParturitionLeaveMin As Double, ByRef _DeductAttandanceAmt As Double, Optional ByVal _WorkAge As Integer = 0, Optional ByRef _WorkAgeParturition As Integer = 0, Optional ByRef _FNParturitionLeaveReCalTax As Double = 0)
        Dim _Cmd As String = ""

        Dim _dt As DataTable
        Dim _FNParturitionLeaveSum As Double = 0
        Dim _FNAttandanceAmt As Double = 0
        Dim _PayTermPermonth As String = ""

        Dim _PayTermCals As String = _PayTerm

        ''เอาค่าแรงที่เต็มเดือน
        'If Integer.Parse(_PayTerm) Mod 2 = 0 Then
        '    _PayTermCals = Microsoft.VisualBasic.Right("0" & (Integer.Parse(_PayTerm) - 1), 2)
        'End If

        Dim avgMonth As Integer = 0

        _Cmd = "select  top 1  dbo. FN_Get_Emp_WorkAge_Mate_CD_New(FDDateStart,FTStartDate,FTStartDate) AS FNWorkAge    "
        _Cmd &= vbCrLf & " From (SELECT  L.FNHSysEmpID, L.FTDateTrans, L.FTLeaveType,D.FTStartDate , E.FDDateStart"
        _Cmd &= vbCrLf & "   FROM   [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave AS L with(NOLOCK) "
        _Cmd &= vbCrLf & "   LEFT OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTLeaveAdvanceDaily AS D WITH(NOLOCK) ON L.FTDateTrans>= D.FTStartDate and L.FTDateTrans <= D.FTEndDate  "
        _Cmd &= vbCrLf & "   and D.FTLeaveType = L.FTLeaveType and D.FNHSysEmpID = L.FNHSysEmpID  "
        _Cmd &= vbCrLf & "   INNER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS E WITH(NOLOCK) ON L.FNHSysEmpID = E.FNHSysEmpID "
        _Cmd &= vbCrLf & "   WHERE     (L.FTLeaveType = '97') ) AS T "
        _Cmd &= vbCrLf & " WHERE FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "'"
        _Cmd &= vbCrLf & "  AND( FNHSysEmpID =  " & _EmpSysId & ") "
        _dt = HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR)

        _WorkAge = HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, _WorkAge)

        _WorkAgeParturition = _WorkAge

        If Integer.Parse(_PayTerm) Mod 2 = 0 Then
            _PayTermPermonth = Microsoft.VisualBasic.Right(HI.UL.ULF.rpQuoted("0" & Integer.Parse(_PayTerm) - 1), 2)
        Else
            _PayTermPermonth = _PayTerm
        End If

        _Cmd = " Select top 7 FNParturitionLeaveBaht  from [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll WITH(NOLOCK)  "
        _Cmd &= vbCrLf & " where FNHSysEmpID = " & _EmpSysId & " "
        _Cmd &= vbCrLf & "  and FTPayDate <= '" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'"
        _Cmd &= vbCrLf & " ORder by  FTPayYear desc , FTPayTerm desc "

        _dt = HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR)


        _Cmd = "  SELECT TOP 1 FTLeaveType"
        _Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave AS B WITH(NOLOCK)"
        _Cmd &= vbCrLf & " WHERE  (FTLeaveType = '97')"
        _Cmd &= vbCrLf & "  AND (FNHSysEmpID = " & _EmpSysId & ")"
        _Cmd &= vbCrLf & "  AND (FTDateTrans >='" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "')"
        _Cmd &= vbCrLf & "  AND (FTDateTrans <='" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "')"
        _Cmd &= vbCrLf & " ORDER BY FTDateTrans"

        If HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "") <> "" And _dt.Select("FNParturitionLeaveBaht > 0").Length <= 0 Then

            _Cmd = "  SELECT TOP 1 FTLeaveType"
            _Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave AS B WITH(NOLOCK)"
            _Cmd &= vbCrLf & " WHERE  (FTLeaveType = '97')"
            _Cmd &= vbCrLf & "  AND (FNHSysEmpID = " & _EmpSysId & ")"
            _Cmd &= vbCrLf & "  AND (FTDateTrans <='" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "')"
            _Cmd &= vbCrLf & " ORDER BY FTDateTrans"

            If HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "") <> "" Then

                _Cmd = "  SELECT Sum( FNTotalMinute) AS FNTotalMinute"
                _Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave AS B WITH(NOLOCK)"
                _Cmd &= vbCrLf & " WHERE  (FTLeaveType = '97')"
                _Cmd &= vbCrLf & "  AND (FNHSysEmpID = " & _EmpSysId & ")"
                _Cmd &= vbCrLf & "  AND (FTDateTrans >='" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "')"
                _FNParturitionLeaveMin = Integer.Parse(Val(HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "0")))


                ''ปรับใหม่ 20211209  นับถอยหลัง 12 เดือน โดยนับเฉพราะ เดือนที่มีวันทำงาน 21 ขึ้นไป
                _Cmd = "  SELECT FTPayYear ,FNMonth, SUM(FNTotalIncomeOld) as FNTotalIncomeOld "
                _Cmd &= vbCrLf & " , SUM(FNTotalIncome) as FNTotalIncome "
                _Cmd &= vbCrLf & " , (Right( Convert(varchar(30),Convert(numeric(18,0),Floor((ISNULL(SUM(FNTimePayMin),0) - (ISNULL(SUM(FNTimePayMin),0) % 480) )/ 480.00))),2) "
                _Cmd &= vbCrLf & "    +':'+  Right('00' + Convert(varchar(30),Convert(numeric(18,0),Floor(((ISNULL(SUM(FNTimePayMin),0)) % 480.00) / 60.00))),2) "
                _Cmd &= vbCrLf & "    +':'+  Right('00' + Convert(varchar(30),Convert(numeric(18,0),(((ISNULL(SUM(FNTimePayMin),0)) % 480.00) % 60.00))),2))  AS FTWorkActual"
                _Cmd &= vbCrLf & " , CASE WHEN (SUM(FNTimePayMin)/ 480) >= 21 then 'Y' else '' end as FTCalculateFlag "
                _Cmd &= vbCrLf & "  FROM "
                _Cmd &= vbCrLf & "  ( "

                _Cmd &= vbCrLf & "  SELECT TOP 24   X.FTPayYear, X.FTPayTerm  , FNSalary ,FNTotalIncome AS 'FNTotalIncomeOld' ,FNAttandanceAmt"

                _Cmd &= vbCrLf & " , FNTotalIncome - (ISNULL(F4.FCTotalFinAmt044,0) + ISNULL(F5.FCTotalFinAmt045,0) + ISNULL(F6.FCTotalFinAmt046,0) + ISNULL(F7.FCTotalFinAmt047,0)  + ISNULL(FNVacationRetAmt,0)) AS FNTotalIncome  "
                _Cmd &= vbCrLf & " ,((ISNULL(FNHoliday,0) * 480)  + (ISNULL(FNTotalWKNMin,0)) + (ISNULL(FNTotalLeavePayMin,0))) as FNTimePayMin "
                _Cmd &= vbCrLf & "  ,FNMonth"
                _Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll AS X WITH(NOLOCK)  "
                _Cmd &= vbCrLf & "Left OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT AS D WITH(NOLOCK) ON X.FNHSysEmpTypeId = D.FNHSysEmpTypeId"
                _Cmd &= vbCrLf & " And X.FTPayYear = D.FTPayYear And X.FTPayTerm = D.FTPayTerm"

                _Cmd &= vbCrLf & " OUTER APPLY ( SELECT top 1 FCTotalFinAmt as FCTotalFinAmt044  FROM THRTPayRollFin F044 WHERE F044.FTPayYear=X.FTPayYear AND F044.FTPayTerm=X.FTPayTerm AND F044.FTFinCode ='044' AND  F044.FNHSysEmpID =X.FNHSysEmpID) F4 "
                _Cmd &= vbCrLf & " OUTER APPLY ( SELECT top 1 FCTotalFinAmt as FCTotalFinAmt045  FROM THRTPayRollFin F045 WHERE F045.FTPayYear=X.FTPayYear AND F045.FTPayTerm=X.FTPayTerm AND F045.FTFinCode ='045' AND  F045.FNHSysEmpID =X.FNHSysEmpID) F5 "
                _Cmd &= vbCrLf & " OUTER APPLY ( SELECT top 1 FCTotalFinAmt as FCTotalFinAmt046  FROM THRTPayRollFin F046 WHERE F046.FTPayYear=X.FTPayYear AND F046.FTPayTerm=X.FTPayTerm AND F046.FTFinCode ='046' AND  F046.FNHSysEmpID =X.FNHSysEmpID) F6 "
                _Cmd &= vbCrLf & " OUTER APPLY ( SELECT top 1 FCTotalFinAmt as FCTotalFinAmt047  FROM THRTPayRollFin F047 WHERE F047.FTPayYear=X.FTPayYear AND F047.FTPayTerm=X.FTPayTerm AND F047.FTFinCode ='047' AND  F047.FNHSysEmpID =X.FNHSysEmpID) F7 "

                _Cmd &= vbCrLf & " WHERE X.FNHSysEmpID=" & _EmpSysId & ""
                _Cmd &= vbCrLf & " AND X.FTPayYear + X.FTPayTerm <'" & HI.UL.ULF.rpQuoted(_PayYear & _PayTermCals) & "' "

                _Cmd &= vbCrLf & " AND D.FTPayYear  + RIGHT('0'+ convert(varchar(2),D.FNMonth) ,2) not in    (  "
                '_Cmd &= vbCrLf & " Select    isnull(D.FTPayYear,'') +  RIGHT('0'+ convert(varchar(2),D.FNMonth) ,2)   as FTPayYear  "
                '_Cmd &= vbCrLf & "   From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave As L WITH(NOLOCK) LEFT OUTER Join"
                '_Cmd &= vbCrLf & "[" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee As E WITH(NOLOCK) ON L.FNHSysEmpID = E.FNHSysEmpID"
                '_Cmd &= vbCrLf & "INNER  JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT AS D WITH(NOLOCK) ON E.FNHSysEmpTypeId = D.FNHSysEmpTypeId"
                '_Cmd &= vbCrLf & "And L.FTDateTrans >= D.FDCalDateBegin And L.FTDateTrans <= D.FDCalDateEnd"
                '_Cmd &= vbCrLf & "where L.FNHSysEmpID = " & _EmpSysId & ""
                '_Cmd &= vbCrLf & " And (FTLeaveType = '97')  "
                '_Cmd &= vbCrLf & " union"
                _Cmd &= vbCrLf & "  Select  top 1    isnull(D.FTPayYear,'') +  RIGHT('0'+ convert(varchar(2),D.FNMonth) ,2)  as FTPayYear "
                _Cmd &= vbCrLf & " from [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee E "
                _Cmd &= vbCrLf & "  INNER  JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT AS D WITH(NOLOCK) ON E.FNHSysEmpTypeId = D.FNHSysEmpTypeId "
                _Cmd &= vbCrLf & "  where E.FNHSysEmpID = " & _EmpSysId & ""
                _Cmd &= vbCrLf & " And E.FDDateStart >= D.FDCalDateBegin And E.FDDateStart <= D.FDCalDateEnd "
                _Cmd &= vbCrLf & "   )"


                _Cmd &= vbCrLf & " AND D.FTPayYear  + RIGHT('0'+ convert(varchar(2),D.FNMonth) ,2) not in    (  "

                _Cmd &= vbCrLf & "  Select  top 1    isnull(D.FTPayYear,'') +  RIGHT('0'+ convert(varchar(2),D.FNMonth) ,2)  as FTPayYear "
                _Cmd &= vbCrLf & " from [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee E "
                _Cmd &= vbCrLf & "  INNER  JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT AS D WITH(NOLOCK) ON E.FNHSysEmpTypeId = D.FNHSysEmpTypeId "
                _Cmd &= vbCrLf & "  where E.FNHSysEmpID = " & _EmpSysId & ""
                _Cmd &= vbCrLf & " AND D.FTPayYear + D.FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayYear & _PayTermCals) & "' "
                _Cmd &= vbCrLf & "   )"

                _Cmd &= vbCrLf & " ORDER BY X.FTPayYear +  X.FTPayTerm DESC "

                _Cmd &= vbCrLf & " ) A "
                _Cmd &= vbCrLf & "  GROUP BY FTPayYear ,FNMonth "
                _Cmd &= vbCrLf & " ORDER BY FTPayYear desc ,FNMonth desc "
                _Cmd &= vbCrLf & " "


                _dt = HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR)

                'If _dt.Rows.Count >= 24 Then

                '    For Each R As DataRow In _dt.Rows

                '        _FNParturitionLeaveSum = _FNParturitionLeaveSum + Val(R!FNTotalIncome.ToString)
                '            _FNAttandanceAmt = _FNAttandanceAmt + Val(R!FNAttandanceAmt.ToString)

                '    Next

                '    '_FNParturitionLeave = Double.Parse(Format(((0.5 * (((_FNParturitionLeaveSum / 24.0) / 2.0) * 3))), "0.00"))
                '    _FNParturitionLeave = Double.Parse(Format((((_FNParturitionLeaveSum / 12.0) * 3)), "0.00")) ' จ่าย 100 % 20161129
                '    _FNParturitionLeave = _FNParturitionLeave * 0.5 ' จ่าย 50 % 20170927

                'Else


                For Each R As DataRow In _dt.Rows

                    If R!FTCalculateFlag.ToString = "Y" Then
                        _FNParturitionLeaveSum = _FNParturitionLeaveSum + Val(R!FNTotalIncome.ToString)
                        ' _FNAttandanceAmt = _FNAttandanceAmt + Val(R!FNAttandanceAmt.ToString)
                        avgMonth = avgMonth + 1
                    End If



                Next
                If avgMonth > 0 Then
                    _FNParturitionLeave = Double.Parse(Format((((_FNParturitionLeaveSum / avgMonth) * 3)), "0.00")) ' จ่าย 100 % 20161129
                    _FNParturitionLeave = _FNParturitionLeave * 0.5 ' จ่าย 50 % 20170927

                End If
                '_FNParturitionLeave = Double.Parse(Format(((0.5 * (((_FNParturitionLeaveSum / 24.0) / 2.0) * 3))), "0.00"))


                'Dim _fweek As Integer = 0
                'Dim _cWeek As Integer = 0
                'If _WorkAge >= 12 Then
                '    _fweek = _dt.Rows.Count

                '    If Integer.Parse(_fweek) Mod 2 = 1 Then
                '        _fweek = _fweek - 1
                '    End If


                '    _Cmd = "  SELECT TOP " & _fweek & " FNTotalIncome, FNAttandanceAmt"
                '    _Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll AS X WITH(NOLOCK)"
                '    _Cmd &= vbCrLf & " WHERE FNHSysEmpID=" & _EmpSysId & ""
                '    '_Cmd &= vbCrLf & " AND FTPayYear + FTPayTerm <'" & HI.UL.ULF.rpQuoted(_PayYear & _PayTerm) & "' " ' คิดเป็นงวด  เต็มงวด
                '    _Cmd &= vbCrLf & " AND FTPayYear + FTPayTerm <'" & HI.UL.ULF.rpQuoted(_PayYear & _PayTermPermonth) & "' "  'คืดเป็นเดือน เต็มเดือน
                '    _Cmd &= vbCrLf & " ORDER BY FTPayYear +  FTPayTerm DESC "
                '    _dt = HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR)


                '    For Each R As DataRow In _dt.Rows

                '        _FNParturitionLeaveSum = _FNParturitionLeaveSum + Val(R!FNTotalIncome.ToString)
                '        _FNAttandanceAmt = _FNAttandanceAmt + Val(R!FNAttandanceAmt.ToString)
                '        _cWeek += +1
                '    Next


                '    _FNParturitionLeave = Double.Parse(Format((((_FNParturitionLeaveSum / (_cWeek / 2)) * 3)), "0.00")) ' จ่าย 100 % 20161129
                '    _FNParturitionLeave = _FNParturitionLeave * 0.5 ' จ่าย 50 % 20170927


                'End If

                'End If

                ''คำนวนยอดลาคลอดสำหรับ คิดภาษี
                If _FNParturitionLeave > 0 Then
                    avgMonth = 0

                    _Cmd = "  SELECT FTPayYear ,FNMonth, SUM(FNTotalIncomeOld) as FNTotalIncomeOld "
                    _Cmd &= vbCrLf & " , SUM(FNTotalIncome) as FNTotalIncome "
                    _Cmd &= vbCrLf & " , (Right( Convert(varchar(30),Convert(numeric(18,0),Floor((ISNULL(SUM(FNTimePayMin),0) - (ISNULL(SUM(FNTimePayMin),0) % 480) )/ 480.00))),2) "
                    _Cmd &= vbCrLf & "    +':'+  Right('00' + Convert(varchar(30),Convert(numeric(18,0),Floor(((ISNULL(SUM(FNTimePayMin),0)) % 480.00) / 60.00))),2) "
                    _Cmd &= vbCrLf & "    +':'+  Right('00' + Convert(varchar(30),Convert(numeric(18,0),(((ISNULL(SUM(FNTimePayMin),0)) % 480.00) % 60.00))),2))  AS FTWorkActual"
                    _Cmd &= vbCrLf & " , CASE WHEN (SUM(FNTimePayMin)/ 480) >= 21 then 'Y' else '' end as FTCalculateFlag "
                    _Cmd &= vbCrLf & "  FROM "
                    _Cmd &= vbCrLf & "  ( "

                    _Cmd &= vbCrLf & "  Select TOP 24   X.FTPayYear, X.FTPayTerm  , FNSalary ,FNTotalIncome As 'FNTotalIncomeOld' ,FNAttandanceAmt"
                    _Cmd &= vbCrLf & " , FNTotalIncome - (FNHealtCareAmt + FNOTMealAmtUS + FNTransportAmt + FNChildCareAmt+ ISNULL(F4.FCTotalFinAmt,0)+ ISNULL(F5.FCTotalFinAmt,0)+ ISNULL(F6.FCTotalFinAmt,0)+ ISNULL(F7.FCTotalFinAmt,0) + ISNULL(FNVacationRetAmt,0)) AS FNTotalIncome "
                    _Cmd &= vbCrLf & ",FNHealtCareAmt,FNOTMealAmtUS,FNTransportAmt,FNChildCareAmt "
                    _Cmd &= vbCrLf & " ,F4.FCTotalFinAmt AS '044', F5.FCTotalFinAmt AS '045', F6.FCTotalFinAmt AS '046', F7.FCTotalFinAmt AS '047' "
                    _Cmd &= vbCrLf & " ,((ISNULL(FNHoliday,0) * 480)  + (ISNULL(FNTotalWKNMin,0)) + (ISNULL(FNTotalLeavePayMin,0))) as FNTimePayMin "
                    _Cmd &= vbCrLf & " ,FNMonth "
                    _Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll AS X WITH(NOLOCK)"
                    _Cmd &= vbCrLf & "Left OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT AS D WITH(NOLOCK) ON X.FNHSysEmpTypeId = D.FNHSysEmpTypeId"
                    _Cmd &= vbCrLf & " And X.FTPayYear = D.FTPayYear And X.FTPayTerm = D.FTPayTerm"

                    _Cmd &= vbCrLf & " OUTER APPLY ( SELECT top 1 FCTotalFinAmt  FROM THRTPayRollFin F044 WHERE F044.FTPayYear=X.FTPayYear AND F044.FTPayTerm=X.FTPayTerm AND F044.FTFinCode ='044' AND  F044.FNHSysEmpID =X.FNHSysEmpID) F4 "
                    _Cmd &= vbCrLf & " OUTER APPLY ( SELECT top 1 FCTotalFinAmt  FROM THRTPayRollFin F045 WHERE F045.FTPayYear=X.FTPayYear AND F045.FTPayTerm=X.FTPayTerm AND F045.FTFinCode ='045' AND  F045.FNHSysEmpID =X.FNHSysEmpID) F5 "
                    _Cmd &= vbCrLf & " OUTER APPLY ( SELECT top 1 FCTotalFinAmt  FROM THRTPayRollFin F046 WHERE F046.FTPayYear=X.FTPayYear AND F046.FTPayTerm=X.FTPayTerm AND F046.FTFinCode ='046' AND  F046.FNHSysEmpID =X.FNHSysEmpID) F6 "
                    _Cmd &= vbCrLf & " OUTER APPLY ( SELECT top 1 FCTotalFinAmt  FROM THRTPayRollFin F047 WHERE F047.FTPayYear=X.FTPayYear AND F047.FTPayTerm=X.FTPayTerm AND F047.FTFinCode ='047' AND  F047.FNHSysEmpID =X.FNHSysEmpID) F7 "

                    _Cmd &= vbCrLf & " WHERE X.FNHSysEmpID=" & _EmpSysId & ""
                    _Cmd &= vbCrLf & " AND X.FTPayYear + X.FTPayTerm <'" & HI.UL.ULF.rpQuoted(_PayYear & _PayTermCals) & "' "
                    _Cmd &= vbCrLf & " AND D.FTPayYear  + RIGHT('0'+ convert(varchar(2),D.FNMonth) ,2) not in    ( "

                    _Cmd &= vbCrLf & "  Select  top 1    isnull(D.FTPayYear,'') +  RIGHT('0'+ convert(varchar(2),D.FNMonth) ,2)  as FTPayYear "
                    _Cmd &= vbCrLf & " from [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee E "
                    _Cmd &= vbCrLf & "  INNER  JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT AS D WITH(NOLOCK) ON E.FNHSysEmpTypeId = D.FNHSysEmpTypeId "
                    _Cmd &= vbCrLf & "  where E.FNHSysEmpID = " & _EmpSysId & ""
                    _Cmd &= vbCrLf & " And E.FDDateStart >= D.FDCalDateBegin And E.FDDateStart <= D.FDCalDateEnd "
                    _Cmd &= vbCrLf & ")"


                    _Cmd &= vbCrLf & " AND D.FTPayYear  + RIGHT('0'+ convert(varchar(2),D.FNMonth) ,2) not in    (  "

                    _Cmd &= vbCrLf & "  Select  top 1    isnull(D.FTPayYear,'') +  RIGHT('0'+ convert(varchar(2),D.FNMonth) ,2)  as FTPayYear "
                    _Cmd &= vbCrLf & " from [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee E "
                    _Cmd &= vbCrLf & "  INNER  JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT AS D WITH(NOLOCK) ON E.FNHSysEmpTypeId = D.FNHSysEmpTypeId "
                    _Cmd &= vbCrLf & "  where E.FNHSysEmpID = " & _EmpSysId & ""
                    _Cmd &= vbCrLf & " AND D.FTPayYear + D.FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayYear & _PayTermCals) & "' "
                    _Cmd &= vbCrLf & "   )"

                    _Cmd &= vbCrLf & " ORDER BY X.FTPayYear +  X.FTPayTerm DESC "

                    _Cmd &= vbCrLf & " ) A "
                    _Cmd &= vbCrLf & "  GROUP BY FTPayYear ,FNMonth "
                    _Cmd &= vbCrLf & " ORDER BY FTPayYear desc ,FNMonth desc "
                    _Cmd &= vbCrLf & " "
                    _dt = HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR)

                    'If _dt.Rows.Count >= 24 Then
                    '    _FNParturitionLeaveSum = 0
                    '    For Each R As DataRow In _dt.Rows

                    '        _FNParturitionLeaveSum = _FNParturitionLeaveSum + Val(R!FNTotalIncome.ToString)

                    '    Next

                    '    '_FNParturitionLeave = Double.Parse(Format(((0.5 * (((_FNParturitionLeaveSum / 24.0) / 2.0) * 3))), "0.00"))
                    '    _FNParturitionLeaveReCalTax = Double.Parse(Format((((_FNParturitionLeaveSum / 12.0) * 3)), "0.00")) ' จ่าย 100 % 20161129
                    '    _FNParturitionLeaveReCalTax = _FNParturitionLeaveReCalTax * 0.5 ' จ่าย 50 % 20170927

                    'Else
                    _FNParturitionLeaveSum = 0
                    For Each R As DataRow In _dt.Rows

                        If R!FTCalculateFlag.ToString = "Y" Then
                            _FNParturitionLeaveSum = _FNParturitionLeaveSum + Val(R!FNTotalIncome.ToString)
                            avgMonth = avgMonth + 1
                        End If


                    Next

                    If avgMonth > 0 Then
                        _FNParturitionLeaveReCalTax = Double.Parse(Format((((_FNParturitionLeaveSum / avgMonth) * 3)), "0.00")) ' จ่าย 100 % 20161129
                        _FNParturitionLeaveReCalTax = _FNParturitionLeaveReCalTax * 0.5 ' จ่าย 50 % 20170927
                    End If



                    'End If

                End If



                Dim _YearOld As String = ""
                Dim _MonthOld As String = ""
                Dim _montDiff As String = ""
                If (Integer.Parse(_PayTerm) - 12) < 0 Then
                    _montDiff = 24 + (Integer.Parse(_PayTerm) - 12)
                    _YearOld = HI.Conn.SQLConn.GetField("Select  convert(nvarchar(4), Convert(int," & _PayYear & ") - 1 ) as FTYear", Conn.DB.DataBaseName.DB_SYSTEM, _PayYear)
                    _MonthOld = Right(("0" & Integer.Parse(_montDiff)), 2)
                Else
                    _montDiff = (Integer.Parse(_PayTerm) - 12)
                    _YearOld = _PayYear
                    _MonthOld = Right(("0" & Integer.Parse(_montDiff)), 2)

                End If

                'If _montDiff = 1 Then
                '    _YearOld = Str(Integer.Parse(_YearOld) + 1)
                '    _MonthOld = Microsoft.VisualBasic.Right("00" & Str(Integer.Parse(_MonthOld) - 23), 2)
                'End If

                _Cmd = "Select distinct top 1 FNHSysEmpID  ,D.FTPayTerm , D.FTPayYear"
                _Cmd &= vbCrLf & " from [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave    as L  "
                _Cmd &= vbCrLf & " LEFT OUTER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT AS D ON L.FTDateTrans >= D.FDCalDateBegin and  L.FTDateTrans <= FDCalDateEnd  "
                _Cmd &= vbCrLf & "  where FTLeaveType = '97' "
                _Cmd &= vbCrLf & "  AND (FNHSysEmpID = " & _EmpSysId & ")"
                _Cmd &= vbCrLf & "  AND D.FTPayYear+'/'+D.FTPayTerm >='" & _YearOld & "/" & _MonthOld & "'"
                _Cmd &= vbCrLf & " order by  D.FTPayYear asc ,D.FTPayTerm asc  "
                _dt = HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR)

                If _dt.Select("FTPayTerm='" & _PayTerm & "' and FTPayYear='" & _PayYear & "'").Length > 0 Then
                    'MsgBox("true")
                    For Each R As DataRow In _dt.Select("FTPayTerm='" & _PayTerm & "' and FTPayYear='" & _PayYear & "'")
                        If _FNParturitionLeave > 0 Then
                            '_FNParturitionLeave = _FNParturitionLeave / 6
                            _FNParturitionLeave = _FNParturitionLeave ' เปลี่ยนเป็นจ่ายงวดเดียว  ตามประกาศ 25 มิถุนา 62
                        End If
                        Exit For
                    Next
                Else
                    'MsgBox("else")
                    _FNAttandanceAmt = 0
                    _FNParturitionLeave = 0
                    _FNParturitionLeaveReCalTax = 0
                End If
                _dt.Dispose()
            End If


        Else

            _Cmd = "  SELECT TOP 1 FTLeaveType"
            _Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave AS B WITH(NOLOCK)"
            _Cmd &= vbCrLf & " WHERE  (FTLeaveType = '97')"
            _Cmd &= vbCrLf & "  AND (FNHSysEmpID = " & _EmpSysId & ")"
            _Cmd &= vbCrLf & "  AND (FTDateTrans <='" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "')"
            _Cmd &= vbCrLf & " ORDER BY FTDateTrans"

            Dim _DateStart As String = ""
            If HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "") <> "" Then



                _Cmd = " Select top 7 FNParturitionLeaveBaht  from [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll WITH(NOLOCK)  "
                _Cmd &= vbCrLf & " where FNHSysEmpID = " & _EmpSysId & " "
                _Cmd &= vbCrLf & "  and FTPayDate <= '" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'"
                _Cmd &= vbCrLf & " ORder by  FTPayYear desc , FTPayTerm desc "

                _dt = HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR)
                If _dt.Select("FNParturitionLeaveBaht > 0 ").Length <= 1 Then
                    For Each R As DataRow In _dt.Select("FNParturitionLeaveBaht > 0")

                        _FNParturitionLeave = Double.Parse("0" & R!FNParturitionLeaveBaht.ToString)
                        Exit For
                    Next
                End If
                If _dt.Select("FNParturitionLeaveBaht > 0 ").Length = 1 Then
                    _FNParturitionLeave = 0
                    _FNParturitionLeaveReCalTax = 0
                End If

            End If


        End If

        '  MsgBox(_FNParturitionLeave)
        '_Cmd = "  SELECT TOP 1 FTDateTrans "
        '_Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave AS B WITH(NOLOCK)"
        '_Cmd &= vbCrLf & " WHERE  (FTLeaveType = '97')"
        '_Cmd &= vbCrLf & "  AND (FNHSysEmpID = " & _EmpSysId & ")"
        '_Cmd &= vbCrLf & "  AND (FTDateTrans <'" & HI.UL.ULDate.ConvertEnDB(_StartDate) & "')"
        '_Cmd &= vbCrLf & " ORDER BY FTDateTrans asc "

        'If HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "") < "2017/10/15" And HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "") <> "" Then
        '    _FNParturitionLeave = 0
        '    _FNAttandanceAmt = 0
        'End If
        If _WorkAge < 12 Then
            _FNAttandanceAmt = 0
            _FNParturitionLeave = 0
            _FNParturitionLeaveReCalTax = 0
        End If


        _DeductAttandanceAmt = _FNAttandanceAmt
    End Sub

    Private Shared Function MoneyRetSeniorityPerDay_KM(ByVal _PayYear As String, ByVal _PayTerm As String, ByVal _StartDate As String, ByVal _EndDate As String,
                                                      _EmpSysId As Integer, _EmpTypeId As Integer, Optional ByVal _ReturnVacation As Double = 0, Optional ByVal _FCSalary As Double = 0,
                                                     Optional ByVal CountDayPerMonth As Integer = 0, Optional ByVal workday As Integer = 0, Optional ByVal _SeniorityIndOld As Double = 0)
        Dim _Cmd As String = ""

        Dim _dt As DataTable
        Dim _FNMoneyRetVacationSum As Decimal
        Dim _FNMoneyRetVacationPerDay As Double = 0
        Dim _FNWorkDayPerMonth As Integer = 0
        Dim _Salary As Double = 0
        Dim _PayTermCals As String = _PayTerm

        Dim AvgMonth As Integer = 0

        'If Integer.Parse(_PayTerm) Mod 2 = 0 Then
        '    _PayTermCals = Microsoft.VisualBasic.Right("0" & (Integer.Parse(_PayTerm) - 1), 2)
        'End If



        '_Cmd = "  SELECT TOP 12  ROW_NUMBER() OVER(ORDER BY X.FTPayYear +  X.FTPayTerm DESC) AS Row , D.FNMonth

        '            , X.FTPayYear, X.FTPayTerm  , FNSalary ,  ( FNTotalIncome  - ( convert(numeric(18,2) ,  X.FNVacationRetAmt )) )   as FNTotalIncome"
        '_Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll AS X WITH(NOLOCK)"
        '_Cmd &= vbCrLf & " Left OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT AS D WITH(NOLOCK) ON X.FNHSysEmpTypeId = D.FNHSysEmpTypeId"
        '_Cmd &= vbCrLf & " And X.FTPayYear = D.FTPayYear And X.FTPayTerm = D.FTPayTerm "
        '_Cmd &= vbCrLf & " WHERE X.FNHSysEmpID=" & _EmpSysId & ""
        '_Cmd &= vbCrLf & " AND X.FTPayYear + X.FTPayTerm <='" & HI.UL.ULF.rpQuoted(_PayYear & _PayTermCals) & "' "
        ''_Cmd &= vbCrLf & " AND D.FTPayYear  + RIGHT('0'+ convert(varchar(2),D.FNMonth) ,2) not in    ( Select    isnull(D.FTPayYear,'') +  RIGHT('0'+ convert(varchar(2),D.FNMonth) ,2)   as FTPayYear  "
        ''_Cmd &= vbCrLf & "   From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave As L WITH(NOLOCK) LEFT OUTER Join"
        ''_Cmd &= vbCrLf & "[" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee As E WITH(NOLOCK) ON L.FNHSysEmpID = E.FNHSysEmpID"
        ''_Cmd &= vbCrLf & "Left OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT AS D WITH(NOLOCK) ON E.FNHSysEmpTypeId = D.FNHSysEmpTypeId"
        ''_Cmd &= vbCrLf & "And L.FTDateTrans >= D.FDCalDateBegin And L.FTDateTrans <= D.FDCalDateEnd"
        ''_Cmd &= vbCrLf & "where L.FNHSysEmpID = " & _EmpSysId & ""
        ''_Cmd &= vbCrLf & " And (FTLeaveType = '97') )"
        '_Cmd &= vbCrLf & " ORDER BY X.FTPayYear +  X.FTPayTerm DESC "
        '_dt = HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR)


        Dim _DateStart As Date
        Dim _Start As String
        Dim _total_month As Integer = 0
        Dim _FDDateStart As String
        Dim _FDDateProbation As String

        _Cmd = "  SELECT substring(FDDateStart,9,2) as datestart,  FDDateStart, FDDateProbation, DATEDIFF(month,FDDateStart,GETDATE()) as no_month  "
        _Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS X WITH(NOLOCK)"

        _Cmd &= vbCrLf & " WHERE X.FNHSysEmpID=" & _EmpSysId & ""
        For Each R As DataRow In HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR).Rows
            _Start = R!datestart.ToString
            _FDDateStart = R!FDDateStart.ToString
            _FDDateProbation = R!FDDateProbation.ToString
            _total_month = Val(R!no_month.ToString)
        Next

        Dim _No_firstMonth As Integer = 0


        Dim _DateEndMonth As Date


        Dim _NoDay_firstMonth As Integer

        'For Each R As DataRow In _dt.Rows
        '    _No_firstMonth = Val(R!FNMonth.ToString)
        'Next




        ''check

        Dim _StateCheckProbation As String
        ''SeniorityIndemnityProbation
        _Cmd = "  SELECT FTCfgData "
        _Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.TSESystemConfig  "
        _Cmd &= vbCrLf & " WHERE FTCfgName='SeniorityIndemnityProbation' "

        _StateCheckProbation = HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "")





        Dim _StateCheckParturitionLeave As String
        Dim _data As DataTable
        Dim _FNParturitionLeaveMin As Decimal
        Dim _FNParturitionLeaveBaht As Decimal


        _Cmd = "  SELECT Sum(A.FNParturitionLeaveMin) as FNParturitionLeaveMin, SUM(A.FNParturitionLeaveBaht) as FNParturitionLeaveBaht "
        _Cmd &= vbCrLf & " FROM ( "
        _Cmd &= vbCrLf & "      SELECT top 18   FNHSysEmpID, X.FNHSysEmpTypeId , ISNULL(FNParturitionLeaveMin,0) as FNParturitionLeaveMin "
        _Cmd &= vbCrLf & "          ,FNWorkingHour , ISNULL(FNParturitionLeaveBaht,0) as FNParturitionLeaveBaht "
        _Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll X "
        _Cmd &= vbCrLf & " LEFT OUTER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT As D With (NOLOCK) On X.FTPayYear = D.FTPayYear And X.FTPayTerm = D.FTPayTerm  "
        ''_Cmd &= vbCrLf & "  WHERE "
        '_Cmd &= vbCrLf & "  X.FNHSysEmpID=2054634667 "
        '_Cmd &= vbCrLf & " And  "
        '_Cmd &= vbCrLf & "  X.FTPayYear + X.FTPayTerm <='202212' "
        '_Cmd &= vbCrLf & "  and D.FNHSysEmpTypeId = 2054630003 "
        _Cmd &= vbCrLf & " WHERE X.FNHSysEmpID=" & _EmpSysId & ""
        _Cmd &= vbCrLf & " And X.FTPayYear + X.FTPayTerm <='" & HI.UL.ULF.rpQuoted(_PayYear & _PayTermCals) & "' "
        _Cmd &= vbCrLf & " and D.FNHSysEmpTypeId = " & Val(_EmpTypeId)
        _Cmd &= vbCrLf & "  and (FNParturitionLeaveMin >0 OR FNParturitionLeaveBaht>0) "
        _Cmd &= vbCrLf & "   ORDER BY X.FTPayYear +  X.FTPayTerm DESC ) A "

        For Each R As DataRow In HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR).Rows
            _FNParturitionLeaveMin = Val(R!FNParturitionLeaveMin.ToString)
            _FNParturitionLeaveBaht = Val(R!FNParturitionLeaveBaht.ToString)
        Next



        ''ปรับใหม่ 2022  
        _Cmd = "  SELECT FTPayYear ,FNMonth "
        _Cmd &= vbCrLf & " , SUM(FNTotalIncome) as FNTotalIncome "
        _Cmd &= vbCrLf & " , (Right( Convert(varchar(30),Convert(numeric(18,0),Floor((ISNULL(SUM(FNTimePayMin),0) - (ISNULL(SUM(FNTimePayMin),0) % 480) )/ 480.00))),2) "
        _Cmd &= vbCrLf & "    +':'+  Right('00' + Convert(varchar(30),Convert(numeric(18,0),Floor(((ISNULL(SUM(FNTimePayMin),0)) % 480.00) / 60.00))),2) "
        _Cmd &= vbCrLf & "    +':'+  Right('00' + Convert(varchar(30),Convert(numeric(18,0),(((ISNULL(SUM(FNTimePayMin),0)) % 480.00) % 60.00))),2))  AS FTWorkActual"
        _Cmd &= vbCrLf & " , CASE WHEN (SUM(FNTimePayMin)/ 480) >= 1 then 'Y' else '' end as FTCalculateFlag "

        _Cmd &= vbCrLf & " , MIN(FDCalDateBegin) FDCalDateBegin      , MAX(FDCalDateEnd) FDCalDateEnd "
        _Cmd &= vbCrLf & "  , MAX(ChkPro) as ChkPro "
        _Cmd &= vbCrLf & "  , SUM(FNParturitionLeaveMin) as FNParturitionLeaveMin  "
        _Cmd &= vbCrLf & "   , SUM(FNParturitionLeaveBaht) as FNParturitionLeaveBaht"


        _Cmd &= vbCrLf & "  FROM "
        _Cmd &= vbCrLf & "  ( "



        _Cmd &= vbCrLf & "  SELECT top 12   ( convert(numeric(18,2) ,  X.FNTotalIncome )  - ( convert(numeric(18,2) ,  ISNULL(X.FNVacationRetAmt,0) )  ) - (ISNULL(F4.FCTotalFinAmt044,0) + ISNULL(F5.FCTotalFinAmt045,0) + ISNULL(F6.FCTotalFinAmt046,0) + ISNULL(F7.FCTotalFinAmt047,0) ))    As FNTotalIncome  , X.FNAttandanceAmt, X.FNSalary  "
        _Cmd &= vbCrLf & " , count( * ) over (partition by   X.FTPayYear   ,d.FNMonth ) As FNMonthCount  , FNParturitionLeaveMin ,FNWorkingHour , FNParturitionLeaveBaht"
        _Cmd &= vbCrLf & " ,((ISNULL(FNHoliday,0) * 480)  + (ISNULL(FNTotalWKNMin,0)) + (ISNULL(FNTotalLeavePayMin,0))) as FNTimePayMin "
        _Cmd &= vbCrLf & ",X.FTPayYear  , FNMonth , D.FDCalDateBegin, D.FDCalDateEnd "
        _Cmd &= vbCrLf & " ,E.FDDateEnd, E.FDDateProbation, CASE WHEN E.FDDateProbation>=D.FDCalDateBegin AND E.FDDateProbation<=D.FDCalDateEnd  THEN 1 ELSE 0 END ChkPro "
        _Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll As X With(NOLOCK) LEFT OUTER JOIN "
        _Cmd &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee E ON E.FNHSysEmpID=X.FNHSysEmpID   LEFT OUTER JOIN "
        _Cmd &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT As D With (NOLOCK) On X.FTPayYear = D.FTPayYear And X.FTPayTerm = D.FTPayTerm "
        _Cmd &= vbCrLf & " OUTER APPLY ( SELECT top 1 FCTotalFinAmt as FCTotalFinAmt044  FROM THRTPayRollFin F044 WHERE F044.FTPayYear=X.FTPayYear AND F044.FTPayTerm=X.FTPayTerm AND F044.FTFinCode ='044' AND  F044.FNHSysEmpID =X.FNHSysEmpID) F4 "
        _Cmd &= vbCrLf & " OUTER APPLY ( SELECT top 1 FCTotalFinAmt as FCTotalFinAmt045  FROM THRTPayRollFin F045 WHERE F045.FTPayYear=X.FTPayYear AND F045.FTPayTerm=X.FTPayTerm AND F045.FTFinCode ='045' AND  F045.FNHSysEmpID =X.FNHSysEmpID) F5 "
        _Cmd &= vbCrLf & " OUTER APPLY ( SELECT top 1 FCTotalFinAmt as FCTotalFinAmt046  FROM THRTPayRollFin F046 WHERE F046.FTPayYear=X.FTPayYear AND F046.FTPayTerm=X.FTPayTerm AND F046.FTFinCode ='046' AND  F046.FNHSysEmpID =X.FNHSysEmpID) F6 "
        _Cmd &= vbCrLf & " OUTER APPLY ( SELECT top 1 FCTotalFinAmt as FCTotalFinAmt047  FROM THRTPayRollFin F047 WHERE F047.FTPayYear=X.FTPayYear AND F047.FTPayTerm=X.FTPayTerm AND F047.FTFinCode ='047' AND  F047.FNHSysEmpID =X.FNHSysEmpID) F7 "

        _Cmd &= vbCrLf & " WHERE X.FNHSysEmpID=" & _EmpSysId & ""
        _Cmd &= vbCrLf & " And X.FTPayYear + X.FTPayTerm <='" & HI.UL.ULF.rpQuoted(_PayYear & _PayTermCals) & "' "
        _Cmd &= vbCrLf & " and D.FNHSysEmpTypeId = " & Val(_EmpTypeId)

        _Cmd &= vbCrLf & " ORDER BY X.FTPayYear +  X.FTPayTerm DESC "

        _Cmd &= vbCrLf & " ) A "
        _Cmd &= vbCrLf & "  GROUP BY FTPayYear ,FNMonth "
        _Cmd &= vbCrLf & " ORDER BY FTPayYear desc ,FNMonth asc "
        _Cmd &= vbCrLf & " "


        Dim _diffCount As Integer = 0
        _FNMoneyRetVacationSum = 0
        _FNMoneyRetVacationPerDay = 0
        _dt = HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR)

        If _dt.Rows.Count > 0 Then



            'If _StateCheckProbation = "1" Then
            '    For Each R As DataRow In _dt.Rows


            '        If _FDDateProbation >= R!FDCalDateBegin.ToString Then  ''หลังวันผ่านโปร
            '            If _FDDateProbation >= R!FDCalDateBegin.ToString And _FDDateProbation <= R!FDCalDateEnd.ToString Then

            '                ''get TimePayMinAfterProbation
            '                If GetTimePayMinOnMonthPro(_EmpSysId, _EmpTypeId, R!FTPayYear.ToString, R!FNMonth.ToString) Then
            '                    _FNMoneyRetVacationSum = _FNMoneyRetVacationSum + Val(R!FNTotalIncome.ToString)
            '                    AvgMonth = AvgMonth + 1
            '                End If

            '            Else
            '                If R!FTCalculateFlag.ToString = "Y" Then

            '                    _FNMoneyRetVacationSum = _FNMoneyRetVacationSum + Val(R!FNTotalIncome.ToString)
            '                    AvgMonth = AvgMonth + 1
            '                End If

            '            End If
            '        End If
            '    Next
            'Else
            '    For Each R As DataRow In _dt.Rows
            '        If R!FTCalculateFlag.ToString = "Y" Then

            '            _FNMoneyRetVacationSum = _FNMoneyRetVacationSum + Val(R!FNTotalIncome.ToString)
            '            AvgMonth = AvgMonth + 1
            '        End If
            '    Next


            'End If


            For Each R As DataRow In _dt.Rows

                If R!ChkPro.ToString = "0" Then
                    If _FNParturitionLeaveMin > 0 And _FNParturitionLeaveBaht > 0 Then  ''ลาคลอดจ่าย  ให้นับทุกเดือน
                        _FNMoneyRetVacationSum = _FNMoneyRetVacationSum + Val(R!FNTotalIncome.ToString)
                        AvgMonth = AvgMonth + 1

                    ElseIf _FNParturitionLeaveMin > 0 And _FNParturitionLeaveBaht = 0 Then  ''ลาคลอดไม่จ่าย    นับเดือนที่มีเวลาทำงาน
                        If R!FTCalculateFlag.ToString = "Y" Then

                            _FNMoneyRetVacationSum = _FNMoneyRetVacationSum + Val(R!FNTotalIncome.ToString)
                            AvgMonth = AvgMonth + 1

                        Else

                        End If

                    Else
                        _FNMoneyRetVacationSum = _FNMoneyRetVacationSum + Val(R!FNTotalIncome.ToString)
                        AvgMonth = AvgMonth + 1
                    End If
                Else  ''ถึงเดือนที่ผ่านโปร  ให้นับใหม่
                    _FNMoneyRetVacationSum = 0
                    AvgMonth = 0
                    _FNMoneyRetVacationSum = _FNMoneyRetVacationSum + Val(R!FNTotalIncome.ToString)
                    AvgMonth = AvgMonth + 1
                End If


            Next


            If AvgMonth > 0 Then
                _FNMoneyRetVacationPerDay = Double.Parse(Format((((_FNMoneyRetVacationSum / (AvgMonth)) / 26)), "0.000"))
            End If
        Else

            Dim _WorkDay As Integer = workday
            If _WorkDay <= 0 Then
                _FNMoneyRetVacationPerDay = 0
            Else

                'Dim _ReVacationDay As Double = 0
                Dim _ReVacationPiad As Double = 0
                '_ReVacationDay = Double.Parse(Format(((_ReturnVacation / 26) * _WorkDay), "0.000"))

                _ReVacationPiad = Double.Parse(Format(((_FCSalary / 26)), "0.000"))
                _FNMoneyRetVacationPerDay = _ReVacationPiad

            End If
        End If



        _dt.Dispose()
        Dim _ReVacationPiadM As Double = 0


        _ReVacationPiadM = Double.Parse(Format(((_FCSalary / CountDayPerMonth)), "0.000"))

        _FNMoneyRetVacationPerDay = IIf(_FNMoneyRetVacationPerDay > _ReVacationPiadM, _FNMoneyRetVacationPerDay, _ReVacationPiadM)

        Return _FNMoneyRetVacationPerDay

    End Function

    Private Shared Function MoneyRetVacationPerDay_KM(ByVal _PayYear As String, ByVal _PayTerm As String, ByVal _StartDate As String, ByVal _EndDate As String,
                                                      _EmpSysId As Integer, _EmpTypeId As Integer, Optional ByVal _ReturnVacation As Double = 0, Optional ByVal _FCSalary As Double = 0,
                                                     Optional ByVal CountDayPerMonth As Integer = 0, Optional ByVal workday As Integer = 0)
        Dim _Cmd As String = ""

        Dim _dt As DataTable
        Dim _FNMoneyRetVacationSum As Decimal
        Dim _FNMoneyRetVacationPerDay As Double = 0
        Dim _FNWorkDayPerMonth As Integer = 0
        Dim _Salary As Double = 0
        Dim _PayTermCals As String = _PayTerm

        Dim AvgMonth As Integer = 0

        ''เอาข้อมูลที่เต็มเดือน
        'If Integer.Parse(_PayTerm) Mod 2 = 0 Then
        '    _PayTermCals = Microsoft.VisualBasic.Right("0" & (Integer.Parse(_PayTerm) - 1), 2)
        'End If


        _Cmd = "  SELECT FTPayYear ,FNMonth "
        _Cmd &= vbCrLf & " , SUM(FNTotalIncome) as FNTotalIncome "
        _Cmd &= vbCrLf & " , (Right( Convert(varchar(30),Convert(numeric(18,0),Floor((ISNULL(SUM(FNTimePayMin),0) - (ISNULL(SUM(FNTimePayMin),0) % 480) )/ 480.00))),2) "
        _Cmd &= vbCrLf & "    +':'+  Right('00' + Convert(varchar(30),Convert(numeric(18,0),Floor(((ISNULL(SUM(FNTimePayMin),0)) % 480.00) / 60.00))),2) "
        _Cmd &= vbCrLf & "    +':'+  Right('00' + Convert(varchar(30),Convert(numeric(18,0),(((ISNULL(SUM(FNTimePayMin),0)) % 480.00) % 60.00))),2))  AS FTWorkActual"
        _Cmd &= vbCrLf & " , CASE WHEN (SUM(FNTimePayMin)/ 480) >= 21 then 'Y' else '' end as FTCalculateFlag "
        _Cmd &= vbCrLf & "  FROM "
        _Cmd &= vbCrLf & "  ( "

        _Cmd &= vbCrLf & "  SELECT TOP 24  X.FTPayYear, X.FTPayTerm  ,FNAttandanceAmt  , FNSalary "
        _Cmd &= vbCrLf & " , FNTotalIncome - (ISNULL(F4.FCTotalFinAmt044,0) + ISNULL(F5.FCTotalFinAmt045,0) + ISNULL(F6.FCTotalFinAmt046,0) + ISNULL(F7.FCTotalFinAmt047,0) + ISNULL(FNVacationRetAmt,0) + ISNULL(FNParturitionLeaveBaht,0)) AS FNTotalIncome "
        _Cmd &= vbCrLf & " ,FNMonth,   ISNULL(FNParturitionLeaveBaht,0) as FNParturitionLeaveBaht "
        _Cmd &= vbCrLf & " ,((ISNULL(FNHoliday,0) * 480)  + (ISNULL(FNTotalWKNMin,0)) + (ISNULL(FNTotalLeavePayMin,0))) as FNTimePayMin "
        _Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll AS X WITH(NOLOCK)"
        _Cmd &= vbCrLf & "Left OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT AS D WITH(NOLOCK) ON X.FNHSysEmpTypeId = D.FNHSysEmpTypeId"
        _Cmd &= vbCrLf & " And X.FTPayYear = D.FTPayYear And X.FTPayTerm = D.FTPayTerm"
        _Cmd &= vbCrLf & "  OUTER APPLY ( SELECT top 1 FCTotalFinAmt as FCTotalFinAmt044  FROM THRTPayRollFin F044 WHERE F044.FTPayYear=X.FTPayYear AND F044.FTPayTerm=X.FTPayTerm AND F044.FTFinCode ='044' AND  F044.FNHSysEmpID =X.FNHSysEmpID) F4  "
        _Cmd &= vbCrLf & "  OUTER APPLY ( SELECT top 1 FCTotalFinAmt as FCTotalFinAmt045  FROM THRTPayRollFin F045 WHERE F045.FTPayYear=X.FTPayYear AND F045.FTPayTerm=X.FTPayTerm AND F045.FTFinCode ='045' AND  F045.FNHSysEmpID =X.FNHSysEmpID) F5 "
        _Cmd &= vbCrLf & " OUTER APPLY ( SELECT top 1 FCTotalFinAmt as FCTotalFinAmt046  FROM THRTPayRollFin F046 WHERE F046.FTPayYear=X.FTPayYear AND F046.FTPayTerm=X.FTPayTerm AND F046.FTFinCode ='046' AND  F046.FNHSysEmpID =X.FNHSysEmpID) F6 "
        _Cmd &= vbCrLf & " OUTER APPLY ( SELECT top 1 FCTotalFinAmt as FCTotalFinAmt047  FROM THRTPayRollFin F047 WHERE F047.FTPayYear=X.FTPayYear AND F047.FTPayTerm=X.FTPayTerm AND F047.FTFinCode ='047' AND  F047.FNHSysEmpID =X.FNHSysEmpID) F7 "

        _Cmd &= vbCrLf & " WHERE X.FNHSysEmpID=" & _EmpSysId & ""
        _Cmd &= vbCrLf & " AND X.FTPayYear + X.FTPayTerm <'" & HI.UL.ULF.rpQuoted(_PayYear & _PayTermCals) & "' "


        _Cmd &= vbCrLf & " AND D.FTPayYear  + RIGHT('0'+ convert(varchar(2),D.FNMonth) ,2) not in    (  "

        _Cmd &= vbCrLf & "  Select  top 1    isnull(D.FTPayYear,'') +  RIGHT('0'+ convert(varchar(2),D.FNMonth) ,2)  as FTPayYear "
        _Cmd &= vbCrLf & " from [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee E "
        _Cmd &= vbCrLf & "  INNER  JOIN [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT AS D WITH(NOLOCK) ON E.FNHSysEmpTypeId = D.FNHSysEmpTypeId "
        _Cmd &= vbCrLf & "  where E.FNHSysEmpID = " & _EmpSysId & ""
        _Cmd &= vbCrLf & " AND D.FTPayYear + D.FTPayTerm ='" & HI.UL.ULF.rpQuoted(_PayYear & _PayTermCals) & "' "
        _Cmd &= vbCrLf & "   )"

        _Cmd &= vbCrLf & " ORDER BY X.FTPayYear +  X.FTPayTerm DESC "

        _Cmd &= vbCrLf & " ) A "
        _Cmd &= vbCrLf & "  GROUP BY FTPayYear ,FNMonth "
        _Cmd &= vbCrLf & " ORDER BY FTPayYear desc ,FNMonth desc "
        _Cmd &= vbCrLf & " "



        _FNMoneyRetVacationSum = 0
        _FNMoneyRetVacationPerDay = 0
        _dt = HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR)
        If _dt.Rows.Count > 0 Then


            For Each R As DataRow In _dt.Rows
                If R!FTCalculateFlag.ToString = "Y" Then
                    _FNMoneyRetVacationSum = _FNMoneyRetVacationSum + Val(R!FNTotalIncome.ToString)
                    AvgMonth = AvgMonth + 1
                End If

            Next
            If (AvgMonth > 0) Then
                _FNMoneyRetVacationPerDay = Double.Parse(Format((((_FNMoneyRetVacationSum / (AvgMonth)) / 26)), "0.000"))
            End If

        Else


            Dim _WorkDay As Integer = workday
            If _WorkDay <= 0 Then

                _FNMoneyRetVacationPerDay = 0

            Else

                'Dim _ReVacationDay As Double = 0
                Dim _ReVacationPiad As Double = 0
                '_ReVacationDay = Double.Parse(Format(((_ReturnVacation / 26) * _WorkDay), "0.000"))

                _ReVacationPiad = Double.Parse(Format(((_FCSalary / 26)), "0.000"))
                _FNMoneyRetVacationPerDay = _ReVacationPiad

            End If
        End If

        _dt.Dispose()

        Dim _ReVacationPiadM As Double = 0

        _ReVacationPiadM = Double.Parse(Format(((_FCSalary / 26)), "0.000")) 'นาง hr cd ขอเปลี่ยนจากวันทำงานประจำงวด เป็น 26  20200218

        _FNMoneyRetVacationPerDay = IIf(_FNMoneyRetVacationPerDay > _ReVacationPiadM, _FNMoneyRetVacationPerDay, _ReVacationPiadM)

        Return _FNMoneyRetVacationPerDay

    End Function


    Public Shared Function CheckPaidPayroll(FNHSysEmpID As Integer) As Boolean
        Dim _Qry As String = ""
        _Qry = "SELECT TOP 1 P.FNHSysEmpID"
        _Qry &= vbCrLf & " FROM   [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll AS P WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayHD AS PD WITH (NOLOCK) "
        _Qry &= vbCrLf & "ON P.FNHSysEmpTypeId = PD.FNHSysEmpTypeId "
        _Qry &= vbCrLf & " 	AND P.FTPayYear+P.FTPayTerm  < PD.FTPayYear+PD.FTPayTerm"
        _Qry &= vbCrLf & " WHERE P.FNHSysEmpID=" & Val(FNHSysEmpID) & ""
        Return (HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") <> "")
    End Function

    Public Shared Function CalculateWageDaily(ByVal _User As String, ByVal _FTEmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, Optional ByVal _WorkDayPerMonth As Integer = 0) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim _Qry As String
        Dim _dttran As DataTable
        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FCOtherAdd As Double
        Dim _FCOtherDeduct As Double
        Dim _FTShift As String
        Dim _FNTime, _FNNotRegis As Double
        Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
        Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
        Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
        Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double
        Dim _FNLeavePay, _FNLeaveNotPay As Double, _FNTimeMin, _FNOT1Min As Double
        Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
        Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
        Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
        Dim _dtot As DataTable
        Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double

        Dim _FTStartCalculateDate As String, _FTEndCalculateDate As String
        Dim _FNEmpBaht, _FNEmpBahtOT1 As Double, _FNEmpBahtOT15 As Double, _FNEmpBahtOT2 As Double, _FNEmpBahtOT3 As Double, _FNEmpBahtOT4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
        Dim _SocialRate As Double
        Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
        Dim _TotalHoliDay As Integer
        Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String
        Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double
        Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
        Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
        Dim _FTSlary, _FTDivCode, _FTPos As String
        Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
        Dim _Dtemp As DataTable
        Dim _FCAdd, _FCDeduct As Double

        Dim _dtLeave As DataTable
        Dim _LeaveCode As String = ""
        Dim _dtAddOtherAmtshift As DataTable

        Dim _ShiftAmt As Double = 0
        Dim _ShiftOTAmt As Double = 0
        Dim _ShiftValue As Double = 0
        Dim _ShiftOTValue As Double = 0

        Dim _ContributedFundBeginPay As Boolean = False
        Dim _DTHoliday As DataTable
        Dim _ShiftAdv As Double = 0
        Dim _AmtPlus As Double = 0
        Dim _GAmtPlus As Double = 0
        Dim FTHldType As Integer = 0
        Dim _SPDateType As Integer = 0
        Dim _ReturnVacationAmount As Double = 0

        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        Dim _FTStatePayHoliday As String = ""

        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday
        '------------------ GetConfig Holiday ----------------------------------

        _FTStartCalculateDate = _StartDate
        _FTEndCalculateDate = _EndDate
        _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
        _FNSlaryPerMonth = 0
        _FNSlaryPerDay = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0
        _FTEmpState = "" : _FNEmpBaht = 0 : _FNEmpBahtOT1 = 0
        _FNEmpBahtOT15 = 0 : _FNEmpBahtOT2 = 0 : _FNEmpBahtOT3 = 0
        _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
        _FCPayVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0
        _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0
        _SocialMinIncome = 0 : _SocialMaxIncome = 0
        _Complete = 0 : _Err = 0 : _FCSalary = -99

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, M.FNEmpStatus AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"
        _Qry &= vbCrLf & " ,M.FNHSysDeptId AS FTDeptCode "
        _Qry &= vbCrLf & "  ,M.FNHSysDivisonId AS FTDivCode, M.FNHSysSectId AS FTSectCode,  M.FNHSysUnitSectId AS FTUnitSecCode"
        _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
        _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
        _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
        _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
        _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
        _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
        _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
        _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
        _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
        _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide"
        _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday "
        _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_FTEmpCode) & " ) "

        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each R As DataRow In _Dtemp.Rows

            _FTStatePayHoliday = R!FTStatePayHoliday.ToString
            _FTSlary = R!FTSalary.ToString

            If _WorkDayPerMonth > 0 Then
                _FTSlary = _FTSlary / _WorkDayPerMonth
            End If

            _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString
            _FTDeptCode = R!FTDeptCode.ToString : _FTDivCode = R!FTDivCode.ToString
            _FTSectCode = R!FTSectCode.ToString
            _FTUnitCode = R!FTUnitSecCode.ToString : _FTPos = R!FTPositCode.ToString
            _FTEmpState = R!FTCalType.ToString

            _FCSalary = -99
            _FTSlary = (_FTSlary)

            If IsNumeric(_FTSlary) Then

                _MSlary = _FTSlary
                _FCSalary = CDbl(_FTSlary)
                _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
                _AmtPlus = 0

                _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                For Each R3 As DataRow In _dtot.Rows

                    Select Case R3!FTCfgOTCode.ToString.ToUpper
                        Case "01"
                            _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "02"
                            _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "03"
                            _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "04"
                            _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "05"
                            _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                    End Select

                Next

                _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
                _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
                _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
                _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet"
                _Qry &= vbCrLf & "  WHERE        (FTFinCode = N'001') OR  (FTFinCode = N'007') "
                _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _FCOtherAdd = 0 : _FCOtherDeduct = 0

                _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
                _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= 480 THEN 480   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= 480 THEN 480   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= 480 THEN 480 ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
                _Qry &= vbCrLf & " , FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_FTEmpCode) & " )"

                _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

                _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


                _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	"
                _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNLateNormalMin,0) )- (ISNULL(FNLateNormalCut,0) + ISNULL(FNAbsentCut,0) )     AS FNTime"
                _Qry &= vbCrLf & " , ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                _Qry &= vbCrLf & " , ISNULL(FNOT1_5,0) AS FNOT1_5"
                _Qry &= vbCrLf & " , ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                _Qry &= vbCrLf & " , ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 )   AS FNLateNormalCut"
                _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                _Qry &= vbCrLf & " , (CASE WHEN ISNULL(FNAbsentSP,0) = ISNULL(FNAbsent,0) THEN 0 ELSE  ISNULL(FNAbsent,0)  END ) AS FNAbsent_Cut "
                _Qry &= vbCrLf & " , ISNULL(FNCutAbsent,0) AS FNAbsent "
                _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNLateNormalMin,0) )- (ISNULL(FNLateNormalCut,0) + ISNULL(FNAbsentCut,0) )   AS FNTimeMin"
                _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0) As FNTimeMinOrg"
                _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
                _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_FTEmpCode) & " )"
                _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


                _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
                _TotalHoliDay = 0

                Dim _oHoliday As Integer = 0

                _TotalWorkDay = 0

                _FCAdd = 0 : _FCDeduct = 0


                If _FDDateStart > _FTStartCalculateDate Then _FTStartCalculateDate = _FDDateStart

                Do While _FTStartCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTStartCalculateDate <= _FDDateEnd)

                    _ShiftAmt = 0
                    _ShiftValue = 0
                    _ShiftOTValue = 0
                    _ShiftOTAmt = 0
                    _oHoliday = 0
                    FTHldType = 0
                    Dim _NewSlary As String

                    _Qry = "  SELECT      TOP 1   FNCurrentSlary  AS AMT"
                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary"
                    _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "') "
                    _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_FTEmpCode) & ")"
                    _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    _FCSalary = _MSlary
                    If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    _Holiday = ""

                    For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                        _Holiday = "H"
                        FTHldType = Val(IR!FTHldType.ToString)
                        Exit For
                    Next

                    _FTShift = ""

                    _FNTime = 0
                    _FNNotRegis = 0
                    _FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
                    _FNOT3 = 0 : _FNOT4 = 0
                    _FNLateNormalMin = 0 : _FNLateNormalCut = 0
                    _FNLateOtMin = 0 : _FNLateOtCut = 0
                    _FNLateMorning = 0 : _FNLateAfternoon = 0
                    _LateCutAbsent = 0 : _FNAbsent = 0
                    _FNTimeMin = 0 : _FNOT1Min = 0

                    _FNOT1_5Min = 0 : _FNOT2Min = 0
                    _FNOT3Min = 0 : _FNOT4Min = 0
                    _FNLateMMin = 0 : _FNLateAfMin = 0
                    _FNRetireMMin = 0 : _FNRetireAfMin = 0
                    _FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
                    _FNRetireOtMin = 0 : _FNRetireOtMin = 0
                    _FNRetireOtCut = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _LeaveCode = ""

                    Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                    Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                    For Each R2 In _R

                        _FTShift = R2!FTShift.ToString
                        _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                        _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                        _FNNotRegis = Val(R2!FNNotRegis.ToString)
                        _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                        _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                        _FNOT1Min = Val(R2!FNOT1Min.ToString)
                        _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                        _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)


                        _InOT = R2!FTIn3.ToString
                        _OutOT = R2!FTOut3.ToString

                        _Over = R2!FTOverClock.ToString

                        If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))


                            _TotalWorkDay = _TotalWorkDay + 1

                            _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                            If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                _SPDateType = 0

                                _Holiday = ""

                                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                                    _Holiday = "H"
                                    Exit For
                                Next

                                If _Holiday <> "" Then _SPDateType = 2

                                Dim _StateLeaveOther As Boolean = False
                                Dim _StateLeavacation As Boolean = False
                                Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                Dim _SumLeave As Integer = 0

                                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                                    _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                    If Val(sR!LeaveType) = 1 Then
                                        _StateLeavacation = True
                                    Else
                                        _StateLeaveOther = True
                                    End If

                                    If Val(sR!LeaveType) = 2 Then
                                        _StateFTStaMaternityleaveNotpay = True
                                    End If
                                Next

                                '--------------------------- ค่ากะ -------------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _ShiftAmt = _ShiftValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ -------------------------------------

                                '--------------------------- ค่ากะ OT ----------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _ShiftOTAmt = _ShiftOTValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ OT ----------------------------------

                            End If
                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                        End If

                    Next

                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                        _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.00"))

                        If _FTEmpState = "3" Then
                            _FNSlaryPerMonth = CDbl(Format(_FNSlaryPerMonth / 2, "0.00"))
                        End If

                        _FNSlaryPerDay = CDbl(Format((_FCSalary) / 30, "0.00"))
                    Else
                        _FNSlaryPerMonth = 0
                        _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                    End If

                    _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000000000"))
                    _FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000000000"))
                    _FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_FNSlaryPerDay) / 8, "0.00000000000")) / 60, "0.00000000000"))
                    _FNSlaryOTPerHour = CDbl(Format((_FNSlaryPerDay) / 8, "0.00"))

                    If _FTShift = "" Then
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If
                    Else
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If

                        If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _WorkDay = _WorkDay + 1
                        End If

                    End If

                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0

                    For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                        _LeaveCode = sR!LFTLeaveCode.ToString

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                        Else
                            _FNLeavePay = Val(sR!FNTotalPayMinute.ToString)
                        End If
                    Next


                    _FNEmpBaht = CDbl(Format((_FNTimeMin) * _FNSlaryPerMin, "0.00"))


                    _FNEmpBahtOT1 = CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000000"))


                    If FTHldType = 1 And _FNOT3Min > 0 Then
                        _GAmtPlus = _GAmtPlus + _AmtPlus
                    End If

                    _FNEmpBahtOT15 = CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.00"))
                    _FNEmpBahtOT2 = CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.00"))
                    _FNEmpBahtOT3 = CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.00"))
                    _FNEmpBahtOT4 = CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.00"))

                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.00"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.00"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.00"))

                    _LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.00"))
                    Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _FNSlaryPerMin, "0.00"))
                    _Lapaid = _Lapaid + _TmpLapaidAmt

                    If _LeaveCode <> "" And _FNLeaveVacation > 0 Then
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    Else
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    End If

                    If _FTStatePayHoliday <> "1" Then '--------- ไม่ได้ค่าจ้างวันหยุด---------------
                    Else


                        If _FNLeaveNotPay <= 0 Then
                            If _TmpLapaidAmt <= 0 Then ' กรณีไม่มีลาจ่ายในวันนักขัต 
                                _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.00"))
                            Else ' กรณีมีลาจ่ายในวันนักขัต  ไม่ได้นักขัต ได้ลาจ่าย
                                _TotalHoliDay = _TotalHoliDay - _oHoliday
                            End If
                        Else ' กรณีมีลาไม่จ่ายในวันนักขัต  ไม่ได้นักขัต
                            _TotalHoliDay = _TotalHoliDay - _oHoliday
                        End If

                    End If

                    _Qry = "Select Top 1 FNHSysEmpID, FTDateTrans "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily AS T WITH(NOLOCK)"
                    _Qry &= vbCrLf & " WHERE  FNHSysEmpID=" & Val(_FTEmpCode) & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'  "

                    If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") <> "" Then

                        _Qry = "  UPDATE  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily "
                        _Qry &= vbCrLf & " SET FNAmtNormal=" & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) & ""
                        _Qry &= vbCrLf & ", FNAmtOT=" & (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & " "
                        _Qry &= vbCrLf & ", FNNetAmt=" & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) + (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & " "
                        _Qry &= vbCrLf & ", FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "' "
                        _Qry &= vbCrLf & ", FTUpdDate=" & HI.UL.ULDate.FormatDateDB & " "
                        _Qry &= vbCrLf & ", FTUpdTime=" & HI.UL.ULDate.FormatTimeDB & " "
                        _Qry &= vbCrLf & " WHERE  FNHSysEmpID=" & Val(_FTEmpCode) & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'  "

                    Else

                        _Qry = "  INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily "
                        _Qry &= vbCrLf & " (FTInsUser, FTInsDate, FTInsTime,  FNHSysEmpID, FTDateTrans, FNAmtNormal, FNAmtOT, FNNetAmt, FNProNormal, FNProOT,FNProOther, FNNetProAmt) "
                        _Qry &= vbCrLf & " SELECT '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                        _Qry &= vbCrLf & " ," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ""
                        _Qry &= vbCrLf & " ," & Val(_FTEmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'"
                        _Qry &= vbCrLf & " ," & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) & ""
                        _Qry &= vbCrLf & " ," & (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & ""
                        _Qry &= vbCrLf & " ," & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) + (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & ""
                        _Qry &= vbCrLf & " ,0,0,0,0"

                    End If

                    HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR)

                    _FTStartCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTStartCalculateDate, 1))

                Loop

            End If

        Next

        Return True

    End Function


    Public Shared Function CalculateWageDaily_CD(ByVal _User As String, ByVal _FTEmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, Optional ByVal _WorkDayPerMonth As Integer = 0) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim _Qry As String
        Dim _dttran As DataTable
        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FCOtherAdd As Double
        Dim _FCOtherDeduct As Double
        Dim _FTShift As String
        Dim _FNTime, _FNNotRegis As Double
        Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
        Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
        Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
        Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double
        Dim _FNLeavePay, _FNLeaveNotPay As Double, _FNTimeMin, _FNOT1Min As Double
        Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
        Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
        Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
        Dim _dtot As DataTable
        Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double

        Dim _FTStartCalculateDate As String, _FTEndCalculateDate As String
        Dim _FNEmpBaht, _FNEmpBahtOT1 As Double, _FNEmpBahtOT15 As Double, _FNEmpBahtOT2 As Double, _FNEmpBahtOT3 As Double, _FNEmpBahtOT4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
        Dim _SocialRate As Double
        Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
        Dim _TotalHoliDay As Integer
        Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String
        Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double
        Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
        Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
        Dim _FTSlary, _FTDivCode, _FTPos As String
        Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
        Dim _Dtemp As DataTable
        Dim _FCAdd, _FCDeduct As Double

        Dim _dtLeave As DataTable
        Dim _LeaveCode As String = ""
        Dim _dtAddOtherAmtshift As DataTable

        Dim _ShiftAmt As Double = 0
        Dim _ShiftOTAmt As Double = 0
        Dim _ShiftValue As Double = 0
        Dim _ShiftOTValue As Double = 0

        Dim _ContributedFundBeginPay As Boolean = False
        Dim _DTHoliday As DataTable
        Dim _ShiftAdv As Double = 0
        Dim _AmtPlus As Double = 0
        Dim _GAmtPlus As Double = 0
        Dim FTHldType As Integer = 0
        Dim _SPDateType As Integer = 0
        Dim _ReturnVacationAmount As Double = 0

        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        Dim _FTStatePayHoliday As String = ""


        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday
        '------------------ GetConfig Holiday ----------------------------------

        _FTStartCalculateDate = _StartDate
        _FTEndCalculateDate = _EndDate
        _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
        _FNSlaryPerMonth = 0
        _FNSlaryPerDay = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0
        _FTEmpState = "" : _FNEmpBaht = 0 : _FNEmpBahtOT1 = 0
        _FNEmpBahtOT15 = 0 : _FNEmpBahtOT2 = 0 : _FNEmpBahtOT3 = 0
        _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
        _FCPayVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0
        _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0
        _SocialMinIncome = 0 : _SocialMaxIncome = 0
        _Complete = 0 : _Err = 0 : _FCSalary = -99

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, M.FNEmpStatus AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"
        _Qry &= vbCrLf & " ,M.FNHSysDeptId AS FTDeptCode "
        _Qry &= vbCrLf & "  ,M.FNHSysDivisonId AS FTDivCode, M.FNHSysSectId AS FTSectCode,  M.FNHSysUnitSectId AS FTUnitSecCode"
        _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
        _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
        _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
        _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
        _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
        _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
        _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
        _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
        _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
        _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide"
        _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday "
        _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_FTEmpCode) & " ) "

        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each R As DataRow In _Dtemp.Rows

            _FTStatePayHoliday = R!FTStatePayHoliday.ToString

            _FTSlary = R!FTSalary.ToString
            If _WorkDayPerMonth > 0 Then
                _FTSlary = _FTSlary / _WorkDayPerMonth
            End If

            _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString
            _FTDeptCode = R!FTDeptCode.ToString : _FTDivCode = R!FTDivCode.ToString
            _FTSectCode = R!FTSectCode.ToString
            _FTUnitCode = R!FTUnitSecCode.ToString : _FTPos = R!FTPositCode.ToString
            _FTEmpState = R!FTCalType.ToString

            _FCSalary = -99
            _FTSlary = (_FTSlary)

            If IsNumeric(_FTSlary) Then
                _MSlary = _FTSlary
                _FCSalary = CDbl(_FTSlary)
                _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
                _AmtPlus = 0

                _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                For Each R3 As DataRow In _dtot.Rows
                    Select Case R3!FTCfgOTCode.ToString.ToUpper
                        Case "01"
                            _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "02"
                            _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "03"
                            _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "04"
                            _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "05"
                            _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                    End Select

                Next



                _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
                _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
                _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
                _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet"
                _Qry &= vbCrLf & "  WHERE        (FTFinCode = N'001') OR  (FTFinCode = N'007') "
                _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _FCOtherAdd = 0 : _FCOtherDeduct = 0

                _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
                _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= 480 THEN 480   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= 480 THEN 480   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= 480 THEN 480 ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
                _Qry &= vbCrLf & " , FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_FTEmpCode) & " )"


                _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

                _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


                _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	"
                _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNLateNormalMin,0) )- (ISNULL(FNLateNormalCut,0) + ISNULL(FNAbsentCut,0) )     AS FNTime"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 )   AS FNLateNormalCut"
                _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                _Qry &= vbCrLf & " 	, (CASE WHEN ISNULL(FNAbsentSP,0) = ISNULL(FNAbsent,0) THEN 0 ELSE  ISNULL(FNAbsent,0)  END ) AS FNAbsent_Cut "
                _Qry &= vbCrLf & " 	, ISNULL(FNCutAbsent,0) AS FNAbsent "
                _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNLateNormalMin,0) )- (ISNULL(FNLateNormalCut,0) + ISNULL(FNAbsentCut,0) )   AS FNTimeMin"
                _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0) As FNTimeMinOrg"
                _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
                _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_FTEmpCode) & " )"
                _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


                _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
                _TotalHoliDay = 0

                Dim _oHoliday As Integer = 0

                _TotalWorkDay = 0

                _FCAdd = 0 : _FCDeduct = 0


                If _FDDateStart > _FTStartCalculateDate Then _FTStartCalculateDate = _FDDateStart

                Do While _FTStartCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTStartCalculateDate <= _FDDateEnd)

                    _ShiftAmt = 0
                    _ShiftValue = 0
                    _ShiftOTValue = 0
                    _ShiftOTAmt = 0
                    _oHoliday = 0
                    FTHldType = 0

                    Dim _NewSlary As String

                    _Qry = "  SELECT      TOP 1   FNCurrentSlary  AS AMT"
                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary"
                    _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "') "
                    _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_FTEmpCode) & ")"
                    _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    _FCSalary = _MSlary

                    If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    _Holiday = ""

                    For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                        _Holiday = "H"
                        FTHldType = Val(IR!FTHldType.ToString)
                        Exit For
                    Next

                    _FTShift = ""

                    _FNTime = 0
                    _FNNotRegis = 0
                    _FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
                    _FNOT3 = 0 : _FNOT4 = 0
                    _FNLateNormalMin = 0 : _FNLateNormalCut = 0
                    _FNLateOtMin = 0 : _FNLateOtCut = 0
                    _FNLateMorning = 0 : _FNLateAfternoon = 0
                    _LateCutAbsent = 0 : _FNAbsent = 0
                    _FNTimeMin = 0 : _FNOT1Min = 0

                    _FNOT1_5Min = 0 : _FNOT2Min = 0
                    _FNOT3Min = 0 : _FNOT4Min = 0
                    _FNLateMMin = 0 : _FNLateAfMin = 0
                    _FNRetireMMin = 0 : _FNRetireAfMin = 0
                    _FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
                    _FNRetireOtMin = 0 : _FNRetireOtMin = 0
                    _FNRetireOtCut = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _LeaveCode = ""

                    Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                    Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                    For Each R2 In _R

                        _FTShift = R2!FTShift.ToString
                        _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                        _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                        _FNNotRegis = Val(R2!FNNotRegis.ToString)
                        _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                        _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                        _FNOT1Min = Val(R2!FNOT1Min.ToString)
                        _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                        _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)

                        _InOT = R2!FTIn3.ToString
                        _OutOT = R2!FTOut3.ToString

                        _Over = R2!FTOverClock.ToString

                        If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))


                            _TotalWorkDay = _TotalWorkDay + 1

                            _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                            If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                _SPDateType = 0

                                _Holiday = ""

                                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                                    _Holiday = "H"
                                    Exit For
                                Next

                                If _Holiday <> "" Then _SPDateType = 2

                                Dim _StateLeaveOther As Boolean = False
                                Dim _StateLeavacation As Boolean = False
                                Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                Dim _SumLeave As Integer = 0

                                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                                    _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                    If Val(sR!LeaveType) = 1 Then
                                        _StateLeavacation = True
                                    Else
                                        _StateLeaveOther = True
                                    End If

                                    If Val(sR!LeaveType) = 2 Then
                                        _StateFTStaMaternityleaveNotpay = True
                                    End If
                                Next

                                '--------------------------- ค่ากะ -------------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _ShiftAmt = _ShiftValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ -------------------------------------

                                '--------------------------- ค่ากะ OT ----------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _ShiftOTAmt = _ShiftOTValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ OT ----------------------------------

                            End If
                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                        End If

                    Next

                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                        _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.00"))

                        If _FTEmpState = "3" Then
                            _FNSlaryPerMonth = CDbl(Format(_FNSlaryPerMonth / 2, "0.00"))
                        End If

                        _FNSlaryPerDay = CDbl(Format((_FCSalary) / 30, "0.00000000000"))
                    Else
                        _FNSlaryPerMonth = 0
                        _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00000000000"))
                    End If

                    _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000000000"))
                    _FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000000000"))
                    _FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_FNSlaryPerDay) / 8, "0.00000000000")) / 60, "0.00000000000"))
                    _FNSlaryOTPerHour = CDbl(Format((_FNSlaryPerDay) / 8, "0.00"))

                    If _FTShift = "" Then
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If
                    Else
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If

                        If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _WorkDay = _WorkDay + 1
                        End If

                    End If

                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0

                    For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                        _LeaveCode = sR!LFTLeaveCode.ToString

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                        Else
                            _FNLeavePay = Val(sR!FNTotalPayMinute.ToString)
                        End If
                    Next


                    _FNEmpBaht = CDbl(Format((_FNTimeMin) * _FNSlaryPerMin, "0.0000"))


                    _FNEmpBahtOT1 = CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000000"))


                    If FTHldType = 1 And _FNOT3Min > 0 Then
                        _GAmtPlus = _GAmtPlus + _AmtPlus
                    End If

                    _FNEmpBahtOT15 = CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.00"))
                    _FNEmpBahtOT2 = CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.00"))
                    _FNEmpBahtOT3 = CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.00"))
                    _FNEmpBahtOT4 = CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.00"))

                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.00"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.00"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.00"))

                    _LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.00"))
                    Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _FNSlaryPerMin, "0.00"))
                    _Lapaid = _Lapaid + _TmpLapaidAmt

                    If _LeaveCode <> "" And _FNLeaveVacation > 0 Then
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    Else
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    End If

                    If _FTStatePayHoliday <> "1" Then '--------- ไม่ได้ค่าจ้างวันหยุด---------------
                    Else


                        If _FNLeaveNotPay <= 0 Then
                            If _TmpLapaidAmt <= 0 Then ' กรณีไม่มีลาจ่ายในวันนักขัต 
                                _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.00"))
                            Else ' กรณีมีลาจ่ายในวันนักขัต  ไม่ได้นักขัต ได้ลาจ่าย
                                _TotalHoliDay = _TotalHoliDay - _oHoliday
                            End If
                        Else ' กรณีมีลาไม่จ่ายในวันนักขัต  ไม่ได้นักขัต
                            _TotalHoliDay = _TotalHoliDay - _oHoliday
                        End If

                    End If

                    _Qry = "Select Top 1 FNHSysEmpID, FTDateTrans "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily AS T WITH(NOLOCK)"
                    _Qry &= vbCrLf & " WHERE  FNHSysEmpID=" & Val(_FTEmpCode) & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'  "

                    If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") <> "" Then

                        _Qry = "  UPDATE  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily "
                        _Qry &= vbCrLf & " SET FNAmtNormal=" & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) & ""
                        _Qry &= vbCrLf & ", FNAmtOT=" & (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & " "
                        _Qry &= vbCrLf & ", FNNetAmt=" & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) + (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & " "
                        _Qry &= vbCrLf & ", FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "' "
                        _Qry &= vbCrLf & ", FTUpdDate=" & HI.UL.ULDate.FormatDateDB & " "
                        _Qry &= vbCrLf & ", FTUpdTime=" & HI.UL.ULDate.FormatTimeDB & " "
                        _Qry &= vbCrLf & " WHERE  FNHSysEmpID=" & Val(_FTEmpCode) & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'  "

                    Else

                        _Qry = "  INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily "
                        _Qry &= vbCrLf & " (FTInsUser, FTInsDate, FTInsTime,  FNHSysEmpID, FTDateTrans, FNAmtNormal, FNAmtOT, FNNetAmt, FNProNormal, FNProOT,FNProOther, FNNetProAmt) "
                        _Qry &= vbCrLf & " SELECT '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                        _Qry &= vbCrLf & " ," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ""
                        _Qry &= vbCrLf & " ," & Val(_FTEmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'"
                        _Qry &= vbCrLf & " ," & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) & ""
                        _Qry &= vbCrLf & " ," & (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & ""
                        _Qry &= vbCrLf & " ," & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) + (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & ""
                        _Qry &= vbCrLf & " ,0,0,0,0"

                    End If

                    HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR)

                    _FTStartCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTStartCalculateDate, 1))

                Loop

            End If

        Next

        Return True

    End Function


    Public Shared Function CalculateWageDaily_CVN(ByVal _User As String, ByVal _FTEmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, Optional ByVal _WorkDayPerMonth As Integer = 0) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim _Qry As String
        Dim _dttran As DataTable
        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim FTEmpCode As String, _FNHSysEmpTypeId As String, _FTEmpTypeCode As String, FTEmpName As String
        Dim _FTDeptCode As String, _FTDivCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FNHSysDeptId As String, _FNHSysDivisonId As String, _FNHSysSectId As String, _FNHSysUnitSectId As String
        Dim _FCOtherAdd As Double
        Dim _FCOtherDeduct As Double
        Dim _FTShift As String
        Dim _FNTime, _FNNotRegis As Double
        Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
        Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
        Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
        Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double
        Dim _FNLeavePay, _FNLeaveNotPay As Double, _FNTimeMin, _FNOT1Min As Double
        Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
        Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
        Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
        Dim _dtot As DataTable
        Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double

        Dim _FTStartCalculateDate As String, _FTEndCalculateDate As String
        Dim _FNEmpBaht, _FNEmpBahtOT1 As Double, _FNEmpBahtOT15 As Double, _FNEmpBahtOT2 As Double, _FNEmpBahtOT3 As Double, _FNEmpBahtOT4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
        Dim _SocialRate As Double
        Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
        Dim _TotalHoliDay As Integer
        Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String
        Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double
        Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
        Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
        Dim _FTSlary, _FTPos As String
        Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
        Dim _Dtemp As DataTable
        Dim _FCAdd, _FCDeduct As Double
        Dim _FNJobCost As String = 0
        Dim _FNAction As Integer = 0

        Dim _dtLeave As DataTable
        Dim _LeaveCode As String = ""
        Dim _dtAddOtherAmtshift As DataTable

        Dim _ShiftAmt As Double = 0
        Dim _ShiftOTAmt As Double = 0
        Dim _ShiftValue As Double = 0
        Dim _ShiftOTValue As Double = 0

        Dim _ContributedFundBeginPay As Boolean = False
        Dim _DTHoliday As DataTable
        Dim _ShiftAdv As Double = 0
        Dim _AmtPlus As Double = 0
        Dim _GAmtPlus As Double = 0
        Dim FTHldType As Integer = 0
        Dim _SPDateType As Integer = 0
        Dim _ReturnVacationAmount As Double = 0

        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        Dim _FTStatePayHoliday As String = ""


        Dim _FNHSysCmpID As String = 0


        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday
        '------------------ GetConfig Holiday ----------------------------------

        _FTStartCalculateDate = _StartDate
        _FTEndCalculateDate = _EndDate
        _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
        _FNSlaryPerMonth = 0
        _FNSlaryPerDay = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0
        _FTEmpState = "" : _FNEmpBaht = 0 : _FNEmpBahtOT1 = 0
        _FNEmpBahtOT15 = 0 : _FNEmpBahtOT2 = 0 : _FNEmpBahtOT3 = 0
        _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
        _FCPayVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0
        _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0
        _SocialMinIncome = 0 : _SocialMaxIncome = 0
        _Complete = 0 : _Err = 0 : _FCSalary = -99

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, M.FNEmpStatus AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"


        _Qry &= vbCrLf & " ,ISNULL(ET.FTEmpTypeCode,'') AS FTEmpTypeCode  , M.FNHSysDeptId ,ISNULL(D.FTDeptCode,'') AS FTDeptCode , M.FNHSysDivisonId "
        _Qry &= vbCrLf & "  ,ISNULL(Di.FTDivisonCode,'') AS FTDivisonCode  , M.FNHSysSectId ,ISNULL(S.FTSectCode,'') AS FTSectCode  , M.FNHSysUnitSectId "
        _Qry &= vbCrLf & " ,ISNULL(US.FTUnitSectCode,'') AS FTUnitSectCode "


        _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
        _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
        _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
        _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
        _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
        _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
        _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
        _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
        _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
        _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide"
        _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday , FNJobCost, M.FNHSysCmpID "
        _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"

        _Qry &= vbCrLf & "  LEFT OUTER JOIN [HITECH_MASTER].dbo.TCNMPosition As P With (NOLOCK) On M.FNHSysPositId = P.FNHSysPositId LEFT OUTER JOIN "
        _Qry &= vbCrLf & " [HITECH_MASTER].dbo.TCNMUnitSect As US With (NOLOCK) On M.FNHSysUnitSectId = US.FNHSysUnitSectId LEFT OUTER JOIN "
        _Qry &= vbCrLf & " [HITECH_MASTER].dbo.TCNMSect As S With (NOLOCK) On M.FNHSysSectId = S.FNHSysSectId LEFT OUTER JOIN "
        _Qry &= vbCrLf & " [HITECH_MASTER].dbo.TCNMDivision As Di With (NOLOCK) On M.FNHSysDivisonId = Di.FNHSysDivisonId LEFT OUTER JOIN "
        _Qry &= vbCrLf & " [HITECH_MASTER].dbo.TCNMDepartment As D With (NOLOCK) On M.FNHSysDeptId = D.FNHSysDeptId "


        _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_FTEmpCode) & " ) "

        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each R As DataRow In _Dtemp.Rows

            _FNHSysCmpID = R!FNHSysCmpID.ToString

            _FNJobCost = R!FNJobCost.ToString
            _FTStatePayHoliday = R!FTStatePayHoliday.ToString
            _FTSlary = R!FTSalary.ToString

            If _WorkDayPerMonth > 0 Then
                _FTSlary = _FTSlary / _WorkDayPerMonth
            End If

            _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString

            _FNHSysDeptId = R!FNHSysDeptId.ToString
            _FTDeptCode = R!FTDeptCode.ToString

            _FNHSysDivisonId = R!FNHSysDivisonId.ToString
            _FTDivCode = R!FTDivisonCode.ToString

            _FNHSysSectId = R!FNHSysSectId.ToString
            _FTSectCode = R!FTSectCode.ToString

            _FNHSysUnitSectId = R!FNHSysUnitSectId.ToString
            ' _FTUnitCode = R!FTUnitSecCode.ToString

            _FTPos = R!FTPositCode.ToString

            _FTEmpState = R!FTCalType.ToString

            _FCSalary = -99
            _FTSlary = (_FTSlary)

            If IsNumeric(_FTSlary) Then

                _MSlary = _FTSlary
                _FCSalary = CDbl(_FTSlary)
                _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
                _AmtPlus = 0

                _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                For Each R3 As DataRow In _dtot.Rows

                    Select Case R3!FTCfgOTCode.ToString.ToUpper
                        Case "01"
                            _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "02"
                            _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "03"
                            _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "04"
                            _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "05"
                            _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                    End Select

                Next

                _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
                _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
                _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
                _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet"
                _Qry &= vbCrLf & "  WHERE        (FTFinCode = N'001') OR  (FTFinCode = N'007') "
                _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _FCOtherAdd = 0 : _FCOtherDeduct = 0

                _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
                _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= 480 THEN 480   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= 480 THEN 480   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= 480 THEN 480 ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
                _Qry &= vbCrLf & " , FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_FTEmpCode) & " )"

                _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

                _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


                _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	"
                _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNLateNormalMin,0) )- (ISNULL(FNLateNormalCut,0) + ISNULL(FNAbsentCut,0) )     AS FNTime"
                _Qry &= vbCrLf & " , ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                _Qry &= vbCrLf & " , ISNULL(FNOT1_5,0) AS FNOT1_5"
                _Qry &= vbCrLf & " , ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                _Qry &= vbCrLf & " , ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 )   AS FNLateNormalCut"
                _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                _Qry &= vbCrLf & " , (CASE WHEN ISNULL(FNAbsentSP,0) = ISNULL(FNAbsent,0) THEN 0 ELSE  ISNULL(FNAbsent,0)  END ) AS FNAbsent_Cut "
                _Qry &= vbCrLf & " , ISNULL(FNCutAbsent,0) AS FNAbsent "
                _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNLateNormalMin,0) )- (ISNULL(FNLateNormalCut,0) + ISNULL(FNAbsentCut,0) )   AS FNTimeMin"
                _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0) As FNTimeMinOrg"
                _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
                _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_FTEmpCode) & " )"
                _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


                _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
                _TotalHoliDay = 0

                Dim _oHoliday As Integer = 0

                _TotalWorkDay = 0

                _FCAdd = 0 : _FCDeduct = 0


                If _FDDateStart > _FTStartCalculateDate Then _FTStartCalculateDate = _FDDateStart

                Do While _FTStartCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTStartCalculateDate <= _FDDateEnd)

                    '' Check Incentive Bonus 

                    _Qry = "Select Top 1 FNHSysEmpID, FTDateTrans "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll_Daily AS T WITH(NOLOCK)"
                    _Qry &= vbCrLf & " WHERE  FNHSysEmpID=" & Val(_FTEmpCode) & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'  "

                    If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") = "" Then

                        '_Qry = " EXEC [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.SP_CALCULATE_EMP_DAILY '" & FTUserLogIn & "'," & FNHSysCmpId & "," & UnisectId & ",'" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "','" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'," & 0 & "'," &
                        'HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR)


                        ''get employee type monthly 

                        _Qry = " EXEC [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.SP_CALCULATE_EMP_Monthly '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & _FNHSysCmpID & "," & _FNHSysUnitSectId & ",'" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "','" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'," & 0 & ""
                        HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR)

                        _FTStartCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTStartCalculateDate, 1))
                    Else




                        '_ShiftAmt = 0
                        '_ShiftValue = 0
                        '_ShiftOTValue = 0
                        '_ShiftOTAmt = 0
                        '_oHoliday = 0
                        'FTHldType = 0
                        'Dim _NewSlary As String

                        '_Qry = "  SELECT      TOP 1   FNCurrentSlary  AS AMT"
                        '_Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary"
                        '_Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "') "
                        '_Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_FTEmpCode) & ")"
                        '_Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                        '_NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                        '_FCSalary = _MSlary
                        'If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                        '_Holiday = ""

                        'For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                        '    _Holiday = "H"
                        '    FTHldType = Val(IR!FTHldType.ToString)
                        '    Exit For
                        'Next

                        '_FTShift = ""

                        '_FNTime = 0
                        '_FNNotRegis = 0
                        '_FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
                        '_FNOT3 = 0 : _FNOT4 = 0
                        '_FNLateNormalMin = 0 : _FNLateNormalCut = 0
                        '_FNLateOtMin = 0 : _FNLateOtCut = 0
                        '_FNLateMorning = 0 : _FNLateAfternoon = 0
                        '_LateCutAbsent = 0 : _FNAbsent = 0
                        '_FNTimeMin = 0 : _FNOT1Min = 0

                        '_FNOT1_5Min = 0 : _FNOT2Min = 0
                        '_FNOT3Min = 0 : _FNOT4Min = 0
                        '_FNLateMMin = 0 : _FNLateAfMin = 0
                        '_FNRetireMMin = 0 : _FNRetireAfMin = 0
                        '_FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
                        '_FNRetireOtMin = 0 : _FNRetireOtMin = 0
                        '_FNRetireOtCut = 0
                        '_FNLeavePay = 0 : _FNLeaveVacation = 0
                        '_FNLeaveNotPay = 0
                        '_LeaveCode = ""

                        'Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                        'Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                        'For Each R2 In _R

                        '    _FTShift = R2!FTShift.ToString
                        '    _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                        '    _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                        '    _FNNotRegis = Val(R2!FNNotRegis.ToString)
                        '    _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                        '    _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                        '    _FNOT1Min = Val(R2!FNOT1Min.ToString)
                        '    _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                        '    _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)


                        '    _InOT = R2!FTIn3.ToString
                        '    _OutOT = R2!FTOut3.ToString

                        '    _Over = R2!FTOverClock.ToString

                        '    If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                        '        _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))


                        '        _TotalWorkDay = _TotalWorkDay + 1

                        '        _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                        '        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                        '        If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                        '            _SPDateType = 0

                        '            _Holiday = ""

                        '            For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                        '                _Holiday = "H"
                        '                Exit For
                        '            Next

                        '            If _Holiday <> "" Then _SPDateType = 2

                        '            Dim _StateLeaveOther As Boolean = False
                        '            Dim _StateLeavacation As Boolean = False
                        '            Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                        '            Dim _SumLeave As Integer = 0

                        '            For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                        '                _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                        '                If Val(sR!LeaveType) = 1 Then
                        '                    _StateLeavacation = True
                        '                Else
                        '                    _StateLeaveOther = True
                        '                End If

                        '                If Val(sR!LeaveType) = 2 Then
                        '                    _StateFTStaMaternityleaveNotpay = True
                        '                End If
                        '            Next

                        '            '--------------------------- ค่ากะ -------------------------------------
                        '            For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
                        '                Dim _StatePass As Boolean = True

                        '                If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                        '                If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                        '                If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                        '                If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                        '                If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                        '                If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                        '                If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                        '                    _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                        '                End If

                        '                If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                        '                If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                        '                If RFin!FTOTTime.ToString <> "" And _StatePass Then
                        '                    Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                        '                    Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                        '                    If _STime.Length = _ETime.Length Then
                        '                        If IsDate(_STime) And IsDate(_ETime) Then
                        '                            If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                        '                                _StatePass = False
                        '                            End If
                        '                        Else
                        '                            _StatePass = False
                        '                        End If
                        '                    Else
                        '                        _StatePass = False
                        '                    End If

                        '                End If

                        '                If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                        '                    If Val(RFin!FNOTTimeM.ToString) > 0 Then

                        '                        If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                        '                            If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                        '                                _StatePass = False
                        '                            End If
                        '                        Else
                        '                            _StatePass = False
                        '                        End If

                        '                    End If
                        '                End If

                        '                If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                        '                If _StatePass Then
                        '                    _ShiftAmt = _ShiftValue
                        '                End If
                        '            Next
                        '            '--------------------------- ค่ากะ -------------------------------------

                        '            '--------------------------- ค่ากะ OT ----------------------------------
                        '            For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
                        '                Dim _StatePass As Boolean = True

                        '                If _OutOT <> "" Then
                        '                    Beep()
                        '                End If
                        '                If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                        '                If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                        '                If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                        '                If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                        '                If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                        '                If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                        '                If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                        '                    _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                        '                End If

                        '                If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                        '                If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                        '                If RFin!FTOTTime.ToString <> "" And _StatePass Then
                        '                    Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                        '                    Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                        '                    If _STime.Length = _ETime.Length Then
                        '                        If IsDate(_STime) And IsDate(_ETime) Then
                        '                            If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                        '                                _StatePass = False
                        '                            End If
                        '                        Else
                        '                            _StatePass = False
                        '                        End If
                        '                    Else
                        '                        _StatePass = False
                        '                    End If

                        '                End If

                        '                If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                        '                    If Val(RFin!FNOTTimeM.ToString) > 0 Then

                        '                        If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                        '                            If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                        '                                _StatePass = False
                        '                            End If
                        '                        Else
                        '                            _StatePass = False
                        '                        End If

                        '                    End If
                        '                End If


                        '                If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                        '                If _StatePass Then
                        '                    _ShiftOTAmt = _ShiftOTValue
                        '                End If
                        '            Next
                        '            '--------------------------- ค่ากะ OT ----------------------------------

                        '        End If
                        '        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                        '    End If

                        'Next

                        'If _FTEmpState = "2" Or _FTEmpState = "3" Then
                        '    _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.00"))

                        '    If _FTEmpState = "3" Then
                        '        _FNSlaryPerMonth = CDbl(Format(_FNSlaryPerMonth / 2, "0.00"))
                        '    End If

                        '    _FNSlaryPerDay = CDbl(Format((_FCSalary) / 30, "0.00"))
                        'Else
                        '    _FNSlaryPerMonth = 0
                        '    _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
                        'End If

                        '_FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000000000"))
                        '_FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000000000"))
                        '_FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_FNSlaryPerDay) / 8, "0.00000000000")) / 60, "0.00000000000"))
                        '_FNSlaryOTPerHour = CDbl(Format((_FNSlaryPerDay) / 8, "0.00"))

                        'If _FTShift = "" Then
                        '    If _Holiday <> "" Then
                        '        _oHoliday = 1
                        '        _TotalHoliDay = _TotalHoliDay + 1
                        '    End If
                        'Else
                        '    If _Holiday <> "" Then
                        '        _oHoliday = 1
                        '        _TotalHoliDay = _TotalHoliDay + 1
                        '    End If

                        '    If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                        '        _WorkDay = _WorkDay + 1
                        '    End If

                        'End If

                        '_FNLeavePay = 0 : _FNLeaveVacation = 0
                        '_FNLeaveNotPay = 0

                        'For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                        '    _LeaveCode = sR!LFTLeaveCode.ToString

                        '    _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

                        '    If Val(sR!LeaveType) = 1 Then
                        '        _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                        '    Else
                        '        _FNLeavePay = Val(sR!FNTotalPayMinute.ToString)
                        '    End If
                        'Next

                        '_FNEmpBaht = CDbl(Format((_FNTimeMin) * _FNSlaryPerMin, "0.00"))
                        '_FNEmpBahtOT1 = CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000000"))

                        'If FTHldType = 1 And _FNOT3Min > 0 Then
                        '    _GAmtPlus = _GAmtPlus + _AmtPlus
                        'End If

                        '_FNEmpBahtOT15 = CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.00"))
                        '_FNEmpBahtOT2 = CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.00"))
                        '_FNEmpBahtOT3 = CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.00"))
                        '_FNEmpBahtOT4 = CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.00"))

                        '_nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.00"))
                        '_LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.00"))
                        '_LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.00"))

                        '_LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.00"))
                        'Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _FNSlaryPerMin, "0.00"))
                        '_Lapaid = _Lapaid + _TmpLapaidAmt

                        'If _LeaveCode <> "" And _FNLeaveVacation > 0 Then
                        '    _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                        'Else
                        '    _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                        'End If

                        'If _FTStatePayHoliday <> "1" Then '--------- ไม่ได้ค่าจ้างวันหยุด---------------
                        'Else

                        '    If _FNLeaveNotPay <= 0 Then
                        '        If _TmpLapaidAmt <= 0 Then ' กรณีไม่มีลาจ่ายในวันนักขัต 
                        '            _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.00"))
                        '        Else ' กรณีมีลาจ่ายในวันนักขัต  ไม่ได้นักขัต ได้ลาจ่าย
                        '            _TotalHoliDay = _TotalHoliDay - _oHoliday
                        '        End If
                        '    Else ' กรณีมีลาไม่จ่ายในวันนักขัต  ไม่ได้นักขัต
                        '        _TotalHoliDay = _TotalHoliDay - _oHoliday
                        '    End If

                        'End If




                        '_Qry = "Select Top 1 FNHSysEmpID, FTDateTrans "
                        '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll_Daily AS T WITH(NOLOCK)"
                        '_Qry &= vbCrLf & " WHERE  FNHSysEmpID=" & Val(_FTEmpCode) & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'  "

                        'If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") <> "" Then

                        '    _Qry = "  UPDATE  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll_Daily "
                        '    _Qry &= vbCrLf & " SET FNAmtNormal=" & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) & ""
                        '    _Qry &= vbCrLf & ", FNAmtOT=" & (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & " "
                        '    _Qry &= vbCrLf & ", FNNetAmt=" & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) + (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & " "
                        '    _Qry &= vbCrLf & ", FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "' "
                        '    _Qry &= vbCrLf & ", FTUpdDate=" & HI.UL.ULDate.FormatDateDB & " "
                        '    _Qry &= vbCrLf & ", FTUpdTime=" & HI.UL.ULDate.FormatTimeDB & " "
                        '    _Qry &= vbCrLf & ", FNJobCost=" & Val(_FNJobCost) & " "
                        '    _Qry &= vbCrLf & " WHERE  FNHSysEmpID=" & Val(_FTEmpCode) & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'  "

                        'Else

                        '    _Qry = "  INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll_Daily "
                        '    _Qry &= vbCrLf & " (FTInsUser, FTInsDate, FTInsTime,  FNHSysEmpID, FTDateTrans, FNAmtNormal, FNAmtOT, FNNetAmt, FNProNormal, FNProOT,FNProOther, FNNetProAmt, FNNetIncen, FNNetPerDay,FNJobCost) "
                        '    _Qry &= vbCrLf & " SELECT '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                        '    _Qry &= vbCrLf & " ," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ""
                        '    _Qry &= vbCrLf & " ," & Val(_FTEmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'"
                        '    _Qry &= vbCrLf & " ," & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) & ""
                        '    _Qry &= vbCrLf & " ," & (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & ""
                        '    _Qry &= vbCrLf & " ," & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) + (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & ""
                        '    _Qry &= vbCrLf & " ,0,0,0,0"
                        '    _Qry &= vbCrLf & " ,0"
                        '    _Qry &= vbCrLf & " ," & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) + (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & ""
                        '    _Qry &= vbCrLf & " ," & Val(_FNJobCost) & ""

                        'End If

                        'HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR)

                        _FTStartCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTStartCalculateDate, 1))

                    End If ''   END CHECK Incentive

                Loop  '' Loop Date

            End If

        Next

        Return True

    End Function

    Public Shared Function CalculateWageDaily_VT(ByVal _User As String, ByVal _FTEmpCode As String,
        ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String, Optional ByVal _WorkDayPerMonth As Integer = 0) As Boolean

        '----------------------------------   Variable  ------------------------------------
        Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
        Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

        Dim _Qry As String
        Dim _dttran As DataTable
        Dim _Err As Integer, _Complete As Integer, _ActualDate As String
        Dim _FCSalary As Double, _FDDateStart As String
        Dim _FDDateEnd As String
        Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
        Dim _FCOtherAdd As Double
        Dim _FCOtherDeduct As Double
        Dim _FTShift As String
        Dim _FNTime, _FNNotRegis As Double
        Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
        Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
        Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
        Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double
        Dim _FNLeavePay, _FNLeaveNotPay As Double, _FNTimeMin, _FNOT1Min As Double
        Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
        Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
        Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
        Dim _dtot As DataTable
        Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double

        Dim _FTStartCalculateDate As String, _FTEndCalculateDate As String
        Dim _FNEmpBaht, _FNEmpBahtOT1 As Double, _FNEmpBahtOT15 As Double, _FNEmpBahtOT2 As Double, _FNEmpBahtOT3 As Double, _FNEmpBahtOT4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
        Dim _SocialRate As Double
        Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
        Dim _TotalHoliDay As Integer
        Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String
        Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double
        Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
        Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
        Dim _FTSlary, _FTDivCode, _FTPos As String
        Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
        Dim _Dtemp As DataTable
        Dim _FCAdd, _FCDeduct As Double

        Dim _dtLeave As DataTable
        Dim _LeaveCode As String = ""
        Dim _dtAddOtherAmtshift As DataTable

        Dim _ShiftAmt As Double = 0
        Dim _ShiftOTAmt As Double = 0
        Dim _ShiftValue As Double = 0
        Dim _ShiftOTValue As Double = 0

        Dim _ContributedFundBeginPay As Boolean = False
        Dim _DTHoliday As DataTable
        Dim _ShiftAdv As Double = 0
        Dim _AmtPlus As Double = 0
        Dim _GAmtPlus As Double = 0
        Dim FTHldType As Integer = 0
        Dim _SPDateType As Integer = 0
        Dim _ReturnVacationAmount As Double = 0

        Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
        Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
        Dim _FTStatePayHoliday As String = ""


        Dim _FNTotalPayMinute As Integer = 0


        '------------------ GetConfig Holiday ----------------------------------
        _DTHoliday = LoadSysHoliday
        '------------------ GetConfig Holiday ----------------------------------

        _FTStartCalculateDate = _StartDate
        _FTEndCalculateDate = _EndDate
        _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
        _FNSlaryPerMonth = 0
        _FNSlaryPerDay = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0
        _FTEmpState = "" : _FNEmpBaht = 0 : _FNEmpBahtOT1 = 0
        _FNEmpBahtOT15 = 0 : _FNEmpBahtOT2 = 0 : _FNEmpBahtOT3 = 0
        _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
        _FCPayVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0
        _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0
        _SocialMinIncome = 0 : _SocialMaxIncome = 0
        _Complete = 0 : _Err = 0 : _FCSalary = -99

        _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
        _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
        _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

        _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, M.FNEmpStatus AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"
        _Qry &= vbCrLf & " ,M.FNHSysDeptId AS FTDeptCode "
        _Qry &= vbCrLf & "  ,M.FNHSysDivisonId AS FTDivCode, M.FNHSysSectId AS FTSectCode,  M.FNHSysUnitSectId AS FTUnitSecCode"
        _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
        _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
        _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
        _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
        _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
        _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
        _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
        _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
        _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
        _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
        _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide"
        _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday "
        _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
        _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"
        _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_FTEmpCode) & " ) "

        _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each R As DataRow In _Dtemp.Rows

            _FTStatePayHoliday = R!FTStatePayHoliday.ToString

            _FTSlary = R!FTSalary.ToString
            If _WorkDayPerMonth > 0 Then
                _FTSlary = _FTSlary / _WorkDayPerMonth
            End If

            _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString
            _FTDeptCode = R!FTDeptCode.ToString : _FTDivCode = R!FTDivCode.ToString
            _FTSectCode = R!FTSectCode.ToString
            _FTUnitCode = R!FTUnitSecCode.ToString : _FTPos = R!FTPositCode.ToString
            _FTEmpState = R!FTCalType.ToString

            _FCSalary = -99
            _FTSlary = (_FTSlary)

            If IsNumeric(_FTSlary) Then
                _MSlary = _FTSlary
                _FCSalary = CDbl(_FTSlary)
                _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
                _AmtPlus = 0

                _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
                _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
                _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
                For Each R3 As DataRow In _dtot.Rows
                    Select Case R3!FTCfgOTCode.ToString.ToUpper
                        Case "01"
                            _RateOT1 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "02"
                            _RateOT15 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "03"
                            _RateOT2 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "04"
                            _RateOT3 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                        Case "05"
                            _RateOT4 = Val(R3!FCCfgOTValue.ToString)
                            _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
                    End Select

                Next



                _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
                _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
                _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
                _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet"
                _Qry &= vbCrLf & "  WHERE        (FTFinCode = N'001') OR  (FTFinCode = N'007') "
                _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                _FCOtherAdd = 0 : _FCOtherDeduct = 0

                _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
                _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= 480 THEN 480   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= 480 THEN 480   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
                _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= 480 THEN 480 ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
                _Qry &= vbCrLf & " , FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO "
                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
                _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_FTEmpCode) & " )"


                _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

                _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


                _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	"
                _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNLateNormalMin,0) )- (ISNULL(FNLateNormalCut,0) + ISNULL(FNAbsentCut,0) )     AS FNTime"
                _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
                _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
                _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
                _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 )   AS FNLateNormalCut"
                _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
                _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
                _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
                _Qry &= vbCrLf & " 	, (CASE WHEN ISNULL(FNAbsentSP,0) = ISNULL(FNAbsent,0) THEN 0 ELSE  ISNULL(FNAbsent,0)  END ) AS FNAbsent_Cut "
                _Qry &= vbCrLf & " 	, ISNULL(FNCutAbsent,0) AS FNAbsent "
                _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNLateNormalMin,0) )- (ISNULL(FNLateNormalCut,0) + ISNULL(FNAbsentCut,0) )   AS FNTimeMin"
                _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0) As FNTimeMinOrg"
                _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
                _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
                _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
                _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
                _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
                _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
                _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
                _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
                _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
                _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
                _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
                _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
                _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
                _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"



                _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
                _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_FTEmpCode) & " )"
                _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "' "
                _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

                _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


                _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
                _TotalHoliDay = 0

                Dim _oHoliday As Integer = 0

                _TotalWorkDay = 0

                _FCAdd = 0 : _FCDeduct = 0


                If _FDDateStart > _FTStartCalculateDate Then _FTStartCalculateDate = _FDDateStart

                Do While _FTStartCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTStartCalculateDate <= _FDDateEnd)

                    _ShiftAmt = 0
                    _ShiftValue = 0
                    _ShiftOTValue = 0
                    _ShiftOTAmt = 0
                    _oHoliday = 0
                    FTHldType = 0

                    Dim _NewSlary As String

                    _Qry = "  SELECT      TOP 1   FNCurrentSlary  AS AMT"
                    _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary"
                    _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "') "
                    _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_FTEmpCode) & ")"
                    _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
                    _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

                    _FCSalary = _MSlary

                    If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

                    _Holiday = ""

                    For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                        _Holiday = "H"
                        FTHldType = Val(IR!FTHldType.ToString)
                        Exit For
                    Next

                    _FTShift = ""

                    _FNTime = 0
                    _FNNotRegis = 0
                    _FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
                    _FNOT3 = 0 : _FNOT4 = 0
                    _FNLateNormalMin = 0 : _FNLateNormalCut = 0
                    _FNLateOtMin = 0 : _FNLateOtCut = 0
                    _FNLateMorning = 0 : _FNLateAfternoon = 0
                    _LateCutAbsent = 0 : _FNAbsent = 0
                    _FNTimeMin = 0 : _FNOT1Min = 0

                    _FNOT1_5Min = 0 : _FNOT2Min = 0
                    _FNOT3Min = 0 : _FNOT4Min = 0
                    _FNLateMMin = 0 : _FNLateAfMin = 0
                    _FNRetireMMin = 0 : _FNRetireAfMin = 0
                    _FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
                    _FNRetireOtMin = 0 : _FNRetireOtMin = 0
                    _FNRetireOtCut = 0
                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _LeaveCode = ""
                    _FNTotalPayMinute = 0

                    Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
                    Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                    For Each R2 In _R

                        _FTShift = R2!FTShift.ToString
                        _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
                        _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
                        _FNNotRegis = Val(R2!FNNotRegis.ToString)
                        _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
                        _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
                        _FNOT1Min = Val(R2!FNOT1Min.ToString)
                        _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
                        _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)

                        _InOT = R2!FTIn3.ToString
                        _OutOT = R2!FTOut3.ToString

                        _Over = R2!FTOverClock.ToString




                        If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))


                            _TotalWorkDay = _TotalWorkDay + 1

                            _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
                            If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

                                _SPDateType = 0

                                _Holiday = ""

                                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                                    _Holiday = "H"
                                    Exit For
                                Next

                                If _Holiday <> "" Then _SPDateType = 2

                                Dim _StateLeaveOther As Boolean = False
                                Dim _StateLeavacation As Boolean = False
                                Dim _StateFTStaMaternityleaveNotpay As Boolean = False
                                Dim _SumLeave As Integer = 0

                                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                                    _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

                                    If Val(sR!LeaveType) = 1 Then
                                        _StateLeavacation = True
                                    Else
                                        _StateLeaveOther = True
                                    End If

                                    If Val(sR!LeaveType) = 2 Then
                                        _StateFTStaMaternityleaveNotpay = True
                                    End If
                                Next

                                '--------------------------- ค่ากะ -------------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
                                    Dim _StatePass As Boolean = True

                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If

                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _ShiftAmt = _ShiftValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ -------------------------------------

                                '--------------------------- ค่ากะ OT ----------------------------------
                                For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
                                    Dim _StatePass As Boolean = True

                                    If _OutOT <> "" Then
                                        Beep()
                                    End If
                                    If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
                                    If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
                                    If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
                                    If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
                                    If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
                                    If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
                                    If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
                                        _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
                                    End If

                                    If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
                                    If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

                                    If RFin!FTOTTime.ToString <> "" And _StatePass Then
                                        Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
                                        Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

                                        If _STime.Length = _ETime.Length Then
                                            If IsDate(_STime) And IsDate(_ETime) Then
                                                If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If
                                        Else
                                            _StatePass = False
                                        End If

                                    End If

                                    If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
                                        If Val(RFin!FNOTTimeM.ToString) > 0 Then

                                            If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
                                                If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
                                                    _StatePass = False
                                                End If
                                            Else
                                                _StatePass = False
                                            End If

                                        End If
                                    End If


                                    If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

                                    If _StatePass Then
                                        _ShiftOTAmt = _ShiftOTValue
                                    End If
                                Next
                                '--------------------------- ค่ากะ OT ----------------------------------

                            End If
                            '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

                        End If

                    Next

                    If _FTEmpState = "2" Or _FTEmpState = "3" Then
                        _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.00"))

                        If _FTEmpState = "3" Then
                            _FNSlaryPerMonth = CDbl(Format(_FNSlaryPerMonth / 2, "0.00"))
                        End If

                        _FNSlaryPerDay = CDbl(Format((_FCSalary) / 30, "0.00000000000"))
                    Else
                        _FNSlaryPerMonth = 0
                        _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00000000000"))
                    End If

                    _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000000000"))
                    _FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000000000"))
                    _FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_FNSlaryPerDay) / 8, "0.00000000000")) / 60, "0.00000000000"))
                    _FNSlaryOTPerHour = CDbl(Format((_FNSlaryPerDay) / 8, "0.00"))

                    If _FTShift = "" Then
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If
                    Else
                        If _Holiday <> "" Then
                            _oHoliday = 1
                            _TotalHoliDay = _TotalHoliDay + 1
                        End If

                        If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
                            _WorkDay = _WorkDay + 1
                        End If

                    End If

                    _FNLeavePay = 0 : _FNLeaveVacation = 0
                    _FNLeaveNotPay = 0
                    _FNTotalPayMinute = 0

                    For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
                        _LeaveCode = sR!LFTLeaveCode.ToString

                        _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)
                        _FNTotalPayMinute = Val(sR!FNTotalPayMinute.ToString)

                        If Val(sR!LeaveType) = 1 Then
                            _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
                        Else
                            _FNLeavePay = Val(sR!FNTotalPayMinute.ToString)
                        End If
                    Next

                    ''bast  เพิ่มลาจ่าย ในการแสดง  wege daily   ให้เอาลาจ่าย มารวมในค่าแรงแต่ละวัน 
                    _FNEmpBaht = CDbl(Format((_FNTimeMin + _FNTotalPayMinute) * _FNSlaryPerMin, "0.0000"))


                    _FNEmpBahtOT1 = CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000000"))


                    If FTHldType = 1 And _FNOT3Min > 0 Then
                        _GAmtPlus = _GAmtPlus + _AmtPlus
                    End If

                    _FNEmpBahtOT15 = CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.00"))
                    _FNEmpBahtOT2 = CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.00"))
                    _FNEmpBahtOT3 = CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.00"))
                    _FNEmpBahtOT4 = CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.00"))

                    _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.00"))
                    _LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.00"))
                    _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.00"))

                    _LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.00"))
                    Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _FNSlaryPerMin, "0.00"))
                    _Lapaid = _Lapaid + _TmpLapaidAmt

                    If _LeaveCode <> "" And _FNLeaveVacation > 0 Then
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    Else
                        _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
                    End If

                    If _FTStatePayHoliday <> "1" Then '--------- ไม่ได้ค่าจ้างวันหยุด---------------
                    Else


                        If _FNLeaveNotPay <= 0 Then
                            If _TmpLapaidAmt <= 0 Then ' กรณีไม่มีลาจ่ายในวันนักขัต 
                                _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.00"))
                            Else ' กรณีมีลาจ่ายในวันนักขัต  ไม่ได้นักขัต ได้ลาจ่าย
                                _TotalHoliDay = _TotalHoliDay - _oHoliday
                            End If
                        Else ' กรณีมีลาไม่จ่ายในวันนักขัต  ไม่ได้นักขัต
                            _TotalHoliDay = _TotalHoliDay - _oHoliday
                        End If

                    End If

                    _Qry = "Select Top 1 FNHSysEmpID, FTDateTrans "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily AS T WITH(NOLOCK)"
                    _Qry &= vbCrLf & " WHERE  FNHSysEmpID=" & Val(_FTEmpCode) & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'  "

                    If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") <> "" Then

                        _Qry = "  UPDATE  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily "
                        _Qry &= vbCrLf & " SET FNAmtNormal=" & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) & ""
                        _Qry &= vbCrLf & ", FNAmtOT=" & (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & " "
                        _Qry &= vbCrLf & ", FNNetAmt=" & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) + (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & " "
                        _Qry &= vbCrLf & ", FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "' "
                        _Qry &= vbCrLf & ", FTUpdDate=" & HI.UL.ULDate.FormatDateDB & " "
                        _Qry &= vbCrLf & ", FTUpdTime=" & HI.UL.ULDate.FormatTimeDB & " "
                        _Qry &= vbCrLf & " WHERE  FNHSysEmpID=" & Val(_FTEmpCode) & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'  "

                    Else

                        _Qry = "  INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily "
                        _Qry &= vbCrLf & " (FTInsUser, FTInsDate, FTInsTime,  FNHSysEmpID, FTDateTrans, FNAmtNormal, FNAmtOT, FNNetAmt, FNProNormal, FNProOT,FNProOther, FNNetProAmt) "
                        _Qry &= vbCrLf & " SELECT '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                        _Qry &= vbCrLf & " ," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ""
                        _Qry &= vbCrLf & " ," & Val(_FTEmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'"
                        _Qry &= vbCrLf & " ," & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) & ""
                        _Qry &= vbCrLf & " ," & (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & ""
                        _Qry &= vbCrLf & " ," & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) + (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & ""
                        _Qry &= vbCrLf & " ,0,0,0,0"

                    End If

                    HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR)

                    _FTStartCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTStartCalculateDate, 1))

                Loop

            End If

        Next

        Return True

    End Function


    'Public Shared Function CalculateWageDaily(ByVal _User As String, ByVal _FTEmpCode As String,
    '    ByVal _EmpType As String, ByVal _StartDate As String, ByVal _EndDate As String) As Boolean

    '    '----------------------------------   Variable  ------------------------------------
    '    Thread.CurrentThread.CurrentCulture = New CultureInfo("en-US", True)
    '    Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy"
    '    Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern = "HH:mm:ss"

    '    Dim _Qry As String
    '    Dim _dttran As DataTable
    '    Dim _Err As Integer, _Complete As Integer, _ActualDate As String
    '    Dim _FCSalary As Double, _FDDateStart As String
    '    Dim _FDDateEnd As String
    '    Dim _FTDeptCode As String, _FTSectCode As String, _FTUnitCode As String
    '    Dim _FCOtherAdd As Double
    '    Dim _FCOtherDeduct As Double
    '    Dim _FTShift As String
    '    Dim _FNTime, _FNNotRegis As Double
    '    Dim _FNOT1 As Double, _FNOT1_5 As Double, _FNOT2 As Double, _FNOT3, _FNOT4 As Double
    '    Dim _FNLeaveVacation As Double, _FNLateNormalMin As Double
    '    Dim _FNLateNormalCut As Double, _FNLateOtMin As Double, _FNLateOtCut As Double
    '    Dim _FNLateMorning As Double, _FNLateAfternoon As Double, _FNAbsent As Double
    '    Dim _FNLeavePay, _FNLeaveNotPay As Double, _FNTimeMin, _FNOT1Min As Double
    '    Dim _FNOT1_5Min As Double, _FNOT2Min As Double, _FNOT3Min As Double, _FNOT4Min As Double, _FNLateMMin As Double
    '    Dim _FNLateAfMin As Double, _FNRetireMMin As Double, _FNRetireAfMin As Double
    '    Dim _FNRetireNormalCut As Double, _FNRetireOtMin As Double, _FNRetireOtCut As Double
    '    Dim _dtot As DataTable
    '    Dim _RateOT1, _RateOT15, _RateOT2, _RateOT3, _RateOT4 As Double

    '    Dim _FTStartCalculateDate As String, _FTEndCalculateDate As String
    '    Dim _FNEmpBaht, _FNEmpBahtOT1 As Double, _FNEmpBahtOT15 As Double, _FNEmpBahtOT2 As Double, _FNEmpBahtOT3 As Double, _FNEmpBahtOT4 As Double, _nBahtAbsent As Double, _nEstimateIncome As Double
    '    Dim _SocialRate As Double
    '    Dim _WorkDay As Integer, _TotalWorkDay As Integer, _Holiday As String
    '    Dim _TotalHoliDay As Integer
    '    Dim _FNSlaryPerMonth As Double, _FNSlaryPerDay As Double, _FNSlaryPerHour As Double, _FNSlaryPerMin, _FNSlaryOTPerMin As Double, _FNSlaryOTPerHour As Double, _FTEmpState As String
    '    Dim _Lapaid, _LaNotpaid As Double, _FCPayVacationBaht As Double, _Net As Double, _CalSo As Double, _HBaht As Double, _FCSocial As Double
    '    Dim _FCTax As Integer, _FCBaht As Double, _ActualNextDate As String
    '    Dim _SocialMinIncome As Integer, _SocialMaxIncome As Double
    '    Dim _FTSlary, _FTDivCode, _FTPos As String
    '    Dim _MSlary As Double, _LateCutAbsent As Double, _LateCutAmt, _LateCutAmtAbsent As Double
    '    Dim _Dtemp As DataTable
    '    Dim _FCAdd, _FCDeduct As Double

    '    Dim _dtLeave As DataTable
    '    Dim _LeaveCode As String = ""
    '    Dim _dtAddOtherAmtshift As DataTable

    '    Dim _ShiftAmt As Double = 0
    '    Dim _ShiftOTAmt As Double = 0
    '    Dim _ShiftValue As Double = 0
    '    Dim _ShiftOTValue As Double = 0

    '    Dim _ContributedFundBeginPay As Boolean = False
    '    Dim _DTHoliday As DataTable
    '    Dim _ShiftAdv As Double = 0
    '    Dim _AmtPlus As Double = 0
    '    Dim _GAmtPlus As Double = 0
    '    Dim FTHldType As Integer = 0
    '    Dim _SPDateType As Integer = 0
    '    Dim _ReturnVacationAmount As Double = 0

    '    Dim _DateStartOfMonth As String = HI.UL.ULDate.ConvertEnDB(Left(_EndDate, 8) & "01")  'วันแรกของเดือน
    '    Dim _DateEndOfMonth As String = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(HI.UL.ULDate.AddMonth(Left(_EndDate, 8) & "01", 1), -1)) 'วันแของเดือน
    '    Dim _FTStatePayHoliday As String = ""

    '    '------------------ GetConfig Holiday ----------------------------------
    '    _DTHoliday = LoadSysHoliday
    '    '------------------ GetConfig Holiday ----------------------------------

    '    _FTStartCalculateDate = _StartDate
    '    _FTEndCalculateDate = _EndDate
    '    _TotalWorkDay = 0 : _WorkDay = 0 : _TotalHoliDay = 0
    '    : _FNSlaryPerMonth = 0
    '    _FNSlaryPerDay = 0 : _FNSlaryPerHour = 0 : _FNSlaryPerMin = 0
    '    _FTEmpState = "" : _FNEmpBaht = 0 : _FNEmpBahtOT1 = 0
    '    _FNEmpBahtOT15 = 0 : _FNEmpBahtOT2 = 0 : _FNEmpBahtOT3 = 0
    '    _nBahtAbsent = 0 : _nEstimateIncome = 0 : _Lapaid = 0 : _LaNotpaid = 0 : _Net = 0
    '    _FCPayVacationBaht = 0 : _CalSo = 0 : _HBaht = 0 : _FCSocial = 0
    '    _FCTax = 0 : _FCBaht = 0 : _SocialRate = 0
    '    _SocialMinIncome = 0 : _SocialMaxIncome = 0
    '    _Complete = 0 : _Err = 0 : _FCSalary = -99

    '    _Qry = "SELECT  CONVERT(varchar(10),GETDATE(),111)"
    '    _ActualDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

    '    _Qry = "SELECT  CONVERT(varchar(10),DateAdd(day,1,GETDATE()),111) "
    '    _ActualNextDate = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")


    '    _Qry = "   SELECT  TOP 1  M.FNHSysCmpId As FTCmpCode, M.FNHSysEmpID AS FTEmpCode, M.FDDateStart, M.FDDateEnd, M.FDDateProbation, M.FTProbationSta, M.FNEmpStatus AS FTStatus, M.FNHSysEmpTypeId AS FTTypeEmp"
    '    _Qry &= vbCrLf & " ,M.FNHSysDeptId AS FTDeptCode "
    '    _Qry &= vbCrLf & "  ,M.FNHSysDivisonId AS FTDivCode, M.FNHSysSectId AS FTSectCode,  M.FNHSysUnitSectId AS FTUnitSecCode"
    '    _Qry &= vbCrLf & " , M.FNHSysPositId AS FTPositCode,'' as FTJobGrade,'' AS FTCostCNCode,M.FNLateCutSta AS FTLateCutSta"
    '    _Qry &= vbCrLf & "  , M.FNPaidOTSta AS FTPaidOTSta, M.FTEmpIdNo, M.FTSocialNo, M.FTTaxNo, M.FNCalSocialSta AS FTCalSocialSta, M.FNCalTaxSta AS FTCalTaxSta, M.FNHSysPayRollPayId AS FTPayCode"
    '    _Qry &= vbCrLf & " , M.FTAccNo, M.FNHSysBankId AS FTBnkCode, M.FNHSysBankBranchId AS FTBnkBchCode,M.FNSalary AS FTSalary, "
    '    _Qry &= vbCrLf & "  M.FCIncomeBefore, M.FCTaxBefore, M.FCSocialBefore, M.FCDisabledDependents, M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,"
    '    _Qry &= vbCrLf & "   ET.FNCalType AS FTCalType, ET.FNInsurType AS FTInsurType,M.FNMaritalStatus AS FTMaritalCode,M.FDFundBegin, M.FDFundEnd,"
    '    _Qry &= vbCrLf & " M.FCModFather, M.FCModMother, M.FCModMateFather, M.FCModMateMother, "
    '    _Qry &= vbCrLf & " M.FCPremium, M.FCInterest, M.FCUnitRMF, M.FCUnitLTF, M.FCDeductDonate, M.FCDisabledDependents,M.FCDeductDonateStudy, "
    '    _Qry &= vbCrLf & "  M.FCHealthInsurFatherMotherMate, M.FTHealthInsurIDFather,M.FTHealthInsurIDMother,"
    '    _Qry &= vbCrLf & " M.FTHealthInsurIDFatherMate, M.FTHealthInsurIDMotherMate,M.FTMateIncome,M.FCExceptAgeOver,M.FCExceptAgeOverMate,M.FCDeductDividend "
    '    _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE 0 END AS FNWorkAge"
    '    _Qry &= vbCrLf & ", CASE WHEN ISDATE(M.FdDateStart) = 1 AND ISDATE(M.FDRetire) = 1 THEN  Datediff(month,M.FdDateStart,M.FDRetire) ELSE Datediff(month,M.FdDateStart,DateAdd(day,1,CONVERT(Datetime,'" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'))) END AS FNEmpWorkAge"
    '    _Qry &= vbCrLf & " ,ISNULL(ET.FNSalaryDivide,0) AS FNSalaryDivide"
    '    _Qry &= vbCrLf & ",ISNULL(ET.FTStatePayHoliday,'') AS FTStatePayHoliday "
    '    _Qry &= vbCrLf & "  FROM             [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee AS M WITH (NOLOCK) INNER JOIN"
    '    _Qry &= vbCrLf & "    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.THRMEmpType AS ET WITH (NOLOCK) ON M.FNHSysEmpTypeId = ET.FNHSysEmpTypeId"
    '    _Qry &= vbCrLf & "	WHERE     (M.FNHSysEmpID =" & Val(_FTEmpCode) & " ) "

    '    _Dtemp = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

    '    For Each R As DataRow In _Dtemp.Rows

    '        _FTStatePayHoliday = R!FTStatePayHoliday.ToString
    '        _FTSlary = R!FTSalary.ToString : _FDDateStart = R!FDDateStart.ToString : _FDDateEnd = R!FDDateEnd.ToString
    '        _FTDeptCode = R!FTDeptCode.ToString : _FTDivCode = R!FTDivCode.ToString
    '        _FTSectCode = R!FTSectCode.ToString
    '        _FTUnitCode = R!FTUnitSecCode.ToString : _FTPos = R!FTPositCode.ToString
    '        _FTEmpState = R!FTCalType.ToString

    '        _FCSalary = -99
    '        _FTSlary = (_FTSlary)

    '        If IsNumeric(_FTSlary) Then
    '            _MSlary = _FTSlary
    '            _FCSalary = CDbl(_FTSlary)
    '            _RateOT1 = 0 : _RateOT15 = 0 : _RateOT2 = 0 : _RateOT3 = 0 : _RateOT4 = 0
    '            _AmtPlus = 0

    '            _Qry = " SELECT FTCfgOTCode,FCCfgOTValue,ISNULL(FCCfgOTAmtPlus,0) AS FCCfgOTAmtPlus  "
    '            _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfigOTSet WITH (NOLOCK) "
    '            _Qry &= vbCrLf & "  WHERE  (FNCalType  = " & Val(_EmpType) & ")"
    '            _dtot = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)
    '            For Each R3 As DataRow In _dtot.Rows
    '                Select Case R3!FTCfgOTCode.ToString.ToUpper
    '                    Case "01"
    '                        _RateOT1 = Val(R3!FCCfgOTValue.ToString)
    '                    Case "02"
    '                        _RateOT15 = Val(R3!FCCfgOTValue.ToString)
    '                    Case "03"
    '                        _RateOT2 = Val(R3!FCCfgOTValue.ToString)
    '                    Case "04"
    '                        _RateOT3 = Val(R3!FCCfgOTValue.ToString)
    '                        _AmtPlus = Val(R3!FCCfgOTAmtPlus.ToString)
    '                    Case "05"
    '                        _RateOT4 = Val(R3!FCCfgOTValue.ToString)
    '                End Select

    '            Next



    '            _Qry = " SELECT     FTFinCode, FTType, FTCalType, FTPayType, FTStaTax, "
    '            _Qry &= vbCrLf & "   FTStaSocial, FTStaCalOT, FTStaLate, FTStaAbsent, FTStaLeave, FTStaVacation, FTStaRetire, FTStaHoliday, FNOTTimeM, FTOTTime, FTStaCheckLate, FTLateMin,"
    '            _Qry &= vbCrLf & "    FTStaCheckLeave, FTLeaveMin, FTStaCheckWorkTime, FTCheckWorkTimeMin, FTStaMaternityleaveNotpay, FTStaActive"
    '            _Qry &= vbCrLf & "    FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMFinanceSet"
    '            _Qry &= vbCrLf & "  WHERE        (FTFinCode = N'001') OR  (FTFinCode = N'007') "
    '            _dtAddOtherAmtshift = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

    '            _FCOtherAdd = 0 : _FCOtherDeduct = 0

    '            _Qry = "  SELECT   FTLeaveType AS LFTLeaveCode,Case WHEN FTLeaveType='98' Then 1 Else CASE WHEN FTLeaveType='97' THEN 2 ELSE 0 END  END AS LeaveType"
    '            _Qry &= vbCrLf & " ,     SUM(CASE WHEN ISNULL(FNTotalMinute,0) >= 480 THEN 480   ELSE  ISNULL(FNTotalMinute,0)   END) AS FNTotalMinute"
    '            _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalPayMinute,0) >= 480 THEN 480   ELSE ISNULL(FNTotalPayMinute,0)   END ) AS FNTotalPayMinute"
    '            _Qry &= vbCrLf & " , SUM( CASE WHEN ISNULL(FNTotalNotPayMinute,0) >= 480 THEN 480 ELSE ISNULL(FNTotalNotPayMinute,0)   END ) AS FNTotalNotPayMinute"
    '            _Qry &= vbCrLf & " , FTDateTrans"
    '            _Qry &= vbCrLf & " ,ISNULL(FTStaCalSSO,'N') AS FTStaCalSSO "
    '            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave WITH(NOLOCK)"
    '            _Qry &= vbCrLf & "    WHERE (FNHSysEmpID =" & Val(_FTEmpCode) & " )"


    '            _Qry &= vbCrLf & " 	AND FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "' "
    '            _Qry &= vbCrLf & " 	AND FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

    '            _Qry &= vbCrLf & " GROUP BY FTDateTrans,Case WHEN FTLeaveType='98' Then 1 Else 0 END,ISNULL(FTStaCalSSO,'N'),FTLeaveType"

    '            _dtLeave = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


    '            _Qry = " 	SELECT  ISNULL(T.FNHSysShiftID,0) AS FTShift	"
    '            _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNLateNormalMin,0) )- (ISNULL(FNLateNormalCut,0) + ISNULL(FNAbsentCut,0) )     AS FNTime"
    '            _Qry &= vbCrLf & " 	, ISNULL(T.FNNotRegis,0) As FNNotRegis 	, ISNULL(FNOT1,0) AS FNOT1"
    '            _Qry &= vbCrLf & " 	, ISNULL(FNOT1_5,0) AS FNOT1_5"
    '            _Qry &= vbCrLf & " 	, ISNULL(FNOT2,0 ) AS FNOT2  , ISNULL(FNOT3,0) AS FNOT3, ISNULL(FNOT4,0) AS FNOT4"
    '            _Qry &= vbCrLf & " 	, ISNULL(FNLateNormalMin,0) AS FNLateNormalMin, ISNULL(FNLateNormalCut,0 )   AS FNLateNormalCut"
    '            _Qry &= vbCrLf & " , ISNULL(FNLateOtMin,0) As FNLateOtMin,ISNULL(FNLateOtCut,0) As FNLateOtCut"
    '            _Qry &= vbCrLf & " , ISNULL(FNLateMMin,0) As FNLateMorning"
    '            _Qry &= vbCrLf & " 	, ISNULL(FNLateAfMin,0) AS FNLateAfternoon,Isnull(FNAbsentCut,0) AS FNAbsentCut "
    '            _Qry &= vbCrLf & " 	, (CASE WHEN ISNULL(FNAbsentSP,0) = ISNULL(FNAbsent,0) THEN 0 ELSE  ISNULL(FNAbsent,0)  END ) AS FNAbsent_Cut "
    '            _Qry &= vbCrLf & " 	, ISNULL(FNCutAbsent,0) AS FNAbsent "
    '            _Qry &= vbCrLf & " ,(ISNULL(FNTimeMin,0) + ISNULL(FNLateNormalMin,0) )- (ISNULL(FNLateNormalCut,0) + ISNULL(FNAbsentCut,0) )   AS FNTimeMin"
    '            _Qry &= vbCrLf & " ,ISNULL(FNTimeMin,0) As FNTimeMinOrg"
    '            _Qry &= vbCrLf & " , ISNULL(FNOT1Min,0) As FNOT1Min  "
    '            _Qry &= vbCrLf & " , ISNULL(FNOT1_5Min,0) As FNOT1_5Min "
    '            _Qry &= vbCrLf & " ,ISNULL(FNOT2Min,0) As FNOT2Min "
    '            _Qry &= vbCrLf & " , ISNULL(FNOT3Min,0) As FNOT3Min, ISNULL(FNOT4Min,0) As FNOT4Min "
    '            _Qry &= vbCrLf & " ,ISNULL( FNLateMMin,0) AS FNLateMMin "
    '            _Qry &= vbCrLf & " , ISNULL(FNLateAfMin,0) AS FNLateAfMin"
    '            _Qry &= vbCrLf & " , ISNULL(FNRetireMMin,0) AS FNRetireMMin "
    '            _Qry &= vbCrLf & " ,ISNULL(FNRetireAfMin,0 )  as FNRetireAfMin"
    '            _Qry &= vbCrLf & " , ISNULL(FNRetireNormalCut,0) As FNRetireNormalCut "
    '            _Qry &= vbCrLf & " , ISNULL(FNRetireOtMin,0) AS FNRetireOtMin"
    '            _Qry &= vbCrLf & " ,ISNULL(FNRetireOtCut,0) AS FNRetireOtCut,FTDateTrans"
    '            _Qry &= vbCrLf & " ,ISNULL(T.FTIn1,'') AS FTIn1"
    '            _Qry &= vbCrLf & " ,ISNULL(T.FTOut1,'') AS FTOut1"
    '            _Qry &= vbCrLf & " ,ISNULL(T.FTIn2,'') AS FTIn2"
    '            _Qry &= vbCrLf & " ,ISNULL(T.FTOut2,'') AS FTOut2"
    '            _Qry &= vbCrLf & " ,ISNULL(T.FTIn3,'') AS FTIn3"
    '            _Qry &= vbCrLf & " ,ISNULL(T.FTOut3,'') AS FTOut3"
    '            _Qry &= vbCrLf & " ,P.FTOverClock,T.FTWeekDay"
    '            _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans AS T WITH(NOLOCK) LEFT OUTER JOIN   THRMTimeShift AS P WITH(NOLOCK) ON T.FNHSysShiftID =P.FNHSysShiftID  "
    '            _Qry &= vbCrLf & "  WHERE(T.FNHSysEmpID =" & Val(_FTEmpCode) & " )"
    '            _Qry &= vbCrLf & " 	AND T.FTDateTrans >= '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "' "
    '            _Qry &= vbCrLf & " 	AND T.FTDateTrans <= '" & HI.UL.ULDate.ConvertEnDB(_FTEndCalculateDate) & "' "

    '            _dttran = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


    '            _LateCutAbsent = 0 : _LateCutAmt = 0 : _LateCutAmtAbsent = 0
    '            _TotalHoliDay = 0

    '            Dim _oHoliday As Integer = 0

    '            _TotalWorkDay = 0

    '            _FCAdd = 0 : _FCDeduct = 0


    '            If _FDDateStart > _FTStartCalculateDate Then _FTStartCalculateDate = _FDDateStart

    '            Do While _FTStartCalculateDate <= _FTEndCalculateDate And (_FDDateEnd = "" Or _FTStartCalculateDate <= _FDDateEnd)

    '                _ShiftAmt = 0
    '                _ShiftValue = 0
    '                _ShiftOTValue = 0
    '                _ShiftOTAmt = 0
    '                _oHoliday = 0
    '                FTHldType = 0
    '                Dim _NewSlary As String

    '                _Qry = "  SELECT      TOP 1   FNCurrentSlary  AS AMT"
    '                _Qry &= vbCrLf & "   FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTEmployeeMasterChangeSlary"
    '                _Qry &= vbCrLf & "  WHERE        (FTEffectiveDate > N'" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "') "
    '                _Qry &= vbCrLf & "  AND  (FNHSysEmpID = " & Val(_FTEmpCode) & ")"
    '                _Qry &= vbCrLf & "  ORDER BY FTEffectiveDate ASC "
    '                _NewSlary = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "")

    '                _FCSalary = _MSlary
    '                If IsNumeric(_NewSlary) Then _FCSalary = CDbl(_NewSlary)

    '                _Holiday = ""

    '                For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
    '                    _Holiday = "H"
    '                    FTHldType = Val(IR!FTHldType.ToString)
    '                    Exit For
    '                Next

    '                _FTShift = ""

    '                _FNTime = 0
    '                _FNNotRegis = 0
    '                _FNOT1 = 0 : _FNOT1_5 = 0 : _FNOT2 = 0
    '                _FNOT3 = 0 : _FNOT4 = 0
    '                _FNLateNormalMin = 0 : _FNLateNormalCut = 0
    '                _FNLateOtMin = 0 : _FNLateOtCut = 0
    '                _FNLateMorning = 0 : _FNLateAfternoon = 0
    '                _LateCutAbsent = 0 : _FNAbsent = 0
    '                _FNTimeMin = 0 : _FNOT1Min = 0

    '                _FNOT1_5Min = 0 : _FNOT2Min = 0
    '                _FNOT3Min = 0 : _FNOT4Min = 0
    '                _FNLateMMin = 0 : _FNLateAfMin = 0
    '                _FNRetireMMin = 0 : _FNRetireAfMin = 0
    '                _FNRetireNormalCut = 0 : _FNRetireNormalCut = 0
    '                _FNRetireOtMin = 0 : _FNRetireOtMin = 0
    '                _FNRetireOtCut = 0
    '                _FNLeavePay = 0 : _FNLeaveVacation = 0
    '                _FNLeaveNotPay = 0
    '                _LeaveCode = ""

    '                Dim _InOT As String = "" : Dim _OutOT As String = "" : Dim _Over As String = ""
    '                Dim _R() As DataRow = _dttran.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
    '                For Each R2 In _R

    '                    _FTShift = R2!FTShift.ToString
    '                    _FNTime = IIf(Val(R2!FNTime.ToString) < 0, 0, Val(R2!FNTime.ToString))
    '                    _FNTimeMin = IIf(Val(R2!FNTimeMin.ToString) < 0, 0, Val(R2!FNTimeMin.ToString))
    '                    _FNNotRegis = Val(R2!FNNotRegis.ToString)
    '                    _FNOT1 = Val(R2!FNOT1.ToString) : _FNOT1_5 = Val(R2!FNOT1_5.ToString) : _FNOT2 = Val(R2!FNOT2.ToString)
    '                    _FNOT3 = Val(R2!FNOT3.ToString) : _FNOT4 = Val(R2!FNOT3.ToString)
    '                    _FNOT1Min = Val(R2!FNOT1Min.ToString)
    '                    _FNOT1_5Min = Val(R2!FNOT1_5Min.ToString) : _FNOT2Min = Val(R2!FNOT2Min.ToString)
    '                    _FNOT3Min = Val(R2!FNOT3Min.ToString) : _FNOT4Min = Val(R2!FNOT4Min.ToString)


    '                    _InOT = R2!FTIn3.ToString
    '                    _OutOT = R2!FTOut3.ToString

    '                    _Over = R2!FTOverClock.ToString

    '                    If _FTShift <> "" And (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
    '                        _ShiftValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))


    '                        _TotalWorkDay = _TotalWorkDay + 1

    '                        _ShiftOTValue = Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FCShiftOTAmt FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift WHERE FNHSysShiftID=" & Val(_FTShift) & " ", Conn.DB.DataBaseName.DB_HR, "0"))

    '                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------
    '                        If _FTShift <> "" And (_FNTimeMin + _FNOT1_5Min + _FNOT3Min + _FNOT1Min + _FNOT2Min + _FNOT4Min) > 0 Then

    '                            _SPDateType = 0

    '                            _Holiday = ""

    '                            For Each IR As DataRow In _DTHoliday.Select("   FDHolidayDate  = '" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
    '                                _Holiday = "H"
    '                                Exit For
    '                            Next

    '                            If _Holiday <> "" Then _SPDateType = 2

    '                            Dim _StateLeaveOther As Boolean = False
    '                            Dim _StateLeavacation As Boolean = False
    '                            Dim _StateFTStaMaternityleaveNotpay As Boolean = False
    '                            Dim _SumLeave As Integer = 0

    '                            For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
    '                                _SumLeave = _SumLeave + Val(sR!FNTotalMinute)

    '                                If Val(sR!LeaveType) = 1 Then
    '                                    _StateLeavacation = True
    '                                Else
    '                                    _StateLeaveOther = True
    '                                End If

    '                                If Val(sR!LeaveType) = 2 Then
    '                                    _StateFTStaMaternityleaveNotpay = True
    '                                End If
    '                            Next

    '                            '--------------------------- ค่ากะ -------------------------------------
    '                            For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='001' ")
    '                                Dim _StatePass As Boolean = True

    '                                If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
    '                                If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
    '                                If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
    '                                If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
    '                                If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
    '                                If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
    '                                If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
    '                                    _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
    '                                End If

    '                                If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
    '                                If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

    '                                If RFin!FTOTTime.ToString <> "" And _StatePass Then
    '                                    Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
    '                                    Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

    '                                    If _STime.Length = _ETime.Length Then
    '                                        If IsDate(_STime) And IsDate(_ETime) Then
    '                                            If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
    '                                                _StatePass = False
    '                                            End If
    '                                        Else
    '                                            _StatePass = False
    '                                        End If
    '                                    Else
    '                                        _StatePass = False
    '                                    End If

    '                                End If

    '                                If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
    '                                    If Val(RFin!FNOTTimeM.ToString) > 0 Then

    '                                        If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
    '                                            If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
    '                                                _StatePass = False
    '                                            End If
    '                                        Else
    '                                            _StatePass = False
    '                                        End If

    '                                    End If
    '                                End If

    '                                If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

    '                                If _StatePass Then
    '                                    _ShiftAmt = _ShiftValue
    '                                End If
    '                            Next
    '                            '--------------------------- ค่ากะ -------------------------------------

    '                            '--------------------------- ค่ากะ OT ----------------------------------
    '                            For Each RFin As DataRow In _dtAddOtherAmtshift.Select("FTFinCode='007' ")
    '                                Dim _StatePass As Boolean = True

    '                                If _OutOT <> "" Then
    '                                    Beep()
    '                                End If
    '                                If RFin!FTStaLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= 0)
    '                                If RFin!FTStaCheckLate.ToString = "1" And _StatePass Then _StatePass = (_FNLateNormalMin <= Val(RFin!FTLateMin.ToString))
    '                                If RFin!FTStaAbsent.ToString = "1" And _StatePass Then _StatePass = (_FNAbsent <= 0)
    '                                If RFin!FTStaLeave.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeaveOther)
    '                                If RFin!FTStaVacation.ToString = "1" And _StatePass Then _StatePass = Not (_StateLeavacation)
    '                                If RFin!FTStaHoliday.ToString = "1" And _StatePass Then _StatePass = Not (_SPDateType = 0)
    '                                If RFin!FTStaCheckWorkTime.ToString = "1" And _StatePass Then
    '                                    _StatePass = Not ((_FNTimeMin + _FNOT1_5Min + _FNOT3Min) < Val(RFin!FTCheckWorkTimeMin.ToString))
    '                                End If

    '                                If RFin!FTStaCheckLeave.ToString = "1" And _StatePass Then _StatePass = Not ((_SumLeave) < Val(RFin!FTLeaveMin.ToString))
    '                                If RFin!FTStaMaternityleaveNotpay.ToString = "1" And _StatePass Then _StatePass = Not (_StateFTStaMaternityleaveNotpay)

    '                                If RFin!FTOTTime.ToString <> "" And _StatePass Then
    '                                    Dim _STime As String = (IIf(_Over > _OutOT, _ActualNextDate, _ActualDate)) & " " & _OutOT
    '                                    Dim _ETime As String = (IIf(_Over > RFin!FTOTTime.ToString, _ActualNextDate, _ActualDate)) & " " & RFin!FTOTTime.ToString.Replace(".", ":")

    '                                    If _STime.Length = _ETime.Length Then
    '                                        If IsDate(_STime) And IsDate(_ETime) Then
    '                                            If CDate(_STime) < CDate(_ETime) Or _InOT = "" Or _OutOT = "" Then
    '                                                _StatePass = False
    '                                            End If
    '                                        Else
    '                                            _StatePass = False
    '                                        End If
    '                                    Else
    '                                        _StatePass = False
    '                                    End If

    '                                End If

    '                                If RFin!FNOTTimeM.ToString <> "" And _StatePass Then
    '                                    If Val(RFin!FNOTTimeM.ToString) > 0 Then

    '                                        If _FNOT1 + _FNOT2 + _FNOT4 > 0 Then
    '                                            If (_FNOT1 + _FNOT2 + _FNOT4) < Val(RFin!FNOTTimeM.ToString) Then
    '                                                _StatePass = False
    '                                            End If
    '                                        Else
    '                                            _StatePass = False
    '                                        End If

    '                                    End If
    '                                End If


    '                                If RFin!FTStaVacation.ToString = "1" Then _StatePass = Not (_StateLeavacation)

    '                                If _StatePass Then
    '                                    _ShiftOTAmt = _ShiftOTValue
    '                                End If
    '                            Next
    '                            '--------------------------- ค่ากะ OT ----------------------------------

    '                        End If
    '                        '----------------- รายได้อื่นๆประจำวัน กรณีมาทำงาน---------------------

    '                    End If

    '                Next

    '                If _FTEmpState = "2" Or _FTEmpState = "3" Then
    '                    _FNSlaryPerMonth = CDbl(Format((_FCSalary), "0.00"))

    '                    If _FTEmpState = "3" Then
    '                        _FNSlaryPerMonth = CDbl(Format(_FNSlaryPerMonth / 2, "0.00"))
    '                    End If

    '                    _FNSlaryPerDay = CDbl(Format((_FCSalary) / 30, "0.00"))
    '                Else
    '                    _FNSlaryPerMonth = 0
    '                    _FNSlaryPerDay = CDbl(Format((_FCSalary), "0.00"))
    '                End If

    '                _FNSlaryPerHour = CDbl(Format(_FNSlaryPerDay / 8, "0.00000000000"))
    '                _FNSlaryPerMin = CDbl(Format(_FNSlaryPerHour / 60, "0.00000000000"))
    '                _FNSlaryOTPerMin = CDbl(Format(CDbl(Format((_FNSlaryPerDay) / 8, "0.00000000000")) / 60, "0.00000000000"))
    '                _FNSlaryOTPerHour = CDbl(Format((_FNSlaryPerDay) / 8, "0.00"))

    '                If _FTShift = "" Then
    '                    If _Holiday <> "" Then
    '                        _oHoliday = 1
    '                        _TotalHoliDay = _TotalHoliDay + 1
    '                    End If
    '                Else
    '                    If _Holiday <> "" Then
    '                        _oHoliday = 1
    '                        _TotalHoliDay = _TotalHoliDay + 1
    '                    End If

    '                    If (_FNTime + _FNOT1Min + _FNOT1_5Min + _FNOT2Min + _FNOT3Min + _FNOT4Min > 0) Then
    '                        _WorkDay = _WorkDay + 1
    '                    End If

    '                End If

    '                _FNLeavePay = 0 : _FNLeaveVacation = 0
    '                _FNLeaveNotPay = 0

    '                For Each sR As DataRow In _dtLeave.Select("FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'")
    '                    _LeaveCode = sR!LFTLeaveCode.ToString

    '                    _FNLeaveNotPay = Val(sR!FNTotalNotPayMinute.ToString)

    '                    If Val(sR!LeaveType) = 1 Then
    '                        _FNLeaveVacation = Val(sR!FNTotalPayMinute.ToString)
    '                    Else
    '                        _FNLeavePay = Val(sR!FNTotalPayMinute.ToString)
    '                    End If
    '                Next


    '                _FNEmpBaht = CDbl(Format((_FNTimeMin) * _FNSlaryPerMin, "0.00"))


    '                _FNEmpBahtOT1 = CDbl(Format((_FNOT1Min) * ((_FNSlaryOTPerMin) * _RateOT1), "0.000000"))


    '                If FTHldType = 1 And _FNOT3Min > 0 Then
    '                    _GAmtPlus = _GAmtPlus + _AmtPlus
    '                End If

    '                _FNEmpBahtOT15 = CDbl(Format((_FNOT1_5Min) * ((_FNSlaryOTPerMin) * _RateOT15), "0.00"))
    '                _FNEmpBahtOT2 = CDbl(Format((_FNOT2Min) * ((_FNSlaryOTPerMin) * _RateOT2), "0.00"))
    '                _FNEmpBahtOT3 = CDbl(Format((_FNOT3Min) * ((_FNSlaryOTPerMin) * _RateOT3), "0.00"))
    '                _FNEmpBahtOT4 = CDbl(Format((_FNOT4Min) * ((_FNSlaryOTPerMin) * _RateOT4), "0.00"))

    '                _nBahtAbsent = _nBahtAbsent + CDbl(Format(_FNAbsent * _FNSlaryPerMin, "0.00"))
    '                _LateCutAmt = _LateCutAmt + CDbl(Format((_FNLateNormalCut) * _FNSlaryPerMin, "0.00"))
    '                _LateCutAmtAbsent = _LateCutAmtAbsent + CDbl(Format((_LateCutAbsent) * _FNSlaryPerMin, "0.00"))

    '                _LaNotpaid = _LaNotpaid + CDbl(Format(_FNLeaveNotPay * _FNSlaryPerMin, "0.00"))
    '                Dim _TmpLapaidAmt As Double = CDbl(Format(_FNLeavePay * _FNSlaryPerMin, "0.00"))
    '                _Lapaid = _Lapaid + _TmpLapaidAmt

    '                If _LeaveCode <> "" And _FNLeaveVacation > 0 Then
    '                    _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
    '                Else
    '                    _FCPayVacationBaht = _FCPayVacationBaht + CDbl(Format(_FNLeaveVacation * _FNSlaryPerMin, "0.00"))
    '                End If

    '                If _FTStatePayHoliday <> "1" Then '--------- ไม่ได้ค่าจ้างวันหยุด---------------
    '                Else


    '                    If _FNLeaveNotPay <= 0 Then
    '                        If _TmpLapaidAmt <= 0 Then ' กรณีไม่มีลาจ่ายในวันนักขัต 
    '                            _HBaht = _HBaht + CDbl(Format(_oHoliday * _FNSlaryPerDay, "0.00"))
    '                        Else ' กรณีมีลาจ่ายในวันนักขัต  ไม่ได้นักขัต ได้ลาจ่าย
    '                            _TotalHoliDay = _TotalHoliDay - _oHoliday
    '                        End If
    '                    Else ' กรณีมีลาไม่จ่ายในวันนักขัต  ไม่ได้นักขัต
    '                        _TotalHoliDay = _TotalHoliDay - _oHoliday
    '                    End If

    '                End If

    '                _Qry = "Select Top 1 FNHSysEmpID, FTDateTrans "
    '                _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily AS T WITH(NOLOCK)"
    '                _Qry &= vbCrLf & " WHERE  FNHSysEmpID=" & Val(_FTEmpCode) & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'  "

    '                If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") <> "" Then
    '                    _Qry = "  UPDATE  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily "
    '                    _Qry &= vbCrLf & " SET FNAmtNormal=" & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) & ""
    '                    _Qry &= vbCrLf & ", FNAmtOT=" & (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & " "
    '                    _Qry &= vbCrLf & ", FNNetAmt=" & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) + (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & " "
    '                    _Qry &= vbCrLf & ", FTUpdUser='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "' "
    '                    _Qry &= vbCrLf & ", FTUpdDate=" & HI.UL.ULDate.FormatDateDB & " "
    '                    _Qry &= vbCrLf & ", FTUpdTime=" & HI.UL.ULDate.FormatTimeDB & " "
    '                    _Qry &= vbCrLf & " WHERE  FNHSysEmpID=" & Val(_FTEmpCode) & " AND FTDateTrans='" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'  "
    '                Else
    '                    _Qry = "  INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTWageDaily "
    '                    _Qry &= vbCrLf & " (FTInsUser, FTInsDate, FTInsTime,  FNHSysEmpID, FTDateTrans, FNAmtNormal, FNAmtOT, FNNetAmt, FNProNormal, FNProOT,FNProOther, FNNetProAmt) "
    '                    _Qry &= vbCrLf & " SELECT '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
    '                    _Qry &= vbCrLf & " ," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ""
    '                    _Qry &= vbCrLf & " ," & Val(_FTEmpCode) & ",'" & HI.UL.ULDate.ConvertEnDB(_FTStartCalculateDate) & "'"
    '                    _Qry &= vbCrLf & " ," & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) & ""
    '                    _Qry &= vbCrLf & " ," & (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & ""
    '                    _Qry &= vbCrLf & " ," & (_FNEmpBaht + _FNEmpBahtOT15 + _FNEmpBahtOT3) + (_FNEmpBahtOT1 + _FNEmpBahtOT2 + _FNEmpBahtOT4) & ""
    '                    _Qry &= vbCrLf & " ,0,0,0,0"
    '                End If

    '                HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_HR)

    '                _FTStartCalculateDate = HI.UL.ULDate.ConvertEnDB(HI.UL.ULDate.AddDay(_FTStartCalculateDate, 1))

    '            Loop

    '        End If

    '    Next

    '    Return True

    'End Function

#End Region

#Region "Procedure"

    Public Shared Sub LoadIncomeTax(ByVal FTEmpIdNo As String, ByVal PayYear As String, ByVal PayTerm As String,
                              ByRef BeforeIncome As Double, ByRef BeforeTax As Double, ByRef BeforeSocial As Double,
                              ByRef CountTerm As Double, ByRef _TotalCalContributedAcc As Double, ByRef _TotalCalWorkmenAcc As Double, FNHSysEmpID As Integer, Optional ByRef _TotalCalCmpContributedAcc As Double = 0, Optional ByRef BeforeContributed As Double = 0)

        Dim _Qry As String
        Dim _dt As DataTable

        _Qry = " SELECT  Count(P.FNTotalRecalTAX) as CTerm ,SUM(ISNULL(P.FNTotalRecalTAX,0)) AS FCTotalIncome"
        _Qry &= " , SUM(ISNULL(P.FNSocial,0)) AS FCSocial"
        _Qry &= ", SUM(ISNULL(P.FNTax,0)) AS FCTax"
        _Qry &= ", SUM(ISNULL(P.FNContributedAmt,0) ) AS FTContributedAmt"
        _Qry &= ", SUM(ISNULL(P.FNCmpContributedAmt,0) ) AS FNCmpContributedAmt"
        _Qry &= ", SUM(ISNULL(P.FNWorkmenAmt,0)  ) AS FTWorkmenAmt"
        _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll AS P WITH (NOLOCK)"
        _Qry &= vbCrLf & " WHERE P.FTPayYear = '" & (PayYear) & "'"
        _Qry &= vbCrLf & " AND P.FTPayTerm < '" & (PayTerm) & "'"
        _Qry &= vbCrLf & " AND ISNULL(P.FNTotalIncome,0) > 0"
        _Qry &= vbCrLf & " AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(FTEmpIdNo) & "' AND P.FTEmpIdNo <>'' "
        '_Qry &= vbCrLf & " AND P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(FTEmpIdNo) & "' AND P.FTEmpIdNo <>'' "

        _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each _Row As DataRow In _dt.Rows

            BeforeIncome = Val(_Row!FCTotalIncome.ToString)
            BeforeTax = Val(_Row!FCTax.ToString)
            BeforeSocial = Val(_Row!FCSocial.ToString)
            CountTerm = Val(_Row!CTerm.ToString)
            _TotalCalContributedAcc = Val(_Row!FTContributedAmt.ToString)
            _TotalCalWorkmenAcc = Val(_Row!FTWorkmenAmt.ToString)

            _TotalCalCmpContributedAcc = Val(_Row!FNCmpContributedAmt.ToString)

        Next

        _Qry = " SELECT TOP 1 P.FTEmpIdNo "
        _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll AS P WITH (NOLOCK)"
        _Qry &= vbCrLf & " WHERE P.FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(FTEmpIdNo) & "' AND P.FTEmpIdNo <>'' "

        _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)


        If _dt.Rows.Count <= 0 Then

            _Qry = " SELECT TOP 1  FTPayYear "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTPayRoll AS P WITH (NOLOCK)"
            _Qry &= vbCrLf & " WHERE FNHSysEmpID =" & Integer.Parse(Val(FNHSysEmpID)) & " "

            If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_HR, "") = "" Then
                '_Qry = "SELECT TOP 1 FCIncomeBefore,FCTaxBefore,FCSocialBefore FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee WITH(NOLOCK)  "
                '_Qry &= vbCrLf & "WHERE LEFT(FDDateStart,4) = '" & (PayYear) & "'"
                '_Qry &= vbCrLf & "AND FTEmpIdNo ='" & HI.UL.ULF.rpQuoted(FTEmpIdNo) & "' AND FTEmpIdNo <>''     "
                _Qry = "SELECT TOP 1 FCIncomeBefore,FCTaxBefore,FCSocialBefore,FCContributedBefore FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMEmployee WITH(NOLOCK)  "
                _Qry &= vbCrLf & " WHERE  FNHSysEmpID =" & Integer.Parse(Val(FNHSysEmpID)) & " AND FTTaxNo <>''     "

                _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

                For Each _Row As DataRow In _dt.Rows
                    BeforeIncome = BeforeIncome + Val(_Row!FCIncomeBefore.ToString)
                    BeforeTax = BeforeTax + Val(_Row!FCTaxBefore.ToString)
                    BeforeSocial = BeforeSocial + Val(_Row!FCSocialBefore.ToString)
                    BeforeContributed = BeforeContributed + Val(_Row!FCContributedBefore.ToString)
                Next
            End If

        End If

        _dt.Dispose()

    End Sub
    Private Shared Sub GetConfig(ByRef _RateNotStudied As Double, ByRef _RateStudy As Double, ByRef _MaxNumberOfChildren As Double,
           ByRef _DeducToTheFund As Double, ByRef _DeducToTheFundBoss As Double,
           ByRef _ContributedToTheFund As Double, ByRef _ContributedIncomeMax As Double)

        Dim _Qry As String
        Dim _Dt As DataTable

        _Qry = "    SELECT       FTKeyCode, FTKeyValue"
        _Qry &= vbCrLf & "   FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMConfig"
        _Qry &= vbCrLf & "  WHERE       (FTKeyCode = N'Cfg_ContributedDeducToTheFund') "
        _Qry &= vbCrLf & "  OR (FTKeyCode = N'Cfg_ContributedDeducToTheFundBoss') "
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ContributedIncomeMax') "
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ContributedToTheFund') "
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModChildAllowanceRateNotStudied')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModChildAllowanceRateNumberOfChildren')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModChildAllowanceRateStudy')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModDeductibleDonations')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModFatherReduction')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModInsurancePremiums')"
        _Qry &= vbCrLf & "  OR (FTKeyCode = N'Cfg_ModLendingforHousing')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModLTF')"
        _Qry &= vbCrLf & "  OR (FTKeyCode = N'Cfg_ModLTFChk')"
        _Qry &= vbCrLf & "  OR (FTKeyCode = N'Cfg_ModMateFatherReduction')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModMateMotherReduction')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModMotherReduction')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModPersonalExpen')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModPersonalExpenChk')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModRateReductionsByMarital')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModRateReductionsBySingle')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModRMF')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModRMFChk')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModSavingsFundOnly')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModSavingsFundOnlyChk')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModSavingsFundOnlytheExcess')"
        _Qry &= vbCrLf & " 	OR (FTKeyCode = N'Cfg_ModSavingsFundOnlytheExcessChk')"

        _Dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_HR)

        For Each R As DataRow In _Dt.Rows

            Select Case R!FTKeyCode.ToString.ToUpper
                '-------------ลดหย่อนบุตร-----------------
                Case "Cfg_ModChildAllowanceRateNotStudied".ToUpper 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
                    _RateNotStudied = Val(R!FTKeyValue.ToString)
                Case "Cfg_ModChildAllowanceRateStudy".ToUpper 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
                    _RateStudy = Val(R!FTKeyValue.ToString)
                Case "Cfg_ModChildAllowanceRateNumberOfChildren".ToUpper 'บุตรศึกษา อัตราลดหย่อนบุตร บุตร กำลังศึกษา คนละ
                    _MaxNumberOfChildren = Val(R!FTKeyValue.ToString)
                    '-------------ลดหย่อนบุตร-----------------
                    '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
                Case "Cfg_ContributedDeducToTheFund".ToUpper 'ลูกจ้าง
                    _DeducToTheFund = Val(R!FTKeyValue.ToString)
                Case "Cfg_ContributedDeducToTheFundBoss".ToUpper 'นายจ้าง
                    _DeducToTheFundBoss = Val(R!FTKeyValue.ToString)
                    '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
                    'กองทุนเงินทดแทน เปอร์เซนต์ จ่ายเงินสมทบเข้ากองทุน ของรายได้
                Case "Cfg_ContributedToTheFund".ToUpper ' %
                Case "Cfg_ContributedIncomeMax".ToUpper 'จำนวนเงินสูงสุด
                    'กองทุนเงินทดแทน เปอร์เซนต์ จ่ายเงินสมทบเข้ากองทุน ของรายได้
                Case "Cfg_ModDeductibleDonations".ToUpper ' % ลดหย่อนเงินบริจาค
                Case "Cfg_ModFatherReduction".ToUpper 'ลดหย่อนบิดา
                Case "Cfg_ModInsurancePremiums".ToUpper 'ค่าเบี้ยประกันชีวิตส่วนบุคคล
                Case "Cfg_ModLendingforHousing".ToUpper 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย
                Case "Cfg_ModLTF".ToUpper '% หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF)
                Case "Cfg_ModLTFChk".ToUpper 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
                Case "Cfg_ModMateFatherReduction".ToUpper 'ลดหย่อนบิดา คู่สมรส
                Case "Cfg_ModMateMotherReduction".ToUpper 'ลดหย่อนมารดา คู่สมรส
                Case "Cfg_ModMotherReduction".ToUpper 'ลดหย่อนมารดา
                Case "Cfg_ModPersonalExpen".ToUpper '% หัก ค่าใช้จ่ายส่วนบุคคล
                Case "Cfg_ModPersonalExpenChk".ToUpper ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน
                Case "Cfg_ModRateReductionsByMarital".ToUpper 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
                Case "Cfg_ModRateReductionsBySingle".ToUpper 'อัตราลดหย่อน ตาม สถานภาพ โสด 
                Case "Cfg_ModRMF".ToUpper ' % หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF)
                Case "Cfg_ModRMFChk".ToUpper ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 
                Case "Cfg_ModSavingsFundOnly".ToUpper 'เปอร์เซนต์ หักเงินสะสมกองทุนสำรองเลี้ยงชีพ ของค่าจ้าง
                Case "Cfg_ModSavingsFundOnlyChk".ToUpper 'หักเงินสะสมกองทุนสำรองเลี้ยงชีพไม่เกิน
                Case "Cfg_ModSavingsFundOnlytheExcess".ToUpper 'เงินสะสมกองทุนสำรองเลี้ยงชีพ เฉพาะส่วนที่เกิน
                Case "Cfg_ModSavingsFundOnlytheExcessChk".ToUpper 'เงินสะสมกองทุนสำรองเลี้ยงชีพ เฉพาะส่วนที่เกิน ไม่เกิน


                Case Else

            End Select
        Next
    End Sub

#End Region

#Region " Time Card  "



    Public Shared Sub ScanTwoTime(ByVal dt As DataTable, ByRef _ActualScanMIn As String, ByRef _ActualScanMOut As String,
                                     ByRef _ActualScanAIn As String, ByRef _ActualScanAOut As String, ByRef _ActualScanOTIn1 As String, ByRef _ActualScanOTOut1 As String,
                                     ByRef _ActualScanOTIn2 As String, ByRef _ActualScanOTOut2 As String, ByRef FTScanMIn As String,
                                     ByRef FTScanMOut As String, ByRef FTScanAIn As String, ByRef FTScanAOut As String, ByRef FTScanAOTIn As String,
                                     ByRef FTScanAOTOut As String, ByRef FTScanAOTIn2 As String, ByRef FTScanAOTOut2 As String,
                                     ByVal _CheckTimeMIn As String, ByVal _CheckTimeMOut As String, ByVal _CheckTimeAIn As String, ByVal _CheckTimeAOut As String, ByVal _CheckTimeOTIn1 As String, ByVal _CheckTimeOTOut1 As String,
                                     ByVal _CheckTimeOTIn2 As String, ByVal _CheckTimeOTOut2 As String,
                                     ByVal _ScanCardOverClock As String, ByVal _ScanTimeOverClock As String, ByVal _ActualNextDate As String, ByVal _ActualDate As String, ByRef _TmpScanIn As String, ByRef _TmpScanOut As String,
                                       _CheckTimeMInS As String, _CheckTimeMInE As String, _CheckTimeMOutS As String, _CheckTimeMOutE As String, _CheckTimeAInS As String, _CheckTimeAInE As String, _CheckTimeAOutS As String, _CheckTimeAOutE As String,
                                 FTScanMInM As String, FTScanMOutM As String, FTScanAInM As String, FTScanAOutM As String, FTScanAOTInM As String, FTScanAOTOutM As String)


        If FTScanMIn <> "" Then dt.Rows.Add(FTScanMIn)
        If FTScanMOut <> "" Then dt.Rows.Add((FTScanMOut))
        If FTScanAIn <> "" Then dt.Rows.Add((FTScanAIn))
        If FTScanAOut <> "" Then dt.Rows.Add((FTScanAOut))
        If FTScanAOTIn <> "" Then dt.Rows.Add((FTScanAOTIn))
        If FTScanAOTOut <> "" Then dt.Rows.Add((FTScanAOTOut))
        If FTScanAOTIn2 <> "" Then dt.Rows.Add((FTScanAOTIn2))
        If FTScanAOTOut2 <> "" Then dt.Rows.Add((FTScanAOTOut2))

        If FTScanMInM <> "" Then dt.Rows.Add(FTScanMInM)
        If FTScanMOutM <> "" Then dt.Rows.Add((FTScanMOutM))
        If FTScanAInM <> "" Then dt.Rows.Add((FTScanAInM))
        If FTScanAOutM <> "" Then dt.Rows.Add((FTScanAOutM))
        If FTScanAOTInM <> "" Then dt.Rows.Add((FTScanAOTInM))
        If FTScanAOTOutM <> "" Then dt.Rows.Add((FTScanAOTOutM))

        Dim _ActualTime As String
        Dim MinTime As String = ""
        Dim MaxTime As String = ""

        For Each Dr As DataRow In dt.Select("TTrans<>''", "TTrans")
            If MinTime = "" Then
                MinTime = Dr!TTrans.ToString
            End If
            MaxTime = Dr!TTrans.ToString
        Next

        _ActualScanMIn = ""
        _ActualScanMOut = ""
        _ActualScanAIn = ""
        _ActualScanAOut = ""
        _ActualScanOTIn1 = ""
        _ActualScanOTOut1 = ""
        _ActualScanOTIn2 = ""
        _ActualScanOTOut2 = ""
        FTScanMIn = ""
        FTScanMOut = ""
        FTScanAIn = ""
        FTScanAOut = ""
        FTScanAOTIn = ""
        FTScanAOTOut = ""
        FTScanAOTIn2 = ""
        FTScanAOTOut2 = ""

        For I As Integer = 1 To 2

            If I = 1 Then
                _ActualTime = MinTime
            Else
                If MinTime = MaxTime Then
                    Continue For
                End If
                _ActualTime = MaxTime
            End If

            If _ActualTime <> "" Then
                _TmpScanIn = IIf((_TmpScanIn = "" Or _TmpScanIn > _ActualTime), _ActualTime, _TmpScanIn)
                _TmpScanOut = IIf((_TmpScanOut = "" Or _TmpScanOut < _ActualTime), _ActualTime, _TmpScanOut)

                If I = 1 Then
                    '-------------เช้างานเช้า-------------
                    _ActualScanMIn = IIf((_ActualTime >= _ActualDate & "  " & Microsoft.VisualBasic.Right(_ScanCardOverClock, 5) And _ActualTime <= _CheckTimeMOut And _CheckTimeMIn <> ""), IIf(_ActualScanMIn < _ActualTime And _ActualScanMIn <> "", _ActualScanMIn, IIf(_ActualTime <= _CheckTimeMIn, _CheckTimeMIn, _ActualTime)), _ActualScanMIn)
                    FTScanMIn = _ActualTime

                    _ActualScanAIn = IIf((_ActualTime >= _CheckTimeMOut And _CheckTimeAIn <> "" And _ActualScanMOut <> ""), (_CheckTimeAIn), IIf(_ActualScanAIn = "" And _ActualTime >= _CheckTimeMOut, (_ActualTime), _ActualScanAIn))

                Else

                    If FTScanMIn <> _ActualTime Then

                        _ActualScanMOut = IIf((_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> ""), (_ActualTime), (IIf(_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "", (_CheckTimeMOut), _ActualScanMOut)))

                        '-------------เช้างานบ่าย-------------
                        _ActualScanAIn = IIf((_ActualTime >= _CheckTimeMOut And _CheckTimeAIn <> "" And _ActualScanMOut <> ""), (_CheckTimeAIn), IIf(_ActualScanAIn = "" And _ActualTime >= _CheckTimeMOut, (_ActualTime), _ActualScanAIn))
                        _ActualScanAOut = IIf((_ActualTime >= _CheckTimeAIn And _ActualTime <= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanAIn <> ""), (_ActualTime), (IIf(_ActualTime >= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanAIn <> "", (_CheckTimeAOut), _ActualScanAOut)))

                        If _CheckTimeOTIn1 = "" And _CheckTimeOTOut1 = "" Then
                            FTScanAOut = _ActualTime
                        End If

                        '-------------OT หลังเลิกงาน 1-------------
                        If _CheckTimeOTIn1 <> "" And _CheckTimeOTOut1 <> "" And (_CheckTimeOTIn2 = "" And _CheckTimeOTOut2 = "") Then
                            _ActualScanOTIn1 = IIf((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn1 <> "" And _ActualTime > _CheckTimeAIn), (_CheckTimeOTIn1), _ActualScanOTIn1)
                            _ActualScanOTOut1 = IIf((_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And _ActualScanOTIn1 <> "" And _ActualTime > _CheckTimeOTIn1), (_ActualTime), _ActualScanOTOut1)
                            FTScanAOTOut = _ActualTime
                        End If

                        '-------------OT หลังเลิกงาน 2-------------
                        If _CheckTimeOTIn2 <> "" And _CheckTimeOTOut2 <> "" Then
                            _ActualScanOTIn2 = IIf((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn2 <> "" And _ActualTime > _CheckTimeOTIn1), (_CheckTimeOTIn2), _ActualScanOTIn2)
                            _ActualScanOTOut2 = IIf((_ActualTime >= _CheckTimeOTIn2 And _CheckTimeOTOut2 <> "" And _ActualScanOTIn2 <> "" And _ActualTime > _CheckTimeOTIn2), (_ActualTime), _ActualScanOTOut2)

                            FTScanAOTOut2 = _ActualTime
                        End If

                    End If
                End If

            End If
        Next

        If _CheckTimeMInS <> "" And _CheckTimeMInE <> "" And _CheckTimeMOutS <> "" And _CheckTimeMOutE <> "" And _CheckTimeAInS <> "" And _CheckTimeAInE <> "" And _CheckTimeAOutS <> "" And _CheckTimeAOutE <> "" Then

            FTScanMIn = ""
            FTScanMOut = ""
            FTScanAIn = ""
            FTScanAOut = ""
            FTScanAOTIn = ""
            FTScanAOTOut = ""
            FTScanAOTIn2 = ""
            FTScanAOTOut2 = ""

            For I As Integer = 1 To 2
                If I = 1 Then
                    _ActualTime = MinTime
                Else
                    _ActualTime = MaxTime
                End If
                ' FTScanMIn = MinTime
                If _ActualTime <> "" Then
                    Select Case True
                        Case (_ActualTime >= _CheckTimeMInS And _ActualTime <= _CheckTimeMInE)
                            If _ActualTime < FTScanMIn Or FTScanMIn = "" Then
                                FTScanMIn = _ActualTime
                            End If

                        Case (_ActualTime >= _CheckTimeMOutS And _ActualTime <= _CheckTimeMOutE)
                            If _ActualTime > FTScanMOut Or FTScanMOut = "" Then
                                FTScanMOut = _ActualTime
                            End If

                        Case (_ActualTime >= _CheckTimeAInS And _ActualTime <= _CheckTimeAInE)
                            If _ActualTime < FTScanAIn Or FTScanAIn = "" Then
                                FTScanAIn = _ActualTime
                            End If

                        Case ((_ActualTime >= _CheckTimeAOutS And _CheckTimeOTIn1 = "") Or (_ActualTime >= _CheckTimeAOutS And _ActualTime <= _CheckTimeAOutE And _CheckTimeOTIn1 <> "" And _CheckTimeAOutE <= _CheckTimeOTIn1))
                            If _ActualTime > FTScanAOut Or FTScanAOut = "" Then
                                FTScanAOut = _ActualTime
                            End If

                        Case (_ActualTime >= _CheckTimeAOut And _CheckTimeOTIn1 <> "")

                            '-------------OT หลังเลิกงาน 1-------------
                            If (_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And (_ActualScanOTIn1 <> "" Or (_ActualScanOTIn1 = "" And (_ActualTime >= _CheckTimeOTOut1))) And _ActualTime > _CheckTimeOTIn1) And FTScanAOTIn <> _ActualTime And _CheckTimeOTIn2 = "" Then
                                If FTScanAOTOut = "" Then
                                    FTScanAOTOut = _ActualTime
                                ElseIf _CheckTimeOTIn2 = "" Then
                                    If _ActualTime > FTScanAOTOut Then
                                        FTScanAOTOut = _ActualTime
                                    End If
                                End If
                            End If

                            '-------------OT หลังเลิกงาน 2-------------
                            If ((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn2 <> "" And _ActualTime > _CheckTimeOTIn1)) Then
                                FTScanAOTIn2 = _ActualTime
                            End If

                            If ((_ActualTime >= _CheckTimeOTIn2 And _CheckTimeOTOut2 <> "" And _ActualScanOTIn2 <> "" And _ActualTime > _CheckTimeOTIn2)) And FTScanAOTIn2 <> _ActualTime Then
                                FTScanAOTIn2 = _ActualTime
                            End If
                    End Select
                End If
            Next
        End If

        _ActualScanMIn = Right(_ActualScanMIn, 5)
        _ActualScanMOut = Right(_ActualScanMOut, 5)
        _ActualScanAIn = Right(_ActualScanAIn, 5)
        _ActualScanAOut = Right(_ActualScanAOut, 5)
        _ActualScanOTIn1 = Right(_ActualScanOTIn1, 5)
        _ActualScanOTOut1 = Right(_ActualScanOTOut1, 5)
        _ActualScanOTIn2 = Right(_ActualScanOTIn2, 5)
        _ActualScanOTOut2 = Right(_ActualScanOTOut2, 5)

    End Sub

    Private Shared Sub ScanFourTime(ByVal dt As DataTable, ByRef _ActualScanMIn As String, ByRef _ActualScanMOut As String,
                                 ByRef _ActualScanAIn As String, ByRef _ActualScanAOut As String, ByRef _ActualScanOTIn1 As String, ByRef _ActualScanOTOut1 As String,
                                  ByRef _ActualScanOTIn2 As String, ByRef _ActualScanOTOut2 As String, ByRef FTScanMIn As String,
                                 ByRef FTScanMOut As String, ByRef FTScanAIn As String, ByRef FTScanAOut As String, ByRef FTScanAOTIn As String,
                                 ByRef FTScanAOTOut As String, ByRef FTScanAOTIn2 As String, ByRef FTScanAOTOut2 As String,
                                 ByVal _CheckTimeMIn As String, ByVal _CheckTimeMOut As String, ByVal _CheckTimeAIn As String, ByVal _CheckTimeAOut As String, ByVal _CheckTimeOTIn1 As String, ByVal _CheckTimeOTOut1 As String,
                                  ByVal _CheckTimeOTIn2 As String, ByVal _CheckTimeOTOut2 As String,
                                 ByVal _ScanCardOverClock As String, ByVal _ScanTimeOverClock As String, ByVal _ActualNextDate As String, ByVal _ActualDate As String, ByRef _TmpScanIn As String, ByRef _TmpScanOut As String,
                                     _CheckTimeMInS As String, _CheckTimeMInE As String, _CheckTimeMOutS As String, _CheckTimeMOutE As String, _CheckTimeAInS As String, _CheckTimeAInE As String, _CheckTimeAOutS As String, _CheckTimeAOutE As String,
                                 FTScanMInM As String, FTScanMOutM As String, FTScanAInM As String, FTScanAOutM As String, FTScanAOTInM As String, FTScanAOTOutM As String,
                                 ByRef FTScanOTInM As String, ByRef FTScanOTOutM As String, ByRef FTActualScanOTInM As String, ByRef FTActualScanOTOutM As String, FTCheckScanOTInM As String, FTCheckScanOTOutM As String)


        Dim _StateOTContinue As Boolean = False
        If _CheckTimeAOut = _CheckTimeOTIn1 Then
            _StateOTContinue = True
        End If

        Dim _ActualTime As String

        If FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "" Then
            If FTScanOTInM <> "" Then dt.Rows.Add((FTScanOTInM))
            If FTScanOTOutM <> "" Then dt.Rows.Add((FTScanOTOutM))


            If FTActualScanOTInM <> "" Then
                FTActualScanOTInM = Left(FTCheckScanOTInM, 10) & "  " & Right(FTActualScanOTInM, 5)
            End If

            If FTActualScanOTOutM <> "" Then
                FTActualScanOTOutM = Left(FTCheckScanOTInM, 10) & "  " & Right(FTActualScanOTOutM, 5)
            End If
        Else
            FTActualScanOTInM = ""
            FTActualScanOTOutM = ""
        End If

        If FTScanMIn <> "" Then dt.Rows.Add(FTScanMIn)
        If FTScanMOut <> "" Then dt.Rows.Add((FTScanMOut))
        If FTScanAIn <> "" Then dt.Rows.Add((FTScanAIn))
        If FTScanAOut <> "" Then dt.Rows.Add((FTScanAOut))
        If FTScanAOTIn <> "" Then dt.Rows.Add((FTScanAOTIn))
        If FTScanAOTOut <> "" Then dt.Rows.Add((FTScanAOTOut))
        If FTScanAOTIn2 <> "" Then dt.Rows.Add((FTScanAOTIn2))
        If FTScanAOTOut2 <> "" Then dt.Rows.Add((FTScanAOTOut2))

        If FTScanMInM <> "" Then dt.Rows.Add(FTScanMInM)
        If FTScanMOutM <> "" Then dt.Rows.Add((FTScanMOutM))
        If FTScanAInM <> "" Then dt.Rows.Add((FTScanAInM))
        If FTScanAOutM <> "" Then dt.Rows.Add((FTScanAOutM))
        If FTScanAOTInM <> "" Then dt.Rows.Add((FTScanAOTInM))
        If FTScanAOTOutM <> "" Then dt.Rows.Add((FTScanAOTOutM))


        _ActualScanMIn = ""
        _ActualScanMOut = ""
        _ActualScanAIn = ""
        _ActualScanAOut = ""
        _ActualScanOTIn1 = ""
        _ActualScanOTOut1 = ""
        _ActualScanOTIn2 = ""
        _ActualScanOTOut2 = ""
        FTScanMIn = ""
        FTScanMOut = ""
        FTScanAIn = ""
        FTScanAOut = ""
        FTScanAOTIn = ""
        FTScanAOTOut = ""
        FTScanAOTIn2 = ""
        FTScanAOTOut2 = ""
        FTScanOTInM = ""
        FTScanOTOutM = ""

        For Each Dr As DataRow In dt.Select("TTrans<>''", "TTrans")

            _ActualTime = Dr!TTrans.ToString

            If _ActualTime <> "" Then

                _TmpScanIn = IIf((_TmpScanIn = "" Or _TmpScanIn > _ActualTime), _ActualTime, _TmpScanIn)
                _TmpScanOut = IIf((_TmpScanOut = "" Or _TmpScanOut < _ActualTime), _ActualTime, _TmpScanOut)


                If FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "" Then

                    '-------------เช้างาน OT เช้า------------
                    If _ActualTime < FTActualScanOTInM Or FTActualScanOTInM = "" Then
                        If (_ActualTime >= _ScanCardOverClock And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "") Then
                            If (FTActualScanOTInM < _ActualTime And FTActualScanOTInM <> "") = False Then
                                If (_ActualTime <= FTCheckScanOTInM) Then
                                    FTActualScanOTInM = FTCheckScanOTInM
                                Else
                                    FTActualScanOTInM = _ActualTime
                                End If

                                If _ActualTime < FTScanOTInM Or FTScanOTInM = "" Then
                                    FTScanOTInM = _ActualTime
                                End If

                                '-------------เช้างานเช้า------------
                                If FTCheckScanOTOutM = _CheckTimeMIn Then
                                    _ActualScanMIn = _CheckTimeMIn
                                    FTScanMIn = _CheckTimeMIn
                                End If

                                '-------------เช้างานเช้า------------

                            End If
                        End If
                    End If

                    If _ActualTime <> FTScanOTInM And _ActualTime > FTCheckScanOTInM Then
                        If (_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "") Then 'If (_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "") Then
                            FTActualScanOTOutM = _ActualTime

                            If FTScanOTOutM = "" Then FTScanOTOutM = _ActualTime
                        Else
                            If (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTCheckScanOTOutM = _CheckTimeMIn) Then 'If (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTOutM <> "" And FTCheckScanOTOutM = _CheckTimeMIn) Then
                                FTActualScanOTOutM = FTCheckScanOTOutM

                                If FTScanOTOutM = "" Then FTScanOTOutM = FTCheckScanOTOutM
                            ElseIf (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTCheckScanOTOutM <> _CheckTimeMIn And _ActualTime < _CheckTimeMIn And FTActualScanOTOutM = "") Then '
                                FTActualScanOTOutM = FTCheckScanOTOutM

                                If FTScanOTOutM = "" Then FTScanOTOutM = _ActualTime
                            End If
                        End If


                    End If

                    '-------------เช้างาน OT เช้า------------


                    '-------------เช้างานเช้า------------
                    If FTCheckScanOTOutM = _CheckTimeMIn And _ActualTime > _CheckTimeMIn Then
                        _ActualScanMIn = _CheckTimeMIn
                        FTScanMIn = _CheckTimeMIn
                    Else
                        If (_ActualTime < _ActualScanMIn Or _ActualScanMIn = "") And _ActualTime > FTCheckScanOTOutM Then
                            If (_ActualTime >= _ScanCardOverClock And _ActualTime <= _CheckTimeMOut And _CheckTimeMIn <> "") Then
                                If (_ActualScanMIn < _ActualTime And _ActualScanMIn <> "") = False Then
                                    If (_ActualTime <= _CheckTimeMIn) Then
                                        _ActualScanMIn = _CheckTimeMIn
                                    Else
                                        _ActualScanMIn = _ActualTime
                                    End If

                                    If (_ActualTime < FTScanMIn Or FTScanMIn = "" Or FTScanMIn <= FTScanOTOutM Or FTScanMIn = FTActualScanOTOutM Or (_ActualTime > FTScanMIn And _ActualTime < _CheckTimeMIn And FTCheckScanOTOutM <> _CheckTimeMIn)) And _ActualTime > FTCheckScanOTOutM Then
                                        FTScanMIn = _ActualTime
                                    End If

                                End If
                            End If
                        Else
                            If (_ActualTime <= _CheckTimeMIn Or _ActualScanMIn = "") And _ActualTime > FTCheckScanOTOutM Then
                                If _ActualTime <= _ActualScanMIn Then
                                    If (_ActualTime <= _CheckTimeMIn) Then
                                        _ActualScanMIn = _CheckTimeMIn
                                    Else
                                        _ActualScanMIn = _ActualTime
                                    End If

                                    If (_ActualTime < FTScanMIn Or FTScanMIn = "" Or FTScanMIn <= FTScanOTOutM) And _ActualTime > FTCheckScanOTOutM Then
                                        FTScanMIn = _ActualTime
                                    End If
                                End If
                            End If
                        End If
                    End If

                    '-------------เช้างานเช้า------------
                    '-------------ออกงานเช้า------------
                    If _ActualTime <> FTScanMIn Then
                        If (_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
                            _ActualScanMOut = _ActualTime
                        Else
                            If (_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
                                _ActualScanMOut = _CheckTimeMOut
                            End If
                        End If
                    End If
                    '-------------ออกงานเช้า------------
                Else

                    '-------------เช้างานเช้า------------
                    If _ActualTime < _ActualScanMIn Or _ActualScanMIn = "" Then
                        If (_ActualTime >= _ScanCardOverClock And _ActualTime <= _CheckTimeMOut And _CheckTimeMIn <> "") Then
                            If (_ActualScanMIn < _ActualTime And _ActualScanMIn <> "") = False Then
                                If (_ActualTime <= _CheckTimeMIn) Then
                                    _ActualScanMIn = _CheckTimeMIn
                                Else
                                    _ActualScanMIn = _ActualTime
                                End If

                                If _ActualTime < FTScanMIn Or FTScanMIn = "" Then
                                    FTScanMIn = _ActualTime
                                End If

                            End If
                        End If
                    End If

                    If _ActualTime <> FTScanMIn Then
                        If (_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
                            _ActualScanMOut = _ActualTime
                        Else
                            If (_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
                                _ActualScanMOut = _CheckTimeMOut
                            End If
                        End If
                    End If
                    '-------------เช้างานเช้า------------

                End If


                '-------------เช้างานบ่าย------------
                If _ActualTime <> FTScanMIn Then
                    If (_ActualTime > _CheckTimeMOut And _CheckTimeAIn <> "" And _ActualScanMOut <> "") Then
                        _ActualScanAIn = _CheckTimeAIn

                    Else
                        If (_ActualScanAIn = "" And _ActualTime >= _CheckTimeMOut) Then
                            _ActualScanAIn = _ActualTime
                        End If
                    End If
                End If

                If _ActualTime <> FTScanMIn And FTScanMIn <> "" Then


                    Select Case True
                        'Case ((_ActualTime >= _CheckTimeAOutS And _CheckTimeOTIn1 = "") Or (_ActualTime >= _CheckTimeAOutS And _ActualTime <= _CheckTimeAOutE And _CheckTimeOTIn1 <> "" And ((_CheckTimeAOutE <= _CheckTimeOTIn1 And _StateOTContinue = False) Or (_StateOTContinue = True And _CheckTimeAOutE <= _CheckTimeOTIn1 And _ActualScanAOut = ""))))

                        '    If (_ActualTime >= _CheckTimeAOut) Then
                        '        _ActualScanAOut = _CheckTimeAOut
                        '    Else
                        '        If _ActualTime < _CheckTimeAOut Or FTScanAOut = "" Then
                        '            _ActualScanAOut = _ActualTime
                        '        End If
                        '    End If

                        '    If _ActualTime > FTScanAOut Or FTScanAOut = "" Then
                        '        FTScanAOut = _ActualTime
                        '    End If
                        Case ((_ActualTime >= _CheckTimeAOutS And _CheckTimeOTIn1 = "") Or (_ActualTime >= _CheckTimeAOutS And _ActualTime <= _CheckTimeAOutE And _CheckTimeOTIn1 <> "" And ((_CheckTimeAOutE <= _CheckTimeOTIn1 And _StateOTContinue = False) Or (_StateOTContinue = True And _CheckTimeAOutE <= _CheckTimeOTIn1 And _ActualScanAOut = ""))))

                            If (_ActualTime >= _CheckTimeAOut) Then
                                _ActualScanAOut = _CheckTimeAOut
                            Else
                                If _ActualTime < _CheckTimeAOut Or FTScanAOut = "" Then
                                    _ActualScanAOut = _ActualTime
                                End If
                            End If

                            If _ActualTime > FTScanAOut Or FTScanAOut = "" Then
                                FTScanAOut = _ActualTime
                            End If

                    End Select



                    '    If (_ActualTime >= _CheckTimeAIn And _ActualTime <= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanMIn <> "") Then
                    '        _ActualScanAOut = _ActualTime

                    '        If FTScanAOut = "" Then
                    '            FTScanAOut = _ActualTime
                    '        ElseIf _CheckTimeOTIn1 = "" Then
                    '            If _ActualTime > FTScanAOut Then
                    '                FTScanAOut = _ActualTime
                    '            End If
                    '        ElseIf _ActualTime <= _CheckTimeOTIn1 And FTScanAOTIn = "" Then
                    '            FTScanAOut = _ActualTime

                    '        End If

                    '    Else
                    '        If (_ActualTime >= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanMIn <> "" And (_ActualScanAOut > _ActualTime Or _ActualScanAOut = "")) Then
                    '            _ActualScanAOut = _CheckTimeAOut

                    '            If FTScanAOut = "" Then
                    '                ' FTScanAOut = _ActualTime
                    '                If _CheckTimeOTIn1 <> _CheckTimeAOut Then
                    '                    FTScanAOut = _ActualTime
                    '                Else
                    '                    FTScanAOut = _CheckTimeAOut
                    '                End If
                    '            ElseIf _CheckTimeOTIn1 = "" Then
                    '                If _ActualTime > FTScanAOut Then
                    '                    ' FTScanAOut = _ActualTime
                    '                    If _CheckTimeOTIn1 <> _CheckTimeAOut Then
                    '                        FTScanAOut = _ActualTime
                    '                    Else
                    '                        FTScanAOut = _CheckTimeAOut
                    '                    End If
                    '                End If
                    '            End If
                    '            'Else
                    '        End If
                    '        If _CheckTimeOTIn1 = "" Then
                    '            If _ActualTime > FTScanAOut Then
                    '                'FTScanAOut = _ActualTime
                    '                If _CheckTimeOTIn1 <> _CheckTimeAOut Then
                    '                    FTScanAOut = _ActualTime
                    '                Else
                    '                    FTScanAOut = _CheckTimeAOut
                    '                End If
                    '            End If
                    '        End If
                    '    End If
                    'ElseIf FTScanMIn = "" Then

                    '    If (_ActualTime >= _CheckTimeAIn And _ActualTime <= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanMIn = "") Then
                    '        _ActualScanAOut = _ActualTime

                    '        If FTScanAOut = "" Then

                    '            If _CheckTimeOTIn1 <> _CheckTimeAOut Then
                    '                FTScanAOut = _ActualTime
                    '            Else
                    '                FTScanAOut = _CheckTimeAOut
                    '            End If


                    '        ElseIf _CheckTimeOTIn1 = "" Then
                    '            If _ActualTime > FTScanAOut Then
                    '                ' FTScanAOut = _ActualTime
                    '                If _CheckTimeOTIn1 <> _CheckTimeAOut Then
                    '                    FTScanAOut = _ActualTime
                    '                Else
                    '                    FTScanAOut = _CheckTimeAOut
                    '                End If
                    '            End If
                    '        End If

                    '    Else
                    '        If (_ActualTime >= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanMIn = "") Then
                    '            _ActualScanAOut = _CheckTimeAOut

                    '            If FTScanAOut = "" Then
                    '                FTScanAOut = _ActualTime
                    '            ElseIf _CheckTimeOTIn1 = "" Then
                    '                If _ActualTime > FTScanAOut Then
                    '                    FTScanAOut = _ActualTime
                    '                End If
                    '            End If
                    '        End If
                    '    End If

                End If




                '-------------OT หลังเลิกงาน 1-------------

                If (_ActualTime > _CheckTimeAOut And _CheckTimeOTIn1 <> "" And _ActualTime > _CheckTimeAIn) And _ActualTime <> FTScanMIn And _ActualTime <> FTScanAIn And FTScanAOut <> _ActualTime And FTScanMOut <> _ActualTime And _ActualScanOTIn1 = "" Then
                    If (_CheckTimeAOut = _CheckTimeOTIn1) Then
                        FTScanAOut = _CheckTimeAOut
                    End If

                    If _ActualTime > _CheckTimeOTIn1 Then

                        If _CheckTimeOTIn1 <> _CheckTimeAOut Then
                            _ActualScanOTIn1 = _ActualTime
                        Else
                            _ActualScanOTIn1 = _CheckTimeOTIn1
                        End If

                        If FTScanAOTIn = "" Then

                            If _CheckTimeOTIn1 <> _CheckTimeAOut Then
                                FTScanAOTIn = _ActualTime
                            Else
                                FTScanAOTIn = _CheckTimeOTIn1
                            End If


                        End If
                    Else
                        _ActualScanOTIn1 = _CheckTimeOTIn1

                        If FTScanAOTIn = "" Then
                            FTScanAOTIn = _ActualTime
                        End If
                    End If



                End If

                If (_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And _ActualScanOTIn1 <> "" And _ActualTime > _CheckTimeOTIn1) And FTScanAOTIn <> _ActualTime Then
                    If _CheckTimeOTOut1 <= _ActualTime Then
                        _ActualScanOTOut1 = _CheckTimeOTOut1
                    Else
                        _ActualScanOTOut1 = _ActualTime
                    End If

                    If FTScanAOTOut = "" Then
                        FTScanAOTOut = _ActualTime
                    ElseIf _CheckTimeOTIn2 = "" Then
                        If _ActualTime > FTScanAOTOut Then
                            FTScanAOTOut = _ActualTime
                        End If
                    End If
                End If

                '-------------OT หลังเลิกงาน 2-------------
                If ((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn2 <> "" And _ActualTime > _CheckTimeOTIn1)) Then
                    _ActualScanOTIn2 = _CheckTimeOTIn2
                    FTScanAOTIn2 = _ActualTime
                End If

                If ((_ActualTime >= _CheckTimeOTIn2 And _CheckTimeOTOut2 <> "" And _ActualScanOTIn2 <> "" And _ActualTime > _CheckTimeOTIn2)) And FTScanAOTIn2 <> _ActualTime Then
                    _ActualScanOTOut2 = _ActualTime

                    FTScanAOTIn2 = _ActualTime
                End If


            End If
        Next

        FTScanOTInM = Right(FTScanOTInM, 5)
        FTScanOTOutM = Right(FTScanOTOutM, 5)
        FTActualScanOTInM = Right(FTActualScanOTInM, 5)
        FTActualScanOTOutM = Right(FTActualScanOTOutM, 5)


        If FTActualScanOTInM = FTActualScanOTOutM Then
            FTActualScanOTOutM = ""
        End If
        If FTScanOTOutM = "" Then FTScanOTOutM = FTActualScanOTOutM

        'เข้าโอทีเช้ามากกว่าเท่ากับ 2 ชม. ให้พัก 30 นาที ก่อนเข้างานตอนเช้า 20161201  confrim by surachai & anuwat HR 91

        Dim TaltalOtM As Integer = 0

        If FTCheckScanOTOutM <> "" And FTCheckScanOTInM <> "" And FTCheckScanOTOutM = _CheckTimeMIn And FTActualScanOTInM <> "" And FTActualScanOTOutM <> "" Then
            If TaltalOtM = 0 Then
                If FTActualScanOTInM <> "" And FTActualScanOTOutM <> "" Then

                    Try
                        TaltalOtM = DateDiff(DateInterval.Minute, DateTime.Parse(FTScanOTInM), DateTime.Parse(FTScanOTOutM))
                    Catch ex As Exception
                        TaltalOtM = 0
                    End Try

                End If
            End If
            If TaltalOtM >= 120 Then
                If TaltalOtM >= 120 Then FTScanMIn = Left(FTScanMIn, 10) & " " & DateTime.Parse(FTScanMIn).AddMinutes(30).ToString("HH:mm")
                'If TaltalOtM >= 120 Then FTScanMIn = Left(FTScanMIn, 10) & " " & Right("0" & Mid(UL.ULF.rpQuoted(DateTime.Parse(FTScanMIn).AddMinutes(30)), 12, 4), 5)
            End If
        End If
        _ActualScanMIn = IIf(TaltalOtM >= 120, Right(FTScanMIn, 5), Right(_ActualScanMIn, 5))
        ' _ActualScanMIn = Right(_ActualScanMIn, 5)
        _ActualScanMOut = Right(_ActualScanMOut, 5)
        _ActualScanAIn = Right(_ActualScanAIn, 5)
        _ActualScanAOut = Right(_ActualScanAOut, 5)
        _ActualScanOTIn1 = Right(_ActualScanOTIn1, 5)
        _ActualScanOTOut1 = Right(_ActualScanOTOut1, 5)
        _ActualScanOTIn2 = Right(_ActualScanOTIn2, 5)
        _ActualScanOTOut2 = Right(_ActualScanOTOut2, 5)


    End Sub




    Private Shared Sub ScanSixTime(ByVal dt As DataTable, ByRef _ActualScanMIn As String, ByRef _ActualScanMOut As String,
                                 ByRef _ActualScanAIn As String, ByRef _ActualScanAOut As String, ByRef _ActualScanOTIn1 As String, ByRef _ActualScanOTOut1 As String,
                                 ByRef _ActualScanOTIn2 As String, ByRef _ActualScanOTOut2 As String, ByRef FTScanMIn As String,
                                 ByRef FTScanMOut As String, ByRef FTScanAIn As String, ByRef FTScanAOut As String, ByRef FTScanAOTIn As String,
                                 ByRef FTScanAOTOut As String, ByRef FTScanAOTIn2 As String, ByRef FTScanAOTOut2 As String,
                                 ByVal _CheckTimeMIn As String, ByVal _CheckTimeMOut As String, ByVal _CheckTimeAIn As String, ByVal _CheckTimeAOut As String, ByVal _CheckTimeOTIn1 As String, ByVal _CheckTimeOTOut1 As String,
                                 ByVal _CheckTimeOTIn2 As String, ByVal _CheckTimeOTOut2 As String,
                                 ByVal _ScanCardOverClock As String, ByVal _ScanTimeOverClock As String, ByVal _ActualNextDate As String, ByVal _ActualDate As String, ByRef _TmpScanIn As String, ByRef _TmpScanOut As String,
                                 _CheckTimeMInS As String, _CheckTimeMInE As String, _CheckTimeMOutS As String, _CheckTimeMOutE As String, _CheckTimeAInS As String, _CheckTimeAInE As String, _CheckTimeAOutS As String, _CheckTimeAOutE As String,
                                 FTScanMInM As String, FTScanMOutM As String, FTScanAInM As String, FTScanAOutM As String, FTScanAOTInM As String, FTScanAOTOutM As String,
                                  ByRef FTScanOTInM As String, ByRef FTScanOTOutM As String, ByRef FTActualScanOTInM As String, ByRef FTActualScanOTOutM As String, FTCheckScanOTInM As String, FTCheckScanOTOutM As String)

        Try
            Dim _StateOTContinue As Boolean = False
            Dim TaltalOtM As Integer = 0

            If _CheckTimeAOut = _CheckTimeOTIn1 Then
                _StateOTContinue = True
            End If

            Dim _ActualTime As String
            dt.BeginInit()

            If FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "" Then
                If FTScanOTInM <> "" Then dt.Rows.Add((FTScanOTInM))
                If FTScanOTOutM <> "" Then dt.Rows.Add((FTScanOTOutM))

                If FTActualScanOTInM <> "" Then
                    FTActualScanOTInM = Left(FTCheckScanOTInM, 10) & "  " & Right(FTActualScanOTInM, 5)
                End If

                If FTActualScanOTOutM <> "" Then
                    FTActualScanOTOutM = Left(FTCheckScanOTInM, 10) & "  " & Right(FTActualScanOTOutM, 5)
                End If

            Else

                FTActualScanOTInM = ""
                FTActualScanOTOutM = ""
            End If


            If FTScanMIn <> "" Then dt.Rows.Add(FTScanMIn)
            If FTScanMOut <> "" Then dt.Rows.Add((FTScanMOut))
            If FTScanAIn <> "" Then dt.Rows.Add((FTScanAIn))
            If FTScanAOut <> "" Then dt.Rows.Add((FTScanAOut))
            If FTScanAOTIn <> "" Then dt.Rows.Add((FTScanAOTIn))
            If FTScanAOTOut <> "" Then dt.Rows.Add((FTScanAOTOut))
            If FTScanAOTIn2 <> "" Then dt.Rows.Add((FTScanAOTIn2))
            If FTScanAOTOut2 <> "" Then dt.Rows.Add((FTScanAOTOut2))

            If FTScanMInM <> "" Then dt.Rows.Add(FTScanMInM)
            If FTScanMOutM <> "" Then dt.Rows.Add((FTScanMOutM))
            If FTScanAInM <> "" Then dt.Rows.Add((FTScanAInM))
            If FTScanAOutM <> "" Then dt.Rows.Add((FTScanAOutM))
            If FTScanAOTInM <> "" Then dt.Rows.Add((FTScanAOTInM))
            If FTScanAOTOutM <> "" Then dt.Rows.Add((FTScanAOTOutM))


            If (_StateOTContinue) Then
                Dim _MaxTime As String = ""
                For Each Dr As DataRow In dt.Select("TTrans<>''", "TTrans DESC")
                    _MaxTime = Dr!TTrans.ToString
                    Exit For
                Next

                If ((_MaxTime >= _CheckTimeOTOut1) And (FTScanAOut = "" And FTScanAOTIn = "")) Then
                    FTScanAOut = _CheckTimeAOut
                    FTScanAOTIn = _CheckTimeOTIn1

                    _CheckTimeAOutE = _CheckTimeAOut

                    If FTScanAOut <> "" Then dt.Rows.Add((FTScanAOut))
                    If FTScanAOTIn <> "" Then dt.Rows.Add((FTScanAOTIn))

                End If

            End If





            dt.EndInit()

            _ActualScanMIn = ""
            _ActualScanMOut = ""
            _ActualScanAIn = ""
            _ActualScanAOut = ""
            _ActualScanOTIn1 = ""
            _ActualScanOTOut1 = ""
            _ActualScanOTIn2 = ""
            _ActualScanOTOut2 = ""
            FTScanMIn = ""
            FTScanMOut = ""
            FTScanAIn = ""
            FTScanAOut = ""
            FTScanAOTIn = ""
            FTScanAOTOut = ""
            FTScanAOTIn2 = ""
            FTScanAOTOut2 = ""
            FTScanOTInM = ""
            FTScanOTOutM = ""

            For Each Dr As DataRow In dt.Select("TTrans<>''", "TTrans")

                _ActualTime = Dr!TTrans.ToString

                If _ActualTime <> "" Then
                    If FTActualScanOTInM <> "" And FTActualScanOTOutM <> "" Then
                        TaltalOtM = DateDiff(DateInterval.Minute, DateTime.Parse(FTCheckScanOTInM), DateTime.Parse(FTCheckScanOTOutM))
                    End If

                    _TmpScanIn = IIf((_TmpScanIn = "" Or _TmpScanIn > _ActualTime), _ActualTime, _TmpScanIn)
                    _TmpScanOut = IIf((_TmpScanOut = "" Or _TmpScanOut < _ActualTime), _ActualTime, _TmpScanOut)



                    If FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "" Then

                        '-------------เช้างาน OT เช้า------------
                        If (_ActualTime <= FTActualScanOTInM Or FTActualScanOTInM = "") And _ActualTime <= FTCheckScanOTOutM Then
                            If (_ActualTime >= _ScanCardOverClock And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "") Then
                                If (FTActualScanOTInM < _ActualTime And FTActualScanOTInM <> "") = False Then
                                    If (_ActualTime <= FTCheckScanOTInM) Then
                                        FTActualScanOTInM = _ActualTime 'FTCheckScanOTInM
                                    Else
                                        FTActualScanOTInM = _ActualTime
                                    End If

                                    If _ActualTime < FTScanOTInM Or FTScanOTInM = "" Then
                                        FTScanOTInM = _ActualTime
                                    End If

                                    '-------------เช้างานเช้า------------
                                    _ActualScanMIn = _CheckTimeMIn
                                    FTScanMIn = _CheckTimeMIn
                                    '-------------เช้างานเช้า------------

                                End If
                            End If
                        End If

                        If _ActualTime <> FTScanOTInM Then
                            'If (_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "") Then
                            '    FTActualScanOTOutM = _ActualTime
                            'Else
                            '    If (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTOutM <> "") Then
                            '        FTActualScanOTOutM = FTCheckScanOTOutM
                            '    End If
                            'End If


                            If (_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "") Then 'If (_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "") Then
                                FTActualScanOTOutM = _ActualTime

                                If FTScanOTOutM = "" Then FTScanOTOutM = _ActualTime
                            Else
                                If (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTCheckScanOTOutM = _CheckTimeMIn) Then 'If (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTOutM <> "" And FTCheckScanOTOutM = _CheckTimeMIn) Then
                                    FTActualScanOTOutM = FTCheckScanOTOutM

                                    If FTScanOTOutM = "" Then FTScanOTOutM = FTCheckScanOTOutM

                                End If
                            End If


                        End If

                        '-------------เช้างาน OT เช้า------------

                        '-------------ออกงานเช้า------------
                        If _ActualTime <> FTScanMIn Then
                            If (_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
                                _ActualScanMOut = _ActualTime
                            Else
                                If (_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
                                    _ActualScanMOut = _CheckTimeMOut
                                End If
                            End If
                        End If
                        '-------------ออกงานเช้า------------

                    End If


                    Select Case True
                        Case (_ActualTime >= _CheckTimeMInS And _ActualTime <= _CheckTimeMInE)
                            If (_ActualTime <= _CheckTimeMIn) Then
                                _ActualScanMIn = _CheckTimeMIn
                            Else
                                If _ActualTime < FTScanMIn Or FTScanMIn = "" Then
                                    _ActualScanMIn = _ActualTime
                                End If
                            End If

                            If _ActualTime < FTScanMIn Or FTScanMIn = "" Then

                                If FTCheckScanOTOutM <> "" And FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> _CheckTimeMIn And _ActualTime <> FTActualScanOTOutM Then
                                    FTScanMIn = _ActualTime
                                Else
                                    If FTCheckScanOTInM = "" Then
                                        FTScanMIn = _ActualTime
                                    End If

                                End If

                            End If

                        Case (_ActualTime >= _CheckTimeMOutS And _ActualTime <= _CheckTimeMOutE And FTScanMOut = "")


                            If (_ActualTime >= _CheckTimeMOut) Then
                                _ActualScanMOut = _CheckTimeMOut
                            Else
                                If _ActualTime < _CheckTimeMOut Or FTScanMOut = "" Then
                                    _ActualScanMOut = _ActualTime
                                End If
                            End If

                            If _ActualTime > FTScanMOut Or FTScanMOut = "" Then
                                FTScanMOut = _ActualTime
                            End If

                        Case (_ActualTime >= _CheckTimeAInS And _ActualTime <= _CheckTimeAInE)

                            If (_ActualTime <= _CheckTimeAIn) Then
                                _ActualScanAIn = _CheckTimeAIn
                            Else
                                If _ActualTime < FTScanAIn Or FTScanAIn = "" Then
                                    _ActualScanAIn = _ActualTime
                                End If
                            End If

                            If _ActualTime < FTScanAIn Or FTScanAIn = "" Then
                                FTScanAIn = _ActualTime
                            End If

                        Case ((_ActualTime >= _CheckTimeAOutS And _CheckTimeOTIn1 = "") Or (_ActualTime >= _CheckTimeAOutS And _ActualTime <= _CheckTimeAOutE And _CheckTimeOTIn1 <> "" And ((_CheckTimeAOutE <= _CheckTimeOTIn1 And _StateOTContinue = False) Or (_StateOTContinue = True And _CheckTimeAOutE <= _CheckTimeOTIn1 And _ActualScanAOut = ""))))

                            If (_ActualTime >= _CheckTimeAOut) Then
                                _ActualScanAOut = _CheckTimeAOut
                            Else
                                If _ActualTime < _CheckTimeAOut Or FTScanAOut = "" Then
                                    _ActualScanAOut = _ActualTime
                                End If
                            End If

                            If _ActualTime > FTScanAOut Or FTScanAOut = "" Then
                                FTScanAOut = _ActualTime
                            End If

                        Case (_ActualTime >= _CheckTimeAOut And _CheckTimeOTIn1 <> "")

                            '-------------OT หลังเลิกงาน 1-------------

                            If (((_ActualTime > _CheckTimeAOut And _StateOTContinue = False) Or (_ActualTime = _CheckTimeAOut And _StateOTContinue = True)) And _CheckTimeOTIn1 <> "" And _ActualTime > _CheckTimeAIn) And _ActualTime <> FTScanMIn And _ActualTime <> FTScanAIn And ((FTScanAOut <> _ActualTime And _StateOTContinue = False) Or (FTScanAOut = _ActualTime And _StateOTContinue = True)) And FTScanMOut <> _ActualTime And _ActualScanOTIn1 = "" And _ActualTime < _CheckTimeOTOut1 Then

                                If _ActualTime > _CheckTimeOTIn1 Then
                                    _ActualScanOTIn1 = _ActualTime
                                Else
                                    _ActualScanOTIn1 = _CheckTimeOTIn1
                                End If

                                If FTScanAOTIn = "" Then
                                    FTScanAOTIn = _ActualTime
                                End If

                            End If

                            If (_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And (_ActualScanOTIn1 <> "" Or (_ActualScanOTIn1 = "" And (_ActualTime >= _CheckTimeOTOut1))) And _ActualTime > _CheckTimeOTIn1) And FTScanAOTIn <> _ActualTime Then
                                If _CheckTimeOTOut1 <= _ActualTime Then
                                    _ActualScanOTOut1 = _CheckTimeOTOut1
                                Else
                                    _ActualScanOTOut1 = _ActualTime
                                End If

                                If FTScanAOTOut = "" Then
                                    FTScanAOTOut = _ActualTime
                                ElseIf _CheckTimeOTIn2 = "" Then
                                    If _ActualTime > FTScanAOTOut Then
                                        FTScanAOTOut = _ActualTime
                                    End If
                                End If
                            End If

                            '-------------OT หลังเลิกงาน 2-------------
                            If ((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn2 <> "" And _ActualTime > _CheckTimeOTIn1)) Then

                                If _ActualTime > _CheckTimeOTIn2 Then
                                    _ActualScanOTIn2 = _ActualTime
                                Else
                                    _ActualScanOTIn2 = _CheckTimeOTIn2
                                End If

                                FTScanAOTIn2 = _ActualTime
                            End If

                            If ((_ActualTime >= _CheckTimeOTIn2 And _CheckTimeOTOut2 <> "" And _ActualScanOTIn2 <> "" And _ActualTime > _CheckTimeOTIn2)) And FTScanAOTIn2 <> _ActualTime Then
                                _ActualScanOTOut2 = _ActualTime

                                FTScanAOTIn2 = _ActualTime
                            End If
                    End Select
                End If
            Next

            If FTScanAOTIn <> "" And FTScanAOTOut = "" And _CheckTimeOTIn1 <> "" Then
                If CDate(FTScanAOTIn) >= DateAdd(DateInterval.Minute, 30, CDate(_CheckTimeOTIn1)) Then
                    FTScanAOTOut = FTScanAOTIn
                    FTScanAOTIn = ""
                End If
            End If

            '******New ****Cal OT Morning
            If (FTActualScanOTOutM = "" And (_ActualScanMIn <> Right(_CheckTimeMIn, 5) Or _ActualScanMIn = "") And (FTActualScanOTInM <> "" And FTActualScanOTInM < FTCheckScanOTOutM)) Then

                If (FTActualScanOTOutM = "") Then
                    FTActualScanOTOutM = Right(FTCheckScanOTOutM, 5)
                End If

                If (_ActualScanMIn = "") Or Right(_ActualScanMIn, 5) <> Right(FTActualScanOTInM, 5) Then
                    _ActualScanMIn = Right(FTCheckScanOTOutM, 5)
                End If

                If (Right(FTScanMIn, 5) < FTActualScanOTOutM) Or (FTActualScanOTInM <> "") Then
                    FTScanMIn = _ActualScanMIn
                End If

            End If

            '******New ****Cal OT Morning

            FTActualScanOTInM = Right(FTActualScanOTInM, 5)
            FTActualScanOTOutM = Right(FTActualScanOTOutM, 5)

            If FTActualScanOTInM = FTActualScanOTOutM Then
                FTActualScanOTOutM = ""
            End If
            If FTScanOTOutM = "" Then FTScanOTOutM = FTActualScanOTOutM

            If FTScanOTOutM = FTScanOTInM Then
                FTScanOTOutM = ""
            End If
            'เข้าโอทีเช้ามากกว่าเท่ากับ 2 ชม. ให้พัก 30 นาที ก่อนเข้างานตอนเช้า 20161201  confrim by surachai & anuwat HR 91

            If FTCheckScanOTOutM <> "" And FTCheckScanOTInM <> "" And FTCheckScanOTOutM = _CheckTimeMIn And FTActualScanOTInM <> "" And FTActualScanOTOutM <> "" Then

                If TaltalOtM = 0 Then

                    If FTActualScanOTInM <> "" And FTActualScanOTOutM <> "" Then

                        TaltalOtM = DateDiff(DateInterval.Minute, DateTime.Parse(FTCheckScanOTInM), DateTime.Parse(FTCheckScanOTOutM))

                    End If

                End If

                If TaltalOtM >= 120 Then

                    If TaltalOtM >= 120 Then FTScanMIn = Left(FTScanMIn, 10) & " " & DateTime.Parse(FTScanMIn).AddMinutes(30).ToString("HH:mm")
                    'If TaltalOtM >= 120 Then FTScanMIn = Left(FTScanMIn, 10) & " " & Right("0" & Mid(UL.ULF.rpQuoted(DateTime.Parse(FTScanMIn).AddMinutes(30)), 12, 4), 5)
                End If

            End If

            _ActualScanMIn = IIf(TaltalOtM >= 120, Right(FTScanMIn, 5), Right(_ActualScanMIn, 5))
            _ActualScanMOut = Right(_ActualScanMOut, 5)
            _ActualScanAIn = Right(_ActualScanAIn, 5)
            _ActualScanAOut = Right(_ActualScanAOut, 5)
            _ActualScanOTIn1 = Right(_ActualScanOTIn1, 5)
            _ActualScanOTOut1 = Right(_ActualScanOTOut1, 5)
            _ActualScanOTIn2 = Right(_ActualScanOTIn2, 5)
            _ActualScanOTOut2 = Right(_ActualScanOTOut2, 5)

        Catch ex As Exception
        End Try

    End Sub



    'Public Shared Sub ScanTwoTime(ByVal dt As DataTable, ByRef _ActualScanMIn As String, ByRef _ActualScanMOut As String,
    '                                 ByRef _ActualScanAIn As String, ByRef _ActualScanAOut As String, ByRef _ActualScanOTIn1 As String, ByRef _ActualScanOTOut1 As String,
    '                                 ByRef _ActualScanOTIn2 As String, ByRef _ActualScanOTOut2 As String, ByRef FTScanMIn As String,
    '                                 ByRef FTScanMOut As String, ByRef FTScanAIn As String, ByRef FTScanAOut As String, ByRef FTScanAOTIn As String,
    '                                 ByRef FTScanAOTOut As String, ByRef FTScanAOTIn2 As String, ByRef FTScanAOTOut2 As String,
    '                                 ByVal _CheckTimeMIn As String, ByVal _CheckTimeMOut As String, ByVal _CheckTimeAIn As String, ByVal _CheckTimeAOut As String, ByVal _CheckTimeOTIn1 As String, ByVal _CheckTimeOTOut1 As String,
    '                                 ByVal _CheckTimeOTIn2 As String, ByVal _CheckTimeOTOut2 As String,
    '                                 ByVal _ScanCardOverClock As String, ByVal _ScanTimeOverClock As String, ByVal _ActualNextDate As String, ByVal _ActualDate As String, ByRef _TmpScanIn As String, ByRef _TmpScanOut As String,
    '                                   _CheckTimeMInS As String, _CheckTimeMInE As String, _CheckTimeMOutS As String, _CheckTimeMOutE As String, _CheckTimeAInS As String, _CheckTimeAInE As String, _CheckTimeAOutS As String, _CheckTimeAOutE As String,
    '                             FTScanMInM As String, FTScanMOutM As String, FTScanAInM As String, FTScanAOutM As String, FTScanAOTInM As String, FTScanAOTOutM As String)


    '    If FTScanMIn <> "" Then dt.Rows.Add(FTScanMIn)
    '    If FTScanMOut <> "" Then dt.Rows.Add((FTScanMOut))
    '    If FTScanAIn <> "" Then dt.Rows.Add((FTScanAIn))
    '    If FTScanAOut <> "" Then dt.Rows.Add((FTScanAOut))
    '    If FTScanAOTIn <> "" Then dt.Rows.Add((FTScanAOTIn))
    '    If FTScanAOTOut <> "" Then dt.Rows.Add((FTScanAOTOut))
    '    If FTScanAOTIn2 <> "" Then dt.Rows.Add((FTScanAOTIn2))
    '    If FTScanAOTOut2 <> "" Then dt.Rows.Add((FTScanAOTOut2))

    '    If FTScanMInM <> "" Then dt.Rows.Add(FTScanMInM)
    '    If FTScanMOutM <> "" Then dt.Rows.Add((FTScanMOutM))
    '    If FTScanAInM <> "" Then dt.Rows.Add((FTScanAInM))
    '    If FTScanAOutM <> "" Then dt.Rows.Add((FTScanAOutM))
    '    If FTScanAOTInM <> "" Then dt.Rows.Add((FTScanAOTInM))
    '    If FTScanAOTOutM <> "" Then dt.Rows.Add((FTScanAOTOutM))

    '    Dim _ActualTime As String
    '    Dim MinTime As String = ""
    '    Dim MaxTime As String = ""

    '    For Each Dr As DataRow In dt.Select("TTrans<>''", "TTrans")
    '        If MinTime = "" Then
    '            MinTime = Dr!TTrans.ToString
    '        End If
    '        MaxTime = Dr!TTrans.ToString
    '    Next

    '    _ActualScanMIn = ""
    '    _ActualScanMOut = ""
    '    _ActualScanAIn = ""
    '    _ActualScanAOut = ""
    '    _ActualScanOTIn1 = ""
    '    _ActualScanOTOut1 = ""
    '    _ActualScanOTIn2 = ""
    '    _ActualScanOTOut2 = ""
    '    FTScanMIn = ""
    '    FTScanMOut = ""
    '    FTScanAIn = ""
    '    FTScanAOut = ""
    '    FTScanAOTIn = ""
    '    FTScanAOTOut = ""
    '    FTScanAOTIn2 = ""
    '    FTScanAOTOut2 = ""

    '    For I As Integer = 1 To 2

    '        If I = 1 Then
    '            _ActualTime = MinTime
    '        Else
    '            If MinTime = MaxTime Then
    '                Continue For
    '            End If
    '            _ActualTime = MaxTime
    '        End If

    '        If _ActualTime <> "" Then
    '            _TmpScanIn = IIf((_TmpScanIn = "" Or _TmpScanIn > _ActualTime), _ActualTime, _TmpScanIn)
    '            _TmpScanOut = IIf((_TmpScanOut = "" Or _TmpScanOut < _ActualTime), _ActualTime, _TmpScanOut)

    '            If I = 1 Then
    '                '-------------เช้างานเช้า-------------
    '                _ActualScanMIn = IIf((_ActualTime >= _ActualDate & "  " & Microsoft.VisualBasic.Right(_ScanCardOverClock, 5) And _ActualTime <= _CheckTimeMOut And _CheckTimeMIn <> ""), IIf(_ActualScanMIn < _ActualTime And _ActualScanMIn <> "", _ActualScanMIn, IIf(_ActualTime <= _CheckTimeMIn, _CheckTimeMIn, _ActualTime)), _ActualScanMIn)
    '                FTScanMIn = _ActualTime

    '                _ActualScanAIn = IIf((_ActualTime >= _CheckTimeMOut And _CheckTimeAIn <> "" And _ActualScanMOut <> ""), (_CheckTimeAIn), IIf(_ActualScanAIn = "" And _ActualTime >= _CheckTimeMOut, (_ActualTime), _ActualScanAIn))

    '            Else

    '                If FTScanMIn <> _ActualTime Then

    '                    _ActualScanMOut = IIf((_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> ""), (_ActualTime), (IIf(_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "", (_CheckTimeMOut), _ActualScanMOut)))

    '                    '-------------เช้างานบ่าย-------------
    '                    _ActualScanAIn = IIf((_ActualTime >= _CheckTimeMOut And _CheckTimeAIn <> "" And _ActualScanMOut <> ""), (_CheckTimeAIn), IIf(_ActualScanAIn = "" And _ActualTime >= _CheckTimeMOut, (_ActualTime), _ActualScanAIn))
    '                    _ActualScanAOut = IIf((_ActualTime >= _CheckTimeAIn And _ActualTime <= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanAIn <> ""), (_ActualTime), (IIf(_ActualTime >= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanAIn <> "", (_CheckTimeAOut), _ActualScanAOut)))

    '                    If _CheckTimeOTIn1 = "" And _CheckTimeOTOut1 = "" Then
    '                        FTScanAOut = _ActualTime
    '                    End If

    '                    '-------------OT หลังเลิกงาน 1-------------
    '                    If _CheckTimeOTIn1 <> "" And _CheckTimeOTOut1 <> "" And (_CheckTimeOTIn2 = "" And _CheckTimeOTOut2 = "") Then
    '                        _ActualScanOTIn1 = IIf((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn1 <> "" And _ActualTime > _CheckTimeAIn), (_CheckTimeOTIn1), _ActualScanOTIn1)
    '                        _ActualScanOTOut1 = IIf((_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And _ActualScanOTIn1 <> "" And _ActualTime > _CheckTimeOTIn1), (_ActualTime), _ActualScanOTOut1)
    '                        FTScanAOTOut = _ActualTime
    '                    End If

    '                    '-------------OT หลังเลิกงาน 2-------------
    '                    If _CheckTimeOTIn2 <> "" And _CheckTimeOTOut2 <> "" Then
    '                        _ActualScanOTIn2 = IIf((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn2 <> "" And _ActualTime > _CheckTimeOTIn1), (_CheckTimeOTIn2), _ActualScanOTIn2)
    '                        _ActualScanOTOut2 = IIf((_ActualTime >= _CheckTimeOTIn2 And _CheckTimeOTOut2 <> "" And _ActualScanOTIn2 <> "" And _ActualTime > _CheckTimeOTIn2), (_ActualTime), _ActualScanOTOut2)

    '                        FTScanAOTOut2 = _ActualTime
    '                    End If

    '                End If
    '            End If

    '        End If
    '    Next

    '    If _CheckTimeMInS <> "" And _CheckTimeMInE <> "" And _CheckTimeMOutS <> "" And _CheckTimeMOutE <> "" And _CheckTimeAInS <> "" And _CheckTimeAInE <> "" And _CheckTimeAOutS <> "" And _CheckTimeAOutE <> "" Then

    '        FTScanMIn = ""
    '        FTScanMOut = ""
    '        FTScanAIn = ""
    '        FTScanAOut = ""
    '        FTScanAOTIn = ""
    '        FTScanAOTOut = ""
    '        FTScanAOTIn2 = ""
    '        FTScanAOTOut2 = ""

    '        For I As Integer = 1 To 2
    '            If I = 1 Then
    '                _ActualTime = MinTime
    '            Else
    '                _ActualTime = MaxTime
    '            End If
    '            ' FTScanMIn = MinTime
    '            If _ActualTime <> "" Then
    '                Select Case True
    '                    Case (_ActualTime >= _CheckTimeMInS And _ActualTime <= _CheckTimeMInE)
    '                        If _ActualTime < FTScanMIn Or FTScanMIn = "" Then
    '                            FTScanMIn = _ActualTime
    '                        End If

    '                    Case (_ActualTime >= _CheckTimeMOutS And _ActualTime <= _CheckTimeMOutE)
    '                        If _ActualTime > FTScanMOut Or FTScanMOut = "" Then
    '                            FTScanMOut = _ActualTime
    '                        End If

    '                    Case (_ActualTime >= _CheckTimeAInS And _ActualTime <= _CheckTimeAInE)
    '                        If _ActualTime < FTScanAIn Or FTScanAIn = "" Then
    '                            FTScanAIn = _ActualTime
    '                        End If

    '                    Case ((_ActualTime >= _CheckTimeAOutS And _CheckTimeOTIn1 = "") Or (_ActualTime >= _CheckTimeAOutS And _ActualTime <= _CheckTimeAOutE And _CheckTimeOTIn1 <> "" And _CheckTimeAOutE <= _CheckTimeOTIn1))
    '                        If _ActualTime > FTScanAOut Or FTScanAOut = "" Then
    '                            FTScanAOut = _ActualTime
    '                        End If

    '                    Case (_ActualTime >= _CheckTimeAOut And _CheckTimeOTIn1 <> "")

    '                        '-------------OT หลังเลิกงาน 1-------------
    '                        If (_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And (_ActualScanOTIn1 <> "" Or (_ActualScanOTIn1 = "" And (_ActualTime >= _CheckTimeOTOut1))) And _ActualTime > _CheckTimeOTIn1) And FTScanAOTIn <> _ActualTime And _CheckTimeOTIn2 = "" Then
    '                            If FTScanAOTOut = "" Then
    '                                FTScanAOTOut = _ActualTime
    '                            ElseIf _CheckTimeOTIn2 = "" Then
    '                                If _ActualTime > FTScanAOTOut Then
    '                                    FTScanAOTOut = _ActualTime
    '                                End If
    '                            End If
    '                        End If

    '                        '-------------OT หลังเลิกงาน 2-------------
    '                        If ((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn2 <> "" And _ActualTime > _CheckTimeOTIn1)) Then
    '                            FTScanAOTIn2 = _ActualTime
    '                        End If

    '                        If ((_ActualTime >= _CheckTimeOTIn2 And _CheckTimeOTOut2 <> "" And _ActualScanOTIn2 <> "" And _ActualTime > _CheckTimeOTIn2)) And FTScanAOTIn2 <> _ActualTime Then
    '                            FTScanAOTIn2 = _ActualTime
    '                        End If
    '                End Select
    '            End If
    '        Next
    '    End If

    '    _ActualScanMIn = Right(_ActualScanMIn, 5)
    '    _ActualScanMOut = Right(_ActualScanMOut, 5)
    '    _ActualScanAIn = Right(_ActualScanAIn, 5)
    '    _ActualScanAOut = Right(_ActualScanAOut, 5)
    '    _ActualScanOTIn1 = Right(_ActualScanOTIn1, 5)
    '    _ActualScanOTOut1 = Right(_ActualScanOTOut1, 5)
    '    _ActualScanOTIn2 = Right(_ActualScanOTIn2, 5)
    '    _ActualScanOTOut2 = Right(_ActualScanOTOut2, 5)

    'End Sub

    'Private Shared Sub ScanFourTime(ByVal dt As DataTable, ByRef _ActualScanMIn As String, ByRef _ActualScanMOut As String,
    '                             ByRef _ActualScanAIn As String, ByRef _ActualScanAOut As String, ByRef _ActualScanOTIn1 As String, ByRef _ActualScanOTOut1 As String,
    '                              ByRef _ActualScanOTIn2 As String, ByRef _ActualScanOTOut2 As String, ByRef FTScanMIn As String,
    '                             ByRef FTScanMOut As String, ByRef FTScanAIn As String, ByRef FTScanAOut As String, ByRef FTScanAOTIn As String,
    '                             ByRef FTScanAOTOut As String, ByRef FTScanAOTIn2 As String, ByRef FTScanAOTOut2 As String,
    '                             ByVal _CheckTimeMIn As String, ByVal _CheckTimeMOut As String, ByVal _CheckTimeAIn As String, ByVal _CheckTimeAOut As String, ByVal _CheckTimeOTIn1 As String, ByVal _CheckTimeOTOut1 As String,
    '                              ByVal _CheckTimeOTIn2 As String, ByVal _CheckTimeOTOut2 As String,
    '                             ByVal _ScanCardOverClock As String, ByVal _ScanTimeOverClock As String, ByVal _ActualNextDate As String, ByVal _ActualDate As String, ByRef _TmpScanIn As String, ByRef _TmpScanOut As String,
    '                             FTScanMInM As String, FTScanMOutM As String, FTScanAInM As String, FTScanAOutM As String, FTScanAOTInM As String, FTScanAOTOutM As String,
    '                             ByRef FTScanOTInM As String, ByRef FTScanOTOutM As String, ByRef FTActualScanOTInM As String, ByRef FTActualScanOTOutM As String, FTCheckScanOTInM As String, FTCheckScanOTOutM As String)


    '    Dim _ActualTime As String

    '    If FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "" Then
    '        If FTScanOTInM <> "" Then dt.Rows.Add((FTScanOTInM))
    '        If FTScanOTOutM <> "" Then dt.Rows.Add((FTScanOTOutM))


    '        If FTActualScanOTInM <> "" Then
    '            FTActualScanOTInM = Left(FTCheckScanOTInM, 10) & "  " & Right(FTActualScanOTInM, 5)
    '        End If

    '        If FTActualScanOTOutM <> "" Then
    '            FTActualScanOTOutM = Left(FTCheckScanOTInM, 10) & "  " & Right(FTActualScanOTOutM, 5)
    '        End If
    '    Else
    '        FTActualScanOTInM = ""
    '        FTActualScanOTOutM = ""
    '    End If

    '    If FTScanMIn <> "" Then dt.Rows.Add(FTScanMIn)
    '    If FTScanMOut <> "" Then dt.Rows.Add((FTScanMOut))
    '    If FTScanAIn <> "" Then dt.Rows.Add((FTScanAIn))
    '    If FTScanAOut <> "" Then dt.Rows.Add((FTScanAOut))
    '    If FTScanAOTIn <> "" Then dt.Rows.Add((FTScanAOTIn))
    '    If FTScanAOTOut <> "" Then dt.Rows.Add((FTScanAOTOut))
    '    If FTScanAOTIn2 <> "" Then dt.Rows.Add((FTScanAOTIn2))
    '    If FTScanAOTOut2 <> "" Then dt.Rows.Add((FTScanAOTOut2))

    '    If FTScanMInM <> "" Then dt.Rows.Add(FTScanMInM)
    '    If FTScanMOutM <> "" Then dt.Rows.Add((FTScanMOutM))
    '    If FTScanAInM <> "" Then dt.Rows.Add((FTScanAInM))
    '    If FTScanAOutM <> "" Then dt.Rows.Add((FTScanAOutM))
    '    If FTScanAOTInM <> "" Then dt.Rows.Add((FTScanAOTInM))
    '    If FTScanAOTOutM <> "" Then dt.Rows.Add((FTScanAOTOutM))


    '    _ActualScanMIn = ""
    '    _ActualScanMOut = ""
    '    _ActualScanAIn = ""
    '    _ActualScanAOut = ""
    '    _ActualScanOTIn1 = ""
    '    _ActualScanOTOut1 = ""
    '    _ActualScanOTIn2 = ""
    '    _ActualScanOTOut2 = ""
    '    FTScanMIn = ""
    '    FTScanMOut = ""
    '    FTScanAIn = ""
    '    FTScanAOut = ""
    '    FTScanAOTIn = ""
    '    FTScanAOTOut = ""
    '    FTScanAOTIn2 = ""
    '    FTScanAOTOut2 = ""
    '    FTScanOTInM = ""
    '    FTScanOTOutM = ""

    '    For Each Dr As DataRow In dt.Select("TTrans<>''", "TTrans")

    '        _ActualTime = Dr!TTrans.ToString

    '        If _ActualTime <> "" Then

    '            _TmpScanIn = IIf((_TmpScanIn = "" Or _TmpScanIn > _ActualTime), _ActualTime, _TmpScanIn)
    '            _TmpScanOut = IIf((_TmpScanOut = "" Or _TmpScanOut < _ActualTime), _ActualTime, _TmpScanOut)


    '            If FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "" Then

    '                '-------------เช้างาน OT เช้า------------
    '                If _ActualTime < FTActualScanOTInM Or FTActualScanOTInM = "" Then
    '                    If (_ActualTime >= _ScanCardOverClock And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "") Then
    '                        If (FTActualScanOTInM < _ActualTime And FTActualScanOTInM <> "") = False Then
    '                            If (_ActualTime <= FTCheckScanOTInM) Then
    '                                FTActualScanOTInM = FTCheckScanOTInM
    '                            Else
    '                                FTActualScanOTInM = _ActualTime
    '                            End If

    '                            If _ActualTime < FTScanOTInM Or FTScanOTInM = "" Then
    '                                FTScanOTInM = _ActualTime
    '                            End If

    '                            '-------------เช้างานเช้า------------
    '                            If FTCheckScanOTOutM = _CheckTimeMIn Then
    '                                _ActualScanMIn = _CheckTimeMIn
    '                                FTScanMIn = _CheckTimeMIn
    '                            End If

    '                            '-------------เช้างานเช้า------------

    '                        End If
    '                    End If
    '                End If

    '                If _ActualTime <> FTScanOTInM And _ActualTime > FTCheckScanOTInM Then
    '                    If (_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "") Then 'If (_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "") Then
    '                        FTActualScanOTOutM = _ActualTime

    '                        If FTScanOTOutM = "" Then FTScanOTOutM = _ActualTime
    '                    Else
    '                        If (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTCheckScanOTOutM = _CheckTimeMIn) Then 'If (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTOutM <> "" And FTCheckScanOTOutM = _CheckTimeMIn) Then
    '                            FTActualScanOTOutM = FTCheckScanOTOutM

    '                            If FTScanOTOutM = "" Then FTScanOTOutM = FTCheckScanOTOutM
    '                        ElseIf (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTCheckScanOTOutM <> _CheckTimeMIn And _ActualTime < _CheckTimeMIn And FTActualScanOTOutM = "") Then '
    '                            FTActualScanOTOutM = FTCheckScanOTOutM

    '                            If FTScanOTOutM = "" Then FTScanOTOutM = _ActualTime
    '                        End If
    '                    End If


    '                End If

    '                '-------------เช้างาน OT เช้า------------


    '                '-------------เช้างานเช้า------------
    '                If FTCheckScanOTOutM = _CheckTimeMIn And _ActualTime > _CheckTimeMIn Then
    '                    _ActualScanMIn = _CheckTimeMIn
    '                    FTScanMIn = _CheckTimeMIn
    '                Else
    '                    If (_ActualTime < _ActualScanMIn Or _ActualScanMIn = "") And _ActualTime > FTCheckScanOTOutM Then
    '                        If (_ActualTime >= _ScanCardOverClock And _ActualTime <= _CheckTimeMOut And _CheckTimeMIn <> "") Then
    '                            If (_ActualScanMIn < _ActualTime And _ActualScanMIn <> "") = False Then
    '                                If (_ActualTime <= _CheckTimeMIn) Then
    '                                    _ActualScanMIn = _CheckTimeMIn
    '                                Else
    '                                    _ActualScanMIn = _ActualTime
    '                                End If

    '                                If (_ActualTime < FTScanMIn Or FTScanMIn = "" Or FTScanMIn <= FTScanOTOutM Or FTScanMIn = FTActualScanOTOutM Or (_ActualTime > FTScanMIn And _ActualTime < _CheckTimeMIn And FTCheckScanOTOutM <> _CheckTimeMIn)) And _ActualTime > FTCheckScanOTOutM Then
    '                                    FTScanMIn = _ActualTime
    '                                End If

    '                            End If
    '                        End If
    '                    Else
    '                        If (_ActualTime <= _CheckTimeMIn Or _ActualScanMIn = "") And _ActualTime > FTCheckScanOTOutM Then
    '                            If _ActualTime <= _ActualScanMIn Then
    '                                If (_ActualTime <= _CheckTimeMIn) Then
    '                                    _ActualScanMIn = _CheckTimeMIn
    '                                Else
    '                                    _ActualScanMIn = _ActualTime
    '                                End If

    '                                If (_ActualTime < FTScanMIn Or FTScanMIn = "" Or FTScanMIn <= FTScanOTOutM) And _ActualTime > FTCheckScanOTOutM Then
    '                                    FTScanMIn = _ActualTime
    '                                End If
    '                            End If
    '                        End If
    '                    End If
    '                End If

    '                '-------------เช้างานเช้า------------
    '                '-------------ออกงานเช้า------------
    '                If _ActualTime <> FTScanMIn Then
    '                    If (_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
    '                        _ActualScanMOut = _ActualTime
    '                    Else
    '                        If (_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
    '                            _ActualScanMOut = _CheckTimeMOut
    '                        End If
    '                    End If
    '                End If
    '                '-------------ออกงานเช้า------------
    '            Else

    '                '-------------เช้างานเช้า------------
    '                If _ActualTime < _ActualScanMIn Or _ActualScanMIn = "" Then
    '                    If (_ActualTime >= _ScanCardOverClock And _ActualTime <= _CheckTimeMOut And _CheckTimeMIn <> "") Then
    '                        If (_ActualScanMIn < _ActualTime And _ActualScanMIn <> "") = False Then
    '                            If (_ActualTime <= _CheckTimeMIn) Then
    '                                _ActualScanMIn = _CheckTimeMIn
    '                            Else
    '                                _ActualScanMIn = _ActualTime
    '                            End If

    '                            If _ActualTime < FTScanMIn Or FTScanMIn = "" Then
    '                                FTScanMIn = _ActualTime
    '                            End If

    '                        End If
    '                    End If
    '                End If

    '                If _ActualTime <> FTScanMIn Then
    '                    If (_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
    '                        _ActualScanMOut = _ActualTime
    '                    Else
    '                        If (_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
    '                            _ActualScanMOut = _CheckTimeMOut
    '                        End If
    '                    End If
    '                End If
    '                '-------------เช้างานเช้า------------

    '            End If


    '            '-------------เช้างานบ่าย------------
    '            If _ActualTime <> FTScanMIn Then
    '                If (_ActualTime > _CheckTimeMOut And _CheckTimeAIn <> "" And _ActualScanMOut <> "") Then
    '                    _ActualScanAIn = _CheckTimeAIn

    '                Else
    '                    If (_ActualScanAIn = "" And _ActualTime >= _CheckTimeMOut) Then
    '                        _ActualScanAIn = _ActualTime
    '                    End If
    '                End If
    '            End If

    '            If _ActualTime <> FTScanMIn And FTScanMIn <> "" Then
    '                If (_ActualTime >= _CheckTimeAIn And _ActualTime <= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanMIn <> "") Then
    '                    _ActualScanAOut = _ActualTime

    '                    If FTScanAOut = "" Then
    '                        FTScanAOut = _ActualTime
    '                    ElseIf _CheckTimeOTIn1 = "" Then
    '                        If _ActualTime > FTScanAOut Then
    '                            FTScanAOut = _ActualTime
    '                        End If
    '                    End If

    '                Else
    '                    If (_ActualTime >= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanMIn <> "" And (_ActualScanAOut > _ActualTime Or _ActualScanAOut = "")) Then
    '                        _ActualScanAOut = _CheckTimeAOut

    '                        If FTScanAOut = "" Then
    '                            ' FTScanAOut = _ActualTime
    '                            If _CheckTimeOTIn1 <> _CheckTimeAOut Then
    '                                FTScanAOut = _ActualTime
    '                            Else
    '                                FTScanAOut = _CheckTimeAOut
    '                            End If
    '                        ElseIf _CheckTimeOTIn1 = "" Then
    '                            If _ActualTime > FTScanAOut Then
    '                                ' FTScanAOut = _ActualTime
    '                                If _CheckTimeOTIn1 <> _CheckTimeAOut Then
    '                                    FTScanAOut = _ActualTime
    '                                Else
    '                                    FTScanAOut = _CheckTimeAOut
    '                                End If
    '                            End If
    '                        End If
    '                    End If
    '                End If
    '            ElseIf FTScanMIn = "" Then

    '                If (_ActualTime >= _CheckTimeAIn And _ActualTime <= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanMIn = "") Then
    '                    _ActualScanAOut = _ActualTime

    '                    If FTScanAOut = "" Then

    '                        If _CheckTimeOTIn1 <> _CheckTimeAOut Then
    '                            FTScanAOut = _ActualTime
    '                        Else
    '                            FTScanAOut = _CheckTimeAOut
    '                        End If


    '                    ElseIf _CheckTimeOTIn1 = "" Then
    '                        If _ActualTime > FTScanAOut Then
    '                            ' FTScanAOut = _ActualTime
    '                            If _CheckTimeOTIn1 <> _CheckTimeAOut Then
    '                                FTScanAOut = _ActualTime
    '                            Else
    '                                FTScanAOut = _CheckTimeAOut
    '                            End If
    '                        End If
    '                    End If

    '                Else
    '                    If (_ActualTime >= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanMIn = "") Then
    '                        _ActualScanAOut = _CheckTimeAOut

    '                        If FTScanAOut = "" Then
    '                            FTScanAOut = _ActualTime
    '                        ElseIf _CheckTimeOTIn1 = "" Then
    '                            If _ActualTime > FTScanAOut Then
    '                                FTScanAOut = _ActualTime
    '                            End If
    '                        End If
    '                    End If
    '                End If

    '            End If

    '            '-------------OT หลังเลิกงาน 1-------------

    '            If (_ActualTime > _CheckTimeAOut And _CheckTimeOTIn1 <> "" And _ActualTime > _CheckTimeAIn) And _ActualTime <> FTScanMIn And _ActualTime <> FTScanAIn And FTScanAOut <> _ActualTime And FTScanMOut <> _ActualTime And _ActualScanOTIn1 = "" Then
    '                If (_CheckTimeAOut = _CheckTimeOTIn1) Then
    '                    FTScanAOut = _CheckTimeAOut
    '                End If

    '                If _ActualTime > _CheckTimeOTIn1 Then

    '                    If _CheckTimeOTIn1 <> _CheckTimeAOut Then
    '                        _ActualScanOTIn1 = _ActualTime
    '                    Else
    '                        _ActualScanOTIn1 = _CheckTimeOTIn1
    '                    End If

    '                    If FTScanAOTIn = "" Then

    '                        If _CheckTimeOTIn1 <> _CheckTimeAOut Then
    '                            FTScanAOTIn = _ActualTime
    '                        Else
    '                            FTScanAOTIn = _CheckTimeOTIn1
    '                        End If


    '                    End If
    '                Else
    '                    _ActualScanOTIn1 = _CheckTimeOTIn1

    '                    If FTScanAOTIn = "" Then
    '                        FTScanAOTIn = _ActualTime
    '                    End If
    '                End If



    '            End If

    '            If (_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And _ActualScanOTIn1 <> "" And _ActualTime > _CheckTimeOTIn1) And FTScanAOTIn <> _ActualTime Then
    '                If _CheckTimeOTOut1 <= _ActualTime Then
    '                    _ActualScanOTOut1 = _CheckTimeOTOut1
    '                Else
    '                    _ActualScanOTOut1 = _ActualTime
    '                End If

    '                If FTScanAOTOut = "" Then
    '                    FTScanAOTOut = _ActualTime
    '                ElseIf _CheckTimeOTIn2 = "" Then
    '                    If _ActualTime > FTScanAOTOut Then
    '                        FTScanAOTOut = _ActualTime
    '                    End If
    '                End If
    '            End If

    '            '-------------OT หลังเลิกงาน 2-------------
    '            If ((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn2 <> "" And _ActualTime > _CheckTimeOTIn1)) Then
    '                _ActualScanOTIn2 = _CheckTimeOTIn2
    '                FTScanAOTIn2 = _ActualTime
    '            End If

    '            If ((_ActualTime >= _CheckTimeOTIn2 And _CheckTimeOTOut2 <> "" And _ActualScanOTIn2 <> "" And _ActualTime > _CheckTimeOTIn2)) And FTScanAOTIn2 <> _ActualTime Then
    '                _ActualScanOTOut2 = _ActualTime

    '                FTScanAOTIn2 = _ActualTime
    '            End If


    '        End If
    '    Next

    '    FTScanOTInM = Right(FTScanOTInM, 5)
    '    FTScanOTOutM = Right(FTScanOTOutM, 5)
    '    FTActualScanOTInM = Right(FTActualScanOTInM, 5)
    '    FTActualScanOTOutM = Right(FTActualScanOTOutM, 5)


    '    If FTActualScanOTInM = FTActualScanOTOutM Then
    '        FTActualScanOTOutM = ""
    '    End If
    '    If FTScanOTOutM = "" Then FTScanOTOutM = FTActualScanOTOutM

    '    'เข้าโอทีเช้ามากกว่าเท่ากับ 2 ชม. ให้พัก 30 นาที ก่อนเข้างานตอนเช้า 20161201  confrim by surachai & anuwat HR 91

    '    Dim TaltalOtM As Integer = 0

    '    If FTCheckScanOTOutM <> "" And FTCheckScanOTInM <> "" And FTCheckScanOTOutM = _CheckTimeMIn And FTActualScanOTInM <> "" And FTActualScanOTOutM <> "" Then
    '        If TaltalOtM = 0 Then
    '            If FTActualScanOTInM <> "" And FTActualScanOTOutM <> "" Then

    '                Try
    '                    TaltalOtM = DateDiff(DateInterval.Minute, DateTime.Parse(FTScanOTInM), DateTime.Parse(FTScanOTOutM))
    '                Catch ex As Exception
    '                    TaltalOtM = 0
    '                End Try

    '            End If
    '        End If
    '        If TaltalOtM >= 120 Then


    '            If TaltalOtM >= 120 Then FTScanMIn = Left(FTScanMIn, 10) & " " & DateTime.Parse(FTScanMIn).AddMinutes(30).ToString("HH:mm")
    '            'If TaltalOtM >= 120 Then FTScanMIn = Left(FTScanMIn, 10) & " " & Right("0" & Mid(UL.ULF.rpQuoted(DateTime.Parse(FTScanMIn).AddMinutes(30)), 12, 4), 5)
    '        End If
    '    End If
    '    _ActualScanMIn = IIf(TaltalOtM >= 120, Right(FTScanMIn, 5), Right(_ActualScanMIn, 5))
    '    ' _ActualScanMIn = Right(_ActualScanMIn, 5)
    '    _ActualScanMOut = Right(_ActualScanMOut, 5)
    '    _ActualScanAIn = Right(_ActualScanAIn, 5)
    '    _ActualScanAOut = Right(_ActualScanAOut, 5)
    '    _ActualScanOTIn1 = Right(_ActualScanOTIn1, 5)
    '    _ActualScanOTOut1 = Right(_ActualScanOTOut1, 5)
    '    _ActualScanOTIn2 = Right(_ActualScanOTIn2, 5)
    '    _ActualScanOTOut2 = Right(_ActualScanOTOut2, 5)


    'End Sub



    'Private Shared Sub ScanSixTime(ByVal dt As DataTable, ByRef _ActualScanMIn As String, ByRef _ActualScanMOut As String,
    '                             ByRef _ActualScanAIn As String, ByRef _ActualScanAOut As String, ByRef _ActualScanOTIn1 As String, ByRef _ActualScanOTOut1 As String,
    '                             ByRef _ActualScanOTIn2 As String, ByRef _ActualScanOTOut2 As String, ByRef FTScanMIn As String,
    '                             ByRef FTScanMOut As String, ByRef FTScanAIn As String, ByRef FTScanAOut As String, ByRef FTScanAOTIn As String,
    '                             ByRef FTScanAOTOut As String, ByRef FTScanAOTIn2 As String, ByRef FTScanAOTOut2 As String,
    '                             ByVal _CheckTimeMIn As String, ByVal _CheckTimeMOut As String, ByVal _CheckTimeAIn As String, ByVal _CheckTimeAOut As String, ByVal _CheckTimeOTIn1 As String, ByVal _CheckTimeOTOut1 As String,
    '                             ByVal _CheckTimeOTIn2 As String, ByVal _CheckTimeOTOut2 As String,
    '                             ByVal _ScanCardOverClock As String, ByVal _ScanTimeOverClock As String, ByVal _ActualNextDate As String, ByVal _ActualDate As String, ByRef _TmpScanIn As String, ByRef _TmpScanOut As String,
    '                             _CheckTimeMInS As String, _CheckTimeMInE As String, _CheckTimeMOutS As String, _CheckTimeMOutE As String, _CheckTimeAInS As String, _CheckTimeAInE As String, _CheckTimeAOutS As String, _CheckTimeAOutE As String,
    '                             FTScanMInM As String, FTScanMOutM As String, FTScanAInM As String, FTScanAOutM As String, FTScanAOTInM As String, FTScanAOTOutM As String,
    '                              ByRef FTScanOTInM As String, ByRef FTScanOTOutM As String, ByRef FTActualScanOTInM As String, ByRef FTActualScanOTOutM As String, FTCheckScanOTInM As String, FTCheckScanOTOutM As String)

    '    Try
    '        Dim _StateOTContinue As Boolean = False
    '        Dim TaltalOtM As Integer = 0

    '        If _CheckTimeAOut = _CheckTimeOTIn1 Then
    '            _StateOTContinue = True
    '        End If

    '        Dim _ActualTime As String
    '        dt.BeginInit()

    '        If FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "" Then
    '            If FTScanOTInM <> "" Then dt.Rows.Add((FTScanOTInM))
    '            If FTScanOTOutM <> "" Then dt.Rows.Add((FTScanOTOutM))

    '            If FTActualScanOTInM <> "" Then
    '                FTActualScanOTInM = Left(FTCheckScanOTInM, 10) & "  " & Right(FTActualScanOTInM, 5)
    '            End If

    '            If FTActualScanOTOutM <> "" Then
    '                FTActualScanOTOutM = Left(FTCheckScanOTInM, 10) & "  " & Right(FTActualScanOTOutM, 5)
    '            End If

    '        Else

    '            FTActualScanOTInM = ""
    '            FTActualScanOTOutM = ""
    '        End If


    '        If FTScanMIn <> "" Then dt.Rows.Add(FTScanMIn)
    '        If FTScanMOut <> "" Then dt.Rows.Add((FTScanMOut))
    '        If FTScanAIn <> "" Then dt.Rows.Add((FTScanAIn))
    '        If FTScanAOut <> "" Then dt.Rows.Add((FTScanAOut))
    '        If FTScanAOTIn <> "" Then dt.Rows.Add((FTScanAOTIn))
    '        If FTScanAOTOut <> "" Then dt.Rows.Add((FTScanAOTOut))
    '        If FTScanAOTIn2 <> "" Then dt.Rows.Add((FTScanAOTIn2))
    '        If FTScanAOTOut2 <> "" Then dt.Rows.Add((FTScanAOTOut2))

    '        If FTScanMInM <> "" Then dt.Rows.Add(FTScanMInM)
    '        If FTScanMOutM <> "" Then dt.Rows.Add((FTScanMOutM))
    '        If FTScanAInM <> "" Then dt.Rows.Add((FTScanAInM))
    '        If FTScanAOutM <> "" Then dt.Rows.Add((FTScanAOutM))
    '        If FTScanAOTInM <> "" Then dt.Rows.Add((FTScanAOTInM))
    '        If FTScanAOTOutM <> "" Then dt.Rows.Add((FTScanAOTOutM))


    '        If (_StateOTContinue) Then
    '            Dim _MaxTime As String = ""
    '            For Each Dr As DataRow In dt.Select("TTrans<>''", "TTrans DESC")
    '                _MaxTime = Dr!TTrans.ToString
    '                Exit For
    '            Next

    '            If ((_MaxTime >= _CheckTimeOTOut1) And (FTScanAOut = "" And FTScanAOTIn = "")) Then
    '                FTScanAOut = _CheckTimeAOut
    '                FTScanAOTIn = _CheckTimeOTIn1

    '                _CheckTimeAOutE = _CheckTimeAOut

    '                If FTScanAOut <> "" Then dt.Rows.Add((FTScanAOut))
    '                If FTScanAOTIn <> "" Then dt.Rows.Add((FTScanAOTIn))

    '            End If

    '        End If

    '        dt.EndInit()

    '        _ActualScanMIn = ""
    '        _ActualScanMOut = ""
    '        _ActualScanAIn = ""
    '        _ActualScanAOut = ""
    '        _ActualScanOTIn1 = ""
    '        _ActualScanOTOut1 = ""
    '        _ActualScanOTIn2 = ""
    '        _ActualScanOTOut2 = ""
    '        FTScanMIn = ""
    '        FTScanMOut = ""
    '        FTScanAIn = ""
    '        FTScanAOut = ""
    '        FTScanAOTIn = ""
    '        FTScanAOTOut = ""
    '        FTScanAOTIn2 = ""
    '        FTScanAOTOut2 = ""
    '        FTScanOTInM = ""
    '        FTScanOTOutM = ""

    '        For Each Dr As DataRow In dt.Select("TTrans<>''", "TTrans")

    '            _ActualTime = Dr!TTrans.ToString

    '            If _ActualTime <> "" Then
    '                If FTActualScanOTInM <> "" And FTActualScanOTOutM <> "" Then
    '                    TaltalOtM = DateDiff(DateInterval.Minute, DateTime.Parse(FTCheckScanOTInM), DateTime.Parse(FTCheckScanOTOutM))
    '                End If

    '                _TmpScanIn = IIf((_TmpScanIn = "" Or _TmpScanIn > _ActualTime), _ActualTime, _TmpScanIn)
    '                _TmpScanOut = IIf((_TmpScanOut = "" Or _TmpScanOut < _ActualTime), _ActualTime, _TmpScanOut)



    '                If FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "" Then

    '                    '-------------เช้างาน OT เช้า------------
    '                    If (_ActualTime <= FTActualScanOTInM Or FTActualScanOTInM = "") And _ActualTime <= FTCheckScanOTOutM Then
    '                        If (_ActualTime >= _ScanCardOverClock And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "") Then
    '                            If (FTActualScanOTInM < _ActualTime And FTActualScanOTInM <> "") = False Then
    '                                If (_ActualTime <= FTCheckScanOTInM) Then
    '                                    FTActualScanOTInM = _ActualTime 'FTCheckScanOTInM
    '                                Else
    '                                    FTActualScanOTInM = _ActualTime
    '                                End If

    '                                If _ActualTime < FTScanOTInM Or FTScanOTInM = "" Then
    '                                    FTScanOTInM = _ActualTime
    '                                End If

    '                                '-------------เช้างานเช้า------------
    '                                _ActualScanMIn = _CheckTimeMIn
    '                                FTScanMIn = _CheckTimeMIn
    '                                '-------------เช้างานเช้า------------

    '                            End If
    '                        End If
    '                    End If

    '                    If _ActualTime <> FTScanOTInM Then
    '                        'If (_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "") Then
    '                        '    FTActualScanOTOutM = _ActualTime
    '                        'Else
    '                        '    If (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTOutM <> "") Then
    '                        '        FTActualScanOTOutM = FTCheckScanOTOutM
    '                        '    End If
    '                        'End If


    '                        If (_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "") Then 'If (_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "") Then
    '                            FTActualScanOTOutM = _ActualTime

    '                            If FTScanOTOutM = "" Then FTScanOTOutM = _ActualTime
    '                        Else
    '                            If (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTCheckScanOTOutM = _CheckTimeMIn) Then 'If (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTOutM <> "" And FTCheckScanOTOutM = _CheckTimeMIn) Then
    '                                FTActualScanOTOutM = FTCheckScanOTOutM

    '                                If FTScanOTOutM = "" Then FTScanOTOutM = FTCheckScanOTOutM

    '                            End If
    '                        End If


    '                    End If

    '                    '-------------เช้างาน OT เช้า------------

    '                    '-------------ออกงานเช้า------------
    '                    If _ActualTime <> FTScanMIn Then
    '                        If (_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
    '                            _ActualScanMOut = _ActualTime
    '                        Else
    '                            If (_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
    '                                _ActualScanMOut = _CheckTimeMOut
    '                            End If
    '                        End If
    '                    End If
    '                    '-------------ออกงานเช้า------------

    '                End If


    '                Select Case True
    '                    Case (_ActualTime >= _CheckTimeMInS And _ActualTime <= _CheckTimeMInE)
    '                        If (_ActualTime <= _CheckTimeMIn) Then
    '                            _ActualScanMIn = _CheckTimeMIn
    '                        Else
    '                            If _ActualTime < FTScanMIn Or FTScanMIn = "" Then
    '                                _ActualScanMIn = _ActualTime
    '                            End If
    '                        End If

    '                        If _ActualTime < FTScanMIn Or FTScanMIn = "" Then

    '                            If FTCheckScanOTOutM <> "" And FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> _CheckTimeMIn And _ActualTime <> FTActualScanOTOutM Then
    '                                FTScanMIn = _ActualTime
    '                            Else
    '                                If FTCheckScanOTInM = "" Then
    '                                    FTScanMIn = _ActualTime
    '                                End If

    '                            End If

    '                        End If

    '                    Case (_ActualTime >= _CheckTimeMOutS And _ActualTime <= _CheckTimeMOutE And FTScanMOut = "")


    '                        If (_ActualTime >= _CheckTimeMOut) Then
    '                            _ActualScanMOut = _CheckTimeMOut
    '                        Else
    '                            If _ActualTime < _CheckTimeMOut Or FTScanMOut = "" Then
    '                                _ActualScanMOut = _ActualTime
    '                            End If
    '                        End If

    '                        If _ActualTime > FTScanMOut Or FTScanMOut = "" Then
    '                            FTScanMOut = _ActualTime
    '                        End If

    '                    Case (_ActualTime >= _CheckTimeAInS And _ActualTime <= _CheckTimeAInE)

    '                        If (_ActualTime <= _CheckTimeAIn) Then
    '                            _ActualScanAIn = _CheckTimeAIn
    '                        Else
    '                            If _ActualTime < FTScanAIn Or FTScanAIn = "" Then
    '                                _ActualScanAIn = _ActualTime
    '                            End If
    '                        End If

    '                        If _ActualTime < FTScanAIn Or FTScanAIn = "" Then
    '                            FTScanAIn = _ActualTime
    '                        End If

    '                    Case ((_ActualTime >= _CheckTimeAOutS And _CheckTimeOTIn1 = "") Or (_ActualTime >= _CheckTimeAOutS And _ActualTime <= _CheckTimeAOutE And _CheckTimeOTIn1 <> "" And ((_CheckTimeAOutE <= _CheckTimeOTIn1 And _StateOTContinue = False) Or (_StateOTContinue = True And _CheckTimeAOutE <= _CheckTimeOTIn1 And _ActualScanAOut = ""))))

    '                        If (_ActualTime >= _CheckTimeAOut) Then
    '                            _ActualScanAOut = _CheckTimeAOut
    '                        Else
    '                            If _ActualTime < _CheckTimeAOut Or FTScanAOut = "" Then
    '                                _ActualScanAOut = _ActualTime
    '                            End If
    '                        End If

    '                        If _ActualTime > FTScanAOut Or FTScanAOut = "" Then
    '                            FTScanAOut = _ActualTime
    '                        End If

    '                    Case (_ActualTime >= _CheckTimeAOut And _CheckTimeOTIn1 <> "")

    '                        '-------------OT หลังเลิกงาน 1-------------

    '                        If (((_ActualTime > _CheckTimeAOut And _StateOTContinue = False) Or (_ActualTime = _CheckTimeAOut And _StateOTContinue = True)) And _CheckTimeOTIn1 <> "" And _ActualTime > _CheckTimeAIn) And _ActualTime <> FTScanMIn And _ActualTime <> FTScanAIn And ((FTScanAOut <> _ActualTime And _StateOTContinue = False) Or (FTScanAOut = _ActualTime And _StateOTContinue = True)) And FTScanMOut <> _ActualTime And _ActualScanOTIn1 = "" And _ActualTime < _CheckTimeOTOut1 Then

    '                            If _ActualTime > _CheckTimeOTIn1 Then
    '                                _ActualScanOTIn1 = _ActualTime
    '                            Else
    '                                _ActualScanOTIn1 = _CheckTimeOTIn1
    '                            End If

    '                            If FTScanAOTIn = "" Then
    '                                FTScanAOTIn = _ActualTime
    '                            End If

    '                        End If

    '                        If (_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And (_ActualScanOTIn1 <> "" Or (_ActualScanOTIn1 = "" And (_ActualTime >= _CheckTimeOTOut1))) And _ActualTime > _CheckTimeOTIn1) And FTScanAOTIn <> _ActualTime Then
    '                            If _CheckTimeOTOut1 <= _ActualTime Then
    '                                _ActualScanOTOut1 = _CheckTimeOTOut1
    '                            Else
    '                                _ActualScanOTOut1 = _ActualTime
    '                            End If

    '                            If FTScanAOTOut = "" Then
    '                                FTScanAOTOut = _ActualTime
    '                            ElseIf _CheckTimeOTIn2 = "" Then
    '                                If _ActualTime > FTScanAOTOut Then
    '                                    FTScanAOTOut = _ActualTime
    '                                End If
    '                            End If
    '                        End If

    '                        '-------------OT หลังเลิกงาน 2-------------
    '                        If ((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn2 <> "" And _ActualTime > _CheckTimeOTIn1)) Then

    '                            If _ActualTime > _CheckTimeOTIn2 Then
    '                                _ActualScanOTIn2 = _ActualTime
    '                            Else
    '                                _ActualScanOTIn2 = _CheckTimeOTIn2
    '                            End If

    '                            FTScanAOTIn2 = _ActualTime
    '                        End If

    '                        If ((_ActualTime >= _CheckTimeOTIn2 And _CheckTimeOTOut2 <> "" And _ActualScanOTIn2 <> "" And _ActualTime > _CheckTimeOTIn2)) And FTScanAOTIn2 <> _ActualTime Then
    '                            _ActualScanOTOut2 = _ActualTime

    '                            FTScanAOTIn2 = _ActualTime
    '                        End If
    '                End Select
    '            End If
    '        Next

    '        If FTScanAOTIn <> "" And FTScanAOTOut = "" And _CheckTimeOTIn1 <> "" Then
    '            If CDate(FTScanAOTIn) >= DateAdd(DateInterval.Minute, 30, CDate(_CheckTimeOTIn1)) Then
    '                FTScanAOTOut = FTScanAOTIn
    '                FTScanAOTIn = ""
    '            End If
    '        End If

    '        '******New ****Cal OT Morning
    '        If (FTActualScanOTOutM = "" And (_ActualScanMIn <> Right(_CheckTimeMIn, 5) Or _ActualScanMIn = "") And (FTActualScanOTInM <> "" And FTActualScanOTInM < FTCheckScanOTOutM)) Then

    '            If (FTActualScanOTOutM = "") Then
    '                FTActualScanOTOutM = Right(FTCheckScanOTOutM, 5)
    '            End If

    '            If (_ActualScanMIn = "") Or Right(_ActualScanMIn, 5) <> Right(FTActualScanOTInM, 5) Then
    '                _ActualScanMIn = Right(FTCheckScanOTOutM, 5)
    '            End If

    '            If (Right(FTScanMIn, 5) < FTActualScanOTOutM) Or (FTActualScanOTInM <> "") Then
    '                FTScanMIn = _ActualScanMIn
    '            End If

    '        End If

    '        '******New ****Cal OT Morning

    '        FTActualScanOTInM = Right(FTActualScanOTInM, 5)
    '        FTActualScanOTOutM = Right(FTActualScanOTOutM, 5)

    '        If FTActualScanOTInM = FTActualScanOTOutM Then
    '            FTActualScanOTOutM = ""
    '        End If
    '        If FTScanOTOutM = "" Then FTScanOTOutM = FTActualScanOTOutM

    '        If FTScanOTOutM = FTScanOTInM Then
    '            FTScanOTOutM = ""
    '        End If
    '        'เข้าโอทีเช้ามากกว่าเท่ากับ 2 ชม. ให้พัก 30 นาที ก่อนเข้างานตอนเช้า 20161201  confrim by surachai & anuwat HR 91

    '        If FTCheckScanOTOutM <> "" And FTCheckScanOTInM <> "" And FTCheckScanOTOutM = _CheckTimeMIn And FTActualScanOTInM <> "" And FTActualScanOTOutM <> "" Then

    '            If TaltalOtM = 0 Then

    '                If FTActualScanOTInM <> "" And FTActualScanOTOutM <> "" Then

    '                    TaltalOtM = DateDiff(DateInterval.Minute, DateTime.Parse(FTCheckScanOTInM), DateTime.Parse(FTCheckScanOTOutM))

    '                End If

    '            End If

    '            If TaltalOtM >= 120 Then

    '                If TaltalOtM >= 120 Then FTScanMIn = Left(FTScanMIn, 10) & " " & DateTime.Parse(FTScanMIn).AddMinutes(30).ToString("HH:mm")
    '                'If TaltalOtM >= 120 Then FTScanMIn = Left(FTScanMIn, 10) & " " & Right("0" & Mid(UL.ULF.rpQuoted(DateTime.Parse(FTScanMIn).AddMinutes(30)), 12, 4), 5)
    '            End If

    '        End If

    '        _ActualScanMIn = IIf(TaltalOtM >= 120, Right(FTScanMIn, 5), Right(_ActualScanMIn, 5))
    '        _ActualScanMOut = Right(_ActualScanMOut, 5)
    '        _ActualScanAIn = Right(_ActualScanAIn, 5)
    '        _ActualScanAOut = Right(_ActualScanAOut, 5)
    '        _ActualScanOTIn1 = Right(_ActualScanOTIn1, 5)
    '        _ActualScanOTOut1 = Right(_ActualScanOTOut1, 5)
    '        _ActualScanOTIn2 = Right(_ActualScanOTIn2, 5)
    '        _ActualScanOTOut2 = Right(_ActualScanOTOut2, 5)

    '    Catch ex As Exception
    '    End Try

    'End Sub



    Private Shared Sub ScanSixTime_Before_Drive20180914(ByVal dt As DataTable, ByRef _ActualScanMIn As String, ByRef _ActualScanMOut As String,
                                 ByRef _ActualScanAIn As String, ByRef _ActualScanAOut As String, ByRef _ActualScanOTIn1 As String, ByRef _ActualScanOTOut1 As String,
                                 ByRef _ActualScanOTIn2 As String, ByRef _ActualScanOTOut2 As String, ByRef FTScanMIn As String,
                                 ByRef FTScanMOut As String, ByRef FTScanAIn As String, ByRef FTScanAOut As String, ByRef FTScanAOTIn As String,
                                 ByRef FTScanAOTOut As String, ByRef FTScanAOTIn2 As String, ByRef FTScanAOTOut2 As String,
                                 ByVal _CheckTimeMIn As String, ByVal _CheckTimeMOut As String, ByVal _CheckTimeAIn As String, ByVal _CheckTimeAOut As String, ByVal _CheckTimeOTIn1 As String, ByVal _CheckTimeOTOut1 As String,
                                 ByVal _CheckTimeOTIn2 As String, ByVal _CheckTimeOTOut2 As String,
                                 ByVal _ScanCardOverClock As String, ByVal _ScanTimeOverClock As String, ByVal _ActualNextDate As String, ByVal _ActualDate As String, ByRef _TmpScanIn As String, ByRef _TmpScanOut As String,
                                 _CheckTimeMInS As String, _CheckTimeMInE As String, _CheckTimeMOutS As String, _CheckTimeMOutE As String, _CheckTimeAInS As String, _CheckTimeAInE As String, _CheckTimeAOutS As String, _CheckTimeAOutE As String,
                                 FTScanMInM As String, FTScanMOutM As String, FTScanAInM As String, FTScanAOutM As String, FTScanAOTInM As String, FTScanAOTOutM As String,
                                  ByRef FTScanOTInM As String, ByRef FTScanOTOutM As String, ByRef FTActualScanOTInM As String, ByRef FTActualScanOTOutM As String, FTCheckScanOTInM As String, FTCheckScanOTOutM As String)

        Try
            Dim _StateOTContinue As Boolean = False
            Dim TaltalOtM As Integer = 0

            If _CheckTimeAOut = _CheckTimeOTIn1 Then
                _StateOTContinue = True
            End If

            Dim _ActualTime As String
            dt.BeginInit()

            If FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "" Then
                If FTScanOTInM <> "" Then dt.Rows.Add((FTScanOTInM))
                If FTScanOTOutM <> "" Then dt.Rows.Add((FTScanOTOutM))


                If FTActualScanOTInM <> "" Then
                    FTActualScanOTInM = Left(FTCheckScanOTInM, 10) & "  " & Right(FTActualScanOTInM, 5)
                End If

                If FTActualScanOTOutM <> "" Then
                    FTActualScanOTOutM = Left(FTCheckScanOTInM, 10) & "  " & Right(FTActualScanOTOutM, 5)
                End If

            Else

                FTActualScanOTInM = ""
                FTActualScanOTOutM = ""
            End If


            If FTScanMIn <> "" Then dt.Rows.Add(FTScanMIn)
            If FTScanMOut <> "" Then dt.Rows.Add((FTScanMOut))
            If FTScanAIn <> "" Then dt.Rows.Add((FTScanAIn))
            If FTScanAOut <> "" Then dt.Rows.Add((FTScanAOut))
            If FTScanAOTIn <> "" Then dt.Rows.Add((FTScanAOTIn))
            If FTScanAOTOut <> "" Then dt.Rows.Add((FTScanAOTOut))
            If FTScanAOTIn2 <> "" Then dt.Rows.Add((FTScanAOTIn2))
            If FTScanAOTOut2 <> "" Then dt.Rows.Add((FTScanAOTOut2))

            If FTScanMInM <> "" Then dt.Rows.Add(FTScanMInM)
            If FTScanMOutM <> "" Then dt.Rows.Add((FTScanMOutM))
            If FTScanAInM <> "" Then dt.Rows.Add((FTScanAInM))
            If FTScanAOutM <> "" Then dt.Rows.Add((FTScanAOutM))
            If FTScanAOTInM <> "" Then dt.Rows.Add((FTScanAOTInM))
            If FTScanAOTOutM <> "" Then dt.Rows.Add((FTScanAOTOutM))


            If (_StateOTContinue) Then
                Dim _MaxTime As String = ""
                For Each Dr As DataRow In dt.Select("TTrans<>''", "TTrans DESC")
                    _MaxTime = Dr!TTrans.ToString
                    Exit For
                Next

                If _MaxTime > FTScanAOut And _MaxTime >= FTScanAOTOut Then
                    FTScanAOut = _CheckTimeAOut
                    FTScanAOTIn = _CheckTimeOTIn1

                    _CheckTimeAOutE = _CheckTimeAOut

                    If FTScanAOut <> "" Then dt.Rows.Add((FTScanAOut))
                    If FTScanAOTIn <> "" Then dt.Rows.Add((FTScanAOTIn))

                End If

            End If

            dt.EndInit()

            _ActualScanMIn = ""
            _ActualScanMOut = ""
            _ActualScanAIn = ""
            _ActualScanAOut = ""
            _ActualScanOTIn1 = ""
            _ActualScanOTOut1 = ""
            _ActualScanOTIn2 = ""
            _ActualScanOTOut2 = ""
            FTScanMIn = ""
            FTScanMOut = ""
            FTScanAIn = ""
            FTScanAOut = ""
            FTScanAOTIn = ""
            FTScanAOTOut = ""
            FTScanAOTIn2 = ""
            FTScanAOTOut2 = ""
            FTScanOTInM = ""
            FTScanOTOutM = ""

            For Each Dr As DataRow In dt.Select("TTrans<>''", "TTrans")

                _ActualTime = Dr!TTrans.ToString

                If _ActualTime <> "" Then
                    If FTActualScanOTInM <> "" And FTActualScanOTOutM <> "" Then
                        TaltalOtM = DateDiff(DateInterval.Minute, DateTime.Parse(FTCheckScanOTInM), DateTime.Parse(FTCheckScanOTOutM))
                    End If

                    _TmpScanIn = IIf((_TmpScanIn = "" Or _TmpScanIn > _ActualTime), _ActualTime, _TmpScanIn)
                    _TmpScanOut = IIf((_TmpScanOut = "" Or _TmpScanOut < _ActualTime), _ActualTime, _TmpScanOut)



                    If FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "" Then

                        '-------------เช้างาน OT เช้า------------
                        If (_ActualTime <= FTActualScanOTInM Or FTActualScanOTInM = "") And _ActualTime <= FTCheckScanOTOutM Then
                            If (_ActualTime >= _ScanCardOverClock And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "") Then
                                If (FTActualScanOTInM < _ActualTime And FTActualScanOTInM <> "") = False Then
                                    If (_ActualTime <= FTCheckScanOTInM) Then
                                        FTActualScanOTInM = _ActualTime 'FTCheckScanOTInM
                                    Else
                                        FTActualScanOTInM = _ActualTime
                                    End If

                                    If _ActualTime < FTScanOTInM Or FTScanOTInM = "" Then
                                        FTScanOTInM = _ActualTime
                                    End If

                                    '-------------เช้างานเช้า------------
                                    _ActualScanMIn = _CheckTimeMIn
                                    FTScanMIn = _CheckTimeMIn
                                    '-------------เช้างานเช้า------------

                                End If
                            End If
                        End If

                        If _ActualTime <> FTScanOTInM Then
                            'If (_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "") Then
                            '    FTActualScanOTOutM = _ActualTime
                            'Else
                            '    If (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTOutM <> "") Then
                            '        FTActualScanOTOutM = FTCheckScanOTOutM
                            '    End If
                            'End If


                            If (_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "") Then 'If (_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "") Then
                                FTActualScanOTOutM = _ActualTime

                                If FTScanOTOutM = "" Then FTScanOTOutM = _ActualTime
                            Else
                                If (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTCheckScanOTOutM = _CheckTimeMIn) Then 'If (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTOutM <> "" And FTCheckScanOTOutM = _CheckTimeMIn) Then
                                    FTActualScanOTOutM = FTCheckScanOTOutM

                                    If FTScanOTOutM = "" Then FTScanOTOutM = FTCheckScanOTOutM

                                End If
                            End If


                        End If

                        '-------------เช้างาน OT เช้า------------

                        '-------------ออกงานเช้า------------
                        If _ActualTime <> FTScanMIn Then
                            If (_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
                                _ActualScanMOut = _ActualTime
                            Else
                                If (_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
                                    _ActualScanMOut = _CheckTimeMOut
                                End If
                            End If
                        End If
                        '-------------ออกงานเช้า------------

                    End If


                    Select Case True
                        Case (_ActualTime >= _CheckTimeMInS And _ActualTime <= _CheckTimeMInE)
                            If (_ActualTime <= _CheckTimeMIn) Then
                                _ActualScanMIn = _CheckTimeMIn
                            Else
                                If _ActualTime < FTScanMIn Or FTScanMIn = "" Then
                                    _ActualScanMIn = _ActualTime
                                End If
                            End If

                            If _ActualTime < FTScanMIn Or FTScanMIn = "" Then

                                If FTCheckScanOTOutM <> "" And FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> _CheckTimeMIn And _ActualTime <> FTActualScanOTOutM Then
                                    FTScanMIn = _ActualTime
                                Else
                                    If FTCheckScanOTInM = "" Then
                                        FTScanMIn = _ActualTime
                                    End If

                                End If

                            End If

                        Case (_ActualTime >= _CheckTimeMOutS And _ActualTime <= _CheckTimeMOutE)


                            If (_ActualTime >= _CheckTimeMOut) Then
                                _ActualScanMOut = _CheckTimeMOut
                            Else
                                If _ActualTime < _CheckTimeMOut Or FTScanMOut = "" Then
                                    _ActualScanMOut = _ActualTime
                                End If
                            End If

                            If _ActualTime > FTScanMOut Or FTScanMOut = "" Then
                                FTScanMOut = _ActualTime
                            End If

                        Case (_ActualTime >= _CheckTimeAInS And _ActualTime <= _CheckTimeAInE)

                            If (_ActualTime <= _CheckTimeAIn) Then
                                _ActualScanAIn = _CheckTimeAIn
                            Else
                                If _ActualTime < FTScanAIn Or FTScanAIn = "" Then
                                    _ActualScanAIn = _ActualTime
                                End If
                            End If

                            If _ActualTime < FTScanAIn Or FTScanAIn = "" Then
                                FTScanAIn = _ActualTime
                            End If

                        Case ((_ActualTime >= _CheckTimeAOutS And _CheckTimeOTIn1 = "") Or (_ActualTime >= _CheckTimeAOutS And _ActualTime <= _CheckTimeAOutE And _CheckTimeOTIn1 <> "" And ((_CheckTimeAOutE <= _CheckTimeOTIn1 And _StateOTContinue = False) Or (_StateOTContinue = True And _CheckTimeAOutE <= _CheckTimeOTIn1 And _ActualScanAOut = ""))))

                            If (_ActualTime >= _CheckTimeAOut) Then
                                _ActualScanAOut = _CheckTimeAOut
                            Else
                                If _ActualTime < _CheckTimeAOut Or FTScanAOut = "" Then
                                    _ActualScanAOut = _ActualTime
                                End If
                            End If

                            If _ActualTime > FTScanAOut Or FTScanAOut = "" Then
                                FTScanAOut = _ActualTime
                            End If

                        Case (_ActualTime >= _CheckTimeAOut And _CheckTimeOTIn1 <> "")

                            '-------------OT หลังเลิกงาน 1-------------

                            If (((_ActualTime > _CheckTimeAOut And _StateOTContinue = False) Or (_ActualTime = _CheckTimeAOut And _StateOTContinue = True)) And _CheckTimeOTIn1 <> "" And _ActualTime > _CheckTimeAIn) And _ActualTime <> FTScanMIn And _ActualTime <> FTScanAIn And ((FTScanAOut <> _ActualTime And _StateOTContinue = False) Or (FTScanAOut = _ActualTime And _StateOTContinue = True)) And FTScanMOut <> _ActualTime And _ActualScanOTIn1 = "" And _ActualTime < _CheckTimeOTOut1 Then

                                If _ActualTime > _CheckTimeOTIn1 Then
                                    _ActualScanOTIn1 = _ActualTime
                                Else
                                    _ActualScanOTIn1 = _CheckTimeOTIn1
                                End If

                                If FTScanAOTIn = "" Then
                                    FTScanAOTIn = _ActualTime
                                End If

                            End If

                            If (_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And (_ActualScanOTIn1 <> "" Or (_ActualScanOTIn1 = "" And (_ActualTime >= _CheckTimeOTOut1))) And _ActualTime > _CheckTimeOTIn1) And FTScanAOTIn <> _ActualTime Then
                                If _CheckTimeOTOut1 <= _ActualTime Then
                                    _ActualScanOTOut1 = _CheckTimeOTOut1
                                Else
                                    _ActualScanOTOut1 = _ActualTime
                                End If

                                If FTScanAOTOut = "" Then
                                    FTScanAOTOut = _ActualTime
                                ElseIf _CheckTimeOTIn2 = "" Then
                                    If _ActualTime > FTScanAOTOut Then
                                        FTScanAOTOut = _ActualTime
                                    End If
                                End If
                            End If

                            '-------------OT หลังเลิกงาน 2-------------
                            If ((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn2 <> "" And _ActualTime > _CheckTimeOTIn1)) Then

                                If _ActualTime > _CheckTimeOTIn2 Then
                                    _ActualScanOTIn2 = _ActualTime
                                Else
                                    _ActualScanOTIn2 = _CheckTimeOTIn2
                                End If

                                FTScanAOTIn2 = _ActualTime
                            End If

                            If ((_ActualTime >= _CheckTimeOTIn2 And _CheckTimeOTOut2 <> "" And _ActualScanOTIn2 <> "" And _ActualTime > _CheckTimeOTIn2)) And FTScanAOTIn2 <> _ActualTime Then
                                _ActualScanOTOut2 = _ActualTime

                                FTScanAOTIn2 = _ActualTime
                            End If
                    End Select
                End If
            Next

            If FTScanAOTIn <> "" And FTScanAOTOut = "" And _CheckTimeOTIn1 <> "" Then
                If CDate(FTScanAOTIn) >= DateAdd(DateInterval.Minute, 30, CDate(_CheckTimeOTIn1)) Then
                    FTScanAOTOut = FTScanAOTIn
                    FTScanAOTIn = ""
                End If
            End If

            '******New ****Cal OT Morning
            If (FTActualScanOTOutM = "" And (_ActualScanMIn <> Right(_CheckTimeMIn, 5) Or _ActualScanMIn = "") And (FTActualScanOTInM <> "" And FTActualScanOTInM < FTCheckScanOTOutM)) Then

                If (FTActualScanOTOutM = "") Then
                    FTActualScanOTOutM = Right(FTCheckScanOTOutM, 5)
                End If

                If (_ActualScanMIn = "") Or Right(_ActualScanMIn, 5) <> Right(FTActualScanOTInM, 5) Then
                    _ActualScanMIn = Right(FTCheckScanOTOutM, 5)
                End If

                If (Right(FTScanMIn, 5) < FTActualScanOTOutM) Or (FTActualScanOTInM <> "") Then
                    FTScanMIn = _ActualScanMIn
                End If

            End If

            '******New ****Cal OT Morning

            FTActualScanOTInM = Right(FTActualScanOTInM, 5)
            FTActualScanOTOutM = Right(FTActualScanOTOutM, 5)

            If FTActualScanOTInM = FTActualScanOTOutM Then
                FTActualScanOTOutM = ""
            End If
            If FTScanOTOutM = "" Then FTScanOTOutM = FTActualScanOTOutM

            If FTScanOTOutM = FTScanOTInM Then
                FTScanOTOutM = ""
            End If
            'เข้าโอทีเช้ามากกว่าเท่ากับ 2 ชม. ให้พัก 30 นาที ก่อนเข้างานตอนเช้า 20161201  confrim by surachai & anuwat HR 91

            If FTCheckScanOTOutM <> "" And FTCheckScanOTInM <> "" And FTCheckScanOTOutM = _CheckTimeMIn And FTActualScanOTInM <> "" And FTActualScanOTOutM <> "" Then
                If TaltalOtM = 0 Then
                    If FTActualScanOTInM <> "" And FTActualScanOTOutM <> "" Then
                        TaltalOtM = DateDiff(DateInterval.Minute, DateTime.Parse(FTCheckScanOTInM), DateTime.Parse(FTCheckScanOTOutM))
                    End If
                End If
                If TaltalOtM >= 120 Then

                    If TaltalOtM >= 120 Then FTScanMIn = Left(FTScanMIn, 10) & " " & DateTime.Parse(FTScanMIn).AddMinutes(30).ToString("HH:mm")
                    'If TaltalOtM >= 120 Then FTScanMIn = Left(FTScanMIn, 10) & " " & Right("0" & Mid(UL.ULF.rpQuoted(DateTime.Parse(FTScanMIn).AddMinutes(30)), 12, 4), 5)
                End If
            End If


            _ActualScanMIn = IIf(TaltalOtM >= 120, Right(FTScanMIn, 5), Right(_ActualScanMIn, 5))
            _ActualScanMOut = Right(_ActualScanMOut, 5)
            _ActualScanAIn = Right(_ActualScanAIn, 5)
            _ActualScanAOut = Right(_ActualScanAOut, 5)
            _ActualScanOTIn1 = Right(_ActualScanOTIn1, 5)
            _ActualScanOTOut1 = Right(_ActualScanOTOut1, 5)
            _ActualScanOTIn2 = Right(_ActualScanOTIn2, 5)
            _ActualScanOTOut2 = Right(_ActualScanOTOut2, 5)

        Catch ex As Exception
        End Try

    End Sub

    Private Shared Sub ScanSixTime_NoMap(ByVal dt As DataTable, ByRef _ActualScanMIn As String, ByRef _ActualScanMOut As String,
                               ByRef _ActualScanAIn As String, ByRef _ActualScanAOut As String, ByRef _ActualScanOTIn1 As String, ByRef _ActualScanOTOut1 As String,
                               ByRef _ActualScanOTIn2 As String, ByRef _ActualScanOTOut2 As String, ByRef FTScanMIn As String,
                               ByRef FTScanMOut As String, ByRef FTScanAIn As String, ByRef FTScanAOut As String, ByRef FTScanAOTIn As String,
                               ByRef FTScanAOTOut As String, ByRef FTScanAOTIn2 As String, ByRef FTScanAOTOut2 As String,
                               ByVal _CheckTimeMIn As String, ByVal _CheckTimeMOut As String, ByVal _CheckTimeAIn As String, ByVal _CheckTimeAOut As String, ByVal _CheckTimeOTIn1 As String, ByVal _CheckTimeOTOut1 As String,
                               ByVal _CheckTimeOTIn2 As String, ByVal _CheckTimeOTOut2 As String,
                               ByVal _ScanCardOverClock As String, ByVal _ScanTimeOverClock As String, ByVal _ActualNextDate As String, ByVal _ActualDate As String, ByRef _TmpScanIn As String, ByRef _TmpScanOut As String,
                                 FTScanMInM As String, FTScanMOutM As String, FTScanAInM As String, FTScanAOutM As String, FTScanAOTInM As String, FTScanAOTOutM As String,
                                  ByRef FTScanOTInM As String, ByRef FTScanOTOutM As String, ByRef FTActualScanOTInM As String, ByRef FTActualScanOTOutM As String, FTCheckScanOTInM As String, FTCheckScanOTOutM As String)



        Dim _ActualTime As String

        If FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "" Then
            If FTScanOTInM <> "" Then dt.Rows.Add((FTScanOTInM))
            If FTScanOTOutM <> "" Then dt.Rows.Add((FTScanOTOutM))
        End If


        If FTScanMIn <> "" Then dt.Rows.Add(FTScanMIn)
        If FTScanMOut <> "" Then dt.Rows.Add((FTScanMOut))
        If FTScanAIn <> "" Then dt.Rows.Add((FTScanAIn))
        If FTScanAOut <> "" Then dt.Rows.Add((FTScanAOut))
        If FTScanAOTIn <> "" Then dt.Rows.Add((FTScanAOTIn))
        If FTScanAOTOut <> "" Then dt.Rows.Add((FTScanAOTOut))
        If FTScanAOTIn2 <> "" Then dt.Rows.Add((FTScanAOTIn2))
        If FTScanAOTOut2 <> "" Then dt.Rows.Add((FTScanAOTOut2))

        If FTScanMInM <> "" Then dt.Rows.Add(FTScanMInM)
        If FTScanMOutM <> "" Then dt.Rows.Add((FTScanMOutM))
        If FTScanAInM <> "" Then dt.Rows.Add((FTScanAInM))
        If FTScanAOutM <> "" Then dt.Rows.Add((FTScanAOutM))
        If FTScanAOTInM <> "" Then dt.Rows.Add((FTScanAOTInM))
        If FTScanAOTOutM <> "" Then dt.Rows.Add((FTScanAOTOutM))

        _ActualScanMIn = ""
        _ActualScanMOut = ""
        _ActualScanAIn = ""
        _ActualScanAOut = ""
        _ActualScanOTIn1 = ""
        _ActualScanOTOut1 = ""
        _ActualScanOTIn2 = ""
        _ActualScanOTOut2 = ""
        FTScanMIn = ""
        FTScanMOut = ""
        FTScanAIn = ""
        FTScanAOut = ""
        FTScanAOTIn = ""
        FTScanAOTOut = ""
        FTScanAOTIn2 = ""
        FTScanAOTOut2 = ""

        For Each Dr As DataRow In dt.Select("TTrans<>''", "TTrans")

            _ActualTime = Dr!TTrans.ToString

            If _ActualTime <> "" Then

                _TmpScanIn = IIf((_TmpScanIn = "" Or _TmpScanIn > _ActualTime), _ActualTime, _TmpScanIn)
                _TmpScanOut = IIf((_TmpScanOut = "" Or _TmpScanOut < _ActualTime), _ActualTime, _TmpScanOut)



                If FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "" Then

                    '-------------เช้างาน OT เช้า------------
                    If _ActualTime < FTActualScanOTInM Or FTActualScanOTInM = "" Then
                        If (_ActualTime >= _ScanCardOverClock And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTInM <> "" And FTCheckScanOTOutM <> "") Then
                            If (FTActualScanOTInM < _ActualTime And FTActualScanOTInM <> "") = False Then
                                If (_ActualTime <= FTCheckScanOTInM) Then
                                    FTActualScanOTInM = FTCheckScanOTInM
                                Else
                                    FTActualScanOTInM = _ActualTime
                                End If

                                If _ActualTime < FTScanOTInM Or FTScanOTInM = "" Then
                                    FTScanOTInM = _ActualTime
                                End If

                                '-------------เช้างานเช้า------------
                                _ActualScanMIn = _CheckTimeMIn
                                FTScanMIn = _CheckTimeMIn
                                '-------------เช้างานเช้า------------

                            End If
                        End If
                    End If

                    If _ActualTime <> FTScanOTInM Then
                        If (_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "") Then
                            FTActualScanOTOutM = _ActualTime
                        Else
                            If (_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTOutM <> "") Then
                                FTActualScanOTOutM = FTCheckScanOTOutM
                            End If
                        End If


                    End If

                    '-------------เช้างาน OT เช้า------------

                    '-------------ออกงานเช้า------------
                    If _ActualTime <> FTScanMIn Then
                        If (_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
                            _ActualScanMOut = _ActualTime
                        Else
                            If (_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
                                _ActualScanMOut = _CheckTimeMOut
                            End If
                        End If
                    End If
                    '-------------ออกงานเช้า------------
                Else

                    '-------------เช้างานเช้า------------
                    If _ActualTime < _ActualScanMIn Or _ActualScanMIn = "" Then
                        If (_ActualTime >= _ScanCardOverClock And _ActualTime <= _CheckTimeMOut And _CheckTimeMIn <> "") Then
                            If (_ActualScanMIn < _ActualTime And _ActualScanMIn <> "") = False Then
                                If (_ActualTime <= _CheckTimeMIn) Then
                                    _ActualScanMIn = _CheckTimeMIn
                                Else
                                    _ActualScanMIn = _ActualTime
                                End If

                                If _ActualTime < FTScanMIn Or FTScanMIn = "" Then
                                    FTScanMIn = _ActualTime
                                End If

                            End If
                        End If
                    End If

                    If _ActualTime <> FTScanMIn Then
                        If (_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
                            _ActualScanMOut = _ActualTime
                        Else
                            If (_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
                                _ActualScanMOut = _CheckTimeMOut
                            End If
                        End If
                    End If
                    '-------------เช้างานเช้า------------

                End If


                If _ActualTime < _ActualScanMIn Or _ActualScanMIn = "" Then
                    If (_ActualTime >= _ScanCardOverClock And _ActualTime < _CheckTimeMOut And _CheckTimeMIn <> "") Then
                        If (_ActualScanMIn < _ActualTime And _ActualScanMIn <> "") = False Or _ActualScanMIn = "" Then
                            If (_ActualTime <= _CheckTimeMIn) Then
                                _ActualScanMIn = _CheckTimeMIn
                            Else
                                If _ActualTime < FTScanMIn Then
                                    _ActualScanMIn = _ActualTime
                                End If
                            End If

                            If _ActualTime < FTScanMIn Then
                                FTScanMIn = _ActualTime
                            End If

                        End If
                    End If
                End If

                If (_ActualScanMIn <> "" And _ActualTime > _ActualScanMIn And (_ActualTime > _ActualScanMOut And _ActualTime < _CheckTimeAIn Or _ActualScanMOut = "")) Then
                    If (_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
                        _ActualScanMOut = _ActualTime
                        If FTScanMOut = "" Then FTScanMOut = _ActualTime
                    Else
                        If (_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "") Then
                            _ActualScanMOut = _CheckTimeMOut
                            If FTScanMOut = "" Then
                                FTScanMOut = _ActualTime
                            Else
                                If dt.Select("TTrans<>'' AND TTrans>'" & _ActualTime & "' AND  TTrans<='" & _CheckTimeAIn & "'  ", "TTrans").Length > 0 Then
                                    If CDate(_ActualTime) <= DateAdd(DateInterval.Minute, 30, CDate(FTScanMOut)) Then
                                        FTScanMOut = _ActualTime
                                    End If
                                End If
                            End If

                        End If
                    End If

                Else
                    If _ActualScanMIn = "" And _ActualScanMOut = "" And (_ActualTime >= _ActualScanMOut And _ActualTime < _CheckTimeAIn) Then
                        If (_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "") Then
                            _ActualScanMOut = _ActualTime
                            If FTScanMOut = "" Then FTScanMOut = _ActualTime
                        Else
                            If (_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "") Then
                                _ActualScanMOut = _CheckTimeMOut
                                If FTScanMOut = "" Then FTScanMOut = _ActualTime
                            End If
                        End If

                    ElseIf FTScanMOut <> "" And _ActualTime <= _CheckTimeMOut And FTScanMOut < _ActualTime Then
                        If (_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "") Then
                            _ActualScanMOut = _ActualTime
                            FTScanMOut = _ActualTime
                        Else
                            If (_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "") Then
                                _ActualScanMOut = _CheckTimeMOut
                                FTScanMOut = _ActualTime
                            End If
                        End If
                    End If
                End If

                '-------------เช้างานบ่าย------------
                If (_ActualTime <> FTScanMOut Or (_ActualTime >= FTScanMOut And _ActualScanMIn = "")) And _ActualTime <> FTScanMIn And FTScanAIn = "" And _ActualTime < _CheckTimeAOut Then
                    If (_ActualTime > _CheckTimeMOut And _CheckTimeAIn <> "" And _ActualScanMOut <> "") Then
                        _ActualScanAIn = _CheckTimeAIn
                        If _ActualTime < FTScanAIn Or FTScanAIn = "" Then
                            FTScanAIn = _ActualTime
                        End If
                    Else
                        If (_ActualScanAIn = "" And _ActualTime >= _CheckTimeMOut) Then
                            _ActualScanAIn = _ActualTime

                            If _ActualTime < FTScanAIn Or FTScanAIn = "" Then
                                FTScanAIn = _ActualTime
                            End If
                        End If
                    End If
                End If

                If _ActualTime <> FTScanAIn And FTScanAIn <> "" Then
                    If (_ActualTime >= _CheckTimeAIn And _ActualTime <= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanAIn <> "") Then
                        _ActualScanAOut = _ActualTime

                        If FTScanAOut = "" Then
                            FTScanAOut = _ActualTime
                        ElseIf _CheckTimeOTIn1 = "" Then
                            If _ActualTime > FTScanAOut Then
                                FTScanAOut = _ActualTime
                            End If
                        End If

                        If FTScanAIn = FTScanMOut And FTScanMIn = "" Then
                            FTScanMOut = ""
                        End If
                    Else
                        If (_ActualTime >= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanAIn <> "") Then
                            _ActualScanAOut = _CheckTimeAOut

                            If FTScanAOut = "" Then
                                FTScanAOut = _ActualTime
                            ElseIf _CheckTimeOTIn1 = "" Then
                                If _ActualTime > FTScanAOut Then
                                    FTScanAOut = _ActualTime
                                End If
                            End If
                            If FTScanAIn = FTScanMOut And FTScanMIn = "" Then
                                FTScanMOut = ""
                            End If
                        ElseIf FTScanAOut <> "" And _ActualTime <= _CheckTimeMOut And FTScanAOut < _ActualTime Then
                            If (_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "") Then
                                _ActualScanAOut = _ActualTime
                                FTScanAOut = _ActualTime
                            Else
                                If (_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "") Then
                                    _ActualScanAOut = _CheckTimeAOut
                                    FTScanAOut = _ActualTime
                                End If
                            End If
                        End If
                    End If
                End If

                '-------------OT หลังเลิกงาน 1-------------

                If (_ActualTime > _CheckTimeAOut And _CheckTimeOTIn1 <> "" And _ActualTime > _CheckTimeAIn) And _ActualTime <> FTScanMIn And _ActualTime <> FTScanAIn And FTScanAOut <> _ActualTime And FTScanMOut <> _ActualTime And _ActualScanOTIn1 = "" Then

                    If _ActualTime > _CheckTimeOTIn1 Then
                        _ActualScanOTIn1 = _ActualTime
                    Else
                        _ActualScanOTIn1 = _CheckTimeOTIn1
                    End If


                    If FTScanAOTIn = "" Then
                        FTScanAOTIn = _ActualTime
                    End If

                End If

                If (_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And _ActualScanOTIn1 <> "" And _ActualTime > _CheckTimeOTIn1) And FTScanAOTIn <> _ActualTime Then
                    If _CheckTimeOTOut1 <= _ActualTime Then
                        _ActualScanOTOut1 = _CheckTimeOTOut1
                    Else
                        _ActualScanOTOut1 = _ActualTime
                    End If

                    If FTScanAOTOut = "" Then
                        FTScanAOTOut = _ActualTime
                    ElseIf _CheckTimeOTIn2 = "" Then
                        If _ActualTime > FTScanAOTOut Then
                            FTScanAOTOut = _ActualTime
                        End If
                    End If
                End If

                '-------------OT หลังเลิกงาน 2-------------
                If ((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn2 <> "" And _ActualTime > _CheckTimeOTIn1)) Then

                    If _ActualTime > _CheckTimeOTIn2 Then
                        _ActualScanOTIn2 = _ActualTime
                    Else
                        _ActualScanOTIn2 = _CheckTimeOTIn2
                    End If

                    FTScanAOTIn2 = _ActualTime
                End If

                If ((_ActualTime >= _CheckTimeOTIn2 And _CheckTimeOTOut2 <> "" And _ActualScanOTIn2 <> "" And _ActualTime > _CheckTimeOTIn2)) And FTScanAOTIn2 <> _ActualTime Then
                    _ActualScanOTOut2 = _ActualTime

                    FTScanAOTIn2 = _ActualTime
                End If

            End If

        Next

        _ActualScanMIn = Right(_ActualScanMIn, 5)
        _ActualScanMOut = Right(_ActualScanMOut, 5)
        _ActualScanAIn = Right(_ActualScanAIn, 5)
        _ActualScanAOut = Right(_ActualScanAOut, 5)
        _ActualScanOTIn1 = Right(_ActualScanOTIn1, 5)
        _ActualScanOTOut1 = Right(_ActualScanOTOut1, 5)
        _ActualScanOTIn2 = Right(_ActualScanOTIn2, 5)
        _ActualScanOTOut2 = Right(_ActualScanOTOut2, 5)

    End Sub

#End Region

#Region " Update Time Card  "

    Public Shared Sub UpdateScanTwoTime(ByRef _ActualScanMIn As String, ByRef _ActualScanMOut As String,
                                     ByRef _ActualScanAIn As String, ByRef _ActualScanAOut As String, ByRef _ActualScanOTIn1 As String, ByRef _ActualScanOTOut1 As String,
                                     ByRef _ActualScanOTIn2 As String, ByRef _ActualScanOTOut2 As String, ByRef FTScanMIn As String,
                                     ByRef FTScanMOut As String, ByRef FTScanAIn As String, ByRef FTScanAOut As String, ByRef FTScanAOTIn As String,
                                     ByRef FTScanAOTOut As String, ByRef FTScanAOTIn2 As String, ByRef FTScanAOTOut2 As String,
                                     ByVal _CheckTimeMIn As String, ByVal _CheckTimeMOut As String, ByVal _CheckTimeAIn As String, ByVal _CheckTimeAOut As String, ByVal _CheckTimeOTIn1 As String, ByVal _CheckTimeOTOut1 As String,
                                     ByVal _CheckTimeOTIn2 As String, ByVal _CheckTimeOTOut2 As String,
                                     ByVal _ScanCardOverClock As String, ByVal _ScanTimeOverClock As String, ByVal _ActualNextDate As String, ByVal _ActualDate As String, ByRef _TmpScanIn As String, ByRef _TmpScanOut As String, Optional ByVal ShiftId As String = "")



        Dim _ActualTime As String
        Dim MinTime As String = ""
        Dim MaxTime As String = ""
        Dim _StateShift As String = ""

        _ActualScanMIn = ""
        _ActualScanMOut = ""
        _ActualScanAIn = ""
        _ActualScanAOut = ""
        _ActualScanOTIn1 = ""
        _ActualScanOTOut1 = ""
        _ActualScanOTIn2 = ""
        _ActualScanOTOut2 = ""

        If ShiftId <> "" Then
            _StateShift = HI.Conn.SQLConn.GetField("Select Top 1 isnull(FNStateShift,'0') AS FNStateShift   From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMTimeShift    With(nolock) where  FTShiftCode='" & HI.UL.ULF.rpQuoted(ShiftId) & "'", Conn.DB.DataBaseName.DB_HR, "0")
        End If

        Dim dt As New DataTable
        dt.Columns.Add("TTrans", GetType(String))

        dt.Rows.Add(FTScanMIn.Replace(":", ""))
        dt.Rows.Add(FTScanMOut.Replace(":", ""))
        dt.Rows.Add(FTScanAIn.Replace(":", ""))
        dt.Rows.Add(FTScanAOut.Replace(":", ""))
        dt.Rows.Add(FTScanAOTIn.Replace(":", ""))
        dt.Rows.Add(FTScanAOTOut.Replace(":", ""))
        dt.Rows.Add(FTScanAOTIn2.Replace(":", ""))
        dt.Rows.Add(FTScanAOTOut2.Replace(":", ""))

        If _CheckTimeMIn <> "" Then _CheckTimeMIn = IIf((_CheckTimeMIn >= "00:00" And _CheckTimeMIn < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeMIn
        If _CheckTimeMOut <> "" Then _CheckTimeMOut = IIf((_CheckTimeMOut >= "00:00" And _CheckTimeMOut < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeMOut

        If _CheckTimeAIn <> "" Then _CheckTimeAIn = IIf((_CheckTimeAIn >= "00:00" And _CheckTimeAIn < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeAIn
        If _CheckTimeAOut <> "" Then _CheckTimeAOut = IIf((_CheckTimeAOut >= "00:00" And _CheckTimeAOut < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeAOut

        If _CheckTimeOTIn1 <> "" Then _CheckTimeOTIn1 = IIf((_CheckTimeOTIn1 >= "00:00" And _CheckTimeOTIn1 < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTIn1
        If _CheckTimeOTOut1 <> "" Then _CheckTimeOTOut1 = IIf((_CheckTimeOTOut1 >= "00:00" And _CheckTimeOTOut1 < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTOut1


        If _CheckTimeOTIn2 <> "" Then _CheckTimeOTIn2 = IIf((_CheckTimeOTIn2 >= "00:00" And _CheckTimeOTIn2 < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTIn2
        If _CheckTimeOTOut2 <> "" Then _CheckTimeOTOut2 = IIf((_CheckTimeOTOut2 >= "00:00" And _CheckTimeOTOut2 < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTOut2
        _ActualTime = ""
        Dim _ind As Integer = 0
        For Each R As DataRow In dt.Rows
            _ind = _ind + 1
            _ActualTime = R!TTrans.ToString
            If _ActualTime <> "" Then
                _ActualTime = Right("0000" & _ActualTime, 4)
                _ActualTime = Left(_ActualTime, 2) & ":" & Right(_ActualTime, 2)
                If _ind <= 2 Then
                    _ActualTime = IIf((_ActualTime >= "00:00" And _ActualTime < _ScanTimeOverClock), _ActualDate, _ActualDate) & "  " & _ActualTime
                Else
                    _ActualTime = IIf((_ActualTime >= "00:00" And _ActualTime < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _ActualTime
                End If


                If (MinTime = "" Or MinTime > _ActualTime) And _ActualTime <> "" Then
                    MinTime = _ActualTime
                End If

                If (MaxTime = "" Or MinTime < _ActualTime) And _ActualTime <> "" Then
                    MaxTime = _ActualTime
                End If
            End If

        Next

        MinTime = Right(MinTime.Replace(":", ""), 4)
        MaxTime = Right(MaxTime.Replace(":", ""), 4)

        _ActualTime = ""
        For I As Integer = 1 To 2

            If I = 1 Then
                _ActualTime = MinTime
            Else
                _ActualTime = MaxTime
            End If

            If _ActualTime <> "" Then

                _ActualTime = Right("0000" & _ActualTime, 4)
                _ActualTime = Left(_ActualTime, 2) & ":" & Right(_ActualTime, 2)
                If I = 1 Then
                    If Not (_StateShift = "1") Then
                        _ActualTime = IIf((_ActualTime >= "00:00" And _ActualTime < _ScanTimeOverClock), _ActualDate, _ActualDate) & "  " & _ActualTime
                    Else
                        _ActualTime = IIf((_ActualTime >= "00:00" And _ActualTime < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _ActualTime
                    End If
                Else
                    _ActualTime = IIf((_ActualTime >= "00:00" And _ActualTime < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _ActualTime
                End If

                _TmpScanIn = IIf((_TmpScanIn = "" Or _TmpScanIn > _ActualTime), _ActualTime, _TmpScanIn)
                _TmpScanOut = IIf((_TmpScanOut = "" Or _TmpScanOut < _ActualTime), _ActualTime, _TmpScanOut)


                '-------------เช้างานเช้า-------------
                If Not (_StateShift = "1") Then
                    _ActualScanMIn = IIf((_ActualTime >= _ActualDate & "  " & Microsoft.VisualBasic.Right(_ScanCardOverClock, 5) And _ActualTime < _CheckTimeMOut And _CheckTimeMIn <> ""), IIf(_ActualScanMIn < Right(_ActualTime, 5) And _ActualScanMIn <> "", _ActualScanMIn, IIf(_ActualTime <= _CheckTimeMIn, Right(_CheckTimeMIn, 5), Right(_ActualTime, 5))), _ActualScanMIn)
                Else
                    _ActualScanMIn = IIf((I = 1 And _ActualTime >= _ActualDate & "  " & Microsoft.VisualBasic.Right(_ScanCardOverClock, 5) And _ActualTime < _CheckTimeMOut And _CheckTimeMIn <> ""), IIf(_ActualScanMIn < Right(_ActualTime, 5) And _ActualScanMIn <> "", _ActualScanMIn, IIf(_ActualTime <= _CheckTimeMIn, Right(_CheckTimeMIn, 5), Right(_ActualTime, 5))), _ActualScanMIn)
                End If

                _ActualScanMOut = IIf((_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> ""), Right(_ActualTime, 5), (IIf(_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "", Right(_CheckTimeMOut, 5), _ActualScanMOut)))

                '-------------เช้างานบ่าย-------------
                _ActualScanAIn = IIf((_ActualTime >= _CheckTimeMOut And _CheckTimeAIn <> "" And _ActualScanMOut <> ""), Right(_CheckTimeAIn, 5), IIf(_ActualScanAIn = "" And _ActualTime >= _CheckTimeMOut, Right(_ActualTime, 5), _ActualScanAIn))
                _ActualScanAOut = IIf((_ActualTime >= _CheckTimeAIn And _ActualTime <= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanAIn <> ""), Right(_ActualTime, 5), (IIf(_ActualTime >= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanAIn <> "", Right(_CheckTimeAOut, 5), _ActualScanAOut)))

                '-------------OT หลังเลิกงาน 1-------------
                _ActualScanOTIn1 = IIf((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn1 <> "" And _ActualTime > _CheckTimeAIn), Right(_CheckTimeOTIn1, 5), _ActualScanOTIn1)
                If (_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And _ActualScanOTIn1 <> "" And _ActualTime > _CheckTimeOTIn1 And (_CheckTimeOTIn2 = "" Or _ActualTime <= _CheckTimeOTIn2)) Then
                    _ActualScanOTOut1 = Right(_ActualTime, 5)
                Else
                    If _ActualTime >= _CheckTimeOTIn1 Then
                        _ActualScanOTOut1 = Right(_CheckTimeOTOut1, 5)
                    Else
                        _ActualScanOTOut1 = _ActualScanOTOut1
                    End If
                End If

                _ActualScanOTIn2 = IIf((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn2 <> "" And _ActualTime > _CheckTimeOTIn1), Right(_CheckTimeOTIn2, 5), _ActualScanOTIn2)
                _ActualScanOTOut2 = IIf((_ActualTime >= _CheckTimeOTIn2 And _CheckTimeOTOut2 <> "" And _ActualScanOTIn2 <> "" And _ActualTime > _CheckTimeOTIn2), Right(_ActualTime, 5), _ActualScanOTOut2)

            End If
        Next
        If _ActualScanMIn = _ActualScanMOut Then
            _ActualScanMIn = ""
            _ActualScanMOut = ""
        End If

        If _ActualScanAIn = _ActualScanAOut Then
            _ActualScanAIn = ""
            _ActualScanAOut = ""
        End If

    End Sub

    Public Shared Sub UpdateScanFourTime(ByRef _ActualScanMIn As String, ByRef _ActualScanMOut As String,
                                     ByRef _ActualScanAIn As String, ByRef _ActualScanAOut As String, ByRef _ActualScanOTIn1 As String, ByRef _ActualScanOTOut1 As String,
                                     ByRef _ActualScanOTIn2 As String, ByRef _ActualScanOTOut2 As String, ByRef FTScanMIn As String,
                                     ByRef FTScanMOut As String, ByRef FTScanAIn As String, ByRef FTScanAOut As String, ByRef FTScanAOTIn As String,
                                     ByRef FTScanAOTOut As String, ByRef FTScanAOTIn2 As String, ByRef FTScanAOTOut2 As String,
                                     ByVal _CheckTimeMIn As String, ByVal _CheckTimeMOut As String, ByVal _CheckTimeAIn As String, ByVal _CheckTimeAOut As String, ByVal _CheckTimeOTIn1 As String, ByVal _CheckTimeOTOut1 As String,
                                     ByVal _CheckTimeOTIn2 As String, ByVal _CheckTimeOTOut2 As String,
                                 ByVal _ScanCardOverClock As String, ByVal _ScanTimeOverClock As String, ByVal _ActualNextDate As String, ByVal _ActualDate As String, ByRef _TmpScanIn As String, ByRef _TmpScanOut As String,
                                  ByRef FTScanOTInM As String, ByRef FTScanOTOutM As String, ByRef FTActualScanOTInM As String, ByRef FTActualScanOTOutM As String, FTCheckScanOTInM As String, FTCheckScanOTOutM As String)

        Dim IindAdd As Integer = 0
        Dim _ActualTime As String
        Dim dt As New DataTable
        Dim I As Integer = 0
        dt.Columns.Add("TTrans", GetType(String))

        If FTCheckScanOTInM <> "" AndAlso FTCheckScanOTOutM <> "" Then
            dt.Rows.Add(FTScanOTInM.Replace(":", ""))
            dt.Rows.Add(FTScanOTOutM.Replace(":", ""))
            IindAdd = 2
        End If

        dt.Rows.Add(FTScanMIn.Replace(":", ""))
        dt.Rows.Add(FTScanMOut.Replace(":", ""))
        dt.Rows.Add(FTScanAIn.Replace(":", ""))
        dt.Rows.Add(FTScanAOut.Replace(":", ""))
        dt.Rows.Add(FTScanAOTIn.Replace(":", ""))
        dt.Rows.Add(FTScanAOTOut.Replace(":", ""))
        dt.Rows.Add(FTScanAOTIn2.Replace(":", ""))
        dt.Rows.Add(FTScanAOTOut2.Replace(":", ""))

        _ActualScanMIn = ""
        _ActualScanMOut = ""
        _ActualScanAIn = ""
        _ActualScanAOut = ""
        _ActualScanOTIn1 = ""
        _ActualScanOTOut1 = ""
        _ActualScanOTIn2 = ""
        _ActualScanOTOut2 = ""
        FTActualScanOTInM = ""
        FTActualScanOTOutM = ""

        If FTCheckScanOTInM <> "" AndAlso FTCheckScanOTOutM <> "" Then
            If FTCheckScanOTInM <> "" Then FTCheckScanOTInM = IIf((FTCheckScanOTInM >= "00:00" And FTCheckScanOTInM < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & FTCheckScanOTInM
            If FTCheckScanOTOutM <> "" Then FTCheckScanOTOutM = IIf((FTCheckScanOTOutM >= "00:00" And FTCheckScanOTOutM < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & FTCheckScanOTOutM
        End If

        If _CheckTimeMIn <> "" Then _CheckTimeMIn = IIf((_CheckTimeMIn >= "00:00" And _CheckTimeMIn < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeMIn
        If _CheckTimeMOut <> "" Then _CheckTimeMOut = IIf((_CheckTimeMOut >= "00:00" And _CheckTimeMOut < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeMOut

        If _CheckTimeAIn <> "" Then _CheckTimeAIn = IIf((_CheckTimeAIn >= "00:00" And _CheckTimeAIn < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeAIn
        If _CheckTimeAOut <> "" Then _CheckTimeAOut = IIf((_CheckTimeAOut >= "00:00" And _CheckTimeAOut < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeAOut

        If _CheckTimeOTIn1 <> "" Then _CheckTimeOTIn1 = IIf((_CheckTimeOTIn1 >= "00:00" And _CheckTimeOTIn1 < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTIn1
        If _CheckTimeOTOut1 <> "" Then _CheckTimeOTOut1 = IIf((_CheckTimeOTOut1 >= "00:00" And _CheckTimeOTOut1 < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTOut1


        If _CheckTimeOTIn2 <> "" Then _CheckTimeOTIn2 = IIf((_CheckTimeOTIn2 >= "00:00" And _CheckTimeOTIn2 < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTIn2
        If _CheckTimeOTOut2 <> "" Then _CheckTimeOTOut2 = IIf((_CheckTimeOTOut2 >= "00:00" And _CheckTimeOTOut2 < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTOut2

        Dim _ind As Integer = 0

        For Each Dr As DataRow In dt.Rows
            I = I + 1
            _ActualTime = Dr!TTrans.ToString
            If _ActualTime <> "" Then

                _ActualTime = Right("0000" & _ActualTime, 4)
                _ActualTime = Left(_ActualTime, 2) & ":" & Right(_ActualTime, 2)
                _ActualTime = IIf((_ActualTime >= "00:00" And _ActualTime < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _ActualTime
                _TmpScanIn = IIf((_TmpScanIn = "" Or _TmpScanIn > _ActualTime), _ActualTime, _TmpScanIn)
                _TmpScanOut = IIf((_TmpScanOut = "" Or _TmpScanOut < _ActualTime), _ActualTime, _TmpScanOut)


                If FTCheckScanOTInM <> "" AndAlso FTCheckScanOTOutM <> "" Then
                    '-------------OT เช้า ก่อนเข้างาน -------------
                    If _ActualTime >= _ActualDate & "  " & _ScanCardOverClock And _ActualTime <= FTCheckScanOTOutM And _CheckTimeMIn <> "" Then
                        If FTActualScanOTInM < Right(_ActualTime, 5) And FTActualScanOTInM <> "" Then
                            FTActualScanOTInM = FTActualScanOTInM
                        Else
                            If _ActualTime <= FTCheckScanOTInM Then
                                ' FTActualScanOTInM = Right(_CheckTimeMIn, 5)
                                FTActualScanOTInM = _ActualTime
                            ElseIf _ActualTime < FTActualScanOTInM Then
                                FTActualScanOTInM = _ActualTime
                            ElseIf FTActualScanOTInM = "" Then
                                FTActualScanOTInM = _ActualTime
                            End If
                        End If
                    Else
                        FTActualScanOTInM = FTActualScanOTInM

                    End If

                    FTActualScanOTOutM = IIf((_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> ""), _ActualTime, (IIf(_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "", FTCheckScanOTOutM, FTActualScanOTOutM)))

                    '-------------OT เช้า ก่อนเข้างาน -------------
                End If


                '-------------เช้างานเช้า-------------
                If _ActualTime >= _ActualDate & "  " & _ScanCardOverClock And _ActualTime <= _CheckTimeMOut And _CheckTimeMIn <> "" Then
                    If _ActualScanMIn < Right(_ActualTime, 5) And _ActualScanMIn <> "" Then
                        _ActualScanMIn = _ActualScanMIn
                    Else
                        If _ActualTime <= _CheckTimeMIn Then
                            '_ActualScanMIn = Right(_CheckTimeMIn, 5)
                            _ActualScanMIn = _CheckTimeMIn
                        ElseIf _ActualTime < _ActualScanMIn Then
                            _ActualScanMIn = _ActualTime
                        ElseIf _ActualScanMIn = "" Then
                            _ActualScanMIn = _ActualTime
                        End If
                    End If
                Else
                    _ActualScanMIn = _ActualScanMIn

                End If

                _ActualScanMOut = IIf((_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> ""), _ActualTime, (IIf(_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "", _CheckTimeMOut, _ActualScanMOut)))
                _ActualScanAIn = IIf((_ActualTime >= _CheckTimeMOut And _CheckTimeAIn <> "" And _ActualScanMOut <> ""), _CheckTimeAIn, IIf(_ActualScanAIn = "" And _ActualTime >= _CheckTimeMOut, _ActualTime, _ActualScanAIn))
                _ActualScanAOut = IIf((_ActualTime >= _CheckTimeAIn And _ActualTime <= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanAIn <> ""), _ActualTime, (IIf(_ActualTime >= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanAIn <> "", _CheckTimeAOut, _ActualScanAOut)))


                If _CheckTimeOTIn1 <> "" And _CheckTimeOTOut1 <> "" And I > 4 + IindAdd Then

                    Select Case I

                        Case 5 + IindAdd
                            '-------------OT หลังเลิกงาน 1-------------

                            If ((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn1 <> "" And _ActualTime > _CheckTimeAIn And _ActualTime <= _CheckTimeOTIn1)) Then
                                _ActualScanOTIn1 = Right(_CheckTimeOTIn1, 5)
                            Else
                                _ActualScanOTIn1 = Right(_ActualTime, 5)
                            End If
                            '  _ActualScanOTIn1 = IIf((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn1 <> "" And _ActualTime > _CheckTimeAIn And _ActualTime <= _CheckTimeOTIn1), Right(_CheckTimeOTIn1, 5), _ActualScanOTIn1)

                        Case 6 + IindAdd

                            If (_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And _ActualScanOTIn1 <> "" And _ActualTime > _CheckTimeOTIn1) Then

                                If _ActualTime >= _CheckTimeOTOut1 Then
                                    _ActualScanOTOut1 = Right(_CheckTimeOTOut1, 5)
                                Else
                                    _ActualScanOTOut1 = Right(_ActualTime, 5)
                                End If

                            Else
                                _ActualScanOTOut1 = _ActualScanOTOut1
                            End If

                            _ActualScanOTIn2 = IIf((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn2 <> "" And _ActualTime > _CheckTimeOTIn1), _CheckTimeOTIn2, _ActualScanOTIn2)
                            _ActualScanOTOut2 = IIf((_ActualTime >= _CheckTimeOTIn2 And _CheckTimeOTOut2 <> "" And _ActualScanOTIn2 <> "" And _ActualTime > _CheckTimeOTIn2), _ActualTime, _ActualScanOTOut2)

                    End Select

                End If

                '_ActualScanOTIn1 = IIf((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn1 <> "" And _ActualTime > _CheckTimeAIn), _CheckTimeOTIn1, _ActualScanOTIn1)
                '_ActualScanOTOut1 = IIf((_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And _ActualScanOTIn1 <> "" And _ActualTime > _CheckTimeOTIn1), _ActualTime, _ActualScanOTOut1)

                '_ActualScanOTIn2 = IIf((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn2 <> "" And _ActualTime > _CheckTimeOTIn1), _CheckTimeOTIn2, _ActualScanOTIn2)
                '_ActualScanOTOut2 = IIf((_ActualTime >= _CheckTimeOTIn2 And _CheckTimeOTOut2 <> "" And _ActualScanOTIn2 <> "" And _ActualTime > _CheckTimeOTIn2), _ActualTime, _ActualScanOTOut2)

            End If
        Next

        FTActualScanOTInM = Right(FTActualScanOTInM, 5)
        FTActualScanOTOutM = Right(FTActualScanOTOutM, 5)

        _ActualScanMIn = Right(_ActualScanMIn, 5)
        _ActualScanMOut = Right(_ActualScanMOut, 5)
        _ActualScanAIn = Right(_ActualScanAIn, 5)
        _ActualScanAOut = Right(_ActualScanAOut, 5)
        _ActualScanOTIn1 = Right(_ActualScanOTIn1, 5)
        _ActualScanOTOut1 = Right(_ActualScanOTOut1, 5)
        _ActualScanOTIn2 = Right(_ActualScanOTIn2, 5)
        _ActualScanOTOut2 = Right(_ActualScanOTOut2, 5)

        If _ActualScanMIn = _ActualScanMOut Then
            '_ActualScanMIn = ""
            _ActualScanMOut = ""
        End If

        If _ActualScanAIn = _ActualScanAOut Then
            _ActualScanAIn = ""
            _ActualScanAOut = ""
        End If
    End Sub

    Public Shared Sub UpdateScanSixTime(ByRef _ActualScanMIn As String, ByRef _ActualScanMOut As String,
                                     ByRef _ActualScanAIn As String, ByRef _ActualScanAOut As String, ByRef _ActualScanOTIn1 As String, ByRef _ActualScanOTOut1 As String,
                                     ByRef _ActualScanOTIn2 As String, ByRef _ActualScanOTOut2 As String, ByRef FTScanMIn As String,
                                     ByRef FTScanMOut As String, ByRef FTScanAIn As String, ByRef FTScanAOut As String, ByRef FTScanAOTIn As String,
                                     ByRef FTScanAOTOut As String, ByRef FTScanAOTIn2 As String, ByRef FTScanAOTOut2 As String,
                                     ByVal _CheckTimeMIn As String, ByVal _CheckTimeMOut As String, ByVal _CheckTimeAIn As String, ByVal _CheckTimeAOut As String, ByVal _CheckTimeOTIn1 As String, ByVal _CheckTimeOTOut1 As String,
                                     ByVal _CheckTimeOTIn2 As String, ByVal _CheckTimeOTOut2 As String,
                                 ByVal _ScanCardOverClock As String, ByVal _ScanTimeOverClock As String, ByVal _ActualNextDate As String, ByVal _ActualDate As String, ByRef _TmpScanIn As String, ByRef _TmpScanOut As String,
                                  ByRef FTScanOTInM As String, ByRef FTScanOTOutM As String, ByRef FTActualScanOTInM As String, ByRef FTActualScanOTOutM As String, FTCheckScanOTInM As String, FTCheckScanOTOutM As String)



        Dim _ActualTime As String
        Dim _ind As Integer = 0

        Dim _StateOTContinue As Boolean = False

        If _CheckTimeAOut = _CheckTimeOTIn1 Then
            _StateOTContinue = True
        End If

        Dim IindAdd As Integer = 0

        _ActualScanMIn = ""
        _ActualScanMOut = ""
        _ActualScanAIn = ""
        _ActualScanAOut = ""
        _ActualScanOTIn1 = ""
        _ActualScanOTOut1 = ""
        _ActualScanOTIn2 = ""
        _ActualScanOTOut2 = ""

        Dim dt As New DataTable
        dt.Columns.Add("TTrans", GetType(String))

        If FTCheckScanOTInM <> "" AndAlso FTCheckScanOTOutM <> "" Then
            dt.Rows.Add(FTScanOTInM.Replace(":", ""))
            dt.Rows.Add(FTScanOTOutM.Replace(":", ""))

            IindAdd = 2

        End If

        dt.Rows.Add(FTScanMIn.Replace(":", ""))
        dt.Rows.Add(FTScanMOut.Replace(":", ""))
        dt.Rows.Add(FTScanAIn.Replace(":", ""))
        dt.Rows.Add(FTScanAOut.Replace(":", ""))
        dt.Rows.Add(FTScanAOTIn.Replace(":", ""))
        dt.Rows.Add(FTScanAOTOut.Replace(":", ""))
        dt.Rows.Add(FTScanAOTIn2.Replace(":", ""))
        dt.Rows.Add(FTScanAOTOut2.Replace(":", ""))


        FTActualScanOTInM = ""
        FTActualScanOTOutM = ""

        If FTCheckScanOTInM <> "" AndAlso FTCheckScanOTOutM <> "" Then
            If FTCheckScanOTInM <> "" Then FTCheckScanOTInM = IIf((FTCheckScanOTInM >= "00:00" And FTCheckScanOTInM < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & FTCheckScanOTInM
            If FTCheckScanOTOutM <> "" Then FTCheckScanOTOutM = IIf((FTCheckScanOTOutM >= "00:00" And FTCheckScanOTOutM < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & FTCheckScanOTOutM
        End If

        If _CheckTimeMIn <> "" Then _CheckTimeMIn = IIf((_CheckTimeMIn >= "00:00" And _CheckTimeMIn < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeMIn
        If _CheckTimeMOut <> "" Then _CheckTimeMOut = IIf((_CheckTimeMOut >= "00:00" And _CheckTimeMOut < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeMOut

        If _CheckTimeAIn <> "" Then _CheckTimeAIn = IIf((_CheckTimeAIn >= "00:00" And _CheckTimeAIn < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeAIn
        If _CheckTimeAOut <> "" Then _CheckTimeAOut = IIf((_CheckTimeAOut >= "00:00" And _CheckTimeAOut < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeAOut

        If _CheckTimeOTIn1 <> "" Then _CheckTimeOTIn1 = IIf((_CheckTimeOTIn1 >= "00:00" And _CheckTimeOTIn1 < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTIn1
        If _CheckTimeOTOut1 <> "" Then _CheckTimeOTOut1 = IIf((_CheckTimeOTOut1 >= "00:00" And _CheckTimeOTOut1 < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTOut1

        If _CheckTimeOTIn2 <> "" Then _CheckTimeOTIn2 = IIf((_CheckTimeOTIn2 >= "00:00" And _CheckTimeOTIn2 < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTIn2
        If _CheckTimeOTOut2 <> "" Then _CheckTimeOTOut2 = IIf((_CheckTimeOTOut2 >= "00:00" And _CheckTimeOTOut2 < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _CheckTimeOTOut2

        For Each Dr As DataRow In dt.Rows
            _ind = _ind + 1
            _ActualTime = Dr!TTrans.ToString
            If _ActualTime <> "" Then

                _ActualTime = Right("0000" & _ActualTime, 4)
                _ActualTime = Left(_ActualTime, 2) & ":" & Right(_ActualTime, 2)
                _ActualTime = IIf((_ActualTime >= "00:00" And _ActualTime < _ScanTimeOverClock), _ActualNextDate, _ActualDate) & "  " & _ActualTime
                _TmpScanIn = IIf((_TmpScanIn = "" Or _TmpScanIn > _ActualTime), _ActualTime, _TmpScanIn)
                _TmpScanOut = IIf((_TmpScanOut = "" Or _TmpScanOut < _ActualTime), _ActualTime, _TmpScanOut)


                If FTCheckScanOTInM <> "" AndAlso FTCheckScanOTOutM <> "" Then
                    If _ind = 1 Then
                        '-------------OT เช้า ก่อนเข้างาน -------------
                        If _ActualTime >= _ActualDate & "  " & _ScanCardOverClock And _ActualTime <= FTCheckScanOTOutM And _CheckTimeMIn <> "" Then
                            If FTActualScanOTInM < Right(_ActualTime, 5) And FTActualScanOTInM <> "" Then
                                FTActualScanOTInM = FTActualScanOTInM
                            Else
                                If _ActualTime <= FTCheckScanOTInM Then
                                    '_ActualScanMIn = Right(_CheckTimeMIn, 5)
                                    FTActualScanOTInM = Right(FTCheckScanOTInM, 5)
                                ElseIf _ActualTime < FTActualScanOTInM Then
                                    FTActualScanOTInM = Right(_ActualTime, 5)
                                ElseIf FTActualScanOTInM = "" Then
                                    FTActualScanOTInM = Right(_ActualTime, 5)
                                End If
                            End If

                        Else

                            FTActualScanOTInM = FTActualScanOTInM

                        End If



                        '-------------OT เช้า ก่อนเข้างาน -------------
                    End If

                    If _ind = 2 Then
                        FTActualScanOTOutM = IIf((_ActualTime >= FTCheckScanOTInM And _ActualTime <= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> ""), Right(_ActualTime, 5), (IIf(_ActualTime >= FTCheckScanOTOutM And FTCheckScanOTOutM <> "" And FTActualScanOTInM <> "", Right(FTCheckScanOTOutM, 5), _ActualScanMOut)))
                    End If
                End If

                Select Case _ind

                    Case 1 + IindAdd
                        '-------------เช้างานเช้า-------------

                        If ((Microsoft.VisualBasic.Right(_ActualTime, 5) >= _ScanCardOverClock And _ActualTime <= _CheckTimeMOut And _CheckTimeMIn <> "")) Then
                            If (_ActualScanMIn < Right(_ActualTime, 5) And _ActualScanMIn <> "") Then
                                _ActualScanMIn = _ActualScanMIn
                            Else
                                If (_ActualTime <= _CheckTimeMIn) Then
                                    _ActualScanMIn = Right(_CheckTimeMIn, 5)
                                Else
                                    _ActualScanMIn = Right(_ActualTime, 5)
                                End If
                            End If
                        Else
                            _ActualScanMIn = _ActualScanMIn
                        End If

                        ' _ActualScanMIn = IIf((_ActualTime >= _ScanCardOverClock And _ActualTime <= _CheckTimeMOut And _CheckTimeMIn <> ""), IIf(_ActualScanMIn < Right(_ActualTime, 5) And _ActualScanMIn <> "", _ActualScanMIn, IIf(_ActualTime <= _CheckTimeMIn, Right(_CheckTimeMIn, 5), Right(_ActualTime, 5))), _ActualScanMIn)
                    Case 2 + IindAdd
                        _ActualScanMOut = IIf((_ActualTime >= _CheckTimeMIn And _ActualTime <= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> ""), Right(_ActualTime, 5), (IIf(_ActualTime >= _CheckTimeMOut And _CheckTimeMOut <> "" And _ActualScanMIn <> "", Right(_CheckTimeMOut, 5), _ActualScanMOut)))
                    Case 3 + IindAdd
                        '-------------เช้างานบ่าย-------------
                        _ActualScanAIn = IIf((_ActualTime >= _CheckTimeMOut And _CheckTimeAIn <> "" And _ActualScanMOut <> "" And _ActualTime <= _CheckTimeAIn), Right(_CheckTimeAIn, 5), IIf(_ActualScanAIn = "" And _ActualTime >= _CheckTimeMOut, Right(_ActualTime, 5), _ActualScanAIn))
                    Case 4 + IindAdd
                        _ActualScanAOut = IIf((_ActualTime >= _CheckTimeAIn And _ActualTime <= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanAIn <> ""), Right(_ActualTime, 5), (IIf(_ActualTime >= _CheckTimeAOut And _CheckTimeAOut <> "" And _ActualScanAIn <> "", Right(_CheckTimeAOut, 5), _ActualScanAOut)))
                    Case 5 + IindAdd
                        '-------------OT หลังเลิกงาน 1-------------

                        If ((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn1 <> "" And _ActualTime > _CheckTimeAIn And _ActualTime <= _CheckTimeOTIn1)) Then
                            _ActualScanOTIn1 = Right(_CheckTimeOTIn1, 5)
                        Else
                            _ActualScanOTIn1 = Right(_ActualTime, 5)
                        End If
                        '  _ActualScanOTIn1 = IIf((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn1 <> "" And _ActualTime > _CheckTimeAIn And _ActualTime <= _CheckTimeOTIn1), Right(_CheckTimeOTIn1, 5), _ActualScanOTIn1)
                    Case 6 + IindAdd

                        If (_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And _ActualScanOTIn1 <> "" And _ActualTime > _CheckTimeOTIn1) Then

                            If _ActualTime >= _CheckTimeOTOut1 Then
                                _ActualScanOTOut1 = Right(_CheckTimeOTOut1, 5)
                            Else
                                _ActualScanOTOut1 = Right(_ActualTime, 5)
                            End If

                        Else
                            _ActualScanOTOut1 = _ActualScanOTOut1
                        End If

                        '  _ActualScanOTOut1 = IIf((_ActualTime >= _CheckTimeOTIn1 And _CheckTimeOTOut1 <> "" And _ActualScanOTIn1 <> "" And _ActualTime > _CheckTimeOTIn1), Right(_ActualTime, 5), _ActualScanOTOut1)

                    Case 7 + IindAdd
                        '-------------OT หลังเลิกงาน 2-------------
                        _ActualScanOTIn2 = IIf((_ActualTime > _CheckTimeAOut And _CheckTimeOTIn2 <> "" And _ActualTime > _CheckTimeOTIn1), Right(_CheckTimeOTIn2, 5), _ActualScanOTIn2)
                    Case 8 + IindAdd
                        _ActualScanOTOut2 = IIf((_ActualTime >= _CheckTimeOTIn2 And _CheckTimeOTOut2 <> "" And _ActualScanOTIn2 <> "" And _ActualTime > _CheckTimeOTIn2), Right(_ActualTime, 5), _ActualScanOTOut2)
                End Select
            End If
        Next
        If _ActualScanMIn = _ActualScanMOut Then
            _ActualScanMIn = ""
            _ActualScanMOut = ""
        End If

        If _ActualScanAIn = _ActualScanAOut Then
            _ActualScanAIn = ""
            _ActualScanAOut = ""
        End If

        If FTActualScanOTInM = FTActualScanOTOutM Then
            FTActualScanOTOutM = ""
        End If
    End Sub

    Private Shared Function GetTimePayMinOnMonthPro(ByVal FnhSysEmpID As Integer, ByVal _EmpTypeId As Integer, ByVal FTPayYear As String, ByVal FNMonth As String) As Boolean

        Try

            Dim minPro As Integer = 0

            '' get work Time min 
            '' get leave pay  min
            '' Get Holiday min
            Dim _Cmd As String = ""
            ''get  End Date of month
            Dim _EndDate As String = ""

            _Cmd = " SELECT MAX(FDCalDateEnd) FDCalDateEnd  "
            _Cmd &= vbCrLf & " from [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRMCfgPayDT With(NOLOCK)  "
            _Cmd &= vbCrLf & " where FNHSysEmpTypeId = " & _EmpTypeId & " "
            _Cmd &= vbCrLf & "  And FTPayYear = '" & FTPayYear & "'"
            _Cmd &= vbCrLf & "  And FNMonth = '" & FNMonth & "'"
            _Cmd &= vbCrLf & " ORder by  FTPayYear desc , FTPayTerm desc "

            _EndDate = HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_HR, "")


            _Cmd = "  SELECT E.FNHSysEmpID , T.FNTimeMin + TL.FNTotalPayMinute + H.HolidayMin  as 'TimePayMin' "
            _Cmd &= vbCrLf & "  ,T.FNTimeMin , TL.FNTotalPayMinute , H.HolidayMin "
            _Cmd &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo..dbo.THRMEmployee  "
            _Cmd &= vbCrLf & " OUTER APPLY "
            _Cmd &= vbCrLf & "  ( "
            _Cmd &= vbCrLf & "   SELECT FNHSysEmpID ,SUM(ISNULL(FNTimeMin,0)) AS FNTimeMin "
            _Cmd &= vbCrLf & "   FrOM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTrans "
            _Cmd &= vbCrLf & "    where FTDateTrans>=E.FDDateProbation And FTDateTrans <='" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'"
            _Cmd &= vbCrLf & "   and FNHSysEmpID = E.FNHSysEmpID  GROUP BY FNHSysEmpID)  T  "
            _Cmd &= vbCrLf & "  OUTER APPLY "
            _Cmd &= vbCrLf & "   ( "
            _Cmd &= vbCrLf & "   SELECT FNHSysEmpID , SUM(ISNULL(FNTotalPayMinute,0))  AS  FNTotalPayMinute "
            _Cmd &= vbCrLf & "   FrOM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_HR) & "].dbo.THRTTransLeave "
            _Cmd &= vbCrLf & "  where FTDateTrans>=E.FDDateProbation And FTDateTrans <='" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "'"
            _Cmd &= vbCrLf & "  and FTLeaveType<> '97' and FNHSysEmpID = E.FNHSysEmpID  "
            _Cmd &= vbCrLf & "   GROUP BY FNHSysEmpID "
            _Cmd &= vbCrLf & "    ) TL "
            _Cmd &= vbCrLf & "  OUTER APPLY "
            _Cmd &= vbCrLf & " ( "
            _Cmd &= vbCrLf & " SELECT COUNT(FDHolidayDate)* 480 aS HolidayMin "
            _Cmd &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.[dbo].[THRMHoliday] H "
            _Cmd &= vbCrLf & "  where FNHSysCmpId = E.FNHSysCmpId and (H.FDHolidayDate>=E.FDDateProbation AND FDHolidayDate<='" & HI.UL.ULDate.ConvertEnDB(_EndDate) & "') "
            _Cmd &= vbCrLf & " ) H "
            _Cmd &= vbCrLf & " WHERE E.FNHSysEmpID = " & FnhSysEmpID & " "
            _Cmd &= vbCrLf & " "

            Dim _dt As DataTable
            _dt = HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_HR)

            For Each R As DataRow In _dt.Rows

                minPro = Val(R!TimePayMin.ToString)
            Next


            If minPro >= 10080 Then
                Return True
            Else
                Return False
            End If



        Catch ex As Exception
            Return False
        End Try



    End Function


#End Region

End Class

Public Class HCfg

    '...Sect control / Position control

    Public Structure structTaxRate
        Dim TaxIncomeMin As Double
        Dim TaxIncomeMax As Double
        Dim CalTaxRate As Double
        Dim DisAllowance As Double
    End Structure

    Public Shared HCfg_TaxRate() As structTaxRate

    Public Structure DiscountTax

        Dim Cfg_ModPersonalExpen As Double '% หัก ค่าใช้จ่ายส่วนบุคคล
        Dim Cfg_ModPersonalExpenChk As Double ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน
        Dim Cfg_ModChildAllowanceRateNotStudied As Double 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
        Dim Cfg_ModChildAllowanceRateStudy As Double 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
        Dim Cfg_ModChildAllowanceRateNumberOfChildren As Double 'บุตรศึกษา อัตราลดหย่อนบุตร บุตร กำลังศึกษา คนละ
        Dim Cfg_ModChildAllowanceAgeStart As Double 'ลดหย่อนบุตร อายุตั้งแต่
        Dim Cfg_ModChildAllowanceAgeEnd As Double ' ลดหย่อนบุตร ถึงอายุ

        '-------------ลดหย่อนบุตร-----------------
        '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
        Dim Cfg_ContributedDeducToTheFund As Double 'ลูกจ้าง

        Dim Cfg_ContributedDeducToTheFundBoss As Double 'นายจ้าง

        '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
        'กองทุนเงินทดแทน เปอร์เซนต์ จ่ายเงินสมทบเข้ากองทุน ของรายได้
        Dim Cfg_ContributedToTheFund As Double ' %
        Dim Cfg_ContributedIncomeMax As Double 'จำนวนเงินสูงสุด
        'กองทุนเงินทดแทน เปอร์เซนต์ จ่ายเงินสมทบเข้ากองทุน ของรายได้

        Dim Cfg_ModDeductibleDonations As Double ' % ลดหย่อนเงินบริจาค
        Dim Cfg_ModDeductDonateStudy As Double  ' ลดหย่อนเงินบริจาคเพื่อการศึกษา
        Dim Cfg_ModFatherReduction As Double 'ลดหย่อนบิดา
        Dim Cfg_ModInsurancePremiums As Double 'ค่าเบี้ยประกันชีวิตส่วนบุคคล
        Dim Cfg_ModLendingforHousing As Double 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย
        Dim Cfg_ModLTF As Double '% หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF)
        Dim Cfg_ModLTFChk As Double 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
        Dim Cfg_ModRMF As Double ' % หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF)
        Dim Cfg_ModRMFChk As Double ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 

        Dim Cfg_ModMateFatherReduction As Double 'ลดหย่อนบิดา คู่สมรส
        Dim Cfg_ModMateMotherReduction As Double 'ลดหย่อนมารดา คู่สมรส
        Dim Cfg_ModMotherReduction As Double 'ลดหย่อนมารดา

        Dim Cfg_ModRateReductionsByMarital As Double 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
        Dim Cfg_ModRateReductionsBySingle As Double 'อัตราลดหย่อน ตาม สถานภาพ โสด 

        Dim Cfg_ModSavingsFundOnly As Double 'เปอร์เซนต์ หักเงินสะสมกองทุนสำรองเลี้ยงชีพ ของค่าจ้าง
        Dim Cfg_ModSavingsFundOnlyChk As Double 'หักเงินสะสมกองทุนสำรองเลี้ยงชีพไม่เกิน

        Dim Cfg_ModSavingsFundOnlytheExcess As Double 'เงินสะสมกองทุนสำรองเลี้ยงชีพ เฉพาะส่วนที่เกิน
        Dim Cfg_ModSavingsFundOnlytheExcessChk As Double 'เงินสะสมกองทุนสำรองเลี้ยงชีพ เฉพาะส่วนที่เกิน ไม่เกิน

    End Structure

    Public Shared _DiscountTax As DiscountTax



    Public Structure structInsuranceVNRate
        'Dim SocialInsurance As Double
        'Dim HealthInsurance As Double
        'Dim UnemploymentInsurance As Double
        'Dim UnionInsurance As Double
        Dim FNInsuranceVN As Integer
        Dim FTInsuranceDesc As String
        Dim FNEmployeeRate As Double
        Dim FNEmployerRate As Double
    End Structure

    Public Shared HCfg_InsuranceVNRate() As structInsuranceVNRate



    Public Structure EmployeeDiscountTax
        Dim BaseSlary As Double
        Dim OtherSlary As Double
        Dim BeforeIncom As Double
        Dim BeforeTax As Double
        Dim BeforeContributed As Double

        Dim Cfg_ModChildAllowanceRateNotStudied As Double 'บุตรไม่ศึกษา อัตราลดหย่อนบุตร บุตร (ไม่ศึกษา) คนละ
        Dim Cfg_ModChildAllowanceRateStudy As Double 'บุตรจำนวนบุตรที่ลดหย่อนได้ 
        Dim Cfg_ModChildAllowanceAgeStart As Double 'ลดหย่อนบุตร อายุตั้งแต่
        Dim Cfg_ModChildAllowanceAgeEnd As Double ' ลดหย่อนบุตร ถึงอายุ
        '-------------ลดหย่อนบุตร-----------------

        '-- หักเงินสมทบเข้ากองทุนเลี้ยงชีพ
        Dim Cfg_ContributedDeducToTheFund As Double 'ลูกจ้าง

        ' Dim Cfg_ContributedDeducToTheFundBoss As Double 'นายจ้าง
        Dim FTMateIncome As Boolean
        '---เปอร์เซนต์ หักเงินสมทบเข้ากองทุนเลี้ยงชีพ

        Dim Cfg_ModDeductibleDonations As Double ' % ลดหย่อนเงินบริจาค
        Dim Cfg_ModDeductDonateStudy As Double  ' ลดหย่อนเงินบริจาคเพื่อการศึกษา
        Dim Cfg_ModFatherReduction As Double 'ลดหย่อนบิดา
        Dim Cfg_ModInsurancePremiums As Double 'ค่าเบี้ยประกันชีวิตส่วนบุคคล
        Dim Cfg_ModLendingforHousing As Double 'ดอกเบี้ยเงินกู้เพื่อที่อยู่อาศัย
        Dim Cfg_ModLTFChk As Double 'หักค่าซื้อหน่วยลงทุนในกองทุนรวมหุ้นระยะยาว (LTF) ไม่เกิน
        Dim Cfg_ModMateFatherReduction As Double 'ลดหย่อนบิดา คู่สมรส
        Dim Cfg_ModMateMotherReduction As Double 'ลดหย่อนมารดา คู่สมรส
        Dim Cfg_ModMotherReduction As Double 'ลดหย่อนมารดา
        Dim Cfg_ModPersonalExpenChk As Double ' ค่าใช้จ่ายส่วนบุคคล ลดหย่อนไม่เกิน
        Dim Cfg_ModRateReductionsByMarital As Double 'อัตราลดหย่อน ตาม สถานภาพ คู่สมรส 
        Dim Cfg_ModRateReductionsBySingle As Double 'อัตราลดหย่อน ตาม สถานภาพ โสด 
        Dim Cfg_ModRMFChk As Double ' หักค่าซื้อหน่วยลงทุนในกองทุนรวมเพื่อการเลี้ยงชีพ (RMF) ไม่เกิน 
        Dim FCDisabledDependents As Double
        Dim FCHealthInsurFatherMotherMate As Double
        Dim FTSosial As Double

        Dim FCExceptAgeOver As Double   'รายการเงินได้ที่ได้รับยกเว้น ของผู้มีเงินได้ตั้งแต่ 65 ปีขึ้นไป 
        Dim FCExceptAgeOverMate As Double   'รายการเงินได้ที่ได้รับยกเว้น ของคู่สมรสอายุตั้งแต่ 65 ปีขึ้นไป
        Dim FCDeductDividend As Double 'รายการลดหย่อนเงินปันผล

    End Structure


    Public Structure ST_SocialRate
        Dim SocialIncomeMin As Double
        Dim SocialIncomeMax As Double
        Dim CalSocialRate As Double
        Dim CalSocialRateCmp As Double
        Dim StateSocialOnlyCmppay As Boolean

    End Structure

    Public Structure EmpTaxYear

        Dim FTAmt As Double  'เงินได้ก่อนหักค่าใช้จ่าย
        Dim FTExpenses As Double 'ค่าใช้จ่ายส่วนตัว
        Dim FTNetAmt As Double 'เงินได้หลังหักค่าใช้จ่าย
        Dim FTModEmp As Double 'ลดหย่อนส่วนตัว
        Dim FTModMate As Double 'ลดหย่อนคู่สมรส
        Dim FNChildNotLern As Double 'จำนวนบุตรไม่ศึกษา
        Dim FNChildLern As Double 'จำนวนบุตรศึกษา
        Dim FTChildNotLern As Double 'ลดหย่อนบุตรไม่ศึกษา
        Dim FTChildLern As Double 'ลดหย่อนบุตรศึกษา
        Dim FTInsurance As Double 'ลดหย่อนเบี้ยประกัน
        Dim FTProvidentfund As Double 'กองทุนเลียงชีพส่วนที่ไม่เกิน 10000
        Dim FTInterest As Double 'ดอกเบี้ยเงินกู้
        Dim FTSocial As Double 'ประกันสังคม
        Dim FTDonation As Double 'เงินบริจาค
        Dim FTProvidentfundOver As Double 'กองทุนเลียงชีพส่วนที่เกิน 10000
        Dim FTGPF As Double 'เงิน กบข.
        Dim FTSavingsFund As Double 'เงินกองทุนสงเคราะห์
        Dim FTCommutation As Double 'เงินชดเชยตามกฎหมายแรงงาน
        Dim FTUnitRMF As Double 'ค่าซื้อหน่วยลงทุน RTF
        Dim FTModFather As Double 'ลดหย่อนบิดา
        Dim FTModMother As Double 'ลดหย่อนมารดา
        Dim FTModFatherMate As Double 'ลดหย่อนบิดาคู่สมรส
        Dim FTModMotherMate As Double 'ลดหย่อนมารดาคู่สมรส
        Dim FTUnitLTF As Double 'ค่าซื้อหน่วยลงทุน LTF
        Dim FTDonationLern As Double 'เงินบริจาคเพื่อสนับสนุนการศึกษา
        Dim FTParentsHealthInsurance As Double 'เบี้ยประกันสุขภาพบิดามารดา
        Dim FTSupportSport As Double 'เงินสนับสนุนการกีฬา
        Dim FTAcquisitionOfProperty As Double 'ค่าซื้ออาคาร
        Dim FTPension As Double 'บำนาญ
        Dim FTTravel As Double 'ท่องเที่ยวในประเทศ
        Dim FTTotalCalTax As Double 'เงินได้สุทธิ
        Dim FTTotalTax As Double 'ภาษีที่ต้องจ่าย

        Dim FTTotalCalPayTax As Double 'เงินได้สุทธิ
        Dim FTTotalTaxPay As Double 'ภาษีที่ต้องจ่าย

    End Structure

    Public Shared HEmployeeTaxYear As EmpTaxYear
    Public Shared HSocialRate As ST_SocialRate
    Public Shared HMaxSocialBaht As Double
    Public Shared HMarryIncome As Boolean

End Class