'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet1"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet1
    Inherits Global.System.Data.DataSet
    
    Private tableTMERTMPR As TMERTMPRDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("TMERTMPR")) Is Nothing) Then
                MyBase.Tables.Add(New TMERTMPRDataTable(ds.Tables("TMERTMPR")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TMERTMPR() As TMERTMPRDataTable
        Get
            Return Me.tableTMERTMPR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet1 = CType(MyBase.Clone,DataSet1)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("TMERTMPR")) Is Nothing) Then
                MyBase.Tables.Add(New TMERTMPRDataTable(ds.Tables("TMERTMPR")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableTMERTMPR = CType(MyBase.Tables("TMERTMPR"),TMERTMPRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTMERTMPR) Is Nothing) Then
                Me.tableTMERTMPR.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet1"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableTMERTMPR = New TMERTMPRDataTable()
        MyBase.Tables.Add(Me.tableTMERTMPR)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTMERTMPR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet1 = New DataSet1()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TMERTMPRRowChangeEventHandler(ByVal sender As Object, ByVal e As TMERTMPRRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TMERTMPRDataTable
        Inherits Global.System.Data.TypedTableBase(Of TMERTMPRRow)
        
        Private columnFTInsUser As Global.System.Data.DataColumn
        
        Private columnFDInsDate As Global.System.Data.DataColumn
        
        Private columnFTInsTime As Global.System.Data.DataColumn
        
        Private columnFTUpdUser As Global.System.Data.DataColumn
        
        Private columnFDUpdDate As Global.System.Data.DataColumn
        
        Private columnFTUpdTime As Global.System.Data.DataColumn
        
        Private columnFNHSysStyleId As Global.System.Data.DataColumn
        
        Private columnFNSeq As Global.System.Data.DataColumn
        
        Private columnFNMerMatSeq As Global.System.Data.DataColumn
        
        Private columnFNHSysMerMatId As Global.System.Data.DataColumn
        
        Private columnFNHSysRawMatId As Global.System.Data.DataColumn
        
        Private columnFNColorWaySeq As Global.System.Data.DataColumn
        
        Private columnFNHSysRawMatColorId As Global.System.Data.DataColumn
        
        Private columnFNRawMatColorSeq As Global.System.Data.DataColumn
        
        Private columnFNHSysMatColorId As Global.System.Data.DataColumn
        
        Private columnFNMatColorSeq As Global.System.Data.DataColumn
        
        Private columnFTRawMatColorCode As Global.System.Data.DataColumn
        
        Private columnFTMatColorCode As Global.System.Data.DataColumn
        
        Private columnFTRawMatColorNameEN As Global.System.Data.DataColumn
        
        Private columnFTRawMatColorNameTH As Global.System.Data.DataColumn
        
        Private columnFTMatColorNameEN As Global.System.Data.DataColumn
        
        Private columnFTMatColorNameTH As Global.System.Data.DataColumn
        
        Private columnFNSieBreakDownSeq As Global.System.Data.DataColumn
        
        Private columnFNHSysRawMatSizeId As Global.System.Data.DataColumn
        
        Private columnFNRawMatSizeSeq As Global.System.Data.DataColumn
        
        Private columnFNHSysMatSizeId As Global.System.Data.DataColumn
        
        Private columnFNMatSizeSeq As Global.System.Data.DataColumn
        
        Private columnFTRawMatSizeCode As Global.System.Data.DataColumn
        
        Private columnFTMatSizeCode As Global.System.Data.DataColumn
        
        Private columnFTRawMatSizeNameEN As Global.System.Data.DataColumn
        
        Private columnFTRawMatSizeNameTH As Global.System.Data.DataColumn
        
        Private columnFTMatSizeNameEN As Global.System.Data.DataColumn
        
        Private columnFTMatSizeNameTH As Global.System.Data.DataColumn
        
        Private columnFTOrderNo1 As Global.System.Data.DataColumn
        
        Private columnFTSubOrderNo1 As Global.System.Data.DataColumn
        
        Private columnFNConSmp As Global.System.Data.DataColumn
        
        Private columnFNConSmpPlus As Global.System.Data.DataColumn
        
        Private columnFTMainMatCode As Global.System.Data.DataColumn
        
        Private columnFNHSysMerMatId_None As Global.System.Data.DataColumn
        
        Private columnFTMainMatNameTH As Global.System.Data.DataColumn
        
        Private columnFTFabricFrontSize As Global.System.Data.DataColumn
        
        Private columnFTStyleCode As Global.System.Data.DataColumn
        
        Private columnFNHSysUnitId As Global.System.Data.DataColumn
        
        Private columnFTUnitCode As Global.System.Data.DataColumn
        
        Private columnFNHSysBuyId As Global.System.Data.DataColumn
        
        Private columnFTOrderNo As Global.System.Data.DataColumn
        
        Private columnFTSubOrderNo As Global.System.Data.DataColumn
        
        Private columnFNQuantity As Global.System.Data.DataColumn
        
        Private columnFNQuantityExtra As Global.System.Data.DataColumn
        
        Private columnFNUsedQuantity As Global.System.Data.DataColumn
        
        Private columnFNUsedPlusQuantity As Global.System.Data.DataColumn
        
        Private columnFNPRQuantity As Global.System.Data.DataColumn
        
        Private columnFNPRTotalPrice As Global.System.Data.DataColumn
        
        Private columnFNHSysSuplId As Global.System.Data.DataColumn
        
        Private columnFTStateNominate As Global.System.Data.DataColumn
        
        Private columnFNPrice As Global.System.Data.DataColumn
        
        Private columnFNHSysCurId As Global.System.Data.DataColumn
        
        Private columnFTSuplCode As Global.System.Data.DataColumn
        
        Private columnFTCurCode As Global.System.Data.DataColumn
        
        Private columnFNHSysCustId As Global.System.Data.DataColumn
        
        Private columnFDOrderDate As Global.System.Data.DataColumn
        
        Private columnFDShipDate As Global.System.Data.DataColumn
        
        Private columnFNStateChange As Global.System.Data.DataColumn
        
        Private columnFNStateSourcing As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TMERTMPR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTInsUserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTInsUser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FDInsDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFDInsDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTInsTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTInsTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTUpdUserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTUpdUser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FDUpdDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFDUpdDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTUpdTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTUpdTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNHSysStyleIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNHSysStyleId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNSeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNMerMatSeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNMerMatSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNHSysMerMatIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNHSysMerMatId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNHSysRawMatIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNHSysRawMatId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNColorWaySeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNColorWaySeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNHSysRawMatColorIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNHSysRawMatColorId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNRawMatColorSeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNRawMatColorSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNHSysMatColorIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNHSysMatColorId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNMatColorSeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNMatColorSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTRawMatColorCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTRawMatColorCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTMatColorCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTMatColorCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTRawMatColorNameENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTRawMatColorNameEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTRawMatColorNameTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTRawMatColorNameTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTMatColorNameENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTMatColorNameEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTMatColorNameTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTMatColorNameTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNSieBreakDownSeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNSieBreakDownSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNHSysRawMatSizeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNHSysRawMatSizeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNRawMatSizeSeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNRawMatSizeSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNHSysMatSizeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNHSysMatSizeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNMatSizeSeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNMatSizeSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTRawMatSizeCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTRawMatSizeCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTMatSizeCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTMatSizeCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTRawMatSizeNameENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTRawMatSizeNameEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTRawMatSizeNameTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTRawMatSizeNameTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTMatSizeNameENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTMatSizeNameEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTMatSizeNameTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTMatSizeNameTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTOrderNo1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTOrderNo1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTSubOrderNo1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTSubOrderNo1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNConSmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNConSmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNConSmpPlusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNConSmpPlus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTMainMatCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTMainMatCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNHSysMerMatId_NoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNHSysMerMatId_None
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTMainMatNameTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTMainMatNameTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTFabricFrontSizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTFabricFrontSize
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTStyleCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTStyleCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNHSysUnitIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNHSysUnitId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTUnitCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTUnitCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNHSysBuyIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNHSysBuyId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTOrderNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTOrderNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTSubOrderNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTSubOrderNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNQuantityExtraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNQuantityExtra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNUsedQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNUsedQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNUsedPlusQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNUsedPlusQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNPRQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNPRQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNPRTotalPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNPRTotalPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNHSysSuplIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNHSysSuplId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTStateNominateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTStateNominate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNHSysCurIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNHSysCurId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTSuplCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTSuplCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTCurCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTCurCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNHSysCustIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNHSysCustId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FDOrderDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFDOrderDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FDShipDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFDShipDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNStateChangeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNStateChange
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNStateSourcingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNStateSourcing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TMERTMPRRow
            Get
                Return CType(Me.Rows(index),TMERTMPRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TMERTMPRRowChanging As TMERTMPRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TMERTMPRRowChanged As TMERTMPRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TMERTMPRRowDeleting As TMERTMPRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TMERTMPRRowDeleted As TMERTMPRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTMERTMPRRow(ByVal row As TMERTMPRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTMERTMPRRow( _
                    ByVal FTInsUser As String,  _
                    ByVal FDInsDate As String,  _
                    ByVal FTInsTime As String,  _
                    ByVal FTUpdUser As String,  _
                    ByVal FDUpdDate As String,  _
                    ByVal FTUpdTime As String,  _
                    ByVal FNHSysStyleId As Integer,  _
                    ByVal FNSeq As Decimal,  _
                    ByVal FNMerMatSeq As Decimal,  _
                    ByVal FNHSysMerMatId As Integer,  _
                    ByVal FNHSysRawMatId As Integer,  _
                    ByVal FNColorWaySeq As Integer,  _
                    ByVal FNHSysRawMatColorId As Integer,  _
                    ByVal FNRawMatColorSeq As Decimal,  _
                    ByVal FNHSysMatColorId As Integer,  _
                    ByVal FNMatColorSeq As Decimal,  _
                    ByVal FTRawMatColorCode As String,  _
                    ByVal FTMatColorCode As String,  _
                    ByVal FTRawMatColorNameEN As String,  _
                    ByVal FTRawMatColorNameTH As String,  _
                    ByVal FTMatColorNameEN As String,  _
                    ByVal FTMatColorNameTH As String,  _
                    ByVal FNSieBreakDownSeq As Integer,  _
                    ByVal FNHSysRawMatSizeId As Integer,  _
                    ByVal FNRawMatSizeSeq As Decimal,  _
                    ByVal FNHSysMatSizeId As Integer,  _
                    ByVal FNMatSizeSeq As Decimal,  _
                    ByVal FTRawMatSizeCode As String,  _
                    ByVal FTMatSizeCode As String,  _
                    ByVal FTRawMatSizeNameEN As String,  _
                    ByVal FTRawMatSizeNameTH As String,  _
                    ByVal FTMatSizeNameEN As String,  _
                    ByVal FTMatSizeNameTH As String,  _
                    ByVal FTOrderNo1 As String,  _
                    ByVal FTSubOrderNo1 As String,  _
                    ByVal FNConSmp As Decimal,  _
                    ByVal FNConSmpPlus As Decimal,  _
                    ByVal FTMainMatCode As String,  _
                    ByVal FNHSysMerMatId_None As String,  _
                    ByVal FTMainMatNameTH As String,  _
                    ByVal FTFabricFrontSize As String,  _
                    ByVal FTStyleCode As String,  _
                    ByVal FNHSysUnitId As Integer,  _
                    ByVal FTUnitCode As String,  _
                    ByVal FNHSysBuyId As Integer,  _
                    ByVal FTOrderNo As String,  _
                    ByVal FTSubOrderNo As String,  _
                    ByVal FNQuantity As Integer,  _
                    ByVal FNQuantityExtra As Decimal,  _
                    ByVal FNUsedQuantity As Decimal,  _
                    ByVal FNUsedPlusQuantity As Decimal,  _
                    ByVal FNPRQuantity As Decimal,  _
                    ByVal FNPRTotalPrice As Decimal,  _
                    ByVal FNHSysSuplId As Integer,  _
                    ByVal FTStateNominate As String,  _
                    ByVal FNPrice As Decimal,  _
                    ByVal FNHSysCurId As Integer,  _
                    ByVal FTSuplCode As String,  _
                    ByVal FTCurCode As String,  _
                    ByVal FNHSysCustId As Integer,  _
                    ByVal FDOrderDate As String,  _
                    ByVal FDShipDate As String,  _
                    ByVal FNStateChange As String,  _
                    ByVal FNStateSourcing As String) As TMERTMPRRow
            Dim rowTMERTMPRRow As TMERTMPRRow = CType(Me.NewRow,TMERTMPRRow)
            Dim columnValuesArray() As Object = New Object() {FTInsUser, FDInsDate, FTInsTime, FTUpdUser, FDUpdDate, FTUpdTime, FNHSysStyleId, FNSeq, FNMerMatSeq, FNHSysMerMatId, FNHSysRawMatId, FNColorWaySeq, FNHSysRawMatColorId, FNRawMatColorSeq, FNHSysMatColorId, FNMatColorSeq, FTRawMatColorCode, FTMatColorCode, FTRawMatColorNameEN, FTRawMatColorNameTH, FTMatColorNameEN, FTMatColorNameTH, FNSieBreakDownSeq, FNHSysRawMatSizeId, FNRawMatSizeSeq, FNHSysMatSizeId, FNMatSizeSeq, FTRawMatSizeCode, FTMatSizeCode, FTRawMatSizeNameEN, FTRawMatSizeNameTH, FTMatSizeNameEN, FTMatSizeNameTH, FTOrderNo1, FTSubOrderNo1, FNConSmp, FNConSmpPlus, FTMainMatCode, FNHSysMerMatId_None, FTMainMatNameTH, FTFabricFrontSize, FTStyleCode, FNHSysUnitId, FTUnitCode, FNHSysBuyId, FTOrderNo, FTSubOrderNo, FNQuantity, FNQuantityExtra, FNUsedQuantity, FNUsedPlusQuantity, FNPRQuantity, FNPRTotalPrice, FNHSysSuplId, FTStateNominate, FNPrice, FNHSysCurId, FTSuplCode, FTCurCode, FNHSysCustId, FDOrderDate, FDShipDate, FNStateChange, FNStateSourcing}
            rowTMERTMPRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTMERTMPRRow)
            Return rowTMERTMPRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TMERTMPRDataTable = CType(MyBase.Clone,TMERTMPRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TMERTMPRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFTInsUser = MyBase.Columns("FTInsUser")
            Me.columnFDInsDate = MyBase.Columns("FDInsDate")
            Me.columnFTInsTime = MyBase.Columns("FTInsTime")
            Me.columnFTUpdUser = MyBase.Columns("FTUpdUser")
            Me.columnFDUpdDate = MyBase.Columns("FDUpdDate")
            Me.columnFTUpdTime = MyBase.Columns("FTUpdTime")
            Me.columnFNHSysStyleId = MyBase.Columns("FNHSysStyleId")
            Me.columnFNSeq = MyBase.Columns("FNSeq")
            Me.columnFNMerMatSeq = MyBase.Columns("FNMerMatSeq")
            Me.columnFNHSysMerMatId = MyBase.Columns("FNHSysMerMatId")
            Me.columnFNHSysRawMatId = MyBase.Columns("FNHSysRawMatId")
            Me.columnFNColorWaySeq = MyBase.Columns("FNColorWaySeq")
            Me.columnFNHSysRawMatColorId = MyBase.Columns("FNHSysRawMatColorId")
            Me.columnFNRawMatColorSeq = MyBase.Columns("FNRawMatColorSeq")
            Me.columnFNHSysMatColorId = MyBase.Columns("FNHSysMatColorId")
            Me.columnFNMatColorSeq = MyBase.Columns("FNMatColorSeq")
            Me.columnFTRawMatColorCode = MyBase.Columns("FTRawMatColorCode")
            Me.columnFTMatColorCode = MyBase.Columns("FTMatColorCode")
            Me.columnFTRawMatColorNameEN = MyBase.Columns("FTRawMatColorNameEN")
            Me.columnFTRawMatColorNameTH = MyBase.Columns("FTRawMatColorNameTH")
            Me.columnFTMatColorNameEN = MyBase.Columns("FTMatColorNameEN")
            Me.columnFTMatColorNameTH = MyBase.Columns("FTMatColorNameTH")
            Me.columnFNSieBreakDownSeq = MyBase.Columns("FNSieBreakDownSeq")
            Me.columnFNHSysRawMatSizeId = MyBase.Columns("FNHSysRawMatSizeId")
            Me.columnFNRawMatSizeSeq = MyBase.Columns("FNRawMatSizeSeq")
            Me.columnFNHSysMatSizeId = MyBase.Columns("FNHSysMatSizeId")
            Me.columnFNMatSizeSeq = MyBase.Columns("FNMatSizeSeq")
            Me.columnFTRawMatSizeCode = MyBase.Columns("FTRawMatSizeCode")
            Me.columnFTMatSizeCode = MyBase.Columns("FTMatSizeCode")
            Me.columnFTRawMatSizeNameEN = MyBase.Columns("FTRawMatSizeNameEN")
            Me.columnFTRawMatSizeNameTH = MyBase.Columns("FTRawMatSizeNameTH")
            Me.columnFTMatSizeNameEN = MyBase.Columns("FTMatSizeNameEN")
            Me.columnFTMatSizeNameTH = MyBase.Columns("FTMatSizeNameTH")
            Me.columnFTOrderNo1 = MyBase.Columns("FTOrderNo1")
            Me.columnFTSubOrderNo1 = MyBase.Columns("FTSubOrderNo1")
            Me.columnFNConSmp = MyBase.Columns("FNConSmp")
            Me.columnFNConSmpPlus = MyBase.Columns("FNConSmpPlus")
            Me.columnFTMainMatCode = MyBase.Columns("FTMainMatCode")
            Me.columnFNHSysMerMatId_None = MyBase.Columns("FNHSysMerMatId_None")
            Me.columnFTMainMatNameTH = MyBase.Columns("FTMainMatNameTH")
            Me.columnFTFabricFrontSize = MyBase.Columns("FTFabricFrontSize")
            Me.columnFTStyleCode = MyBase.Columns("FTStyleCode")
            Me.columnFNHSysUnitId = MyBase.Columns("FNHSysUnitId")
            Me.columnFTUnitCode = MyBase.Columns("FTUnitCode")
            Me.columnFNHSysBuyId = MyBase.Columns("FNHSysBuyId")
            Me.columnFTOrderNo = MyBase.Columns("FTOrderNo")
            Me.columnFTSubOrderNo = MyBase.Columns("FTSubOrderNo")
            Me.columnFNQuantity = MyBase.Columns("FNQuantity")
            Me.columnFNQuantityExtra = MyBase.Columns("FNQuantityExtra")
            Me.columnFNUsedQuantity = MyBase.Columns("FNUsedQuantity")
            Me.columnFNUsedPlusQuantity = MyBase.Columns("FNUsedPlusQuantity")
            Me.columnFNPRQuantity = MyBase.Columns("FNPRQuantity")
            Me.columnFNPRTotalPrice = MyBase.Columns("FNPRTotalPrice")
            Me.columnFNHSysSuplId = MyBase.Columns("FNHSysSuplId")
            Me.columnFTStateNominate = MyBase.Columns("FTStateNominate")
            Me.columnFNPrice = MyBase.Columns("FNPrice")
            Me.columnFNHSysCurId = MyBase.Columns("FNHSysCurId")
            Me.columnFTSuplCode = MyBase.Columns("FTSuplCode")
            Me.columnFTCurCode = MyBase.Columns("FTCurCode")
            Me.columnFNHSysCustId = MyBase.Columns("FNHSysCustId")
            Me.columnFDOrderDate = MyBase.Columns("FDOrderDate")
            Me.columnFDShipDate = MyBase.Columns("FDShipDate")
            Me.columnFNStateChange = MyBase.Columns("FNStateChange")
            Me.columnFNStateSourcing = MyBase.Columns("FNStateSourcing")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFTInsUser = New Global.System.Data.DataColumn("FTInsUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTInsUser)
            Me.columnFDInsDate = New Global.System.Data.DataColumn("FDInsDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFDInsDate)
            Me.columnFTInsTime = New Global.System.Data.DataColumn("FTInsTime", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTInsTime)
            Me.columnFTUpdUser = New Global.System.Data.DataColumn("FTUpdUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTUpdUser)
            Me.columnFDUpdDate = New Global.System.Data.DataColumn("FDUpdDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFDUpdDate)
            Me.columnFTUpdTime = New Global.System.Data.DataColumn("FTUpdTime", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTUpdTime)
            Me.columnFNHSysStyleId = New Global.System.Data.DataColumn("FNHSysStyleId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNHSysStyleId)
            Me.columnFNSeq = New Global.System.Data.DataColumn("FNSeq", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNSeq)
            Me.columnFNMerMatSeq = New Global.System.Data.DataColumn("FNMerMatSeq", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNMerMatSeq)
            Me.columnFNHSysMerMatId = New Global.System.Data.DataColumn("FNHSysMerMatId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNHSysMerMatId)
            Me.columnFNHSysRawMatId = New Global.System.Data.DataColumn("FNHSysRawMatId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNHSysRawMatId)
            Me.columnFNColorWaySeq = New Global.System.Data.DataColumn("FNColorWaySeq", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNColorWaySeq)
            Me.columnFNHSysRawMatColorId = New Global.System.Data.DataColumn("FNHSysRawMatColorId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNHSysRawMatColorId)
            Me.columnFNRawMatColorSeq = New Global.System.Data.DataColumn("FNRawMatColorSeq", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNRawMatColorSeq)
            Me.columnFNHSysMatColorId = New Global.System.Data.DataColumn("FNHSysMatColorId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNHSysMatColorId)
            Me.columnFNMatColorSeq = New Global.System.Data.DataColumn("FNMatColorSeq", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNMatColorSeq)
            Me.columnFTRawMatColorCode = New Global.System.Data.DataColumn("FTRawMatColorCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTRawMatColorCode)
            Me.columnFTMatColorCode = New Global.System.Data.DataColumn("FTMatColorCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTMatColorCode)
            Me.columnFTRawMatColorNameEN = New Global.System.Data.DataColumn("FTRawMatColorNameEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTRawMatColorNameEN)
            Me.columnFTRawMatColorNameTH = New Global.System.Data.DataColumn("FTRawMatColorNameTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTRawMatColorNameTH)
            Me.columnFTMatColorNameEN = New Global.System.Data.DataColumn("FTMatColorNameEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTMatColorNameEN)
            Me.columnFTMatColorNameTH = New Global.System.Data.DataColumn("FTMatColorNameTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTMatColorNameTH)
            Me.columnFNSieBreakDownSeq = New Global.System.Data.DataColumn("FNSieBreakDownSeq", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNSieBreakDownSeq)
            Me.columnFNHSysRawMatSizeId = New Global.System.Data.DataColumn("FNHSysRawMatSizeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNHSysRawMatSizeId)
            Me.columnFNRawMatSizeSeq = New Global.System.Data.DataColumn("FNRawMatSizeSeq", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNRawMatSizeSeq)
            Me.columnFNHSysMatSizeId = New Global.System.Data.DataColumn("FNHSysMatSizeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNHSysMatSizeId)
            Me.columnFNMatSizeSeq = New Global.System.Data.DataColumn("FNMatSizeSeq", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNMatSizeSeq)
            Me.columnFTRawMatSizeCode = New Global.System.Data.DataColumn("FTRawMatSizeCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTRawMatSizeCode)
            Me.columnFTMatSizeCode = New Global.System.Data.DataColumn("FTMatSizeCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTMatSizeCode)
            Me.columnFTRawMatSizeNameEN = New Global.System.Data.DataColumn("FTRawMatSizeNameEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTRawMatSizeNameEN)
            Me.columnFTRawMatSizeNameTH = New Global.System.Data.DataColumn("FTRawMatSizeNameTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTRawMatSizeNameTH)
            Me.columnFTMatSizeNameEN = New Global.System.Data.DataColumn("FTMatSizeNameEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTMatSizeNameEN)
            Me.columnFTMatSizeNameTH = New Global.System.Data.DataColumn("FTMatSizeNameTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTMatSizeNameTH)
            Me.columnFTOrderNo1 = New Global.System.Data.DataColumn("FTOrderNo1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTOrderNo1)
            Me.columnFTSubOrderNo1 = New Global.System.Data.DataColumn("FTSubOrderNo1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTSubOrderNo1)
            Me.columnFNConSmp = New Global.System.Data.DataColumn("FNConSmp", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNConSmp)
            Me.columnFNConSmpPlus = New Global.System.Data.DataColumn("FNConSmpPlus", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNConSmpPlus)
            Me.columnFTMainMatCode = New Global.System.Data.DataColumn("FTMainMatCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTMainMatCode)
            Me.columnFNHSysMerMatId_None = New Global.System.Data.DataColumn("FNHSysMerMatId_None", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNHSysMerMatId_None)
            Me.columnFTMainMatNameTH = New Global.System.Data.DataColumn("FTMainMatNameTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTMainMatNameTH)
            Me.columnFTFabricFrontSize = New Global.System.Data.DataColumn("FTFabricFrontSize", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTFabricFrontSize)
            Me.columnFTStyleCode = New Global.System.Data.DataColumn("FTStyleCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTStyleCode)
            Me.columnFNHSysUnitId = New Global.System.Data.DataColumn("FNHSysUnitId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNHSysUnitId)
            Me.columnFTUnitCode = New Global.System.Data.DataColumn("FTUnitCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTUnitCode)
            Me.columnFNHSysBuyId = New Global.System.Data.DataColumn("FNHSysBuyId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNHSysBuyId)
            Me.columnFTOrderNo = New Global.System.Data.DataColumn("FTOrderNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTOrderNo)
            Me.columnFTSubOrderNo = New Global.System.Data.DataColumn("FTSubOrderNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTSubOrderNo)
            Me.columnFNQuantity = New Global.System.Data.DataColumn("FNQuantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNQuantity)
            Me.columnFNQuantityExtra = New Global.System.Data.DataColumn("FNQuantityExtra", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNQuantityExtra)
            Me.columnFNUsedQuantity = New Global.System.Data.DataColumn("FNUsedQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNUsedQuantity)
            Me.columnFNUsedPlusQuantity = New Global.System.Data.DataColumn("FNUsedPlusQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNUsedPlusQuantity)
            Me.columnFNPRQuantity = New Global.System.Data.DataColumn("FNPRQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNPRQuantity)
            Me.columnFNPRTotalPrice = New Global.System.Data.DataColumn("FNPRTotalPrice", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNPRTotalPrice)
            Me.columnFNHSysSuplId = New Global.System.Data.DataColumn("FNHSysSuplId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNHSysSuplId)
            Me.columnFTStateNominate = New Global.System.Data.DataColumn("FTStateNominate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTStateNominate)
            Me.columnFNPrice = New Global.System.Data.DataColumn("FNPrice", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNPrice)
            Me.columnFNHSysCurId = New Global.System.Data.DataColumn("FNHSysCurId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNHSysCurId)
            Me.columnFTSuplCode = New Global.System.Data.DataColumn("FTSuplCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTSuplCode)
            Me.columnFTCurCode = New Global.System.Data.DataColumn("FTCurCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTCurCode)
            Me.columnFNHSysCustId = New Global.System.Data.DataColumn("FNHSysCustId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNHSysCustId)
            Me.columnFDOrderDate = New Global.System.Data.DataColumn("FDOrderDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFDOrderDate)
            Me.columnFDShipDate = New Global.System.Data.DataColumn("FDShipDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFDShipDate)
            Me.columnFNStateChange = New Global.System.Data.DataColumn("FNStateChange", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNStateChange)
            Me.columnFNStateSourcing = New Global.System.Data.DataColumn("FNStateSourcing", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNStateSourcing)
            Me.columnFTInsUser.MaxLength = 100
            Me.columnFDInsDate.MaxLength = 10
            Me.columnFTInsTime.MaxLength = 8
            Me.columnFTUpdUser.MaxLength = 100
            Me.columnFDUpdDate.MaxLength = 10
            Me.columnFTUpdTime.MaxLength = 8
            Me.columnFNHSysStyleId.AllowDBNull = false
            Me.columnFNSeq.AllowDBNull = false
            Me.columnFNMerMatSeq.AllowDBNull = false
            Me.columnFNHSysMerMatId.AllowDBNull = false
            Me.columnFNHSysRawMatId.AllowDBNull = false
            Me.columnFTRawMatColorCode.MaxLength = 30
            Me.columnFTMatColorCode.MaxLength = 30
            Me.columnFTRawMatColorNameEN.MaxLength = 100
            Me.columnFTRawMatColorNameTH.MaxLength = 100
            Me.columnFTMatColorNameEN.MaxLength = 100
            Me.columnFTMatColorNameTH.MaxLength = 100
            Me.columnFTRawMatSizeCode.MaxLength = 30
            Me.columnFTMatSizeCode.MaxLength = 30
            Me.columnFTRawMatSizeNameEN.MaxLength = 100
            Me.columnFTRawMatSizeNameTH.MaxLength = 100
            Me.columnFTMatSizeNameEN.MaxLength = 100
            Me.columnFTMatSizeNameTH.MaxLength = 100
            Me.columnFTOrderNo1.MaxLength = 30
            Me.columnFTSubOrderNo1.MaxLength = 30
            Me.columnFTMainMatCode.MaxLength = 30
            Me.columnFNHSysMerMatId_None.MaxLength = 2000
            Me.columnFTMainMatNameTH.MaxLength = 2000
            Me.columnFTFabricFrontSize.MaxLength = 50
            Me.columnFTStyleCode.MaxLength = 50
            Me.columnFTUnitCode.MaxLength = 30
            Me.columnFTOrderNo.AllowDBNull = false
            Me.columnFTOrderNo.MaxLength = 30
            Me.columnFTSubOrderNo.AllowDBNull = false
            Me.columnFTSubOrderNo.MaxLength = 30
            Me.columnFNQuantity.AllowDBNull = false
            Me.columnFNQuantityExtra.AllowDBNull = false
            Me.columnFTStateNominate.MaxLength = 1
            Me.columnFTSuplCode.MaxLength = 30
            Me.columnFTCurCode.MaxLength = 30
            Me.columnFDOrderDate.MaxLength = 10
            Me.columnFDShipDate.MaxLength = 10
            Me.columnFNStateChange.MaxLength = 1
            Me.columnFNStateSourcing.ReadOnly = true
            Me.columnFNStateSourcing.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTMERTMPRRow() As TMERTMPRRow
            Return CType(Me.NewRow,TMERTMPRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TMERTMPRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TMERTMPRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TMERTMPRRowChangedEvent) Is Nothing) Then
                RaiseEvent TMERTMPRRowChanged(Me, New TMERTMPRRowChangeEvent(CType(e.Row,TMERTMPRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TMERTMPRRowChangingEvent) Is Nothing) Then
                RaiseEvent TMERTMPRRowChanging(Me, New TMERTMPRRowChangeEvent(CType(e.Row,TMERTMPRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TMERTMPRRowDeletedEvent) Is Nothing) Then
                RaiseEvent TMERTMPRRowDeleted(Me, New TMERTMPRRowChangeEvent(CType(e.Row,TMERTMPRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TMERTMPRRowDeletingEvent) Is Nothing) Then
                RaiseEvent TMERTMPRRowDeleting(Me, New TMERTMPRRowChangeEvent(CType(e.Row,TMERTMPRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTMERTMPRRow(ByVal row As TMERTMPRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TMERTMPRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TMERTMPRRow
        Inherits Global.System.Data.DataRow
        
        Private tableTMERTMPR As TMERTMPRDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTMERTMPR = CType(Me.Table,TMERTMPRDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTInsUser() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTInsUserColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTInsUser' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTInsUserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FDInsDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FDInsDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FDInsDate' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FDInsDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTInsTime() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTInsTimeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTInsTime' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTInsTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTUpdUser() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTUpdUserColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTUpdUser' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTUpdUserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FDUpdDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FDUpdDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FDUpdDate' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FDUpdDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTUpdTime() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTUpdTimeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTUpdTime' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTUpdTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNHSysStyleId() As Integer
            Get
                Return CType(Me(Me.tableTMERTMPR.FNHSysStyleIdColumn),Integer)
            End Get
            Set
                Me(Me.tableTMERTMPR.FNHSysStyleIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNSeq() As Decimal
            Get
                Return CType(Me(Me.tableTMERTMPR.FNSeqColumn),Decimal)
            End Get
            Set
                Me(Me.tableTMERTMPR.FNSeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNMerMatSeq() As Decimal
            Get
                Return CType(Me(Me.tableTMERTMPR.FNMerMatSeqColumn),Decimal)
            End Get
            Set
                Me(Me.tableTMERTMPR.FNMerMatSeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNHSysMerMatId() As Integer
            Get
                Return CType(Me(Me.tableTMERTMPR.FNHSysMerMatIdColumn),Integer)
            End Get
            Set
                Me(Me.tableTMERTMPR.FNHSysMerMatIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNHSysRawMatId() As Integer
            Get
                Return CType(Me(Me.tableTMERTMPR.FNHSysRawMatIdColumn),Integer)
            End Get
            Set
                Me(Me.tableTMERTMPR.FNHSysRawMatIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNColorWaySeq() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNColorWaySeqColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNColorWaySeq' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNColorWaySeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNHSysRawMatColorId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNHSysRawMatColorIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNHSysRawMatColorId' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNHSysRawMatColorIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNRawMatColorSeq() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNRawMatColorSeqColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNRawMatColorSeq' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNRawMatColorSeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNHSysMatColorId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNHSysMatColorIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNHSysMatColorId' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNHSysMatColorIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNMatColorSeq() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNMatColorSeqColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNMatColorSeq' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNMatColorSeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTRawMatColorCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTRawMatColorCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTRawMatColorCode' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTRawMatColorCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTMatColorCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTMatColorCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTMatColorCode' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTMatColorCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTRawMatColorNameEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTRawMatColorNameENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTRawMatColorNameEN' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTRawMatColorNameENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTRawMatColorNameTH() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTRawMatColorNameTHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTRawMatColorNameTH' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTRawMatColorNameTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTMatColorNameEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTMatColorNameENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTMatColorNameEN' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTMatColorNameENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTMatColorNameTH() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTMatColorNameTHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTMatColorNameTH' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTMatColorNameTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNSieBreakDownSeq() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNSieBreakDownSeqColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNSieBreakDownSeq' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNSieBreakDownSeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNHSysRawMatSizeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNHSysRawMatSizeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNHSysRawMatSizeId' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNHSysRawMatSizeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNRawMatSizeSeq() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNRawMatSizeSeqColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNRawMatSizeSeq' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNRawMatSizeSeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNHSysMatSizeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNHSysMatSizeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNHSysMatSizeId' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNHSysMatSizeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNMatSizeSeq() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNMatSizeSeqColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNMatSizeSeq' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNMatSizeSeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTRawMatSizeCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTRawMatSizeCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTRawMatSizeCode' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTRawMatSizeCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTMatSizeCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTMatSizeCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTMatSizeCode' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTMatSizeCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTRawMatSizeNameEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTRawMatSizeNameENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTRawMatSizeNameEN' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTRawMatSizeNameENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTRawMatSizeNameTH() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTRawMatSizeNameTHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTRawMatSizeNameTH' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTRawMatSizeNameTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTMatSizeNameEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTMatSizeNameENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTMatSizeNameEN' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTMatSizeNameENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTMatSizeNameTH() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTMatSizeNameTHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTMatSizeNameTH' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTMatSizeNameTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTOrderNo1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTOrderNo1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTOrderNo1' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTOrderNo1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTSubOrderNo1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTSubOrderNo1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTSubOrderNo1' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTSubOrderNo1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNConSmp() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNConSmpColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNConSmp' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNConSmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNConSmpPlus() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNConSmpPlusColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNConSmpPlus' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNConSmpPlusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTMainMatCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTMainMatCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTMainMatCode' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTMainMatCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNHSysMerMatId_None() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNHSysMerMatId_NoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNHSysMerMatId_None' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNHSysMerMatId_NoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTMainMatNameTH() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTMainMatNameTHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTMainMatNameTH' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTMainMatNameTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTFabricFrontSize() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTFabricFrontSizeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTFabricFrontSize' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTFabricFrontSizeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTStyleCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTStyleCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTStyleCode' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTStyleCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNHSysUnitId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNHSysUnitIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNHSysUnitId' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNHSysUnitIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTUnitCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTUnitCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTUnitCode' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTUnitCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNHSysBuyId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNHSysBuyIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNHSysBuyId' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNHSysBuyIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTOrderNo() As String
            Get
                Return CType(Me(Me.tableTMERTMPR.FTOrderNoColumn),String)
            End Get
            Set
                Me(Me.tableTMERTMPR.FTOrderNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTSubOrderNo() As String
            Get
                Return CType(Me(Me.tableTMERTMPR.FTSubOrderNoColumn),String)
            End Get
            Set
                Me(Me.tableTMERTMPR.FTSubOrderNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNQuantity() As Integer
            Get
                Return CType(Me(Me.tableTMERTMPR.FNQuantityColumn),Integer)
            End Get
            Set
                Me(Me.tableTMERTMPR.FNQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNQuantityExtra() As Decimal
            Get
                Return CType(Me(Me.tableTMERTMPR.FNQuantityExtraColumn),Decimal)
            End Get
            Set
                Me(Me.tableTMERTMPR.FNQuantityExtraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNUsedQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNUsedQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNUsedQuantity' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNUsedQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNUsedPlusQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNUsedPlusQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNUsedPlusQuantity' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNUsedPlusQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNPRQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNPRQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNPRQuantity' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNPRQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNPRTotalPrice() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNPRTotalPriceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNPRTotalPrice' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNPRTotalPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNHSysSuplId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNHSysSuplIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNHSysSuplId' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNHSysSuplIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTStateNominate() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTStateNominateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTStateNominate' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTStateNominateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNPrice() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNPriceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNPrice' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNHSysCurId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNHSysCurIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNHSysCurId' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNHSysCurIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTSuplCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTSuplCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTSuplCode' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTSuplCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTCurCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FTCurCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTCurCode' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FTCurCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNHSysCustId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNHSysCustIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNHSysCustId' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNHSysCustIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FDOrderDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FDOrderDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FDOrderDate' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FDOrderDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FDShipDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FDShipDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FDShipDate' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FDShipDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNStateChange() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNStateChangeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNStateChange' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNStateChangeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FNStateSourcing() As String
            Get
                Try 
                    Return CType(Me(Me.tableTMERTMPR.FNStateSourcingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNStateSourcing' in table 'TMERTMPR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTMERTMPR.FNStateSourcingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTInsUserNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTInsUserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTInsUserNull()
            Me(Me.tableTMERTMPR.FTInsUserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFDInsDateNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FDInsDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFDInsDateNull()
            Me(Me.tableTMERTMPR.FDInsDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTInsTimeNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTInsTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTInsTimeNull()
            Me(Me.tableTMERTMPR.FTInsTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTUpdUserNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTUpdUserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTUpdUserNull()
            Me(Me.tableTMERTMPR.FTUpdUserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFDUpdDateNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FDUpdDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFDUpdDateNull()
            Me(Me.tableTMERTMPR.FDUpdDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTUpdTimeNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTUpdTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTUpdTimeNull()
            Me(Me.tableTMERTMPR.FTUpdTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNColorWaySeqNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNColorWaySeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNColorWaySeqNull()
            Me(Me.tableTMERTMPR.FNColorWaySeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNHSysRawMatColorIdNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNHSysRawMatColorIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNHSysRawMatColorIdNull()
            Me(Me.tableTMERTMPR.FNHSysRawMatColorIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNRawMatColorSeqNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNRawMatColorSeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNRawMatColorSeqNull()
            Me(Me.tableTMERTMPR.FNRawMatColorSeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNHSysMatColorIdNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNHSysMatColorIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNHSysMatColorIdNull()
            Me(Me.tableTMERTMPR.FNHSysMatColorIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNMatColorSeqNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNMatColorSeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNMatColorSeqNull()
            Me(Me.tableTMERTMPR.FNMatColorSeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTRawMatColorCodeNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTRawMatColorCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTRawMatColorCodeNull()
            Me(Me.tableTMERTMPR.FTRawMatColorCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTMatColorCodeNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTMatColorCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTMatColorCodeNull()
            Me(Me.tableTMERTMPR.FTMatColorCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTRawMatColorNameENNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTRawMatColorNameENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTRawMatColorNameENNull()
            Me(Me.tableTMERTMPR.FTRawMatColorNameENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTRawMatColorNameTHNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTRawMatColorNameTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTRawMatColorNameTHNull()
            Me(Me.tableTMERTMPR.FTRawMatColorNameTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTMatColorNameENNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTMatColorNameENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTMatColorNameENNull()
            Me(Me.tableTMERTMPR.FTMatColorNameENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTMatColorNameTHNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTMatColorNameTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTMatColorNameTHNull()
            Me(Me.tableTMERTMPR.FTMatColorNameTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNSieBreakDownSeqNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNSieBreakDownSeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNSieBreakDownSeqNull()
            Me(Me.tableTMERTMPR.FNSieBreakDownSeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNHSysRawMatSizeIdNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNHSysRawMatSizeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNHSysRawMatSizeIdNull()
            Me(Me.tableTMERTMPR.FNHSysRawMatSizeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNRawMatSizeSeqNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNRawMatSizeSeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNRawMatSizeSeqNull()
            Me(Me.tableTMERTMPR.FNRawMatSizeSeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNHSysMatSizeIdNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNHSysMatSizeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNHSysMatSizeIdNull()
            Me(Me.tableTMERTMPR.FNHSysMatSizeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNMatSizeSeqNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNMatSizeSeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNMatSizeSeqNull()
            Me(Me.tableTMERTMPR.FNMatSizeSeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTRawMatSizeCodeNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTRawMatSizeCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTRawMatSizeCodeNull()
            Me(Me.tableTMERTMPR.FTRawMatSizeCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTMatSizeCodeNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTMatSizeCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTMatSizeCodeNull()
            Me(Me.tableTMERTMPR.FTMatSizeCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTRawMatSizeNameENNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTRawMatSizeNameENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTRawMatSizeNameENNull()
            Me(Me.tableTMERTMPR.FTRawMatSizeNameENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTRawMatSizeNameTHNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTRawMatSizeNameTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTRawMatSizeNameTHNull()
            Me(Me.tableTMERTMPR.FTRawMatSizeNameTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTMatSizeNameENNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTMatSizeNameENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTMatSizeNameENNull()
            Me(Me.tableTMERTMPR.FTMatSizeNameENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTMatSizeNameTHNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTMatSizeNameTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTMatSizeNameTHNull()
            Me(Me.tableTMERTMPR.FTMatSizeNameTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTOrderNo1Null() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTOrderNo1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTOrderNo1Null()
            Me(Me.tableTMERTMPR.FTOrderNo1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTSubOrderNo1Null() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTSubOrderNo1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTSubOrderNo1Null()
            Me(Me.tableTMERTMPR.FTSubOrderNo1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNConSmpNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNConSmpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNConSmpNull()
            Me(Me.tableTMERTMPR.FNConSmpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNConSmpPlusNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNConSmpPlusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNConSmpPlusNull()
            Me(Me.tableTMERTMPR.FNConSmpPlusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTMainMatCodeNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTMainMatCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTMainMatCodeNull()
            Me(Me.tableTMERTMPR.FTMainMatCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNHSysMerMatId_NoneNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNHSysMerMatId_NoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNHSysMerMatId_NoneNull()
            Me(Me.tableTMERTMPR.FNHSysMerMatId_NoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTMainMatNameTHNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTMainMatNameTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTMainMatNameTHNull()
            Me(Me.tableTMERTMPR.FTMainMatNameTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTFabricFrontSizeNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTFabricFrontSizeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTFabricFrontSizeNull()
            Me(Me.tableTMERTMPR.FTFabricFrontSizeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTStyleCodeNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTStyleCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTStyleCodeNull()
            Me(Me.tableTMERTMPR.FTStyleCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNHSysUnitIdNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNHSysUnitIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNHSysUnitIdNull()
            Me(Me.tableTMERTMPR.FNHSysUnitIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTUnitCodeNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTUnitCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTUnitCodeNull()
            Me(Me.tableTMERTMPR.FTUnitCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNHSysBuyIdNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNHSysBuyIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNHSysBuyIdNull()
            Me(Me.tableTMERTMPR.FNHSysBuyIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNUsedQuantityNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNUsedQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNUsedQuantityNull()
            Me(Me.tableTMERTMPR.FNUsedQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNUsedPlusQuantityNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNUsedPlusQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNUsedPlusQuantityNull()
            Me(Me.tableTMERTMPR.FNUsedPlusQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNPRQuantityNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNPRQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNPRQuantityNull()
            Me(Me.tableTMERTMPR.FNPRQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNPRTotalPriceNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNPRTotalPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNPRTotalPriceNull()
            Me(Me.tableTMERTMPR.FNPRTotalPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNHSysSuplIdNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNHSysSuplIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNHSysSuplIdNull()
            Me(Me.tableTMERTMPR.FNHSysSuplIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTStateNominateNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTStateNominateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTStateNominateNull()
            Me(Me.tableTMERTMPR.FTStateNominateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNPriceNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNPriceNull()
            Me(Me.tableTMERTMPR.FNPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNHSysCurIdNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNHSysCurIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNHSysCurIdNull()
            Me(Me.tableTMERTMPR.FNHSysCurIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTSuplCodeNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTSuplCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTSuplCodeNull()
            Me(Me.tableTMERTMPR.FTSuplCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTCurCodeNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FTCurCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTCurCodeNull()
            Me(Me.tableTMERTMPR.FTCurCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNHSysCustIdNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNHSysCustIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNHSysCustIdNull()
            Me(Me.tableTMERTMPR.FNHSysCustIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFDOrderDateNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FDOrderDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFDOrderDateNull()
            Me(Me.tableTMERTMPR.FDOrderDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFDShipDateNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FDShipDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFDShipDateNull()
            Me(Me.tableTMERTMPR.FDShipDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNStateChangeNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNStateChangeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNStateChangeNull()
            Me(Me.tableTMERTMPR.FNStateChangeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNStateSourcingNull() As Boolean
            Return Me.IsNull(Me.tableTMERTMPR.FNStateSourcingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNStateSourcingNull()
            Me(Me.tableTMERTMPR.FNStateSourcingColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TMERTMPRRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TMERTMPRRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TMERTMPRRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TMERTMPRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSet1TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TMERTMPRTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TMERTMPR"
            tableMapping.ColumnMappings.Add("FTInsUser", "FTInsUser")
            tableMapping.ColumnMappings.Add("FDInsDate", "FDInsDate")
            tableMapping.ColumnMappings.Add("FTInsTime", "FTInsTime")
            tableMapping.ColumnMappings.Add("FTUpdUser", "FTUpdUser")
            tableMapping.ColumnMappings.Add("FDUpdDate", "FDUpdDate")
            tableMapping.ColumnMappings.Add("FTUpdTime", "FTUpdTime")
            tableMapping.ColumnMappings.Add("FNHSysStyleId", "FNHSysStyleId")
            tableMapping.ColumnMappings.Add("FNSeq", "FNSeq")
            tableMapping.ColumnMappings.Add("FNMerMatSeq", "FNMerMatSeq")
            tableMapping.ColumnMappings.Add("FNHSysMerMatId", "FNHSysMerMatId")
            tableMapping.ColumnMappings.Add("FNHSysRawMatId", "FNHSysRawMatId")
            tableMapping.ColumnMappings.Add("FNColorWaySeq", "FNColorWaySeq")
            tableMapping.ColumnMappings.Add("FNHSysRawMatColorId", "FNHSysRawMatColorId")
            tableMapping.ColumnMappings.Add("FNRawMatColorSeq", "FNRawMatColorSeq")
            tableMapping.ColumnMappings.Add("FNHSysMatColorId", "FNHSysMatColorId")
            tableMapping.ColumnMappings.Add("FNMatColorSeq", "FNMatColorSeq")
            tableMapping.ColumnMappings.Add("FTRawMatColorCode", "FTRawMatColorCode")
            tableMapping.ColumnMappings.Add("FTMatColorCode", "FTMatColorCode")
            tableMapping.ColumnMappings.Add("FTRawMatColorNameEN", "FTRawMatColorNameEN")
            tableMapping.ColumnMappings.Add("FTRawMatColorNameTH", "FTRawMatColorNameTH")
            tableMapping.ColumnMappings.Add("FTMatColorNameEN", "FTMatColorNameEN")
            tableMapping.ColumnMappings.Add("FTMatColorNameTH", "FTMatColorNameTH")
            tableMapping.ColumnMappings.Add("FNSieBreakDownSeq", "FNSieBreakDownSeq")
            tableMapping.ColumnMappings.Add("FNHSysRawMatSizeId", "FNHSysRawMatSizeId")
            tableMapping.ColumnMappings.Add("FNRawMatSizeSeq", "FNRawMatSizeSeq")
            tableMapping.ColumnMappings.Add("FNHSysMatSizeId", "FNHSysMatSizeId")
            tableMapping.ColumnMappings.Add("FNMatSizeSeq", "FNMatSizeSeq")
            tableMapping.ColumnMappings.Add("FTRawMatSizeCode", "FTRawMatSizeCode")
            tableMapping.ColumnMappings.Add("FTMatSizeCode", "FTMatSizeCode")
            tableMapping.ColumnMappings.Add("FTRawMatSizeNameEN", "FTRawMatSizeNameEN")
            tableMapping.ColumnMappings.Add("FTRawMatSizeNameTH", "FTRawMatSizeNameTH")
            tableMapping.ColumnMappings.Add("FTMatSizeNameEN", "FTMatSizeNameEN")
            tableMapping.ColumnMappings.Add("FTMatSizeNameTH", "FTMatSizeNameTH")
            tableMapping.ColumnMappings.Add("FTOrderNo1", "FTOrderNo1")
            tableMapping.ColumnMappings.Add("FTSubOrderNo1", "FTSubOrderNo1")
            tableMapping.ColumnMappings.Add("FNConSmp", "FNConSmp")
            tableMapping.ColumnMappings.Add("FNConSmpPlus", "FNConSmpPlus")
            tableMapping.ColumnMappings.Add("FTMainMatCode", "FTMainMatCode")
            tableMapping.ColumnMappings.Add("FNHSysMerMatId_None", "FNHSysMerMatId_None")
            tableMapping.ColumnMappings.Add("FTMainMatNameTH", "FTMainMatNameTH")
            tableMapping.ColumnMappings.Add("FTFabricFrontSize", "FTFabricFrontSize")
            tableMapping.ColumnMappings.Add("FTStyleCode", "FTStyleCode")
            tableMapping.ColumnMappings.Add("FNHSysUnitId", "FNHSysUnitId")
            tableMapping.ColumnMappings.Add("FTUnitCode", "FTUnitCode")
            tableMapping.ColumnMappings.Add("FNHSysBuyId", "FNHSysBuyId")
            tableMapping.ColumnMappings.Add("FTOrderNo", "FTOrderNo")
            tableMapping.ColumnMappings.Add("FTSubOrderNo", "FTSubOrderNo")
            tableMapping.ColumnMappings.Add("FNQuantity", "FNQuantity")
            tableMapping.ColumnMappings.Add("FNQuantityExtra", "FNQuantityExtra")
            tableMapping.ColumnMappings.Add("FNUsedQuantity", "FNUsedQuantity")
            tableMapping.ColumnMappings.Add("FNUsedPlusQuantity", "FNUsedPlusQuantity")
            tableMapping.ColumnMappings.Add("FNPRQuantity", "FNPRQuantity")
            tableMapping.ColumnMappings.Add("FNPRTotalPrice", "FNPRTotalPrice")
            tableMapping.ColumnMappings.Add("FNHSysSuplId", "FNHSysSuplId")
            tableMapping.ColumnMappings.Add("FTStateNominate", "FTStateNominate")
            tableMapping.ColumnMappings.Add("FNPrice", "FNPrice")
            tableMapping.ColumnMappings.Add("FNHSysCurId", "FNHSysCurId")
            tableMapping.ColumnMappings.Add("FTSuplCode", "FTSuplCode")
            tableMapping.ColumnMappings.Add("FTCurCode", "FTCurCode")
            tableMapping.ColumnMappings.Add("FNHSysCustId", "FNHSysCustId")
            tableMapping.ColumnMappings.Add("FDOrderDate", "FDOrderDate")
            tableMapping.ColumnMappings.Add("FDShipDate", "FDShipDate")
            tableMapping.ColumnMappings.Add("FNStateChange", "FNStateChange")
            tableMapping.ColumnMappings.Add("FNStateSourcing", "FNStateSourcing")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = "Provider=SQLNCLI10.1;Data Source=CHAINIWEST\HT_PROJECT;Persist Security Info=True"& _ 
                ";Password=1234;User ID=sa;Initial Catalog=HITECH_MERCHAN"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DISTINCT "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FTInsUser, FDInsDate, FTInsTime, FTUpd"& _ 
                "User, FDUpdDate, FTUpdTime, FNHSysStyleId, FNSeq, FNMerMatSeq, FNHSysMerMatId, F"& _ 
                "NHSysRawMatId, FNColorWaySeq, FNHSysRawMatColorId, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FN"& _ 
                "RawMatColorSeq, FNHSysMatColorId, FNMatColorSeq, FTRawMatColorCode, FTMatColorCo"& _ 
                "de, FTRawMatColorNameEN, FTRawMatColorNameTH, FTMatColorNameEN, FTMatColorNameTH"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FNSieBreakDownSeq, FNHSysRawMatSizeId, FNRawMatSize"& _ 
                "Seq, FNHSysMatSizeId, FNMatSizeSeq, FTRawMatSizeCode, FTMatSizeCode, FTRawMatSiz"& _ 
                "eNameEN, FTRawMatSizeNameTH, FTMatSizeNameEN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FTMatSi"& _ 
                "zeNameTH, FTOrderNo1, FTSubOrderNo1, FNConSmp, FNConSmpPlus, FTMainMatCode, FNHS"& _ 
                "ysMerMatId_None, FTMainMatNameTH, FTFabricFrontSize, FTStyleCode, FNHSysUnitId, "& _ 
                "FTUnitCode, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FNHSysBuyId, FTOrderNo, FTSubOrderNo, FNQ"& _ 
                "uantity, FNQuantityExtra, FNUsedQuantity, FNUsedPlusQuantity, FNPRQuantity, FNPR"& _ 
                "TotalPrice, FNHSysSuplId, FTStateNominate, FNPrice, FNHSysCurId, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            FTSuplCode, FTCurCode, FNHSysCustId, FDOrderDate, FDShipDate, FNStat"& _ 
                "eChange, CASE WHEN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        COUNT(*)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                         FROM            HITECH_PURCHASE.dbo.TPURTOrder_Sourcing"& _ 
                " SC"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               WHERE        SC.FTOrderNo + '|' + SC.FTSubOr"& _ 
                "derNo + '|' + CAST(SC.FNHSysRawMatId AS VARCHAR(20)) = MPR.FTOrderNo + '|' + MPR"& _ 
                ".FTSubOrderNo + '|' + CAST(MPR.FNHSysRawMatId AS VARCHAR(20))) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          > 0 THEN '1' ELSE '0' END AS FNStateSourcing"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            dbo.TMER"& _ 
                "TMPR AS MPR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.TMERTMPRDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.TMERTMPRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.TMERTMPRDataTable = New DataSet1.TMERTMPRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSet1, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSet1) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
