Imports System.Windows.Forms
Imports System.Windows.Forms.Control
Imports System.Reflection
Imports System.Globalization
Imports System.Threading
Imports System.Drawing
Imports System.Collections.Generic
Imports DevExpress
Imports DevExpress.XtraGrid.Views.Grid
Imports DevExpress.XtraGrid.Columns
Imports DevExpress.Utils
Imports DevExpress.XtraEditors.ButtonEdit
Imports System.Data.OleDb
Imports System.Data.SqlClient
Imports System.Math
Imports Microsoft.VisualBasic
Imports System.IO
Imports DevExpress.XtraEditors
Imports DevExpress.XtraBars
Imports DevExpress.XtraGrid.Views.Grid.ViewInfo

Public Class wOrder_CVN

    Private Const _DBEnum As Integer = HI.Conn.DB.DataBaseName.DB_MERCHAN
    Private Const _tPreFixCustOrderNo As String = "N"   '...Prefix Run Factory Order No. by Customer Ex. Customer Nike : 'N'
    Private Const _tPlantMulti As String = "1051"

    Private _Bindgrid As Boolean = False
    Private _RowDcng As Boolean = False
    Private _FormHeader As New List(Of HI.TL.DynamicForm)()
    Private _FormGridDetail As New List(Of HI.TL.DynamicGrid)()
    Private _FormLoad As Boolean = True
    Private _DataInfo As DataTable
    'Private _SystemFilePath As String = Application.StartupPath & IIf(Microsoft.VisualBasic.Right(Application.StartupPath, 1) = "\", "", "\") & "Images"
    Private _SystemFilePath As String = Application.StartupPath & IIf(Microsoft.VisualBasic.Right(Application.StartupPath, 1) = "\", "", "\") & "Order"
    Private _SysPath As String = Application.StartupPath & IIf(Microsoft.VisualBasic.Right(Application.StartupPath, 1) = "\", "", "\")

    Private _ProcLoad As Boolean = False
    Private _bProgrammeInit As Boolean = True

    Private _bFlagNewOrderNo As Boolean = False
    Private _bFlagNewSubOrderNo As Boolean = False

    Private _tFTSubOrderNo As String

    Private oGridViewSubBreakdown As DevExpress.XtraGrid.Views.Grid.GridView
    Private oGridViewSubBreakdownSum As DevExpress.XtraGrid.Views.Grid.GridView
    Private oGridViewColorSizeBreakdown As DevExpress.XtraGrid.Views.Grid.GridView
    Private oGridViewSizeSpec As DevExpress.XtraGrid.Views.Grid.GridView
    Private oGridViewSubOrderComponent As DevExpress.XtraGrid.Views.Grid.GridView

    Private WithEvents oRepositoryPackCartonQty As DevExpress.XtraEditors.Repository.RepositoryItemCalcEdit

    Private oSizeSpecType As oSizeSpec

    Private oDBdtSizeSpecView As DataTable

    Private oSubCompoentSchema As oSubOrerComponent

    '------------------------------ Form dialog ----------------------------------
    Private _CopyOrder As wCopyOrder
    Private _CopyOrderSub As wCopyOrderSub
    Private _RejectOrder As wRejectOrder
    Private _wReportMERFactoryOrderNo As wReportMERFactoryOrderNo
    Private _wReportMERFactorySubOrderNo As wReportMERFactorySubOrderNo
    Private _wAddOrderSubComponent As wAddOrderSubComponent
    Private _wCopyComSewPackSize As wCopySubOrderOther
    Private _ChangeColorway As wChangeColorway
    Private _wDivertOrderSub As wDivertOrderSub
    Private _wInsertSeqSewingProc As wInsertSeqSewingProc
    Private _wInsertSeqPackingProc As wInsertSeqPackingProc
    '------------------------------------------------------------------------------

    '----------------Represent Revise History Before & After ----------------------
    Dim dtBefore As DataTable
    Dim dtAfter As DataTable
    Private tmpDTFoNoBefore As System.Data.DataTable
    Private tmpDTFoNoAfter As System.Data.DataTable
    Private oDBdtOrderNoAmntBF As System.Data.DataTable
    Private oDBdtOrderNoAmntAF As System.Data.DataTable
    Private oDBdtSubOrderNoAmntBF As System.Data.DataTable
    Private oDBdtSubOrderNoAmntAF As System.Data.DataTable
    Private oDBdtSubOrderNoBreakdownBF As System.Data.DataTable
    Private oDBdtSubOrderNoBreakdownAF As System.Data.DataTable
    Private oDBdtSubOrderNoSewBF As System.Data.DataTable
    Private oDBdtSubOrderNoSewAF As System.Data.DataTable
    Private oDBdtSubOrderNoPackBF As System.Data.DataTable
    Private oDBdtSubOrderNoPackAF As System.Data.DataTable
    Private oDBdtSubOrderNoSizeSpecBF As System.Data.DataTable
    Private oDBdtSubOrderNoSizeSpecAF As System.Data.DataTable
    Private oDBdtPostEditSizeSpec As System.Data.DataTable
    Private oDBdtAfterEditSizeSpec As System.Data.DataTable

    Private DTBeforeRevised As System.Data.DataTable
    Private DTAfterRevised As System.Data.DataTable

    Private DTBeforeRevisedSubOrder As System.Data.DataTable
    Private DTAfterRevisedSubOrder As System.Data.DataTable

    Private DTBeforeRevisedComponent As System.Data.DataTable
    Private DTAfterRevisedComponent As System.Data.DataTable

    Private DTBeforeRevisedSew As System.Data.DataTable
    Private DTAfterRevisedSew As System.Data.DataTable

    Private DTBeforeRevisedPack As System.Data.DataTable
    Private DTAfterRevisedPack As System.Data.DataTable

    Private DTBeforeRevisedPackRatioHD As System.Data.DataTable
    Private DTAfterRevisedPackRatioHD As System.Data.DataTable

    Private DTBeforeRevisedPackRatioDT As System.Data.DataTable
    Private DTAfterRevisedPackRatioDT As System.Data.DataTable

    Private DTBeforeRevisedSizeSpec As System.Data.DataTable
    Private DTAfterRevisedSizeSpec As System.Data.DataTable
    Private _FTStateAutoExtraManual As Boolean = False
    '-------------------------------------------------------------------------------

    Delegate Sub MyDelegate()
    Dim del As MyDelegate

    Private Enum eTabIndexs As Integer
        FactoryOrderNo = 0
        FactorySubOrderNo = 1
        FactorySubOrderNoComponent = 2
        FactorySubOrderNoSewing = 3
        FactorySubOrderNoPacking = 4
        FactorySubOrderNoPackingCarton = 5
        FactorySubOrderSizeSpec = 6
    End Enum

    Private Enum eJobState
        JobActive = 0
        JobSendApprove = 1
        JobCancel = 2
        JobClose = 3
    End Enum


    Sub New()
        ' This call is required by the designer.
        InitializeComponent()
        ' Add any initialization after the InitializeComponent() call.
        _FormLoad = True
        HI.TL.HandlerControl.AddHandlerObj(Me.FNHSysSeasonId)

        '=================================== wCopyOrder =====================================================================
        _CopyOrder = New wCopyOrder("", "", "")

        HI.TL.HandlerControl.AddHandlerObj(_CopyOrder)

        Dim oSysLang As New HI.ST.SysLanguage

        Try
            Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _CopyOrder.Name.ToString.Trim, _CopyOrder)
        Catch ex As Exception
        End Try

        '===================================================================================================================

        '=================================== wCopyOrderSub =================================================================
        _CopyOrderSub = New wCopyOrderSub("", "")

        HI.TL.HandlerControl.AddHandlerObj(_CopyOrderSub)
        Try
            Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _CopyOrderSub.Name.ToString.Trim, _CopyOrderSub)
        Catch ex As Exception
        End Try

        '===================================================================================================================

        '=================================== wRejectOrder ==================================================================
        _RejectOrder = New wRejectOrder("", -1)

        HI.TL.HandlerControl.AddHandlerObj(_RejectOrder)

        Try
            Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _RejectOrder.Name.ToString.Trim, _RejectOrder)
        Catch ex As Exception
        End Try
        '===================================================================================================================

        '================================== wReportMERFactoryOrderNo =======================================================
        _wReportMERFactoryOrderNo = New wReportMERFactoryOrderNo("")

        HI.TL.HandlerControl.AddHandlerObj(_wReportMERFactoryOrderNo)



        Try
            Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _wReportMERFactoryOrderNo.Name.ToString.Trim, _wReportMERFactoryOrderNo)
        Catch ex As Exception
        End Try
        '===================================================================================================================

        '================================= wReportMERFactorySubOrderNo =====================================================
        _wReportMERFactorySubOrderNo = New wReportMERFactorySubOrderNo("", "")

        HI.TL.HandlerControl.AddHandlerObj(_wReportMERFactorySubOrderNo)

        Try
            Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _wReportMERFactorySubOrderNo.Name.ToString.Trim, _wReportMERFactorySubOrderNo)
        Catch ex As Exception
        End Try

        _wAddOrderSubComponent = New wAddOrderSubComponent
        HI.TL.HandlerControl.AddHandlerObj(_wAddOrderSubComponent)

        Try
            Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _wAddOrderSubComponent.Name.ToString.Trim, _wAddOrderSubComponent)
        Catch ex As Exception
        End Try

        _wCopyComSewPackSize = New wCopySubOrderOther
        HI.TL.HandlerControl.AddHandlerObj(_wCopyComSewPackSize)

        Try
            Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _wCopyComSewPackSize.Name.ToString.Trim, _wCopyComSewPackSize)
        Catch ex As Exception
        End Try

        _ChangeColorway = New wChangeColorway
        HI.TL.HandlerControl.AddHandlerObj(_ChangeColorway)

        Try
            Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _ChangeColorway.Name.ToString.Trim, _ChangeColorway)
        Catch ex As Exception
        End Try



        _wDivertOrderSub = New wDivertOrderSub

        HI.TL.HandlerControl.AddHandlerObj(_wDivertOrderSub)

        Try
            Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _wDivertOrderSub.Name.ToString.Trim, _wDivertOrderSub)
        Catch ex As Exception
        End Try

        _wInsertSeqSewingProc = New wInsertSeqSewingProc

        HI.TL.HandlerControl.AddHandlerObj(HI.ST.SysInfo.ModuleID)

        Try
            Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _wInsertSeqSewingProc.Name.ToString.Trim, _wInsertSeqSewingProc)
        Catch ex As Exception
        End Try

        _wInsertSeqPackingProc = New wInsertSeqPackingProc

        HI.TL.HandlerControl.AddHandlerObj(_wInsertSeqPackingProc)

        Try
            Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _wInsertSeqPackingProc.Name.ToString, _wInsertSeqPackingProc)
        Catch ex As Exception
        End Try

        '===================================================================================================================
        Call PrepareForm()

        Call W_GETbSchemaMerchan()
        Call W_GETbSchemaMerchanSubOrderComponent()

        oGridViewSubBreakdown = Me.ogdSubOrdBreakDown.Views(0)
        oGridViewSubBreakdownSum = Me.ogdSubOrdBreakDownSummary.Views(0)
        Me.ogdSubOrdBreakDown.DataSource = Nothing
        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
        Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
        Me.ogdSubOrdBreakDownSummary.Width = ogdSubOrdBreakDown.Width

        oRepositoryPackCartonQty = New DevExpress.XtraEditors.Repository.RepositoryItemCalcEdit

        With oRepositoryPackCartonQty
            .Buttons(0).Visible = False
            .Mask.UseMaskAsDisplayFormat = True
            .Mask.MaskType = DevExpress.XtraEditors.Mask.MaskType.Numeric
            .Mask.EditMask = "###,###,###"

            .TextEditStyle = XtraEditors.Controls.TextEditStyles.Standard

            .Precision = 0

            .DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
            .DisplayFormat.FormatString = "###,###,###"

        End With

        With FNPackPerCaton.Properties
            .Buttons(0).Visible = False
            .Mask.UseMaskAsDisplayFormat = True
            .Mask.MaskType = DevExpress.XtraEditors.Mask.MaskType.Numeric
            .Mask.EditMask = "###,###,###"

            .TextEditStyle = XtraEditors.Controls.TextEditStyles.Standard

            .Precision = 0

            .DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
            .DisplayFormat.FormatString = "###,###,###"
        End With

        Try
            With Me.ogvOrderSubPackCarton
                For nLoopGridviewSubPackCarton As Integer = .Columns.Count - 1 To 0 Step -1
                    .Columns(nLoopGridviewSubPackCarton).OptionsColumn.AllowEdit = False
                    .Columns(nLoopGridviewSubPackCarton).AppearanceCell.BackColor = Color.White
                    .Columns(nLoopGridviewSubPackCarton).AppearanceCell.ForeColor = Color.Black
                    .Columns(nLoopGridviewSubPackCarton).OptionsColumn.AllowSort = DevExpress.Utils.DefaultBoolean.False
                Next
            End With
        Catch ex As Exception
        End Try

        With ogvOrderSubPackCarton
            .OptionsView.ShowAutoFilterRow = False
            .OptionsSelection.MultiSelect = False
            .OptionsMenu.EnableColumnMenu = False
            .OptionsMenu.ShowAutoFilterRowItem = False
            .OptionsFilter.AllowFilterEditor = False
            .OptionsFilter.AllowColumnMRUFilterList = False
            .OptionsFilter.AllowMRUFilterList = False
            .OptionsSelection.MultiSelect = False
            .OptionsSelection.MultiSelectMode = DevExpress.XtraGrid.Views.Grid.GridMultiSelectMode.CellSelect
        End With

        Call W_PRCxSwitchTab()
        Call NewFromCombieBreakdown()
        HI.TL.HandlerControl.AddHandlerGridColumnEdit(ogdSizeSpec.Views(0))
    End Sub

    Public Sub DefaultsData()
        Dim _FieldName As String
        For cind As Integer = 0 To _FormHeader.ToArray.Count - 1
            For I As Integer = 0 To _FormHeader(cind).DefaultsData.ToArray.Count - 1
                _FieldName = _FormHeader(cind).DefaultsData(I).FiledName.ToString

                Dim Pass As Boolean = True

                For Each Obj As Object In Me.Controls.Find(_FieldName, True)
                    Select Case HI.ENM.Control.GeTypeControl(Obj)
                        Case ENM.Control.ControlType.ButtonEdit
                            With CType(Obj, DevExpress.XtraEditors.ButtonEdit)
                                .Text = _FormHeader(cind).DefaultsData(I).DataDefaults.ToString

                                HI.TL.HandlerControl.DynamicButtonedit_Leave(Obj, New System.EventArgs)

                            End With
                        Case ENM.Control.ControlType.CalcEdit
                            With CType(Obj, DevExpress.XtraEditors.CalcEdit)
                                .Value = Val(_FormHeader(cind).DefaultsData(I).DataDefaults.ToString)

                            End With
                        Case ENM.Control.ControlType.ComboBoxEdit
                            With CType(Obj, DevExpress.XtraEditors.ComboBoxEdit)
                                .SelectedIndex = Val(_FormHeader(cind).DefaultsData(I).DataDefaults.ToString)
                            End With
                        Case ENM.Control.ControlType.CheckEdit
                            With CType(Obj, DevExpress.XtraEditors.CheckEdit)
                                .Checked = (_FormHeader(cind).DefaultsData(I).DataDefaults.ToString = "1")
                            End With
                        Case ENM.Control.ControlType.DateEdit
                            With CType(Obj, DevExpress.XtraEditors.DateEdit)

                                Try
                                    .DateTime = _FormHeader(cind).DefaultsData(I).DataDefaults.ToString
                                Catch ex As Exception
                                    .Text = ""
                                End Try

                            End With

                        Case ENM.Control.ControlType.MemoEdit
                            With CType(Obj, DevExpress.XtraEditors.MemoEdit)
                                .Text = _FormHeader(cind).DefaultsData(I).DataDefaults.ToString
                            End With
                        Case ENM.Control.ControlType.TextEdit
                            With CType(Obj, DevExpress.XtraEditors.TextEdit)
                                .Text = _FormHeader(cind).DefaultsData(I).DataDefaults.ToString
                            End With
                        Case Else
                    End Select
                Next
            Next
        Next

    End Sub



    Private Function CheckDivertAfter(OrderNo As String, Optional SubOrderNo As String = "") As Boolean

        Dim _Qry As String = ""
        _Qry = "SELECT TOP 1  FTOrderNo  "
        _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Divert] AS A WITH(NOLOCK) "
        _Qry &= vbCrLf & "   WHERE  FTOrderNo = '" & HI.UL.ULF.rpQuoted(OrderNo) & "'  "

        If SubOrderNo <> "" Then
            _Qry &= vbCrLf & "   AND  FTSubOrderNo = '" & HI.UL.ULF.rpQuoted(SubOrderNo) & "'  "
        End If

        If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "") = "" Then

            _Qry = "SELECT TOP 1  FTOrderNo  "
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Cancel] AS A WITH(NOLOCK) "
            _Qry &= vbCrLf & "   WHERE  FTOrderNo = '" & HI.UL.ULF.rpQuoted(OrderNo) & "'  "

            If SubOrderNo <> "" Then
                _Qry &= vbCrLf & "   AND  FTSubOrderNo = '" & HI.UL.ULF.rpQuoted(SubOrderNo) & "'  "
            End If

            If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "") = "" Then
                Return True
            Else
                HI.MG.ShowMsg.mProcessError(1594667791, "พบข้อมูลการ Cancel Breakdown ไม่สามารถทำการลบหรือแก้ไขได้ !!!", Me.Text, System.Windows.Forms.MessageBoxIcon.Warning)
                Return False
            End If

        Else
            HI.MG.ShowMsg.mProcessError(1590667701, "พบข้อมูลการ Divert หลัง Producttion แล้ว ไม่สามารถทำการลบหรือแก้ไขได้ !!!", Me.Text, System.Windows.Forms.MessageBoxIcon.Warning)
            Return False
        End If

    End Function

    Private Function CheckCombine() As Boolean
        Try
            Dim _Cmd As String = ""
            _Cmd = "Select Isnull(FTStateCombine,'0') AS FTStateCombine  From  TMERTOrder Where FTOrderNo='" & HI.UL.ULF.rpQuoted(FTOrderNo.Text) & "'"
            Dim _State As String = HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_MERCHAN, "")
            Return IIf(_State = "1", True, False)
        Catch ex As Exception
            Return False
        End Try
    End Function



    Private Function CheckOwner() As Boolean

        If (HI.ST.UserInfo.UserName.ToUpper = FTUpdUser.Text.ToUpper) Or (HI.ST.SysInfo.Admin) Or FTUpdUser.Text.ToUpper = "" Then
            Return True
        Else

            'Dim _FNHSysMerTeamId As Integer = 0
            '_FNHSysMerTeamId = Integer.Parse(Val(FNHSysMerTeamId.Properties.Tag.ToString))

            'If _FNHSysMerTeamId <= 0 Then
            '    Return True
            'Else

            '    Dim _Qry As String = ""
            '    _Qry = "SELECT TOP 1  FNHSysMerTeamId  "
            '    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.[TSEUserLogin] AS A WITH(NOLOCK) "
            '    _Qry &= vbCrLf & "   WHERE  FTUserName = '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'  "

            '    If Integer.Parse(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_SECURITY, "0"))) = _FNHSysMerTeamId Then
            '        Return True
            '    Else
            '        HI.MG.ShowMsg.mProcessError(1411777701, "คุณไม่มีสิทธิ์ทำการลบหรือแก้ไข Factory Order นี้ !!!", Me.Text, System.Windows.Forms.MessageBoxIcon.Warning)
            '        Return False
            '    End If

            'End If

            Dim _Qry As String = ""
            Dim _Qry2 As String = ""
            Dim _FNHSysMerTeamId As Integer = 0
            Dim _FNHSysMerTeamIdOrg As Integer = 0
            _Qry = "SELECT TOP 1  FNHSysMerTeamId  "
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.[TSEUserLogin] AS A WITH(NOLOCK) "
            _Qry &= vbCrLf & "   WHERE  FTUserName = '" & HI.UL.ULF.rpQuoted(FTUpdUser.Text) & "' "
            _FNHSysMerTeamIdOrg = Integer.Parse(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_SECURITY, "0")))

            _Qry2 = "SELECT TOP 1  FNHSysMerTeamId  "
            _Qry2 &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_SECURITY) & "].dbo.[TSEUserLogin] AS A WITH(NOLOCK) "
            _Qry2 &= vbCrLf & "   WHERE  FTUserName = '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'  "
            _FNHSysMerTeamId = Integer.Parse(Val(HI.Conn.SQLConn.GetField(_Qry2, Conn.DB.DataBaseName.DB_SECURITY, "0")))

            If _FNHSysMerTeamIdOrg = _FNHSysMerTeamId Then
                Return True
            Else
                If _FNHSysMerTeamId = Integer.Parse(Val(FNHSysMerTeamId.Properties.Tag.ToString())) Then
                    Return True
                Else
                    HI.MG.ShowMsg.mProcessError(1411777701, "คุณไม่มีสิทธิ์ทำการลบหรือแก้ไข Factory Order นี้ !!!", Me.Text, System.Windows.Forms.MessageBoxIcon.Warning)
                    Return False
                End If

            End If
        End If

    End Function

#Region "Property Factory Sub Order Component"
    Private Class oSubOrerComponent

        Private _FTRemarkComponent As Integer
        Public Property FTRemarkComponent As Integer
            Get
                Return _FTRemarkComponent
            End Get
            Set(value As Integer)
                _FTRemarkComponent = value
            End Set
        End Property

    End Class

#End Region

#Region "Property Size Specify"
    Private Class oSizeSpec

        Private _SizeSpecFTOrderNo As Integer
        Public Property SizeSpecFTOrderNo As Integer
            Get
                Return _SizeSpecFTOrderNo
            End Get
            Set(ByVal value As Integer)
                _SizeSpecFTOrderNo = value
            End Set
        End Property

        Private _SizeSpecFTSubOrderNo As Integer
        Public Property SizeSpecFTSubOrderNo As Integer
            Get
                Return _SizeSpecFTSubOrderNo
            End Get
            Set(ByVal value As Integer)
                _SizeSpecFTSubOrderNo = value
            End Set
        End Property

        Private _SizeSpecFNSeq As Integer
        Public Property SizeSpecFNSeq As Integer
            Get
                Return _SizeSpecFNSeq
            End Get
            Set(ByVal value As Integer)
                _SizeSpecFNSeq = value
            End Set
        End Property

        Private _SizeSpecFNHSysMatSizeId As Integer
        Public Property SizeSpecFNHSysMatSizeId As Integer
            Get
                Return _SizeSpecFNHSysMatSizeId
            End Get
            Set(ByVal value As Integer)
                _SizeSpecFNHSysMatSizeId = value
            End Set
        End Property

        Private _SizeSpecFTSizeSpecDesc As Integer
        Public Property SizeSpecFTSizeSpecDesc As Integer
            Get
                Return _SizeSpecFTSizeSpecDesc
            End Get
            Set(ByVal value As Integer)
                _SizeSpecFTSizeSpecDesc = value
            End Set
        End Property

        Private _SizeSpecFTSizeSpecExtension As Integer
        Public Property SizeSpecFTSizeSpecExtension As Integer
            Get
                Return _SizeSpecFTSizeSpecExtension
            End Get
            Set(ByVal value As Integer)
                _SizeSpecFTSizeSpecExtension = value
            End Set
        End Property

        Private _SizeSpecFTTolerant As Integer
        Public Property SizeSpecFTTolerant As Integer
            Get
                Return _SizeSpecFTTolerant
            End Get
            Set(value As Integer)
                _SizeSpecFTTolerant = value
            End Set
        End Property

    End Class

#End Region

#Region "Property State Load Complete Order Image"

    Private _bLoadCompleteFTImage1 As Boolean = False
    Public Property LoadCompleteFTImage1 As Boolean
        Get
            Return _bLoadCompleteFTImage1
        End Get
        Set(value As Boolean)
            _bLoadCompleteFTImage1 = value
        End Set
    End Property

    Private _bLoadCompleteFTImage2 As Boolean = False
    Public Property LoadCompleteFTImage2 As Boolean
        Get
            Return _bLoadCompleteFTImage2
        End Get
        Set(value As Boolean)
            _bLoadCompleteFTImage2 = value
        End Set
    End Property

    Private _bLoadCompleteFTImage3 As Boolean = False
    Public Property LoadCompleteFTImage3 As Boolean
        Get
            Return _bLoadCompleteFTImage3
        End Get
        Set(value As Boolean)
            _bLoadCompleteFTImage3 = value
        End Set
    End Property

    Private _bLoadCompleteFTImage4 As Boolean = False
    Public Property LoadCompleteFTImage4 As Boolean
        Get
            Return _bLoadCompleteFTImage4
        End Get
        Set(value As Boolean)
            _bLoadCompleteFTImage4 = value
        End Set
    End Property

#End Region

#Region "Property"
    Private _DefaultCmpCode As String = ""
    Public Property DefaultCmpCode As String
        Get
            Return _DefaultCmpCode
        End Get
        Set(ByVal value As String)
            _DefaultCmpCode = value
        End Set
    End Property

    Private _FmtRun As String = ""
    Public ReadOnly Property FmtRun As String
        Get
            Return ""
        End Get
    End Property

    Private _AssPath As String = ""
    Public Property AssPath As String
        Get
            Return _AssPath
        End Get
        Set(ByVal value As String)
            _AssPath = value
        End Set
    End Property

    Private _FormName As String = ""
    Public Property FormName As String
        Get
            Return _FormName
        End Get
        Set(ByVal value As String)
            _FormName = value
        End Set
    End Property

    Private _FormObjID As Integer = 0
    Public Property FormObjID As Integer
        Get
            Return _FormObjID
        End Get
        Set(ByVal value As Integer)
            _FormObjID = value
        End Set
    End Property

    Private _FormPopup As String = ""
    Public Property FormPopup As String
        Get
            Return _FormPopup
        End Get
        Set(ByVal value As String)
            _FormPopup = value
        End Set
    End Property

    Private _ObjectFocus As Object = Nothing
    Public Property ObjectFocus As Object
        Get
            Return _ObjectFocus
        End Get
        Set(ByVal value As Object)
            _ObjectFocus = value
        End Set
    End Property

    Private _SysDBName As String = ""
    Public Property SysDBName As String
        Get
            Return _SysDBName
        End Get
        Set(ByVal value As String)
            _SysDBName = value
        End Set
    End Property

    Private _SysTableName As String = ""
    Public Property SysTableName As String
        Get
            Return _SysTableName
        End Get
        Set(ByVal value As String)
            _SysTableName = value
        End Set
    End Property

    Private _SysDocType As String = ""
    Public Property SysDocType As String
        Get
            Return _SysDocType
        End Get
        Set(ByVal value As String)
            _SysDocType = value
        End Set
    End Property

    Private _TableName As String = ""
    Public Property TableName As String
        Get
            Return _TableName
        End Get
        Set(ByVal value As String)
            _TableName = value
        End Set
    End Property

    Private _MainKeyID As String = ""
    Public Property MainKeyID As String
        Get
            Return _MainKeyID
        End Get
        Set(ByVal value As String)
            _MainKeyID = value
        End Set
    End Property

    Public ReadOnly Property MainKey As String
        Get
            Return _FormHeader(0).MainKey
        End Get
    End Property

    Private _RequireField As String = ""
    Public Property RequireField As String
        Get
            Return _RequireField
        End Get
        Set(ByVal value As String)
            _RequireField = value
        End Set
    End Property

    Public ReadOnly Property Query As String
        Get
            Return _FormHeader(0).Query
        End Get
    End Property

    Private _ProcComplete As Boolean = False
    Public Property ProcComplete As Boolean
        Get
            Return _ProcComplete
        End Get
        Set(ByVal value As Boolean)
            _ProcComplete = value
        End Set
    End Property

    Private _Parent_Form As Object
    Public Property Parent_Form As Object
        Get
            Return _Parent_Form
        End Get
        Set(ByVal value As Object)
            _Parent_Form = value
        End Set
    End Property


    Private _FNOrderCmp As Integer = 0
    Public Property FNOrderCmp As Integer
        Get
            Return _FNOrderCmp
        End Get
        Set(ByVal value As Integer)
            _FNOrderCmp = value
        End Set
    End Property

#End Region

    Public Sub LoadOrderInfo(ByVal Key As String)
        '...call by another form name zzz...
        FTOrderNo.Text = Key
    End Sub

#Region "MAIN PROC"

    Private Sub PROC_InitGridViewSubOrerPackCartonInfo()
        Try
            With Me.ogvOrderSubPackCarton
                For nLoopGridviewSubPackCarton As Integer = .Columns.Count - 1 To 0 Step -1
                    .Columns(nLoopGridviewSubPackCarton).OptionsColumn.AllowEdit = False
                    .Columns(nLoopGridviewSubPackCarton).AppearanceCell.BackColor = Color.White
                    .Columns(nLoopGridviewSubPackCarton).AppearanceCell.ForeColor = Color.Black
                    .Columns(nLoopGridviewSubPackCarton).OptionsColumn.AllowSort = DevExpress.Utils.DefaultBoolean.False
                Next
            End With
        Catch ex As Exception
        End Try

        With ogvOrderSubPackCarton
            .OptionsView.ShowAutoFilterRow = False
            .OptionsSelection.MultiSelect = False
            .OptionsMenu.EnableColumnMenu = False
            .OptionsMenu.ShowAutoFilterRowItem = False
            .OptionsFilter.AllowFilterEditor = False
            .OptionsFilter.AllowColumnMRUFilterList = False
            .OptionsFilter.AllowMRUFilterList = False
            .OptionsSelection.MultiSelect = False
            .OptionsSelection.MultiSelectMode = DevExpress.XtraGrid.Views.Grid.GridMultiSelectMode.CellSelect
        End With

    End Sub

    Private Function CreateDocumentMI(_OrderNo As String, Optional SubOrderNo As String = "") As Boolean
        Dim _Qry As String = ""

        _Qry = " SELECT TOP 1 A.FTOrderNo  "
        _Qry &= vbCrLf & " FROM    [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.V_OrderSub_BreakDown_ShipDestination AS A INNER JOIN"
        _Qry &= vbCrLf & "          [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_ACCOUNT) & "].dbo.TACCTFactoryCMInvoice AS B WITH(NOLOCK) ON A.FTPOref = B.FTCustomerPO AND A.FNHSysContinentId = B.FNHSysContinentId AND A.FNHSysCountryId = B.FNHSysCountryId AND "
        _Qry &= vbCrLf & "     A.FNHSysProvinceId = B.FNHSysProvinceId And A.FNHSysShipModeId = B.FNHSysShipModeId And A.FNHSysShipPortId = B.FNHSysShipPortId "
        _Qry &= vbCrLf & "  INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_ACCOUNT) & "].dbo.TACCTFactoryCMInvoice_D AS C ON B.FTCustomerPO = C.FTCustomerPO AND B.FTInvoiceNo = C.FTInvoiceNo AND A.FTNikePOLineItem = C.FTPOLineItem AND "
        _Qry &= vbCrLf & "   A.FTColorway = C.FTColorway And A.FTSizeBreakDown = C.FTSizeBreakDown"
        _Qry &= vbCrLf & "  WHERE A.FTOrderNo='" & HI.UL.ULF.rpQuoted(_OrderNo) & "'"

        If SubOrderNo <> "" Then
            _Qry &= vbCrLf & "  AND A.FTSubOrderNoRef='" & HI.UL.ULF.rpQuoted(SubOrderNo) & "'"
        End If

        If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "") = "" Then
            Return False
        Else
            HI.MG.ShowMsg.mInfo("พบข้อมูลการทำเอกสาร MI แล้ว ไม่สามารถเปลี่ยนแปลงหรือแก้ไขข้อมูลได้ !!!", 1510300574, Me.Text, , MessageBoxIcon.Warning)
            Return True
        End If
    End Function

    Private Sub PROC_SETxShowBrowsePackingCartonInfo()

        If Me.FTOrderNo.Text.Trim <> "" And Me.FTSubOrderNo.Text.Trim <> "" Then
            Dim sSQL As String

            sSQL = ""
            sSQL = "SELECT TOP 1 ISNULL(A.FNPackCartonSubType, -1) AS FNPackCartonSubType, ISNULL(A.FNPackPerCarton, 0) AS FNPackPerCarton"
            sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK)"
            sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
            sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

            Dim tmpPackCartonSubType As System.Data.DataTable

            tmpPackCartonSubType = HI.Conn.SQLConn.GetDataTable(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            Me.FNPackCartonSubType.SelectedIndex = 0
            Me.FNPackPerCaton.Value = 0

            For Each Rxt As DataRow In tmpPackCartonSubType.Rows
                Try
                    Me.FNPackCartonSubType.SelectedIndex = Val(Rxt.Item("FNPackCartonSubType"))
                    Me.FNPackPerCaton.Value = Val(Rxt.Item("FNPackPerCarton").ToString)
                Catch ex As Exception
                    Me.FNPackCartonSubType.SelectedIndex = 0
                    Me.FNPackPerCaton.Value = 0
                End Try
            Next
            'If Not DBNull.Value.Equals(tmpPackCartonSubType) AndAlso tmpPackCartonSubType.Rows.Count > 0 Then
            '    If CInt(tmpPackCartonSubType.Rows(0).Item("FNPackCartonSubType")) > -1 Then

            '        Try
            '            Me.FNPackCartonSubType.SelectedIndex = Val(tmpPackCartonSubType.Rows(0).Item("FNPackCartonSubType"))
            '            Me.FNPackPerCaton.Value = Val(tmpPackCartonSubType.Rows(0).Item("FNPackPerCarton").ToString)
            '        Catch ex As Exception
            '            Me.FNPackCartonSubType.SelectedIndex = 0
            '            Me.FNPackPerCaton.Value = 0
            '        End Try

            '    End If
            'Else
            '    Me.FNPackCartonSubType.SelectedIndex = 0
            '    Me.FNPackPerCaton.Value = 0
            'End If

            '...State Approved Factory Sub Order No. {Approved/Revised} Packing Carton Information
            '============================================================================================================================================================================================================================================================================================================================================
            sSQL = ""
            sSQL = "DECLARE @FTStateApprovedPackRatio AS NVARCHAR(1);"
            sSQL &= Environment.NewLine & "SELECT TOP 1 @FTStateApprovedPackRatio = A.FTStateApprovedPackRatio FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
            sSQL &= Environment.NewLine & "IF (@FTStateApprovedPackRatio IS NULL)"
            sSQL &= Environment.NewLine & "BEGIN"
            sSQL &= Environment.NewLine & "  SET @FTStateApprovedPackRatio = N'2' /*not approved & not revised*/"
            sSQL &= Environment.NewLine & "END;"
            sSQL &= Environment.NewLine & "PRINT '@FTStateApprovedPackRatio : ' + @FTStateApprovedPackRatio;"
            sSQL &= Environment.NewLine & "SELECT @FTStateApprovedPackRatio AS FTStateApprovedPackRatio;"

            Dim tTextFTApprovedInfoState As String

            tTextFTApprovedInfoState = HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "2")

            If tTextFTApprovedInfoState = "0" Then
                Dim tRevisedTime As String = Val(HI.Conn.SQLConn.GetField("SELECT A.FNCntApprovedPackRatio FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'", HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")).ToString

                Me.FTStateApprovedPackRatio.Visible = False
                Me.FTStateApprovedPackRatio.Checked = False
                'Me.FTStateApprovedPackRatio.Text = "Revised Information ( " & tRevisedTime & " )"
                'Me.FTStateApprovedPackRatio.ForeColor = System.Drawing.Color.DarkRed
                'Me.FTStateApprovedPackRatio.BackColor = Color.Transparent
                'Me.FTStateApprovedPackRatio.BringToFront()

                Me.FTStateApprovedPackRatioRevised.Visible = True
                Me.FTStateApprovedPackRatioRevised.Checked = True

                Me.FTStateApprovedPackRatioRevised.ForeColor = System.Drawing.Color.DarkRed
                Me.FTStateApprovedPackRatioRevised.BackColor = Color.Transparent
                Me.FTStateApprovedPackRatioRevised.BringToFront()

            ElseIf tTextFTApprovedInfoState = "1" Then
                Me.FTStateApprovedPackRatioRevised.Visible = False
                Me.FTStateApprovedPackRatioRevised.Checked = False

                Me.FTStateApprovedPackRatio.Visible = True
                Me.FTStateApprovedPackRatio.Checked = True
                'Me.FTStateApprovedPackRatio.Text = "Approved Information"
                Me.FTStateApprovedPackRatio.ForeColor = System.Drawing.Color.Blue
                Me.FTStateApprovedPackRatio.BackColor = Color.Transparent
                Me.FTStateApprovedPackRatio.BringToFront()

            Else
                Me.FTStateApprovedPackRatio.Visible = False
                Me.FTStateApprovedPackRatioRevised.Visible = False
                'Me.FTStateApprovedPackRatio.Text = ""
                'Me.FTStateApprovedPackRatio.ForeColor = DevExpress.XtraEditors.CheckEdit.DefaultForeColor 'Me.GroupControl2.ForeColor 'DevExpress.XtraEditors.CheckEdit.DefaultBackColor
                'Me.FTStateApprovedPackRatio.BackColor = DevExpress.XtraEditors.CheckEdit.DefaultBackColor

            End If
            '============================================================================================================================================================================================================================================================================================================================================

        Else
            '...nothing
            Me.FNPackCartonSubType.SelectedIndex = 0
            Me.FNPackPerCaton.Value = 0
        End If

        Call PROC_InitGridViewSubOrerPackCartonInfo()
        Call W_PRCbShowBrowseDataSubOrderPackCartonInfo(Me.FTOrderNo.Text, Me.FTSubOrderNo.Text)
        'HI.TL.HandlerControl.ClearControl(Me.ogbPackCartonHD)

    End Sub

    Private Function CheckBookingRefer() As Boolean
        If Me.FNOrderType.SelectedIndex = 17 Then
            Dim _Qry As String = ""
            _Qry = "SELECT TOP 1 FTOrderNo"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder AS A WITH(NOLOCK)"
            _Qry &= vbCrLf & " WHERE FTOrderNoRef<>'' AND  FTOrderNoRef='" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "'"

            If (HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "") <> "") Then
                HI.MG.ShowMsg.mInfo("Order Booking ถูกนำไปอ้างอิง FO. อื่นๆแล้วไม่สามารถทำการแก้ไขได้ !!!", 1505057018, Me.Text, "", MessageBoxIcon.Warning)
                Return True
            Else
                Return False
            End If
        Else
            Return False
        End If
    End Function

    Private Sub CheckStateOrder()

        FTStateMRP.Checked = False
        FTStateReserve.Checked = False
        FTStateSourcing.Checked = False
        FTStatePurchase.Checked = False
        FTStateReceive.Checked = False
        FTStateAdjust.Checked = False
        FTStateTransferIn.Checked = False
        FTStateTransferOut.Checked = False
        FTStateProduction.Checked = False
        Me.FTStateCutting.Checked = False
        Me.FTStateSewing.Checked = False
        Me.FTStatePacking.Checked = False
        Me.FTStateTransferWH.Checked = False
        Me.FTStatePrintBarcode.Checked = False

        If Me.FTOrderNo.Text.Trim = "" Then Exit Sub

        Dim _dt As DataTable
        Dim _Qry As String = ""

        Dim _OrderNo As String = Me.FTOrderNo.Text

        _Qry = "SELECT  ISNULL(((SELECT TOP 1 '1' AS FTState FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTMPR AS A WITH(NOLOCK) WHERE FTOrderNo ='" & HI.UL.ULF.rpQuoted(_OrderNo) & "')),'0') AS FTStateMRP"
        _Qry &= vbCrLf & "  ,ISNULL(((SELECT TOP 1 '1' AS FTState FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_INVEN) & "].dbo.TINVENReserve AS A WITH(NOLOCK) WHERE FTOrderNo ='" & HI.UL.ULF.rpQuoted(_OrderNo) & "')),'0') AS FTStateReserve"
        _Qry &= vbCrLf & "  ,ISNULL(((SELECT TOP 1 '1' AS FTState FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_PUR) & "].dbo.TPURTOrder_Sourcing AS A WITH(NOLOCK) WHERE FTOrderNo ='" & HI.UL.ULF.rpQuoted(_OrderNo) & "')),'0') AS FTStateSourcing"
        _Qry &= vbCrLf & "  ,ISNULL(((SELECT TOP 1 '1' AS FTState FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_PUR) & "].dbo.TPURTPurchase_OrderNo AS A WITH(NOLOCK) WHERE FTOrderNo ='" & HI.UL.ULF.rpQuoted(_OrderNo) & "')),'0') AS FTStatePurchase"
        _Qry &= vbCrLf & "  ,ISNULL(((SELECT TOP 1 '1' AS FTState FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_INVEN) & "].dbo.TINVENReceive_Detail_Order AS A WITH(NOLOCK) WHERE FTOrderNo ='" & HI.UL.ULF.rpQuoted(_OrderNo) & "')),'0') AS FTStateReceive"
        _Qry &= vbCrLf & "  ,ISNULL(((SELECT TOP 1 '1' AS FTState FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_INVEN) & "].dbo.TINVENAdjustStock_AddIn_Detail AS A WITH(NOLOCK) WHERE FTOrderNo ='" & HI.UL.ULF.rpQuoted(_OrderNo) & "')),'0') AS FTStateAdjust"
        _Qry &= vbCrLf & "  ,ISNULL(((SELECT TOP 1 '1' AS FTState FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_INVEN) & "].dbo.TINVENTransferOrder AS A WITH(NOLOCK) WHERE FTOrderNoTo ='" & HI.UL.ULF.rpQuoted(_OrderNo) & "')),'0') AS FTStateTransferIn"
        _Qry &= vbCrLf & "  ,ISNULL(((SELECT TOP 1 '1' AS FTState FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_INVEN) & "].dbo.TINVENTransferOrder AS A WITH(NOLOCK) WHERE FTOrderNo ='" & HI.UL.ULF.rpQuoted(_OrderNo) & "')),'0') AS FTStateTransferOut"
        _Qry &= vbCrLf & "  ,ISNULL(((SELECT TOP 1 '1' AS FTState FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTOrderProd AS A WITH(NOLOCK) WHERE FTOrderNo ='" & HI.UL.ULF.rpQuoted(_OrderNo) & "')),'0') AS FTStateProduction"
        _Qry &= vbCrLf & "  ,ISNULL(((SELECT TOP 1 '1' AS FTState FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_INVEN) & "].dbo.TINVENTransferWH AS A WITH(NOLOCK) INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_INVEN) & "].dbo.TINVENBarcode_OUT AS B WITH(NOLOCK) ON A.FTTransferWHNo = B.FTDocumentNo  WHERE B.FTOrderNo ='" & HI.UL.ULF.rpQuoted(_OrderNo) & "')),'0') AS FTStateTransferWH"
        REM 20150112
        '_Qry &= vbCrLf & "  ,ISNULL((SELECT TOP 1 '1' AS FTState"
        '_Qry &= vbCrLf & "           FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTLayCut AS A (NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTOrderProd AS B (NOLOCK) ON A.FTOrderProdNo = B.FTOrderProdNo"
        '_Qry &= vbCrLf & "           WHERE B.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(_OrderNo) & "'), '0') AS FTStateCutting"
        '_Qry &= vbCrLf & "  ,ISNULL((SELECT TOP 1 '1' AS FTState FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "]..TPRODTOrderProd AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(_OrderNo) & "'), '0') AS FTStateCutting"

        '_Qry &= vbCrLf & "  ,ISNULL((SELECT TOP 1 '1' AS FTState"
        '_Qry &= vbCrLf & "           FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODBarcodeScan_Detail AS A (NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTBundle AS B (NOLOCK) ON A.FTBarcodeNo = B.FTBarcodeBundleNo"
        '_Qry &= vbCrLf & "                                                                                                                                 INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTOrderProd AS C (NOLOCK) ON B.FTOrderProdNo = C.FTOrderProdNo"
        '_Qry &= vbCrLf & "															                                                                       INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TCNMUnitSect AS D (NOLOCK) ON A.FNHSysUnitSectId = D.FNHSysUnitSectId"
        '_Qry &= vbCrLf & "           WHERE D.FTStateActive = N'1'"
        '_Qry &= vbCrLf & "                 AND D.FTStateSew = N'1'"
        '_Qry &= vbCrLf & "                 AND C.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(_OrderNo) & "'), '0') AS FTStateSewing"
        '_Qry &= vbCrLf & "  ,ISNULL((SELECT TOP 1 '1' AS FTState"
        '_Qry &= vbCrLf & "           FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "]..TPACKOrderPack AS A (NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "]..TPACKOrderPack_Carton_Scan AS B (NOLOCK) ON A.FTPackNo = B.FTPackNo"
        '_Qry &= vbCrLf & "           WHERE B.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(_OrderNo) & "'), '0') AS FTStatePacking"

        _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)

        'FTStateMRP.Checked = False
        'FTStateReserve.Checked = False
        'FTStateSourcing.Checked = False
        'FTStatePurchase.Checked = False
        'FTStateReceive.Checked = False
        'FTStateAdjust.Checked = False
        'FTStateTransferIn.Checked = False
        'FTStateTransferOut.Checked = False
        'FTStateProduction.Checked = False
        'Me.FTStateCutting.Checked = False
        'Me.FTStateSewing.Checked = False
        'Me.FTStatePacking.Checked = False

        For Each R As DataRow In _dt.Rows

            FTStateMRP.Checked = (R!FTStateMRP.ToString = "1")
            FTStateReserve.Checked = (R!FTStateReserve.ToString = "1")
            FTStateSourcing.Checked = (R!FTStateSourcing.ToString = "1")
            FTStatePurchase.Checked = (R!FTStatePurchase.ToString = "1")
            FTStateReceive.Checked = (R!FTStateReceive.ToString = "1")
            FTStateAdjust.Checked = (R!FTStateAdjust.ToString = "1")
            FTStateTransferIn.Checked = (R!FTStateTransferIn.ToString = "1")
            FTStateTransferOut.Checked = (R!FTStateTransferOut.ToString = "1")
            'FTStateProduction.Checked = (R!FTStateProduction.ToString = "1")
            'Me.FTStateCutting.Checked = (R!FTStateCutting.ToString = "1")
            'Me.FTStateSewing.Checked = (R!FTStateSewing.ToString = "1")
            'Me.FTStatePacking.Checked = (R!FTStatePacking.ToString = "1")
            FTStateTransferWH.Checked = (R!FTStateTransferWH.ToString = "1")
            Exit For

        Next

        Me.FTStateOrderAppSub.Checked = False
        Me.FTStateOrderAppComponent.Checked = False
        Me.FTStateOrderAppSew.Checked = False
        Me.FTStateOrderAppPack.Checked = False
        Me.FTStateOrderAppPackRatio.Checked = False
        Me.FTStateOrderAppSizeSpec.Checked = False
        Me.FTStateOrderApp.Checked = False

        _Qry = "   SELECT MIN(ISNULL(B.FTStateApprovedSubOrderNo,'0')) AS FTStateApprovedSubOrderNo"
        _Qry &= vbCrLf & "  , MIN(ISNULL(B.FTStateApprovedComponent,'0')) AS FTStateApprovedComponent"
        _Qry &= vbCrLf & "  , MIN(ISNULL(B.FTStateApprovedSewing,'0')) AS FTStateApprovedSewing"
        _Qry &= vbCrLf & "  , MIN(ISNULL(B.FTStateApprovedPacking,'0')) AS FTStateApprovedPacking"
        _Qry &= vbCrLf & "  , MIN(ISNULL(B.FTStateApprovedPackRatio,'0')) AS FTStateApprovedPackRatio"
        _Qry &= vbCrLf & "  , MIN(ISNULL(B.FTStateApprovedSizeSpec,'0')) AS FTStateApprovedSizeSpec"


        _Qry &= vbCrLf & "  , MIN(ISNULL(OA.FTStateOrderApp,'0')) AS FTStateOrderApp"


        _Qry &= vbCrLf & "  FROM     [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub AS A WITH(NOLOCK) LEFT OUTER JOIN"
        _Qry &= vbCrLf & "           [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_ApprovedInfo AS B WITH(NOLOCK)  "

        _Qry &= vbCrLf & "     ON A.FTOrderNo = B.FTOrderNo AND A.FTSubOrderNo = B.FTSubOrderNo"

        _Qry &= vbCrLf & "  RIGHT OUTER JOIN     [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder AS OA WITH(NOLOCK) ON  A.FTOrderNo=OA.FTOrderNo"


        _Qry &= vbCrLf & "  WHERE A.FTOrderNo= N'" & HI.UL.ULF.rpQuoted(_OrderNo) & "'"

        _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)
        For Each R As DataRow In _dt.Rows

            Me.FTStateOrderAppSub.Checked = (R!FTStateApprovedSubOrderNo.ToString = "1")
            Me.FTStateOrderAppComponent.Checked = (R!FTStateApprovedComponent.ToString = "1")
            Me.FTStateOrderAppSew.Checked = (R!FTStateApprovedSewing.ToString = "1")
            Me.FTStateOrderAppPack.Checked = (R!FTStateApprovedPacking.ToString = "1")
            Me.FTStateOrderAppPackRatio.Checked = (R!FTStateApprovedPackRatio.ToString = "1")
            Me.FTStateOrderAppSizeSpec.Checked = (R!FTStateApprovedSizeSpec.ToString = "1")
            Me.FTStateOrderApp.Checked = (R!FTStateOrderApp.ToString = "1")
            Exit For
        Next

        'If Not (FTStateProduction.Checked) Then
        _Qry = " SELECT Max(FTStateCut) AS FTStateCut, MAX(FTStateSew) AS FTStateSew, MAX(FTStatePack) AS FTStatePack, MAX(FTStatePrintBarcode) AS FTStatePrintBarcode "
        _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTOrderStatus AS A (NOLOCK)"
        _Qry &= vbCrLf & "  WHERE FTOrderNo=N'" & HI.UL.ULF.rpQuoted(_OrderNo) & "'"

        _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)

        For Each Rx As DataRow In _dt.Rows
            FTStateProduction.Checked = (Rx!FTStateCut.ToString = "1")
            Me.FTStateCutting.Checked = (Rx!FTStateCut.ToString = "1")
            Me.FTStateSewing.Checked = (Rx!FTStateSew.ToString = "1")
            Me.FTStatePacking.Checked = (Rx!FTStatePack.ToString = "1")
            Me.FTStatePrintBarcode.Checked = (Rx!FTStatePrintBarcode.ToString = "1")
            Exit For
        Next

        'End If

        _dt.Dispose()

    End Sub

    Private Sub CheckStateSubOrder()

        FTStateSubMRP.Checked = False
        FTStateSubProduction.Checked = False
        Me.FTStateSubCutting.Checked = False
        Me.FTStateSubSewing.Checked = False
        Me.FTStateSubPacking.Checked = False

        If Me.FTSubOrderNo.Text.Trim = "" Then Exit Sub

        Dim _dt As DataTable
        Dim _Qry As String = ""

        Dim _OrderNo As String = Me.FTOrderNo.Text
        Dim _OrderNoSub As String = Me.FTSubOrderNo.Text

        _Qry = "SELECT  ISNULL(((SELECT TOP 1 '1' AS FTState FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTMPR AS A WITH(NOLOCK) WHERE FTSubOrderNo ='" & HI.UL.ULF.rpQuoted(_OrderNoSub) & "')),'0') AS FTStateSubMRP"
        _Qry &= vbCrLf & "  ,ISNULL(((SELECT TOP 1 '1' AS FTState FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTOrderProd_Detail AS A WITH(NOLOCK) WHERE FTSubOrderNo = '" & HI.UL.ULF.rpQuoted(_OrderNoSub) & "')),'0') AS FTStateSubProduction"
        REM 2015/01/12
        '_Qry &= vbCrLf & "  ,ISNULL((SELECT TOP 1 '1' AS FTState"
        '_Qry &= vbCrLf & "           FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTLayCut AS A (NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTOrderProd AS B (NOLOCK) ON A.FTOrderProdNo = B.FTOrderProdNo"
        '_Qry &= vbCrLf & "                                                                                                                      INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTOrderProd_Detail AS C (NOLOCK) ON B.FTOrderNo = C.FTOrderNo"
        '_Qry &= vbCrLf & "												                                                                                                                                                                                                     AND B.FTOrderProdNo = C.FTOrderProdNo"
        '_Qry &= vbCrLf & "           WHERE B.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(_OrderNo) & "'"
        '_Qry &= vbCrLf & "	               AND C.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(_OrderNoSub) & "'), '0') AS FTStateSubCutting"
        _Qry &= vbCrLf & "  ,ISNULL((SELECT TOP 1 '1' AS FTState"
        _Qry &= vbCrLf & "           FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "]..TPRODTOrderProd AS A (NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "]..TPRODTOrderProd_Detail AS B (NOLOCK) ON A.FTOrderProdNo = B.FTOrderProdNo"
        _Qry &= vbCrLf & "                                                                                                                                         AND A.FTOrderNo = B.FTOrderNo"
        _Qry &= vbCrLf & "           WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(_OrderNo) & "'"
        _Qry &= vbCrLf & "		           AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(_OrderNoSub) & "'"
        _Qry &= vbCrLf & "	         ), '0') AS FTStateSubCutting"

        _Qry &= vbCrLf & "  ,ISNULL((SELECT TOP 1 '1' AS FTState"
        _Qry &= vbCrLf & "           FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODBarcodeScan_Detail AS A (NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTBundle AS B (NOLOCK) ON A.FTBarcodeNo = B.FTBarcodeBundleNo"
        _Qry &= vbCrLf & "                                                                                                                                 INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTOrderProd AS C (NOLOCK) ON B.FTOrderProdNo = C.FTOrderProdNo"
        _Qry &= vbCrLf & "																		                                                           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTOrderProd_Detail AS D (NOLOCK) ON C.FTOrderNo = D.FTOrderNo"
        _Qry &= vbCrLf & "																		                                                                                                                                                                                        AND C.FTOrderProdNo = D.FTOrderProdNo"
        _Qry &= vbCrLf & "																		                                                           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TCNMUnitSect AS E (NOLOCK) ON A.FNHSysUnitSectId = E.FNHSysUnitSectId"
        _Qry &= vbCrLf & "           WHERE E.FTStateActive = N'1'"
        _Qry &= vbCrLf & "                 AND E.FTStateSew = N'1'"
        _Qry &= vbCrLf & "                 AND C.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(_OrderNo) & "'"
        _Qry &= vbCrLf & "			       AND D.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(_OrderNoSub) & "'), '0') AS FTStateSubSewing"
        _Qry &= vbCrLf & "  ,ISNULL((SELECT TOP 1 '1' AS FTState"
        _Qry &= vbCrLf & "           FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "]..TPACKOrderPack AS A (NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "]..TPACKOrderPack_Carton_Scan AS B (NOLOCK) ON A.FTPackNo = B.FTPackNo"
        _Qry &= vbCrLf & "           WHERE B.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
        _Qry &= vbCrLf & "	               AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'), '0') AS FTStateSubPacking"

        _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)

        'FTStateSubMRP.Checked = False
        'FTStateSubProduction.Checked = False
        'Me.FTStateSubCutting.Checked = False
        'Me.FTStateSubSewing.Checked = False
        'Me.FTStateSubPacking.Checked = False

        For Each R As DataRow In _dt.Rows

            FTStateSubMRP.Checked = (R!FTStateSubMRP.ToString = "1")
            FTStateSubProduction.Checked = (R!FTStateSubProduction.ToString = "1")
            Me.FTStateSubCutting.Checked = (R!FTStateSubCutting.ToString = "1")
            Me.FTStateSubSewing.Checked = (R!FTStateSubSewing.ToString = "1")
            Me.FTStateSubPacking.Checked = (R!FTStateSubPacking.ToString = "1")

            Exit For

        Next

        If Not (FTStateSubProduction.Checked) Then

            _Qry = " SELECT Max(FTStateCut) AS FTStateCut, MAX(FTStateSew) AS FTStateSew, MAX(FTStatePack) AS FTStatePack "
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTOrderStatus AS A (NOLOCK)"
            _Qry &= vbCrLf & "  WHERE FTOrderNo=N'" & HI.UL.ULF.rpQuoted(_OrderNo) & "'"
            _Qry &= vbCrLf & "  AND FTSubOrderNo=N'" & HI.UL.ULF.rpQuoted(_OrderNoSub) & "'"

            _dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)
            For Each Rx As DataRow In _dt.Rows
                FTStateSubProduction.Checked = (Rx!FTStateCut.ToString = "1")
                Me.FTStateSubCutting.Checked = (Rx!FTStateCut.ToString = "1")
                Me.FTStateSubSewing.Checked = (Rx!FTStateSew.ToString = "1")
                Me.FTStateSubPacking.Checked = (Rx!FTStatePack.ToString = "1")
                Exit For
            Next

        End If

        _dt.Dispose()

    End Sub

    Private Sub UpdateOrderQty()
        ' FNOrderQty, FNExtraQty, FNOrderAmt, FNGrandQty, FNGrandAmt, FNGarmentTestQty, FNGarmentTestAmnt, FNExtraAmt

        Dim tSql As String
        tSql = " UPDATE A SET FNExtraAmt = B.FNAmntExtra "
        tSql &= vbCrLf & "    ,FNGarmentTestAmnt  = B.FNAmntQtyTest "
        tSql &= vbCrLf & "	   ,FNOrderAmt = B.FNAmt "
        tSql &= vbCrLf & "	   ,FNExtraQty  = B.FNQuantityExtra "
        tSql &= vbCrLf & "	   ,FNGarmentTestQty = B.FNGarmentQtyTest "
        tSql &= vbCrLf & "	   ,FNGrandAmt = B.FNGrandAmnt "
        tSql &= vbCrLf & "	   ,FNGrandQty =B.FNGrandQuantity"
        tSql &= vbCrLf & "	   ,FNOrderQty  = B.FNQuantity "

        tSql &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder AS A ,"
        tSql &= vbCrLf & "  (SELECT        FTOrderNo"
        tSql &= vbCrLf & "			 , MAX(FNPrice) AS FNPrice"
        tSql &= vbCrLf & "			 , SUM(FNQuantity) AS FNQuantity"
        tSql &= vbCrLf & "			 , SUM(FNAmt) AS FNAmt"
        tSql &= vbCrLf & "			 , SUM(FNQuantityExtra) AS FNQuantityExtra"
        tSql &= vbCrLf & "			 , SUM(FNGrandQuantity) AS FNGrandQuantity"
        tSql &= vbCrLf & "			 , SUM(FNAmntExtra) AS FNAmntExtra"
        tSql &= vbCrLf & "			 , SUM(FNGrandAmnt) AS FNGrandAmnt"
        tSql &= vbCrLf & "			 , SUM(FNGarmentQtyTest) AS FNGarmentQtyTest"
        tSql &= vbCrLf & "			 , SUM(FNAmntQtyTest) AS FNAmntQtyTest"
        tSql &= vbCrLf & "             FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_BreakDown WITH(NOLOCK)"
        tSql &= vbCrLf & "	WHERE FTOrderNo='" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "' "
        tSql &= vbCrLf & "  GROUP BY FTOrderNo) AS B"
        tSql &= vbCrLf & "  WHERE A.FTOrderNo = B.FTOrderNo"

        tSql &= vbCrLf & "	AND B.FTOrderNo='" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "' "

        HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

    End Sub

    Private Function PROC_GETbPermissionCommand(ByVal paramFTOrderNo As String, ByVal paramFTUserLogIn As String) As String
        Dim tPermission As String = "N"
        Dim sSQL As String
        Try
            If Not (HI.ST.SysInfo.Admin) Then
                sSQL = ""
                sSQL = "DECLARE @FTOrderNo            AS NVARCHAR(30);"
                sSQL &= Environment.NewLine & "DECLARE @FNHSysMerTeamIdOrder AS INT;"
                sSQL &= Environment.NewLine & "DECLARE @FTUserName           AS NVARCHAR(30)"
                sSQL &= Environment.NewLine & "DECLARE @FTStateAchiveCommand AS VARCHAR(1);"
                sSQL &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(paramFTOrderNo) & "';"
                sSQL &= Environment.NewLine & "SET @FTUserName = N'" & HI.UL.ULF.rpQuoted(paramFTUserLogIn) & "';"
                sSQL &= Environment.NewLine & "SELECT @FNHSysMerTeamIdOrder = ISNULL(A.FNHSysMerTeamId, 0) FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = @FTOrderNo;"
                sSQL &= Environment.NewLine & "--PRINT '@FNHSysMerTeamIdOrder : ' + CONVERT(VARCHAR(100), @FNHSysMerTeamIdOrder);"
                sSQL &= Environment.NewLine & "SELECT  @FTStateAchiveCommand = (CASE WHEN A.FNHSysMerTeamId = @FNHSysMerTeamIdOrder THEN 'Y' ELSE 'N' END)"
                sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SECURITY) & "]..TSEUserLogin AS A (NOLOCK)"
                sSQL &= Environment.NewLine & "WHERE A.FTUserName = @FTUserName;"
                sSQL &= Environment.NewLine & "IF (@FTStateAchiveCommand IS NULL)"
                sSQL &= Environment.NewLine & " BEGIN"
                sSQL &= Environment.NewLine & "   SET @FTStateAchiveCommand = N'N'"
                sSQL &= Environment.NewLine & " END;"
                sSQL &= Environment.NewLine & "--PRINT '@FTStateAchiveCommand is : ' + @FTStateAchiveCommand;"
                sSQL &= Environment.NewLine & "SELECT @FTStateAchiveCommand AS FTStateAchiveCommand;"

                tPermission = HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "N")

            Else
                tPermission = "Y"
            End If

        Catch ex As Exception


        End Try

        Return tPermission

    End Function

    Private Function W_GETbSchemaMerchanSubOrderComponent() As Boolean

        Dim oDBdt As System.Data.DataTable
        Dim tSql As String

        oSubCompoentSchema = New oSubOrerComponent

        Try
            tSql = ""
            tSql = "SELECT TOP 1 A.[FTOrderNo], A.[FTSubOrderNo], A.[FNHSysMerMatId], A.[FTComponent], A.[FTRemark]"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub_Component] AS A WITH(NOLOCK)"
            tSql &= Environment.NewLine & "WHERE 1 = 1;"

            oDBdt = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If Not oDBdt Is Nothing Then
                Dim oConn As SqlConnection = New SqlConnection
                Dim oCmd As SqlCommand = New SqlCommand
                Dim oSchema As DataTable
                Dim oReader As SqlDataReader
                Try
                    oConn.ConnectionString = HI.Conn.DB.ConnectionString(_DBEnum)
                    If oConn.State = ConnectionState.Open Then oConn.Close()
                    oConn.Open()

                    oCmd.Connection = oConn
                    oCmd.CommandText = tSql
                    oReader = oCmd.ExecuteReader(CommandBehavior.KeyInfo)

                    If Not oReader Is Nothing Then
                        oSchema = oReader.GetSchemaTable()

                        For Each oRow As DataRow In oSchema.Rows
                            Select Case oRow.Item("ColumnName").ToString()
                                Case "FTComponent"
                                    oSubCompoentSchema.FTRemarkComponent = CInt(oRow.Item("ColumnSize"))
                                Case Else
                                    '...do nothing
                            End Select
                        Next

                        oReader.Close()

                        HI.Conn.SQLConn.DisposeSqlConnection(oCmd)
                        HI.Conn.SQLConn.DisposeSqlConnection(oConn)

                        Return True
                    Else
                        oSubCompoentSchema.FTRemarkComponent = 500

                        If Not oReader Is Nothing Then
                            oReader.Close()
                        End If

                        HI.Conn.SQLConn.DisposeSqlConnection(oCmd)
                        HI.Conn.SQLConn.DisposeSqlConnection(oConn)

                        Return False
                    End If

                Catch ex As Exception


                    If Not oReader Is Nothing Then
                        oReader.Close()
                    End If

                    HI.Conn.SQLConn.DisposeSqlConnection(oCmd)
                    HI.Conn.SQLConn.DisposeSqlConnection(oConn)

                    oSubCompoentSchema.FTRemarkComponent = 500

                    Return False
                End Try

            Else
                oSubCompoentSchema.FTRemarkComponent = 500
                Return False
            End If

        Catch ex As Exception
            oSubCompoentSchema.FTRemarkComponent = 500



            Return False
        End Try

    End Function

    Private Function W_GETbSchemaMerchan() As Boolean
        Dim oDBdt As DataTable
        Dim tSql As String

        oSizeSpecType = New oSizeSpec

        Try
            tSql = ""
            tSql = "SELECT TOP 1 A.FTOrderNo, A.FTSubOrderNo, A.FNSeq, A.FNHSysMatSizeId, A.FTSizeSpecDesc, A.FTSizeSpecExtension, A.FTTolerant"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A"
            tSql &= Environment.NewLine & "WHERE 1 = 1;"

            oDBdt = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If Not oDBdt Is Nothing Then

                Dim oConn As SqlConnection = New SqlConnection
                Dim oCmd As SqlCommand = New SqlCommand
                Dim oSchema As DataTable
                Dim oReader As SqlDataReader
                Try
                    oConn.ConnectionString = HI.Conn.DB.ConnectionString(_DBEnum)
                    If oConn.State = ConnectionState.Open Then oConn.Close()
                    oConn.Open()

                    oCmd.Connection = oConn
                    oCmd.CommandText = tSql
                    oReader = oCmd.ExecuteReader(CommandBehavior.KeyInfo)

                    If Not oReader Is Nothing Then
                        oSchema = oReader.GetSchemaTable()

                        For Each oRow As DataRow In oSchema.Rows
                            Select Case oRow.Item("ColumnName").ToString()
                                Case "FTSizeSpecDesc"
                                    oSizeSpecType.SizeSpecFTSizeSpecDesc = CInt(oRow.Item("ColumnSize"))
                                Case "FTSizeSpecExtension"
                                    oSizeSpecType.SizeSpecFTSizeSpecExtension = CInt(oRow.Item("ColumnSize"))
                                Case "FTTolerant"
                                    oSizeSpecType.SizeSpecFTTolerant = CInt(oRow.Item("ColumnSize"))
                            End Select
                        Next

                        oReader.Close()

                        HI.Conn.SQLConn.DisposeSqlConnection(oCmd)
                        HI.Conn.SQLConn.DisposeSqlConnection(oConn)

                        Return True
                    Else
                        oSizeSpecType.SizeSpecFTSizeSpecDesc = 500
                        oSizeSpecType.SizeSpecFTSizeSpecExtension = 30
                        oSizeSpecType.SizeSpecFTTolerant = 30

                        If Not oReader Is Nothing Then
                            oReader.Close()
                        End If

                        HI.Conn.SQLConn.DisposeSqlConnection(oCmd)
                        HI.Conn.SQLConn.DisposeSqlConnection(oConn)

                        Return False
                    End If

                Catch ex As Exception


                    If Not oReader Is Nothing Then
                        oReader.Close()
                    End If

                    HI.Conn.SQLConn.DisposeSqlConnection(oCmd)
                    HI.Conn.SQLConn.DisposeSqlConnection(oConn)

                    oSizeSpecType.SizeSpecFTSizeSpecDesc = 500
                    oSizeSpecType.SizeSpecFTSizeSpecExtension = 30
                    oSizeSpecType.SizeSpecFTTolerant = 30

                    Return False
                End Try

            Else
                oSizeSpecType.SizeSpecFTSizeSpecDesc = 500
                oSizeSpecType.SizeSpecFTSizeSpecExtension = 30
                oSizeSpecType.SizeSpecFTTolerant = 30

                Return False
            End If

            Return True
        Catch ex As Exception
            oSizeSpecType.SizeSpecFTSizeSpecDesc = 500
            oSizeSpecType.SizeSpecFTSizeSpecExtension = 30
            oSizeSpecType.SizeSpecFTTolerant = 30

            Return False
        End Try

    End Function

    Private Sub PostSave(ByVal TableName As String, ByVal RefDocKey As String)
        Try
            '..record revise history when user edit record
            '' Create Audit log.        

            'HI.Auditor.CreateLog.CreateLogdata(dtBefore, dtAfter, Me.Name, TableName, RefDocKey)

            dtBefore = Nothing
            dtAfter = Nothing

            '...compare DTBeforeRevised/DTAfterRevised
            '========================================================================================================================================================================
            If Not DBNull.Value.Equals(DTBeforeRevised) AndAlso DTBeforeRevised.Rows.Count > 0 Then
                Dim bFlagRevised As Boolean = False

                If Not DTAfterRevised Is Nothing AndAlso DTAfterRevised.Rows.Count > 0 Then

                    For nLoopRevised As Integer = 0 To DTAfterRevised.Rows.Count - 1

                        For nLoopColRevised As Integer = 0 To DTAfterRevised.Columns.Count - 1

                            Dim FDDateChangeOrderImageAF As String, FTTimeChangeOrderImageAF As String, FTUserChangeOrderImageAF As String
                            Dim FDDateChangeOrderImageBF As String, FTTimeChangeOrderImageBF As String, FTUserChangeOrderImageBF As String

                            FDDateChangeOrderImageAF = "" : FTTimeChangeOrderImageAF = "" : FTUserChangeOrderImageAF = ""
                            FDDateChangeOrderImageBF = "" : FTTimeChangeOrderImageBF = "" : FTUserChangeOrderImageBF = ""

                            Select Case DTAfterRevised.Columns(nLoopColRevised).ColumnName.ToUpper

                                Case "FTPORef".ToUpper, "FNHSysSeasonId".ToUpper, "FNHSysPlantId".ToUpper

                                    If Not DTAfterRevised.Rows(nLoopRevised)(nLoopColRevised).Equals(DTBeforeRevised.Rows(nLoopRevised)(nLoopColRevised)) Then
                                        bFlagRevised = True
                                        Exit For
                                    End If

                                Case "FDDateChangeOrderImage1".ToUpper, "FTTimeChangeOrderImage1".ToUpper, "FTUserChangeOrderImage1".ToUpper
                                    FDDateChangeOrderImageAF = DTAfterRevised.Rows(nLoopRevised)("FDDateChangeOrderImage1").ToString
                                    FTTimeChangeOrderImageAF = DTAfterRevised.Rows(nLoopRevised)("FTTimeChangeOrderImage1").ToString
                                    FTUserChangeOrderImageAF = DTAfterRevised.Rows(nLoopRevised)("FTUserChangeOrderImage1").ToString

                                    FDDateChangeOrderImageBF = DTBeforeRevised.Rows(nLoopRevised)("FDDateChangeOrderImage1").ToString
                                    FTTimeChangeOrderImageBF = DTBeforeRevised.Rows(nLoopRevised)("FTTimeChangeOrderImage1").ToString
                                    FTUserChangeOrderImageBF = DTBeforeRevised.Rows(nLoopRevised)("FTUserChangeOrderImage1").ToString

                                    If FDDateChangeOrderImageAF + FTTimeChangeOrderImageAF + FTUserChangeOrderImageAF <> FDDateChangeOrderImageBF + FTTimeChangeOrderImageBF + FTUserChangeOrderImageBF Then
                                        bFlagRevised = True
                                        Exit For
                                    End If

                                Case "FDDateChangeOrderImage2".ToUpper, "FTTimeChangeOrderImage2".ToUpper, "FTUserChangeOrderImage2".ToUpper
                                    FDDateChangeOrderImageAF = DTAfterRevised.Rows(nLoopRevised)("FDDateChangeOrderImage2").ToString
                                    FTTimeChangeOrderImageAF = DTAfterRevised.Rows(nLoopRevised)("FTTimeChangeOrderImage2").ToString
                                    FTUserChangeOrderImageAF = DTAfterRevised.Rows(nLoopRevised)("FTUserChangeOrderImage2").ToString

                                    FDDateChangeOrderImageBF = DTBeforeRevised.Rows(nLoopRevised)("FDDateChangeOrderImage2").ToString
                                    FTTimeChangeOrderImageBF = DTBeforeRevised.Rows(nLoopRevised)("FTTimeChangeOrderImage2").ToString
                                    FTUserChangeOrderImageBF = DTBeforeRevised.Rows(nLoopRevised)("FTUserChangeOrderImage2").ToString

                                    If FDDateChangeOrderImageAF + FTTimeChangeOrderImageAF + FTUserChangeOrderImageAF <> FDDateChangeOrderImageBF + FTTimeChangeOrderImageBF + FTUserChangeOrderImageBF Then
                                        bFlagRevised = True
                                        Exit For
                                    End If

                                Case "FDDateChangeOrderImage3".ToUpper, "FTTimeChangeOrderImage3".ToUpper, "FTUserChangeOrderImage3".ToUpper
                                    FDDateChangeOrderImageAF = DTAfterRevised.Rows(nLoopRevised)("FDDateChangeOrderImage3").ToString
                                    FTTimeChangeOrderImageAF = DTAfterRevised.Rows(nLoopRevised)("FTTimeChangeOrderImage3").ToString
                                    FTUserChangeOrderImageAF = DTAfterRevised.Rows(nLoopRevised)("FTUserChangeOrderImage3").ToString

                                    FDDateChangeOrderImageBF = DTBeforeRevised.Rows(nLoopRevised)("FDDateChangeOrderImage3").ToString
                                    FTTimeChangeOrderImageBF = DTBeforeRevised.Rows(nLoopRevised)("FTTimeChangeOrderImage3").ToString
                                    FTUserChangeOrderImageBF = DTBeforeRevised.Rows(nLoopRevised)("FTUserChangeOrderImage3").ToString

                                    If FDDateChangeOrderImageAF + FTTimeChangeOrderImageAF + FTUserChangeOrderImageAF <> FDDateChangeOrderImageBF + FTTimeChangeOrderImageBF + FTUserChangeOrderImageBF Then
                                        bFlagRevised = True
                                        Exit For
                                    End If

                                Case "FDDateChangeOrderImage4".ToUpper, "FTTimeChangeOrderImage4".ToUpper, "FTUserChangeOrderImage4".ToUpper

                                    FDDateChangeOrderImageAF = DTAfterRevised.Rows(nLoopRevised)("FDDateChangeOrderImage4").ToString
                                    FTTimeChangeOrderImageAF = DTAfterRevised.Rows(nLoopRevised)("FTTimeChangeOrderImage4").ToString
                                    FTUserChangeOrderImageAF = DTAfterRevised.Rows(nLoopRevised)("FTUserChangeOrderImage4").ToString

                                    FDDateChangeOrderImageBF = DTBeforeRevised.Rows(nLoopRevised)("FDDateChangeOrderImage4").ToString
                                    FTTimeChangeOrderImageBF = DTBeforeRevised.Rows(nLoopRevised)("FTTimeChangeOrderImage4").ToString
                                    FTUserChangeOrderImageBF = DTBeforeRevised.Rows(nLoopRevised)("FTUserChangeOrderImage4").ToString

                                    If FDDateChangeOrderImageAF + FTTimeChangeOrderImageAF + FTUserChangeOrderImageAF <> FDDateChangeOrderImageBF + FTTimeChangeOrderImageBF + FTUserChangeOrderImageBF Then
                                        bFlagRevised = True
                                        Exit For
                                    End If

                                Case Else
                                    '...Nothing
                            End Select

                        Next nLoopColRevised

                        If bFlagRevised Then Exit For

                    Next nLoopRevised

                End If

                If bFlagRevised = True Then
                    Dim sSQLRevised As String
                    sSQLRevised = ""
                    sSQLRevised = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                    sSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                    sSQLRevised &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                    sSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                    sSQLRevised &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                    sSQLRevised &= Environment.NewLine & "SELECT @FTRevisedInfoBy = A.FTUpdUser, @FDRevisedInfoDate = A.FDUpdDate, @FTRevisedInfoTime = A.FTUpdTime FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = @FTOrderNo;"
                    sSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                    sSQLRevised &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                    sSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                    sSQLRevised &= Environment.NewLine & "UPDATE A"
                    sSQLRevised &= Environment.NewLine & "SET A.FTApprovedInfoState = N'0',"
                    sSQLRevised &= Environment.NewLine & "    A.FNRevisedInfoCnt = ISNULL(A.FNRevisedInfoCnt, 0) + 1,"
                    sSQLRevised &= Environment.NewLine & "    A.FDRevisedInfoDate = @FDRevisedInfoDate,"
                    sSQLRevised &= Environment.NewLine & "    A.FTRevisedInfoTime = @FTRevisedInfoTime,"
                    sSQLRevised &= Environment.NewLine & "    A.FTRevisedInfoBy = @FTRevisedInfoBy,"
                    sSQLRevised &= Environment.NewLine & "    A.FTRevisedInfoState = N'0'"
                    sSQLRevised &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder_ApprovedInfo AS A"
                    sSQLRevised &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo;"

                    If HI.Conn.SQLConn.ExecuteNonQuery(sSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then

                    End If

                End If

            End If

            DTBeforeRevised = Nothing
            DTAfterRevised = Nothing
            '========================================================================================================================================================================

        Catch ex As Exception
            '' To do something
        End Try

    End Sub

    Private Sub PROC_PostSaveDelFONo(ByVal paramTable As String, ByVal paramRefDockey As String)
        Try
            '...revise history {delete factory order no}
            '...Audit log
            ' HI.Auditor.CreateLog.CreateLogdata(tmpDTFoNoBefore, tmpDTFoNoAfter, Me.Name, paramTable, paramRefDockey)
            tmpDTFoNoBefore = Nothing
            tmpDTFoNoAfter = Nothing
        Catch ex As Exception
            '...nothing
        End Try
    End Sub

    Private Sub PROC_PostSaveSubOrderNo(ByVal paramTable As String, ByVal paramRefDockey As String)
        Try
            ' HI.Auditor.CreateLog.CreateLogdata(dtBefore, dtAfter, Me.Name, TableName, paramRefDockey)
            dtBefore = Nothing
            dtAfter = Nothing

            '...compare after revised factory sub order no. infomation
            '====================================================================================================================================
            If Not DBNull.Value.Equals(DTBeforeRevisedSubOrder) AndAlso DTBeforeRevisedSubOrder.Rows.Count > 0 Then
                Dim bFlagRevised As Boolean = False

                If Not DTAfterRevisedSubOrder Is Nothing AndAlso DTAfterRevisedSubOrder.Rows.Count > 0 Then

                    For nLoopRevisedSub As Integer = 0 To DTAfterRevisedSubOrder.Rows.Count - 1

                        For nLoopColRevised As Integer = 0 To DTAfterRevisedSubOrder.Columns.Count - 1
                            If Not DTAfterRevisedSubOrder.Rows(nLoopRevisedSub)(nLoopColRevised).Equals(DTBeforeRevisedSubOrder.Rows(nLoopRevisedSub)(nLoopColRevised)) = True Then


                                bFlagRevised = True

                                Exit For

                            End If

                        Next nLoopColRevised

                        If bFlagRevised = True Then Exit For

                    Next nLoopRevisedSub

                    If bFlagRevised = True Then
                        '...change state approved factory sub order no. to state revised info state
                        Dim sSQLRevisedSub As String
                        sSQLRevisedSub = ""
                        sSQLRevisedSub = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                        sSQLRevisedSub &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                        sSQLRevisedSub &= Environment.NewLine & "DECLARE @FDApprovedInfoDate AS NVARCHAR(10);"
                        sSQLRevisedSub &= Environment.NewLine & "DECLARE @FTApprovedInfoTime AS NVARCHAR(8);"
                        sSQLRevisedSub &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                        sSQLRevisedSub &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                        sSQLRevisedSub &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                        sSQLRevisedSub &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                        sSQLRevisedSub &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                        sSQLRevisedSub &= Environment.NewLine & "SELECT @FTRevisedInfoBy =  A.FTUpdUser, @FDRevisedInfoDate =  A.FDUpdDate, @FTRevisedInfoTime = A.FTUpdTime FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK) WHERE A.FTOrderNo = @FTOrderNo AND A.FTSubOrderNo = @FTSubOrderNo;"
                        sSQLRevisedSub &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                        sSQLRevisedSub &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                        sSQLRevisedSub &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                        sSQLRevisedSub &= Environment.NewLine & "UPDATE A"
                        sSQLRevisedSub &= Environment.NewLine & "SET A.FTStateApprovedSubOrderNo = N'0'"
                        sSQLRevisedSub &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                        sSQLRevisedSub &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                        sSQLRevisedSub &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                        If HI.Conn.SQLConn.ExecuteNonQuery(sSQLRevisedSub, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then


                        End If

                    End If

                End If

            End If

            DTBeforeRevisedSubOrder = Nothing
            DTAfterRevisedSubOrder = Nothing
            '====================================================================================================================================

        Catch ex As Exception
            '...nothing
        End Try
    End Sub

    Private Sub PostSaveSubOrderNoBreakdown(ByVal ptTableName As String, ByVal ptRefDocKey As String)
        Try
            '...record revise history when user adjust factory sub order no. breakdown
            '...Audit log
            'HI.Auditor.CreateLog.CreateLogdata(oDBdtSubOrderNoBreakdownBF, oDBdtSubOrderNoBreakdownAF, Me.Name, ptTableName, ptRefDocKey)
            oDBdtSubOrderNoBreakdownBF = Nothing
            oDBdtSubOrderNoBreakdownAF = Nothing
        Catch ex As Exception
            '...
        End Try
    End Sub

    Private Sub PostSaveSubOrderNoSew(ByVal ptTableName As String, ByVal ptRefDocKey As String)
        Try
            '...record revise history when user adjust factory sub order no. sewing process
            '...Audit log
            'HI.Auditor.CreateLog.CreateLogdata(oDBdtSubOrderNoSewBF, oDBdtSubOrderNoSewAF, Me.Name, ptTableName, ptRefDocKey)
            oDBdtSubOrderNoSewBF = Nothing
            oDBdtSubOrderNoSewAF = Nothing

            '...compare after revised sewing sequence process 
            '===================================================================================================================================================================
            Dim bFlagRevisedSew As Boolean = False
            If (Not DTBeforeRevisedSew Is Nothing) Or (Not DTAfterRevisedSew Is Nothing) Then
                If Not bFlagRevisedSew And DTBeforeRevisedSew Is Nothing And (Not DTAfterRevisedSew Is Nothing And DTAfterRevisedSew.Rows.Count > 0) Then bFlagRevisedSew = True
                If Not bFlagRevisedSew And (Not DTBeforeRevisedSew Is Nothing And DTBeforeRevisedSew.Rows.Count > 0) And DTAfterRevisedSew Is Nothing Then bFlagRevisedSew = True

                If Not bFlagRevisedSew And Not DTBeforeRevisedSew Is Nothing And DTBeforeRevisedSew.Rows.Count > 0 And Not DTAfterRevisedSew Is Nothing And DTAfterRevisedSew.Rows.Count > 0 Then
                    '...validate FTOrderNo, FTSubOrderNo, FNSewSeq ==> FTSewDescription|FTSewNote
                    Dim tFTOrderNo As String, tFTSubOrderNo As String
                    Dim nFNSewSeq As Integer
                    Dim tFTSewDescription As String, tFTSewNote As String

                    For nLoopChkRevised As Integer = 0 To DTAfterRevisedSew.Rows.Count - 1
                        tFTOrderNo = "" : tFTSubOrderNo = ""
                        nFNSewSeq = 0
                        tFTSewDescription = "" : tFTSewNote = ""

                        tFTOrderNo = DTAfterRevisedSew.Rows(nLoopChkRevised)("FTOrderNo").ToString
                        tFTSubOrderNo = DTAfterRevisedSew.Rows(nLoopChkRevised)("FTSubOrderNo").ToString

                        nFNSewSeq = Val(DTAfterRevisedSew.Rows(nLoopChkRevised)("FNSewSeq"))

                        If Not DBNull.Value.Equals(DTAfterRevisedSew.Rows(nLoopChkRevised)("FTSewDescription")) Then
                            tFTSewDescription = DTAfterRevisedSew.Rows(nLoopChkRevised)("FTSewDescription").ToString
                        Else
                            tFTSewDescription = ""
                        End If

                        If Not DBNull.Value.Equals(DTAfterRevisedSew.Rows(nLoopChkRevised)("FTSewNote")) Then
                            tFTSewNote = DTAfterRevisedSew.Rows(nLoopChkRevised)("FTSewNote").ToString
                        Else
                            tFTSewNote = ""
                        End If

                        '...lookup in DTBeforeRevisedPackRatioDT
                        For Each oDataRow As System.Data.DataRow In DTBeforeRevisedSew.Select("FTOrderNo = '" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "' AND FTSubOrderNo = '" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "' AND FNSewSeq = " & nFNSewSeq)
                            '...validate FTSewDescription, FTSewNote
                            Dim tFTSewDescriptionBF As String, tFTSewNoteBF As String

                            tFTSewDescriptionBF = "" : tFTSewNoteBF = ""

                            If Not DBNull.Value.Equals(oDataRow.Item("FTSewDescription")) Then
                                tFTSewDescriptionBF = oDataRow.Item("FTSewDescription").ToString
                            Else
                                tFTSewDescriptionBF = ""
                            End If

                            If Not tFTSewDescription.Equals(tFTSewDescriptionBF) Then
                                bFlagRevisedSew = True
                                Exit For
                            End If

                            If Not DBNull.Value.Equals(oDataRow.Item("FTSewNote")) Then
                                tFTSewNoteBF = oDataRow.Item("FTSewNote").ToString
                            Else
                                tFTSewNoteBF = ""
                            End If

                            If Not tFTSewNote.Equals(tFTSewNoteBF) Then
                                bFlagRevisedSew = True
                                Exit For
                            End If

                        Next

                        If bFlagRevisedSew = True Then Exit For

                    Next nLoopChkRevised

                    If (Not bFlagRevisedSew) AndAlso DTBeforeRevisedSew.Rows.Count <> DTAfterRevisedPackRatioDT.Rows.Count Then
                        bFlagRevisedSew = True
                    End If

                End If

            End If

            If bFlagRevisedSew = True Then
                '...update revised factory sub order no. sewing sequence information
                Dim tSQLRevised As String
                tSQLRevised = ""
                tSQLRevised = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                tSQLRevised &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                tSQLRevised &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                tSQLRevised &= Environment.NewLine & "SET @FTRevisedInfoBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "';"
                tSQLRevised &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                tSQLRevised &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                tSQLRevised &= Environment.NewLine & "SELECT @FDRevisedInfoDate = CONVERT(VARCHAR(10), GETDATE(), 111), @FTRevisedInfoTime = CONVERT(VARCHAR(8), GETDATE(), 114)"
                tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                tSQLRevised &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                tSQLRevised &= Environment.NewLine & "UPDATE A"
                tSQLRevised &= Environment.NewLine & "SET A.FTStateApprovedSewing = N'0'"
                tSQLRevised &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                tSQLRevised &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                tSQLRevised &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                If HI.Conn.SQLConn.ExecuteNonQuery(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then

                End If

            End If

            DTBeforeRevisedSew = Nothing
            DTAfterRevisedSew = Nothing
            '===================================================================================================================================================================

        Catch ex As Exception
            '...
        End Try
    End Sub

    Private Sub PostSaveSubOrderNoComponent(Optional ByVal paramTable As String = "", Optional ByVal paramRefDocKey As String = "")
        Try
            '...revised factory sub order no. component infomation
            Dim bFlagRevisedComponent As Boolean = False

            If (Not DTBeforeRevisedComponent Is Nothing) Or (Not DTAfterRevisedComponent Is Nothing) Then
                If Not bFlagRevisedComponent And DTBeforeRevisedComponent Is Nothing And (Not DTAfterRevisedComponent Is Nothing And DTAfterRevisedComponent.Rows.Count > 0) Then bFlagRevisedComponent = True
                If Not bFlagRevisedComponent And (Not DTBeforeRevisedComponent Is Nothing And DTBeforeRevisedComponent.Rows.Count > 0) And DTAfterRevisedComponent Is Nothing Then bFlagRevisedComponent = True

                If Not bFlagRevisedComponent And Not DTBeforeRevisedComponent Is Nothing And DTBeforeRevisedComponent.Rows.Count > 0 And Not DTAfterRevisedComponent Is Nothing And DTAfterRevisedComponent.Rows.Count > 0 Then
                    '...validate FTOrderNo, FTSubOrderNo, FNHSysMerMatId, FNSeq, FNPart ==> FTComponent|FTRemark|FNConSmp
                    Dim tFTOrderNo As String, tFTSubOrderNo As String
                    Dim nFNSeq As Double
                    Dim nFNPart As Integer, nFNHSysMerMatId As Integer
                    Dim tFTComponent As String, tFTRemark As String, nFNConSmp As Double

                    For nLoopChkRevised As Integer = 0 To DTAfterRevisedSew.Rows.Count - 1
                        tFTOrderNo = "" : tFTSubOrderNo = ""
                        nFNSeq = 0 : nFNPart = 0 : nFNHSysMerMatId = 0
                        tFTComponent = "" : tFTRemark = ""
                        nFNConSmp = 0

                        tFTOrderNo = DTAfterRevisedSew.Rows(nLoopChkRevised)("FTOrderNo").ToString
                        tFTSubOrderNo = DTAfterRevisedSew.Rows(nLoopChkRevised)("FTSubOrderNo").ToString

                        nFNHSysMerMatId = Val(DTAfterRevisedComponent.Rows(nLoopChkRevised)("FNHSysMerMatId"))

                        nFNSeq = Val(DTAfterRevisedComponent.Rows(nLoopChkRevised)("FNSeq"))

                        nFNPart = Val(DTAfterRevisedComponent.Rows(nLoopChkRevised)("FNPart"))

                        If Not DBNull.Value.Equals(DTAfterRevisedComponent.Rows(nLoopChkRevised)("FTComponent")) Then
                            tFTComponent = DTAfterRevisedComponent.Rows(nLoopChkRevised)("FTComponent").ToString
                        Else
                            tFTComponent = ""
                        End If

                        If Not DBNull.Value.Equals(DTAfterRevisedComponent.Rows(nLoopChkRevised)("FTRemark")) Then
                            tFTRemark = DTAfterRevisedComponent.Rows(nLoopChkRevised)("FTRemark").ToString
                        Else
                            tFTRemark = ""
                        End If

                        If Not DBNull.Value.Equals(DTAfterRevisedComponent.Rows(nLoopChkRevised)("FNConSmp")) Then
                            nFNConSmp = Val(DTAfterRevisedComponent.Rows(nLoopChkRevised)("FNConSmp"))
                        Else
                            nFNConSmp = 0
                        End If

                        '...lookup in DTBeforeRevisedComponent
                        For Each oDataRow As System.Data.DataRow In DTBeforeRevisedComponent.Select("FTOrderNo = '" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "' AND FTSubOrderNo = '" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "' AND FNHSysMerMatId = " & nFNHSysMerMatId & " AND FNSeq = " & nFNSeq & " AND FNPart = " & nFNPart)
                            '...validate Dim tFTComponent As String, tFTRemark As String, nFNConSmp As Double
                            Dim tFTComponentBF As String, tFTRemarkBF As String
                            Dim nFNConSmpBF As Double

                            If Not DBNull.Value.Equals(oDataRow.Item("FTComponent")) Then
                                tFTComponentBF = oDataRow.Item("FTComponent").ToString
                            Else
                                tFTComponentBF = ""
                            End If

                            If Not tFTComponent.Equals(tFTComponentBF) Then
                                bFlagRevisedComponent = True
                                Exit For
                            End If

                            If Not DBNull.Value.Equals(oDataRow.Item("FTRemark")) Then
                                tFTRemarkBF = oDataRow.Item("FTRemark").ToString
                            Else
                                tFTRemarkBF = ""
                            End If

                            If Not tFTRemark.Equals(tFTRemarkBF) Then
                                bFlagRevisedComponent = True
                                Exit For
                            End If

                            If Not DBNull.Value.Equals(oDataRow.Item("FNConSmp")) Then
                                nFNConSmpBF = Val(oDataRow.Item("FNConSmp"))
                            Else
                                nFNConSmpBF = 0
                            End If

                            If Not nFNConSmp.Equals(nFNConSmpBF) Then
                                bFlagRevisedComponent = True
                                Exit For
                            End If

                        Next

                        If bFlagRevisedComponent = True Then Exit For

                    Next nLoopChkRevised

                    If (Not bFlagRevisedComponent) AndAlso DTBeforeRevisedComponent.Rows.Count <> DTAfterRevisedComponent.Rows.Count Then
                        bFlagRevisedComponent = True
                    End If

                End If

            End If

            If bFlagRevisedComponent = True Then
                '...update revised factory sub order no. component information
                Dim tSQLRevised As String
                tSQLRevised = ""
                tSQLRevised = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                tSQLRevised &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                tSQLRevised &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                tSQLRevised &= Environment.NewLine & "SET @FTRevisedInfoBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "';"
                tSQLRevised &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                tSQLRevised &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                tSQLRevised &= Environment.NewLine & "SELECT @FDRevisedInfoDate = CONVERT(VARCHAR(10), GETDATE(), 111), @FTRevisedInfoTime = CONVERT(VARCHAR(8), GETDATE(), 114)"
                tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                tSQLRevised &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                tSQLRevised &= Environment.NewLine & "UPDATE A"
                tSQLRevised &= Environment.NewLine & "SET A.FTStateApprovedComponent = N'0'"
                tSQLRevised &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                tSQLRevised &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                tSQLRevised &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                If HI.Conn.SQLConn.ExecuteNonQuery(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then

                End If

            End If

            DTBeforeRevisedComponent = Nothing
            DTAfterRevisedComponent = Nothing

        Catch ex As Exception

        End Try
    End Sub

    Private Sub PostSaveSubOrderNoPack(ByVal ptTableName As String, ByVal ptRefDocKey As String)
        Try
            '...record revise history when user adjust factory sub order no. packing process
            '...Audit log
            'HI.Auditor.CreateLog.CreateLogdata(oDBdtSubOrderNoPackBF, oDBdtSubOrderNoPackAF, Me.Name, ptTableName, ptRefDocKey)
            oDBdtSubOrderNoPackBF = Nothing
            oDBdtSubOrderNoPackAF = Nothing

            '...compare after revised packing sequence process 
            '===================================================================================================================================================================
            'SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNPackSeq, A.FTPackDescription, A.FTPackNote
            'FROM  [HITECH_MERCHAN]..TMERTOrderSub_Pack AS A (NOLOCK)
            'WHERE A.FTOrderNo = N'NI1402892' AND A.FTSubOrderNo = N'NI1402892-A';

            Dim bFlagRevisedPack As Boolean = False
            If (Not DTBeforeRevisedPack Is Nothing) Or (Not DTAfterRevisedPack Is Nothing) Then
                If Not bFlagRevisedPack And DTBeforeRevisedPack Is Nothing And (Not DTAfterRevisedPack Is Nothing And DTAfterRevisedPack.Rows.Count > 0) Then bFlagRevisedPack = True
                If Not bFlagRevisedPack And (Not DTBeforeRevisedPack Is Nothing And DTBeforeRevisedPack.Rows.Count > 0) And DTAfterRevisedPack Is Nothing Then bFlagRevisedPack = True

                If Not bFlagRevisedPack And Not DTBeforeRevisedPack Is Nothing And DTBeforeRevisedPack.Rows.Count > 0 And Not DTAfterRevisedPack Is Nothing And DTAfterRevisedPack.Rows.Count > 0 Then
                    '...validate FTOrderNo, FTSubOrderNo, FNPackSeq ==> FTPackDescription|FTPackNote
                    Dim tFTOrderNo As String, tFTSubOrderNo As String
                    Dim nFNPackSeq As Integer
                    Dim tFTPackDescription As String, tFTPackNote As String

                    For nLoopChkRevised As Integer = 0 To DTAfterRevisedPack.Rows.Count - 1
                        tFTOrderNo = "" : tFTSubOrderNo = ""
                        nFNPackSeq = 0
                        tFTPackDescription = "" : tFTPackNote = ""

                        tFTOrderNo = DTAfterRevisedPack.Rows(nLoopChkRevised)("FTOrderNo").ToString
                        tFTSubOrderNo = DTAfterRevisedPack.Rows(nLoopChkRevised)("FTSubOrderNo").ToString

                        nFNPackSeq = Val(DTAfterRevisedPack.Rows(nLoopChkRevised)("FNPackSeq"))

                        If Not DBNull.Value.Equals(DTAfterRevisedPack.Rows(nLoopChkRevised)("FTPackDescription")) Then
                            tFTPackDescription = DTAfterRevisedPack.Rows(nLoopChkRevised)("FTPackDescription").ToString
                        Else
                            tFTPackDescription = ""
                        End If

                        If Not DBNull.Value.Equals(DTAfterRevisedPack.Rows(nLoopChkRevised)("FTPackNote")) Then
                            tFTPackNote = DTAfterRevisedPack.Rows(nLoopChkRevised)("FTPackNote").ToString
                        Else
                            tFTPackNote = ""
                        End If

                        '...lookup in DTBeforeRevisedPack
                        For Each oDataRow As System.Data.DataRow In DTBeforeRevisedPack.Select("FTOrderNo = '" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "' AND FTSubOrderNo = '" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "' AND FNPackSeq = " & nFNPackSeq)
                            '...validate FTPackDescription, FTPackNote
                            Dim tFTPackDescriptionBF As String, tFTPackNoteBF As String

                            tFTPackDescriptionBF = "" : tFTPackNoteBF = ""

                            If Not DBNull.Value.Equals(oDataRow.Item("FTPackDescription")) Then
                                tFTPackDescriptionBF = oDataRow.Item("FTPackDescription").ToString
                            Else
                                tFTPackDescriptionBF = ""
                            End If

                            If Not tFTPackDescription.Equals(tFTPackDescriptionBF) Then
                                bFlagRevisedPack = True
                                Exit For
                            End If

                            If Not DBNull.Value.Equals(oDataRow.Item("FTPackNote")) Then
                                tFTPackNoteBF = oDataRow.Item("FTPackNote").ToString
                            Else
                                tFTPackNoteBF = ""
                            End If

                            If Not tFTPackNote.Equals(tFTPackNoteBF) Then
                                bFlagRevisedPack = True
                                Exit For
                            End If

                        Next

                        If bFlagRevisedPack = True Then Exit For

                    Next nLoopChkRevised

                    If (Not bFlagRevisedPack) AndAlso DTBeforeRevisedPack.Rows.Count <> DTAfterRevisedPack.Rows.Count Then
                        bFlagRevisedPack = True
                    End If

                End If

            End If

            If bFlagRevisedPack = True Then
                '...update revised factory sub order no. sewing sequence information
                Dim tSQLRevised As String
                tSQLRevised = ""
                tSQLRevised = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                tSQLRevised &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                tSQLRevised &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                tSQLRevised &= Environment.NewLine & "SET @FTRevisedInfoBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "';"
                tSQLRevised &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                tSQLRevised &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                tSQLRevised &= Environment.NewLine & "SELECT @FDRevisedInfoDate = CONVERT(VARCHAR(10), GETDATE(), 111), @FTRevisedInfoTime = CONVERT(VARCHAR(8), GETDATE(), 114)"
                tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                tSQLRevised &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                tSQLRevised &= Environment.NewLine & "UPDATE A"
                tSQLRevised &= Environment.NewLine & "SET A.FTStateApprovedPacking = N'0'"
                tSQLRevised &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                tSQLRevised &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                tSQLRevised &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                If HI.Conn.SQLConn.ExecuteNonQuery(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then

                End If

            End If

            DTBeforeRevisedPack = Nothing
            DTAfterRevisedPack = Nothing
            '===================================================================================================================================================================

        Catch ex As Exception
            '...
        End Try
    End Sub

    Private Sub PostSaveSubOrderNoPackRatio(Optional ByVal paramTable As String = "", Optional ByVal paramRefDockey As String = "")
        Try
            '...record revised history when user adjust factory sub order no. pack ratio
            Dim tSQL As String
            tSQL = ""
            tSQL = "SELECT TOP 1 A.FTStateApprovedPackRatio"
            tSQL &= Environment.NewLine & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK)"
            tSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
            tSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

            Dim tFTStateApprovedPackRatio As String

            tFTStateApprovedPackRatio = HI.Conn.SQLConn.GetField(tSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")

            If tFTStateApprovedPackRatio = "0" Then
                DTBeforeRevisedPackRatioHD = Nothing
                DTAfterRevisedPackRatioHD = Nothing
                DTBeforeRevisedPackRatioDT = Nothing
                DTAfterRevisedPackRatioDT = Nothing

                Exit Sub

            End If

            '...compare after revised pack ratio {Header Pack carton sub type}
            '===========================================================================================================================================
            Dim bFlagRevisedPackRatioHD As Boolean = False

            If Not DBNull.Value.Equals(DTBeforeRevisedPackRatioHD) AndAlso DTBeforeRevisedPackRatioHD.Rows.Count > 0 Then
                'Dim bFlagRevisedPackRatioHD As Boolean = False

                If Not DTAfterRevisedPackRatioHD Is Nothing AndAlso DTAfterRevisedPackRatioHD.Rows.Count > 0 Then

                    For nLoopRevisedPackRatio As Integer = 0 To DTAfterRevisedPackRatioHD.Rows.Count - 1

                        For nLoopColPackRatio As Integer = 0 To DTAfterRevisedPackRatioHD.Columns.Count - 1
                            If Not DTAfterRevisedPackRatioHD.Rows(nLoopRevisedPackRatio)(nLoopColPackRatio).Equals(DTBeforeRevisedPackRatioHD.Rows(nLoopRevisedPackRatio)(nLoopColPackRatio)) Then
                                bFlagRevisedPackRatioHD = True
                                Exit For
                            End If

                        Next nLoopColPackRatio

                        If bFlagRevisedPackRatioHD = True Then Exit For

                    Next nLoopRevisedPackRatio

                    If bFlagRevisedPackRatioHD = True Then
                        '...update state revised pack ratio
                        Dim tSQLRevised As String
                        tSQLRevised = ""
                        tSQLRevised = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                        tSQLRevised &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                        tSQLRevised &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                        tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                        tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                        tSQLRevised &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                        tSQLRevised &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                        tSQLRevised &= Environment.NewLine & "SELECT @FDRevisedInfoDate = CONVERT(VARCHAR(10), GETDATE(), 111), @FTRevisedInfoTime = CONVERT(VARCHAR(8), GETDATE(), 114);"
                        tSQLRevised &= Environment.NewLine & "SET @FTRevisedInfoBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "';"
                        tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                        tSQLRevised &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                        tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                        tSQLRevised &= Environment.NewLine & "UPDATE A"
                        tSQLRevised &= Environment.NewLine & "SET A.FTStateApprovedPackRatio = N'0'"
                        tSQLRevised &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                        tSQLRevised &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                        tSQLRevised &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                        If HI.Conn.SQLConn.ExecuteNonQuery(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then

                        End If

                    End If

                End If

            End If

            DTBeforeRevisedPackRatioHD = Nothing
            DTAfterRevisedPackRatioHD = Nothing

            If Not bFlagRevisedPackRatioHD Then '...may be pack ratio header not revised...but pack ratio detail change

                Dim bFlagRevisedPackCartonDT As Boolean = False

                If (Not DTBeforeRevisedPackRatioDT Is Nothing) Or (Not DTAfterRevisedPackRatioDT Is Nothing) Then
                    If Not bFlagRevisedPackCartonDT And DTBeforeRevisedPackRatioDT Is Nothing And (Not DTAfterRevisedPackRatioDT Is Nothing And DTAfterRevisedPackRatioDT.Rows.Count > 0) Then bFlagRevisedPackCartonDT = True
                    If Not bFlagRevisedPackCartonDT And (Not DTBeforeRevisedPackRatioDT Is Nothing And DTBeforeRevisedPackRatioDT.Rows.Count > 0) And DTAfterRevisedPackRatioDT Is Nothing Then bFlagRevisedPackCartonDT = True

                    If Not bFlagRevisedPackCartonDT And Not DTBeforeRevisedPackRatioDT Is Nothing And DTBeforeRevisedPackRatioDT.Rows.Count > 0 And Not DTAfterRevisedPackRatioDT Is Nothing And DTAfterRevisedPackRatioDT.Rows.Count > 0 Then
                        '...validate quantity
                        Dim tFTOrderNo As String, tFTSubOrderNo As String, tFTColorway As String, tFTSizeBreakdown As String
                        Dim nFNQuantityAF As Integer

                        For nLoopChkRevised As Integer = 0 To DTAfterRevisedPackRatioDT.Rows.Count - 1
                            tFTOrderNo = "" : tFTSubOrderNo = "" : tFTColorway = "" : tFTSizeBreakdown = ""
                            nFNQuantityAF = 0
                            tFTOrderNo = DTAfterRevisedPackRatioDT.Rows(nLoopChkRevised)("FTOrderNo").ToString
                            tFTSubOrderNo = DTAfterRevisedPackRatioDT.Rows(nLoopChkRevised)("FTSubOrderNo").ToString
                            tFTColorway = DTAfterRevisedPackRatioDT.Rows(nLoopChkRevised)("FTColorway").ToString
                            tFTSizeBreakdown = DTAfterRevisedPackRatioDT.Rows(nLoopChkRevised)("FTSizeBreakdown").ToString
                            If Not DBNull.Value.Equals(DTAfterRevisedPackRatioDT.Rows(nLoopChkRevised)("FNQuantity")) Then
                                nFNQuantityAF = Val(DTAfterRevisedPackRatioDT.Rows(nLoopChkRevised)("FNQuantity"))
                            Else
                                nFNQuantityAF = 0
                            End If

                            '...lookup in DTBeforeRevisedPackRatioDT
                            For Each oDataRow As System.Data.DataRow In DTBeforeRevisedPackRatioDT.Select("FTOrderNo = '" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "' AND FTSubOrderNo = '" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "' AND FTColorway = '" & HI.UL.ULF.rpQuoted(tFTColorway) & "' AND FTSizeBreakdown = '" & HI.UL.ULF.rpQuoted(tFTSizeBreakdown) & "'")
                                '...validate quantity
                                Dim nFNQuantityBF As Integer
                                If Not DBNull.Value.Equals(oDataRow.Item("FNQuantity")) Then
                                    nFNQuantityBF = Val(oDataRow.Item("FNQuantity"))
                                Else
                                    nFNQuantityBF = 0
                                End If

                                If Not nFNQuantityAF.Equals(nFNQuantityBF) Then
                                    bFlagRevisedPackCartonDT = True
                                    Exit For
                                End If

                            Next

                            If bFlagRevisedPackCartonDT = True Then Exit For

                        Next nLoopChkRevised

                        If (Not bFlagRevisedPackCartonDT) AndAlso DTBeforeRevisedPackRatioDT.Rows.Count <> DTAfterRevisedPackRatioDT.Rows.Count Then
                            bFlagRevisedPackCartonDT = True
                        End If

                    End If

                End If

                If bFlagRevisedPackCartonDT = True Then
                    '...update revised pack carton information
                    Dim tSQLRevisedDT As String
                    tSQLRevisedDT = ""
                    tSQLRevisedDT = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                    tSQLRevisedDT &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                    tSQLRevisedDT &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                    tSQLRevisedDT &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                    tSQLRevisedDT &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                    tSQLRevisedDT &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                    tSQLRevisedDT &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                    tSQLRevisedDT &= Environment.NewLine & "SELECT @FDRevisedInfoDate = CONVERT(VARCHAR(10), GETDATE(), 111), @FTRevisedInfoTime = CONVERT(VARCHAR(8), GETDATE(), 114);"
                    tSQLRevisedDT &= Environment.NewLine & "SET @FTRevisedInfoBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "';"
                    tSQLRevisedDT &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                    tSQLRevisedDT &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                    tSQLRevisedDT &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                    tSQLRevisedDT &= Environment.NewLine & "UPDATE A"
                    tSQLRevisedDT &= Environment.NewLine & "SET A.FTStateApprovedPackRatio = N'0'"
                    tSQLRevisedDT &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                    tSQLRevisedDT &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                    tSQLRevisedDT &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                    If HI.Conn.SQLConn.ExecuteNonQuery(tSQLRevisedDT, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then

                    End If

                End If

            End If

            DTBeforeRevisedPackRatioDT = Nothing
            DTAfterRevisedPackRatioDT = Nothing
            '===========================================================================================================================================

        Catch ex As Exception
            '...Nothing 

        End Try

    End Sub

    Private Sub PostSaveSubOrderNoSizeSpec(ByVal ptTableName As String, ByVal ptRefDocKey As String)
        Try
            '...record revise history when user adjust factory order no. size spec infomation
            '...Audit log
            'HI.Auditor.CreateLog.CreateLogdata(oDBdtSubOrderNoSizeSpecBF, oDBdtSubOrderNoSizeSpecAF, Me.Name, ptTableName, ptRefDocKey)
            'oDBdtSubOrderNoSizeSpecBF = Nothing
            'oDBdtSubOrderNoSizeSpecAF = Nothing
            ' HI.Auditor.CreateLog.CreateLogdata(oDBdtPostEditSizeSpec, oDBdtAfterEditSizeSpec, Me.Name, ptTableName, ptRefDocKey)
            oDBdtPostEditSizeSpec = Nothing
            oDBdtAfterEditSizeSpec = Nothing
        Catch ex As Exception

        End Try
    End Sub

    Private Sub PostSaveSubOrderNoRevisedSizeSpec(Optional ByVal paramTable As String = "", Optional ByVal paramRefDockey As String = "")
        '...compare revised factory sub order no. size spec information
        '============================================================================================================================================================================
        Dim tSQLRevised As String
        tSQLRevised = ""
        tSQLRevised = "SELECT TOP 1 A.FTStateApprovedSizeSpec FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

        Dim tFTStateApprovedSizeSpec As String

        tFTStateApprovedSizeSpec = HI.Conn.SQLConn.GetField(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")

        If tFTStateApprovedSizeSpec = "0" Then
            DTBeforeRevisedSizeSpec = Nothing
            DTAfterRevisedSizeSpec = Nothing
            Exit Sub
        End If

        Dim bFlagRevised As Boolean = False

        If (Not DTBeforeRevisedSizeSpec Is Nothing) Or (Not DTAfterRevisedSizeSpec Is Nothing) Then
            If Not bFlagRevised And DTBeforeRevisedSizeSpec Is Nothing And (Not DTAfterRevisedSizeSpec Is Nothing And DTAfterRevisedSizeSpec.Rows.Count > 0) Then bFlagRevised = True
            If Not bFlagRevised And (Not DTBeforeRevisedSizeSpec Is Nothing And DTBeforeRevisedSizeSpec.Rows.Count > 0) And DTAfterRevisedSizeSpec Is Nothing Then bFlagRevised = True

            If Not bFlagRevised And Not DTBeforeRevisedSizeSpec Is Nothing And DTBeforeRevisedSizeSpec.Rows.Count > 0 And Not DTAfterRevisedSizeSpec Is Nothing And DTAfterRevisedSizeSpec.Rows.Count > 0 Then
                '...validate FTSizeSpecDesc/FTSizeSpecExtension/FTTolerant
                Dim tFTOrderNo As String, tFTSubOrderNo As String
                Dim nFNSeq As Integer, nFNHSysMatSizeId As Integer
                Dim tFTSizeSpecDesc As String, tFTSizeSpecExtension As String, tFTTolerant As String

                'A.FTOrderNo, A.FTSubOrderNo, A.FNSeq, A.FNHSysMatSizeId, A.FTSizeSpecDesc, A.FTSizeSpecExtension, A.FTTolerant
                For nLoopChkRevised As Integer = 0 To DTAfterRevisedSizeSpec.Rows.Count - 1
                    tFTOrderNo = "" : tFTSubOrderNo = ""
                    nFNSeq = 0 : nFNHSysMatSizeId = -1
                    tFTSizeSpecDesc = "" : tFTSizeSpecExtension = "" : tFTSizeSpecExtension = ""

                    tFTOrderNo = DTAfterRevisedSizeSpec.Rows(nLoopChkRevised)("FTOrderNo").ToString
                    tFTSubOrderNo = DTAfterRevisedSizeSpec.Rows(nLoopChkRevised)("FTSubOrderNo").ToString
                    nFNSeq = Val(DTAfterRevisedSizeSpec.Rows(nLoopChkRevised)("FNSeq"))
                    nFNHSysMatSizeId = Val(DTAfterRevisedSizeSpec.Rows(nLoopChkRevised)("FNHSysMatSizeId"))

                    If Not DBNull.Value.Equals(DTAfterRevisedSizeSpec.Rows(nLoopChkRevised)("FTSizeSpecDesc")) Then
                        tFTSizeSpecDesc = DTAfterRevisedSizeSpec.Rows(nLoopChkRevised)("FTSizeSpecDesc").ToString
                    Else
                        tFTSizeSpecDesc = ""
                    End If

                    If Not DBNull.Value.Equals(DTAfterRevisedSizeSpec.Rows(nLoopChkRevised)("FTSizeSpecExtension")) Then
                        tFTSizeSpecExtension = DTAfterRevisedSizeSpec.Rows(nLoopChkRevised)("FTSizeSpecExtension").ToString
                    Else
                        tFTSizeSpecExtension = ""
                    End If

                    If Not DBNull.Value.Equals(DTAfterRevisedSizeSpec.Rows(nLoopChkRevised)("FTTolerant")) Then
                        tFTTolerant = DTAfterRevisedSizeSpec.Rows(nLoopChkRevised)("FTTolerant").ToString
                    Else
                        tFTTolerant = ""
                    End If

                    '...lookup in DTBeforeRevisedPackRatioDT
                    For Each oDataRow As System.Data.DataRow In DTBeforeRevisedSizeSpec.Select("FTOrderNo = '" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "' AND FTSubOrderNo = '" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "' AND FNSeq = " & nFNSeq & " AND FNHSysMatSizeId = " & nFNHSysMatSizeId)
                        '...validate FTSizeSpecDesc/FTSizeSpecExtension/FTTolerant
                        Dim tFTSizeSpecDescBF As String
                        Dim tFTSizeSpecExtensionBF As String
                        Dim tFTTolerantBF As String

                        If Not DBNull.Value.Equals(oDataRow.Item("FTSizeSpecDesc")) Then
                            tFTSizeSpecDescBF = oDataRow.Item("FTSizeSpecDesc").ToString
                        Else
                            tFTSizeSpecDescBF = ""
                        End If

                        If Not DBNull.Value.Equals(oDataRow.Item("FTSizeSpecExtension")) Then
                            tFTSizeSpecExtensionBF = oDataRow.Item("FTSizeSpecExtension").ToString
                        Else
                            tFTSizeSpecExtensionBF = ""
                        End If

                        If Not DBNull.Value.Equals(oDataRow.Item("FTTolerant")) Then
                            tFTTolerantBF = oDataRow.Item("FTTolerant").ToString
                        Else
                            tFTTolerantBF = ""
                        End If

                        If Not bFlagRevised AndAlso (Not tFTSizeSpecDesc.Equals(tFTSizeSpecDescBF)) Then
                            bFlagRevised = True
                            Exit For
                        End If

                        If Not bFlagRevised AndAlso (Not tFTSizeSpecExtension.Equals(tFTSizeSpecExtensionBF)) Then
                            bFlagRevised = True
                            Exit For
                        End If

                        If Not bFlagRevised AndAlso (Not tFTTolerant.Equals(tFTTolerantBF)) Then
                            bFlagRevised = True
                            Exit For
                        End If

                    Next

                    If bFlagRevised = True Then Exit For

                Next nLoopChkRevised

                If (Not bFlagRevised) AndAlso DTBeforeRevisedSizeSpec.Rows.Count <> DTAfterRevisedSizeSpec.Rows.Count Then
                    bFlagRevised = True
                End If

            End If

        End If

        If bFlagRevised = True Then '...revised factory order no. size spec information
            '...update revised size spec information
            Dim tSQLRevisedDT As String
            tSQLRevisedDT = ""
            tSQLRevisedDT = "DECLARE @FTOrderNo AS NVARCHAR(30);"
            tSQLRevisedDT &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
            tSQLRevisedDT &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
            tSQLRevisedDT &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
            tSQLRevisedDT &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
            tSQLRevisedDT &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
            tSQLRevisedDT &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
            tSQLRevisedDT &= Environment.NewLine & "SELECT TOP 1 @FDRevisedInfoDate = A.FDUpdDate, @FTRevisedInfoTime = A.FTUpdTime, @FTRevisedInfoBy = A.FTUpdUser  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A (NOLOCK) WHERE A.FTOrderNo = @FTOrderNo AND A.FTSubOrderNo = @FTSubOrderNo;"
            tSQLRevisedDT &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
            tSQLRevisedDT &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
            tSQLRevisedDT &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
            tSQLRevisedDT &= Environment.NewLine & "UPDATE A"
            tSQLRevisedDT &= Environment.NewLine & "SET A.FTStateApprovedSizeSpec = N'0'"
            tSQLRevisedDT &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
            tSQLRevisedDT &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
            tSQLRevisedDT &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

            If HI.Conn.SQLConn.ExecuteNonQuery(tSQLRevisedDT, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then

            End If
        End If

        DTBeforeRevisedSizeSpec = Nothing
        DTAfterRevisedSizeSpec = Nothing
        '============================================================================================================================================================================
    End Sub

    Private Function CheckApproveOrder() As Boolean

        Dim _Qry As String = ""
        Dim OrderState As String = ""

        _Qry = "   SELECT TOP 1 ISNULL(OA.FTStateOrderApp,'0') AS FTStateOrderApp"
        _Qry &= vbCrLf & "  FROM      [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder AS OA WITH(NOLOCK) "
        _Qry &= vbCrLf & "  WHERE OA.FTOrderNo= N'" & HI.UL.ULF.rpQuoted(FTOrderNo.Text) & "'"

        OrderState = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "")
        Me.FTStateOrderApp.Checked = (OrderState = "1")


        If FTStateOrderApp.Checked Then
            HI.MG.ShowMsg.mInfo("มีการอนุมัติผลิตเรียบร้อยแล้ว ไม่สามารถทำรายการใดๆได้อีก !!!", 1099960678, Me.Text, , MessageBoxIcon.Warning)
            Return True
        Else
            Return False
        End If
    End Function

    Private Sub Proc_Save(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmSave.Click

        If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
            HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
            Exit Sub
        End If

        Call CheckStateOrder()

        If CheckBookingRefer() Then
            Exit Sub
        End If

        If CheckOwner() = False Then
            Exit Sub
        End If

        If (CheckApproveOrder()) Then Exit Sub

        If (Me.FTStateMRP.Checked Or
            Me.FTStateReserve.Checked Or
            Me.FTStateSourcing.Checked Or
            Me.FTStatePurchase.Checked Or
            Me.FTStateReceive.Checked Or
            Me.FTStateAdjust.Checked Or
            Me.FTStateTransferIn.Checked Or
            Me.FTStateTransferOut.Checked Or
            Me.FTStateProduction.Checked Or Me.FTStateTransferWH.Checked) Then

            Dim sSQL As String
            Dim tmpMsgSpecial As String
            Dim tmpStateOrder As String

            Select Case True
                Case HI.ST.Lang.eLang.EN
                    tmpStateOrder = "State : "
                Case HI.ST.Lang.eLang.TH
                    tmpStateOrder = "สถานะ : "
                Case Else
                    tmpStateOrder = "State : "
            End Select

            tmpMsgSpecial = ""

            If Me.FTStateMRP.Checked = True Then tmpMsgSpecial = IIf(tmpMsgSpecial = "", tmpStateOrder, tmpMsgSpecial & tmpStateOrder) & Me.FTStateMRP.Text.ToString & Environment.NewLine
            If Me.FTStateReserve.Checked = True Then tmpMsgSpecial = IIf(tmpMsgSpecial = "", tmpStateOrder, tmpMsgSpecial & tmpStateOrder) & Me.FTStateReserve.Text.ToString & Environment.NewLine
            If Me.FTStateSourcing.Checked = True Then tmpMsgSpecial = IIf(tmpMsgSpecial = "", tmpStateOrder, tmpMsgSpecial & tmpStateOrder) & Me.FTStateSourcing.Text.ToString & Environment.NewLine
            If Me.FTStatePurchase.Checked = True Then tmpMsgSpecial = IIf(tmpMsgSpecial = "", tmpStateOrder, tmpMsgSpecial & tmpStateOrder) & Me.FTStatePurchase.Text.ToString & Environment.NewLine
            If Me.FTStateReceive.Checked = True Then tmpMsgSpecial = IIf(tmpMsgSpecial = "", tmpStateOrder, tmpMsgSpecial & tmpStateOrder) & Me.FTStateReceive.Text.ToString & Environment.NewLine
            If Me.FTStateAdjust.Checked = True Then tmpMsgSpecial = IIf(tmpMsgSpecial = "", tmpStateOrder, tmpMsgSpecial & tmpStateOrder) & Me.FTStateAdjust.Text.ToString & Environment.NewLine
            If Me.FTStateTransferIn.Checked = True Then tmpMsgSpecial = IIf(tmpMsgSpecial = "", tmpStateOrder, tmpMsgSpecial & tmpStateOrder) & Me.FTStateTransferIn.Text.ToString & Environment.NewLine
            If Me.FTStateTransferOut.Checked = True Then tmpMsgSpecial = IIf(tmpMsgSpecial = "", tmpStateOrder, tmpMsgSpecial & tmpStateOrder) & Me.FTStateTransferOut.Text.ToString & Environment.NewLine
            If Me.FTStateProduction.Checked = True Then tmpMsgSpecial = IIf(tmpMsgSpecial = "", tmpStateOrder, tmpMsgSpecial & tmpStateOrder) & Me.FTStateProduction.Text.ToString
            If Me.FTStateTransferWH.Checked = True Then tmpMsgSpecial = IIf(tmpMsgSpecial = "", tmpStateOrder, tmpMsgSpecial & tmpStateOrder) & Me.FTStateTransferOut.Text.ToString & Environment.NewLine

            'Select Case Me.otab.SelectedTabPageIndex
            '    Case eTabIndexs.FactoryOrderNo
            '    Case Else

            Dim numFNHSysStyleId_Edit As Integer = Val(Me.FNHSysStyleId.Properties.Tag.ToString())
            Dim _FNHSysStyleIdOrg As Integer = 0
            Dim _FTOrderNoRef As String = ""

            sSQL = "SELECT TOP 1 ISNULL(A.FTOrderNoRef,'') AS FTOrderNoRef FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
            _FTOrderNoRef = HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
            ' If numFNHSysStyleId_Edit > 0 Then
            sSQL = ""
            sSQL = "SELECT TOP 1 A.FNHSysStyleId FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
            _FNHSysStyleIdOrg = Val(HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0"))

            If _FNHSysStyleIdOrg > 0 Then

                If numFNHSysStyleId_Edit = _FNHSysStyleIdOrg Then
                    '...Nothing 
                Else
                    If _FTOrderNoRef <> "" Then
                        HI.MG.ShowMsg.mInfo("Order มาจาก Demand Pull ไม่สามารถทำการแก้ไขข้อมูล แบบผลิตภัณฑ์ ได้ !!!", 16666601785, Me.Text, Me.FTOrderNo.Text.ToString & Environment.NewLine & tmpMsgSpecial, MessageBoxIcon.Warning)
                        Me.FNHSysStyleId.Focus()
                        Exit Sub
                    Else
                        If Me.FTStateMRP.Checked = True Then
                            HI.MG.ShowMsg.mInfo("พบรายการ Transaction ต่างๆของ Order ดังต่อไปนี้ไม่สามารถทำการแก้ไขข้อมูล แบบผลิตภัณฑ์ ได้ !!!", 16042701785, Me.Text, Me.FTOrderNo.Text.ToString & Environment.NewLine & tmpMsgSpecial, MessageBoxIcon.Warning)
                            Me.FNHSysStyleId.Focus()
                            Exit Sub
                        End If
                    End If

                End If

            End If

            'End If

            'Dim numFNHSysBuyId_Edit As Integer = Val(Me.FNHSysBuyId.Properties.Tag)
            'If numFNHSysBuyId_Edit > 0 Then
            '    sSQL = ""
            '    sSQL = "SELECT TOP 1 A.FNHSysBuyId FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
            '    If numFNHSysBuyId_Edit = Val(HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")) Then
            '        '...Nothing
            '    Else
            '        HI.MG.ShowMsg.mInfo("พบรายการ Transaction ต่างๆของ Order ดังต่อไปนี้ไม่สามารถทำการแก้ไขข้อมูล การสั่งซื้อ ได้ !!!", 16042701786, Me.Text, Me.FTOrderNo.Text.ToString & Environment.NewLine & tmpMsgSpecial, MessageBoxIcon.Warning)
            '        Me.FNHSysBuyId.Focus()
            '        Exit Sub
            '    End If
            'End If
            'End Select

        End If

        Dim _StateChageCmp As Boolean = False
        Dim _StateChageFactoryCmp As Boolean = False

        If FNOrderCmp <> Integer.Parse(Val(FNHSysCmpId.Properties.Tag.ToString)) And FNOrderCmp > 0 Then
            _StateChageFactoryCmp = True
            If Me.FTStateTransferWH.Checked Then
                _StateChageCmp = True
            End If
        End If

        Dim _ConfirmToSave As Boolean = True

        If _StateChageCmp Then
            _ConfirmToSave = HI.MG.ShowMsg.mConfirmProcess("พบข้อมูลการโอนระหว่างคลังแล้ว กรุณาทำการแจ้งสต๊อก เรื่องการเปลี่ยนสถานที่ผลิต คุณต้องการทำการเปลี่ยนสถานที่ผลืต !!!", 1506297891)
        End If

        If _ConfirmToSave = False Then
            Exit Sub
        End If

        Select Case Me.otab.SelectedTabPageIndex
            Case eTabIndexs.FactoryOrderNo
                '...save main order
                'If CreateDocumentMI(Me.FTOrderNo.Text, FTSubOrderNo.Text) Then
                '    Exit Sub
                'End If

                If FNOrderType.SelectedIndex = 0 And FTOrderNoRef.Text.Trim <> "" Then

                    Dim sSQL As String
                    Dim numFNHSysStyleId_Edit As Integer = Val(Me.FNHSysStyleId.Properties.Tag)
                    If numFNHSysStyleId_Edit > 0 Then
                        sSQL = ""
                        sSQL = "SELECT TOP 1 A.FNHSysStyleId FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                        If numFNHSysStyleId_Edit = Val(HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")) Then
                            '...Nothing 
                        Else

                            sSQL = "SELECT TOP 1 A.FNHSysStyleIdPull FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"

                            If Val(HI.Conn.SQLConn.GetField(sSQL, Conn.DB.DataBaseName.DB_MASTER, "0")) > 0 Then
                                HI.MG.ShowMsg.mInfo("รายการใบสั่งผลิตมาจาก Demand Pull ไม่สามารถทำการแก้ไขข้อมูล แบบผลิตภัณฑ์ ได้ !!!", 16011001785, Me.Text, , MessageBoxIcon.Warning)
                                Me.FNHSysStyleId.Focus()
                                Exit Sub
                            End If

                        End If

                    End If

                End If


                If Me.W_PRCbVerifyBF_SaveDataMainOrder() = True Then
                    Dim _Spls As HI.TL.SplashScreen

                    _Spls = New HI.TL.SplashScreen("Save Data...Please Wait ")

                    DTBeforeRevised = Nothing
                    DTAfterRevised = Nothing

                    If Me.W_PRCbSaveMainOrder() = True Then
                        '' Write changed log
                        Call PostSave("[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrder]", Me.FTOrderNo.Text & "|" & Me.FNHSysStyleId.Text)

                        If _StateChageFactoryCmp Then

                            Dim _Qry As String = ""

                            _Qry = "UPDATE [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder"
                            _Qry &= vbCrLf & " SET FTStateSendDirectorApp='0'"
                            _Qry &= vbCrLf & " ,FTStateSendDirectorBy=''"
                            _Qry &= vbCrLf & " ,FTStateDirectorApp='0'"
                            _Qry &= vbCrLf & " ,FTStateDirectorAppBy=''"
                            _Qry &= vbCrLf & " ,FTStateDirectorReject='0'"
                            _Qry &= vbCrLf & " ,FTStateDirectorRejectBy=''"
                            _Qry &= vbCrLf & " WHERE FTOrderNo='" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "'"

                            HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)

                        End If

                        _Spls.Close()

                        HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, Me.Text)
                    Else
                        If Not System.Diagnostics.Debugger.IsAttached = True Then
                            _Spls.Close()
                        End If
                        HI.MG.ShowMsg.mProcessNotComplete(MG.ShowMsg.ProcessType.mSave, Me.Text)
                    End If

                    REM AddHandler FTOrderNo.Leave, AddressOf HI.TL.HandlerControl.DynamicButtonedit_LeaveOnly
                    REM AddHandler FTOrderNo.Leave, AddressOf HI.TL.HandlerControl.DynamicButtonedit_Leave

                    Call FTOrderNo_EditValueChanged(Nothing, Nothing)


                End If
            Case eTabIndexs.FactorySubOrderNo
                If CreateDocumentMI(Me.FTOrderNo.Text, FTSubOrderNo.Text) Then
                    Exit Sub
                End If

                If FNOrderType.SelectedIndex = 0 And FTOrderNoRef.Text.Trim <> "" Then

                    Dim sSQL As String
                    Dim numFNHSysStyleId_Edit As Integer = Val(Me.FNHSysStyleId.Properties.Tag)
                    If numFNHSysStyleId_Edit > 0 Then
                        sSQL = ""
                        sSQL = "SELECT TOP 1 A.FNHSysStyleId FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                        If numFNHSysStyleId_Edit = Val(HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")) Then
                            '...Nothing 
                        Else

                            sSQL = "SELECT TOP 1 A.FNHSysStyleIdPull FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"

                            If Val(HI.Conn.SQLConn.GetField(sSQL, Conn.DB.DataBaseName.DB_MASTER, "0")) > 0 Then
                                HI.MG.ShowMsg.mInfo("รายการใบสั่งผลิตมาจาก Demand Pull ไม่สามารถทำการแก้ไขข้อมูล แบบผลิตภัณฑ์ ได้ !!!", 16011001785, Me.Text, , MessageBoxIcon.Warning)
                                Me.FNHSysStyleId.Focus()
                                Exit Sub
                            End If

                        End If

                    End If

                End If

                If Not W_PRCbVerifyBF_SaveDataSubOrder() Then Exit Sub

                If Not W_PRCbVerifyBF_SaveDataMainOrder() Then Exit Sub

                Dim _Spls As HI.TL.SplashScreen

                _Spls = New HI.TL.SplashScreen("Save Data...Please Wait ")


                DTBeforeRevised = Nothing
                DTAfterRevised = Nothing

                If W_PRCbSaveMainOrder() = True Then
                    '' Write changed log
                    Call PostSave("[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrder]", Me.FTOrderNo.Text & "|" & Me.FNHSysStyleId.Text)

                    If _StateChageFactoryCmp Then
                        Dim _Qry As String = ""
                        _Qry = "UPDATE [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder"
                        _Qry &= vbCrLf & " SET FTStateSendDirectorApp='0'"
                        _Qry &= vbCrLf & " ,FTStateSendDirectorBy=''"
                        _Qry &= vbCrLf & " ,FTStateDirectorApp='0'"
                        _Qry &= vbCrLf & " ,FTStateDirectorAppBy=''"
                        _Qry &= vbCrLf & " ,FTStateDirectorReject='0'"
                        _Qry &= vbCrLf & " ,FTStateDirectorRejectBy=''"
                        _Qry &= vbCrLf & " WHERE FTOrderNo='" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "'"

                        HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)

                    End If

                    '...save data main order and sub order
                    _tFTSubOrderNo = ""

                    Dim tFTSubOrderNo_Tag As String = Me.FTSubOrderNo.Properties.Tag.ToString()
                    Dim tFTSubOrderNo_Text As String = Me.FTSubOrderNo.Text

                    '...Sub Order Breakdown detail by sub order no / Save Sub Order Header And Save Sub Order Detail Breakdown Info in one's time
                    '==============================================================================================================================
                    Dim tSql As String
                    Dim tFTColorway_Code As String
                    Dim tFTColorway_Text As String
                    Dim nFNColorway_Id As Integer
                    Dim nFNHSysMatColorId As Integer
                    Dim tFTMatColorCode As String
                    Dim tFTMatColorName As String
                    Dim nFNHSysMatSizeId As Integer
                    Dim tFTMatSizeCode As String
                    Dim tFTMatSizeName As String
                    Dim nFNQuantity_Tmp As Double
                    Dim nFNPrice_Tmp As Double
                    Dim nFNAmt_Tmp As Double
                    Dim nFNExtraQtySubOrder_Tmp As Double
                    Dim nFNQuantityExtra_Tmp As Double
                    Dim nFNGarmentQtyTest As Integer
                    Dim _SubCurID As String

                    tSql = "   Select  TOP 1 FNHSysCurId"
                    tSql &= Environment.NewLine & "  FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub AS X WITH(NOLOCK)"
                    tSql &= Environment.NewLine & " WHERE  (FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim()) & "')"

                    _SubCurID = HI.Conn.SQLConn.GetField(tSql, Conn.DB.DataBaseName.DB_MERCHAN, "")


                    nFNHSysMatColorId = Val(Me.FTColorway.Properties.Tag.ToString())
                    tFTMatColorCode = Me.FTColorway.Text.Trim()
                    tFTMatColorName = Me.FTColorway_None.Text.Trim()
                    nFNHSysMatSizeId = Val(Me.FTSizeBreakDown.Properties.Tag.ToString())
                    tFTMatSizeCode = Me.FTSizeBreakDown.Text.Trim()
                    nFNQuantity_Tmp = Me.FNQuantity.Value   '...ปริมาณ
                    nFNPrice_Tmp = Me.FNPrice.Value  '...ราคา
                    nFNAmt_Tmp = Me.FNAmt.Value   '...จำนวนเงิน
                    nFNExtraQtySubOrder_Tmp = Me.FNExtraQtySubOrder.Value   '...เปอร์เซ็นต์เผื่อ
                    nFNQuantityExtra_Tmp = Me.FNQuantityExtra.Value    '...จำนวนยอดเผื่อ
                    nFNGarmentQtyTest = Me.FNGarmentQtyTest.Value
                    '==============================================================================================================================

                    If W_PRCbSaveSubOrderHD() = True Then

                        tFTSubOrderNo_Tag = Me.FTSubOrderNo.Properties.Tag
                        tFTSubOrderNo_Text = Me.FTSubOrderNo.Text

                        If _SubCurID <> "" And _SubCurID <> Me.FNHSysCurId.Properties.Tag.ToString Then

                            tSql = ""
                            tSql = "  INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTSeasonCMPrice]  "
                            tSql &= Environment.NewLine & " (FNHSysStyleId,FNHSysSeasonId,FNCM,FNCMDisPer,FNCMDisAmt,FNNetCM,FNCostTransport)"
                            tSql &= Environment.NewLine & " SELECT XSX.FNHSysStyleId, XSX.FNHSysSeasonId, XSX.FNCM, XSX.FNCMDisPer, XSX.FNCMDisAmt,XSX.FNNetCM, XSX.FNCostTransport"
                            tSql &= Environment.NewLine & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTSeasonCMPrice] AS STM "
                            tSql &= Environment.NewLine & "     RIGHT OUTER JOIN (SELECT B2.FNHSysStyleId,B2.FNHSysSeasonId,MAX(BB.FNCMDisAmt) AS FNCMDisAmt"
                            tSql &= Environment.NewLine & " ,MAX(ST.FNCM) AS FNCM,MAX(ST.FNCMDisPer) AS FNCMDisPer,MAX(ST.FNNetCM) AS FNNetCM,MAX(ST.FNCostTransport) AS FNCostTransport"
                            tSql &= Environment.NewLine & "      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B2 WITH(NOLOCK) "
                            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS ST  WITH(NOLOCK) ON B2.FNHSysStyleId = ST.FNHSysStyleId "
                            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B3  WITH(NOLOCK) ON B2.FNHSysStyleId = B3.FNHSysStyleId AND B2.FNHSysSeasonId=B3.FNHSysSeasonId"
                            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS B4 WITH(NOLOCK) ON B3.FTOrderNo = B4.FTOrderNo "
                            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS BB WITH(NOLOCK) ON B4.FTOrderNo = BB.FTOrderNo AND B4.FTSubOrderNo = BB.FTSubOrderNo "
                            tSql &= Environment.NewLine & "     WHERE  B2.FTOrderNo =N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

                            '  If Me.FNHSysCustId.Properties.Tag.ToString = "1310210002" Then
                            tSql &= Environment.NewLine & "  AND B4.FNHSysCurId IN (SELECT FNHSysCurId FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TFINMCurrency AS C WITH(NOLOCK) WHERE ISNULL(FTStateLocal,'0') <>'1')"
                            '  End If

                            tSql &= Environment.NewLine & "   GROUP BY B2.FNHSysStyleId,B2.FNHSysSeasonId) AS XSX"
                            tSql &= Environment.NewLine & " ON  STM.FNHSysStyleId=XSX.FNHSysStyleId AND STM.FNHSysSeasonId=XSX.FNHSysSeasonId"
                            tSql &= Environment.NewLine & "  WHERE  STM.FNHSysStyleId IS NULL"
                            HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

                            tSql = "  UPDATE STM"
                            tSql &= Environment.NewLine & "   SET FNCMDisAmt=XSX.FNCMDisAmt"
                            tSql &= Environment.NewLine & "      ,FNNetCM = (STM.FNCM - XSX.FNCMDisAmt ) "
                            tSql &= Environment.NewLine & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTSeasonCMPrice] AS STM "
                            tSql &= Environment.NewLine & "   , (SELECT B2.FNHSysStyleId,B2.FNHSysSeasonId,MAX(BB.FNCMDisAmt) AS FNCMDisAmt"
                            tSql &= Environment.NewLine & " ,MAX(ST.FNCM) AS FNCM,MAX(ST.FNCMDisPer) AS FNCMDisPer,MAX(ST.FNNetCM) AS FNNetCM,MAX(ST.FNCostTransport) AS FNCostTransport"
                            tSql &= Environment.NewLine & "      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B2 WITH(NOLOCK) "
                            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS ST  WITH(NOLOCK) ON B2.FNHSysStyleId = ST.FNHSysStyleId "
                            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B3  WITH(NOLOCK) ON B2.FNHSysStyleId = B3.FNHSysStyleId AND B2.FNHSysSeasonId=B3.FNHSysSeasonId"
                            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS B4 WITH(NOLOCK) ON B3.FTOrderNo = B4.FTOrderNo "
                            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS BB WITH(NOLOCK) ON B4.FTOrderNo = BB.FTOrderNo AND B4.FTSubOrderNo = BB.FTSubOrderNo "
                            tSql &= Environment.NewLine & "     WHERE  B2.FTOrderNo =N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "' "

                            ' If Me.FNHSysCustId.Properties.Tag.ToString = "1310210002" Then
                            tSql &= Environment.NewLine & "  AND B4.FNHSysCurId IN (SELECT FNHSysCurId FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TFINMCurrency AS C WITH(NOLOCK) WHERE ISNULL(FTStateLocal,'0') <>'1')"
                            '  End If

                            tSql &= Environment.NewLine & "   GROUP BY B2.FNHSysStyleId,B2.FNHSysSeasonId) AS XSX"
                            tSql &= Environment.NewLine & " WHERE  STM.FNHSysStyleId=XSX.FNHSysStyleId AND STM.FNHSysSeasonId=XSX.FNHSysSeasonId"

                            HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

                            tSql = "  UPDATE STM"
                            tSql &= Environment.NewLine & "   SET FNCMDisAmt=XSX.FNCMDisAmt"
                            tSql &= Environment.NewLine & "      ,FNNetCM = (STM.FNCM - XSX.FNCMDisAmt ) "
                            tSql &= Environment.NewLine & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS STM "
                            tSql &= Environment.NewLine & "   , (SELECT B2.FNHSysStyleId,MAX(ST.FNCMDisPer) AS FNCMDisPer ,MAX(ST.FNCMDisAmt) AS FNCMDisAmt "
                            tSql &= Environment.NewLine & "      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B2 WITH(NOLOCK) "
                            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS ST  WITH(NOLOCK) ON B2.FNHSysStyleId = ST.FNHSysStyleId "
                            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B3  WITH(NOLOCK) ON B2.FNHSysStyleId = B3.FNHSysStyleId "
                            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS B4 WITH(NOLOCK) ON B3.FTOrderNo = B4.FTOrderNo "
                            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS BB WITH(NOLOCK) ON B4.FTOrderNo = BB.FTOrderNo AND B4.FTSubOrderNo = BB.FTSubOrderNo "
                            tSql &= Environment.NewLine & "     WHERE  B2.FTOrderNo =N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

                            ' If Me.FNHSysCustId.Properties.Tag.ToString = "1310210002" Then
                            tSql &= Environment.NewLine & "  AND B4.FNHSysCurId IN (SELECT FNHSysCurId FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TFINMCurrency AS C WITH(NOLOCK) WHERE ISNULL(FTStateLocal,'0') <>'1')"
                            ' End If

                            tSql &= Environment.NewLine & "   GROUP BY B2.FNHSysStyleId) AS XSX"
                            tSql &= Environment.NewLine & " WHERE  STM.FNHSysStyleId=XSX.FNHSysStyleId "

                            HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

                        End If

                        _Spls.Close()
                        '...บันทึกเฉพาะรายการหัวเอกสารเลขที่ใบสั่งผลิตย่อยเท่านั้น
                        HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, Me.Text)

                        Me.FTSubOrderNo.Properties.Tag = tFTSubOrderNo_Tag
                        Me.FTSubOrderNo.Text = tFTSubOrderNo_Text

                        If _tFTSubOrderNo = "" Then
                            Me.FTSubOrderNo.Properties.Tag = tFTSubOrderNo_Tag
                            Me.FTSubOrderNo.Text = tFTSubOrderNo_Text
                        Else
                            Me.FTSubOrderNo.Properties.Tag = _tFTSubOrderNo
                            Me.FTSubOrderNo.Text = _tFTSubOrderNo
                        End If

                        Call W_PRCbShowBrowseDataSubOrderInfo(Me.FTSubOrderNo.Properties.Tag.ToString())
                        Call W_PRCbShowBrowseDataSubOrderBreakdownInfo(Me.FTSubOrderNo.Properties.Tag.ToString())
                        Call W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt()
                        Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(Me.FTSubOrderNo.Properties.Tag.ToString())

                        'End If

                        '...Update Remark TMERTOrderSub_Component
                        '...Syncronize BOM Sheet Main Material Component ADD NEW/ UPDATE/ DELETE (MERGE TARGET/SOURCE Main Material Component)
                        '...Target : TMERTOrderSub_Component
                        '...Source : TMERTStyle_Mat
                        '/*----------------------------------------------------------------------------------------------------------------------------------*/
                        ' Call W_PRCbSaveSubOrderComponent()
                        'Call W_PRCbSaveSyncronizeBomSheetMerMaterialComponent()
                        Call W_PRCbShowBrowseDataSubOrderComponent(Me.FTOrderNo.Text.Trim, Me.FTSubOrderNo.Text.Trim)
                        '/*----------------------------------------------------------------------------------------------------------------------------------*/

                    End If

                End If

            Case eTabIndexs.FactorySubOrderNoComponent
                '...update remak factory sub order component

                'With CType(ogdOrderSubComponent.DataSource, DataTable)
                '    .AcceptChanges()
                '    If .Select("FNHSysMerMatId=''").Length > 0 Then
                '        HI.MG.ShowMsg.mInfo("กรุณาทำการระบุข้อมูลวัตถุดิบให้ครบ !!!", 1704010035, Me.Text,, MessageBoxIcon.Warning)

                '        Exit Sub
                '    End If
                'End With


                If W_PRCbSaveSubOrderComponent() = True Then
                    '...write log revised component information
                    Call PostSaveSubOrderNoComponent("", "")
                End If
                '...syncronize component main material from bom sheet
                ' Call W_PRCbSaveSyncronizeBomSheetMerMaterialComponent()
                Call W_PRCbShowBrowseDataSubOrderComponent(Me.FTOrderNo.Text.Trim, Me.FTSubOrderNo.Text.Trim)
            Case eTabIndexs.FactorySubOrderNoSewing
                '...add item sewing
                Call ocmaddsubordersew_Click(Nothing, Nothing)
            Case eTabIndexs.FactorySubOrderNoPacking
                '...add new or update item packing info / pack per carton by solid/assort:colorway/size breakdown
                Call ocmaddsuborderpack_Click(Nothing, Nothing)
            Case eTabIndexs.FactorySubOrderNoPackingCarton
                If W_PRCbSaveDataPackCarton() = True Then
                    Call PROC_SETxShowBrowsePackingCartonInfo()
                Else
                End If
            Case eTabIndexs.FactorySubOrderSizeSpec
                If CheckCreateQASizeSpec() = True Then Exit Sub

                Call W_PRCbSaveDataSizeSpec()
            Case Else
                '...Do Nothing
        End Select

    End Sub

    Private Sub Proc_Delete(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmDelete.Click
        If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
            HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
            Exit Sub
        End If

        Call CheckStateOrder()
        Call CheckStateSubOrder()

        If CheckBookingRefer() Then
            Exit Sub
        End If

        If CheckOwner() = False Then
            Exit Sub
        End If

        If CheckCombine() = True Then
            HI.MG.ShowMsg.mInfo("ไม่สามารถลบ เนื่องจากใบสั่งผลิตนี้ได้ มาจากการแบ่งงาน", 1511181420, Me.Text)
            Exit Sub
        End If
        If (CheckApproveOrder()) Then Exit Sub

        Select Case Me.otab.SelectedTabPageIndex
            Case eTabIndexs.FactoryOrderNo
                '...delete main order no / breakdown main order/ sub order no / sub order breakdown
                Dim tTextFONoDel As String = Me.FTOrderNo.Text
                Dim tTextStyleCode As String = Me.FNHSysStyleId.Text

                If FTStateCutting.Checked Then
                    HI.MG.ShowMsg.mInfo("มีการตัดแล้วไม่สามารถทำการ Divert หรือแก้ไขได้!!!", 1509130075, Me.Text, , MessageBoxIcon.Warning)
                    Exit Sub
                End If

                If CheckDivertAfter(Me.FTOrderNo.Text) = False Then
                    Exit Sub
                End If

                If CreateDocumentMI(Me.FTOrderNo.Text, FTSubOrderNo.Text) Then
                    Exit Sub
                End If

                If W_PRCbDeleteMainOrder() = True Then

                    '' Write changed log
                    Call PROC_PostSaveDelFONo("[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrder]", tTextFONoDel & "|" & tTextStyleCode)

                    HI.Auditor.CreateLog.CreateLogDelete(HI.ST.SysInfo.MenuName, Me.Name, "Delete From  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder WHERE FTOrderNo='" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "'")
                    HI.Auditor.CreateLog.CreateLogDelete(HI.ST.SysInfo.MenuName, Me.Name, "Delete From  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_BreakDown WHERE FTOrderNo='" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "'")

                End If

            Case eTabIndexs.FactorySubOrderNo

                '...delete sub order no / sub order breakdown
                Dim tTextStyleCode As String = Me.FNHSysStyleId.Text
                Dim tTextFONo As String = Me.FTOrderNo.Text
                Dim tTextFONoSubDel As String = Me.FTSubOrderNo.Text

                If FTStateSubCutting.Checked Then
                    HI.MG.ShowMsg.mInfo("มีการตัดแล้วไม่สามารถทำการ Divert หรือแก้ไขได้!!!", 1509130075, Me.Text, , MessageBoxIcon.Warning)
                    Exit Sub
                End If

                If CheckDivertAfter(Me.FTOrderNo.Text, FTSubOrderNo.Text) = False Then
                    Exit Sub
                End If

                If CreateDocumentMI(Me.FTOrderNo.Text, FTSubOrderNo.Text) Then
                    Exit Sub
                End If

                If W_PRCbDeleteSubOrderHD() = True Then
                    '' Write changed log
                    Call PROC_PostSaveDelFONo("[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub]", tTextFONo & "|" & tTextFONoSubDel & "|" & tTextStyleCode)


                    HI.Auditor.CreateLog.CreateLogDelete(HI.ST.SysInfo.MenuName, Me.Name, "Delete From  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub WHERE FTSubOrderNo='" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'")
                    HI.Auditor.CreateLog.CreateLogDelete(HI.ST.SysInfo.MenuName, Me.Name, "Delete From  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_BreakDown WHERE FTSubOrderNo='" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'")

                End If

            Case eTabIndexs.FactorySubOrderNoComponent
                Call W_PRCbDeleteSubOrderComponent()
            Case eTabIndexs.FactorySubOrderNoSewing
                REM 2014/02/09 Call ocmRemoveDT.PerformClick()
                Call ocmremovesubordersew_Click(Nothing, Nothing)
            Case eTabIndexs.FactorySubOrderNoPacking
                REM 2014/02/09 Call ocmRemoveDT.PerformClick()
                Call ocmremovesuborderpack_Click(Nothing, Nothing)
            Case eTabIndexs.FactorySubOrderNoPackingCarton
                If W_PRCbDeletePackCarton() = True Then
                    Call PROC_SETxShowBrowsePackingCartonInfo()
                End If
            Case Else

        End Select
    End Sub

    Private Sub Proc_Copy(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmcopy.Click



        Select Case Me.otab.SelectedTabPageIndex
            Case eTabIndexs.FactoryOrderNo
                If Me.FTOrderNo.Properties.Tag.ToString().Trim() <> "" Then

                    _CopyOrder = New wCopyOrder(Me.FTOrderNo.Properties.Tag.ToString().Trim(), Me.SysDBName, Me.SysTableName)

                    HI.TL.HandlerControl.AddHandlerObj(_CopyOrder)

                    Dim oSysLang As New HI.ST.SysLanguage

                    Try
                        Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _CopyOrder.Name.ToString.Trim, _CopyOrder)
                    Catch ex As Exception
                    End Try

                    Call HI.ST.Lang.SP_SETxLanguage(_CopyOrder)

                    _CopyOrder.ShowDialog()

                Else
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.FTOrderNo_lbl.Text)
                    Me.FTOrderNo.Focus()
                End If

            Case eTabIndexs.FactorySubOrderNo

                If CheckOwner() = False Then
                    Exit Sub
                End If
                If (CheckApproveOrder()) Then Exit Sub
                If Me.FTSubOrderNo.Properties.Tag.ToString().Trim() <> "" Then

                    _CopyOrderSub = New wCopyOrderSub(Me.FTOrderNo.Properties.Tag.ToString().Trim(), Me.FTSubOrderNo.Properties.Tag.ToString().Trim())

                    HI.TL.HandlerControl.AddHandlerObj(_CopyOrderSub)

                    Dim oSysLang As New HI.ST.SysLanguage

                    Try
                        Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _CopyOrderSub.Name.ToString.Trim, _CopyOrderSub)
                    Catch ex As Exception
                    End Try

                    Call HI.ST.Lang.SP_SETxLanguage(_CopyOrderSub)

                    _CopyOrderSub.ShowDialog()

                Else
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.FTSubOrderNo_lbl.Text)
                    Me.FTSubOrderNo.Focus()
                End If

            Case Else
                '...Do nothing
        End Select

    End Sub

    Private Sub Proc_Approve(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmSendApprove.Click
        If CheckOwner() = False Then
            Exit Sub
        End If
        If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
            HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
            Exit Sub
        End If

        If (CheckApproveOrder()) Then Exit Sub

        If Me.FTOrderNo.Properties.Tag.ToString() <> "" Then
            If W_PRCbSendApproveOrder(Me.FTOrderNo.Properties.Tag.ToString()) = True Then

                Select Case HI.ST.Lang.Language
                    Case HI.ST.Lang.eLang.TH
                        HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, "ทำการส่งอนุมัติเลขที่ใบสั่งผลิต : " & Me.FTOrderNo.Text & " เรียบร้อยแล้ว...")
                    Case Else
                        HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, "Send Approve Factory Ordre No. : " & Me.FTOrderNo.Text & " complete...")
                End Select

            End If
        Else
            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FTOrderNo_lbl.Text)
            Me.FTOrderNo.Focus()
        End If
    End Sub

    Private Sub Proc_Refresh(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmRefresh.Click

        Select Case Me.otab.SelectedTabPageIndex
            Case eTabIndexs.FactoryOrderNo
                If Me.FTOrderNo.Text.Trim() <> "" Then
                    If FTOrderNo.Properties.Tag.ToString <> "" Then
                        Dim tSql As String
                        tSql = ""
                        tSql = "SELECT TOP 1 FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder WITH(NOLOCK) WHERE FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "' "
                        If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                            Call W_PRCbLoadMainOrderInfo(Me.FTOrderNo.Text.Trim())
                            Call W_PRCbShowBrowseDataCurrencyInfo()
                            Call W_PRCbShowBrowseDataOrderBreakdownInfo()

                            Me.LoadCompleteFTImage1 = False : Me.LoadCompleteFTImage2 = False : Me.LoadCompleteFTImage3 = False : Me.LoadCompleteFTImage4 = False

                            tSql = ""
                            tSql = "SELECT TOP 1 A.FTSubOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A WITH(NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "'"
                            If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                                Call W_PRCbShowBrowseDataSubOrderInfo(Me.FTSubOrderNo.Properties.Tag.ToString())
                                Call W_PRCbShowBrowseDataSubOrderBreakdownInfo(Me.FTSubOrderNo.Properties.Tag.ToString())
                                Call W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt()
                                Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(Me.FTSubOrderNo.Properties.Tag.ToString())
                            End If

                            Call W_PRCbShowBrowseDataSubOrderComponent(Me.FTOrderNo.Properties.Tag.ToString().Trim(), Me.FTSubOrderNo.Properties.Tag.ToString().Trim())

                            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)
                            Call W_PRCbShowBrowseDataSubOrderSewingInfo()

                            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)
                            Call W_PRCbShowBrowseDataSubOrderPackInfo()

                        End If

                    End If

                End If

            Case eTabIndexs.FactorySubOrderNo
                If Me.FTSubOrderNo.Text.Trim() <> "" Then
                    If Me.FTSubOrderNo.Properties.Tag.ToString() <> "" And Me.FTOrderNo.Properties.Tag.ToString() <> "" Then
                        Dim tSql As String = ""
                        tSql = "SELECT TOP 1 A.FTSubOrderNo FROM HITECH_MERCHAN..TMERTOrderSub AS A WITH(NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "'"
                        If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                            Call W_PRCbShowBrowseDataSubOrderInfo(Me.FTSubOrderNo.Properties.Tag.ToString())
                            Call W_PRCbShowBrowseDataSubOrderComponent(Me.FTOrderNo.Text.Trim, Me.FTSubOrderNo.Text.Trim)
                            Call W_PRCbShowBrowseDataSubOrderBreakdownInfo(Me.FTSubOrderNo.Properties.Tag.ToString())
                            Call W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt()
                            Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(Me.FTSubOrderNo.Properties.Tag.ToString())
                            Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(Me.FTOrderNo.Properties.Tag.ToString().Trim(), Me.FTSubOrderNo.Properties.Tag.ToString().Trim())
                        End If
                    End If
                End If

            Case eTabIndexs.FactorySubOrderNoComponent
                Call W_PRCbShowBrowseDataSubOrderComponent(Me.FTOrderNo.Text.Trim, Me.FTSubOrderNo.Text.Trim)
            Case eTabIndexs.FactorySubOrderNoSewing
                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)
                Call W_PRCbShowBrowseDataSubOrderSewingInfo()
                Me.FTImageSewing.Image = Nothing
                Me.FTSewDescription.Focus()
            Case eTabIndexs.FactorySubOrderNoPacking
                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)
                Me.FTImageSewing.Image = Nothing
                Call W_PRCbShowBrowseDataSubOrderPackInfo()
                Me.FTImagePacking.Image = Nothing
                Me.FTPackDescription.Focus()
            Case eTabIndexs.FactorySubOrderNoPackingCarton
                Call PROC_SETxShowBrowsePackingCartonInfo()
            Case eTabIndexs.FactorySubOrderSizeSpec
                Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(Me.FTOrderNo.Properties.Tag.ToString().Trim(), Me.FTSubOrderNo.Properties.Tag.ToString().Trim())
                'Call W_PRCxInitNewRowSizeSpec(CType(Me.ogdSizeSpec.DataSource, System.Data.DataTable))
            Case Else
                '...Nothing
        End Select

        Call CheckStateOrder()
        Call CheckStateSubOrder()

    End Sub

    Private Sub Proc_Clear(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmclearclsr.Click
        Select Case Me.otab.SelectedTabPageIndex
            Case eTabIndexs.FactoryOrderNo
                Call FormRefresh()
            Case eTabIndexs.FactorySubOrderNo
                Me.FTSubOrderNo.Properties.Tag = ""
                Me.FTSubOrderNo.Text = ""

                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrder)
                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)

                Me.FNHSysContinentId.Properties.Tag = "" : Me.FNHSysContinentId.Text = "" : Me.FNHSysContinentId_None.Text = ""
                Me.FNHSysCountryId.Properties.Tag = "" : Me.FNHSysCountryId.Text = "" : Me.FNHSysCountryId_None.Text = ""
                Me.FNHSysProvinceId.Properties.Tag = "" : Me.FNHSysProvinceId.Text = "" : Me.FNHSysProvinceId_None.Text = ""
                Me.FNHSysShipModeId.Properties.Tag = "" : Me.FNHSysShipModeId.Text = "" : Me.FNHSysShipModeId_None.Text = ""
                Me.FNHSysShipPortId.Properties.Tag = "" : Me.FNHSysShipPortId.Text = "" : Me.FNHSysShipPortId_None.Text = ""
                Me.FNHSysCurId.Properties.Tag = "" : Me.FNHSysCurId.Text = "" : Me.FNHSysCurId_None.Text = ""
                Me.FNHSysGenderId.Properties.Tag = "" : Me.FNHSysGenderId.Text = "" : Me.FNHSysGenderId_None.Text = ""
                Me.FNHSysUnitId.Properties.Tag = "" : Me.FNHSysUnitId.Text = "" : Me.FNHSysUnitId_None.Text = ""
                Me.FTUpdUserSubOrder.Text = "" : Me.FDUpdDate_OrderSub.Text = "" : Me.FTUpdTime_OrderSub.Text = ""
                Me.FDSubOrderDate.Text = ""
                Me.FDProDate.Text = ""
                Me.FDShipDate.Text = ""
                Me.FNSubOrderQty.Value = 0 : Me.FNSubOrderAmt.Value = 0
                Me.FNSubOrderGarmentTestQty.Value = 0 : Me.FNSubOrderGarmentTestAmnt.Value = 0
                Me.FTRemarkSubOrderNo.Text = ""
                Me.FTStateEmb.Checked = False : Me.FTStatePrint.Checked = False : Me.FTStateHeat.Checked = False : Me.FTStateLaser.Checked = False : Me.FTStateWindows.Checked = False
                Me.FTSubOrderNoDivertRef.Visible = False : Me.FTSubOrderNoDivertRef.Checked = False

                Me.FTStateApprovedSubOrderNo.Visible = False
                Me.FTStateApprovedSubOrderNo.Checked = False
                'Me.FTStateApprovedSubOrderNo.Text = ""

                Me.FTStateApprovedSubOrderNoRevised.Visible = False
                Me.FTStateApprovedSubOrderNoRevised.Checked = False

                Me.FTStateApprovedComponent.Visible = False
                Me.FTStateApprovedComponent.Checked = False
                'Me.FTStateApprovedComponent.Text = ""

                Me.FTStateApprovedComponentRevised.Visible = False
                Me.FTStateApprovedComponentRevised.Checked = False

                Me.FTStateApprovedSew.Visible = False
                Me.FTStateApprovedSew.Checked = False
                'Me.FTStateApprovedSew.Text = ""

                Me.FTStateApprovedSewRevised.Visible = False
                Me.FTStateApprovedSewRevised.Checked = False

                Me.FTStateApprovedPack.Visible = False
                Me.FTStateApprovedPack.Checked = False
                'Me.FTStateApprovedPack.Text = ""

                Me.FTStateApprovedPackRevised.Visible = False
                Me.FTStateApprovedPackRevised.Checked = False

                Me.FTStateApprovedPackRatio.Visible = False
                Me.FTStateApprovedPackRatio.Checked = False
                'Me.FTStateApprovedPackRatio.Text = ""

                Me.FTStateApprovedPackRatioRevised.Visible = False
                Me.FTStateApprovedPackRatioRevised.Checked = False

                Me.FTStateApprovedSizeSpec.Visible = False
                Me.FTStateApprovedSizeSpec.Checked = False
                'Me.FTStateApprovedSizeSpec.Text = ""

                Me.FTStateApprovedSizeSpecRevised.Visible = False
                Me.FTStateApprovedSizeSpecRevised.Checked = False

                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)
                Me.ogdOrderSubPack.DataSource = Nothing
                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)

                Me.ogdOrderSubSewing.DataSource = Nothing

                Me.FTImageSewing.Image = Nothing
                Me.FTImagePacking.Image = Nothing

                oGridViewSubBreakdown = Me.ogdSubOrdBreakDown.Views(0)
                Me.ogdSubOrdBreakDown.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
                Me.ogdSubOrdBreakDownSummary.Width = ogdSubOrdBreakDown.Width

                oDBdtSizeSpecView = Nothing
                oGridViewSizeSpec = Me.ogdSizeSpec.Views(0)
                Me.ogdSizeSpec.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSizeSpec)

                Me.ogdOrderSubComponent.DataSource = Nothing

                HI.TL.HandlerControl.ClearControl(Me.ogbPackCartonHD)
                Me.ogdOrderSubPack.DataSource = Nothing

                With Me.ogvOrderSubPackCarton
                    For nLoopSubPackCarton As Integer = .Columns.Count - 1 To 0 Step -1

                        Select Case .Columns(nLoopSubPackCarton).FieldName.ToString.ToUpper

                            Case "FTOrderNo".ToUpper, "FTSubOrderNo".ToUpper, "FTColorway".ToUpper
                                .Columns(nLoopSubPackCarton).AppearanceCell.BackColor = Color.White
                                .Columns(nLoopSubPackCarton).AppearanceCell.ForeColor = Color.Black
                                .Columns(nLoopSubPackCarton).OptionsColumn.AllowSort = DevExpress.Utils.DefaultBoolean.False
                            Case Else
                                .Columns.Remove(.Columns(nLoopSubPackCarton))
                        End Select

                    Next

                End With

                Me.FNPackCartonSubType.SelectedIndex = 0
                Me.FNPackPerCaton.Value = 0

                Me.FTSubOrderNo.Focus()
            Case eTabIndexs.FactorySubOrderNoSewing
                REM 2014/06/20 Call ocmNewRecord.PerformClick()
                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)

                Me.FTImageSewing.Image = Nothing

                Dim tSql As String
                tSql = ""
                tSql = "SELECT ISNULL(MAX(A.FNSewSeq),0) + 1"
                tSql &= ControlChars.CrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A"
                tSql &= ControlChars.CrLf & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                tSql &= ControlChars.CrLf & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"

                Dim nFNSewSeqDefault As Integer
                nFNSewSeqDefault = Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0"))
                Me.FTSewDescription.Focus()
                Me.FNSewSeq.Value = nFNSewSeqDefault

            Case eTabIndexs.FactorySubOrderNoPacking
                REM Call ocmNewRecord.PerformClick()
                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)

                Me.FTImagePacking.Image = Nothing

                Dim tSql As String
                tSql = ""
                tSql = "SELECT ISNULL(MAX(A.FNPackSeq),0) + 1"
                tSql &= ControlChars.CrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A"
                tSql &= ControlChars.CrLf & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                tSql &= ControlChars.CrLf & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"

                Dim nFNPackSeqDefault As Integer
                nFNPackSeqDefault = Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0"))
                Me.FTPackDescription.Focus()
                Me.FNPackSeq.Value = nFNPackSeqDefault

            Case Else

        End Select

    End Sub

    Private Sub Proc_Preview(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmPreview.Click
        Try
            'If Not System.Diagnostics.Debugger.IsAttached = True Then
            '    Select Case Me.otab.SelectedTabPageIndex
            '        Case eTabIndexs.FactoryOrderNo
            '            MessageBox.Show("Report Factory Order No.", otab.SelectedTabPage.Name, MessageBoxButtons.OK, MessageBoxIcon.Information)
            '        Case eTabIndexs.FactorySubOrderNo
            '            MessageBox.Show("Report Factory Sub Order No.", otab.SelectedTabPage.Name, MessageBoxButtons.OK, MessageBoxIcon.Information)
            '        Case eTabIndexs.FactorySubOrderNoSewing
            '            MessageBox.Show("Report Factory Sub Order No. Sewing", otab.SelectedTabPage.Name, MessageBoxButtons.OK, MessageBoxIcon.Information)
            '        Case eTabIndexs.FactorySubOrderNoPacking
            '            MessageBox.Show("Report Factory Sub Order No. Packing", otab.SelectedTabPage.Name, MessageBoxButtons.OK, MessageBoxIcon.Information)
            '        Case eTabIndexs.FactorySubOrderSizeSpec
            '            MessageBox.Show("Report Factory Sub Order No. Size Spec", otab.SelectedTabPage.Name, MessageBoxButtons.OK, MessageBoxIcon.Information)
            '    End Select
            'Else
            '    Select Case Me.otab.SelectedTabPageIndex
            '        Case eTabIndexs.FactoryOrderNo
            '            REM Call W_PRCxPreview_OrderNo()
            '            If Me.FTOrderNo.Properties.Tag.ToString().Trim() <> "" Then
            '                Dim tSql As String

            '                tSql = ""
            '                tSql = "SELECT A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';"

            '                If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") = "" Then
            '                    Me.FTOrderNo.Focus()
            '                    Me.FTOrderNo.SelectionStart = 0
            '                    Me.FTOrderNo.SelectionLength = Len(Me.FTOrderNo.Text)
            '                    Exit Sub
            '                End If

            '                _wReportMERFactoryOrderNo = New wReportMERFactoryOrderNo(Me.FTOrderNo.Properties.Tag.ToString().Trim())

            '                HI.TL.HandlerControl.AddHandlerObj(_wReportMERFactoryOrderNo)

            '                Dim oSysLang As New HI.ST.SysLanguage

            '                Try
            '                    Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _wReportMERFactoryOrderNo.Name.ToString.Trim, _wReportMERFactoryOrderNo)
            '                Catch ex As Exception
            '                End Try

            '                Call HI.ST.Lang.SP_SETxLanguage(_wReportMERFactoryOrderNo)

            '                _wReportMERFactoryOrderNo.ShowDialog()

            '            Else
            '                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.FTOrderNo_lbl.Text)
            '                Me.FTOrderNo.Focus()
            '            End If

            '        Case eTabIndexs.FactorySubOrderNo
            '            REM Call W_PRCxPreview_SubOrderNo()
            '            If Me.FTOrderNo.Text.Trim() = "" Then
            '                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.FTOrderNo_lbl.Text)
            '                Me.FTOrderNo.Focus()
            '                Me.FTOrderNo.SelectionStart = 0
            '                Me.FTOrderNo.SelectionLength = Len(Me.FTOrderNo.Text)
            '                Exit Sub
            '            End If

            '            Dim tSql As String

            '            tSql = ""
            '            tSql = "SELECT A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';"

            '            If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") = "" Then
            '                Me.FTOrderNo.Focus()
            '                Me.FTOrderNo.SelectionStart = 0
            '                Me.FTOrderNo.SelectionLength = Len(Me.FTOrderNo.Text)
            '                Exit Sub
            '            End If

            '            If Me.FTSubOrderNo.Text.Trim() = "" Then
            '                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.FTSubOrderNo_lbl.Text)
            '                Me.FTSubOrderNo.Focus()
            '                Me.FTSubOrderNo.SelectionStart = 0
            '                Me.FTSubOrderNo.SelectionLength = Len(Me.FTSubOrderNo.Text)
            '                Exit Sub
            '            End If

            '            tSql = ""
            '            tSql = "SELECT A.FTSubOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS A WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim()) & "';"

            '            If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") = "" Then
            '                Me.FTSubOrderNo.Focus()
            '                Me.FTSubOrderNo.SelectionStart = 0
            '                Me.FTSubOrderNo.SelectionLength = Len(Me.FTSubOrderNo.Text)
            '                Exit Sub
            '            End If

            '            _wReportMERFactorySubOrderNo = New wReportMERFactorySubOrderNo(Me.FTSubOrderNo.Properties.Tag.ToString().Trim())

            '            HI.TL.HandlerControl.AddHandlerObj(_wReportMERFactorySubOrderNo)

            '            Dim oSysLang As New HI.ST.SysLanguage

            '            Try
            '                Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _wReportMERFactorySubOrderNo.Name.ToString.Trim, _wReportMERFactorySubOrderNo)
            '            Catch ex As Exception
            '            End Try

            '            Call HI.ST.Lang.SP_SETxLanguage(_wReportMERFactorySubOrderNo)

            '            _wReportMERFactorySubOrderNo.ShowDialog()

            '        Case eTabIndexs.FactorySubOrderNoSewing
            '        Case eTabIndexs.FactorySubOrderNoPacking
            '        Case eTabIndexs.FactorySubOrderSizeSpec
            '        Case Else
            '    End Select
            'End If

            Select Case Me.otab.SelectedTabPageIndex
                Case eTabIndexs.FactoryOrderNo
                    REM Call W_PRCxPreview_OrderNo()
                    If Me.FTOrderNo.Properties.Tag.ToString().Trim() <> "" Then
                        Dim tSql As String

                        tSql = ""
                        tSql = "SELECT A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';"

                        If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") = "" Then
                            Me.FTOrderNo.Focus()
                            Me.FTOrderNo.SelectionStart = 0
                            Me.FTOrderNo.SelectionLength = Len(Me.FTOrderNo.Text)
                            Exit Sub
                        End If

                        _wReportMERFactoryOrderNo = New wReportMERFactoryOrderNo(Me.FTOrderNo.Properties.Tag.ToString().Trim())

                        HI.TL.HandlerControl.AddHandlerObj(_wReportMERFactoryOrderNo)

                        Dim oSysLang As New HI.ST.SysLanguage

                        Try
                            Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _wReportMERFactoryOrderNo.Name.ToString.Trim, _wReportMERFactoryOrderNo)
                        Catch ex As Exception
                        End Try

                        Call HI.ST.Lang.SP_SETxLanguage(_wReportMERFactoryOrderNo)

                        _wReportMERFactoryOrderNo.ShowDialog()

                    Else
                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.FTOrderNo_lbl.Text)
                        Me.FTOrderNo.Focus()
                    End If

                Case eTabIndexs.FactorySubOrderNo
                    REM Call W_PRCxPreview_SubOrderNo()
                    If Me.FTOrderNo.Text.Trim() = "" Then
                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.FTOrderNo_lbl.Text)
                        Me.FTOrderNo.Focus()
                        Me.FTOrderNo.SelectionStart = 0
                        Me.FTOrderNo.SelectionLength = Len(Me.FTOrderNo.Text)
                        Exit Sub
                    End If

                    Dim tSql As String

                    tSql = ""
                    tSql = "SELECT A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';"

                    If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") = "" Then
                        Me.FTOrderNo.Focus()
                        Me.FTOrderNo.SelectionStart = 0
                        Me.FTOrderNo.SelectionLength = Len(Me.FTOrderNo.Text)
                        Exit Sub
                    End If

                    If Me.FTSubOrderNo.Text.Trim() = "" Then
                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.FTSubOrderNo_lbl.Text)
                        Me.FTSubOrderNo.Focus()
                        Me.FTSubOrderNo.SelectionStart = 0
                        Me.FTSubOrderNo.SelectionLength = Len(Me.FTSubOrderNo.Text)
                        Exit Sub
                    End If

                    tSql = ""
                    tSql = "SELECT A.FTSubOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS A WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim()) & "';"

                    If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") = "" Then
                        Me.FTSubOrderNo.Focus()
                        Me.FTSubOrderNo.SelectionStart = 0
                        Me.FTSubOrderNo.SelectionLength = Len(Me.FTSubOrderNo.Text)
                        Exit Sub
                    End If

                    _wReportMERFactorySubOrderNo = New wReportMERFactorySubOrderNo(Me.FTOrderNo.Properties.Tag.ToString().Trim(), Me.FTSubOrderNo.Properties.Tag.ToString().Trim())

                    HI.TL.HandlerControl.AddHandlerObj(_wReportMERFactorySubOrderNo)

                    Dim oSysLang As New HI.ST.SysLanguage

                    Try
                        Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _wReportMERFactorySubOrderNo.Name.ToString.Trim, _wReportMERFactorySubOrderNo)
                    Catch ex As Exception
                    End Try

                    Call HI.ST.Lang.SP_SETxLanguage(_wReportMERFactorySubOrderNo)

                    _wReportMERFactorySubOrderNo.ShowDialog()

                Case eTabIndexs.FactorySubOrderNoSewing
                Case eTabIndexs.FactorySubOrderNoPacking
                Case eTabIndexs.FactorySubOrderSizeSpec
                Case Else
            End Select

        Catch ex As Exception
            If System.Diagnostics.Debugger.IsAttached = True Then
                Throw New Exception(ex.Message().ToString() & Environment.NewLine & ex.StackTrace.ToString())
            End If
        End Try

    End Sub

    Private Sub Proc_Cancel_BACKUP_20150109(ByVal sender As System.Object, ByVal e As System.EventArgs)
        If Me.FTOrderNo.Properties.Tag.ToString().Trim() <> "" Then

            If Me.FNJobState.SelectedIndex = eJobState.JobCancel Or Me.FNJobState.SelectedIndex = eJobState.JobClose Then
                Dim tTextCurrentJobState As String

                tTextCurrentJobState = ""

                Select Case True
                    Case HI.ST.Lang.Language = HI.ST.Lang.eLang.EN
                        tTextCurrentJobState = "Factory Order No. state is : " & Me.FNJobState.Properties.Items(Me.FNJobState.SelectedIndex).ToString
                    Case HI.ST.Lang.Language = HI.ST.Lang.eLang.TH
                        tTextCurrentJobState = "สถานะ เลขที่ใบสั่งผลิต : " & Me.FNJobState.Properties.Items(Me.FNJobState.SelectedIndex).ToString
                    Case Else
                        tTextCurrentJobState = "Factory Order No. state is : " & Me.FNJobState.Properties.Items(Me.FNJobState.SelectedIndex).ToString
                End Select

                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, "Rejected Factory Order No.", tTextCurrentJobState)

                Exit Sub

            End If

            '...กรณีถึงสถานะ เปิด PO สั่งซื้อไปแล้ว จะต้อง สามารถทำการยกเลิก Job ได้ แต่จะต้อง Clear MPR
            '...กรณีถึงสถานะ Generate MPR จะเคลียร์ หรือ ยกเลิก Job ได้ จะต้อง Message Box ให้ทำการ เคลียร์ MPR ก่อน

            '...FTStatePurchase
            '...FTStateSourcing
            '...FTStateMPR

            Call CheckStateOrder()

            If Me.FTStateMRP.Checked Then
                HI.MG.ShowMsg.mInfo("พบข้อมูล การ Generate MRP ไม่สามารถทำการยกเลิกได้ กรูณาทำการ Clear MRP ก่อนทำการยกเลิก !!!", 1410020017, Me.Text, , MessageBoxIcon.Warning)
                Exit Sub
            End If

            Try
                Dim tSql As String
                Dim nCntFNOrderNo As Integer

                tSql = ""
                tSql = "SELECT COUNT(A.FTOrderNo) AS FNCntOrderNo"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A WITH(NOLOCK)"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "'"

                nCntFNOrderNo = Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0"))

                If nCntFNOrderNo = 0 Then
                    Exit Sub
                End If

                HI.TL.HandlerControl.AddHandlerObj(_RejectOrder)

                Dim oSysLang As New HI.ST.SysLanguage

                Try
                    Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _RejectOrder.Name.ToString.Trim, _RejectOrder)
                Catch ex As Exception
                End Try

                Call HI.ST.Lang.SP_SETxLanguage(_RejectOrder)

                _RejectOrder = New wRejectOrder(Me.FTOrderNo.Text.Trim(), Me.FNJobState.SelectedIndex)

                If _RejectOrder.ShowDialog() = System.Windows.Forms.DialogResult.OK Then
                    Select Case HI.ST.Lang.Language

                        Case HI.ST.Lang.eLang.TH
                            HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, "ดำเนินการยกเลิกรายการเลขที่ใบสั่งผลิต : " & Me.FTOrderNo.Text & " เรียบร้อยแล้ว...")
                        Case Else
                            HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, "Rejected Factory Ordre No. : " & Me.FTOrderNo.Text & " complete...")
                    End Select

                    Me.FNJobState.SelectedIndex = 2

                End If

            Catch ex As Exception
                Throw New Exception(ex.Message().ToString() & Environment.NewLine & ex.StackTrace().ToString())
            End Try

        End If

    End Sub

    Private Sub Proc_Cancel(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmcancel.Click
        If Me.FTOrderNo.Properties.Tag.ToString().Trim() <> "" Then

            If CheckOwner() = False Then
                Exit Sub
            End If

            If (CheckApproveOrder()) Then Exit Sub

            If Me.FNJobState.SelectedIndex = eJobState.JobCancel Or Me.FNJobState.SelectedIndex = eJobState.JobClose Then
                Dim tTextCurrentJobState As String

                tTextCurrentJobState = ""

                Select Case True
                    Case HI.ST.Lang.Language = HI.ST.Lang.eLang.EN
                        tTextCurrentJobState = String.Format("Factory Order No. {0} state is : {1}", {Me.FTOrderNo.Text.Trim, Me.FNJobState.Properties.Items(Me.FNJobState.SelectedIndex).ToString})
                    Case HI.ST.Lang.Language = HI.ST.Lang.eLang.TH
                        tTextCurrentJobState = String.Format("สถานะ เลขที่ใบสั่งผลิต {0} : {1}", {Me.FTOrderNo.Text.Trim, Me.FNJobState.Properties.Items(Me.FNJobState.SelectedIndex).ToString})
                    Case Else
                        tTextCurrentJobState = String.Format("Factory Order No. {0} state is : {1}", {Me.FTOrderNo.Text.Trim, Me.FNJobState.Properties.Items(Me.FNJobState.SelectedIndex).ToString})
                End Select

                REM 2015/02/09 HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, "Rejected Factory Order No.", tTextCurrentJobState)

                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.FTOrderNo_lbl.Text, tTextCurrentJobState)

                If Me.FNJobState.SelectedIndex = eJobState.JobClose Then
                    Exit Sub
                End If

            End If

            '...FTStateReceived
            '...FTStatePurchase
            '...FTStateSourcing
            '...FTStateMPR

            Call CheckStateOrder()

            REM 2015/01/12
            'If Me.FTStateMRP.Checked Then
            '    HI.MG.ShowMsg.mInfo("พบข้อมูล การ Generate MRP ไม่สามารถทำการยกเลิกได้ กรูณาทำการ Clear MRP ก่อนทำการยกเลิก !!!", 1410020017, Me.Text, , MessageBoxIcon.Warning)
            '    Exit Sub
            'End If

            Try
                Dim tSql As String
                Dim nCntFNOrderNo As Integer

                tSql = ""
                tSql = "SELECT COUNT(A.FTOrderNo) AS FNCntOrderNo"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A WITH(NOLOCK)"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "'"

                nCntFNOrderNo = Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0"))

                If nCntFNOrderNo = 0 Then
                    Exit Sub
                End If

                REM 2015/01/20
                '==============================================================================================================
                'HI.TL.HandlerControl.AddHandlerObj(_RejectOrder)
                'Dim oSysLang As New HI.ST.SysLanguage
                'HI.TL.HandlerControl.AddHandlerObj(_RejectOrder)

                'Try
                '    Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleID, _RejectOrder.Name.ToString.Trim, _RejectOrder)
                'Catch ex As Exception
                'End Try

                'Call HI.ST.Lang.SP_SETxLanguage(_RejectOrder)
                '==============================================================================================================

                _RejectOrder = New wRejectOrder(Me.FTOrderNo.Text.Trim(), Me.FNJobState.SelectedIndex)

                If _RejectOrder.ShowDialog() = System.Windows.Forms.DialogResult.OK Then

                    '...send mail contract to participant/relate factory order no.
                    '=======================================================================================================================================================

                    '=======================================================================================================================================================
                    Select Case HI.ST.Lang.Language
                        Case HI.ST.Lang.eLang.TH
                            HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, "ดำเนินการยกเลิกรายการเลขที่ใบสั่งผลิต : " & Me.FTOrderNo.Text & " เรียบร้อยแล้ว...")
                        Case Else
                            HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, "Rejected Factory Ordre No. : " & Me.FTOrderNo.Text & " complete...")
                    End Select

                    Me.FNJobState.SelectedIndex = 2
                    Me.FTStateOrderApp.Checked = False

                End If

            Catch ex As Exception
                'Throw New Exception(ex.Message().ToString() & Environment.NewLine & ex.StackTrace().ToString())
                If System.Diagnostics.Debugger.IsAttached = True Then
                    MsgBox(ex.Message().ToString() & Environment.NewLine & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title.ToString)
                End If

            End Try

        End If

    End Sub

    Private Sub Proc_Close(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmExit.Click
        Me.Close()
    End Sub

#End Region

#Region "Sub PROC"

    Private _FNHSysBuyGrpPer As Double = 0

    Private Sub W_PRCxSwitchTab()

        Me.ocmSendApprove.Visible = (Me.otab.SelectedTabPage.Name = otpOrderBreakdown.Name)
        Me.ocmcancel.Visible = (Me.otab.SelectedTabPage.Name = otpOrderBreakdown.Name)

        Me.ocmcopy.Visible = ((Me.otab.SelectedTabPage.Name = otpOrderBreakdown.Name) Or (Me.otab.SelectedTabPage.Name = otpSubOrder.Name))

        Me.ocmDivert.Visible = (Me.otab.SelectedTabPage.Name = otpSubOrder.Name)

        REM 2014/06/20 Me.ocmNewRecord.Visible = ((Me.otab.SelectedTabPage.Name = otpSubOrder.Name) Or (Me.otab.SelectedTabPage.Name = Me.otpSubOrderSewInfo.Name) Or (Me.otab.SelectedTabPage.Name = Me.otpSubOrderPackInfo.Name))

        Me.ocmAddDT.Visible = ((Me.otab.SelectedTabPage.Name = otpSubOrder.Name) Or (Me.otab.SelectedTabPage.Name = Me.otpSubOrderSewInfo.Name) Or (Me.otab.SelectedTabPage.Name = Me.otpSubOrderPackInfo.Name))
        Me.ocmRemoveDT.Visible = ((Me.otab.SelectedTabPage.Name = otpSubOrder.Name) Or (Me.otab.SelectedTabPage.Name = Me.otpSubOrderSewInfo.Name) Or (Me.otab.SelectedTabPage.Name = Me.otpSubOrderPackInfo.Name))

        Me.ocmInsertSeqNo.Visible = ((Me.otab.SelectedTabPage.Name = Me.otpSubOrderSewInfo.Name) Or (Me.otab.SelectedTabPage.Name = Me.otpSubOrderPackInfo.Name))

        Me.ocmAddOrdSizeSpec.Visible = (Me.otab.SelectedTabPage.Name = otpSubOrderSizeSpec.Name)
        Me.ocmRemoveOrdSizeSpec.Visible = (Me.otab.SelectedTabPage.Name = otpSubOrderSizeSpec.Name)

        Me.ocmimportcomponentfrombom.Visible = (Me.otab.SelectedTabPage.Name = otbSubOrderComponent.Name Or Me.otab.SelectedTabPage.Name = otpSubOrderSewInfo.Name Or Me.otab.SelectedTabPage.Name = otpSubOrderPackInfo.Name Or Me.otab.SelectedTabPage.Name = otpSubOrderSizeSpec.Name)
        Me.ocmaddcomponent.Visible = (Me.otab.SelectedTabPage.Name = otbSubOrderComponent.Name)
        Me.ocmremovecomponent.Visible = (Me.otab.SelectedTabPage.Name = otbSubOrderComponent.Name)

        ocmreseq.Visible = (Me.otab.SelectedTabPage.Name = otbSubOrderComponent.Name) Or (Me.otab.SelectedTabPageIndex = eTabIndexs.FactorySubOrderNoSewing) Or (Me.otab.SelectedTabPageIndex = eTabIndexs.FactorySubOrderNoPacking)

        ocmdeleteallcolrway.Visible = (Me.otab.SelectedTabPage.Name = otpSubOrder.Name Or Me.otab.SelectedTabPage.Name = otpOrderBreakdown.Name)
        'ocmdeleteallcolrway.Enabled = ocmRemoveDT.Enabled
        ocmdeleteallsize.Visible = (Me.otab.SelectedTabPage.Name = otpSubOrder.Name Or Me.otab.SelectedTabPage.Name = otpOrderBreakdown.Name)
        'ocmdeleteallsize.Enabled = ocmRemoveDT.Enabled
        ocmchangecolorway.Visible = (Me.otab.SelectedTabPage.Name = otpSubOrder.Name)
        ' ocmchangecolorway.Enabled = ocmAddDT.Enabled

        Me.ocmcombinebreakdown.Visible = (Me.otab.SelectedTabPage.Name = otpSubOrder.Name)


        HI.TL.METHOD.CallActiveToolBarFunction(Me)

        If (Me.otab.SelectedTabPage.Name = otpSubOrder.Name) Then
            _FNHSysBuyGrpPer = Double.Parse(Val(HI.Conn.SQLConn.GetField("SELECT TOP 1 FNQtySpecial  FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TMERMBuyGrp WITH(NOLOCK) WHERE FTBuyGrpCode='" & HI.UL.ULF.rpQuoted(FNHSysBuyGrpId.Text) & "' ", Conn.DB.DataBaseName.DB_MASTER, "0")))


            Dim _Qry As String = ""

            _Qry = "SELECT TOP 1  FTStateAutoExtraManual "
            _Qry &= vbCrLf & "FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TMERMVenderPram AS A WITH(NOLOCK)"
            _Qry &= vbCrLf & " WHERE FTVenderPramCode='" & HI.UL.ULF.rpQuoted(Me.FNHSysVenderPramId.Text) & "'"

            _FTStateAutoExtraManual = (HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MASTER, "") = "1")

        End If

    End Sub

    Private Sub Proc_SaveSubOrder(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmAddDT.Click
        If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
            HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
            Exit Sub
        End If

        Call CheckStateOrder()
        If CheckBookingRefer() Then
            Exit Sub
        End If

        If CheckOwner() = False Then
            Exit Sub
        End If
        If (CheckApproveOrder()) Then Exit Sub
        Select Case Me.otab.SelectedTabPageIndex
            Case eTabIndexs.FactoryOrderNo
                '...Nothing
            Case eTabIndexs.FactorySubOrderNo
                Call CheckStateSubOrder()

                If Me.FTSubOrderNo.Properties.Tag = "" Then
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, FTSubOrderNo_lbl.Text)
                    Me.FTSubOrderNo.Focus()
                    Exit Sub
                End If

                If FTColorway.Text.Trim() = "" Then
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, FTColorway_lbl.Text)
                    Me.FTColorway.Focus()
                    Exit Sub
                End If

                If FTSizeBreakDown.Text.Trim() = "" Then
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, FTSizeBreakDown_lbl.Text)
                    Me.FTSizeBreakDown.Focus()
                    Exit Sub
                End If

                If CreateDocumentMI(Me.FTOrderNo.Text, FTSubOrderNo.Text) Then
                    Exit Sub
                End If

                Dim _Colorway As String = FTColorway.Text.Trim()
                Dim _SizeBreakDown As String = FTSizeBreakDown.Text.Trim()
                Dim _BdOrg As Integer = GetBreakDownQuantity(FTOrderNo.Text.Trim(), FTSubOrderNo.Text.Trim(), _Colorway, _SizeBreakDown)
                Dim _BdProd As Integer = 0
                Dim _NewQuantity As Integer = FNQuantity.Value
                '...FTStateSubProduction

                'If FTColorway.Properties.ReadOnly Then

                '    Dim _Qry As String = ""
                '    _Qry = ""
                '    _Qry = "UPDATE A"
                '    _Qry &= Environment.NewLine & "SET A.[FNPrice] = " & FNPrice.Value
                '    _Qry &= Environment.NewLine & "   ,A.[FNAmt] = Convert(numeric(18,2), A.[FNQuantity]  * " & FNPrice.Value & ")"
                '    _Qry &= Environment.NewLine & "   ,A.[FNAmntExtra] = Convert(numeric(18,2), A.[FNExtraQty]  * " & FNPrice.Value & ")"
                '    _Qry &= Environment.NewLine & "   ,A.[FNGrandAmnt] = Convert(numeric(18,2), A.[FNGrandQuantity]  * " & FNPrice.Value & ")"
                '    _Qry &= Environment.NewLine & "   ,A.[FNAmntQtyTest] = Convert(numeric(18,2), A.[FNGarmentQtyTest]  * " & FNPrice.Value & ")"
                '    _Qry &= Environment.NewLine & "   ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                '    _Qry &= Environment.NewLine & "   ,A.[FDUpdDate] = " & HI.UL.ULDate.FormatDateDB
                '    _Qry &= Environment.NewLine & "   ,A.[FTUpdTime] = " & HI.UL.ULDate.FormatTimeDB
                '    _Qry &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A"
                '    _Qry &= Environment.NewLine & "WHERE A.[FTOrderNo] = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                '    _Qry &= Environment.NewLine & "      AND A.[FTSubOrderNo] = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'"
                '    _Qry &= Environment.NewLine & "      AND A.[FNHSysMatColorId] = " & Val(FTColorway.Properties.Tag.ToString)
                '    _Qry &= Environment.NewLine & "      AND A.[FNHSysMatSizeId] = " & Val(FTSizeBreakDown.Properties.Tag.ToString)

                '    HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)

                '    Me.FTColorway.Properties.Tag = ""
                '    Me.FTColorway.Text = ""
                '    Me.FTSizeBreakDown.Properties.Tag = ""
                '    Me.FTSizeBreakDown.Text = ""

                '    HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)

                '    Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(Me.FTSubOrderNo.Properties.Tag.ToString())
                '    Call W_PRCbShowBrowseDataCurrencyInfo()
                '    Call W_PRCbShowBrowseDataOrderBreakdownInfo()
                '    Call W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt()
                '    Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(Me.FTOrderNo.Properties.Tag.ToString().Trim(), Me.FTSubOrderNo.Properties.Tag.ToString().Trim())
                '    Call PROC_SETxShowBrowsePackingCartonInfo()

                '    Exit Sub
                'End If

                If (FTStateSubCutting.Checked) Or (Me.FTStateSubSewing.Checked) Or (Me.FTStateSubPacking.Checked) Then

                    _BdProd = GetBreakDownQuantityProduction(FTOrderNo.Text.Trim(), FTSubOrderNo.Text.Trim(), FTColorway.Text.Trim(), FTSizeBreakDown.Text.Trim())

                    If FNQuantity.Value > _BdOrg Then
                        HI.MG.ShowMsg.mInfo("พบ Transaction Order Production ไม่สามารถทำการ เพิ่มยอดได้ !!!", 1408088823, Me.Text, Me.FTOrderNo.Text, MessageBoxIcon.Warning)
                        Exit Sub

                    End If

                    If FNQuantity.Value < _BdProd Then
                        HI.MG.ShowMsg.mInfo("พบ Transaction Order Production ไม่สามารถทำการ ลดยอดได้น้อยกว่าจำนวน สั่งตัด !!! (" & _BdProd.ToString & ") ", 1478044003, Me.Text, Me.FTOrderNo.Text, MessageBoxIcon.Warning)
                        Exit Sub
                    End If

                    'HI.MG.ShowMsg.mInfo("พบ Transaction Order Production ไม่สามารถทำการ เพิ่มหรือแก้ไขยอดได้ !!!", 1408080003, Me.Text, Me.FTOrderNo.Text, MessageBoxIcon.Warning)
                    'Exit Sub

                    If _BdOrg > 0 Then
                        Dim _Qry As String = ""

                        _Qry = " SELECT TOP 1 FTNikePOLineItem"
                        _Qry &= vbCrLf & "   FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS X WITH(NOLOCK) "
                        _Qry &= vbCrLf & " WHERE  (FTOrderNo = N'" & HI.UL.ULF.rpQuoted(FTOrderNo.Text.Trim()) & "') "
                        _Qry &= vbCrLf & "    AND (FTSubOrderNo =  N'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text.Trim()) & "')"
                        _Qry &= vbCrLf & "    AND (FTColorway =  N'" & HI.UL.ULF.rpQuoted(FTColorway.Text.Trim()) & "') "
                        _Qry &= vbCrLf & "    AND (FTSizeBreakDown =  N'" & HI.UL.ULF.rpQuoted(FTSizeBreakDown.Text.Trim()) & "')"

                        If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "") <> FNColorSeq.Value.ToString Then
                            HI.MG.ShowMsg.mInfo("พบ Transaction Order Production ไม่สามารถทำการ เปลี่ยน PO Line Item ได้ !!! ", 1498044713, Me.Text, Me.FTOrderNo.Text, MessageBoxIcon.Warning)
                            Exit Sub
                        End If
                    End If
                End If

                Dim sSQL As String

                '...modify 2015/01/08
                '========================================================================================================================================================================================
                sSQL = ""
                sSQL = "SELECT TOP 1 ISNULL(A.FTSubOrderNoDivertRef, '') AS FTSubOrderNoDivertRef"
                sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK)"
                sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                    HI.MG.ShowMsg.mInfo("คุณไม่สามารถทำการ เพิ่มหรือแก้ไขยอดได้ !!! {Divert Factory Sub Order No} !!!", 1501080004, Me.Text, Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text, MessageBoxIcon.Warning)
                    Exit Sub
                End If
                '========================================================================================================================================================================================

                sSQL = ""
                sSQL = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId, A.FNQuantity, A.FNPrice, A.FNExtraQty"
                sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS A (NOLOCK)"
                sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"
                sSQL &= Environment.NewLine & "      AND A.FNHSysMatColorId = " & Val(Me.FTColorway.Properties.Tag)
                sSQL &= Environment.NewLine & "      AND A.FNHSysMatSizeId = " & Val(Me.FTSizeBreakDown.Properties.Tag) & ";"

                Dim tmpDTBreakdown As System.Data.DataTable

                tmpDTBreakdown = HI.Conn.SQLConn.GetDataTable(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If Not DBNull.Value.Equals(tmpDTBreakdown) AndAlso tmpDTBreakdown.Rows.Count > 0 Then
                    '...already exists record
                    Dim numFNQuantityPrev As Integer, numFNQuantityAdjust As Integer
                    Dim numFNPricePrev As Double, numFNPriceAFAdjust As Integer
                    Dim numFNExtraQtyPrev As Double, numFNExtraQtyAdjust As Integer

                    numFNQuantityPrev = 0 : numFNPricePrev = 0 : numFNExtraQtyPrev = 0
                    numFNQuantityAdjust = 0 : numFNPriceAFAdjust = 0 : numFNExtraQtyAdjust = 0

                    For Each oDataRow As System.Data.DataRow In tmpDTBreakdown.Rows
                        numFNQuantityPrev = Val(oDataRow!FNQuantity.ToString)
                        numFNPricePrev = Val(oDataRow!FNPrice.ToString)
                        numFNExtraQtyPrev = Val(oDataRow!FNExtraQty.ToString)

                        Exit For

                    Next

                    numFNQuantityAdjust = Me.FNQuantity.Value
                    numFNPriceAFAdjust = Me.FNPrice.Value
                    numFNExtraQtyAdjust = Me.FNExtraQtySubOrder.Value

                    If (numFNQuantityPrev + numFNPricePrev + numFNExtraQtyPrev) <> (numFNQuantityAdjust + numFNPriceAFAdjust + numFNExtraQtyAdjust) Then
                        If (Me.FTStateSubMRP.Checked) Then
                            HI.MG.ShowMsg.mInfo("พบข้อมูล การ Generate MPR ก่อนหน้านี้แล้ว หากท่่านทำการแก้ไขรายการข้อมูล Breakdown ของ Sub Order No. ควรทำการคำนวณ MPR ใหม่อีกครั้ง !!!", 16042701787, Me.Text, Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text, MessageBoxIcon.Warning)
                        End If

                    End If

                End If

                If Not tmpDTBreakdown Is Nothing Then tmpDTBreakdown.Dispose()

                If CheckDivertAfter(Me.FTOrderNo.Text, FTSubOrderNo.Text) = False Then
                    Exit Sub
                End If

                If CreateDocumentMI(Me.FTOrderNo.Text, FTSubOrderNo.Text) Then
                    Exit Sub
                End If

                Call W_PRCbSaveSubOrderDT()
                Call CreateDataLogBreakDownChange(FTOrderNo.Text.Trim(), FTSubOrderNo.Text.Trim(), _Colorway, _SizeBreakDown, _BdOrg, _NewQuantity)

                otbsuborderno.SelectedTabPageIndex = 0
            Case eTabIndexs.FactorySubOrderNoSewing
                Call W_PRCbSaveSubOrderSewing()
            Case eTabIndexs.FactorySubOrderNoPacking
                Call W_PRCbSaveSubOrderPack()
            Case eTabIndexs.FactorySubOrderNoComponent
        End Select
    End Sub

    Private Sub Proc_DivertSubOrder(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmDivert.Click
        If CheckOwner() = False Then
            Exit Sub
        End If
        'If Not System.Diagnostics.Debugger.IsAttached = True Then Exit Sub
        If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
            HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
            Exit Sub
        End If
        Call CheckStateOrder()
        Call CheckStateSubOrder()
        If (CheckApproveOrder()) Then Exit Sub
        REM 20150114
        'If Me.FTStateSubCutting.Checked = True Or Me.FTStateSubSewing.Checked = True Or Me.FTStateSubPacking.Checked = True Then
        '    Dim tTextState As String
        '    tTextState = ""
        '    If Me.FTStateSubCutting.Checked = True Then
        '        tTextState = IIf(tTextState <> "", "|" & Me.FTStateSubCutting.Text, Me.FTStateSubCutting.Text)
        '    End If
        '    If Me.FTStateSubSewing.Checked = True Then
        '        tTextState = IIf(tTextState <> "", "|" & Me.FTStateSubSewing.Text, Me.FTStateSubSewing.Text)
        '    End If
        '    If Me.FTStateSubPacking.Checked = True Then
        '        tTextState = IIf(tTextState <> "", "|" & Me.FTStateSubPacking.Text, Me.FTStateSubPacking.Text)
        '    End If

        '    HI.MG.ShowMsg.mInfo("พบ Transaction ต่างๆของ FO No Order Sub ในกระบวนงานขั้นตอนการผลิต" & Microsoft.VisualBasic.vbCrLf & "ไม่สามารถทำการ Divert FO No. Sub ได้ !!!", 1501140001, Me.Text, Me.FTOrderNo.Text & Environment.NewLine & tTextState, MessageBoxIcon.Warning)

        '    Exit Sub

        'End If

        If FTStateSubCutting.Checked Then
            HI.MG.ShowMsg.mInfo("มีการตัดแล้วไม่สามารถทำการ Divert หรือแก้ไขได้!!!", 1509130075, Me.Text, , MessageBoxIcon.Warning)
            Exit Sub
        End If
        If Me.FTStateMRP.Checked = True Then
            '...ถ้ามีการ Generate MPR ไปแล้ว ทำการ Divert ==> To Sub Order No. Target ??? User จะต้องทำการ คำนวณ MPR ของ Sub Order No. ที่มีการ Divert เพิ่มเข้ามาเสมอ !!!
            'HI.MG.ShowMsg.mInfo("พบข้อมูล การ Generate MPR ไม่สามารถทำการ DIVERT ข้อมูล Breakdown ได้ กรูณาทำการ Clear MPR ก่อนทำการ DIVERT ข้อมูล Breakdown !!!", 1410020017, Me.Text, , MessageBoxIcon.Warning)
            'HI.MG.ShowMsg.mInfo("พบรายการข้อมูลการ Generate MPR สำหรับรายการ Factory sub order no. นี้" & Microsoft.VisualBasic.vbCrLf & _
            '                    "หลังจากที่ท่านทำการ Divert Sub Order No Breakdown แล้ว." & Microsoft.VisualBasic.vbCrLf & _
            '                   "ท่านจะต้องทำการ คำนวณรายการ MPR ใหม่อีกครั้ง !!!", 1501080005, Me.Text, Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text, MessageBoxIcon.Warning)
            'MsgBox("พบรายการข้อมูลการ Generate MPR สำหรับรายการ Factory sub order no. นี้" & Environment.NewLine & "หลังจากที่ท่านทำการ Divert Sub Order No Breakdown แล้ว." & Environment.NewLine & "ท่านจะต้องทำการ คำนวณรายการ MPR ใหม่อีกครั้ง !!!", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, My.Application.Info.Title.ToString)

            If HI.MG.ShowMsg.mConfirmProcess("พบรายการข้อมูลการ Generate MPR สำหรับรายการ FO No. Sub นี้" & Microsoft.VisualBasic.vbCrLf &
                                             "หลังจากที่ท่านทำการ Divert FO No. Sub Breakdown แล้ว จะต้องทำการคำนวณรายการ MPR ใหม่อีกครั้ง!!!" & Microsoft.VisualBasic.vbCrLf &
                                             "ท่านต้องการดำเนินการต่อใช่หรือไม่ ?", 1501080005, Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text) = False Then
                Exit Sub

            End If

        End If

        If Me.FTOrderNo.Text.Trim <> "" Then
            If Me.FTSubOrderNo.Text.Trim <> "" Then
                _wDivertOrderSub = New wDivertOrderSub()

                With _wDivertOrderSub

                    .FTOrderNoSrc = Me.FTOrderNo.Text.Trim
                    .FTSubOrderSrc = Me.FTSubOrderNo.Text

                    If .ShowDialog() = System.Windows.Forms.DialogResult.OK Then

                        HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, "Divert Sub Order No. Breakdown")

                        HI.MG.ShowMsg.mInfo("กรุณาทำการ คำนวณรายการ MPR ใหม่อีกครั้ง...", 1501130001, Me.Text, Me.FTOrderNo.Text, MessageBoxIcon.Information)

                        If Me.FTSubOrderNo.Text.Trim <> "" Then
                            Dim sSQL As String

                            sSQL = ""

                            sSQL = "SELECT TOP 1 A.FTSubOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                            If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "").ToUpper = Me.FTSubOrderNo.Text.Trim.ToUpper Then

                                Call W_PRCbShowBrowseDataOrderBreakdownInfo()
                                Call W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt()
                                Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(Me.FTSubOrderNo.Text.Trim)

                            End If

                        End If


                    Else
                        '...Nothing 
                    End If

                End With

            Else

                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTSubOrderNo_lbl.Text)
                FTSubOrderNo.Focus()

            End If

        Else

            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTOrderNo_lbl.Text)
            FTOrderNo.Focus()

        End If

    End Sub

    Private Sub Proc_DeleteSubOrder(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmRemoveDT.Click

        If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
            HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
            Exit Sub
        End If

        Call CheckStateOrder()

        If CheckOwner() = False Then
            Exit Sub
        End If

        If CheckCombine() = True Then
            HI.MG.ShowMsg.mInfo("ไม่สามารถลบ เนื่องจากใบสั่งผลิตนี้ได้ มาจากการแบ่งงาน", 1511181420, Me.Text)
            Exit Sub
        End If
        If (CheckApproveOrder()) Then Exit Sub
        Select Case Me.otab.SelectedTabPageIndex
            Case eTabIndexs.FactoryOrderNo
            Case eTabIndexs.FactorySubOrderNo
                Call CheckStateSubOrder()

                If Me.FTSubOrderNo.Properties.Tag = "" Then
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, FTSubOrderNo_lbl.Text)
                    Me.FTSubOrderNo.Focus()
                    Exit Sub
                End If

                If FTColorway.Text.Trim() = "" Then
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, FTColorway_lbl.Text)
                    Me.FTColorway.Focus()
                    Exit Sub
                End If

                If FTSizeBreakDown.Text.Trim() = "" Then
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, FTSizeBreakDown_lbl.Text)
                    Me.FTSizeBreakDown.Focus()
                    Exit Sub
                End If

                Dim _Colorway As String = FTColorway.Text.Trim()
                Dim _SizeBreakDown As String = FTSizeBreakDown.Text.Trim()
                Dim _BdOrg As Integer = GetBreakDownQuantity(FTOrderNo.Text.Trim(), FTSubOrderNo.Text.Trim(), _Colorway, _SizeBreakDown)

                If CheckBookingRefer() Then
                    Exit Sub
                End If

                If CreateDocumentMI(Me.FTOrderNo.Text, FTSubOrderNo.Text) Then
                    Exit Sub
                End If

                '...FTStateSubProduction.Check
                If (FTStateSubCutting.Checked) Or (Me.FTStateSubSewing.Checked) Or (Me.FTStateSubPacking.Checked) Then
                    HI.MG.ShowMsg.mInfo("พบ Transaction Order Productionไม่สามารถทำการ เพิ่มหรือแก้ไขยอดได้ !!!", 1408080003, Me.Text, Me.FTOrderNo.Text, MessageBoxIcon.Warning)
                    Exit Sub
                End If

                '...modify 2015/01/08
                '========================================================================================================================================================================================
                Dim sSQL As String
                sSQL = ""
                sSQL = "SELECT TOP 1 ISNULL(A.FTSubOrderNoDivertRef, '') AS FTSubOrderNoDivertRef"
                sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK)"
                sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                    HI.MG.ShowMsg.mInfo("คุณไม่สามารถทำการ เพิ่มหรือแก้ไขยอดได้ !!! {Divert Factory Sub Order No} !!!", 1501080004, Me.Text, Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text, MessageBoxIcon.Warning)
                    Exit Sub
                End If
                '========================================================================================================================================================================================

                If CheckDivertAfter(Me.FTOrderNo.Text, FTSubOrderNo.Text) = False Then
                    Exit Sub
                End If

                Call W_PRCbDeleteSubOrderDT()
                Call CreateDataLogBreakDownChange(FTOrderNo.Text.Trim(), FTSubOrderNo.Text.Trim(), _Colorway, _SizeBreakDown, _BdOrg, 0)

                otbsuborderno.SelectedTabPageIndex = 0
            Case eTabIndexs.FactorySubOrderNoSewing

                Call W_PRCbDeleteSubOrderSewing()

            Case eTabIndexs.FactorySubOrderNoPacking

                Call W_PRCbDeleteSubOrderPack()

            Case eTabIndexs.FactorySubOrderSizeSpec

            Case eTabIndexs.FactorySubOrderNoComponent

            Case Else

        End Select

    End Sub

    Private Sub Proc_InsertItemSeqNo(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmInsertSeqNo.Click
        If CheckOwner() = False Then
            Exit Sub
        End If
        Call CheckStateOrder()

        If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
            HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
            Exit Sub
        End If

        If (CheckApproveOrder()) Then Exit Sub

        Select Case Me.otab.SelectedTabPageIndex
            Case eTabIndexs.FactorySubOrderNoSewing
                REM 2015/01/29 Call PROC_GETbInsertItemSewingSeqNo()

                If Me.FTOrderNo.Text.Trim <> "" Then

                    If Me.FTSubOrderNo.Text.Trim <> "" Then

                        _wInsertSeqSewingProc = New wInsertSeqSewingProc()

                        With _wInsertSeqSewingProc

                            .FTOrderNo = Me.FTOrderNo.Text.Trim
                            .FTSubOrderNo = Me.FTSubOrderNo.Text.Trim

                            If .ShowDialog() = System.Windows.Forms.DialogResult.OK Then
                                '...validate revised sewing sequence

                                '...update revised sewing information
                                '======================================================================================================================================================================================
                                Dim tSQLRevised As String

                                tSQLRevised = ""
                                tSQLRevised = "SELECT TOP 1 A.FTStateApprovedSewing FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                                If HI.Conn.SQLConn.GetField(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "1" Then '...revised sewing sequence process
                                    tSQLRevised = ""
                                    tSQLRevised = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                                    tSQLRevised &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                                    tSQLRevised &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                                    tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                                    tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                                    tSQLRevised &= Environment.NewLine & "SET @FTRevisedInfoBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "';"
                                    tSQLRevised &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                                    tSQLRevised &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                                    tSQLRevised &= Environment.NewLine & "SELECT @FDRevisedInfoDate = CONVERT(VARCHAR(10), GETDATE(), 111), @FTRevisedInfoTime = CONVERT(VARCHAR(8), GETDATE(), 114)"
                                    tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                                    tSQLRevised &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                                    tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                                    tSQLRevised &= Environment.NewLine & "UPDATE A"
                                    tSQLRevised &= Environment.NewLine & "SET A.FTStateApprovedSewing = N'0'"
                                    tSQLRevised &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                                    tSQLRevised &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                                    tSQLRevised &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                                    If HI.Conn.SQLConn.ExecuteNonQuery(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                                        If System.Diagnostics.Debugger.IsAttached = True Then
                                            MsgBox("Execute data complete (Reviesed Factory Sub Order No. Sewing Sequence) complete...", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, My.Application.Info.Title)
                                        End If
                                    End If
                                End If
                                '======================================================================================================================================================================================

                                HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, "Insert Sewing Sequence")

                                '...refresh data screen sewing sequence XXX
                                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)
                                Me.FTImageSewing.Image = Nothing
                                Call W_PRCbShowBrowseDataSubOrderSewingInfo()
                                Me.FTSewDescription.Focus()

                            Else
                                '...Nothing 
                            End If

                        End With

                    Else
                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTSubOrderNo_lbl.Text)
                        FTSubOrderNo.Focus()
                    End If

                Else
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTOrderNo_lbl.Text)
                    FTOrderNo.Focus()
                End If

            Case eTabIndexs.FactorySubOrderNoPacking
                REM 2015/01/29 Call PROC_GETbInsertItemPackingSeqNo()

                If Me.FTOrderNo.Text.Trim <> "" Then

                    If Me.FTSubOrderNo.Text.Trim <> "" Then

                        _wInsertSeqPackingProc = New wInsertSeqPackingProc()

                        With _wInsertSeqPackingProc

                            .FTOrderNo = Me.FTOrderNo.Text.Trim
                            .FTSubOrderNo = Me.FTSubOrderNo.Text.Trim

                            If .ShowDialog() = System.Windows.Forms.DialogResult.OK Then
                                '...validate revised packing sequence

                                '...update revised packing information
                                '======================================================================================================================================================================================
                                Dim tSQLRevised As String

                                tSQLRevised = ""
                                tSQLRevised = "SELECT TOP 1 A.FTStateApprovedPacking FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                                If HI.Conn.SQLConn.GetField(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "1" Then '...revised sewing sequence process
                                    tSQLRevised = ""
                                    tSQLRevised = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                                    tSQLRevised &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                                    tSQLRevised &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                                    tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                                    tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                                    tSQLRevised &= Environment.NewLine & "SET @FTRevisedInfoBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "';"
                                    tSQLRevised &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                                    tSQLRevised &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                                    tSQLRevised &= Environment.NewLine & "SELECT @FDRevisedInfoDate = CONVERT(VARCHAR(10), GETDATE(), 111), @FTRevisedInfoTime = CONVERT(VARCHAR(8), GETDATE(), 114)"
                                    tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                                    tSQLRevised &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                                    tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                                    tSQLRevised &= Environment.NewLine & "UPDATE A"
                                    tSQLRevised &= Environment.NewLine & "SET A.FTStateApprovedPacking = N'0'"
                                    tSQLRevised &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                                    tSQLRevised &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                                    tSQLRevised &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                                    If HI.Conn.SQLConn.ExecuteNonQuery(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                                        If System.Diagnostics.Debugger.IsAttached = True Then
                                            MsgBox("Execute data complete (Reviesed Factory Sub Order No. Packing Sequence) complete...", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, My.Application.Info.Title)
                                        End If
                                    End If
                                End If
                                '======================================================================================================================================================================================

                                HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, "Insert Packing Sequence")

                                '...refresh data screen sewing sequence XXX
                                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)
                                Me.FTImagePacking.Image = Nothing
                                Call W_PRCbShowBrowseDataSubOrderPackInfo()
                                Me.FTPackDescription.Focus()

                            Else
                                '...Nothing 
                            End If

                        End With

                    Else
                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTSubOrderNo_lbl.Text)
                        FTSubOrderNo.Focus()
                    End If

                Else
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTOrderNo_lbl.Text)
                    FTOrderNo.Focus()
                End If

            Case Else
                '...Nothing
        End Select

    End Sub

    Private Sub Proc_NewItem(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmNewRecord.Click

        If CheckOwner() = False Then
            Exit Sub
        End If

        If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
            HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
            Exit Sub
        End If

        If (CheckApproveOrder()) Then Exit Sub

        Select Case Me.otab.SelectedTabPageIndex
            Case eTabIndexs.FactoryOrderNo
                '...Nothing
            Case eTabIndexs.FactorySubOrderNo
                Call W_PRCbClearBreakdownSubOrderDT()
            Case eTabIndexs.FactorySubOrderNoSewing
                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)

                Me.FTImageSewing.Image = Nothing

                Dim tSql As String
                tSql = ""
                tSql = "SELECT ISNULL(MAX(A.FNSewSeq),0) + 1"
                tSql &= ControlChars.CrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A"
                tSql &= ControlChars.CrLf & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                tSql &= ControlChars.CrLf & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"

                Dim nFNSewSeqDefault As Integer
                nFNSewSeqDefault = Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0"))
                Me.FTSewDescription.Focus()
                Me.FNSewSeq.Value = nFNSewSeqDefault
            Case eTabIndexs.FactorySubOrderNoPacking
                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)

                Me.FTImagePacking.Image = Nothing

                Dim tSql As String
                tSql = ""
                tSql = "SELECT ISNULL(MAX(A.FNPackSeq),0) + 1"
                tSql &= ControlChars.CrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A"
                tSql &= ControlChars.CrLf & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                tSql &= ControlChars.CrLf & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"

                Dim nFNPackSeqDefault As Integer
                nFNPackSeqDefault = Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0"))
                Me.FTPackDescription.Focus()
                Me.FNPackSeq.Value = nFNPackSeqDefault
            Case eTabIndexs.FactorySubOrderSizeSpec

        End Select

    End Sub

    Private Function CheckCreateQASizeSpec() As Boolean
        Dim _Qry As String = ""

        _Qry = "SELECT TOP 1 FTOrderNo "
        _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_PROD) & "].dbo.TPRODTQC_Meas AS X WITH(NOLOCK)"
        _Qry &= vbCrLf & " WHERE FTOrderNo='" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"

        If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_PROD, "") <> "" Then
            HI.MG.ShowMsg.mInfo("พบข้อมูลการทำ QC Size Spec แล้วไม่สามารถทำการลบหรือแก้ไขได้ !!!", 1510270549, Me.Text, , MessageBoxIcon.Warning)
            Return True
        Else
            Return False
        End If

    End Function

    Private Sub Proc_AddNewSubOrderSizeSpec(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmAddOrdSizeSpec.Click
        If Me.otab.SelectedTabPageIndex = eTabIndexs.FactorySubOrderSizeSpec Then
            If CheckOwner() = False Then
                Exit Sub
            End If

            If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
                HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
                Exit Sub
            End If
            If (CheckApproveOrder()) Then Exit Sub
            If CheckCreateQASizeSpec() = True Then Exit Sub
            Call W_PRCxInitNewRowSizeSpec(oDBdtSizeSpecView)
        End If
    End Sub

    Private Sub Proc_DeleteRowSubOrderSizeSpec(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmRemoveOrdSizeSpec.Click
        If Me.otab.SelectedTabPageIndex = eTabIndexs.FactorySubOrderSizeSpec Then
            If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
                HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
                Exit Sub
            End If
            If CheckOwner() = False Then
                Exit Sub
            End If
            If CheckCombine() = True Then
                HI.MG.ShowMsg.mInfo("ไม่สามารถลบ เนื่องจากใบสั่งผลิตนี้ได้ มาจากการแบ่งงาน", 1511181420, Me.Text)
                Exit Sub
            End If

            If (CheckApproveOrder()) Then Exit Sub

            If CheckCreateQASizeSpec() = True Then Exit Sub
            Call W_PRCbDeleteDataSizeSpec()
        End If
    End Sub

#End Region

#Region "Procedure And Function"

    Private Sub W_PRCxPreview_OrderNo()

        If Me.FTOrderNo.Text.Trim() = "" Then
            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.FTOrderNo_lbl.Text)
            Me.FTOrderNo.Focus()
            Me.FTOrderNo.SelectionStart = 0
            Me.FTOrderNo.SelectionLength = Len(Me.FTOrderNo.Text)
            Exit Sub
        End If

        Dim tSql As String

        tSql = ""
        tSql = "SELECT A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';"

        If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") = "" Then
            Me.FTOrderNo.Focus()
            Me.FTOrderNo.SelectionStart = 0
            Me.FTOrderNo.SelectionLength = Len(Me.FTOrderNo.Text)
            Exit Sub
        End If
        '...Browse Report Factory Order No.
        Try
            Dim oDBdtOrderNo As System.Data.DataTable
            Dim tFTImage1 As String, tFTImage2 As String, tFTImage3 As String, tFTImage4 As String
            Dim tPath As String
            Dim tPathRefFTOrderNoImage1 As String, tPathRefFTOrderNoImage2 As String, tPathRefFTOrderNoImage3 As String, tPathRefFTOrderNoImage4 As String
            Dim tGetMainMaterialDesc As String

            tPath = ""
            tPath = HI.ST.SysInfo.SysPath & "Order\"

            tSql = ""
            tSql = "SELECT A.FTOrderNo, ISNULL(A.FTImage1,'') AS FTImage1, ISNULL(A.FTImage2,'') AS FTImage2, ISNULL(A.FTImage3,'') AS FTImage3, ISNULL(A.FTImage4,'') AS FTImage4"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';"

            oDBdtOrderNo = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtOrderNo.Rows.Count > 0 Then

                For Each oCol As DataColumn In oDBdtOrderNo.Columns
                    Select Case oCol.ColumnName
                        Case "FTImage1"
                            If oDBdtOrderNo.Rows(0).Item("FTImage1").ToString() Like "*.*" Or oDBdtOrderNo.Rows(0).Item("FTImage1") = "" Then
                                tPathRefFTOrderNoImage1 = tPath & oDBdtOrderNo.Rows(0).Item("FTImage1").ToString()
                                tFTImage1 = oDBdtOrderNo.Rows(0).Item("FTImage1")
                            End If
                        Case "FTImage2"
                            If oDBdtOrderNo.Rows(0).Item("FTImage2").ToString() Like "*.*" Or oDBdtOrderNo.Rows(0).Item("FTImage2") = "" Then
                                tPathRefFTOrderNoImage2 = tPath & oDBdtOrderNo.Rows(0).Item("FTImage2").ToString()
                                tFTImage2 = oDBdtOrderNo.Rows(0).Item("FTImage2")
                            End If
                        Case "FTImage3"
                            If oDBdtOrderNo.Rows(0).Item("FTImage3").ToString() Like "*.*" Or oDBdtOrderNo.Rows(0).Item("FTImage3") = "" Then
                                tPathRefFTOrderNoImage3 = tPath & oDBdtOrderNo.Rows(0).Item("FTImage3").ToString()
                                tFTImage3 = oDBdtOrderNo.Rows(0).Item("FTImage3")
                            End If
                        Case "FTImage4"
                            If oDBdtOrderNo.Rows(0).Item("FTImage4").ToString() Like "*.*" Or oDBdtOrderNo.Rows(0).Item("FTImage4") = "" Then
                                tPathRefFTOrderNoImage4 = tPath & oDBdtOrderNo.Rows(0).Item("FTImage4").ToString()
                                tFTImage4 = oDBdtOrderNo.Rows(0).Item("FTImage4")
                            End If
                        Case Else
                            '...do nothing
                    End Select
                Next

            End If

            tSql = ""
            tSql = "DELETE A"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TRPTTMERTOrderTemp] AS A"
            tSql &= Environment.NewLine & "WHERE A.UserLogin = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
            tSql &= Environment.NewLine & "      AND A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';"

            HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            tGetMainMaterialDesc = ""
            tGetMainMaterialDesc = "EXEC [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[SP_GETMAINMATERIALDESC_FACTORY_ORDER] @FTOrderNo, "

            '...prepare TRPTTMEROrderTemp
            tSql = ""
            tSql = "DECLARE @FTOrderNo NVARCHAR(500);"
            tSql &= Environment.NewLine & "DECLARE @tblMainMaterial AS TABLE(FTOrderNo NVARCHAR(30), FTMainMaterial NVARCHAR(500));"
            tSql &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';"
            tSql &= Environment.NewLine & "INSERT INTO @tblMainMaterial(FTMainMaterial)"
            Select Case HI.ST.Lang.Language
                Case HI.ST.Lang.eLang.TH
                    tSql &= Environment.NewLine & tGetMainMaterialDesc & "N'TH';"
                Case Else
                    tSql &= Environment.NewLine & tGetMainMaterialDesc & "N'EN';"
            End Select
            tSql &= Environment.NewLine & "SELECT A.* FROM @tblMainMaterial AS A;"
            tSql &= Environment.NewLine & "IF (@@ROWCOUNT > 0)"
            tSql &= Environment.NewLine & "BEGIN"
            tSql &= Environment.NewLine & "  UPDATE A"
            tSql &= Environment.NewLine & "  SET A.FTOrderNo = @FTOrderNo"
            tSql &= Environment.NewLine & "  FROM @tblMainMaterial AS A"
            tSql &= Environment.NewLine & "  SELECT A.* FROM @tblMainMaterial AS A"
            tSql &= Environment.NewLine & "END;"
            tSql &= Environment.NewLine & "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TRPTTMERTOrderTemp] ([UserLogin], [FTOrderNo], [FTOrderNoImage1], [FTOrderNoImage2], [FTOrderNoImage3], [FTOrderNoImage4], [FTMainMaterial])"
            tSql &= Environment.NewLine & "SELECT N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "', @FTOrderNo, NULL, NULL, NULL, NULL, A.FTMainMaterial"
            'tSql &= Environment.NewLine & "SELECT N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "', @FTOrderNo, " & String.Format("{0}", IIf(IsDBNull(FTOrderNoImage1), "NULL", FTOrderNoImage1)) & ", " & String.Format("{0}", IIf(IsDBNull(FTOrderNoImage2), "NULL", FTOrderNoImage2)) & ", " & String.Format("{0}", IIf(IsDBNull(FTOrderNoImage3), "NULL", FTOrderNoImage3)) & ", " & String.Format("{0}", IIf(IsDBNull(FTOrderNoImage4), "NULL", FTOrderNoImage4)) & ", A.FTMainMaterial"
            'tSql &= Environment.NewLine & "SELECT N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "', @FTOrderNo, " & String.Format("{0}", IIf(IsDBNull(FTOrderNoImage1), "NULL", "CONVERT(VARBINARY(MAX), " & String.Format("{0}", FTOrderNoImage1) & ")")) & ", " & String.Format("{0}", IIf(IsDBNull(FTOrderNoImage2), "NULL", "CONVERT(VARBINARY(MAX), " & String.Format("{0}", FTOrderNoImage2) & ")")) & ", " & String.Format("{0}", IIf(IsDBNull(FTOrderNoImage3), "NULL", "CONVERT(VARBINARY(MAX), " & String.Format("{0}", FTOrderNoImage3) & ")")) & ", " & String.Format("{0}", IIf(IsDBNull(FTOrderNoImage4), "NULL", "CONVERT(VARBINARY(MAX), " & String.Format("{0}", FTOrderNoImage4) & ")")) & ", A.FTMainMaterial"
            tSql &= Environment.NewLine & "FROM @tblMainMaterial AS A;"

            HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            '...update HITECH_MERCHAN..TRPTTMEROrderTemp with parameter
            '==================================================================================================================================================================
            Dim FTOrderNoImage1 As Byte(), FTOrderNoImage2 As Byte(), FTOrderNoImage3 As Byte(), FTOrderNoImage4 As Byte()

            Dim pParamFTOrderNoImage1 As New SqlParameter("@FTOrderNoImage1", SqlDbType.VarBinary)
            Dim pParamFTOrderNoImage2 As New SqlParameter("@FTOrderNoImage2", SqlDbType.VarBinary)
            Dim pParamFTOrderNoImage3 As New SqlParameter("@FTOrderNoImage3", SqlDbType.VarBinary)
            Dim pParamFTOrderNoImage4 As New SqlParameter("@FTOrderNoImage4", SqlDbType.VarBinary)

            If tPathRefFTOrderNoImage1 <> "" AndAlso File.Exists(tPathRefFTOrderNoImage1) Then
                FTOrderNoImage1 = HI.UL.ULImage.ConvertImageToByteArray(tPathRefFTOrderNoImage1)
                pParamFTOrderNoImage1.Value = FTOrderNoImage1
            End If

            If tPathRefFTOrderNoImage2 <> "" AndAlso File.Exists(tPathRefFTOrderNoImage2) Then
                FTOrderNoImage2 = HI.UL.ULImage.ConvertImageToByteArray(tPathRefFTOrderNoImage2)
                pParamFTOrderNoImage2.Value = FTOrderNoImage2
            End If

            If tPathRefFTOrderNoImage3 <> "" AndAlso File.Exists(tPathRefFTOrderNoImage3) Then
                FTOrderNoImage3 = HI.UL.ULImage.ConvertImageToByteArray(tPathRefFTOrderNoImage3)
                pParamFTOrderNoImage3.Value = FTOrderNoImage3
            End If

            If tPathRefFTOrderNoImage4 <> "" AndAlso File.Exists(tPathRefFTOrderNoImage4) Then
                FTOrderNoImage4 = HI.UL.ULImage.ConvertImageToByteArray(tPathRefFTOrderNoImage4)
                pParamFTOrderNoImage4.Value = FTOrderNoImage4
            End If

            If tPathRefFTOrderNoImage1 <> "" Or tPathRefFTOrderNoImage2 <> "" Or tPathRefFTOrderNoImage3 <> "" Or tPathRefFTOrderNoImage4 <> "" Then
                HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
                HI.Conn.SQLConn.SqlConnectionOpen()

                Dim oCmd As SqlCommand

                For nLoopCmd As Integer = 1 To 2
                    Select Case nLoopCmd
                        Case 1
                            Dim tSqlUpdateParam As String
                            tSqlUpdateParam = ""

                            tSql = ""
                            tSql = "UPDATE A SET"

                            If Not pParamFTOrderNoImage1 Is Nothing Then
                                If tSqlUpdateParam <> "" Then tSqlUpdateParam &= "          ,"
                                tSqlUpdateParam &= Environment.NewLine & "         A.FTOrderNoImage1 = @FTOrderNoImage1"
                            End If

                            If Not pParamFTOrderNoImage2 Is Nothing Then
                                If tSqlUpdateParam <> "" Then tSqlUpdateParam &= "          ,"
                                tSqlUpdateParam &= Environment.NewLine & "         A.FTOrderNoImage2 = @FTOrderNoImage2"
                            End If

                            If Not pParamFTOrderNoImage3 Is Nothing Then
                                If tSqlUpdateParam <> "" Then tSqlUpdateParam &= "          ,"
                                tSqlUpdateParam &= Environment.NewLine & "         A.FTOrderNoImage3 = @FTOrderNoImage3"
                            End If

                            If Not pParamFTOrderNoImage4 Is Nothing Then
                                If tSqlUpdateParam <> "" Then tSqlUpdateParam &= "          ,"
                                tSqlUpdateParam &= Environment.NewLine & "         A.FTOrderNoImage4 = @FTOrderNoImage4"
                            End If

                            tSql &= tSqlUpdateParam
                            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TRPTTMERTOrderTemp] AS A"
                            tSql &= Environment.NewLine & "WHERE A.UserLogin = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                            tSql &= Environment.NewLine & "      AND A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "'"

                            oCmd = New SqlCommand(tSql, HI.Conn.SQLConn.Cnn)
                        Case 2
                            If Not pParamFTOrderNoImage1 Is Nothing Then
                                oCmd.Parameters.Add(pParamFTOrderNoImage1)
                            End If

                            If Not pParamFTOrderNoImage2 Is Nothing Then
                                oCmd.Parameters.Add(pParamFTOrderNoImage2)
                            End If

                            If Not pParamFTOrderNoImage3 Is Nothing Then
                                oCmd.Parameters.Add(pParamFTOrderNoImage3)
                            End If

                            If Not pParamFTOrderNoImage4 Is Nothing Then
                                oCmd.Parameters.Add(pParamFTOrderNoImage4)
                            End If
                    End Select

                Next nLoopCmd

                oCmd.ExecuteNonQuery()

                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cnn)
            End If
            '==================================================================================================================================================================

        Catch ex As Exception
            If System.Diagnostics.Debugger.IsAttached = True Then
                MessageBox.Show(ex.Message().ToString() & Environment.NewLine & ex.StackTrace.ToString(), My.Application.Info.Title, MessageBoxButtons.OK, MessageBoxIcon.Information)
            End If
        End Try

    End Sub

    Private Sub W_PRCxPreview_SubOrderNo()

        If Me.FTOrderNo.Text.Trim() = "" Then
            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.FTOrderNo_lbl.Text)
            Me.FTOrderNo.Focus()
            Me.FTOrderNo.SelectionStart = 0
            Me.FTOrderNo.SelectionLength = Len(Me.FTOrderNo.Text)
            Exit Sub
        End If

        Dim tSql As String

        tSql = ""
        tSql = "SELECT A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';"

        If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") = "" Then
            Me.FTOrderNo.Focus()
            Me.FTOrderNo.SelectionStart = 0
            Me.FTOrderNo.SelectionLength = Len(Me.FTOrderNo.Text)
            Exit Sub
        End If

        If Me.FTSubOrderNo.Text.Trim() = "" Then
            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.FTSubOrderNo_lbl.Text)
            Me.FTSubOrderNo.Focus()
            Me.FTSubOrderNo.SelectionStart = 0
            Me.FTSubOrderNo.SelectionLength = Len(Me.FTSubOrderNo.Text)
            Exit Sub
        End If

        tSql = ""
        tSql = "SELECT A.FTSubOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS A WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim()) & "';"

        If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") = "" Then
            Me.FTSubOrderNo.Focus()
            Me.FTSubOrderNo.SelectionStart = 0
            Me.FTSubOrderNo.SelectionLength = Len(Me.FTSubOrderNo.Text)
            Exit Sub
        End If
        '...Browse Report Factory Sub Order No.
        Try

        Catch ex As Exception
            'MessageBox.Show(ex.Message().ToString() & Environment.NewLine & ex.StackTrace.ToString(), My.Application.Info.Title, MessageBoxButtons.OK, MessageBoxIcon.Information)
        End Try

    End Sub

    Private Function W_PRCbRemoveGridViewColumn(ByVal pGridView As DevExpress.XtraGrid.Views.Grid.GridView) As DevExpress.XtraGrid.Views.Grid.GridView
        Try

            With pGridView
                For nLoopColGridView As Integer = .Columns.Count - 1 To 0 Step -1
                    Select Case .Columns.Item(nLoopColGridView).Name.ToString.ToUpper
                        Case "FTMatColorName".ToString.ToUpper, "FTMatColorCode".ToString.ToUpper
                            '...Do nothing
                            'MsgBox("GridView Column : " & pGridView.Columns(nLoopColGridView).Name.ToString.ToUpper, MsgBoxStyle.OkOnly, My.Application.Info.Title)
                            If pGridView.Name = "ogvSubOrdBreakdown" Or pGridView.Name = "ogvSubOrdBreakdownSummary" Then
                                .Columns.Remove(.Columns.Item(nLoopColGridView))
                            Else
                                '...do nothing
                            End If

                        Case "FNSeq".ToString.ToUpper, "FTSizeSpecDesc".ToString.ToUpper, "FNHSysMeasId".ToUpper, "FNHSysMeasId_None".ToUpper
                            '...do nothing
                        Case Else
                            'MsgBox("Column No. : " & nLoopColGridView)
                            .Columns.Remove(.Columns.Item(nLoopColGridView))
                    End Select

                Next

            End With

            'pGridView.Columns.Clear()

        Catch ex As Exception
            ' MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace.ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)
        End Try

        Return pGridView

        'Try
        '    pGridView.Columns.Clear()
        'Catch ex As Exception
        '    MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace.ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)
        'End Try
        'Return pGridView

    End Function

    Private Sub W_PRCxRecalSubOrderBreakdownExtraQty()
        Try
            If Val(Me.FNQuantity.Value) = 0 Then
                Me.FNQuantityExtra.Value = 0
            Else
                If Val(Me.FNExtraQtySubOrder.Value) = 0 Then
                    Me.FNQuantityExtra.Value = 0
                Else
                    Dim nFractionNumber#
                    nFractionNumber = Val(Me.FNQuantity.Value) * (Me.FNExtraQtySubOrder.Value / 100)

                    Dim tRetExtraQty$ = CStr(nFractionNumber)

                    Dim nPosDigit% = Microsoft.VisualBasic.InStr(tRetExtraQty, ".")

                    If nPosDigit = 0 Then
                        Me.FNQuantityExtra.Value = CDbl(nFractionNumber)
                    Else
                        Dim tFractionInt$ = Microsoft.VisualBasic.Mid$(tRetExtraQty, 1, nPosDigit - 1)
                        Dim tFractionDecimal$ = Microsoft.VisualBasic.Mid$(tRetExtraQty, nPosDigit + 1, Len(tRetExtraQty) - nPosDigit)

                        Dim nReal#
                        Double.TryParse(tFractionDecimal, nReal)

                        If nReal > 0 Then
                            Dim nFractionInt#
                            Double.TryParse(tFractionInt, nFractionInt)
                            Me.FNQuantityExtra.Value = CDbl(IIf(nFractionInt < 0, 0, nFractionInt) + 1)
                        Else
                            Dim nFractionInt#
                            Double.TryParse(tFractionInt, nFractionInt)
                            Me.FNQuantityExtra.Value = CDbl(IIf(nFractionInt < 0, 0, nFractionInt))
                        End If

                    End If

                End If

            End If

        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
        End Try

    End Sub

    Private Sub FormRefresh()

        HI.TL.HandlerControl.ClearControl(Me)

        Me.FTUpdUser.Text = ""
        Me.FTOrderBy.Text = ""

        Me.FTImage1.Image = Nothing
        Me.FTImage2.Image = Nothing
        Me.FTImage3.Image = Nothing
        Me.FTImage4.Image = Nothing

        Me.LoadCompleteFTImage1 = False : Me.LoadCompleteFTImage2 = False : Me.LoadCompleteFTImage3 = False : Me.LoadCompleteFTImage4 = False

        Me.FNHSysCmpId.Properties.Tag = ""
        Me.FNHSysCmpId.Text = ""
        Me.FNHSysCmpId_None.Text = ""

        Me.FNHSysCmpRunId.Properties.Tag = ""
        Me.FNHSysCmpRunId.Text = ""
        Me.FNHSysCmpRunId_None.Text = ""

        Me.FNHSysStyleId.Properties.Tag = ""
        Me.FNHSysStyleId.Text = ""
        Me.FNHSysStyleId_None.Text = ""

        Me.FNHSysCustId.Properties.Tag = ""
        Me.FNHSysCustId.Text = ""
        Me.FNHSysCustId_None.Text = ""

        Me.FNHSysSeasonId.Properties.Tag = ""
        Me.FNHSysSeasonId.Text = ""
        Me.FNHSysSeasonId_None.Text = ""

        HI.TL.HandlerControl.ClearControl(Me.ogbOrder)

        Me.ogdCurrencyBreakdown.DataSource = Nothing

        Me.ogdColorSizeBreakdown.DataSource = Nothing
        Call W_PRCbRemoveGridViewColumn(GridView1)

        HI.TL.HandlerControl.ClearControl(Me.ogbSubOrder)

        Me.ogdSubOrdBreakDown.DataSource = Nothing
        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)

        Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)

        Me.ogdSubOrdBreakDownSummary.Width = ogdSubOrdBreakDown.Width

        Me.FTStateEmb.Checked = False : Me.FTStatePrint.Checked = False : Me.FTStateHeat.Checked = False : Me.FTStateLaser.Checked = False : Me.FTStateWindows.Checked = False

        Me.FTSubOrderNoDivertRef.Visible = False : Me.FTSubOrderNoDivertRef.Checked = False

        HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)
        Me.ogdOrderSubPack.DataSource = Nothing
        Me.FTImagePacking.Image = Nothing

        HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)
        Me.ogdOrderSubSewing.DataSource = Nothing
        Me.FTImageSewing.Image = Nothing

        Me.ogdSizeSpec.DataSource = Nothing
        Call W_PRCbRemoveGridViewColumn(Me.ogvSizeSpec)

        Me.ogdOrderSubComponent.DataSource = Nothing

        HI.TL.HandlerControl.ClearControl(Me.ogbPackCartonHD)
        Me.ogdOrderSubPack.DataSource = Nothing

        With Me.ogvOrderSubPackCarton
            For nLoopSubPackCarton As Integer = .Columns.Count - 1 To 0 Step -1

                Select Case .Columns(nLoopSubPackCarton).FieldName.ToString.ToUpper

                    Case "FTOrderNo".ToUpper, "FTSubOrderNo".ToUpper, "FTColorway".ToUpper
                        .Columns(nLoopSubPackCarton).AppearanceCell.BackColor = Color.White
                        .Columns(nLoopSubPackCarton).AppearanceCell.ForeColor = Color.Black
                        .Columns(nLoopSubPackCarton).OptionsColumn.AllowSort = DevExpress.Utils.DefaultBoolean.False
                    Case Else
                        .Columns.Remove(.Columns(nLoopSubPackCarton))
                End Select

            Next

        End With

        Me.FTStateInfoOrder.Visible = False
        Me.FTStateInfoOrder.Checked = False
        'Me.FTStateInfoOrder.Text = ""

        Me.FTStateInfoOrderRevised.Visible = False
        Me.FTStateInfoOrderRevised.Checked = False

        Me.FTStateApprovedSubOrderNo.Visible = False
        Me.FTStateApprovedSubOrderNo.Checked = False
        'Me.FTStateApprovedSubOrderNo.Text = ""

        Me.FTStateApprovedSubOrderNoRevised.Visible = False
        Me.FTStateApprovedSubOrderNoRevised.Checked = False

        Me.FTStateApprovedComponent.Visible = False
        Me.FTStateApprovedComponent.Checked = False
        'Me.FTStateApprovedComponent.Text = ""

        Me.FTStateApprovedComponentRevised.Visible = False
        Me.FTStateApprovedComponentRevised.Checked = False

        Me.FTStateApprovedSew.Visible = False
        Me.FTStateApprovedSew.Checked = False
        'Me.FTStateApprovedSew.Text = ""

        Me.FTStateApprovedSewRevised.Visible = False
        Me.FTStateApprovedSewRevised.Checked = False

        Me.FTStateApprovedPack.Visible = False
        Me.FTStateApprovedPack.Checked = False
        'Me.FTStateApprovedPack.Text = ""

        Me.FTStateApprovedPackRevised.Visible = False
        Me.FTStateApprovedPackRevised.Checked = False

        Me.FTStateApprovedPackRatio.Visible = False
        Me.FTStateApprovedPackRatio.Checked = False
        'Me.FTStateApprovedPackRatio.Text = ""

        Me.FTStateApprovedPackRatioRevised.Visible = False
        Me.FTStateApprovedPackRatioRevised.Checked = False

        Me.FTStateApprovedSizeSpec.Visible = False
        Me.FTStateApprovedSizeSpec.Checked = False
        'Me.FTStateApprovedSizeSpec.Text = ""
        Me.FTStateApprovedSizeSpecRevised.Visible = False
        Me.FTStateApprovedSizeSpecRevised.Checked = False

        Me.FNPackCartonSubType.SelectedIndex = 0
        Me.FNPackPerCaton.Value = 0

        Me.FNHSysCmpId.Properties.ReadOnly = False
        Me.FNHSysCmpId.Properties.Buttons(0).Enabled = True

        Call CheckStateOrder()
        Call CheckStateSubOrder()

    End Sub

    Private Function W_PRCbVerifyBF_SaveDataMainOrder() As Boolean
        Try

            Dim _FieldName As String
            Dim _Val As String = ""
            Dim _Caption As String = ""
            Dim _Str As String = ""
            For cind As Integer = 0 To _FormHeader.ToArray.Count - 1
                For I As Integer = 0 To _FormHeader(cind).CheckFiled.ToArray.Count - 1
                    _FieldName = _FormHeader(cind).CheckFiled(I).FiledName.ToString

                    'If System.Diagnostics.Debugger.IsAttached = True Then
                    '    If _FieldName = "FNHSysStyleId" Then
                    '        MsgBox("FNHSysStyleId !!!")
                    '    End If
                    'End If

                    If _FormHeader(0).MainKey.ToString.ToUpper <> _FieldName.ToUpper Then
                        _Caption = ""

                        For Each ObjCaption As Object In Me.Controls.Find(_FieldName & "_lbl", True)
                            If ObjCaption.GetType.FullName.ToString.ToUpper = "DevExpress.XtraEditors.LabelControl".ToUpper Then
                                _Caption = ObjCaption.Text
                                Exit For
                            End If
                        Next

                        Dim Pass As Boolean = True

                        For Each Obj As Object In Me.Controls.Find(_FieldName, True)
                            Select Case Obj.GetType.FullName.ToString.ToUpper
                                Case "DevExpress.XtraEditors.ButtonEdit".ToUpper

                                    With CType(Obj, DevExpress.XtraEditors.ButtonEdit)
                                        If .Text.Trim() = "" Or "" & .Properties.Tag.ToString = "" Then
                                            Pass = False
                                        End If
                                    End With
                                Case "DevExpress.XtraEditors.CalcEdit".ToUpper
                                    With CType(Obj, DevExpress.XtraEditors.CalcEdit)
                                        If Val(.Value.ToString) <= 0 Then
                                            Pass = False
                                        End If
                                    End With
                                Case "DevExpress.XtraEditors.ComboBoxEdit".ToUpper
                                    With CType(Obj, DevExpress.XtraEditors.ComboBoxEdit)
                                        If .SelectedIndex < 0 Then Pass = False
                                    End With
                                Case "DevExpress.XtraEditors.CheckEdit".ToUpper

                                Case "DevExpress.XtraEditors.DateEdit".ToUpper
                                    With CType(Obj, DevExpress.XtraEditors.DateEdit)
                                        If HI.UL.ULDate.CheckDate(.Text) = "" Then
                                            Pass = False
                                        End If
                                    End With
                                Case "DevExpress.XtraEditors.PictureEdit".ToUpper
                                    With CType(Obj, DevExpress.XtraEditors.PictureEdit)
                                        If .Image Is Nothing Then
                                            Pass = False
                                        End If
                                    End With
                                Case "DevExpress.XtraEditors.MemoEdit".ToUpper, "DevExpress.XtraEditors.TextEdit".ToUpper
                                    If Obj.Text = "" Then
                                        Pass = False
                                    End If
                                Case Else
                                    Pass = False
                            End Select

                            If Pass = False Then
                                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, _Caption)
                                Obj.Focus()
                                Return False
                            End If
                        Next

                    End If
                Next
            Next

            '---------- Validate Document ---------------------
            For cind As Integer = 0 To _FormHeader.ToArray.Count - 1
                For Each Obj As Object In Me.Controls.Find(_FormHeader(cind).MainKey, True)
                    Select Case Obj.GetType.FullName.ToString.ToUpper
                        Case "DevExpress.XtraEditors.ButtonEdit".ToUpper
                            With CType(Obj, DevExpress.XtraEditors.ButtonEdit)
                                If .Text.Trim() = "" Then
                                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text)
                                    Obj.Focus()
                                    Return False
                                Else

                                    If .Properties.Buttons.Count > 1 Then
                                        If UCase("" & .Properties.Buttons(1).Tag.ToString) = "M" Then
                                            If .Text <> "" Then
                                                _Str = "SELECT TOP 1  FTOrderNo  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder WHERE FTOrderNo='" & HI.UL.ULF.rpQuoted(.Text) & "' AND FTOrderNo <> " & Val(.Properties.Tag.ToString) & "  "

                                                If HI.Conn.SQLConn.GetField(_Str, Conn.DB.DataBaseName.DB_HR, "") <> "" Then
                                                    HI.MG.ShowMsg.mInvalidData("", 1306120001, Me.Text)
                                                    Obj.Focus()
                                                    Return False
                                                End If
                                            Else
                                                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text)
                                                Obj.Focus()
                                                Return False
                                            End If
                                        Else

                                            Dim _CmpH As String = ""
                                            For Each ctrl As Object In Me.Controls.Find("FNHSysCmpId", True)

                                                If ctrl.GetType.FullName.ToString.ToUpper = "DevExpress.XtraEditors.ButtonEdit".ToUpper Then
                                                    With CType(ctrl, DevExpress.XtraEditors.ButtonEdit)
                                                        _CmpH = HI.Conn.SQLConn.GetField("SELECT TOP 1 FTDocRun FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TCNMCmp WHERE FNHSysCmpId=" & Val("" & .Properties.Tag.ToString) & " ", Conn.DB.DataBaseName.DB_SYSTEM, "")
                                                    End With

                                                    Exit For

                                                End If

                                            Next

                                            If .Text <> HI.TL.Document.GetDocumentNo(Me.SysDBName, Me.SysTableName, "", True, Me.FNHSysCmpRunId.Text.Trim()).ToString() Then
                                                _Str = _FormHeader(cind).Query & "  WHERE " & _FormHeader(cind).MainKey & "='" & HI.UL.ULF.rpQuoted(.Properties.Tag.ToString) & "' "
                                                Dim _dt As DataTable = HI.Conn.SQLConn.GetDataTable(_Str, _DBEnum)

                                                If _dt.Rows.Count <= 0 Then
                                                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text)
                                                    Obj.Focus()
                                                    Return False
                                                End If

                                            End If

                                        End If

                                    Else

                                        If .Text <> HI.TL.Document.GetDocumentNo(Me.SysDBName, Me.SysTableName, "", True).ToString() Then
                                            _Str = _FormHeader(cind).Query & "  WHERE " & _FormHeader(cind).MainKey & "='" & HI.UL.ULF.rpQuoted(.Properties.Tag.ToString) & "' "
                                            Dim _dt As DataTable = HI.Conn.SQLConn.GetDataTable(_Str, _DBEnum)

                                            If _dt.Rows.Count <= 0 Then
                                                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text)
                                                Obj.Focus()

                                                Return False

                                            End If

                                        End If

                                    End If

                                End If

                            End With

                    End Select

                Next

            Next

            Return True
        Catch ex As Exception
            Return False
        End Try

    End Function

    Private Function W_PRCbVerifyBF_SaveDataSubOrderBreakdown() As Boolean
        Try
            Dim _bPass As Boolean = False
            If Me.FTSubOrderNo.Text <> "" Then
                If Me.FDSubOrderDate.Text <> "" Then
                    If Me.FDProDate.Text <> "" Then
                        If Me.FDShipDate.Text <> "" Then
                            If Me.FNHSysContinentId.Text <> "" Then
                                If Me.FNHSysProvinceId.Text <> "" Then
                                    If Me.FNHSysShipModeId.Text <> "" Then
                                        If Me.FNHSysShipPortId.Text <> "" Then
                                            If Me.FNHSysCurId.Text <> "" Then
                                                If Me.FNHSysGenderId.Text <> "" Then
                                                    If Me.FTColorway.Properties.Tag.ToString() <> "" Then
                                                        If Me.FTSizeBreakDown.Properties.Tag <> "" Then
                                                            If Me.FNQuantity.Value > 0 Then
                                                                If Me.FNPrice.Value > 0 Then
                                                                    _bPass = True
                                                                Else
                                                                    '...nothing
                                                                End If
                                                            Else
                                                                '...nothing
                                                            End If
                                                        Else
                                                            '...nothing
                                                        End If
                                                    Else
                                                        '...nothing
                                                    End If
                                                Else
                                                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FNHSysGenderId_lbl.Text)
                                                End If
                                            Else
                                                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FNHSysCurId_lbl.Text)
                                            End If
                                        Else
                                            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FNHSysShipPortId_lbl.Text)
                                        End If
                                    Else
                                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FNHSysShipModeId_lbl.Text)
                                    End If
                                Else
                                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FNHSysProvinceId_lbl.Text)
                                End If
                            Else
                                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FNHSysContinentId_lbl.Text)
                            End If
                        Else
                            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FDShipDate_lbl.Text)
                        End If
                    Else
                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FDProDate_lbl.Text)
                    End If
                Else
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FDSubOrderDate_lbl.Text)
                End If
            Else
                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FTSubOrderNo_lbl.Text)
            End If

            Return _bPass
        Catch ex As Exception
            If System.Diagnostics.Debugger.IsAttached = True Then
                Throw New Exception(ex.Message().ToString() & Environment.NewLine & ex.StackTrace.ToString())
            End If
            Return False
        End Try

    End Function

    Private Function W_PRCbVerifyBF_SaveDataSubOrder() As Boolean
        Dim _Pass As Boolean = False
        Try
            REM 2014/06/30
            'If Me.FTSubOrderNo.Text <> "" Then
            '    If Me.FDSubOrderDate.Text <> "" Then
            '        If Me.FDProDate.Text <> "" Then
            '            If Me.FDShipDate.Text <> "" Then
            '                If Me.FNHSysContinentId.Text <> "" Then
            '                    If Me.FNHSysCountryId.Text <> "" Then
            '                        If Me.FNHSysProvinceId.Text <> "" Then
            '                            If Me.FNHSysShipModeId.Text <> "" Then
            '                                If Me.FNHSysShipPortId.Text <> "" Then
            '                                    If Me.FNHSysCurId.Text <> "" Then
            '                                        If Me.FNHSysGenderId.Text <> "" Then
            '                                            If Me.FNHSysUnitId.Text <> "" Then
            '                                                _Pass = True
            '                                            Else
            '                                                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.FNHSysUnitId_lbl.Text)
            '                                                Me.FNHSysUnitId.Focus()
            '                                            End If
            '                                        Else
            '                                            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.FNHSysGenderId_lbl.Text)
            '                                            Me.FNHSysGenderId.Focus()
            '                                        End If
            '                                    Else
            '                                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.FNHSysCurId_lbl.Text)
            '                                        Me.FNHSysCurId.Focus()
            '                                    End If
            '                                Else
            '                                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.FNHSysShipPortId_lbl.Text)
            '                                    Me.FNHSysShipPortId.Focus()
            '                                End If
            '                            Else
            '                                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FNHSysShipModeId_lbl.Text)
            '                                Me.FNHSysShipModeId.Focus()
            '                            End If
            '                        Else
            '                            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FNHSysProvinceId_lbl.Text)
            '                            Me.FNHSysProvinceId.Focus()
            '                        End If
            '                    Else
            '                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FNHSysCountryId_lbl.Text)
            '                        Me.FNHSysCountryId.Focus()
            '                    End If
            '                Else
            '                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FNHSysContinentId_lbl.Text)
            '                    Me.FNHSysContinentId.Focus()
            '                End If
            '            Else
            '                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FDShipDate_lbl.Text)
            '                Me.FDShipDate.Focus()
            '            End If

            '        Else
            '            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FDProDate_lbl.Text)
            '            Me.FDProDate.Focus()
            '        End If
            '    Else
            '        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FDSubOrderDate_lbl.Text)
            '        Me.FDSubOrderDate.Focus()
            '    End If

            'Else
            '    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FTSubOrderNo_lbl.Text)
            '    Me.FTSubOrderNo.Focus()
            'End If

            If Me.FTSubOrderNo.Text <> "" Then
                If Me.FDSubOrderDate.Text <> "" Then
                    If Me.FDProDate.Text <> "" Then
                        If Me.FDShipDate.Text <> "" Then
                            If Me.FNHSysContinentId.Text <> "" Then
                                If Me.FNHSysCountryId.Text <> "" Then
                                    If Me.FNHSysShipModeId.Text <> "" Then
                                        If Me.FNHSysShipPortId.Text <> "" Then
                                            If Me.FNHSysCurId.Text <> "" Then
                                                If Me.FNHSysGenderId.Text <> "" Then
                                                    If Me.FNHSysUnitId.Text <> "" Then

                                                        If Me.FNHSysPlantId.Text <> "" Then
                                                            If Me.FNHSysBuyGrpId.Text <> "" Then
                                                                _Pass = True
                                                            Else
                                                                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.FNHSysUnitId_lbl.Text)
                                                                Me.FNHSysBuyGrpId.Focus()
                                                            End If
                                                        Else
                                                            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.FNHSysUnitId_lbl.Text)
                                                            Me.FNHSysPlantId.Focus()
                                                        End If

                                                    Else
                                                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.FNHSysUnitId_lbl.Text)
                                                        Me.FNHSysUnitId.Focus()
                                                    End If
                                                Else
                                                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.FNHSysGenderId_lbl.Text)
                                                    Me.FNHSysGenderId.Focus()
                                                End If
                                            Else
                                                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.FNHSysCurId_lbl.Text)
                                                Me.FNHSysCurId.Focus()
                                            End If
                                        Else
                                            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.FNHSysShipPortId_lbl.Text)
                                            Me.FNHSysShipPortId.Focus()
                                        End If
                                    Else
                                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FNHSysShipModeId_lbl.Text)
                                        Me.FNHSysShipModeId.Focus()
                                    End If

                                Else
                                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.FNHSysCountryId_lbl.Text)
                                    Me.FNHSysCountryId.Focus()
                                End If
                            Else
                                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.FNHSysContinentId_lbl.Text)
                                Me.FNHSysContinentId.Focus()
                            End If

                        Else
                            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FDShipDate_lbl.Text)
                            Me.FDShipDate.Focus()
                        End If

                    Else
                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FDProDate_lbl.Text)
                        Me.FDProDate.Focus()
                    End If
                Else
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FDSubOrderDate_lbl.Text)
                    Me.FDSubOrderDate.Focus()
                End If

            Else
                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FTSubOrderNo_lbl.Text)
                Me.FTSubOrderNo.Focus()
            End If

            Return _Pass

        Catch ex As Exception
            If System.Diagnostics.Debugger.IsAttached = True Then
                Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
            End If

            Return False

        End Try

    End Function

    Private Function W_PRCbVerifyBF_SaveDataSubOrderPack() As Boolean
        Dim bPass As Boolean = False
        Try
            If Me.FTOrderNo.Properties.Tag <> "" Then
                If FTSubOrderNo.Properties.Tag <> "" Then
                    If Me.FTPackDescription.Text.Trim() <> "" Then
                        bPass = True
                    Else
                        HI.MG.ShowMsg.mInvalidData(HI.MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FTPackDescription_lbl.Text)
                        Me.FTPackDescription.Focus()
                    End If
                Else
                    HI.MG.ShowMsg.mInvalidData(HI.MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FTSubOrderNo_lbl.Text)
                    Me.FTSubOrderNo.Focus()
                End If
            Else
                HI.MG.ShowMsg.mInvalidData(HI.MG.ShowMsg.InvalidType.InputData, Me.Text, FTOrderNo_lbl.Text)
                Me.FTOrderNo.Focus()
            End If

            Return bPass
        Catch ex As Exception
            Return False
        End Try
    End Function

    Private Function W_PRCbVerifyBF_SaveDataSubOrderSewing() As Boolean
        Dim bPass As Boolean = False
        Try
            If Me.FTOrderNo.Properties.Tag <> "" Then
                If FTSubOrderNo.Properties.Tag <> "" Then
                    If Me.FTSewDescription.Text.Trim() <> "" Then
                        bPass = True
                    Else
                        HI.MG.ShowMsg.mInvalidData(HI.MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FTSewDescription_lbl.Text)
                        Me.FTSewDescription.Focus()
                    End If
                Else
                    HI.MG.ShowMsg.mInvalidData(HI.MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FTSubOrderNo_lbl.Text)
                    Me.FTSubOrderNo.Focus()
                End If
            Else
                HI.MG.ShowMsg.mInvalidData(HI.MG.ShowMsg.InvalidType.InputData, Me.Text, FTOrderNo_lbl.Text)
                Me.FTOrderNo.Focus()
            End If

            Return bPass

        Catch ex As Exception
            Return False
        End Try
    End Function

    Private Function W_PRCbVerifyBF_SaveDataSizeSpec() As Boolean
        Dim bPass As Boolean = False
        Try
            If Me.FTOrderNo.Properties.Tag <> "" Then
                If FTSubOrderNo.Properties.Tag <> "" Then
                    'Dim oDBdtSizeSpecView As System.Data.DataTable
                    'oDBdtSizeSpecView = CType(Me.ogdSizeSpec.DataSource, System.Data.DataTable)
                    'If oDBdtSizeSpecView Is Nothing Then Return False
                    If Me.ogdSizeSpec.DataSource Is Nothing Then Return False
                    If Me.ogvSizeSpec.RowCount = 0 Then Return False
                    bPass = True
                Else
                    HI.MG.ShowMsg.mInvalidData(HI.MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FTSubOrderNo_lbl.Text)
                    Me.FTSubOrderNo.Focus()
                End If
            Else
                HI.MG.ShowMsg.mInvalidData(HI.MG.ShowMsg.InvalidType.InputData, Me.Text, FTOrderNo_lbl.Text)
                Me.FTOrderNo.Focus()
            End If

            Return bPass
        Catch ex As Exception
            Return False
        End Try

    End Function

    Private Function W_PRCbSaveMainOrder() As Boolean
        Dim _FieldName As String
        Dim _Fields As String = ""
        Dim _Values As String = ""
        Dim _Str As String
        Dim _Key As String = ""
        Dim _Val As String = ""
        Dim _StateNew As Boolean = False
        Dim _SysKey As String = ""
        Dim _ManualCode As Boolean = False

        Dim _bFONoBlankComp As Boolean = False

        Dim sqlBefore As String = ""
        Try
            For cind As Integer = 0 To _FormHeader.ToArray.Count - 1

                For Each Obj As Object In Me.Controls.Find(_FormHeader(cind).MainKey, True)

                    Select Case Obj.GetType.FullName.ToString.ToUpper

                        Case "DevExpress.XtraEditors.ButtonEdit".ToUpper

                            With CType(Obj, DevExpress.XtraEditors.ButtonEdit)
                                If .Text.Trim() = "" Then
                                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text)
                                    Obj.Focus()
                                    Return False

                                Else

                                    Dim _CmpH As String = ""
                                    For Each ctrl As Object In Me.Controls.Find("FNHSysCmpId", True)

                                        If ctrl.GetType.FullName.ToString.ToUpper = "DevExpress.XtraEditors.ButtonEdit".ToUpper Then
                                            With CType(ctrl, DevExpress.XtraEditors.ButtonEdit)
                                                _CmpH = HI.Conn.SQLConn.GetField("SELECT TOP 1 FTDocRun FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TCNMCmp WHERE FNHSysCmpId=" & Val("" & .Properties.Tag.ToString) & " ", Conn.DB.DataBaseName.DB_SYSTEM, "")
                                            End With

                                            Exit For

                                        End If
                                    Next

                                    'If .Text = HI.TL.Document.GetDocumentNo(_FormHeader(cind).SysDBName, _FormHeader(cind).SysTableName, "", True, _CmpH).ToString() Then

                                    REM 2014/01/04
                                    'If .Text = HI.TL.Document.GetDocumentNo(_FormHeader(cind).SysDBName, _FormHeader(cind).SysTableName, "", True, _CmpH).ToString() Then
                                    '    _StateNew = True
                                    'Else
                                    '    If ("" & .Properties.Buttons(1).Tag.ToString.ToUpper) = "M" Then
                                    '        If Val("" & .Properties.Tag.ToString) = 0 Then
                                    '            _ManualCode = True
                                    '            _StateNew = True
                                    '        End If
                                    '    End If

                                    '    _Key = .Text
                                    '    _SysKey = .Properties.Tag.ToString

                                    '    If Not (_ManualCode) Then
                                    '        _Str = _FormHeader(cind).Query & "  WHERE " & _FormHeader(cind).MainKey & "='" & HI.UL.ULF.rpQuoted(_SysKey) & "' "
                                    '        Dim _dt As DataTable = HI.Conn.SQLConn.GetDataTable(_Str, _DBEnum)

                                    '        If _dt.Rows.Count <= 0 Then
                                    '            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text)
                                    '            Obj.Focus()
                                    '            Return False
                                    '        End If

                                    '    End If

                                    'End If

                                    REM 2014/04/28 If .Text = HI.TL.Document.GetDocumentNo(_FormHeader(cind).SysDBName, _FormHeader(cind).SysTableName, "", True, Me.FNHSysCmpRunId.Text.Trim()).ToString() Then
                                    'If .Text = HI.TL.Document.GetDocumentNo(_FormHeader(cind).SysDBName, _FormHeader(cind).SysTableName, "", True, _tPreFixCustOrderNo).ToString() Then
                                    '    _StateNew = True
                                    'Else
                                    '    If ("" & .Properties.Buttons(1).Tag.ToString.ToUpper) = "M" Then
                                    '        If Val("" & .Properties.Tag.ToString) = 0 Then
                                    '            _ManualCode = True
                                    '            _StateNew = True
                                    '        End If
                                    '    End If

                                    '    _Key = .Text
                                    '    _SysKey = .Properties.Tag.ToString

                                    '    If Not (_ManualCode) Then
                                    '        _Str = _FormHeader(cind).Query & "  WHERE " & _FormHeader(cind).MainKey & "='" & HI.UL.ULF.rpQuoted(_SysKey) & "' "
                                    '        Dim _dt As DataTable = HI.Conn.SQLConn.GetDataTable(_Str, _DBEnum)

                                    '        If _dt.Rows.Count <= 0 Then
                                    '            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text)
                                    '            Obj.Focus()
                                    '            Return False
                                    '        End If

                                    '    End If

                                    'End If

                                    If .Text = HI.TL.Document.GetDocumentNo(_FormHeader(cind).SysDBName, _FormHeader(cind).SysTableName, "", True, Me.FNHSysCmpRunId.Text.Trim()).ToString() Then
                                        _StateNew = True
                                    Else
                                        If ("" & .Properties.Buttons(1).Tag.ToString.ToUpper) = "M" Then
                                            If Val("" & .Properties.Tag.ToString) = 0 Then
                                                _ManualCode = True
                                                _StateNew = True
                                            End If
                                        End If

                                        _Key = .Text
                                        _SysKey = .Properties.Tag.ToString

                                        If Not (_ManualCode) Then
                                            _Str = _FormHeader(cind).Query & "  WHERE " & _FormHeader(cind).MainKey & "='" & HI.UL.ULF.rpQuoted(_SysKey) & "' "
                                            Dim _dt As DataTable = HI.Conn.SQLConn.GetDataTable(_Str, _DBEnum)

                                            If _dt.Rows.Count <= 0 Then
                                                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, Me.Text)
                                                Obj.Focus()
                                                Return False
                                            End If

                                        End If

                                    End If

                                End If

                            End With

                    End Select

                Next

            Next

            If (_StateNew) Then
                If Not (_ManualCode) Then
                    '_Key = HI.TL.Document.GetDocumentNo(Me.SysDBName, Me.SysTableName, "", False, Me.FNHSysCustId.Text.Trim().ToString()).ToString
                    _Key = HI.TL.Document.GetDocumentNo(Me.SysDBName, Me.SysTableName, FNOrderType.SelectedIndex.ToString, False, HI.TL.CboList.GetListRefer(FNOrderType.Properties.Tag.ToString, FNOrderType.SelectedIndex) & Me.FNHSysCmpRunId.Text.Trim().ToString()).ToString()
                    REM 2014/05/14 _Key = HI.TL.Document.GetDocumentNo(Me.SysDBName, Me.SysTableName, "", False, _tPreFixCustOrderNo).ToString()
                End If
                _SysKey = HI.TL.RunID.GetRunNoID(Me.SysTableName, Me.MainKey, Conn.DB.DataBaseName.DB_MERCHAN).ToString()
            End If

            Try
                HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
                HI.Conn.SQLConn.SqlConnectionOpen()
                HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
                HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction

                Dim _FoundControl As Boolean

                For cind As Integer = 0 To _FormHeader.ToArray.Count - 1

                    For I As Integer = 0 To _FormHeader(cind).BaseFiled.ToArray.Count - 1

                        _FieldName = _FormHeader(cind).BaseFiled(I).FiledName.ToString

                        If System.Diagnostics.Debugger.IsAttached = True Then
                            If _FieldName.ToUpper = "FNOrderQty".ToUpper Or _FieldName.ToUpper = "FNExtraQty".ToUpper Or _FieldName.ToUpper = "FNOrderAmt".ToUpper Or _FieldName.ToUpper = "FNGrandQty".ToUpper Or _FieldName.ToUpper = "FNGrandAmt".ToUpper Then
                                MsgBox("Field Name : " & _FieldName.ToUpper)
                            End If

                        End If


                        _FoundControl = False

                        If (_StateNew) Then

                            '------Update -------------
                            If UCase(_FieldName) = "FTOrderNo".ToUpper Then
                                _FoundControl = True
                                _Val = _Key
                            Else
                                For Each Obj As Object In Me.Controls.Find(_FieldName, True)

                                    _FoundControl = True

                                    If UCase(_FieldName) = _FormHeader(cind).MainKey.ToUpper Then
                                        _Val = _SysKey
                                    Else
                                        Select Case Obj.GetType.FullName.ToString.ToUpper
                                            Case "DevExpress.XtraEditors.ButtonEdit".ToUpper
                                                'If CType(Obj, DevExpress.XtraEditors.ButtonEdit).Name = "FNHSysCustId" Then
                                                '    MsgBox("Founnd Data !!!")
                                                'End If

                                                With CType(Obj, DevExpress.XtraEditors.ButtonEdit)
                                                    _Val = "" & .Properties.Tag.ToString
                                                End With

                                                'If _FieldName.ToUpper = "FNExtraQty".ToUpper Then
                                                '    If System.Diagnostics.Debugger.IsAttached = True Then
                                                '        MsgBox("Field Name : " & _FieldName.ToUpper)
                                                '    End If
                                                'Else
                                                '    With CType(Obj, DevExpress.XtraEditors.ButtonEdit)
                                                '        _Val = "" & .Properties.Tag.ToString
                                                '    End With
                                                'End If

                                            Case "DevExpress.XtraEditors.CalcEdit".ToUpper
                                                With CType(Obj, DevExpress.XtraEditors.CalcEdit)
                                                    'If _FieldName.ToUpper = "FNOrderQty".ToUpper Then
                                                    '    If System.Diagnostics.Debugger.IsAttached = True Then
                                                    '        MsgBox("Field Name : " & _FieldName.ToUpper = "FNOrderQty".ToUpper)

                                                    '    End If
                                                    'Else
                                                    '    _Val = .Value.ToString
                                                    'End If

                                                    If _FieldName.ToUpper = "FNOrderQty".ToUpper Or _FieldName.ToUpper = "FNExtraQty".ToUpper Or _FieldName.ToUpper = "FNOrderAmt".ToUpper Or _FieldName.ToUpper = "FNGrandQty".ToUpper And _FieldName.ToUpper = "FNGrandAmt".ToUpper Then
                                                        If System.Diagnostics.Debugger.IsAttached = True Then
                                                            MsgBox("Field Name : " & _FieldName.ToUpper)
                                                        End If
                                                    Else
                                                        _Val = .Value.ToString
                                                    End If

                                                End With
                                            Case "DevExpress.XtraEditors.ComboBoxEdit".ToUpper
                                                With CType(Obj, DevExpress.XtraEditors.ComboBoxEdit)
                                                    If "" & .Properties.Tag.ToString <> "" Then
                                                        _Val = HI.TL.CboList.GetListValue(.Properties.Tag.ToString, .SelectedIndex)
                                                    Else
                                                        _Val = .SelectedIndex.ToString
                                                    End If
                                                End With
                                            Case "DevExpress.XtraEditors.CheckEdit".ToUpper
                                                With CType(Obj, DevExpress.XtraEditors.CheckEdit)
                                                    _Val = .EditValue.ToString
                                                End With
                                            Case "DevExpress.XtraEditors.PictureEdit".ToUpper
                                                'With CType(Obj, DevExpress.XtraEditors.PictureEdit)
                                                '    _Val = HI.UL.ULImage.SaveImage(CType(Obj, DevExpress.XtraEditors.PictureEdit), _SysKey.ToString & "_" & .Name.ToString, "" & .Properties.Tag.ToString)
                                                'End With

                                                REM 2014/12/09
                                                'With CType(Obj, DevExpress.XtraEditors.PictureEdit)
                                                '    _Val = HI.UL.ULImage.SaveImage(CType(Obj, DevExpress.XtraEditors.PictureEdit), _SysKey.ToString & "_" & .Name.ToString, "" & _SystemFilePath)
                                                'End With

                                            Case "DevExpress.XtraEditors.MemoEdit".ToUpper, "DevExpress.XtraEditors.TextEdit".ToUpper, "DevExpress.XtraEditors.DateEdit".ToUpper
                                                _Val = Obj.Text
                                            Case Else
                                                _Val = Obj.Text
                                        End Select

                                    End If

                                Next

                            End If

                            If Not (_FoundControl) Then
                                Select Case UCase(_FieldName)
                                    Case UCase("FDUpdDate"), UCase("FTUpdDate"), UCase("FTUpdTime"), UCase("FDInsDate"), UCase("FTInsDate"), UCase("FTInsTime"), UCase("FTInsUser"), UCase("FTUpdUser")
                                        _FoundControl = True
                                    Case UCase("FTOrderBy")
                                        _FoundControl = True
                                        'Case UCase("FNOrderQty"), UCase("FNExtraQty"), UCase("FNOrderAmt"), UCase("FNGrandQty"), UCase("FNGrandAmt")
                                        '    _FoundControl = False
                                End Select

                            Else
                                '...modify 2014/12/18 
                                Select Case UCase(_FieldName)
                                    Case UCase("FNOrderQty"), UCase("FNExtraQty"), UCase("FNOrderAmt"), UCase("FNGrandQty"), UCase("FNGrandAmt")
                                        If System.Diagnostics.Debugger.IsAttached = True Then
                                            MsgBox("Field Name : " & _FieldName.ToUpper)
                                        End If
                                        _FoundControl = False
                                    Case Else
                                        _FoundControl = True
                                End Select

                            End If

                            If _FoundControl Then

                                'If System.Diagnostics.Debugger.IsAttached = True Then
                                '    If _FieldName.ToUpper = "FTIMAGE1" Or _FieldName.ToUpper = "FTIMAGE2" Or _FieldName.ToUpper = "FTIMAGE3" Or _FieldName.ToUpper = "FTIMAGE4" Then
                                '        MsgBox("Found data FTImage XXX !!!")
                                '    End If
                                'End If

                                If _Values <> "" Then _Values &= ","
                                If _Fields <> "" Then _Fields &= ","

                                _Fields &= _FieldName

                                Select Case UCase(_FieldName)
                                    Case UCase("FDInsDate"), UCase("FTInsDate")
                                        _Values &= HI.UL.ULDate.FormatDateDB & ""
                                        REM 20134/01/04
                                        'Case UCase("FDUpdDate"), UCase("FTUpdDate"), UCase("FTUpdTime"), UCase("FTUpdUser")
                                        '    _Values &= "''"
                                    Case UCase("FDUpdDate"), UCase("FTUpdDate")
                                        _Values &= HI.UL.ULDate.FormatDateDB & ""
                                    Case UCase("FTUpdTime")
                                        _Values &= HI.UL.ULDate.FormatTimeDB & ""
                                    Case UCase("FTUpdUser")
                                        _Values &= "'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                                    Case UCase("FTInsTime")
                                        _Values &= HI.UL.ULDate.FormatTimeDB & ""
                                    Case UCase("FTInsUser")
                                        _Values &= "'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                                    Case UCase("FTOrderBy")
                                        _Values &= "'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                                    Case UCase("FTMainMaterial"), UCase("FTCombination")
                                        '...Nothing
                                        'MsgBox("Field Name : " & UCase(_FieldName))
                                        _Values &= "NULL"
                                    Case UCase("FTImage1"), UCase("FTImage2"), UCase("FTImage3"), UCase("FTImage4")
                                        '...modify 2014/12/09
                                        _Values &= "NULL"
                                    Case Else
                                        'If _FieldName.ToUpper <> "FNOrderQty".ToUpper And _FieldName.ToUpper <> "FNExtraQty".ToUpper And _FieldName.ToUpper <> "FNOrderAmt".ToUpper And _FieldName.ToUpper <> "FNGrandQty".ToUpper And _FieldName.ToUpper <> "FNGrandAmt".ToUpper Then
                                        '    '...Nothing 
                                        'Else
                                        '    Select Case UCase(Microsoft.VisualBasic.Left(_FieldName, 2))
                                        '        Case "FC", "FN"
                                        '            _Values &= HI.UL.ULF.ChkNumeric(_Val) & ""
                                        '        Case "FD"
                                        '            _Values &= "'" & HI.UL.ULDate.ConvertEnDB(_Val) & "'"
                                        '        Case Else
                                        '            _Values &= "'" & HI.UL.ULF.rpQuoted(_Val) & "'"
                                        '    End Select

                                        'End If

                                        Select Case UCase(Microsoft.VisualBasic.Left(_FieldName, 2))
                                            Case "FC", "FN"
                                                _Values &= HI.UL.ULF.ChkNumeric(_Val) & ""
                                            Case "FD"
                                                _Values &= "'" & HI.UL.ULDate.ConvertEnDB(_Val) & "'"
                                            Case Else
                                                _Values &= "'" & HI.UL.ULF.rpQuoted(_Val) & "'"
                                        End Select

                                End Select

                            End If

                        Else

                            '------Update -------------
                            If UCase(_FieldName) = "FTOrderNo".ToUpper Then
                                _FoundControl = True
                                _Val = _Key
                            Else

                                'If _FieldName.ToUpper = "FTIMAGE1" Then
                                '    MsgBox("T-T")
                                'End If

                                For Each Obj As Object In Me.Controls.Find(_FieldName, True)
                                    _FoundControl = True

                                    If UCase(_FieldName) = _FormHeader(cind).MainKey.ToUpper Then
                                        _Val = _SysKey
                                    Else

                                        Select Case Obj.GetType.FullName.ToString.ToUpper
                                            Case "DevExpress.XtraEditors.ButtonEdit".ToUpper
                                                With CType(Obj, DevExpress.XtraEditors.ButtonEdit)
                                                    _Val = "" & .Properties.Tag.ToString
                                                End With
                                            Case "DevExpress.XtraEditors.CalcEdit".ToUpper
                                                REM 2014/12/18
                                                'With CType(Obj, DevExpress.XtraEditors.CalcEdit)
                                                '    _Val = .Value.ToString
                                                'End With

                                                If _FieldName.ToUpper = "FNOrderQty".ToUpper Or _FieldName.ToUpper = "FNExtraQty".ToUpper Or _FieldName.ToUpper = "FNOrderAmt".ToUpper Or _FieldName.ToUpper = "FNGrandQty".ToUpper And _FieldName.ToUpper = "FNGrandAmt".ToUpper Then
                                                    If System.Diagnostics.Debugger.IsAttached = True Then
                                                        MsgBox("Field Name : " & _FieldName.ToUpper)
                                                    End If
                                                Else
                                                    With CType(Obj, DevExpress.XtraEditors.CalcEdit)
                                                        _Val = .Value.ToString
                                                    End With
                                                End If

                                            Case "DevExpress.XtraEditors.ComboBoxEdit".ToUpper
                                                With CType(Obj, DevExpress.XtraEditors.ComboBoxEdit)
                                                    If "" & .Properties.Tag.ToString <> "" Then
                                                        _Val = HI.TL.CboList.GetListValue(.Properties.Tag.ToString, .SelectedIndex)
                                                    Else
                                                        _Val = .SelectedIndex.ToString
                                                    End If
                                                End With
                                            Case "DevExpress.XtraEditors.CheckEdit".ToUpper
                                                With CType(Obj, DevExpress.XtraEditors.CheckEdit)
                                                    _Val = .EditValue.ToString
                                                End With
                                            Case "DevExpress.XtraEditors.PictureEdit".ToUpper
                                                'With CType(Obj, DevExpress.XtraEditors.PictureEdit)
                                                '    _Val = HI.UL.ULImage.SaveImage(CType(Obj, DevExpress.XtraEditors.PictureEdit), _SysKey.ToString & "_" & .Name.ToString, "" & .Properties.Tag.ToString)
                                                'End With

                                                REM 2014/12/09
                                                'With CType(Obj, DevExpress.XtraEditors.PictureEdit)
                                                '    _Val = HI.UL.ULImage.SaveImage(CType(Obj, DevExpress.XtraEditors.PictureEdit), _SysKey.ToString & "_" & .Name.ToString, "" & _SystemFilePath)
                                                'End With

                                            Case "DevExpress.XtraEditors.MemoEdit".ToUpper, "DevExpress.XtraEditors.TextEdit".ToUpper, "DevExpress.XtraEditors.DateEdit".ToUpper
                                                _Val = Obj.Text
                                            Case Else
                                                _Val = Obj.Text
                                        End Select

                                    End If

                                Next

                            End If


                            If Not (_FoundControl) Then
                                Select Case UCase(_FieldName)
                                    Case UCase("FDUpdDate"), UCase("FTUpdDate"), UCase("FTUpdTime"), UCase("FDInsDate"), UCase("FTInsDate"), UCase("FTInsTime"), UCase("FTInsUser"), UCase("FTUpdUser")
                                        _FoundControl = True
                                    Case UCase("FTOrderBy")
                                        _FoundControl = True
                                End Select

                            Else
                                '...modify 2014/12/18 
                                Select Case UCase(_FieldName)
                                    Case UCase("FNOrderQty"), UCase("FNExtraQty"), UCase("FNOrderAmt"), UCase("FNGrandQty"), UCase("FNGrandAmt")
                                        If System.Diagnostics.Debugger.IsAttached = True Then
                                            MsgBox("Field Name : " & _FieldName.ToUpper)
                                        End If
                                        _FoundControl = False
                                    Case Else
                                        _FoundControl = True
                                End Select

                            End If

                            If _FoundControl Then

                                Select Case UCase(_FieldName)
                                    Case UCase("FDInsDate"), UCase("FTInsDate"), UCase("FTInsTime"), UCase("FTInsUser")
                                    Case UCase("FTOrderBy")
                                        If Val(HI.Conn.SQLConn.GetFieldOnBeginTrans("SELECT TOP 1 A.FNHSysCmpId FROM [HITECH_MERCHAN]..[TMERTOrder] AS A WITH(NOLoCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "'", HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")) = 0 Then
                                            _bFONoBlankComp = True
                                            If _Values <> "" Then _Values &= ","
                                        End If
                                    Case UCase("FTMainMaterial"), UCase("FTCombination")
                                        '...Nothing
                                    Case UCase("FTImage1"), UCase("FTImage2"), UCase("FTImage3"), UCase("FTImage4")
                                        '...Nothing
                                    Case Else
                                        If _Values <> "" Then _Values &= ","
                                End Select

                                Select Case UCase(_FieldName)
                                    Case UCase("FDUpdDate"), UCase("FTUpdDate")
                                        _Values &= _FieldName & "=" & HI.UL.ULDate.FormatDateDB & ""
                                    Case UCase("FTUpdTime")
                                        _Values &= _FieldName & "=" & HI.UL.ULDate.FormatTimeDB & ""
                                    Case UCase("FDInsDate"), UCase("FTInsDate"), UCase("FTInsTime"), UCase("FTInsUser")
                                    Case UCase("FTUpdUser")
                                        _Values &= _FieldName & "='" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                                    Case UCase("FTOrderBy")
                                        If _bFONoBlankComp = True Then
                                            _Values &= _FieldName & "=" & "'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                                        End If
                                    Case UCase("FTMainMaterial"), UCase("FTCombination")
                                        '...Nothing
                                    Case UCase("FTImage1"), UCase("FTImage2"), UCase("FTImage3"), UCase("FTImage4")
                                        '...Nothing
                                        'If System.Diagnostics.Debugger.IsAttached = True Then
                                        '    MsgBox("Field Name is : " & UCase(_FieldName), MsgBoxStyle.Information + MsgBoxStyle.OkOnly, My.Application.Info.Title.ToString)
                                        'End If

                                    Case Else
                                        Select Case UCase(Microsoft.VisualBasic.Left(_FieldName, 2))
                                            Case "FC", "FN"
                                                _Values &= _FieldName & "=" & HI.UL.ULF.ChkNumeric(_Val) & ""
                                            Case "FD"
                                                _Values &= _FieldName & "='" & HI.UL.ULDate.ConvertEnDB(_Val) & "'"
                                            Case Else
                                                _Values &= _FieldName & "='" & HI.UL.ULF.rpQuoted(_Val) & "'"
                                        End Select

                                End Select

                            End If

                        End If

                    Next

                    If (_StateNew) Then
                        _Str = " INSERT INTO   " & _FormHeader(cind).TableName & "(" & _Fields & ") VALUES (" & _Values & ")"
                    Else
                        '' Create Data Table before update new value
                        '=================================================================================================================================================================================================================
                        '...Main Material
                        Dim tFTMainMaterialDescBF As String
                        Select Case HI.ST.Lang.Language
                            Case HI.ST.Lang.eLang.TH
                                tFTMainMaterialDescBF = HI.Conn.SQLConn.GetFieldOnBeginTrans("EXEC SP_GETMAINMATERIALDESC_FACTORY_ORDER N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "', N'TH' ;", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                            Case Else
                                tFTMainMaterialDescBF = HI.Conn.SQLConn.GetFieldOnBeginTrans("EXEC SP_GETMAINMATERIALDESC_FACTORY_ORDER N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "', N'EN' ;", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                        End Select
                        '...Combination
                        Dim tFTCombinationBF As String
                        tFTCombinationBF = HI.Conn.SQLConn.GetFieldOnBeginTrans("SELECT ISNULL(A.FTCombination,'') AS FTCombination FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A WITH(NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                        '=================================================================================================================================================================================================================

                        REM By Tid 2014/04/09
                        'sqlBefore = ""
                        'sqlBefore = "SELECT * FROM " & _FormHeader(cind).TableName & vbCrLf & _
                        '            "WHERE  " & _FormHeader(cind).MainKey & "='" & _SysKey.ToString & "' "

                        Dim oStrBuilder As New System.Text.StringBuilder()

                        oStrBuilder.Remove(0, oStrBuilder.Length)

                        Select Case HI.ST.Lang.Language
                            Case HI.ST.Lang.eLang.EN
                                oStrBuilder.AppendLine("SELECT A.[FTInsUser],A.[FDInsDate],A.[FTInsTime]")
                                oStrBuilder.AppendLine("      ,A.[FTUpdUser],A.[FDUpdDate],A.[FTUpdTime]")
                                oStrBuilder.AppendLine("      ,A.[FTOrderNo],A.[FDOrderDate],A.[FTOrderBy]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SYSTEM) & "]..[HSysListData] AS L1 WITH(NOLOCK) WHERE L1.FTListName = N'FNOrderType' AND L1.FNListIndex = A.[FNOrderType]),'') AS [FNOrderType]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCmpNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCmp] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCmpId = A.FNHSysCmpId), '') AS [FNHSysCmpId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCmpRunNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCmpRun] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCmpRunId = A.FNHSysCmpRunId), '') AS [FNHSysCmpRunId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTStyleNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS L1 WITH(NOLOCK) WHERE L1.FNHSysStyleId =  A.FNHSysStyleId),'') AS [FNHSysStyleId]")
                                oStrBuilder.AppendLine("      ,A.[FTPORef] AS [FTPORef]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCustNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCustomer] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCustId = A.FNHSysCustId),'') AS [FNHSysCustId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTAgencyNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMAgency] AS L1 WITH(NOLOCK) WHERE L1.FNHSysAgencyId = A.FNHSysAgencyId),'') AS [FNHSysAgencyId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTProdTypeNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMProductType] AS L1 WITH(NOLOCK) WHERE L1.FNHSysProdTypeId = A.FNHSysProdTypeId),'') AS [FNHSysProdTypeId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyerNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuyer] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyerId = A.FNHSysBuyerId), '') AS [FNHSysBuyerId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuy] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyId = A.FNHSysBuyId),'') AS [FNHSysBuyId]")
                                oStrBuilder.AppendLine("      ,'" & HI.UL.ULF.rpQuoted(tFTMainMaterialDescBF) & "' AS [FTMainMaterial]")
                                oStrBuilder.AppendLine("      ,'" & HI.UL.ULF.rpQuoted(tFTCombinationBF) & "'  AS [FTCombination]")
                                oStrBuilder.AppendLine("      ,A.[FTRemark]")
                                oStrBuilder.AppendLine("      ,A.[FTStateOrderApp]")
                                oStrBuilder.AppendLine("      ,A.[FTAppBy]")
                                oStrBuilder.AppendLine("      ,A.[FDAppDate]")
                                oStrBuilder.AppendLine("      ,A.[FTAppTime]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTNameEN FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_SYSTEM) & "]..[HSysListData] AS L1 WITH(NOLOCK) WHERE L1.FTListName = N'FNJobState' AND L1.FNListIndex = A.[FNJobState]),'') AS [FNJobState]")
                                oStrBuilder.AppendLine("      ,A.[FTStateBy]")
                                oStrBuilder.AppendLine("      ,A.[FDStateDate]")
                                oStrBuilder.AppendLine("      ,A.[FTStateTime]")
                                oStrBuilder.AppendLine("      ,A.[FTImage1]")
                                oStrBuilder.AppendLine("      ,A.[FTImage2]")
                                oStrBuilder.AppendLine("      ,A.[FTImage3]")
                                oStrBuilder.AppendLine("      ,A.[FTImage4]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBrandNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBrand] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBrandId = A.FNHSysBrandId),'') AS [FNHSysBrandId]")
                                oStrBuilder.AppendLine("      ,A.[FTCancelAppBy]")
                                oStrBuilder.AppendLine("      ,A.[FDCancelAppDate]")
                                oStrBuilder.AppendLine("      ,A.[FDCancelAppTime]")
                                oStrBuilder.AppendLine("      ,A.[FTCancelAppRemark]")

                                'oStrBuilder.AppendLine("      ,A.[FPOrderImage1]")
                                'oStrBuilder.AppendLine("      ,A.[FPOrderImage2]")
                                'oStrBuilder.AppendLine("      ,A.[FPOrderImage3]")
                                'oStrBuilder.AppendLine("      ,A.[FPOrderImage4]")

                            Case HI.ST.Lang.eLang.TH
                                oStrBuilder.AppendLine("SELECT A.[FTInsUser],A.[FDInsDate],A.[FTInsTime]")
                                oStrBuilder.AppendLine("      ,A.[FTUpdUser],A.[FDUpdDate],A.[FTUpdTime]")
                                oStrBuilder.AppendLine("      ,A.[FTOrderNo],A.[FDOrderDate],A.[FTOrderBy]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SYSTEM) & "]..[HSysListData] AS L1 WITH(NOLOCK) WHERE L1.FTListName = N'FNOrderType' AND L1.FNListIndex = A.[FNOrderType]),'') AS [FNOrderType]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCmpNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCmp] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCmpId = A.FNHSysCmpId), '') AS [FNHSysCmpId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCmpRunNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCmpRun] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCmpRunId = A.FNHSysCmpRunId), '') AS [FNHSysCmpRunId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTStyleNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS L1 WITH(NOLOCK) WHERE L1.FNHSysStyleId =  A.FNHSysStyleId),'') AS [FNHSysStyleId]")
                                oStrBuilder.AppendLine("      ,A.[FTPORef] AS [FTPORef]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCustNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCustomer] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCustId = A.FNHSysCustId),'') AS [FNHSysCustId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTAgencyNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMAgency] AS L1 WITH(NOLOCK) WHERE L1.FNHSysAgencyId = A.FNHSysAgencyId),'') AS [FNHSysAgencyId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTProdTypeNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMProductType] AS L1 WITH(NOLOCK) WHERE L1.FNHSysProdTypeId = A.FNHSysProdTypeId),'') AS [FNHSysProdTypeId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyerNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuyer] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyerId = A.FNHSysBuyerId), '') AS [FNHSysBuyerId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuy] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyId = A.FNHSysBuyId),'') AS [FNHSysBuyId]")
                                oStrBuilder.AppendLine("      ,'" & HI.UL.ULF.rpQuoted(tFTMainMaterialDescBF) & "' AS [FTMainMaterial]")
                                oStrBuilder.AppendLine("      ,'" & HI.UL.ULF.rpQuoted(tFTCombinationBF) & "'  AS [FTCombination]")
                                oStrBuilder.AppendLine("      ,A.[FTRemark]")
                                oStrBuilder.AppendLine("      ,A.[FTStateOrderApp]")
                                oStrBuilder.AppendLine("      ,A.[FTAppBy]")
                                oStrBuilder.AppendLine("      ,A.[FDAppDate]")
                                oStrBuilder.AppendLine("      ,A.[FTAppTime]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SYSTEM) & "]..[HSysListData] AS L1 WITH(NOLOCK) WHERE L1.FTListName = N'FNJobState' AND L1.FNListIndex = A.[FNJobState]),'') AS [FNJobState]")
                                oStrBuilder.AppendLine("      ,A.[FTStateBy]")
                                oStrBuilder.AppendLine("      ,A.[FDStateDate]")
                                oStrBuilder.AppendLine("      ,A.[FTStateTime]")
                                oStrBuilder.AppendLine("      ,A.[FTImage1]")
                                oStrBuilder.AppendLine("      ,A.[FTImage2]")
                                oStrBuilder.AppendLine("      ,A.[FTImage3]")
                                oStrBuilder.AppendLine("      ,A.[FTImage4]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBrandNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBrand] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBrandId = A.FNHSysBrandId),'') AS [FNHSysBrandId]")
                                oStrBuilder.AppendLine("      ,A.[FTCancelAppBy]")
                                oStrBuilder.AppendLine("      ,A.[FDCancelAppDate]")
                                oStrBuilder.AppendLine("      ,A.[FDCancelAppTime]")
                                oStrBuilder.AppendLine("      ,A.[FTCancelAppRemark]")

                                'oStrBuilder.AppendLine("      ,A.[FPOrderImage1]")
                                'oStrBuilder.AppendLine("      ,A.[FPOrderImage2]")
                                'oStrBuilder.AppendLine("      ,A.[FPOrderImage3]")
                                'oStrBuilder.AppendLine("      ,A.[FPOrderImage4]")

                            Case Else
                                oStrBuilder.AppendLine("SELECT A.[FTInsUser],A.[FDInsDate],A.[FTInsTime]")
                                oStrBuilder.AppendLine("      ,A.[FTUpdUser],A.[FDUpdDate],A.[FTUpdTime]")
                                oStrBuilder.AppendLine("      ,A.[FTOrderNo],A.[FDOrderDate],A.[FTOrderBy]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SYSTEM) & "]..[HSysListData] AS L1 WITH(NOLOCK) WHERE L1.FTListName = N'FNOrderType' AND L1.FNListIndex = A.[FNOrderType]),'') AS [FNOrderType]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCmpNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCmp] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCmpId = A.FNHSysCmpId), '') AS [FNHSysCmpId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCmpRunNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCmpRun] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCmpRunId = A.FNHSysCmpRunId), '') AS [FNHSysCmpRunId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTStyleNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS L1 WITH(NOLOCK) WHERE L1.FNHSysStyleId =  A.FNHSysStyleId),'') AS [FNHSysStyleId]")
                                oStrBuilder.AppendLine("      ,A.[FTPORef] AS [FTPORef]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCustNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCustomer] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCustId = A.FNHSysCustId),'') AS [FNHSysCustId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTAgencyNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMAgency] AS L1 WITH(NOLOCK) WHERE L1.FNHSysAgencyId = A.FNHSysAgencyId),'') AS [FNHSysAgencyId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTProdTypeNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMProductType] AS L1 WITH(NOLOCK) WHERE L1.FNHSysProdTypeId = A.FNHSysProdTypeId),'') AS [FNHSysProdTypeId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyerNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuyer] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyerId = A.FNHSysBuyerId), '') AS [FNHSysBuyerId]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuy] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyId = A.FNHSysBuyId),'') AS [FNHSysBuyId]")
                                oStrBuilder.AppendLine("      ,'" & HI.UL.ULF.rpQuoted(tFTMainMaterialDescBF) & "' AS [FTMainMaterial]")
                                oStrBuilder.AppendLine("      ,'" & HI.UL.ULF.rpQuoted(tFTCombinationBF) & "'  AS [FTCombination]")
                                oStrBuilder.AppendLine("      ,A.[FTRemark]")
                                oStrBuilder.AppendLine("      ,A.[FTStateOrderApp]")
                                oStrBuilder.AppendLine("      ,A.[FTAppBy]")
                                oStrBuilder.AppendLine("      ,A.[FDAppDate]")
                                oStrBuilder.AppendLine("      ,A.[FTAppTime]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SYSTEM) & "]..[HSysListData] AS L1 WITH(NOLOCK) WHERE L1.FTListName = N'FNJobState' AND L1.FNListIndex = A.[FNJobState]),'') AS [FNJobState]")
                                oStrBuilder.AppendLine("      ,A.[FTStateBy]")
                                oStrBuilder.AppendLine("      ,A.[FDStateDate]")
                                oStrBuilder.AppendLine("      ,A.[FTStateTime]")
                                oStrBuilder.AppendLine("      ,A.[FTImage1]")
                                oStrBuilder.AppendLine("      ,A.[FTImage2]")
                                oStrBuilder.AppendLine("      ,A.[FTImage3]")
                                oStrBuilder.AppendLine("      ,A.[FTImage4]")
                                oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBrandNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBrand] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBrandId = A.FNHSysBrandId),'') AS [FNHSysBrandId]")
                                oStrBuilder.AppendLine("      ,A.[FTCancelAppBy]")
                                oStrBuilder.AppendLine("      ,A.[FDCancelAppDate]")
                                oStrBuilder.AppendLine("      ,A.[FDCancelAppTime]")
                                oStrBuilder.AppendLine("      ,A.[FTCancelAppRemark]")

                                'oStrBuilder.AppendLine("      ,A.[FPOrderImage1]")
                                'oStrBuilder.AppendLine("      ,A.[FPOrderImage2]")
                                'oStrBuilder.AppendLine("      ,A.[FPOrderImage3]")
                                'oStrBuilder.AppendLine("      ,A.[FPOrderImage4]")

                        End Select

                        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrder] AS A")
                        oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';")

                        sqlBefore = ""
                        sqlBefore = oStrBuilder.ToString()

                        dtBefore = HI.Conn.SQLConn.GetDataTableOnbeginTrans(sqlBefore, Conn.DB.DataBaseName.DB_MERCHAN)

                        '...compare revised factory order no. information
                        '=====================================================================================================================================
                        _Str = ""
                        _Str = "SELECT A.FTOrderNo, A.FTPORef, A.FNHSysSeasonId, A.FNHSysPlantId,"
                        _Str &= Environment.NewLine & "       A.FPOrderImage1, A.FPOrderImage2, A.FPOrderImage3, A.FPOrderImage4,"
                        _Str &= Environment.NewLine & "       A.FDDateChangeOrderImage1, A.FTTimeChangeOrderImage1, A.FTUserChangeOrderImage1,"
                        _Str &= Environment.NewLine & "       A.FDDateChangeOrderImage2, A.FTTimeChangeOrderImage2, A.FTUserChangeOrderImage2,"
                        _Str &= Environment.NewLine & "       A.FDDateChangeOrderImage3, A.FTTimeChangeOrderImage3, A.FTUserChangeOrderImage3,"
                        _Str &= Environment.NewLine & "       A.FDDateChangeOrderImage4, A.FTTimeChangeOrderImage4, A.FTUserChangeOrderImage4"
                        _Str &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK)"
                        _Str &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"

                        DTBeforeRevised = HI.Conn.SQLConn.GetDataTableOnbeginTrans(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                        '=====================================================================================================================================

                        _Str = ""
                        _Str = "SELECT A.FTOrderNo"

                        Select Case HI.ST.Lang.Language
                            Case HI.ST.Lang.eLang.EN
                                _Str &= Environment.NewLine & "        ,ISNULL((SELECT TOP 1 L1.FTStyleNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS L1 WITH(NOLOCK) WHERE L1.FNHSysStyleId = A.FNHSysStyleId),'') AS [FNHSysStyleId]"
                            Case HI.ST.Lang.eLang.TH
                                _Str &= Environment.NewLine & "        ,ISNULL((SELECT TOP 1 L1.FTStyleNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS L1 WITH(NOLOCK) WHERE L1.FNHSysStyleId = A.FNHSysStyleId),'') AS [FNHSysStyleId]"
                            Case Else
                                _Str &= Environment.NewLine & "        ,ISNULL((SELECT TOP 1 L1.FTStyleNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS L1 WITH(NOLOCK) WHERE L1.FNHSysStyleId = A.FNHSysStyleId),'') AS [FNHSysStyleId]"
                        End Select

                        REM 2014/12/18
                        '_Str &= Environment.NewLine & "        , A.FDUpdDate, A.FTUpdUser, A.FTUpdTime"
                        '_Str &= Environment.NewLine & "        , A.FNOrderQty, A.FNExtraQty, A.FNOrderAmt, A.FNGrandQty, A.FNGrandAmt"
                        '_Str &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A WITH(NOLOCK)"
                        '_Str &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';"

                        _Str &= Environment.NewLine & "        , A.FDUpdDate, A.FTUpdUser, A.FTUpdTime"
                        _Str &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A WITH(NOLOCK)"
                        _Str &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';"

                        oDBdtOrderNoAmntBF = Nothing
                        oDBdtOrderNoAmntBF = HI.Conn.SQLConn.GetDataTableOnbeginTrans(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                        _Str = ""
                        _Str = " UPDATE  " & _FormHeader(cind).TableName & " SET " & _Values & " WHERE  " & _FormHeader(cind).MainKey & "='" & _SysKey.ToString & "' "
                    End If

                    If HI.Conn.SQLConn.Execute_Tran(_Str, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) <= 0 Then
                        HI.Conn.SQLConn.Tran.Rollback()
                        HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                        HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                        Return False
                    End If

                Next

                HI.Conn.SQLConn.Tran.Commit()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                '...keep Log when user change order image 
                '================================================================================================================
                If Not (_StateNew) Then

                    _Str = " UPDATE A"
                    _Str &= Environment.NewLine & " SET  FTOrderBy = '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    _Str &= Environment.NewLine & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A"
                    _Str &= Environment.NewLine & " WHERE A.FTOrderNo = N'" & _SysKey.ToString() & "' "
                    _Str &= Environment.NewLine & " AND  ISNULL(A.FTOrderBy,'') = '' "

                    HI.Conn.SQLConn.ExecuteNonQuery(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                    _Str = ""
                    _Str = "SELECT  A.FTOrderNo,"
                    _Str &= Environment.NewLine & "          A.FDUpdDate,"
                    _Str &= Environment.NewLine & "          A.FTUpdTime,"
                    _Str &= Environment.NewLine & "          CASE WHEN ISNULL(DATALENGTH(A.FPOrderImage1), 0) > 0 THEN '1'  ELSE '0' END AS FTChkOrderImage1,"
                    _Str &= Environment.NewLine & "          CASE WHEN ISNULL(DATALENGTH(A.FPOrderImage2), 0) > 0 THEN '1'  ELSE '0' END AS FTChkOrderImage2,"
                    _Str &= Environment.NewLine & "          CASE WHEN ISNULL(DATALENGTH(A.FPOrderImage3), 0) > 0 THEN '1'  ELSE '0' END AS FTChkOrderImage3,"
                    _Str &= Environment.NewLine & "          CASE WHEN ISNULL(DATALENGTH(A.FPOrderImage4), 0) > 0 THEN '1'  ELSE '0' END AS FTChkOrderImage4"
                    _Str &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK)"
                    _Str &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(_SysKey.ToString()) & "';"

                    Dim DTOrderImage As System.Data.DataTable
                    DTOrderImage = HI.Conn.SQLConn.GetDataTable(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                    Dim tempFDUpdDate As String, tempFTUpdTime As String
                    Dim tempFTChkOrderImage1 As String, tempFTChkOrderImage2 As String, tempFTChkOrderImage3 As String, tempFTChkOrderImage4 As String

                    For Each oDataRow As System.Data.DataRow In DTOrderImage.Rows

                        tempFDUpdDate = oDataRow!FDUpdDate
                        tempFTUpdTime = oDataRow!FTUpdTime
                        tempFTChkOrderImage1 = oDataRow!FTChkOrderImage1
                        tempFTChkOrderImage2 = oDataRow!FTChkOrderImage2
                        tempFTChkOrderImage3 = oDataRow!FTChkOrderImage3
                        tempFTChkOrderImage4 = oDataRow!FTChkOrderImage4

                        Exit For

                    Next

                    If Not DTOrderImage Is Nothing Then DTOrderImage.Dispose()

                    '...FNStateType : 0 = Edit, 1 = New, 2 = Delete
                    '...dynamic string for update state change order image

                    _Str = ""

                    If Me.LoadCompleteFTImage1 = True Then
                        Dim nGUIDFPOrderImage1 As Guid

                        nGUIDFPOrderImage1 = New Guid()

                        Dim numOrderImage1FNStateType As Integer

                        If Not Me.FTImage1.Image Is Nothing And tempFTChkOrderImage1 = "1" Then
                            numOrderImage1FNStateType = 0
                        ElseIf Not Me.FTImage1.Image Is Nothing And tempFTChkOrderImage1 = "0" Then
                            numOrderImage1FNStateType = 1
                        ElseIf Me.FTImage1.Image Is Nothing And tempFTChkOrderImage1 = "1" Then
                            numOrderImage1FNStateType = 2
                        End If

                        _Str = "UPDATE A"
                        _Str &= Environment.NewLine & "SET  A.[FDDateChangeOrderImage1] = '" & tempFDUpdDate & "',"
                        _Str &= Environment.NewLine & "     A.[FTTimeChangeOrderImage1] = '" & tempFTUpdTime & "',"
                        _Str &= Environment.NewLine & "     A.[FTUserChangeOrderImage1] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                        _Str &= Environment.NewLine & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A"
                        _Str &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & _SysKey.ToString() & "';"

                        _Str &= Environment.NewLine & "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_LOG) & "].[dbo].[HSysAuditLog] ([FTFormName], [FTTableName], [FTUpdUser], [FDUpdDate], [FTUpdTime], [FTChangeObject], [FTChangeFrom], [FTChangeTo], [FTRefGUID], [FTRefDocKey], [FNStateType])"
                        _Str &= Environment.NewLine & "SELECT N'wOrder', N'[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[" & Me.SysTableName & "]', N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "', '" & tempFDUpdDate & "', '" & tempFTUpdTime & "', N'FPOrderImage1', N'Change Order Image1', N'Change Order Image1', N'" & nGUIDFPOrderImage1.ToString() & "', N'" & _SysKey.ToString() & "|" & Me.FNHSysStyleId.Text & "', " & numOrderImage1FNStateType & ";"

                    End If

                    If Me.LoadCompleteFTImage2 = True Then
                        Dim nGUIDFPOrderImage2 As Guid

                        nGUIDFPOrderImage2 = New Guid()

                        Dim numOrderImage2FNStateType As Integer

                        If Not Me.FTImage2.Image Is Nothing And tempFTChkOrderImage2 = "1" Then
                            numOrderImage2FNStateType = 0
                        ElseIf Not Me.FTImage2.Image Is Nothing And tempFTChkOrderImage2 = "0" Then
                            numOrderImage2FNStateType = 1
                        ElseIf Me.FTImage2.Image Is Nothing And tempFTChkOrderImage2 = "1" Then
                            numOrderImage2FNStateType = 2
                        End If

                        If _Str <> "" Then _Str = _Str & Environment.NewLine

                        _Str = _Str & "UPDATE A"
                        _Str &= Environment.NewLine & "SET  A.[FDDateChangeOrderImage2] = '" & tempFDUpdDate & "',"
                        _Str &= Environment.NewLine & "     A.[FTTimeChangeOrderImage2] = '" & tempFTUpdTime & "',"
                        _Str &= Environment.NewLine & "     A.[FTUserChangeOrderImage2] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                        _Str &= Environment.NewLine & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A"
                        _Str &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & _SysKey.ToString() & "';"

                        _Str &= Environment.NewLine & "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_LOG) & "].[dbo].[HSysAuditLog] ([FTFormName], [FTTableName], [FTUpdUser], [FDUpdDate], [FTUpdTime], [FTChangeObject], [FTChangeFrom], [FTChangeTo], [FTRefGUID], [FTRefDocKey], [FNStateType])"
                        _Str &= Environment.NewLine & "SELECT N'wOrder', N'[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[" & Me.SysTableName & "]', N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "', '" & tempFDUpdDate & "', '" & tempFTUpdTime & "', N'FPOrderImage2', N'Change Order Image2', N'Change Order Image2', N'" & nGUIDFPOrderImage2.ToString() & "', N'" & _SysKey.ToString() & "|" & Me.FNHSysStyleId.Text & "', " & numOrderImage2FNStateType & ";"

                    End If

                    If Me.LoadCompleteFTImage3 = True Then
                        Dim nGUIDFPOrderImage3 As Guid

                        nGUIDFPOrderImage3 = New Guid()

                        Dim numOrderImage3FNStateType As Integer

                        If Not Me.FTImage3.Image Is Nothing And tempFTChkOrderImage3 = "1" Then
                            numOrderImage3FNStateType = 0
                        ElseIf Not Me.FTImage3.Image Is Nothing And tempFTChkOrderImage3 = "0" Then
                            numOrderImage3FNStateType = 1
                        ElseIf Me.FTImage3.Image Is Nothing And tempFTChkOrderImage3 = "1" Then
                            numOrderImage3FNStateType = 2
                        End If

                        If _Str <> "" Then _Str = _Str & Environment.NewLine

                        _Str = _Str & "UPDATE A"
                        _Str &= Environment.NewLine & "SET  A.[FDDateChangeOrderImage3] = '" & tempFDUpdDate & "',"
                        _Str &= Environment.NewLine & "     A.[FTTimeChangeOrderImage3] = '" & tempFTUpdTime & "',"
                        _Str &= Environment.NewLine & "     A.[FTUserChangeOrderImage3] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                        _Str &= Environment.NewLine & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A"
                        _Str &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & _SysKey.ToString() & "';"

                        _Str &= Environment.NewLine & "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_LOG) & "].[dbo].[HSysAuditLog] ([FTFormName], [FTTableName], [FTUpdUser], [FDUpdDate], [FTUpdTime], [FTChangeObject], [FTChangeFrom], [FTChangeTo], [FTRefGUID], [FTRefDocKey], [FNStateType])"
                        _Str &= Environment.NewLine & "SELECT N'wOrder', N'[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[" & Me.SysTableName & "]', N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "', '" & tempFDUpdDate & "', '" & tempFTUpdTime & "', N'FPOrderImage3', N'Change Order Image3', N'Change Order Image3', N'" & nGUIDFPOrderImage3.ToString() & "', N'" & _SysKey.ToString() & "|" & Me.FNHSysStyleId.Text & "', " & numOrderImage3FNStateType & ";"

                    End If

                    If Me.LoadCompleteFTImage4 = True Then
                        Dim nGUIDFPOrderImage4 As Guid

                        nGUIDFPOrderImage4 = New Guid()

                        Dim numOrderImage4FNStateType As Integer

                        If Not Me.FTImage4.Image Is Nothing And tempFTChkOrderImage4 = "1" Then
                            numOrderImage4FNStateType = 0
                        ElseIf Not Me.FTImage4.Image Is Nothing And tempFTChkOrderImage4 = "0" Then
                            numOrderImage4FNStateType = 1
                        ElseIf Me.FTImage4.Image Is Nothing And tempFTChkOrderImage4 = "1" Then
                            numOrderImage4FNStateType = 2
                        End If

                        If _Str <> "" Then _Str = _Str & Environment.NewLine

                        _Str = _Str & "UPDATE A"
                        _Str &= Environment.NewLine & "SET  A.[FDDateChangeOrderImage4] = '" & tempFDUpdDate & "',"
                        _Str &= Environment.NewLine & "     A.[FTTimeChangeOrderImage4] = '" & tempFTUpdTime & "',"
                        _Str &= Environment.NewLine & "     A.[FTUserChangeOrderImage4] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                        _Str &= Environment.NewLine & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A"
                        _Str &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & _SysKey.ToString() & "';"

                        _Str &= Environment.NewLine & "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_LOG) & "].[dbo].[HSysAuditLog] ([FTFormName], [FTTableName], [FTUpdUser], [FDUpdDate], [FTUpdTime], [FTChangeObject], [FTChangeFrom], [FTChangeTo], [FTRefGUID], [FTRefDocKey], [FNStateType])"
                        _Str &= Environment.NewLine & "SELECT N'wOrder', N'[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[" & Me.SysTableName & "]', N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "', '" & tempFDUpdDate & "', '" & tempFTUpdTime & "', N'FPOrderImage4', N'Change Order Image4', N'Change Order Image4', N'" & nGUIDFPOrderImage4.ToString() & "', N'" & _SysKey.ToString() & "|" & Me.FNHSysStyleId.Text & "', " & numOrderImage4FNStateType & ";"

                    End If

                    '...write log when user change order image
                    If _Str <> "" Then
                        HI.Conn.SQLConn.ExecuteNonQuery(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                    End If

                End If
                '================================================================================================================

                '...Modify Save Factory Order No ImageXXX : represent image to database merchan TMERTOrder
                '================================================================================================================
                HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(HI.Conn.DB.DataBaseName.DB_MERCHAN)
                HI.Conn.SQLConn.SqlConnectionOpen()

                _Str = ""
                _Str = "UPDATE A"
                _Str &= Environment.NewLine & "SET A.[FPOrderImage1] = @FPOrderImage1,"
                _Str &= Environment.NewLine & "    A.[FPOrderImage2] = @FPOrderImage2,"
                _Str &= Environment.NewLine & "    A.[FPOrderImage3] = @FPOrderImage3,"
                _Str &= Environment.NewLine & "    A.[FPOrderImage4] = @FPOrderImage4"
                _Str &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A"
                _Str &= Environment.NewLine & "WHERE  A.FTOrderNo = @FTOrderNo"

                '_Str = "UPDATE [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrder]"
                '_Str &= Environment.NewLine & "SET  [FPOrderImage1] = @FPOrderImage1"
                '_Str &= Environment.NewLine & "    ,[FPOrderImage2] = @FPOrderImage2"
                '_Str &= Environment.NewLine & "    ,[FPOrderImage3] = @FPOrderImage3"
                '_Str &= Environment.NewLine & "    ,[FPOrderImage4] = @FPOrderImage4"
                '_Str &= Environment.NewLine & "WHERE  [FTOrderNo] = @FTOrderNo"

                'If HI.Conn.SQLConn.Cnn.State = ConnectionState.Open Then
                '    MsgBox("Connection is open ...")
                'Else
                '    MsgBox("Connection is closed !!!")
                'End If

                Dim cmd As New SqlCommand(_Str, HI.Conn.SQLConn.Cnn)

                cmd.Parameters.AddWithValue("FTOrderNo", IIf(_StateNew = True, _Key, _SysKey))

                '...FPOrderImage1
                '---------------------------------------------------------------------------------------------------------------------------------------
                'Dim ms As New MemoryStream()
                '.Image.Save(ms, System.Drawing.Imaging.ImageFormat.Jpeg)
                'Dim data As Byte() = ms.GetBuffer()

                'Dim p As New SqlParameter("@FTLayOutStream", SqlDbType.Image)
                'p.Value = data

                '///////////////////////////////////////////////////////////////////
                'Dim data As Byte() = Nothing

                'For Each Obj As Object In Me.Controls.Find("FTImage1", True)
                '    Select Case HI.ENM.Control.GeTypeControl(Obj)
                '        Case ENM.Control.ControlType.PictureEdit
                '            data = HI.UL.ULImage.ConvertImageToByteArray(CType(Obj, DevExpress.XtraEditors.PictureEdit).Image, UL.ULImage.PicType.Nothing)
                '    End Select
                'Next

                'Dim p As New SqlParameter("@FPOrderImage1", SqlDbType.Image)
                'p.Value = data

                'cmd.Parameters.Add(p)
                '///////////////////////////////////////////////////////////////////

                Dim msFPOrderImage1 As New MemoryStream()
                Dim data As Byte() = Nothing

                For Each Obj As Object In Me.Controls.Find("FTImage1", True)
                    Select Case HI.ENM.Control.GeTypeControl(Obj)
                        Case ENM.Control.ControlType.PictureEdit
                            If Not Obj.Image Is Nothing Then
                                ' Obj.Image.Save(msFPOrderImage1, System.Drawing.Imaging.ImageFormat.Jpeg)
                                data = HI.UL.ULImage.ConvertImageToByteArray(Obj.Image, UL.ULImage.PicType.Employee) 'msFPOrderImage1.GetBuffer()
                            End If

                    End Select

                Next

                'Dim p As New SqlParameter("@FPOrderImage1", SqlDbType.Image)
                'p.Value = data

                ''cmd.Parameters.Add(p)
                'cmd.Parameters.Add(IIf(DBNull.Value.Equals(p.Value) = False, p, DBNull.Value))

                'If Not DBNull.Value.Equals(data) Then
                '    cmd.Parameters.AddWithValue("FPOrderImage1", data)
                'Else
                '    cmd.Parameters.AddWithValue("FPOrderImage1", DBNull.Value)
                'End If

                If Not data Is Nothing Then
                    cmd.Parameters.AddWithValue("FPOrderImage1", data)
                Else
                    'cmd.Parameters.AddWithValue("FPOrderImage1", System.DBNull.Value)
                    Dim paramOrderImage1 As New SqlParameter("@FPOrderImage1", SqlDbType.Image)
                    paramOrderImage1.Value = DBNull.Value
                    cmd.Parameters.Add(paramOrderImage1)
                End If
                '----------------------------------------------------------------------------------------------------------------------------------------

                '...FPOrderImage2
                '----------------------------------------------------------------------------------------------------------------------------------------
                Dim msFPOrderImage2 As New MemoryStream()
                Dim data2 As Byte() = Nothing

                'For Each Obj As Object In Me.Controls.Find("FTImage2", True)
                '    Select Case HI.ENM.Control.GeTypeControl(Obj)
                '        Case ENM.Control.ControlType.PictureEdit
                '            data2 = HI.UL.ULImage.ConvertImageToByteArray(CType(Obj, DevExpress.XtraEditors.PictureEdit).Image, UL.ULImage.PicType.Nothing)
                '    End Select
                'Next

                'Dim p2 As New SqlParameter("@FPOrderImage2", SqlDbType.Image)
                'p2.Value = data2

                'REM cmd.Parameters.Add(p2)
                'cmd.Parameters.Add(IIf(DBNull.Value.Equals(p2.Value) = False, p2, DBNull.Value))

                For Each Obj As Object In Me.Controls.Find("FTImage2", True)
                    Select Case HI.ENM.Control.GeTypeControl(Obj)
                        Case ENM.Control.ControlType.PictureEdit
                            If Not Obj.Image Is Nothing Then
                                'data2 = HI.UL.ULImage.ConvertImageToByteArray(CType(Obj, DevExpress.XtraEditors.PictureEdit).Image, UL.ULImage.PicType.Nothing)
                                ' Obj.Image.Save(msFPOrderImage2, System.Drawing.Imaging.ImageFormat.Jpeg)
                                data2 = HI.UL.ULImage.ConvertImageToByteArray(Obj.Image, UL.ULImage.PicType.Employee) ' msFPOrderImage2.GetBuffer()
                            End If

                    End Select

                Next

                'Dim p2 As New SqlParameter("@FPOrderImage2", SqlDbType.Image)
                'p2.Value = data2

                'REM cmd.Parameters.Add(p2)
                'cmd.Parameters.Add(IIf(DBNull.Value.Equals(p2.Value) = False, p2, DBNull.Value))

                'If Not DBNull.Value.Equals(data2) Then
                '    cmd.Parameters.AddWithValue("FPOrderImage2", data2)
                'Else
                '    cmd.Parameters.AddWithValue("FPOrderImage2", DBNull.Value)
                'End If

                If Not data2 Is Nothing Then
                    cmd.Parameters.AddWithValue("FPOrderImage2", data2)
                Else
                    'cmd.Parameters.AddWithValue("FPOrderImage2", System.DBNull.Value)
                    Dim paramOrderImage2 As New SqlParameter("@FPOrderImage2", SqlDbType.Image)
                    paramOrderImage2.Value = DBNull.Value
                    cmd.Parameters.Add(paramOrderImage2)
                End If
                '----------------------------------------------------------------------------------------------------------------------------------------

                '...@FPOrderImage3
                '----------------------------------------------------------------------------------------------------------------------------------------
                Dim msFPOrderImage3 As New MemoryStream()
                Dim data3 As Byte() = Nothing

                'For Each Obj As Object In Me.Controls.Find("FTImage3", True)
                '    Select Case HI.ENM.Control.GeTypeControl(Obj)
                '        Case ENM.Control.ControlType.PictureEdit
                '            data3 = HI.UL.ULImage.ConvertImageToByteArray(CType(Obj, DevExpress.XtraEditors.PictureEdit).Image, UL.ULImage.PicType.Nothing)
                '    End Select
                'Next

                'Dim p3 As New SqlParameter("@FPOrderImage3", SqlDbType.Image)
                'p3.Value = data3

                ''cmd.Parameters.Add(p3)
                'cmd.Parameters.Add(IIf(DBNull.Value.Equals(p3) = False, p3, DBNull.Value))

                For Each Obj As Object In Me.Controls.Find("FTImage3", True)
                    Select Case HI.ENM.Control.GeTypeControl(Obj)
                        Case ENM.Control.ControlType.PictureEdit
                            If Not Obj.Image Is Nothing Then
                                'data3 = HI.UL.ULImage.ConvertImageToByteArray(CType(Obj, DevExpress.XtraEditors.PictureEdit).Image, UL.ULImage.PicType.Nothing)
                                'Obj.Image.Save(msFPOrderImage3, System.Drawing.Imaging.ImageFormat.Jpeg)
                                data3 = HI.UL.ULImage.ConvertImageToByteArray(Obj.Image, UL.ULImage.PicType.Employee) 'msFPOrderImage3.GetBuffer()
                            End If

                    End Select

                Next

                'Dim p3 As New SqlParameter("@FPOrderImage3", SqlDbType.Image)
                'p3.Value = data3

                ''cmd.Parameters.Add(p3)
                'cmd.Parameters.Add(IIf(DBNull.Value.Equals(p3) = False, p3, DBNull.Value))

                'If Not DBNull.Value.Equals(data3) Then
                '    cmd.Parameters.AddWithValue("FPOrderImage3", data3)
                'Else
                '    cmd.Parameters.AddWithValue("FPOrderImage3", DBNull.Value)
                'End If

                If Not data3 Is Nothing Then
                    cmd.Parameters.AddWithValue("FPOrderImage3", data3)
                Else
                    'cmd.Parameters.AddWithValue("FPOrderImage3", System.DBNull.Value)
                    Dim paramOrderImage3 As New SqlParameter("@FPOrderImage3", SqlDbType.Image)
                    paramOrderImage3.Value = DBNull.Value
                    cmd.Parameters.Add(paramOrderImage3)
                End If
                '----------------------------------------------------------------------------------------------------------------------------------------

                '...@FPOrderImage4
                '----------------------------------------------------------------------------------------------------------------------------------------
                'Dim msFPOrderImage4 As New MemoryStream()
                'Dim data4 As Byte() = Nothing

                'For Each Obj As Object In Me.Controls.Find("@FTImage4", True)
                '    Select Case HI.ENM.Control.GeTypeControl(Obj)
                '        Case ENM.Control.ControlType.PictureEdit
                '            data4 = HI.UL.ULImage.ConvertImageToByteArray(CType(Obj, DevExpress.XtraEditors.PictureEdit).Image, UL.ULImage.PicType.Nothing)
                '    End Select
                'Next

                'Dim p4 As New SqlParameter("@FPOrderImage4", SqlDbType.Image)
                'p4.Value = data4

                ''cmd.Parameters.Add(p4)
                'cmd.Parameters.Add(IIf(DBNull.Value.Equals(p4) = False, p4, DBNull.Value))

                Dim msFPOrderImage4 As New MemoryStream()
                Dim data4 As Byte() = Nothing

                For Each Obj As Object In Me.Controls.Find("FTImage4", True)
                    Select Case HI.ENM.Control.GeTypeControl(Obj)
                        Case ENM.Control.ControlType.PictureEdit
                            If Not Obj.Image Is Nothing Then
                                'data4 = HI.UL.ULImage.ConvertImageToByteArray(CType(Obj, DevExpress.XtraEditors.PictureEdit).Image, UL.ULImage.PicType.Nothing)
                                'Obj.Image.Save(msFPOrderImage4, System.Drawing.Imaging.ImageFormat.Jpeg)
                                data4 = HI.UL.ULImage.ConvertImageToByteArray(Obj.Image, UL.ULImage.PicType.Employee) 'msFPOrderImage4.GetBuffer()
                            End If

                    End Select

                Next

                'Dim p4 As New SqlParameter("@FPOrderImage4", SqlDbType.NVarChar)
                'p4.Value = data4

                ''cmd.Parameters.Add(p4)
                'cmd.Parameters.Add(IIf(DBNull.Value.Equals(p4) = False, p4, DBNull.Value))

                'If Not DBNull.Value.Equals(data4) Then
                '    cmd.Parameters.AddWithValue("FPOrderImage4", data4)
                'Else
                '    cmd.Parameters.AddWithValue("FPOrderImage4", DBNull.Value)
                'End If


                If Not data4 Is Nothing Then
                    cmd.Parameters.AddWithValue("FPOrderImage4", data4)
                Else
                    'cmd.Parameters.AddWithValue("FPOrderImage4", System.DBNull.Value)
                    Dim paramOrderImage4 As New SqlParameter("@FPOrderImage4", SqlDbType.Image)
                    paramOrderImage4.Value = DBNull.Value
                    cmd.Parameters.Add(paramOrderImage4)
                End If
                '----------------------------------------------------------------------------------------------------------------------------------------

                'For Each Parameter As SqlParameter In cmd.Parameters
                '    If Parameter.Value Is Nothing Then
                '        Parameter.Value = DBNull.Value
                '    End If
                'Next

                'cmd.Parameters("@FTOrderNo").IsNullable = False
                'cmd.Parameters("@FPOrderImage1").IsNullable = True
                'cmd.Parameters("@FPOrderImage2").IsNullable = True
                'cmd.Parameters("@FPOrderImage3").IsNullable = True
                'cmd.Parameters("@FPOrderImage4").IsNullable = True

                cmd.CommandType = CommandType.Text

                cmd.ExecuteNonQuery()

                'Dim numRowEffect As Integer
                'If Integer.TryParse(cmd.ExecuteScalar(), numRowEffect) = True Then
                '    MsgBox("Execute data complete... " & numRowEffect & " records.")
                'Else
                '    MsgBox("Execute data not complete !!!")
                'End If

                'cmd.ExecuteScalar()

                cmd.Parameters.Clear()

                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cnn)
                '================================================================================================================


                '================================= Update Main Material Factory Order No. ========================================
                _Str = ""
                _Str = "EXEC SP_INSERT_MAINMATERIAL_FACTORY_ORDER N'" & IIf(_StateNew, _Key, _SysKey.ToString()) & "'"

                HI.Conn.SQLConn.ExecuteOnly(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                '================================= Update Combination Factory Order No.   ========================================
                _Str = ""
                _Str = "EXEC SP_INSERT_COMBINATION_FACTORY_ORDER N'" & IIf(_StateNew, _Key, _SysKey.ToString()) & "'"

                HI.Conn.SQLConn.ExecuteOnly(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                '=====================================================================================================================================================
                '' Create Data Table after update new value
                Dim sqlAfter As String

                REM By Tid 2014/04/09
                'sqlAfter = ""
                'sqlAfter = "SELECT * FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrder]" & vbCrLf & _
                '           "WHERE  " & _FormHeader(0).MainKey & "='" & _SysKey.ToString & "' "

                '================================================================================================================================================================================================================
                '...Main Material
                Dim tFTMainMaterialDescAF As String
                Select Case HI.ST.Lang.Language
                    Case HI.ST.Lang.eLang.TH
                        tFTMainMaterialDescAF = HI.Conn.SQLConn.GetField("EXEC SP_GETMAINMATERIALDESC_FACTORY_ORDER N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "', N'TH' ;", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                    Case HI.ST.Lang.eLang.EN
                        tFTMainMaterialDescAF = HI.Conn.SQLConn.GetField("EXEC SP_GETMAINMATERIALDESC_FACTORY_ORDER N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "', N'EN' ;", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                    Case Else
                        tFTMainMaterialDescAF = HI.Conn.SQLConn.GetField("EXEC SP_GETMAINMATERIALDESC_FACTORY_ORDER N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "', N'EN' ;", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                End Select
                '...Combination
                Dim tFTCombinationAF As String
                tFTCombinationAF = HI.Conn.SQLConn.GetField("SELECT ISNULL(A.FTCombination,'') AS FTCombination FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A WITH(NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                '=================================================================================================================================================================================================================

                Dim oStrBuilderAf As New System.Text.StringBuilder()

                oStrBuilderAf.Remove(0, oStrBuilderAf.Length)

                Select Case HI.ST.Lang.Language
                    Case HI.ST.Lang.eLang.EN
                        oStrBuilderAf.AppendLine("SELECT A.[FTInsUser],A.[FDInsDate],A.[FTInsTime]")
                        oStrBuilderAf.AppendLine("      ,A.[FTUpdUser],A.[FDUpdDate],A.[FTUpdTime]")
                        oStrBuilderAf.AppendLine("      ,A.[FTOrderNo],A.[FDOrderDate],A.[FTOrderBy]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SYSTEM) & "]..[HSysListData] AS L1 WITH(NOLOCK) WHERE L1.FTListName = N'FNOrderType' AND L1.FNListIndex = A.[FNOrderType]),'') AS [FNOrderType]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCmpNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCmp] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCmpId = A.FNHSysCmpId), '') AS [FNHSysCmpId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCmpRunNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCmpRun] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCmpRunId = A.FNHSysCmpRunId), '') AS [FNHSysCmpRunId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTStyleNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS L1 WITH(NOLOCK) WHERE L1.FNHSysStyleId =  A.FNHSysStyleId),'') AS [FNHSysStyleId]")
                        oStrBuilderAf.AppendLine("      ,A.[FTPORef] AS [FTPORef]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCustNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCustomer] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCustId = A.FNHSysCustId),'') AS [FNHSysCustId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTAgencyNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMAgency] AS L1 WITH(NOLOCK) WHERE L1.FNHSysAgencyId = A.FNHSysAgencyId),'') AS [FNHSysAgencyId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTProdTypeNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMProductType] AS L1 WITH(NOLOCK) WHERE L1.FNHSysProdTypeId = A.FNHSysProdTypeId),'') AS [FNHSysProdTypeId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyerNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuyer] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyerId = A.FNHSysBuyerId), '') AS [FNHSysBuyerId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuy] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyId = A.FNHSysBuyId),'') AS [FNHSysBuyId]")
                        oStrBuilderAf.AppendLine("      ,'" & HI.UL.ULF.rpQuoted(tFTMainMaterialDescAF) & "' AS [FTMainMaterial]")
                        oStrBuilderAf.AppendLine("      ,'" & HI.UL.ULF.rpQuoted(tFTCombinationAF) & "'  AS [FTCombination]")
                        oStrBuilderAf.AppendLine("      ,A.[FTRemark]")
                        oStrBuilderAf.AppendLine("      ,A.[FTStateOrderApp]")
                        oStrBuilderAf.AppendLine("      ,A.[FTAppBy]")
                        oStrBuilderAf.AppendLine("      ,A.[FDAppDate]")
                        oStrBuilderAf.AppendLine("      ,A.[FTAppTime]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTNameEN FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_SYSTEM) & "]..[HSysListData] AS L1 WITH(NOLOCK) WHERE L1.FTListName = N'FNJobState' AND L1.FNListIndex = A.[FNJobState]),'') AS [FNJobState]")
                        oStrBuilderAf.AppendLine("      ,A.[FTStateBy]")
                        oStrBuilderAf.AppendLine("      ,A.[FDStateDate]")
                        oStrBuilderAf.AppendLine("      ,A.[FTStateTime]")
                        oStrBuilderAf.AppendLine("      ,A.[FTImage1]")
                        oStrBuilderAf.AppendLine("      ,A.[FTImage2]")
                        oStrBuilderAf.AppendLine("      ,A.[FTImage3]")
                        oStrBuilderAf.AppendLine("      ,A.[FTImage4]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBrandNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBrand] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBrandId = A.FNHSysBrandId),'') AS [FNHSysBrandId]")
                        oStrBuilderAf.AppendLine("      ,A.[FTCancelAppBy]")
                        oStrBuilderAf.AppendLine("      ,A.[FDCancelAppDate]")
                        oStrBuilderAf.AppendLine("      ,A.[FDCancelAppTime]")
                        oStrBuilderAf.AppendLine("      ,A.[FTCancelAppRemark]")

                        oStrBuilderAf.AppendLine("      ,A.[FPOrderImage1]")
                        oStrBuilderAf.AppendLine("      ,A.[FPOrderImage2]")
                        oStrBuilderAf.AppendLine("      ,A.[FPOrderImage3]")
                        oStrBuilderAf.AppendLine("      ,A.[FPOrderImage4]")

                    Case HI.ST.Lang.eLang.TH
                        oStrBuilderAf.AppendLine("SELECT A.[FTInsUser],A.[FDInsDate],A.[FTInsTime]")
                        oStrBuilderAf.AppendLine("      ,A.[FTUpdUser],A.[FDUpdDate],A.[FTUpdTime]")
                        oStrBuilderAf.AppendLine("      ,A.[FTOrderNo],A.[FDOrderDate],A.[FTOrderBy]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SYSTEM) & "]..[HSysListData] AS L1 WITH(NOLOCK) WHERE L1.FTListName = N'FNOrderType' AND L1.FNListIndex = A.[FNOrderType]),'') AS [FNOrderType]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCmpNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCmp] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCmpId = A.FNHSysCmpId), '') AS [FNHSysCmpId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCmpRunNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCmpRun] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCmpRunId = A.FNHSysCmpRunId), '') AS [FNHSysCmpRunId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTStyleNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS L1 WITH(NOLOCK) WHERE L1.FNHSysStyleId =  A.FNHSysStyleId),'') AS [FNHSysStyleId]")
                        oStrBuilderAf.AppendLine("      ,A.[FTPORef] AS [FTPORef]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCustNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCustomer] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCustId = A.FNHSysCustId),'') AS [FNHSysCustId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTAgencyNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMAgency] AS L1 WITH(NOLOCK) WHERE L1.FNHSysAgencyId = A.FNHSysAgencyId),'') AS [FNHSysAgencyId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTProdTypeNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMProductType] AS L1 WITH(NOLOCK) WHERE L1.FNHSysProdTypeId = A.FNHSysProdTypeId),'') AS [FNHSysProdTypeId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyerNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuyer] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyerId = A.FNHSysBuyerId), '') AS [FNHSysBuyerId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuy] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyId = A.FNHSysBuyId),'') AS [FNHSysBuyId]")
                        oStrBuilderAf.AppendLine("      ,'" & HI.UL.ULF.rpQuoted(tFTMainMaterialDescAF) & "' AS [FTMainMaterial]")
                        oStrBuilderAf.AppendLine("      ,'" & HI.UL.ULF.rpQuoted(tFTCombinationAF) & "'  AS [FTCombination]")
                        oStrBuilderAf.AppendLine("      ,A.[FTRemark]")
                        oStrBuilderAf.AppendLine("      ,A.[FTStateOrderApp]")
                        oStrBuilderAf.AppendLine("      ,A.[FTAppBy]")
                        oStrBuilderAf.AppendLine("      ,A.[FDAppDate]")
                        oStrBuilderAf.AppendLine("      ,A.[FTAppTime]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SYSTEM) & "]..[HSysListData] AS L1 WITH(NOLOCK) WHERE L1.FTListName = N'FNJobState' AND L1.FNListIndex = A.[FNJobState]),'') AS [FNJobState]")
                        oStrBuilderAf.AppendLine("      ,A.[FTStateBy]")
                        oStrBuilderAf.AppendLine("      ,A.[FDStateDate]")
                        oStrBuilderAf.AppendLine("      ,A.[FTStateTime]")
                        oStrBuilderAf.AppendLine("      ,A.[FTImage1]")
                        oStrBuilderAf.AppendLine("      ,A.[FTImage2]")
                        oStrBuilderAf.AppendLine("      ,A.[FTImage3]")
                        oStrBuilderAf.AppendLine("      ,A.[FTImage4]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBrandNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBrand] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBrandId = A.FNHSysBrandId),'') AS [FNHSysBrandId]")
                        oStrBuilderAf.AppendLine("      ,A.[FTCancelAppBy]")
                        oStrBuilderAf.AppendLine("      ,A.[FDCancelAppDate]")
                        oStrBuilderAf.AppendLine("      ,A.[FDCancelAppTime]")
                        oStrBuilderAf.AppendLine("      ,A.[FTCancelAppRemark]")

                        oStrBuilderAf.AppendLine("      ,A.[FPOrderImage1]")
                        oStrBuilderAf.AppendLine("      ,A.[FPOrderImage2]")
                        oStrBuilderAf.AppendLine("      ,A.[FPOrderImage3]")
                        oStrBuilderAf.AppendLine("      ,A.[FPOrderImage4]")

                    Case Else
                        oStrBuilderAf.AppendLine("SELECT A.[FTInsUser],A.[FDInsDate],A.[FTInsTime]")
                        oStrBuilderAf.AppendLine("      ,A.[FTUpdUser],A.[FDUpdDate],A.[FTUpdTime]")
                        oStrBuilderAf.AppendLine("      ,A.[FTOrderNo],A.[FDOrderDate],A.[FTOrderBy]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SYSTEM) & "]..[HSysListData] AS L1 WITH(NOLOCK) WHERE L1.FTListName = N'FNOrderType' AND L1.FNListIndex = A.[FNOrderType]),'') AS [FNOrderType]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCmpNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCmp] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCmpId = A.FNHSysCmpId), '') AS [FNHSysCmpId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCmpRunNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCmpRun] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCmpRunId = A.FNHSysCmpRunId), '') AS [FNHSysCmpRunId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTStyleNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS L1 WITH(NOLOCK) WHERE L1.FNHSysStyleId =  A.FNHSysStyleId),'') AS [FNHSysStyleId]")
                        oStrBuilderAf.AppendLine("      ,A.[FTPORef] AS [FTPORef]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCustNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCustomer] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCustId = A.FNHSysCustId),'') AS [FNHSysCustId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTAgencyNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMAgency] AS L1 WITH(NOLOCK) WHERE L1.FNHSysAgencyId = A.FNHSysAgencyId),'') AS [FNHSysAgencyId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTProdTypeNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMProductType] AS L1 WITH(NOLOCK) WHERE L1.FNHSysProdTypeId = A.FNHSysProdTypeId),'') AS [FNHSysProdTypeId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyerNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuyer] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyerId = A.FNHSysBuyerId), '') AS [FNHSysBuyerId]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuy] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyId = A.FNHSysBuyId),'') AS [FNHSysBuyId]")
                        oStrBuilderAf.AppendLine("      ,'" & HI.UL.ULF.rpQuoted(tFTMainMaterialDescAF) & "' AS [FTMainMaterial]")
                        oStrBuilderAf.AppendLine("      ,'" & HI.UL.ULF.rpQuoted(tFTCombinationAF) & "'  AS [FTCombination]")
                        oStrBuilderAf.AppendLine("      ,A.[FTRemark]")
                        oStrBuilderAf.AppendLine("      ,A.[FTStateOrderApp]")
                        oStrBuilderAf.AppendLine("      ,A.[FTAppBy]")
                        oStrBuilderAf.AppendLine("      ,A.[FDAppDate]")
                        oStrBuilderAf.AppendLine("      ,A.[FTAppTime]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SYSTEM) & "]..[HSysListData] AS L1 WITH(NOLOCK) WHERE L1.FTListName = N'FNJobState' AND L1.FNListIndex = A.[FNJobState]),'') AS [FNJobState]")
                        oStrBuilderAf.AppendLine("      ,A.[FTStateBy]")
                        oStrBuilderAf.AppendLine("      ,A.[FDStateDate]")
                        oStrBuilderAf.AppendLine("      ,A.[FTStateTime]")
                        oStrBuilderAf.AppendLine("      ,A.[FTImage1]")
                        oStrBuilderAf.AppendLine("      ,A.[FTImage2]")
                        oStrBuilderAf.AppendLine("      ,A.[FTImage3]")
                        oStrBuilderAf.AppendLine("      ,A.[FTImage4]")
                        oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBrandNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBrand] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBrandId = A.FNHSysBrandId),'') AS [FNHSysBrandId]")
                        oStrBuilderAf.AppendLine("      ,A.[FTCancelAppBy]")
                        oStrBuilderAf.AppendLine("      ,A.[FDCancelAppDate]")
                        oStrBuilderAf.AppendLine("      ,A.[FDCancelAppTime]")
                        oStrBuilderAf.AppendLine("      ,A.[FTCancelAppRemark]")

                        oStrBuilderAf.AppendLine("      ,A.[FPOrderImage1]")
                        oStrBuilderAf.AppendLine("      ,A.[FPOrderImage2]")
                        oStrBuilderAf.AppendLine("      ,A.[FPOrderImage3]")
                        oStrBuilderAf.AppendLine("      ,A.[FPOrderImage4]")

                End Select

                oStrBuilderAf.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrder] AS A")
                oStrBuilderAf.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';")

                sqlAfter = ""
                sqlAfter = oStrBuilderAf.ToString()

                'If sqlBefore <> "" Then
                '    dtAfter = HI.Conn.SQLConn.GetDataTable(sqlBefore, Conn.DB.DataBaseName.DB_MERCHAN)
                'End If

                If sqlAfter <> "" Then
                    dtAfter = HI.Conn.SQLConn.GetDataTable(sqlAfter, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                End If
                '=====================================================================================================================================================

                '...Afer revised factory order no. information
                '=====================================================================================================================================================
                _Str = ""
                '...if before state approved factory order information is true : '1' then compare revised info
                _Str = "SELECT A.FTApprovedInfoState FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                If HI.Conn.SQLConn.GetField(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "1" Then
                    _Str = ""
                    _Str = "SELECT A.FTOrderNo, A.FTPORef, A.FNHSysSeasonId, A.FNHSysPlantId,"
                    _Str &= Environment.NewLine & "      A.FPOrderImage1, A.FPOrderImage2, A.FPOrderImage3, A.FPOrderImage4,"
                    _Str &= Environment.NewLine & "      A.FDDateChangeOrderImage1, A.FTTimeChangeOrderImage1, A.FTUserChangeOrderImage1,"
                    _Str &= Environment.NewLine & "      A.FDDateChangeOrderImage2, A.FTTimeChangeOrderImage2, A.FTUserChangeOrderImage2,"
                    _Str &= Environment.NewLine & "      A.FDDateChangeOrderImage3, A.FTTimeChangeOrderImage3, A.FTUserChangeOrderImage3,"
                    _Str &= Environment.NewLine & "      A.FDDateChangeOrderImage4, A.FTTimeChangeOrderImage4, A.FTUserChangeOrderImage4"
                    _Str &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK)"
                    _Str &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"

                    DTAfterRevised = HI.Conn.SQLConn.GetDataTable(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                Else
                    DTAfterRevised = Nothing
                End If
                '=====================================================================================================================================================

                For Each Obj As Object In Me.Controls.Find(_FormHeader(0).MainKey, True)
                    Select Case Obj.GetType.FullName.ToString.ToUpper
                        Case "DevExpress.XtraEditors.ButtonEdit".ToUpper
                            With CType(Obj, DevExpress.XtraEditors.ButtonEdit)
                                .Properties.Tag = _SysKey
                                .Text = _Key
                            End With

                    End Select

                Next

                Return True
            Catch ex As Exception
                If System.Diagnostics.Debugger.IsAttached = True Then
                    Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
                End If

                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                Return False
            End Try

        Catch ex As Exception
            If System.Diagnostics.Debugger.IsAttached = True Then
                MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)
            End If

            HI.Conn.SQLConn.Tran.Rollback()
            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

            Return False

        End Try

    End Function

    Private Function W_PRCbDeleteMainOrder_BACKUP_20150114() As Boolean
        Try
            If Me.FTOrderNo.Properties.Tag.ToString() = "" Then Return False

            If (FTStateMRP.Checked Or
                FTStateReserve.Checked Or
                FTStateSourcing.Checked Or
                FTStatePurchase.Checked Or
                FTStateReceive.Checked Or
                FTStateAdjust.Checked Or
                FTStateTransferIn.Checked Or
                FTStateTransferOut.Checked Or
                FTStateProduction.Checked Or Me.FTStateTransferWH.Checked) Then

                HI.MG.ShowMsg.mInfo("พบ Transaction ต่างๆของ Order ไม่สามารถทำการลบได้ !!!", 1408080001, Me.Text, Me.FTOrderNo.Text, MessageBoxIcon.Warning)

                Return False
            End If

            If HI.MG.ShowMsg.mConfirmProcess(MG.ShowMsg.ProcessType.mDelete, Me.FTOrderNo.Text, Me.Text) = False Then
                Return False
            End If

            Dim tFTOrderNo As String
            Dim tFTSubOrderNO As String
            Dim tsql As String = ""

            tFTOrderNo = Me.FTOrderNo.Properties.Tag.ToString().Trim()
            tFTSubOrderNO = Me.FTSubOrderNo.Properties.Tag.ToString().Trim()

            HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
            HI.Conn.SQLConn.SqlConnectionOpen()
            HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
            HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction

            tsql = ""
            tsql = "DELETE A"
            tsql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A"
            tsql &= Environment.NewLine & "WHERE  A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"

            If HI.Conn.SQLConn.Execute_Tran(tsql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                Return False

            End If

            tsql = ""
            tsql = "DELETE A"
            tsql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Bundle AS A (NOLOCK)"
            tsql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            If HI.Conn.SQLConn.Execute_Tran(tsql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                Return False
            End If

            tsql = ""
            tsql = "DELETE A"
            tsql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A"
            tsql &= Environment.NewLine & "WHERE  A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            If HI.Conn.SQLConn.Execute_Tran(tsql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                Return False

            End If

            tsql = ""
            tsql = "DELETE A"
            tsql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A"
            tsql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            If HI.Conn.SQLConn.Execute_Tran(tsql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                Return False

            End If

            tsql = ""
            tsql = "DELETE A"
            tsql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Component] AS A"
            tsql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "';"

            If HI.Conn.SQLConn.Execute_Tran(tsql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                Return False

            End If

            tsql = ""
            tsql = "DELETE A"
            tsql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS A"
            tsql &= Environment.NewLine & "WHERE A.FTOrderNo = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            If HI.Conn.SQLConn.ExecuteTran(tsql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                Return False

            End If

            tsql = ""
            tsql = "DELETE A"
            tsql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A"
            tsql &= Environment.NewLine & "WHERE A.FTOrderNo = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            If HI.Conn.SQLConn.ExecuteTran(tsql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                Return False

            End If

            REM 2014/12/16 HITECH_MERCHAN..TMERTOrder_BreakDown NOT USE
            '========================================================================================================================================
            'tsql = ""
            'tsql = "DELETE A"
            'tsql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder_BreakDown AS A"
            'tsql &= Environment.NewLine & "WHERE A.FTOrderNo = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            'If HI.Conn.SQLConn.ExecuteTran(tsql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
            '    HI.Conn.SQLConn.Tran.Rollback()
            '    HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            '    HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
            '    Return False
            'End If
            '========================================================================================================================================

            tsql = "DELETE A"
            tsql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] A"
            tsql &= Environment.NewLine & "WHERE A.FTOrderNo = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            If HI.Conn.SQLConn.ExecuteTran(tsql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) <= 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                Return False

            End If

            HI.Conn.SQLConn.Tran.Commit()
            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

            HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mDelete, Me.Text)

            HI.TL.HandlerControl.ClearControl(Me.GroupControl2)
            HI.TL.HandlerControl.ClearControl(Me.ogbOrder)
            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrder)
            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)
            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)
            HI.TL.HandlerControl.ClearControl(Me.ogbPackCartonHD)
            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)

            Me.ogdSubOrdBreakDown.DataSource = Nothing
            Me.ogdCurrencyBreakdown.DataSource = Nothing
            Me.ogdColorSizeBreakdown.DataSource = Nothing
            Me.ogdOrderSubSewing.DataSource = Nothing
            Me.ogdOrderSubPack.DataSource = Nothing
            Me.ogdOrderSubPack.DataSource = Nothing
            Me.ogdSizeSpec.DataSource = Nothing

            Me.FNHSysCmpId.Properties.Tag = ""
            Me.FNHSysCmpId.Text = "" : Me.FNHSysCmpId_None.Text = ""

            Me.FNHSysCmpRunId.Properties.Tag = ""
            Me.FNHSysCmpRunId.Text = "" : Me.FNHSysCmpRunId_None.Text = ""

            Me.FNHSysStyleId.Properties.Tag = "" : Me.FNHSysStyleId.Text = ""

            Me.FTOrderNo.Properties.Tag = "" : Me.FTOrderNo.Text = ""

            Me.FTSubOrderNo.Properties.Tag = "" : Me.FTOrderNo.Text = ""

            Me.FNHSysCmpId.Focus()

            Return True

        Catch ex As Exception
            HI.Conn.SQLConn.Tran.Rollback()
            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

            Return False

        End Try

    End Function

    Private Function W_PRCbDeleteMainOrder() As Boolean
        Try
            If Me.FTOrderNo.Properties.Tag.ToString() = "" Then Return False

            If (FTStateMRP.Checked Or
                FTStateReserve.Checked Or
                FTStateSourcing.Checked Or
                FTStatePurchase.Checked Or
                FTStateReceive.Checked Or
                FTStateAdjust.Checked Or
                FTStateTransferIn.Checked Or
                FTStateTransferOut.Checked Or
                FTStateProduction.Checked Or Me.FTStateTransferWH.Checked) Then

                HI.MG.ShowMsg.mInfo("พบ Transaction ต่างๆของ Order ไม่สามารถทำการลบได้ !!!", 1408080001, Me.Text, Me.FTOrderNo.Text, MessageBoxIcon.Warning)

                Return False
            End If

            If HI.MG.ShowMsg.mConfirmProcess(MG.ShowMsg.ProcessType.mDelete, Me.FTOrderNo.Text, Me.Text) = False Then
                Return False
            End If

            Dim tFTOrderNo As String
            Dim tFTSubOrderNO As String
            Dim tSql As String = ""
            Dim sSQLCompareLog As String = ""

            tFTOrderNo = Me.FTOrderNo.Properties.Tag.ToString().Trim()
            tFTSubOrderNO = Me.FTSubOrderNo.Properties.Tag.ToString().Trim()

            '...info factory order no. before 
            '=======================================================================================================================================================================
            Dim oStrBuilder As New System.Text.StringBuilder()

            oStrBuilder.Remove(0, oStrBuilder.Length)



            oStrBuilder.AppendLine("SELECT TOP 1 A.FTOrderNo AS FTOrderNo, B.FTStyleCode AS FTStyleCode")

            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrder] AS A (NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMStyle AS B (NOLOCK) ON A.FNHSysStyleId = B.FNHSysStyleId")
            oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';")

            sSQLCompareLog = ""
            sSQLCompareLog = oStrBuilder.ToString()

            tmpDTFoNoBefore = HI.Conn.SQLConn.GetDataTable(sSQLCompareLog, Conn.DB.DataBaseName.DB_MERCHAN)
            '=======================================================================================================================================================================

            HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
            HI.Conn.SQLConn.SqlConnectionOpen()
            HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
            HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction

            tSql = ""
            tSql = "DELETE A"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A"
            tSql &= Environment.NewLine & "WHERE  A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"

            If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                'HI.Conn.SQLConn.Tran.Rollback()
                'HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                'HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                'Return False

            End If

            tSql = ""
            tSql = "DELETE A"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Bundle AS A (NOLOCK)"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                'HI.Conn.SQLConn.Tran.Rollback()
                'HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                'HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                'Return False
            End If

            tSql = ""
            tSql = "DELETE A"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A"
            tSql &= Environment.NewLine & "WHERE  A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                'HI.Conn.SQLConn.Tran.Rollback()
                'HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                'HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                'Return False

            End If

            tSql = ""
            tSql = "DELETE A"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                'HI.Conn.SQLConn.Tran.Rollback()
                'HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                'HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                'Return False

            End If

            tSql = ""
            tSql = "DELETE A"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Component] AS A"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "';"

            If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                'HI.Conn.SQLConn.Tran.Rollback()
                'HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                'HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                'Return False

            End If

            tSql = ""
            tSql = "DELETE A"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS A"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            If HI.Conn.SQLConn.ExecuteTran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                'HI.Conn.SQLConn.Tran.Rollback()
                'HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                'HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                'Return False

            End If

            tSql = ""
            tSql = "DELETE A"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            If HI.Conn.SQLConn.ExecuteTran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                'HI.Conn.SQLConn.Tran.Rollback()
                'HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                'HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                'Return False

            End If

            REM 2014/12/16 HITECH_MERCHAN..TMERTOrder_BreakDown NOT USE
            '========================================================================================================================================
            'tsql = ""
            'tsql = "DELETE A"
            'tsql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder_BreakDown AS A"
            'tsql &= Environment.NewLine & "WHERE A.FTOrderNo = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            'If HI.Conn.SQLConn.ExecuteTran(tsql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
            '    HI.Conn.SQLConn.Tran.Rollback()
            '    HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            '    HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
            '    Return False
            'End If
            '========================================================================================================================================
            tSql = ""
            tSql = "DELETE A"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] A"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            If HI.Conn.SQLConn.ExecuteTran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) <= 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                Return False

            End If

            HI.Conn.SQLConn.Tran.Commit()
            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

            HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mDelete, Me.Text)

            '...info factory order no. after
            '=======================================================================================================================================================================
            tmpDTFoNoAfter = HI.Conn.SQLConn.GetDataTable(sSQLCompareLog, Conn.DB.DataBaseName.DB_MERCHAN)
            '=======================================================================================================================================================================

            HI.TL.HandlerControl.ClearControl(Me.GroupControl2)
            HI.TL.HandlerControl.ClearControl(Me.ogbOrder)
            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrder)
            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)
            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)
            HI.TL.HandlerControl.ClearControl(Me.ogbPackCartonHD)
            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)

            Me.LoadCompleteFTImage1 = False : Me.LoadCompleteFTImage2 = False : Me.LoadCompleteFTImage3 = False : Me.LoadCompleteFTImage4 = False

            Me.ogdSubOrdBreakDown.DataSource = Nothing
            Me.ogdCurrencyBreakdown.DataSource = Nothing
            Me.ogdColorSizeBreakdown.DataSource = Nothing
            Me.ogdOrderSubSewing.DataSource = Nothing
            Me.ogdOrderSubPack.DataSource = Nothing
            Me.ogdOrderSubPack.DataSource = Nothing
            Me.ogdSizeSpec.DataSource = Nothing

            Me.FNHSysCmpId.Properties.Tag = ""
            Me.FNHSysCmpId.Text = "" : Me.FNHSysCmpId_None.Text = ""

            Me.FNHSysCmpRunId.Properties.Tag = ""
            Me.FNHSysCmpRunId.Text = "" : Me.FNHSysCmpRunId_None.Text = ""

            Me.FNHSysStyleId.Properties.Tag = "" : Me.FNHSysStyleId.Text = ""

            Me.FTOrderNo.Properties.Tag = "" : Me.FTOrderNo.Text = ""

            Me.FTSubOrderNo.Properties.Tag = "" : Me.FTOrderNo.Text = ""

            Me.FNHSysCmpId.Focus()

            Return True

        Catch ex As Exception
            HI.Conn.SQLConn.Tran.Rollback()
            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

            Return False

        End Try

    End Function

    Private Function W_PRCbSaveSubOrderHD() As Boolean
        Dim _Str As String
        Dim sqlBefore As String = ""
        Dim sqlRevisedSubOrder As String = ""
        Dim tFTSubOrderNo As String = ""
        Try
            Dim nFNHSysContinentId As Integer
            Dim nFNHSysCountryId As Integer
            Dim nFNHSysProvinceId As Integer

            REM 2014/11/20
            'If Me.FNHSysContinentId.Text.Trim() <> "" Then
            '    nFNHSysContinentId = Val(Me.FNHSysContinentId.Properties.Tag)
            'Else
            '    nFNHSysContinentId = -1
            'End If

            'If Me.FNHSysCountryId.Text.Trim() <> "" Then
            '    nFNHSysCountryId = Val(Me.FNHSysCountryId.Properties.Tag)
            'Else
            '    nFNHSysCountryId = -1
            'End If

            'If Me.FNHSysProvinceId.Text.Trim() <> "" Then
            '    nFNHSysProvinceId = Val(Me.FNHSysProvinceId.Properties.Tag)
            'Else
            '    nFNHSysProvinceId = -1
            'End If

            'nFNHSysContinentId = IIf(Me.FNHSysContinentId.Text.Trim <> "", Val(Me.FNHSysContinentId.Properties.Tag), -1)
            'nFNHSysCountryId = IIf(Me.FNHSysCountryId.Text.Trim <> "", Val(Me.FNHSysCountryId.Properties.Tag), -1)
            'nFNHSysProvinceId = IIf(Me.FNHSysProvinceId.Text.Trim <> "", Val(Me.FNHSysProvinceId.Properties.Tag), -1)


            nFNHSysContinentId = Integer.Parse(Val(Me.FNHSysContinentId.Properties.Tag.ToString))
            nFNHSysCountryId = Integer.Parse(Val(Me.FNHSysCountryId.Properties.Tag.ToString))
            nFNHSysProvinceId = Integer.Parse(Val(Me.FNHSysProvinceId.Properties.Tag.ToString))

            HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
            HI.Conn.SQLConn.SqlConnectionOpen()
            HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
            HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction

            _Str = "SELECT COUNT(A.FTSubOrderNo) AS FNCntSubOrderNo"
            _Str &= ControlChars.CrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A WITH (NOLOCK)"
            _Str &= ControlChars.CrLf & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "'"
            _Str &= ControlChars.CrLf & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim()) & "'"

            Dim nFNCntRecord As Integer = 0

            Dim oDBdtCntSubOrderNo As DataTable

            oDBdtCntSubOrderNo = HI.Conn.SQLConn.GetDataTableOnbeginTrans(_Str)

            If Not DBNull.Value.Equals(oDBdtCntSubOrderNo.Rows(0).Item("FNCntSubOrderNo")) = True Then
                nFNCntRecord = oDBdtCntSubOrderNo.Rows(0).Item("FNCntSubOrderNo")
            End If

            If nFNCntRecord = 0 Then
                '...add new sub order no item

                '...generate new sub order no
                _Str = ""
                _Str = "EXEC SP_GEN_CHARACTER_SubOrderNo '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "'"

                tFTSubOrderNo = HI.Conn.SQLConn.GetField(_Str, Conn.DB.DataBaseName.DB_MERCHAN, "")

                _tFTSubOrderNo = tFTSubOrderNo

                If tFTSubOrderNo = "" Then
                    HI.Conn.SQLConn.Tran.Rollback()
                    HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                    HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                    Return False
                End If

                _Str = ""
                _Str = "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub]"
                _Str &= Environment.NewLine & "([FTOrderNo],[FTSubOrderNo],[FDSubOrderDate],[FTSubOrderBy]"
                _Str &= Environment.NewLine & ",[FDProDate],[FDShipDate],[FNHSysContinentId]"
                _Str &= Environment.NewLine & ",[FNHSysCountryId],[FNHSysProvinceId],[FNHSysShipModeId],[FNHSysCurId]"
                _Str &= Environment.NewLine & ",[FNHSysGenderId],[FNHSysUnitId],[FTStateEmb]"
                _Str &= Environment.NewLine & ",[FTStatePrint],[FTStateHeat],[FTStateLaser],[FTStateWindows]"
                _Str &= Environment.NewLine & ",[FTRemark],[FNHSysShipPortId]"
                _Str &= Environment.NewLine & ",[FTInsUser],[FDInsDate],[FTInsTime]"
                _Str &= Environment.NewLine & ",[FTUpdUser],[FDUpdDate],[FTUpdTime],[FTCustRef],[FTPORef],[FNHSysPlantId],[FNHSysBuyGrpId],[FNOrderSetType])"
                _Str &= "VALUES ('" & Me.FTOrderNo.Text & "','" & tFTSubOrderNo & "','" & HI.UL.ULDate.ConvertEnDB(Me.FDSubOrderDate.Text) & "',N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                _Str &= ",'" & HI.UL.ULDate.ConvertEnDB(Me.FDSubOrderDate.Text) & "','" & HI.UL.ULDate.ConvertEnDB(Me.FDShipDate.Text) & "'," & nFNHSysContinentId
                _Str &= "," & nFNHSysCountryId & "," & nFNHSysProvinceId & "," & Val(Me.FNHSysShipModeId.Properties.Tag.ToString()) & "," & Val(Me.FNHSysCurId.Properties.Tag.ToString())
                _Str &= "," & Val(Me.FNHSysGenderId.Properties.Tag.ToString()) & "," & Val(Me.FNHSysUnitId.Properties.Tag.ToString()) & ",'" & Me.FTStateEmb.EditValue.ToString & "'"
                _Str &= ",'" & Me.FTStatePrint.EditValue.ToString() & "','" & Me.FTStateHeat.EditValue.ToString() & "','" & Me.FTStateLaser.EditValue.ToString() & "','" & Me.FTStateWindows.EditValue.ToString() & "'"
                _Str &= ",'" & HI.UL.ULF.rpQuoted(Me.FTRemarkSubOrderNo.Text) & "'," & Val(Me.FNHSysShipPortId.Properties.Tag.ToString())
                _Str &= ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB
                _Str &= ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ",N'" & HI.UL.ULF.rpQuoted(Me.FTCustRef.Text) & "',N'" & HI.UL.ULF.rpQuoted(Me.FTSubPORef.Text.Trim()) & "'"
                _Str &= "," & Val(FNHSysPlantId.Properties.Tag.ToString) & "," & Val(FNHSysBuyGrpId.Properties.Tag.ToString) & "," & FNOrderSetType.SelectedIndex & ")"

            Else

                '' Create Data Table before update new value

                _Str = ""
                _Str = "SELECT A.FTOrderNo, A.FTSubOrderNo"
                _Str &= Environment.NewLine & "        , A.FDUpdDate, A.FTUpdUser, A.FTUpdTime"
                _Str &= Environment.NewLine & "        , A.FNSubOrderQty, A.FNSubOrderAmt, A.FNSubOrderExtraQty, A.FNSubOrderExtraAmt"
                _Str &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A WITH(NOLOCK)"
                _Str &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'"
                _Str &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "';"

                oDBdtSubOrderNoAmntBF = Nothing
                oDBdtSubOrderNoAmntBF = HI.Conn.SQLConn.GetDataTableOnbeginTrans(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                Dim oStrBuilder As New System.Text.StringBuilder()

                oStrBuilder.Remove(0, oStrBuilder.Length)

                Select Case HI.ST.Lang.Language
                    Case HI.ST.Lang.eLang.TH

                        oStrBuilder.AppendLine("SELECT A.[FTInsUser],A.[FDInsDate],A.[FTInsTime],A.[FTUpdUser],A.[FDUpdDate],A.[FTUpdTime]")
                        oStrBuilder.AppendLine("      ,A.[FTOrderNo],A.[FTSubOrderNo],A.[FDSubOrderDate],A.[FTSubOrderBy]")
                        oStrBuilder.AppendLine("      ,A.[FDProDate],A.[FDShipDate]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuy] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyId = A.FNHSysBuyId),'') AS [FNHSysBuyId]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTContinentNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMContinent] AS L1 WITH(NOLOCK) WHERE L1.FNHSysContinentId = A.FNHSysContinentId),'') AS [FNHSysContinentId]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCountryNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCountry] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCountryId = A.FNHSysCountryId),'') AS [FNHSysCountryId]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTProvinceNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCMMProvince] AS L1 WITH(NOLOCK) WHERE L1.FNHSysProvinceId = A.FNHSysProvinceId),'') AS [FNHSysProvinceId]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTShipModenNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMShipMode] AS L1 WITH(NOLOCK) WHERE L1.FNHSysShipModeId = A.FNHSysShipModeId),'') AS [FNHSysShipModeId]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCurDescTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TFINMCurrency] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCurId = A.FNHSysCurId),'') AS [FNHSysCurId]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTGenderNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMGender] AS L1 WITH(NOLOCK) WHERE L1.FNHSysGenderId = A.FNHSysGenderId),'') AS [FNHSysGenderId]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTUnitNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMUnit] AS L1 WITH(NOLOCK) WHERE L1.FNHSysUnitId = A.FNHSysUnitId),'') AS [FNHSysUnitId]")
                        oStrBuilder.AppendLine("      ,A.[FNSubOrderState]")
                        oStrBuilder.AppendLine("      ,A.[FTStateEmb]")
                        oStrBuilder.AppendLine("      ,A.[FTStatePrint]")
                        oStrBuilder.AppendLine("      ,A.[FTStateHeat]")
                        oStrBuilder.AppendLine("      ,A.[FTStateLaser]")
                        oStrBuilder.AppendLine("      ,A.[FTStateWindows]")
                        oStrBuilder.AppendLine("      ,A.[FTStateOther1]")
                        oStrBuilder.AppendLine("      ,A.[FTOther1Note]")
                        oStrBuilder.AppendLine("      ,A.[FTStateOther2]")
                        oStrBuilder.AppendLine("      ,A.[FTOther2Note]")
                        oStrBuilder.AppendLine("      ,A.[FTStateOther3]")
                        oStrBuilder.AppendLine("      ,A.[FTOther3Note1]")
                        oStrBuilder.AppendLine("      ,A.[FTRemark]")
                        oStrBuilder.AppendLine("      ,A.[FTCustRef]")
                        oStrBuilder.AppendLine("      ,A.[FTPORef]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTShipPortNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMShipPort] AS L1 WITH(NOLOCK) WHERE L1.FNHSysShipPortId = A.FNHSysShipPortId),'') AS [FNHSysShipPortId]")
                        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub] AS A WITH(NOLOCK)")
                        oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'")
                        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "';")

                    Case Else
                        oStrBuilder.AppendLine("SELECT A.[FTInsUser],A.[FDInsDate],A.[FTInsTime],A.[FTUpdUser],A.[FDUpdDate],A.[FTUpdTime]")
                        oStrBuilder.AppendLine("      ,A.[FTOrderNo],A.[FTSubOrderNo],A.[FDSubOrderDate],A.[FTSubOrderBy]")
                        oStrBuilder.AppendLine("      ,A.[FDProDate],A.[FDShipDate]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuy] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyId = A.FNHSysBuyId),'') AS [FNHSysBuyId]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTContinentNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMContinent] AS L1 WITH(NOLOCK) WHERE L1.FNHSysContinentId = A.FNHSysContinentId),'') AS [FNHSysContinentId]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCountryNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCountry] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCountryId = A.FNHSysCountryId),'') AS [FNHSysCountryId]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTProvinceNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCMMProvince] AS L1 WITH(NOLOCK) WHERE L1.FNHSysProvinceId = A.FNHSysProvinceId),'') AS [FNHSysProvinceId]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTShipModeNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMShipMode] AS L1 WITH(NOLOCK) WHERE L1.FNHSysShipModeId = A.FNHSysShipModeId),'') AS [FNHSysShipModeId]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCurDescEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TFINMCurrency] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCurId = A.FNHSysCurId),'') AS [FNHSysCurId]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTGenderNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMGender] AS L1 WITH(NOLOCK) WHERE L1.FNHSysGenderId = A.FNHSysGenderId),'') AS [FNHSysGenderId]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTUnitNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMUnit] AS L1 WITH(NOLOCK) WHERE L1.FNHSysUnitId = A.FNHSysUnitId),'') AS [FNHSysUnitId]")
                        oStrBuilder.AppendLine("      ,A.[FNSubOrderState]")
                        oStrBuilder.AppendLine("      ,A.[FTStateEmb]")
                        oStrBuilder.AppendLine("      ,A.[FTStatePrint]")
                        oStrBuilder.AppendLine("      ,A.[FTStateHeat]")
                        oStrBuilder.AppendLine("      ,A.[FTStateLaser]")
                        oStrBuilder.AppendLine("      ,A.[FTStateWindows]")
                        oStrBuilder.AppendLine("      ,A.[FTStateOther1]")
                        oStrBuilder.AppendLine("      ,A.[FTOther1Note]")
                        oStrBuilder.AppendLine("      ,A.[FTStateOther2]")
                        oStrBuilder.AppendLine("      ,A.[FTOther2Note]")
                        oStrBuilder.AppendLine("      ,A.[FTStateOther3]")
                        oStrBuilder.AppendLine("      ,A.[FTOther3Note1]")
                        oStrBuilder.AppendLine("      ,A.[FTRemark]")
                        oStrBuilder.AppendLine("      ,A.[FTCustRef]")
                        oStrBuilder.AppendLine("      ,A.[FTPORef]")
                        oStrBuilder.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTShipPortNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMShipPort] AS L1 WITH(NOLOCK) WHERE L1.FNHSysShipPortId = A.FNHSysShipPortId),'') AS [FNHSysShipPortId]")

                        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub] AS A WITH(NOLOCK)")
                        oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'")
                        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "';")

                End Select

                sqlBefore = ""
                sqlBefore = oStrBuilder.ToString()

                dtBefore = HI.Conn.SQLConn.GetDataTableOnbeginTrans(sqlBefore, Conn.DB.DataBaseName.DB_MERCHAN)

                '...compare revised factory sub order no. information
                '==========================================================================================================================================
                sqlRevisedSubOrder = ""
                sqlRevisedSubOrder = "SELECT  A.FTOrderNo, A.FTSubOrderNo, A.FDSubOrderDate, A.FTSubOrderBy, A.FDProDate, A.FDShipDate, A.FNHSysBuyId, A.FNHSysContinentId,"
                sqlRevisedSubOrder &= Environment.NewLine & "         A.FNHSysCountryId, A.FNHSysProvinceId, A.FNHSysShipModeId, A.FNHSysCurId, A.FNHSysGenderId, A.FNHSysUnitId, A.FNSubOrderState,"
                sqlRevisedSubOrder &= Environment.NewLine & "         A.FTStateEmb, A.FTStatePrint, A.FTStateHeat, A.FTStateLaser, A.FTStateWindows,"
                sqlRevisedSubOrder &= Environment.NewLine & "         A.FTRemark, A.FNHSysShipPortId, A.FTCustRef, A.FNPackCartonSubType, A.FNPackPerCarton, A.FTSubOrderNoDivertRef"
                sqlRevisedSubOrder &= Environment.NewLine & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK)"
                sqlRevisedSubOrder &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                sqlRevisedSubOrder &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"

                DTBeforeRevisedSubOrder = HI.Conn.SQLConn.GetDataTableOnbeginTrans(sqlRevisedSubOrder, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                '==========================================================================================================================================

                '...update sub order no item
                _Str = ""
                _Str = "UPDATE A"
                _Str &= ControlChars.CrLf & "SET A.[FDSubOrderDate] = '" & HI.UL.ULDate.ConvertEnDB(Me.FDSubOrderDate.Text) & "'"
                _Str &= ControlChars.CrLf & "   ,A.[FTSubOrderBy] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                _Str &= ControlChars.CrLf & "   ,A.[FDProDate] = '" & HI.UL.ULDate.ConvertEnDB(Me.FDProDate.Text) & "'"
                _Str &= ControlChars.CrLf & "   ,A.[FDShipDate] = '" & HI.UL.ULDate.ConvertEnDB(Me.FDShipDate.Text) & "'"
                _Str &= ControlChars.CrLf & "   ,A.[FNHSysContinentId] = " & nFNHSysContinentId
                _Str &= ControlChars.CrLf & "   ,A.[FNHSysCountryId] = " & nFNHSysCountryId
                _Str &= ControlChars.CrLf & "   ,A.[FNHSysProvinceId] = " & nFNHSysProvinceId
                _Str &= ControlChars.CrLf & "   ,A.[FNHSysShipModeId] = " & Val(Me.FNHSysShipModeId.Properties.Tag.ToString())
                _Str &= ControlChars.CrLf & "   ,A.[FNHSysCurId] = " & Val(Me.FNHSysCurId.Properties.Tag.ToString())
                _Str &= ControlChars.CrLf & "   ,A.[FNHSysGenderId] = " & Val(Me.FNHSysGenderId.Properties.Tag.ToString())
                _Str &= ControlChars.CrLf & "   ,A.[FNHSysUnitId] = " & Val(Me.FNHSysUnitId.Properties.Tag.ToString())
                _Str &= ControlChars.CrLf & "   ,A.[FTStateEmb] = '" & Me.FTStateEmb.EditValue.ToString & "'"
                _Str &= ControlChars.CrLf & "   ,A.[FTStatePrint] = '" & Me.FTStatePrint.EditValue.ToString & "'"
                _Str &= ControlChars.CrLf & "   ,A.[FTStateHeat] = '" & Me.FTStateHeat.EditValue.ToString & "'"
                _Str &= ControlChars.CrLf & "   ,A.[FTStateLaser] = '" & Me.FTStateLaser.EditValue.ToString & "'"
                _Str &= ControlChars.CrLf & "   ,A.[FTStateWindows] = '" & Me.FTStateWindows.EditValue.ToString & "'"
                _Str &= ControlChars.CrLf & "   ,A.[FTRemark] = '" & HI.UL.ULF.rpQuoted(Me.FTRemarkSubOrderNo.Text) & "'"
                _Str &= ControlChars.CrLf & "   ,A.[FTCustRef] = N'" & HI.UL.ULF.rpQuoted(Me.FTCustRef.Text) & "'"
                _Str &= ControlChars.CrLf & "   ,A.[FTPORef] = N'" & HI.UL.ULF.rpQuoted(Me.FTSubPORef.Text.Trim) & "'"
                _Str &= ControlChars.CrLf & "   ,A.[FNHSysShipPortId] = " & Val(Me.FNHSysShipPortId.Properties.Tag.ToString())
                _Str &= ControlChars.CrLf & "   ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                _Str &= ControlChars.CrLf & "   ,A.[FDUpdDate] = " & HI.UL.ULDate.FormatDateDB
                _Str &= ControlChars.CrLf & "   ,A.[FTUpdTime] = " & HI.UL.ULDate.FormatTimeDB
                _Str &= ControlChars.CrLf & "   ,A.[FNHSysPlantId] = " & Val(FNHSysPlantId.Properties.Tag.ToString)
                _Str &= ControlChars.CrLf & "   ,A.[FNHSysBuyGrpId] = " & Val(FNHSysBuyGrpId.Properties.Tag.ToString)
                _Str &= ControlChars.CrLf & "   ,A.[FNOrderSetType] = " & FNOrderSetType.SelectedIndex
                _Str &= ControlChars.CrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS A"
                _Str &= ControlChars.CrLf & "WHERE  A.[FTOrderNo] = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                _Str &= ControlChars.CrLf & "       AND A.[FTSubOrderNo] = '" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"

                tFTSubOrderNo = Me.FTSubOrderNo.Properties.Tag.ToString().Trim()

                _tFTSubOrderNo = ""
            End If

            If HI.Conn.SQLConn.ExecuteTran(_Str, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) <= 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                Return False
            End If

            HI.Conn.SQLConn.Tran.Commit()
            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

            Me.FTSubOrderNo.Properties.Tag = tFTSubOrderNo
            Me.FTSubOrderNo.Text = tFTSubOrderNo

            Dim sqlAfter As String

            Dim oStrBuilderAf As New System.Text.StringBuilder()

            oStrBuilderAf.Remove(0, oStrBuilderAf.Length)

            Select Case HI.ST.Lang.Language
                Case HI.ST.Lang.eLang.TH

                    oStrBuilderAf.AppendLine("SELECT A.[FTInsUser],A.[FDInsDate],A.[FTInsTime],A.[FTUpdUser],A.[FDUpdDate],A.[FTUpdTime]")
                    oStrBuilderAf.AppendLine("      ,A.[FTOrderNo],A.[FTSubOrderNo],A.[FDSubOrderDate],A.[FTSubOrderBy]")
                    oStrBuilderAf.AppendLine("      ,A.[FDProDate],A.[FDShipDate]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuy] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyId = A.FNHSysBuyId),'') AS [FNHSysBuyId]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTContinentNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMContinent] AS L1 WITH(NOLOCK) WHERE L1.FNHSysContinentId = A.FNHSysContinentId),'') AS [FNHSysContinentId]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCountryNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCountry] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCountryId = A.FNHSysCountryId),'') AS [FNHSysCountryId]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTProvinceNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCMMProvince] AS L1 WITH(NOLOCK) WHERE L1.FNHSysProvinceId = A.FNHSysProvinceId),'') AS [FNHSysProvinceId]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTShipModenNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMShipMode] AS L1 WITH(NOLOCK) WHERE L1.FNHSysShipModeId = A.FNHSysShipModeId),'') AS [FNHSysShipModeId]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCurDescTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TFINMCurrency] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCurId = A.FNHSysCurId),'') AS [FNHSysCurId]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTGenderNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMGender] AS L1 WITH(NOLOCK) WHERE L1.FNHSysGenderId = A.FNHSysGenderId),'') AS [FNHSysGenderId]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTUnitNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMUnit] AS L1 WITH(NOLOCK) WHERE L1.FNHSysUnitId = A.FNHSysUnitId),'') AS [FNHSysUnitId]")
                    oStrBuilderAf.AppendLine("      ,A.[FNSubOrderState]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStateEmb]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStatePrint]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStateHeat]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStateLaser]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStateWindows]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStateOther1]")
                    oStrBuilderAf.AppendLine("      ,A.[FTOther1Note]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStateOther2]")
                    oStrBuilderAf.AppendLine("      ,A.[FTOther2Note]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStateOther3]")
                    oStrBuilderAf.AppendLine("      ,A.[FTOther3Note1]")
                    oStrBuilderAf.AppendLine("      ,A.[FTRemark]")
                    oStrBuilderAf.AppendLine("      ,A.[FTCustRef]")
                    oStrBuilderAf.AppendLine("      ,A.[FTPORef]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTShipPortNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMShipPort] AS L1 WITH(NOLOCK) WHERE L1.FNHSysShipPortId = A.FNHSysShipPortId),'') AS [FNHSysShipPortId]")
                    oStrBuilderAf.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub] AS A")
                    oStrBuilderAf.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'")
                    oStrBuilderAf.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "';")

                Case Else

                    oStrBuilderAf.AppendLine("SELECT A.[FTInsUser],A.[FDInsDate],A.[FTInsTime],A.[FTUpdUser],A.[FDUpdDate],A.[FTUpdTime]")
                    oStrBuilderAf.AppendLine("      ,A.[FTOrderNo],A.[FTSubOrderNo],A.[FDSubOrderDate],A.[FTSubOrderBy]")
                    oStrBuilderAf.AppendLine("      ,A.[FDProDate],A.[FDShipDate]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTBuyNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuy] AS L1 WITH(NOLOCK) WHERE L1.FNHSysBuyId = A.FNHSysBuyId),'') AS [FNHSysBuyId]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTContinentNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMContinent] AS L1 WITH(NOLOCK) WHERE L1.FNHSysContinentId = A.FNHSysContinentId),'') AS [FNHSysContinentId]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCountryNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCountry] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCountryId = A.FNHSysCountryId),'') AS [FNHSysCountryId]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTProvinceNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCMMProvince] AS L1 WITH(NOLOCK) WHERE L1.FNHSysProvinceId = A.FNHSysProvinceId),'') AS [FNHSysProvinceId]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTShipModeNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMShipMode] AS L1 WITH(NOLOCK) WHERE L1.FNHSysShipModeId = A.FNHSysShipModeId),'') AS [FNHSysShipModeId]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTCurDescEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TFINMCurrency] AS L1 WITH(NOLOCK) WHERE L1.FNHSysCurId = A.FNHSysCurId),'') AS [FNHSysCurId]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTGenderNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMGender] AS L1 WITH(NOLOCK) WHERE L1.FNHSysGenderId = A.FNHSysGenderId),'') AS [FNHSysGenderId]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTUnitNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMUnit] AS L1 WITH(NOLOCK) WHERE L1.FNHSysUnitId = A.FNHSysUnitId),'') AS [FNHSysUnitId]")
                    oStrBuilderAf.AppendLine("      ,A.[FNSubOrderState]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStateEmb]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStatePrint]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStateHeat]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStateLaser]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStateWindows]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStateOther1]")
                    oStrBuilderAf.AppendLine("      ,A.[FTOther1Note]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStateOther2]")
                    oStrBuilderAf.AppendLine("      ,A.[FTOther2Note]")
                    oStrBuilderAf.AppendLine("      ,A.[FTStateOther3]")
                    oStrBuilderAf.AppendLine("      ,A.[FTOther3Note1]")
                    oStrBuilderAf.AppendLine("      ,A.[FTRemark]")
                    oStrBuilderAf.AppendLine("      ,A.[FTCustRef]")
                    oStrBuilderAf.AppendLine("      ,A.[FTPORef]")
                    oStrBuilderAf.AppendLine("      ,ISNULL((SELECT TOP 1 L1.FTShipPortNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMShipPort] AS L1 WITH(NOLOCK) WHERE L1.FNHSysShipPortId = A.FNHSysShipPortId),'') AS [FNHSysShipPortId]")
                    oStrBuilderAf.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub] AS A")
                    oStrBuilderAf.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'")
                    oStrBuilderAf.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "';")


            End Select

            sqlAfter = ""
            sqlAfter = oStrBuilderAf.ToString()

            If sqlBefore <> "" Then
                dtAfter = HI.Conn.SQLConn.GetDataTable(sqlBefore, Conn.DB.DataBaseName.DB_MERCHAN)
            End If

            If nFNCntRecord > 0 Then
                _Str = ""
                _Str &= "SELECT A.FTStateApprovedSubOrderNo"
                _Str &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK)"
                _Str &= Environment.NewLine & " WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                _Str &= Environment.NewLine & "       AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                If HI.Conn.SQLConn.GetField(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "1" Then '...before revised factory order no
                    DTAfterRevisedSubOrder = HI.Conn.SQLConn.GetDataTable(sqlRevisedSubOrder, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                Else
                    DTAfterRevisedSubOrder = Nothing
                End If

            Else
                DTAfterRevisedSubOrder = Nothing
            End If

            REM 2015/02/23 Call PostSave("[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[TMERTOrderSub]", Me.FTOrderNo.Text & "|" & FTSubOrderNo.Text & "|" & Me.FNHSysStyleId.Text)

            Call PROC_PostSaveSubOrderNo("[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[TMERTOrderSub]", Me.FTOrderNo.Text & "|" & FTSubOrderNo.Text & "|" & Me.FNHSysStyleId.Text)

            Return True

        Catch ex As Exception

            HI.Conn.SQLConn.Tran.Rollback()
            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
            Return False
        End Try

    End Function


    Private Function W_PRCbDeleteSubOrderHD() As Boolean
        '...delete sub order no header/ sub order no breakdown detail
        '/*'...case factory sub order no >>> divert sub order no {ทั้งกรณีที่ทำการ Generate MPR} การลบ sub order no จะต้องทำการลบจาก ตัว Node สุดท้าย ที่ทำการ Divert มาก่อนเสมอ*/
        '/*เมื่อทำการลบรายการใบสั่งผลิตย่อยที่เป็นการ Divert มาให้ทำการคืนจำนวน Breakdown ให้แก่ Sub Factory Order No ที่เป็น Node แม่*/
        Try
            If Me.FTOrderNo.Properties.Tag.ToString() = "" Then Return False

            '...validate confirm delete factory sub order no.
            '=================================================================================================================================================================================================================================================
            If Me.FTSubOrderNo.Properties.Tag.ToString() <> "" And Me.FTSubOrderNo.Text.Trim() <> "" Then
                Dim bFlagDeleteFONoDivert As Boolean
                Dim sSQL As String

                bFlagDeleteFONoDivert = False

                '...Validate Factory Sub Order No. ที่จะทำการลบ เป็น Sub Order No.ที่เป็นการ Divert มาใช่หรือไม่ ? / ถ้าเป็นการ Divert มา และ ไม่ใช่ Node สุดท้าย ให้ทำการ ลบ ที่ Sub Order No. สุดท้ายก่อนเสมอ
                sSQL = ""
                sSQL = "SELECT TOP 1 ISNULL(A.FTSubOrderNoDivertRef, '') AS FTSubOrderNoDivertRef FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"

                Dim tTextFTSubOrderNoDivertRef As String

                tTextFTSubOrderNoDivertRef = HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "")

                If tTextFTSubOrderNoDivertRef <> "" Then
                    'เป็น Factory Sub Order No. ที่เกิดจากการ Divert ใช่หรือไม่? ==> ถ้าเกิดจการ Divert มา แล้ว เป็น Node สุดท้ายใช่หรือไม่ ? ถ้าใช่ให้ทำการ คืน Breakdown กลับมาที่ Sub Order No. ที่เป็น Node แม่
                    '                                                                                                ? ถ้าไม่ใช่ Node สุดท้าย Message เตือนให้ทำการ ลบ Node สุดท้ายก่อนเสมอ
                    sSQL = ""
                    sSQL = "SELECT TOP 1 ISNULL(A.FTSubOrderNo, '') AS FTSubOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK) WHERE A.FTSubOrderNoDivertRef = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                    If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") = "" Then
                        '...ถ้าใช่ให้ทำการ คืน Breakdown กลับมาที่ Factory Sub Order No. ที่เป็น Node แม่
                        bFlagDeleteFONoDivert = True

                        '...ถ้ายังไม่มีการผลิต/เข้าไลน์ production ==> Me.FTStateSubProduction.Checked = False
                        If Me.FTStateSubCutting.Checked = False And Me.FTStateSubSewing.Checked = False And Me.FTStateSubPacking.Checked = False Then

                            If Me.FTStateSubMRP.Checked = False Then
                                '...pass validate
                            Else
                                'MsgBox("ไม่สามารถทำการลบรายการใบสั่งผลิตย่อยนี้ได้เนื่องจากมีการ Generate MPR ไปแล้ว" & Environment.NewLine & "ท่านจะต้องทำการเคลียร์รายการการคำนวณรายการ MPR สำหรับใบสั่งผลิตย่อยนี้ก่อน", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, My.Application.Info.Title.ToString)
                                HI.MG.ShowMsg.mInfo("ไม่สามารถทำการลบรายการใบสั่งผลิตย่อยนี้ได้เนื่องจากมีการ Generate MPR ไปแล้ว" & Microsoft.VisualBasic.vbCrLf & "ท่านจะต้องทำการเคลียร์รายการการคำนวณรายการ MPR สำหรับใบสั่งผลิตย่อยนี้ก่อน", 1501090001, Me.Text, Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text, MessageBoxIcon.Warning)
                                Return False
                            End If

                        Else
                            'MsgBox("ไม่สามารถทำการลบรายการใบสั่งผลิตย่อยนี้ได้เนื่องจากมีการทำการผลิตไปแล้ว", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, My.Application.Info.Title.ToString)
                            HI.MG.ShowMsg.mInfo("ไม่สามารถทำการลบรายการใบสั่งผลิตย่อยนี้ได้เนื่องจากมีการทำการผลิตไปแล้ว !!!", 1501090002, Me.Text, Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text, MessageBoxIcon.Warning)
                            Return False
                        End If

                    Else
                        '...ถ้าไม่ใช่ Node สุดท้าย Message เตือนให้ทำการ ลบ Node สุดท้ายก่อนเสมอ

                        sSQL = ""
                        sSQL = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                        sSQL &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                        sSQL &= Environment.NewLine & "DECLARE @tmpDTSubOrderNoDivert AS TABLE (FTOrderNo NVARCHAR(30), FTSubOrderNo NVARCHAR(30), FTSubOrderNoDivertRef NVARCHAR(30));"
                        sSQL &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                        sSQL &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                        sSQL &= Environment.NewLine & "WITH FONoSubCTE"
                        sSQL &= Environment.NewLine & "AS (SELECT L1.FTOrderNo, L1.FTSubOrderNo, L1.FTSubOrderNoDivertRef AS FTSubOrderNoDivertRef"
                        sSQL &= Environment.NewLine & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS L1 (NOLOCK)"
                        sSQL &= Environment.NewLine & "    WHERE L1.FTOrderNo = @FTOrderNo AND L1.FTSubOrderNo = @FTSubOrderNo"
                        sSQL &= Environment.NewLine & "    UNION ALL"
                        sSQL &= Environment.NewLine & "    SELECT L3.FTOrderNo, L3.FTSubOrderNo, FONoSubCTE.FTSubOrderNo AS FTSubOrderNoDivertRef"
                        sSQL &= Environment.NewLine & "    FROM FONoSubCTE INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS L3 (NOLOCK) ON FONoSubCTE.FTSubOrderNo = L3.FTSubOrderNoDivertRef"
                        sSQL &= Environment.NewLine & "    )"
                        sSQL &= Environment.NewLine & "INSERT INTO @tmpDTSubOrderNoDivert (FTOrderNo, FTSubOrderNo, FTSubOrderNoDivertRef)"
                        sSQL &= Environment.NewLine & "SELECT FONoSubDivert.FTOrderNo, FONoSubDivert.FTSubOrderNo, FONoSubDivert.FTSubOrderNoDivertRef"
                        sSQL &= Environment.NewLine & "FROM FONoSubCTE AS FONoSubDivert"
                        sSQL &= Environment.NewLine & "ORDER BY FONoSubDivert.FTSubOrderNo ASC;"
                        sSQL &= Environment.NewLine & "/*"
                        sSQL &= Environment.NewLine & "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FTSubOrderNoDivertRef"
                        sSQL &= Environment.NewLine & "FROM @tmpDTSubOrderNoDivert AS A"
                        sSQL &= Environment.NewLine & "ORDER BY A.FTSubOrderNo ASC;"
                        sSQL &= Environment.NewLine & "*/"
                        sSQL &= Environment.NewLine & "SELECT TOP 1 A.FTSubOrderNo FROM @tmpDTSubOrderNoDivert AS A ORDER BY A.FTSubOrderNo DESC;"

                        Dim tmpDTLastNodeDivert As System.Data.DataTable

                        tmpDTLastNodeDivert = HI.Conn.SQLConn.GetDataTable(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                        If Not DBNull.Value.Equals(tmpDTLastNodeDivert) AndAlso tmpDTLastNodeDivert.Rows.Count > 0 Then
                            Dim tTextDivertInfo As String

                            tTextDivertInfo = ""

                            Select Case True
                                Case HI.ST.Lang.Language = HI.ST.Lang.eLang.TH
                                    tTextDivertInfo = "ท่านจะต้องทำการลบรายการใบสั่งผลิตย่อย" & Environment.NewLine & "ที่เกิดจากการ Divert เป็นลำดับสุดท้ายมาก่อนตามลำดับ" & Environment.NewLine & "{" & tmpDTLastNodeDivert.Rows(0).Item("FTSubOrderNo").ToString & "}"
                                Case HI.ST.Lang.Language = HI.ST.Lang.eLang.EN
                                    tTextDivertInfo = "You should always to delete factory sub order no" & Environment.NewLine & "step by step divert sub order no descending order" & Environment.NewLine & "{" & tmpDTLastNodeDivert.Rows(0).Item("FTSubOrderNo").ToString & "}"
                                Case Else
                                    tTextDivertInfo = "You should always to delete factory sub order no" & Environment.NewLine & "step by step divert sub order no descending order" & Environment.NewLine & "{" & tmpDTLastNodeDivert.Rows(0).Item("FTSubOrderNo").ToString & "}"
                            End Select

                            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, "Delete Factory Sub Order No", tTextDivertInfo)

                            Return False

                        End If

                    End If

                Else
                    'ถ้าไม่ใช่  Sub Factory Order No. ที่เกิดจากการ Divert ==> แล้ว Factory Order No นั้น เป็น Node แม่ ของ Child Node ที่เป็นต้นทางของการ Divert หรือไม่ ? ==> Message แจ้งเตือนให้ทำการลบ Node สุดท้ายก่อนเสมอ
                    '                                                                                                                              ? ==> ถ้า Sub Order No.นี้ ไม่ได้เป็น Reference สำหรับการ Divert สำหรับ Sub Order No.ใดๆ
                    '															                                                                          ให้ทำการ Validate State ==> FTStateSubMPR, FTStateSubCutting, FTStateSubSewing, FTStateSubPacking
                    sSQL = ""
                    sSQL = "SELECT TOP 1 ISNULL(A.FTSubOrderNo, '') AS FTSubOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK) WHERE A.FTSubOrderNoDivertRef = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                    If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                        '...Factory Sub Order No.นี้ เป็น Node แม่ ของ Child Node ที่เป็นต้นทางของการ Divert ==> Message แจ้งเตือนให้ทำการลบ Node สุดท้ายก่อนเสมอ
                        sSQL = ""
                        sSQL = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                        sSQL &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                        sSQL &= Environment.NewLine & "DECLARE @tmpDTSubOrderNoDivert AS TABLE (FTOrderNo NVARCHAR(30), FTSubOrderNo NVARCHAR(30), FTSubOrderNoDivertRef NVARCHAR(30));"
                        sSQL &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                        sSQL &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                        sSQL &= Environment.NewLine & "WITH FONoSubCTE"
                        sSQL &= Environment.NewLine & "AS (SELECT L1.FTOrderNo, L1.FTSubOrderNo, L1.FTSubOrderNoDivertRef AS FTSubOrderNoDivertRef"
                        sSQL &= Environment.NewLine & "    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS L1 (NOLOCK)"
                        sSQL &= Environment.NewLine & "    WHERE L1.FTOrderNo = @FTOrderNo AND L1.FTSubOrderNo = @FTSubOrderNo"
                        sSQL &= Environment.NewLine & "    UNION ALL"
                        sSQL &= Environment.NewLine & "    SELECT L3.FTOrderNo, L3.FTSubOrderNo, FONoSubCTE.FTSubOrderNo AS FTSubOrderNoDivertRef"
                        sSQL &= Environment.NewLine & "    FROM FONoSubCTE INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS L3 (NOLOCK) ON FONoSubCTE.FTSubOrderNo = L3.FTSubOrderNoDivertRef"
                        sSQL &= Environment.NewLine & "    )"
                        sSQL &= Environment.NewLine & "INSERT INTO @tmpDTSubOrderNoDivert (FTOrderNo, FTSubOrderNo, FTSubOrderNoDivertRef)"
                        sSQL &= Environment.NewLine & "SELECT FONoSubDivert.FTOrderNo, FONoSubDivert.FTSubOrderNo, FONoSubDivert.FTSubOrderNoDivertRef"
                        sSQL &= Environment.NewLine & "FROM FONoSubCTE AS FONoSubDivert"
                        sSQL &= Environment.NewLine & "ORDER BY FONoSubDivert.FTSubOrderNo ASC;"
                        sSQL &= Environment.NewLine & "/*"
                        sSQL &= Environment.NewLine & "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FTSubOrderNoDivertRef"
                        sSQL &= Environment.NewLine & "FROM @tmpDTSubOrderNoDivert AS A"
                        sSQL &= Environment.NewLine & "ORDER BY A.FTSubOrderNo ASC;"
                        sSQL &= Environment.NewLine & "*/"
                        sSQL &= Environment.NewLine & "SELECT TOP 1 A.FTSubOrderNo FROM @tmpDTSubOrderNoDivert AS A ORDER BY A.FTSubOrderNo DESC;"

                        Dim tmpDTLastNodeDivert As System.Data.DataTable

                        tmpDTLastNodeDivert = HI.Conn.SQLConn.GetDataTable(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                        If Not DBNull.Value.Equals(tmpDTLastNodeDivert) AndAlso tmpDTLastNodeDivert.Rows.Count > 0 Then
                            Dim tTextDivertInfo As String

                            tTextDivertInfo = ""

                            Select Case True
                                Case HI.ST.Lang.Language = HI.ST.Lang.eLang.TH
                                    tTextDivertInfo = "ท่านจะต้องทำการลบรายการใบสั่งผลิตย่อย" & Environment.NewLine & "ที่เกิดจากการ Divert เป็นลำดับสุดท้ายมาก่อนตามลำดับ" & Environment.NewLine & "{" & tmpDTLastNodeDivert.Rows(0).Item("FTSubOrderNo").ToString & "}"
                                Case HI.ST.Lang.Language = HI.ST.Lang.eLang.EN
                                    tTextDivertInfo = "You should always to delete factory sub order no" & Environment.NewLine & "step by step divert sub order no descending order" & Environment.NewLine & "{" & tmpDTLastNodeDivert.Rows(0).Item("FTSubOrderNo").ToString & "}"
                                Case Else
                                    tTextDivertInfo = "You should always to delete factory sub order no" & Environment.NewLine & "step by step divert sub order no descending order" & Environment.NewLine & "{" & tmpDTLastNodeDivert.Rows(0).Item("FTSubOrderNo").ToString & "}"
                            End Select

                            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, "Delete Factory Sub Order No", tTextDivertInfo)

                            Return False

                        Else

                            Return False

                        End If

                    Else
                        '...ถ้า Factory Sub Order No.นี้ ไม่ได้เป็น Reference สำหรับการ Divert สำหรับ Sub Order No.ใดๆ
                        If Me.FTStateSubMRP.Checked = False And Me.FTStateSubCutting.Checked = False And Me.FTStateSubSewing.Checked = False And Me.FTStateSubPacking.Checked = False Then

                            If FTStateReserve.Checked Or FTStateSourcing.Checked Or FTStatePurchase.Checked Or FTStateReceive.Checked Or FTStateAdjust.Checked Or FTStateTransferIn.Checked Or FTStateTransferOut.Checked Or Me.FTStateTransferWH.Checked Then
                                HI.MG.ShowMsg.mInfo("พบ Transaction ต่างๆของ Order ไม่สามารถทำการลบได้ !!!", 1408080002, Me.Text, Me.FTOrderNo.Text, MessageBoxIcon.Warning)
                                Return False
                            Else
                                '...pass validate
                            End If

                        Else
                            '...ถ้ายังไม่มีการผลิต/เข้าไลน์ production ==> Me.FTStateSubProduction.Checked = False
                            If Me.FTStateSubCutting.Checked = False And Me.FTStateSubSewing.Checked = False And Me.FTStateSubPacking.Checked = False Then

                                If Me.FTStateSubMRP.Checked = False Then
                                    '...pass validate
                                Else
                                    'MsgBox("ไม่สามารถทำการลบรายการใบสั่งผลิตย่อยนี้ได้เนื่องจากมีการ Generate MPR ไปแล้ว" & Environment.NewLine & "ท่านจะต้องทำการเคลียร์รายการการคำนวณรายการ MPR สำหรับใบสั่งผลิตย่อยนี้ก่อน", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, My.Application.Info.Title.ToString)
                                    HI.MG.ShowMsg.mInfo("ไม่สามารถทำการลบรายการใบสั่งผลิตย่อยนี้ได้เนื่องจากมีการ Generate MPR ไปแล้ว" & Microsoft.VisualBasic.vbCrLf & "ท่านจะต้องทำการเคลียร์รายการการคำนวณรายการ MPR สำหรับใบสั่งผลิตย่อยนี้ก่อน", 1501090001, Me.Text, Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text, MessageBoxIcon.Warning)
                                    Return False
                                End If

                            Else
                                'MsgBox("ไม่สามารถทำการลบรายการใบสั่งผลิตย่อยนี้ได้เนื่องจากมีการทำการผลิตไปแล้ว", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, My.Application.Info.Title.ToString)
                                HI.MG.ShowMsg.mInfo("ไม่สามารถทำการลบรายการใบสั่งผลิตย่อยนี้ได้เนื่องจากมีการทำการผลิตไปแล้ว !!!", 1501090002, Me.Text, Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text, MessageBoxIcon.Warning)
                                Return False
                            End If

                        End If

                    End If

                End If
                '=================================================================================================================================================================================================================================================

                If HI.MG.ShowMsg.mConfirmProcess(MG.ShowMsg.ProcessType.mDelete, Me.FTSubOrderNo.Text, Me.Text) = True Then

                    Dim sSQLCompareBeforeAfter As String

                    If Not bFlagDeleteFONoDivert = True Then
                        '...delete factory sub order no is not divert
                        Dim tFTOrderNo As String
                        Dim tFTSubOrderNo As String
                        Dim tSql As String

                        tFTOrderNo = Me.FTOrderNo.Properties.Tag.ToString().Trim()
                        tFTSubOrderNo = Me.FTSubOrderNo.Properties.Tag.ToString().Trim()

                        sSQLCompareBeforeAfter = ""

                        sSQLCompareBeforeAfter = "SELECT TOP 1 A.FTOrderNo, B.FTSubOrderNo, C.FTStyleCode"
                        sSQLCompareBeforeAfter &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS B (NOLOCK) ON A.FTOrderNo = B.FTOrderNo"
                        sSQLCompareBeforeAfter &= Environment.NewLine & "                                                INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMStyle AS C (NOLOCK) ON A.FNHSysStyleId  =  C.FNHSysStyleId"
                        sSQLCompareBeforeAfter &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                        sSQLCompareBeforeAfter &= Environment.NewLine & "      AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "';"

                        tmpDTFoNoBefore = HI.Conn.SQLConn.GetDataTable(sSQLCompareBeforeAfter, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                        HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
                        HI.Conn.SQLConn.SqlConnectionOpen()
                        HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
                        HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction

                        tSql = ""
                        tSql = "DELETE A"
                        tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Bundle AS A"
                        tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                        tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "';"

                        If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                            'HI.Conn.SQLConn.Tran.Rollback()
                            'HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                            'HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                            'Return False
                        End If

                        tSql = ""
                        tSql = "DELETE A"
                        tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A"
                        tSql &= Environment.NewLine & "WHERE  A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                        tSql &= Environment.NewLine & "       AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"

                        If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                            'HI.Conn.SQLConn.Tran.Rollback()
                            'HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                            'HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                            'Return False
                        End If

                        tSql = ""
                        tSql = "DELETE A"
                        tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A"
                        tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                        tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"

                        If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                            'HI.Conn.SQLConn.Tran.Rollback()
                            'HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                            'HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                            'Return False
                        End If

                        tSql = ""
                        tSql = "DELETE A"
                        tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A"
                        tSql &= Environment.NewLine & "WHERE  A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                        tSql &= Environment.NewLine & "       AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"

                        If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                            'HI.Conn.SQLConn.Tran.Rollback()
                            'HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                            'HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                            'Return False
                        End If

                        tSql = ""
                        tSql = "DELETE A"
                        tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Component] AS A"
                        tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                        tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "';"

                        If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                            'HI.Conn.SQLConn.Tran.Rollback()
                            'HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                            'HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                            'Return False
                        End If

                        tSql = ""
                        tSql = "DELETE A"
                        tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A"
                        tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                        tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"

                        If HI.Conn.SQLConn.ExecuteTran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                            'HI.Conn.SQLConn.Tran.Rollback()
                            'HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                            'HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                            'Return False
                        End If

                        tSql = ""
                        tSql = "DELETE A"
                        tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A"
                        tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                        tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"

                        If HI.Conn.SQLConn.ExecuteTran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) <= 0 Then
                            HI.Conn.SQLConn.Tran.Rollback()
                            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                            Return False
                        End If

                        HI.Conn.SQLConn.Tran.Commit()
                        HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                        HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                        HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mDelete, Me.Text)

                        'sSQLCompareBeforeAfter = ""
                        'sSQLCompareBeforeAfter = "SELECT TOP 1 A.FTOrderNo, B.FTSubOrderNo, C.FTStyleCode"
                        'sSQLCompareBeforeAfter &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS B (NOLOCK) ON A.FTOrderNo = B.FTOrderNo"
                        'sSQLCompareBeforeAfter &= Environment.NewLine & "                                                INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMStyle AS C (NOLOCK) ON A.FNHSysStyleId  =  C.FNHSysStyleId"
                        'sSQLCompareBeforeAfter &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                        'sSQLCompareBeforeAfter &= Environment.NewLine & "      AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "';"

                        tmpDTFoNoAfter = HI.Conn.SQLConn.GetDataTable(sSQLCompareBeforeAfter, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                        HI.TL.HandlerControl.ClearControl(Me.ogbSubOrder)
                        HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)

                        oGridViewSubBreakdown = Me.ogdSubOrdBreakDown.Views(0)
                        oGridViewSubBreakdownSum = Me.ogdSubOrdBreakDownSummary.Views(0)
                        Me.ogdSubOrdBreakDown.DataSource = Nothing
                        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                        Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
                        Me.ogdSubOrdBreakDownSummary.Width = ogdSubOrdBreakDown.Width

                        Me.FDSubOrderDate.Text = ""
                        Me.FDProDate.Text = ""
                        Me.FDShipDate.Text = ""

                        Me.FTSubOrderNo.Properties.Tag = ""
                        Me.FTSubOrderNo.Text = ""
                        Me.FTSubOrderNo.Focus()

                        Call W_PRCbShowBrowseDataCurrencyInfo()
                        Call W_PRCbShowBrowseDataOrderBreakdownInfo()
                        Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(tFTOrderNo, tFTSubOrderNo)
                        Call W_PRCbShowBrowseDataSubOrderComponent(tFTOrderNo, tFTSubOrderNo)

                        Return True

                    Else
                        '...delete factory sub order no divert

                        sSQLCompareBeforeAfter = ""
                        sSQLCompareBeforeAfter = "SELECT TOP 1 A.FTOrderNo, B.FTSubOrderNo, C.FTStyleCode"
                        sSQLCompareBeforeAfter &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS B (NOLOCK) ON A.FTOrderNo = B.FTOrderNo"
                        sSQLCompareBeforeAfter &= Environment.NewLine & "                                                INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMStyle AS C (NOLOCK) ON A.FNHSysStyleId  =  C.FNHSysStyleId"
                        sSQLCompareBeforeAfter &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                        sSQLCompareBeforeAfter &= Environment.NewLine & "      AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                        tmpDTFoNoBefore = HI.Conn.SQLConn.GetDataTable(sSQLCompareBeforeAfter, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                        Dim oStrBuilder As New System.Text.StringBuilder

                        oStrBuilder.Remove(0, oStrBuilder.Length)

                        oStrBuilder.AppendLine("DECLARE @FTOrderNo AS NVARCHAR(30);")
                        oStrBuilder.AppendLine("DECLARE @FTSubOrderNo AS NVARCHAR(30);")
                        oStrBuilder.AppendLine("DECLARE @FTSubOrderNoDivertRef AS NVARCHAR(30);")
                        oStrBuilder.AppendLine("DECLARE @FTUpdUser AS NVARCHAR(30);")
                        oStrBuilder.AppendLine("DECLARE @FDUpdDate AS VARCHAR(10);")
                        oStrBuilder.AppendLine("DECLARE @FTUpdTime AS VARCHAR(8)")
                        oStrBuilder.AppendLine(String.Format("SET @FTUpdUser = N'{0}';", HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName)))
                        oStrBuilder.AppendLine(String.Format("SET @FTOrderNo = N'{0}';", HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim)))
                        oStrBuilder.AppendLine(String.Format("SET @FTSubOrderNo = N'{0}';", HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim)))
                        oStrBuilder.AppendLine("SELECT @FTSubOrderNoDivertRef = A.FTSubOrderNoDivertRef FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK) WHERE A.FTOrderNo = @FTOrderNo AND A.FTSubOrderNo = @FTSubOrderNo;")
                        oStrBuilder.AppendLine("SELECT @FDUpdDate = CONVERT(VARCHAR(10), GETDATE(), 111);")
                        oStrBuilder.AppendLine("SELECT @FTUpdTime = CONVERT(VARCHAR(8), GETDATE(), 114);")
                        oStrBuilder.AppendLine("/*CASE I : update record factory sub order no when match exists divert factory sub order no.*/")
                        oStrBuilder.AppendLine("UPDATE A")
                        oStrBuilder.AppendLine("SET A.FTUpdUser = @FTUpdUser,")
                        oStrBuilder.AppendLine("    A.FDUpdDate = @FDUpdDate,")
                        oStrBuilder.AppendLine("	A.FTUpdTime = @FTUpdTime,")
                        oStrBuilder.AppendLine("	A.FNQuantity = ISNULL(A.FNQuantity, 0) + ISNULL(B.FNQuantity, 0),")
                        oStrBuilder.AppendLine("	A.FNAmt = (ISNULL(A.FNQuantity, 0) + ISNULL(B.FNQuantity, 0)) * ISNULL(A.FNPrice, 0),")
                        oStrBuilder.AppendLine("	A.FNQuantityExtra = CEILING((ISNULL(A.FNQuantity, 0) + ISNULL(B.FNQuantity, 0)) * (ISNULL(A.FNExtraQty, 0)/100.0)),")
                        oStrBuilder.AppendLine("	A.FNAmntExtra = CEILING((ISNULL(A.FNQuantity, 0) + ISNULL(B.FNQuantity, 0)) * (ISNULL(A.FNExtraQty, 0)/100.0))  * ISNULL(A.FNPrice, 0),")
                        oStrBuilder.AppendLine("	A.FNGrandQuantity = ISNULL(A.FNQuantity, 0) + ISNULL(B.FNQuantity, 0) + ISNULL(A.FNGarmentQtyTest, 0) + CEILING((ISNULL(A.FNQuantity, 0) + ISNULL(B.FNQuantity, 0)) * (ISNULL(A.FNExtraQty, 0)/100.0)),")
                        oStrBuilder.AppendLine("	A.FNGrandAmnt = (ISNULL(A.FNQuantity, 0) + ISNULL(B.FNQuantity, 0)) * ISNULL(A.FNPrice, 0) + CEILING((ISNULL(A.FNQuantity, 0) + ISNULL(B.FNQuantity, 0)) * (ISNULL(A.FNExtraQty, 0)/100.0))  * ISNULL(A.FNPrice, 0)")
                        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS A LEFT JOIN (SELECT L1.FTOrderNo, L1.FTSubOrderNo, L1.FNHSysMatColorId, L1.FNHSysMatSizeId,")
                        oStrBuilder.AppendLine("                                                                     L1.FNQuantity, L1.FNPrice, L1.FNAmt,")
                        oStrBuilder.AppendLine("																	 L1.FNExtraQty, L1.FNAmntExtra,")
                        oStrBuilder.AppendLine("																	 L1.FNGarmentQtyTest, L1.FNAmntQtyTest,")
                        oStrBuilder.AppendLine("																	 L1.FNGrandQuantity, L1.FNGrandAmnt,")
                        oStrBuilder.AppendLine("																	 L1.FTColorway, L1.FTSizeBreakDown")
                        oStrBuilder.AppendLine("                                                              FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L1 (NOLOCK)")
                        oStrBuilder.AppendLine("												              WHERE L1.FTOrderNo = @FTOrderNo")
                        oStrBuilder.AppendLine("												                    AND L1.FTSubOrderNo = @FTSubOrderNo")
                        oStrBuilder.AppendLine("												              ) AS B ON A.FTOrderNo = B.FTOrderNo")
                        oStrBuilder.AppendLine("WHERE A.FTOrderNo = @FTOrderNo")
                        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = @FTSubOrderNoDivertRef")
                        oStrBuilder.AppendLine("      AND A.FNHSysMatColorId = B.FNHSysMatColorId")
                        oStrBuilder.AppendLine("      AND A.FNHSysMatSizeId = B.FNHSysMatSizeId;")
                        oStrBuilder.AppendLine("/*CASE II : add new record factory sub order no when not match exists from node parent factory order no.*/")
                        oStrBuilder.AppendLine("INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown  (FTInsUser, FDInsDate, FTInsTime,")
                        oStrBuilder.AppendLine("                                                       FTUpdUser, FDUpdDate, FTUpdTime,")
                        oStrBuilder.AppendLine("                                                       FTOrderNo, FTSubOrderNo, ")
                        oStrBuilder.AppendLine("													   FTColorway, FTSizeBreakDown, FNHSysMatColorId, FNHSysMatSizeId,")
                        oStrBuilder.AppendLine("													   FNPrice, FNQuantity, FNAmt,")
                        oStrBuilder.AppendLine("													   FNExtraQty, FNQuantityExtra, FNGrandQuantity,")
                        oStrBuilder.AppendLine("													   FNAmntExtra, FNGrandAmnt, FNGarmentQtyTest, FNAmntQtyTest)")
                        oStrBuilder.AppendLine("SELECT @FTUpdUser, @FDUpdDate, @FTUpdTime,")
                        oStrBuilder.AppendLine("       @FTUpdUser, @FDUpdDate, @FTUpdTime,")
                        oStrBuilder.AppendLine("	   @FTOrderNo, @FTSubOrderNoDivertRef,")
                        oStrBuilder.AppendLine("	   A.FTColorway, A.FTSizeBreakDown, A.FNHSysMatColorId, A.FNHSysMatSizeId,")
                        oStrBuilder.AppendLine("	   A.FNPrice, A.FNQuantity, A.FNAmt,")
                        oStrBuilder.AppendLine("	   A.FNExtraQty, A.FNQuantityExtra, A.FNGrandQuantity,")
                        oStrBuilder.AppendLine("	   A.FNAmntExtra, A.FNGrandAmnt, A.FNGrandQuantity, A.FNAmntQtyTest")
                        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS A (NOLOCK)")
                        oStrBuilder.AppendLine("WHERE A.FTOrderNo = @FTOrderNo")
                        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = @FTSubOrderNo")
                        oStrBuilder.AppendLine("	  AND NOT EXISTS (SELECT 'T' ")
                        oStrBuilder.AppendLine("	                  FROM (SELECT DISTINCT L2.FTColorway, L2.FTSizeBreakDown")
                        oStrBuilder.AppendLine("	                        FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L2 (NOLOCK)")
                        oStrBuilder.AppendLine("					        WHERE L2.FTOrderNo = @FTOrderNo ")
                        oStrBuilder.AppendLine("					              AND L2.FTSubOrderNo = @FTSubOrderNoDivertRef")
                        oStrBuilder.AppendLine("							) AS LL2")
                        oStrBuilder.AppendLine("					  WHERE A.FTColorway = LL2.FTColorway")
                        oStrBuilder.AppendLine("					        AND A.FTSizeBreakDown = LL2.FTSizeBreakDown")
                        oStrBuilder.AppendLine("					  );")
                        oStrBuilder.AppendLine("DELETE A")
                        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Bundle AS A")
                        oStrBuilder.AppendLine("WHERE A.FTOrderNo = @FTOrderNo")
                        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = @FTSubOrderNo;")
                        oStrBuilder.AppendLine("DELETE A")
                        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec  AS A")
                        oStrBuilder.AppendLine("WHERE A.FTOrderNo = @FTOrderNo")
                        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = @FTSubOrderNo;")
                        oStrBuilder.AppendLine("DELETE A")
                        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A")
                        oStrBuilder.AppendLine("WHERE A.FTOrderNo = @FTOrderNo")
                        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = @FTSubOrderNo;")
                        oStrBuilder.AppendLine("DELETE A")
                        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A")
                        oStrBuilder.AppendLine("WHERE A.FTOrderNo = @FTOrderNo")
                        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = @FTSubOrderNo;")
                        oStrBuilder.AppendLine("DELETE A")
                        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Component AS A")
                        oStrBuilder.AppendLine("WHERE A.FTOrderNo = @FTOrderNo")
                        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = @FTSubOrderNo;")
                        oStrBuilder.AppendLine("DELETE A")
                        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS A")
                        oStrBuilder.AppendLine("WHERE A.FTOrderNo = @FTOrderNo")
                        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = @FTSubOrderNo;")
                        oStrBuilder.AppendLine("DELETE A")
                        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A")
                        oStrBuilder.AppendLine("WHERE A.FTOrderNo = @FTOrderNo")
                        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = @FTSubOrderNo;")

                        oStrBuilder.AppendLine("DELETE A")
                        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTMPR AS A (NOLOCK) LEFT JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PUR) & "]..TPURTOrder_Sourcing AS B (NOLOCK) ON A.FTOrderNo = B.FTOrderNo")
                        oStrBuilder.AppendLine("WHERE A.FTOrderNo = @FTOrderNo")
                        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = @FTSubOrderNo")
                        oStrBuilder.AppendLine("      AND A.FNHSysRawMatId = B.FNHSysRawMatId")
                        oStrBuilder.AppendLine("      AND B.FTOrderNo IS NULL;")

                        sSQL = ""
                        sSQL = oStrBuilder.ToString()

                        HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
                        HI.Conn.SQLConn.SqlConnectionOpen()
                        HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
                        HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction

                        If HI.Conn.SQLConn.ExecuteTran(sSQL, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) <= 0 Then
                            HI.Conn.SQLConn.Tran.Rollback()
                            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                            Return False
                        End If

                        HI.Conn.SQLConn.Tran.Commit()
                        HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                        HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                        HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mDelete, Me.Text)

                        'sSQLCompareBeforeAfter = ""
                        'sSQLCompareBeforeAfter = "SELECT TOP 1 A.FTOrderNo, B.FTSubOrderNo, C.FTStyleCode"
                        'sSQLCompareBeforeAfter &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) INNER JOIN  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS B (NOLOCK) ON A.FTOrderNo = B.FTOrderNo"
                        'sSQLCompareBeforeAfter &= Environment.NewLine & "                                                INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMStyle AS C (NOLOCK) ON A.FNHSysStyleId  =  C.FNHSysStyleId"
                        'sSQLCompareBeforeAfter &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                        'sSQLCompareBeforeAfter &= Environment.NewLine & "      AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                        tmpDTFoNoAfter = HI.Conn.SQLConn.GetDataTable(sSQLCompareBeforeAfter, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                        HI.TL.HandlerControl.ClearControl(Me.ogbSubOrder)
                        HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)

                        oGridViewSubBreakdown = Me.ogdSubOrdBreakDown.Views(0)
                        oGridViewSubBreakdownSum = Me.ogdSubOrdBreakDownSummary.Views(0)
                        Me.ogdSubOrdBreakDown.DataSource = Nothing
                        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                        Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
                        Me.ogdSubOrdBreakDownSummary.Width = ogdSubOrdBreakDown.Width

                        Me.FDSubOrderDate.Text = ""
                        Me.FDProDate.Text = ""
                        Me.FDShipDate.Text = ""

                        Me.FTSubOrderNo.Properties.Tag = ""
                        Me.FTSubOrderNo.Text = ""
                        Me.FTSubOrderNo.Focus()

                        Call W_PRCbShowBrowseDataCurrencyInfo()
                        Call W_PRCbShowBrowseDataOrderBreakdownInfo()
                        Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(Me.FTOrderNo.Text, Me.FTSubOrderNo.Text)
                        Call W_PRCbShowBrowseDataSubOrderComponent(Me.FTOrderNo.Text, Me.FTSubOrderNo.Text)

                        Return True

                    End If

                Else
                    Return False
                End If

            Else
                HI.MG.ShowMsg.mProcessNotComplete(MG.ShowMsg.ProcessType.mDelete, Me.FTSubOrderNo_lbl.Text)
                Return False
            End If

            Return True

        Catch ex As Exception
            Return False
        End Try

    End Function

    Private Sub UpdateOrderBreakDown(oFTOrderNo As String, Optional oFTColorway As Integer = 0, Optional oFTSizeBreakDown As Integer = 0)

        Dim tSql As String

        tSql = " UPDATE A SET FNAmntExtra = B.FNAmntExtra "
        tSql &= vbCrLf & "    ,FNAmntQtyTest  = B.FNAmntQtyTest "
        tSql &= vbCrLf & "	   ,FNAmt = B.FNAmt "
        tSql &= vbCrLf & "	   ,FNExtraQuantity  = B.FNQuantityExtra "
        tSql &= vbCrLf & "	   ,FNGarmentQtyTest = B.FNGarmentQtyTest "
        tSql &= vbCrLf & "	   ,FNGrandAmnt = B.FNGrandAmnt "
        tSql &= vbCrLf & "	   ,FNGrandQuantity =B.FNGrandQuantity"
        tSql &= vbCrLf & "	   ,FNPrice = B.FNPrice "
        tSql &= vbCrLf & "	   ,FNQuantity  = B.FNQuantity "
        tSql &= vbCrLf & "	   ,FTColorway= B.FTColorway "
        tSql &= vbCrLf & "	   ,FTSizeBreakDown= B.FTSizeBreakDown "
        tSql &= vbCrLf & "	   ,FTUpdUser = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
        tSql &= vbCrLf & "	   ,FDUpdDate = " & HI.UL.ULDate.FormatDateDB
        tSql &= vbCrLf & "	   ,FTUpdTime = " & HI.UL.ULDate.FormatTimeDB
        tSql &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder_BreakDown AS A ,"
        tSql &= vbCrLf & "  (SELECT        FTOrderNo"
        tSql &= vbCrLf & "			 , FTColorway"
        tSql &= vbCrLf & "			 , FTSizeBreakDown"
        tSql &= vbCrLf & "			 , MAX(FNPrice) AS FNPrice"
        tSql &= vbCrLf & "			 , SUM(FNQuantity) AS FNQuantity"
        tSql &= vbCrLf & "			 , SUM(FNAmt) AS FNAmt, FNHSysMatColorId, FNHSysMatSizeId"
        tSql &= vbCrLf & "			 , SUM(FNQuantityExtra) AS FNQuantityExtra"
        tSql &= vbCrLf & "			 , SUM(FNGrandQuantity) AS FNGrandQuantity"
        tSql &= vbCrLf & "			 , SUM(FNAmntExtra) AS FNAmntExtra"
        tSql &= vbCrLf & "			 , SUM(FNGrandAmnt) AS FNGrandAmnt"
        tSql &= vbCrLf & "			 , SUM(FNGarmentQtyTest) AS FNGarmentQtyTest"
        tSql &= vbCrLf & "			 , SUM(FNAmntQtyTest) AS FNAmntQtyTest"
        tSql &= vbCrLf & "                                FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_BreakDown"
        tSql &= vbCrLf & "	WHERE FTOrderNo = '" & HI.UL.ULF.rpQuoted(oFTOrderNo) & "' "
        tSql &= vbCrLf & "  GROUP BY FTOrderNo, FTColorway,FTSizeBreakDown, FNHSysMatSizeId, FNHSysMatColorId) AS B"
        tSql &= vbCrLf & "  WHERE A.FTOrderNo = B.FTOrderNo"
        tSql &= vbCrLf & "	AND A.FNHSysMatColorId = B.FNHSysMatColorId"
        tSql &= vbCrLf & "	AND A.FNHSysMatSizeId = B.FNHSysMatSizeId"

        Select Case True
            Case (oFTColorway > 0 And oFTSizeBreakDown > 0)
                tSql &= vbCrLf & "	AND B.FNHSysMatColorId =" & Integer.Parse(Val(oFTColorway)) & ""
                tSql &= vbCrLf & "	AND B.FNHSysMatSizeId =" & Integer.Parse(Val(oFTSizeBreakDown)) & ""
            Case (oFTColorway > 0 And oFTSizeBreakDown = 0)
                tSql &= vbCrLf & "	AND B.FNHSysMatColorId =" & Integer.Parse(Val(oFTColorway)) & ""
            Case (oFTColorway = 0 And oFTSizeBreakDown > 0)
                tSql &= vbCrLf & "	AND B.FNHSysMatSizeId =" & Integer.Parse(Val(oFTSizeBreakDown)) & ""
        End Select

        tSql &= vbCrLf & "	AND B.FTOrderNo = '" & HI.UL.ULF.rpQuoted(oFTOrderNo) & "' "

        HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

        tSql = ""
        tSql = "DELETE FROM A "
        tSql &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder_BreakDown AS A LEFT OUTER JOIN "
        tSql &= vbCrLf & "  (SELECT        FTOrderNo"
        tSql &= vbCrLf & "			 , FTColorway"
        tSql &= vbCrLf & "			 , FTSizeBreakDown"
        tSql &= vbCrLf & "			 , MAX(FNPrice) AS FNPrice"
        tSql &= vbCrLf & "			 , SUM(FNQuantity) AS FNQuantity"
        tSql &= vbCrLf & "			 , SUM(FNAmt) AS FNAmt, FNHSysMatColorId, FNHSysMatSizeId"
        tSql &= vbCrLf & "			 , SUM(FNQuantityExtra) AS FNQuantityExtra"
        tSql &= vbCrLf & "			 , SUM(FNGrandQuantity) AS FNGrandQuantity"
        tSql &= vbCrLf & "			 , SUM(FNAmntExtra) AS FNAmntExtra"
        tSql &= vbCrLf & "			 , SUM(FNGrandAmnt) AS FNGrandAmnt"
        tSql &= vbCrLf & "			 , SUM(FNGarmentQtyTest) AS FNGarmentQtyTest"
        tSql &= vbCrLf & "			 , SUM(FNAmntQtyTest) AS FNAmntQtyTest"
        tSql &= vbCrLf & "                                FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_BreakDown"
        tSql &= vbCrLf & "	WHERE FTOrderNo='" & HI.UL.ULF.rpQuoted(oFTOrderNo) & "' "
        tSql &= vbCrLf & "  GROUP BY FTOrderNo, FTColorway,FTSizeBreakDown, FNHSysMatSizeId, FNHSysMatColorId) AS B"
        tSql &= vbCrLf & "  ON A.FTOrderNo = B.FTOrderNo"
        tSql &= vbCrLf & "	AND A.FNHSysMatColorId = B.FNHSysMatColorId"
        tSql &= vbCrLf & "	AND A.FNHSysMatSizeId = B.FNHSysMatSizeId"
        tSql &= vbCrLf & "	WHERE A.FTOrderNo='" & HI.UL.ULF.rpQuoted(oFTOrderNo) & "' "
        tSql &= vbCrLf & "	AND (ISNULL(B.FNQuantity,0) + ISNULL(B.FNQuantityExtra,0) + ISNULL(B.FNGarmentQtyTest,0) ) = 0"

        HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)


        tSql = "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder_BreakDown "
        tSql &= vbCrLf & " ("
        tSql &= vbCrLf & " FTInsUser, FDInsDate, FTInsTime, FTOrderNo, FTColorway"
        tSql &= vbCrLf & ", FTSizeBreakDown, FNPrice, FNQuantity, FNAmt, FNExtraQuantity"
        tSql &= vbCrLf & ", FNHSysMatColorId, FNHSysMatSizeId, FNGarmentQtyTest, FNAmntQtyTest, "
        tSql &= vbCrLf & " FNGrandQuantity, FNAmntExtra, FNGrandAmnt"
        tSql &= vbCrLf & " )"
        tSql &= vbCrLf & "  SELECT "
        tSql &= vbCrLf & "	   N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
        tSql &= vbCrLf & "	   ," & HI.UL.ULDate.FormatDateDB
        tSql &= vbCrLf & "	   ," & HI.UL.ULDate.FormatTimeDB
        tSql &= vbCrLf & "	,'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "' "
        tSql &= vbCrLf & "	,B.FTColorway"
        tSql &= vbCrLf & "	,B.FTSizeBreakDown"
        tSql &= vbCrLf & "	,B.FNPrice"
        tSql &= vbCrLf & "	,ISNULL(B.FNQuantity,0) AS FNQuantity "
        tSql &= vbCrLf & "	,ISNULL(B.FNAmt,0) AS FNAmt "
        tSql &= vbCrLf & "	,ISNULL(B.FNQuantityExtra,0) AS FNQuantityExtra "
        tSql &= vbCrLf & "	,B.FNHSysMatColorId"
        tSql &= vbCrLf & "	,B.FNHSysMatSizeId"
        tSql &= vbCrLf & "	,ISNULL(B.FNGarmentQtyTest,0) AS FNGarmentQtyTest "
        tSql &= vbCrLf & "	,ISNULL(B.FNAmntQtyTest,0) AS FNAmntQtyTest "
        tSql &= vbCrLf & "	,ISNULL(B.FNGrandQuantity,0) AS FNGrandQuantity "
        tSql &= vbCrLf & "	,ISNULL(B.FNAmntExtra,0) AS FNAmntExtra "
        tSql &= vbCrLf & "	,ISNULL(B.FNGrandAmnt,0) AS FNGrandAmnt "
        tSql &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder_BreakDown AS A RIGHT OUTER JOIN "
        tSql &= vbCrLf & "  (SELECT        FTOrderNo"
        tSql &= vbCrLf & "			 , FTColorway"
        tSql &= vbCrLf & "			 , FTSizeBreakDown"
        tSql &= vbCrLf & "			 , MAX(FNPrice) AS FNPrice"
        tSql &= vbCrLf & "			 , SUM(FNQuantity) AS FNQuantity"
        tSql &= vbCrLf & "			 , SUM(FNAmt) AS FNAmt, FNHSysMatColorId, FNHSysMatSizeId"
        tSql &= vbCrLf & "			 , SUM(FNQuantityExtra) AS FNQuantityExtra"
        tSql &= vbCrLf & "			 , SUM(FNGrandQuantity) AS FNGrandQuantity"
        tSql &= vbCrLf & "			 , SUM(FNAmntExtra) AS FNAmntExtra"
        tSql &= vbCrLf & "			 , SUM(FNGrandAmnt) AS FNGrandAmnt"
        tSql &= vbCrLf & "			 , SUM(FNGarmentQtyTest) AS FNGarmentQtyTest"
        tSql &= vbCrLf & "			 , SUM(FNAmntQtyTest) AS FNAmntQtyTest"
        tSql &= vbCrLf & "                                FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_BreakDown"
        tSql &= vbCrLf & "  GROUP BY FTOrderNo, FTColorway,FTSizeBreakDown, FNHSysMatSizeId, FNHSysMatColorId) AS B"
        tSql &= vbCrLf & "  ON A.FTOrderNo = B.FTOrderNo"
        tSql &= vbCrLf & "	AND A.FNHSysMatColorId = B.FNHSysMatColorId"
        tSql &= vbCrLf & "	AND A.FNHSysMatSizeId = B.FNHSysMatSizeId"
        tSql &= vbCrLf & "	WHERE B.FTOrderNo='" & HI.UL.ULF.rpQuoted(oFTOrderNo) & "' "
        tSql &= vbCrLf & "	 AND  A.FNHSysMatSizeId  IS NULL"

        HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

    End Sub


    Private Function GetCMDisPer(_OrderNo As String) As Double
        Try
            Dim _Cmd As String = ""
            _Cmd = "Select Top 1 S.FNCMDisPer From [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMStyle AS S WITH(NOLOCK) INNER JOIN "
            _Cmd &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS O WITH(NOLOCK) ON S.FNHSysStyleId = O.FNHSysStyleId "
            _Cmd &= vbCrLf & "WHERE O.FTOrderNo='" & HI.UL.ULF.rpQuoted(_OrderNo) & "'"
            Return HI.Conn.SQLConn.GetField(_Cmd, Conn.DB.DataBaseName.DB_MERCHAN, "")
        Catch ex As Exception
        End Try
    End Function

    Private Function W_PRCbSaveSubOrderDT() As Boolean
        '...save breakdown sub order no
        If Not W_PRCbVerifyBF_SaveDataSubOrder() Then
            Return False
        End If

        Dim bFlagSubOrderNew As Boolean = False

        '...Sub Order Breakdown detail by sub order no
        '==============================================================================================================
        '...Save Sub Order Header And Save Sub Order Detail Breakdown Info in one's time
        Dim nFNHSysMatColorId As Integer
        Dim tFTMatColorCode As String
        Dim tFTMatColorName As String
        Dim nFNHSysMatSizeId As Integer
        Dim tFTMatSizeCode As String
        Dim tFTMatSizeName As String
        Dim nFNQuantity_Tmp As Double
        Dim nFNPrice_Tmp As Double
        Dim nFNAmt_Tmp As Double
        Dim nFNExtraQtySubOrder_Tmp As Double
        Dim nFNQuantityExtra_Tmp As Double
        Dim nFNQuantityTest_Tmp As Double = 0
        Dim nFNAmtTest_Tmp As Double = 0
        Dim nFNGarmentQtyTest As Double

        nFNHSysMatColorId = Val(Me.FTColorway.Properties.Tag.ToString())
        tFTMatColorCode = Me.FTColorway.Text.Trim()
        tFTMatColorName = Me.FTColorway_None.Text.Trim()

        nFNHSysMatSizeId = Val(Me.FTSizeBreakDown.Properties.Tag.ToString())
        tFTMatSizeCode = Me.FTSizeBreakDown.Text.Trim()

        nFNQuantity_Tmp = Me.FNQuantity.Value
        nFNPrice_Tmp = Me.FNPrice.Value
        nFNAmt_Tmp = Me.FNAmt.Value
        nFNExtraQtySubOrder_Tmp = Me.FNExtraQtySubOrder.Value
        nFNQuantityExtra_Tmp = Me.FNQuantityExtra.Value
        nFNQuantityTest_Tmp = Me.FNGarmentQtyTest.Value
        '==============================================================================================================

        Dim tSql As String

        tSql = ""
        tSql = "SELECT COUNT(A.FTSubOrderNo) AS FNSubOrderNoCnt"
        tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A WITH (NOLOCK)"
        tSql &= Environment.NewLine & "WHERE A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim()) & "'"

        If Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, 0)) = 0 Then

            If Not W_PRCbSaveSubOrderHD() Then

                Me.FTSubOrderNo.Focus()
                Return False

            End If

            bFlagSubOrderNew = True

        End If

        If Me.FTSubOrderNo.Properties.Tag = "" Then
            If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then

                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, My.Application.Info.Title, "Invalid data FO Sub Order No. !!!")
                Me.FTSubOrderNo.Focus()

                Return False
            Else

                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, My.Application.Info.Title, "กรุณาตรวจสอบรายการใบสั่งผลิดย่อย !!!")
                Me.FTSubOrderNo.Focus()

                Return False
            End If

        End If

        Dim tFTColorway_Code As String
        Dim tFTColorway_Text As String
        Dim nFNColorway_Id As Integer

        Try
            If nFNHSysMatColorId = 0 Then Return False
            If nFNHSysMatSizeId = 0 Then Return False
            If Me.FTSubOrderNo.Properties.Tag.ToString() = "" Then Return False
            If Me.FTOrderNo.Properties.Tag.ToString() = "" Then Return False


            If nFNQuantity_Tmp <= 0 Then
                Me.FNQuantity.Focus()
                Return False
            End If

            '...Validate Customer reference not price
            '=================================================================================================================================================
            tSql = ""
            tSql = "SELECT TOP 1 ISNULL(B.FTStateNotPrice, '0') AS FTStateNotPrice"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) LEFT JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCNMCustomer AS B (NOLOCK) ON A.FNHSysCustId = B.FNHSysCustId"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"

            If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "1" Then
                '...price can be zero
            Else
                If nFNPrice_Tmp <= 0 Then
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, My.Application.Info.Title, IIf(HI.ST.Lang.Language = ST.Lang.eLang.TH, "กรุณาระบุจำนวนราคาที่มากกว่า ศูนย์", "Please input price data is greater than zero"))
                    Me.FNPrice.Focus()
                    Return False
                End If
            End If
            '=================================================================================================================================================

            REM 2014/12/10 Factory Order No.ตามรายการลูกค้า ไม่ต้อง ทราบ จำนวน ราคา...ราคา สามารถที่จะระบุ เป็น จำนวน เท่ากับ ศูนย์ได้
            'If nFNPrice_Tmp <= 0 Then
            '    Me.FNPrice.Focus()
            '    Return False
            'End If

            Dim _FNCMDisPer As Double = 0
            Dim _OperateFee As Double = 0
            Dim _FNCmpBranchState As Integer = 0

            tSql = "SELECT TOP 1 FNCmpBranchState "
            tSql &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TCNMCmp AS A WITH(NOLOCK)"
            tSql &= vbCrLf & " WHERE FNHSysCmpId=" & Val(FNHSysCmpId.Properties.Tag.ToString()) & " "
            _FNCmpBranchState = Val(HI.Conn.SQLConn.GetField(tSql, Conn.DB.DataBaseName.DB_MASTER, "0"))


            tSql = "SELECT TOP 1 FNCMDisPer "
            tSql &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TMERMStyle AS A WITH(NOLOCK)"
            tSql &= vbCrLf & " WHERE FNHSysStyleId=" & Val(FNHSysStyleId.Properties.Tag.ToString()) & " "
            _FNCMDisPer = Val(HI.Conn.SQLConn.GetField(tSql, Conn.DB.DataBaseName.DB_MASTER, "0"))


            tSql = "SELECT TOP 1 "

            If _FNCmpBranchState = 0 Then
                tSql &= vbCrLf & "   FNOperateFee AS FNOperateFee"
            Else
                tSql &= vbCrLf & "   FNOperateFeeForeign AS FNOperateFee"
            End If

            tSql &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TCNMCustomer AS A WITH(NOLOCK)"
            tSql &= vbCrLf & " WHERE FNHSysCustId=" & Val(FNHSysCustId.Properties.Tag.ToString()) & " "
            _OperateFee = Val(HI.Conn.SQLConn.GetField(tSql, Conn.DB.DataBaseName.DB_MASTER, "0"))

            nFNColorway_Id = nFNHSysMatColorId
            tFTColorway_Code = tFTMatColorCode
            tFTColorway_Text = tFTMatColorName


            '...บันทึกรายการหัวเอกสารเลขที่ใบสั่งผลิตย่อย และ รายการ colorway & size breakdown ของเลขที่ใบสั่งผลิตย่อยรายการนี้
            nFNColorway_Id = nFNHSysMatColorId
            tFTColorway_Code = tFTMatColorCode
            tFTColorway_Text = tFTMatColorName

            '--------------------------------------------extra value-------------------------------------------------
            Dim nFNQuantityExtra#
            nFNQuantityExtra = nFNQuantityExtra_Tmp
            nFNGarmentQtyTest = nFNQuantityTest_Tmp
            '...ปริมาณจำนวนปรกติ รวม กับ ปริมาณ จำนวนยอดเผื่อ และ จำนวนยอดที่เผื่อ Garment Test
            Dim nFNGrandQuantity#
            nFNGrandQuantity = CDbl(nFNQuantity_Tmp) + CDbl(IIf(nFNQuantityExtra < 0, 0, nFNQuantityExtra)) + CDbl(IIf(nFNGarmentQtyTest < 0, 0, nFNGarmentQtyTest))

            '...มุลค่าที่เกิดจากจำนวนเผื่อ
            Dim nFNAmntExtra#
            nFNAmntExtra = (CDbl(IIf(nFNQuantityExtra < 0, 0, nFNQuantityExtra)) * CDbl(nFNPrice_Tmp))

            '...มูลค่าที่เกิดจากจำนวนเผื่อ Test Garment
            Dim nFNAmntQtyTest#
            nFNAmntQtyTest = (CDbl(IIf(nFNGarmentQtyTest < 0, 0, nFNGarmentQtyTest)) * CDbl(nFNPrice_Tmp))

            '...มูลค่ารวม ที่เกิดจาก มูลค่าตามจำนวนปรกติ รวม กับ มูลค่าที่เกิดจากยอดเผื่อ และ มูลค่าที่เกิดจากจำนวน Garment Test
            Dim nFNGrandAmnt#
            nFNGrandAmnt = CDbl(nFNAmt_Tmp) + nFNAmntExtra + nFNAmntQtyTest
            '---------------------------------------------------------------------------------------------------------

            '--------------------------Before Revise History Factory Sub Order No. Breakdown --------------------------
            '...Represent History Before Revise Factory Sub Order No. Breakdown
            tSql = ""
            tSql = "SELECT A.FTOrderNo, A.FTSubOrderNo"

            Select Case HI.ST.Lang.Language
                Case HI.ST.Lang.eLang.EN
                    tSql &= Environment.NewLine & "          ,ISNULL((SELECT TOP 1 L1.FTMatColorNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS L1 WITH(NOLOCK) WHERE L1.FNHSysMatColorId = A.FNHSysMatColorId),'') AS FNHSysMatColorId"
                    tSql &= Environment.NewLine & "          ,ISNULL((SELECT TOP 1 L1.FTMatSizeNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS L1 WITH(NOLOCK) WHERE L1.FNHSysMatSizeId = A.FNHSysMatSizeId),'') AS FNHSysMatSizeId"
                Case HI.ST.Lang.eLang.TH
                    tSql &= Environment.NewLine & "          ,ISNULL((SELECT TOP 1 L1.FTMatColorNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS L1 WITH(NOLOCK) WHERE L1.FNHSysMatColorId = A.FNHSysMatColorId),'') AS FNHSysMatColorId"
                    tSql &= Environment.NewLine & "          ,ISNULL((SELECT TOP 1 L1.FTMatSizeNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS L1 WITH(NOLOCK) WHERE L1.FNHSysMatSizeId = A.FNHSysMatSizeId),'') AS FNHSysMatSizeId"
                Case Else
                    tSql &= Environment.NewLine & "          ,ISNULL((SELECT TOP 1 L1.FTMatColorNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS L1 WITH(NOLOCK) WHERE L1.FNHSysMatColorId = A.FNHSysMatColorId),'') AS FNHSysMatColorId"
                    tSql &= Environment.NewLine & "          ,ISNULL((SELECT TOP 1 L1.FTMatSizeNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS L1 WITH(NOLOCK) WHERE L1.FNHSysMatSizeId = A.FNHSysMatSizeId),'') AS FNHSysMatSizeId"
            End Select

            tSql &= Environment.NewLine & "          , A.FNQuantity, A.FNPrice, A.FNAmt"
            tSql &= Environment.NewLine & "          , A.FNExtraQty"
            tSql &= Environment.NewLine & "          , A.FNQuantityExtra, A.FNAmntExtra"
            tSql &= Environment.NewLine & "          , A.FNGrandAmnt, A.FNGrandQuantity"
            tSql &= Environment.NewLine & "          , A.FNGarmentQtyTest, A.FNAmntQtyTest"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A WITH(NOLOCK)"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'"
            tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'"
            tSql &= Environment.NewLine & "      AND A.[FNHSysMatColorId] = " & Val(nFNHSysMatColorId)
            tSql &= Environment.NewLine & "      AND A.[FNHSysMatSizeId] = " & Val(nFNHSysMatSizeId) & ";"

            oDBdtSubOrderNoBreakdownBF = Nothing
            oDBdtSubOrderNoBreakdownBF = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
            '---------------------------------------------------------------------------------------------------------
            Dim _CMDisPer As Double = GetCMDisPer(Me.FTOrderNo.Properties.Tag.ToString().Trim())


            tSql = ""
            tSql = "UPDATE A"
            tSql &= Environment.NewLine & "SET A.[FNPrice] = " & nFNPrice_Tmp
            tSql &= Environment.NewLine & "   ,A.[FNQuantity] =  " & nFNQuantity_Tmp
            tSql &= Environment.NewLine & "   ,A.[FNAmt] = " & nFNAmt_Tmp
            tSql &= Environment.NewLine & "   ,A.[FNPriceOrg] = " & nFNPrice_Tmp
            tSql &= Environment.NewLine & "   ,A.[FNCMDisPer] = " & _FNCMDisPer
            tSql &= Environment.NewLine & "   ,A.[FNCMDisAmt] = " & CDbl(Format(((nFNPrice_Tmp * _FNCMDisPer) / 100.0), "0.0000"))



            tSql &= Environment.NewLine & "   ,A.[FNOperateFee] = " & _OperateFee
            tSql &= Environment.NewLine & "   ,A.[FNOperateFeeAmt] = " & CDbl(Format(((nFNPrice_Tmp * _OperateFee) / 100.0), "0.0000"))
            tSql &= Environment.NewLine & "   ,A.[FNNetFOB] = " & nFNPrice_Tmp - CDbl(Format(((nFNPrice_Tmp * _OperateFee) / 100.0), "0.0000"))

            tSql &= Environment.NewLine & "   ,A.[FNNetPriceOperateFee] = CASE WHEN ISNULL(A.FTStateImportNetPrice,'') <> '1' THEN " & _OperateFee & " ELSE A.[FNNetPriceOperateFee] END "
            tSql &= Environment.NewLine & "   ,A.[FNNetPriceOperateFeeAmt] =  CASE WHEN ISNULL(A.FTStateImportNetPrice,'') <> '1' THEN " & CDbl(Format(((nFNPrice_Tmp * _OperateFee) / 100.0), "0.0000")) & " ELSE A.[FNNetPriceOperateFeeAmt] END "
            tSql &= Environment.NewLine & "   ,A.[FNNetNetPrice] = CASE WHEN ISNULL(A.FTStateImportNetPrice,'') <> '1' THEN " & nFNPrice_Tmp - CDbl(Format(((nFNPrice_Tmp * _OperateFee) / 100.0), "0.0000")) & " ELSE A.[FNNetNetPrice] END "


            tSql &= Environment.NewLine & "   ,A.[FTColorway] = (SELECT TOP 1 x.FTMatColorCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatColor AS x WITH(NOLOCK) WHERE x.FNHSysMatColorId = " & Val(nFNHSysMatColorId) & ")"
            tSql &= Environment.NewLine & "   ,A.[FTSizeBreakDown] = (SELECT TOP 1 y.FTMatSizeCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS y WITH(NOLOCK) WHERE y.FNHSysMatSizeId = " & Val(nFNHSysMatSizeId) & ")"
            tSql &= Environment.NewLine & "   ,A.[FNExtraQty] = " & nFNExtraQtySubOrder_Tmp
            tSql &= Environment.NewLine & "   ,A.[FNQuantityExtra] = " & nFNQuantityExtra
            tSql &= Environment.NewLine & "   ,A.[FNGrandQuantity] = " & nFNGrandQuantity
            tSql &= Environment.NewLine & "   ,A.[FNAmntExtra] = " & nFNAmntExtra
            tSql &= Environment.NewLine & "   ,A.[FNGrandAmnt] = " & nFNGrandAmnt
            tSql &= Environment.NewLine & "   ,A.[FNGarmentQtyTest] = " & nFNGarmentQtyTest
            tSql &= Environment.NewLine & "   ,A.[FNAmntQtyTest] = " & nFNAmntQtyTest
            tSql &= Environment.NewLine & "   ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
            tSql &= Environment.NewLine & "   ,A.[FDUpdDate] = " & HI.UL.ULDate.FormatDateDB
            tSql &= Environment.NewLine & "   ,A.[FTUpdTime] = " & HI.UL.ULDate.FormatTimeDB
            tSql &= Environment.NewLine & "   ,A.FTNikePOLineItem='" & FNColorSeq.Value.ToString() & "'"

            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A"
            tSql &= Environment.NewLine & "WHERE A.[FTOrderNo] = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
            tSql &= Environment.NewLine & "      AND A.[FTSubOrderNo] = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'"
            tSql &= Environment.NewLine & "      AND A.[FNHSysMatColorId] = " & Val(nFNHSysMatColorId)
            tSql &= Environment.NewLine & "      AND A.[FNHSysMatSizeId] = " & Val(nFNHSysMatSizeId)

            If HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN) = False Then

                '...Add New Sub Order No
                tSql = ""
                tSql = "DECLARE @FTMatColorCode AS NVARCHAR(30);"
                tSql &= Environment.NewLine & "DECLARE @FTMatSizeCode AS NVARCHAR(30);"
                tSql &= Environment.NewLine & "SELECT @FTMatColorCode = x.FTMatColorCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatColor AS x WITH(NOLOCK) WHERE x.FNHSysMatColorId = " & Val(nFNHSysMatColorId)
                tSql &= Environment.NewLine & "SELECT @FTMatSizeCode = y.FTMatSizeCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS y WITH(NOLOCK) WHERE y.FNHSysMatSizeId = " & Val(nFNHSysMatSizeId)
                tSql &= Environment.NewLine & "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown]([FTOrderNo] ,[FTSubOrderNo],[FTColorway],[FTSizeBreakDown]"
                tSql &= Environment.NewLine & "                                                            ,[FNPrice],[FNQuantity],[FNAmt],[FNHSysMatColorId],[FNHSysMatSizeId],[FNExtraQty]"
                tSql &= Environment.NewLine & "                                                            ,[FNQuantityExtra],[FNGrandQuantity],[FNAmntExtra],[FNGrandAmnt]"
                tSql &= Environment.NewLine & "                                                            ,[FTInsUser],[FDInsDate],[FTInsTime],[FTUpdUser],[FDUpdDate],[FTUpdTime],[FNGarmentQtyTest],[FNAmntQtyTest],[FNPriceOrg],[FNCMDisPer],[FNCMDisAmt],[FTNikePOLineItem],[FNOperateFee],[FNOperateFeeAmt],[FNNetFOB],FNNetPriceOperateFee,FNNetPriceOperateFeeAmt,FNNetNetPrice)"
                tSql &= Environment.NewLine & "VALUES (N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "',N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "', @FTMatColorCode, @FTMatSizeCode"
                tSql &= "," & Val(nFNPrice_Tmp) & "," & Val(nFNQuantity_Tmp) & "," & (Val(nFNPrice_Tmp) * Val(nFNQuantity_Tmp)) & "," & Val(nFNHSysMatColorId) & "," & Val(nFNHSysMatSizeId) & "," & Val(nFNExtraQtySubOrder_Tmp)
                tSql &= "," & nFNQuantityExtra & "," & nFNGrandQuantity & "," & nFNAmntExtra & "," & nFNGrandAmnt
                tSql &= ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                tSql &= "," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & "," & nFNGarmentQtyTest & "," & nFNAmntQtyTest & "," & Val(nFNPrice_Tmp) & "," & Val(_FNCMDisPer) & ""
                tSql &= "," & CDbl(Format(((nFNPrice_Tmp * _FNCMDisPer) / 100.0), "0.0000")) & ",'" & FNColorSeq.Value.ToString() & "'"
                tSql &= Environment.NewLine & "   ," & _OperateFee
                tSql &= Environment.NewLine & "   ," & CDbl(Format(((nFNPrice_Tmp * _OperateFee) / 100.0), "0.0000"))
                tSql &= Environment.NewLine & "   ," & nFNPrice_Tmp - CDbl(Format(((nFNPrice_Tmp * _OperateFee) / 100.0), "0.0000"))

                tSql &= Environment.NewLine & "   ," & _OperateFee
                tSql &= Environment.NewLine & "   ," & CDbl(Format(((nFNPrice_Tmp * _OperateFee) / 100.0), "0.0000"))
                tSql &= Environment.NewLine & "   ," & nFNPrice_Tmp - CDbl(Format(((nFNPrice_Tmp * _OperateFee) / 100.0), "0.0000"))

                tSql &= ")"

                If HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                End If

            Else

                '--------------------------------------- After Revise History Factory Sub Order No. Breakdown ----------------------------------
                '...Represent After Revise Factory Sub Order No. Breakdown
                tSql = ""
                tSql = "SELECT A.FTOrderNo, A.FTSubOrderNo"

                Select Case HI.ST.Lang.Language
                    Case HI.ST.Lang.eLang.EN
                        tSql &= Environment.NewLine & "          ,ISNULL((SELECT TOP 1 L1.FTMatColorNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS L1 WITH(NOLOCK) WHERE L1.FNHSysMatColorId = A.FNHSysMatColorId),'') AS FNHSysMatColorId"
                        tSql &= Environment.NewLine & "          ,ISNULL((SELECT TOP 1 L1.FTMatSizeNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS L1 WITH(NOLOCK) WHERE L1.FNHSysMatSizeId = A.FNHSysMatSizeId),'') AS FNHSysMatSizeId"
                    Case HI.ST.Lang.eLang.TH
                        tSql &= Environment.NewLine & "          ,ISNULL((SELECT TOP 1 L1.FTMatColorNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS L1 WITH(NOLOCK) WHERE L1.FNHSysMatColorId = A.FNHSysMatColorId),'') AS FNHSysMatColorId"
                        tSql &= Environment.NewLine & "          ,ISNULL((SELECT TOP 1 L1.FTMatSizeNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS L1 WITH(NOLOCK) WHERE L1.FNHSysMatSizeId = A.FNHSysMatSizeId),'') AS FNHSysMatSizeId"
                    Case Else
                        tSql &= Environment.NewLine & "          ,ISNULL((SELECT TOP 1 L1.FTMatColorNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS L1 WITH(NOLOCK) WHERE L1.FNHSysMatColorId = A.FNHSysMatColorId),'') AS FNHSysMatColorId"
                        tSql &= Environment.NewLine & "          ,ISNULL((SELECT TOP 1 L1.FTMatSizeNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS L1 WITH(NOLOCK) WHERE L1.FNHSysMatSizeId = A.FNHSysMatSizeId),'') AS FNHSysMatSizeId"
                End Select

                tSql &= Environment.NewLine & "          , A.FNQuantity, A.FNPrice, A.FNAmt"
                tSql &= Environment.NewLine & "          , A.FNExtraQty"
                tSql &= Environment.NewLine & "          , A.FNQuantityExtra, A.FNAmntExtra"
                tSql &= Environment.NewLine & "          , A.FNGrandAmnt, A.FNGrandQuantity"
                tSql &= Environment.NewLine & "          , A.FNGarmentQtyTest, A.FNAmntQtyTest"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A WITH(NOLOCK)"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'"
                tSql &= Environment.NewLine & "      AND A.[FNHSysMatColorId] = " & Val(nFNHSysMatColorId)
                tSql &= Environment.NewLine & "      AND A.[FNHSysMatSizeId] = " & Val(nFNHSysMatSizeId) & ";"

                oDBdtSubOrderNoBreakdownAF = Nothing
                oDBdtSubOrderNoBreakdownAF = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                '...Write changed log
                Call PostSaveSubOrderNoBreakdown("[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[TMERTOrderSub_BreakDown]", Me.FTOrderNo.Properties.Tag.ToString() & "|" & Me.FTSubOrderNo.Text & "|" & Me.FNHSysStyleId.Text & "|" & tFTMatColorName & "|" & tFTMatSizeName)
                '--------------------------------------------------------------------------------------------------------------------------------

            End If

            REM 2014/12/18 Not update TMERTOrder_Breakdown Amount, Qty
            'Call UpdateOrderQty()

            tSql = ""
            tSql = "UPDATE A"
            tSql &= Environment.NewLine & "SET A.FTNikePOLineItem='" & FNColorSeq.Value.ToString() & "'"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A"
            tSql &= Environment.NewLine & "WHERE A.[FTOrderNo] = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "'"
            tSql &= Environment.NewLine & "      AND A.[FTSubOrderNo] = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'"
            tSql &= Environment.NewLine & "      AND A.[FTColorway] = N'" & HI.UL.ULF.rpQuoted(Me.FTColorway.Text.Trim()) & "'"
            'tSql &= Environment.NewLine & "      AND A.[FNHSysMatColorId] = " & Val(nFNHSysMatColorId)
            tSql &= Environment.NewLine & "      AND  ISNULL(A.FTNikePOLineItem,'') <>'" & FNColorSeq.Value.ToString().Trim() & "'"

            HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

            tSql = "  INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTSeasonCMPrice]  "
            tSql &= Environment.NewLine & " (FNHSysStyleId,FNHSysSeasonId,FNCM,FNCMDisPer,FNCMDisAmt,FNNetCM,FNCostTransport)"
            tSql &= Environment.NewLine & " SELECT XSX.FNHSysStyleId, XSX.FNHSysSeasonId, XSX.FNCM, XSX.FNCMDisPer, XSX.FNCMDisAmt,XSX.FNNetCM, XSX.FNCostTransport"
            tSql &= Environment.NewLine & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTSeasonCMPrice] AS STM "
            tSql &= Environment.NewLine & "     RIGHT OUTER JOIN (SELECT B2.FNHSysStyleId,B2.FNHSysSeasonId,MAX(BB.FNCMDisAmt) AS FNCMDisAmt"
            tSql &= Environment.NewLine & " ,MAX(ST.FNCM) AS FNCM,MAX(ST.FNCMDisPer) AS FNCMDisPer,MAX(ST.FNNetCM) AS FNNetCM,MAX(ST.FNCostTransport) AS FNCostTransport"
            tSql &= Environment.NewLine & "      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B2 WITH(NOLOCK) "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS ST  WITH(NOLOCK) ON B2.FNHSysStyleId = ST.FNHSysStyleId "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B3  WITH(NOLOCK) ON B2.FNHSysStyleId = B3.FNHSysStyleId AND B2.FNHSysSeasonId=B3.FNHSysSeasonId"
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS B4 WITH(NOLOCK) ON B3.FTOrderNo = B4.FTOrderNo "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS BB WITH(NOLOCK) ON B4.FTOrderNo = BB.FTOrderNo AND B4.FTSubOrderNo = BB.FTSubOrderNo "
            tSql &= Environment.NewLine & "     WHERE  B2.FTOrderNo =N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            '  If Me.FNHSysCustId.Properties.Tag.ToString = "1310210002" Then
            tSql &= Environment.NewLine & "  AND B4.FNHSysCurId IN (SELECT FNHSysCurId FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TFINMCurrency AS C WITH(NOLOCK) WHERE ISNULL(FTStateLocal,'0') <>'1')"
            '  End If

            tSql &= Environment.NewLine & "   GROUP BY B2.FNHSysStyleId,B2.FNHSysSeasonId) AS XSX"
            tSql &= Environment.NewLine & " ON  STM.FNHSysStyleId=XSX.FNHSysStyleId AND STM.FNHSysSeasonId=XSX.FNHSysSeasonId"
            tSql &= Environment.NewLine & "  WHERE  STM.FNHSysStyleId IS NULL"
            HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

            tSql = "  UPDATE STM"
            tSql &= Environment.NewLine & "   SET FNCMDisAmt=XSX.FNCMDisAmt"
            tSql &= Environment.NewLine & "      ,FNNetCM = (STM.FNCM - XSX.FNCMDisAmt ) "
            tSql &= Environment.NewLine & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTSeasonCMPrice] AS STM "
            tSql &= Environment.NewLine & "   INNER JOIN (SELECT B2.FNHSysStyleId,B2.FNHSysSeasonId,MAX(BB.FNCMDisAmt) AS FNCMDisAmt"
            tSql &= Environment.NewLine & " ,MAX(ST.FNCM) AS FNCM,MAX(ST.FNCMDisPer) AS FNCMDisPer,MAX(ST.FNNetCM) AS FNNetCM,MAX(ST.FNCostTransport) AS FNCostTransport"
            tSql &= Environment.NewLine & "      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B2 WITH(NOLOCK) "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS ST  WITH(NOLOCK) ON B2.FNHSysStyleId = ST.FNHSysStyleId "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B3  WITH(NOLOCK) ON B2.FNHSysStyleId = B3.FNHSysStyleId AND B2.FNHSysSeasonId=B3.FNHSysSeasonId"
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS B4 WITH(NOLOCK) ON B3.FTOrderNo = B4.FTOrderNo "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS BB WITH(NOLOCK) ON B4.FTOrderNo = BB.FTOrderNo AND B4.FTSubOrderNo = BB.FTSubOrderNo "
            tSql &= Environment.NewLine & "     WHERE  B2.FTOrderNo =N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "' "

            ' If Me.FNHSysCustId.Properties.Tag.ToString = "1310210002" Then
            tSql &= Environment.NewLine & "  AND B4.FNHSysCurId IN (SELECT FNHSysCurId FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TFINMCurrency AS C WITH(NOLOCK) WHERE ISNULL(FTStateLocal,'0') <>'1')"
            '  End If

            tSql &= Environment.NewLine & "   GROUP BY B2.FNHSysStyleId,B2.FNHSysSeasonId) AS XSX"
            tSql &= Environment.NewLine & " ON  STM.FNHSysStyleId=XSX.FNHSysStyleId AND STM.FNHSysSeasonId=XSX.FNHSysSeasonId"
            tSql &= Environment.NewLine & "  LEFT OUTER JOIN ("
            tSql &= Environment.NewLine & "SELECT C.FNHSysStyleId, C.FNHSysSeasonId"
            tSql &= Environment.NewLine & " FROM     [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_ACCOUNT) & "].dbo.TACCTFactoryCMInvoice AS A WITH(NOLOCK)  INNER JOIN"
            tSql &= Environment.NewLine & "  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.V_OrderSub_BreakDown_ShipDestination AS B ON A.FTCustomerPO = B.FTPOref INNER JOIN"
            tSql &= Environment.NewLine & "  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder AS C WITH(NOLOCK) ON B.FTOrderNo = C.FTOrderNo"
            tSql &= Environment.NewLine & " GROUP BY C.FNHSysStyleId, C.FNHSysSeasonId"
            tSql &= Environment.NewLine & ""
            tSql &= Environment.NewLine & ") AS XXXXT ON  STM.FNHSysStyleId=XXXXT.FNHSysStyleId AND STM.FNHSysSeasonId=XXXXT.FNHSysSeasonId "
            tSql &= Environment.NewLine & " WHERE XXXXT.FNHSysStyleId IS NULL"

            HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

            tSql = "  UPDATE STM"
            tSql &= Environment.NewLine & "   SET FNCMDisAmt=XSX.FNCMDisAmt"
            tSql &= Environment.NewLine & "      ,FNNetCM = (STM.FNCM - XSX.FNCMDisAmt ) "
            tSql &= Environment.NewLine & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS STM "
            tSql &= Environment.NewLine & "   INNER JOIN (SELECT B2.FNHSysStyleId,MAX(ST.FNCMDisPer) AS FNCMDisPer ,MAX(ST.FNCMDisAmt) AS FNCMDisAmt "
            tSql &= Environment.NewLine & "      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B2 WITH(NOLOCK) "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS ST  WITH(NOLOCK) ON B2.FNHSysStyleId = ST.FNHSysStyleId "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B3  WITH(NOLOCK) ON B2.FNHSysStyleId = B3.FNHSysStyleId "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS B4 WITH(NOLOCK) ON B3.FTOrderNo = B4.FTOrderNo "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS BB WITH(NOLOCK) ON B4.FTOrderNo = BB.FTOrderNo AND B4.FTSubOrderNo = BB.FTSubOrderNo "
            tSql &= Environment.NewLine & "     WHERE  B2.FTOrderNo =N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            ' If Me.FNHSysCustId.Properties.Tag.ToString = "1310210002" Then
            tSql &= Environment.NewLine & "  AND B4.FNHSysCurId IN (SELECT FNHSysCurId FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TFINMCurrency AS C WITH(NOLOCK) WHERE ISNULL(FTStateLocal,'0') <>'1')"
            ' End If

            tSql &= Environment.NewLine & "   GROUP BY B2.FNHSysStyleId) AS XSX"
            tSql &= Environment.NewLine & " ON  STM.FNHSysStyleId=XSX.FNHSysStyleId "
            tSql &= Environment.NewLine & "  LEFT OUTER JOIN ("
            tSql &= Environment.NewLine & "SELECT C.FNHSysStyleId"
            tSql &= Environment.NewLine & " FROM     [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_ACCOUNT) & "].dbo.TACCTFactoryCMInvoice AS A WITH(NOLOCK)  INNER JOIN"
            tSql &= Environment.NewLine & "  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.V_OrderSub_BreakDown_ShipDestination AS B ON A.FTCustomerPO = B.FTPOref INNER JOIN"
            tSql &= Environment.NewLine & "  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder AS C WITH(NOLOCK) ON B.FTOrderNo = C.FTOrderNo"
            tSql &= Environment.NewLine & " GROUP BY C.FNHSysStyleId"
            tSql &= Environment.NewLine & ""
            tSql &= Environment.NewLine & ") AS XXXXT ON  STM.FNHSysStyleId=XXXXT.FNHSysStyleId "
            tSql &= Environment.NewLine & " WHERE XXXXT.FNHSysStyleId IS NULL"

            HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)


            If FTStateOrderApp.Checked Then

                If FTStateCutting.Checked = False Then
                    tSql = " Update    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder Set FTStateOrderApp='0' Where FTOrderNo =N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                    HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)
                    FTStateOrderApp.Checked = False
                End If

            End If

            Me.FTColorway.Properties.Tag = ""
            Me.FTColorway.Text = ""
            Me.FTSizeBreakDown.Properties.Tag = ""
            Me.FTSizeBreakDown.Text = ""
            Me.FNColorSeq.Value = 0

            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)

            Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(Me.FTSubOrderNo.Properties.Tag.ToString())
            Call W_PRCbShowBrowseDataCurrencyInfo()
            Call W_PRCbShowBrowseDataOrderBreakdownInfo()
            Call W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt()
            Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(Me.FTOrderNo.Properties.Tag.ToString().Trim(), Me.FTSubOrderNo.Properties.Tag.ToString().Trim())
            Call PROC_SETxShowBrowsePackingCartonInfo()

            REM 2014/12/18 Destroy Field in table TMERTOrderSub Amount, Qty
            '============================================== Sub Order No / FTSubOrderNo : Total Quantity / FTSubOrderNo : Total Amount ===========================
            'Dim oDBdtQtyAmnt As DataTable

            'Dim oStrBuilderSubOrderInfo As New System.Text.StringBuilder()
            'oStrBuilderSubOrderInfo.Remove(0, oStrBuilderSubOrderInfo.Length)

            'oStrBuilderSubOrderInfo.AppendLine("SELECT ISNULL(A.FNSubOrderQty,0) AS FNSubOrderQty, ISNULL(A.FNSubOrderAmt,0) AS FNSubOrderAmt")
            'oStrBuilderSubOrderInfo.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A WITH(NOLOCK)")
            'oStrBuilderSubOrderInfo.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            'oStrBuilderSubOrderInfo.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")

            'oDBdtQtyAmnt = HI.Conn.SQLConn.GetDataTable(oStrBuilderSubOrderInfo.ToString(), HI.Conn.DB.DataBaseName.DB_MERCHAN)

            'If oDBdtQtyAmnt.Rows.Count > 0 Then
            '    If Not DBNull.Value.Equals(oDBdtQtyAmnt.Rows(0).Item("FNSubOrderQty")) = True Then
            '        Me.FNSubOrderQty.Value = oDBdtQtyAmnt.Rows(0).Item("FNSubOrderQty")
            '    Else
            '        Me.FNSubOrderQty.Value = 0
            '    End If

            '    If Not DBNull.Value.Equals(oDBdtQtyAmnt.Rows(0).Item("FNSubOrderAmt")) = True Then
            '        Me.FNSubOrderAmt.Value = oDBdtQtyAmnt.Rows(0).Item("FNSubOrderAmt")
            '    Else
            '        Me.FNSubOrderAmt.Value = 0
            '    End If
            'Else
            '    Me.FNSubOrderQty.Value = 0
            '    Me.FNSubOrderAmt.Value = 0
            'End If
            '=====================================================================================================================================================

            Me.FTColorway.Properties.Tag = nFNColorway_Id
            Me.FTColorway.Text = tFTColorway_Code
            Me.FTColorway_None.Text = tFTColorway_Text

            Me.FTSizeBreakDown.Focus()

            Return True
        Catch ex As Exception
            Return False
        End Try

    End Function

    Private Function W_PRCbSaveSubOrderDT_REM_20140126_PM1607() As Boolean
        '...save breakdown sub order no

        If Not W_PRCbVerifyBF_SaveDataSubOrder() Then Return False

        Dim bFlagSubOrderNew As Boolean = False

        '...Sub Order Breakdown detail by sub order no
        '==============================================================================================================
        '...Save Sub Order Header And Save Sub Order Detail Breakdown Info in one's time
        Dim nFNHSysMatColorId As Integer
        Dim tFTMatColorCode As String
        Dim tFTMatColorName As String
        Dim nFNHSysMatSizeId As Integer
        Dim tFTMatSizeCode As String
        Dim tFTMatSizeName As String
        Dim nFNQuantity_Tmp As Double
        Dim nFNPrice_Tmp As Double
        Dim nFNAmt_Tmp As Double
        Dim nFNExtraQtySubOrder_Tmp As Double
        Dim nFNQuantityExtra_Tmp As Double

        nFNHSysMatColorId = Val(Me.FTColorway.Properties.Tag.ToString())
        tFTMatColorCode = Me.FTColorway.Text.Trim()
        tFTMatColorName = Me.FTColorway_lbl.Text.Trim()

        nFNHSysMatSizeId = Val(Me.FTSizeBreakDown.Properties.Tag.ToString())
        tFTMatSizeCode = Me.FTSizeBreakDown.Text.Trim()
        tFTMatSizeName = Me.FTSizeBreakDown_lbl.Text.Trim()

        nFNQuantity_Tmp = Me.FNQuantity.Value
        nFNPrice_Tmp = Me.FNPrice.Value
        nFNAmt_Tmp = Me.FNAmt.Value
        nFNExtraQtySubOrder_Tmp = Me.FNExtraQtySubOrder.Value
        nFNQuantityExtra_Tmp = Me.FNQuantityExtra.Value
        '==============================================================================================================

        Dim tSql As String

        tSql = ""
        tSql = "SELECT COUNT(A.FTSubOrderNo) AS FNSubOrderNoCnt"
        tSql &= ControlChars.CrLf & "FROM HITECH_MERCHAN.dbo.TMERTOrderSub AS A WITH (NOLOCK)"
        tSql &= ControlChars.CrLf & "WHERE A.FTSubOrderNo = N'" & Me.FTSubOrderNo.Text & "'"

        If Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, 0)) = 0 Then

            If Not W_PRCbSaveSubOrderHD() Then
                Me.FTSubOrderNo.Focus()
                Return False
            End If

            bFlagSubOrderNew = True

        End If

        If Me.FTSubOrderNo.Properties.Tag = "" Then
            If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                'HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, My.Application.Info.Title, "ท่านจะต้องบันทึกรายการหัวเอกสารใบสั่งผลิตย่อยก่อน" & ControlChars.CrLf & "จากนั้นจึงบันทึกรายการจำนวน breakdown ตามลำดับ !!!")
                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, My.Application.Info.Title, "Invalid data FO Sub Order No. !!!")
                Me.FTSubOrderNo.Focus()
                Return False
            Else
                'HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, My.Application.Info.Title, "ท่านจะต้องบันทึกรายการหัวเอกสารใบสั่งผลิตย่อยก่อน" & ControlChars.CrLf & "จากนั้นจึงบันทึกรายการจำนวน breakdown ตามลำดับ !!!")
                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, My.Application.Info.Title, "กรุณาตรวจสอบรายการใบสั่งผลิดย่อย !!!")
                Me.FTSubOrderNo.Focus()
                Return False
            End If

        End If

        Dim tFTColorway_Code As String
        Dim tFTColorway_Text As String
        Dim nFNColorway_Id As Integer

        Try
            If nFNHSysMatColorId = 0 Then Return False
            If nFNHSysMatSizeId = 0 Then Return False
            If Me.FTSubOrderNo.Properties.Tag.ToString() = "" Then Return False
            If Me.FTOrderNo.Properties.Tag.ToString() = "" Then Return False

            If nFNQuantity_Tmp <= 0 Then
                Me.FNQuantity.Focus()
                Return False
            End If

            If nFNPrice_Tmp <= 0 Then
                Me.FNPrice.Focus()
                Return False
            End If

            nFNColorway_Id = nFNHSysMatColorId
            tFTColorway_Code = tFTMatColorCode
            tFTColorway_Text = tFTMatColorName

            '======================================== Extra Value =======================================================
            Dim nFNQuantityExtra#
            'Double.TryParse(Me.FNQuantityExtra.Value, nFNQuantityExtra)
            nFNQuantityExtra = nFNQuantityExtra_Tmp

            '...ปริมาณปรกติ รวม กับ ปริมาณ จำนวนยอดเผื่อ
            Dim nFNGrandQuantity#
            'nFNGrandQuantity = CDbl(Me.FNQuantity.Value) + CDbl(IIf(nFNQuantityExtra < 0, 0, nFNQuantityExtra))
            nFNGrandQuantity = CDbl(nFNQuantity_Tmp) + CDbl(IIf(nFNQuantityExtra < 0, 0, nFNQuantityExtra))

            '...มุลค่าที่เกิดจากจำนวนเผื่อ
            Dim nFNAmntExtra#
            'nFNAmntExtra = (CDbl(IIf(nFNQuantityExtra < 0, 0, nFNQuantityExtra)) * CDbl(Me.FNPrice.Value))
            nFNAmntExtra = (CDbl(IIf(nFNQuantityExtra < 0, 0, nFNQuantityExtra)) * CDbl(nFNPrice_Tmp))

            '...มูลค่ารวม ที่เกิดจาก มูลค่าปรกติ รวม กับ มูลค่า ที่เกิดจากยอดเผื่อ
            Dim nFNGrandAmnt#
            'nFNGrandAmnt = CDbl(Me.FNAmt.Value) + nFNAmntExtra
            nFNGrandAmnt = CDbl(nFNAmt_Tmp) + nFNAmntExtra
            '============================================================================================================

            tSql = ""
            tSql = "UPDATE A"
            tSql &= ControlChars.CrLf & "SET A.[FNPrice] = " & nFNPrice_Tmp
            tSql &= ControlChars.CrLf & "   ,A.[FNQuantity] =  " & nFNQuantity_Tmp
            tSql &= ControlChars.CrLf & "   ,A.[FNAmt] = " & nFNAmt_Tmp
            tSql &= ControlChars.CrLf & "   ,A.[FTColorway] = (SELECT x.FTMatColorCode FROM HITECH_MASTER.dbo.TMERMMatColor AS x WHERE x.FNHSysMatColorId = " & Val(nFNHSysMatColorId) & ")"
            tSql &= ControlChars.CrLf & "   ,A.[FTSizeBreakDown] = (SELECT y.FTMatSizeCode FROM HITECH_MASTER.dbo.TMERMMatSize AS y WHERE y.FNHSysMatSizeId = " & Val(nFNHSysMatSizeId) & ")"
            tSql &= ControlChars.CrLf & "   ,A.[FNExtraQty] = " & nFNExtraQtySubOrder_Tmp
            tSql &= ControlChars.CrLf & "   ,A.[FNQuantityExtra] = " & nFNQuantityExtra
            tSql &= ControlChars.CrLf & "   ,A.[FNGrandQuantity] = " & nFNGrandQuantity
            tSql &= ControlChars.CrLf & "   ,A.[FNAmntExtra] = " & nFNAmntExtra
            tSql &= ControlChars.CrLf & "   ,A.[FNGrandAmnt] = " & nFNGrandAmnt
            tSql &= ControlChars.CrLf & "   ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
            tSql &= ControlChars.CrLf & "   ,A.[FDUpdDate] = " & HI.UL.ULDate.FormatDateDB
            tSql &= ControlChars.CrLf & "   ,A.[FTUpdTime] = " & HI.UL.ULDate.FormatTimeDB
            tSql &= ControlChars.CrLf & "FROM [HITECH_MERCHAN].[dbo].[TMERTOrderSub_BreakDown] AS A"
            tSql &= ControlChars.CrLf & "WHERE A.[FTOrderNo] = '" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
            tSql &= ControlChars.CrLf & "      AND A.[FTSubOrderNo] = '" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'"
            tSql &= ControlChars.CrLf & "      AND A.[FNHSysMatColorId] = " & Val(nFNHSysMatColorId)
            tSql &= ControlChars.CrLf & "      AND A.[FNHSysMatSizeId] = " & Val(nFNHSysMatSizeId)

            If HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN) = False Then
                '...Add New Sub Order No
                tSql = ""
                tSql = "DECLARE @FTMatColorCode AS NVARCHAR(30);"
                tSql &= ControlChars.CrLf & "DECLARE @FTMatSizeCode AS NVARCHAR(30);"
                tSql &= ControlChars.CrLf & "SELECT @FTMatColorCode = x.FTMatColorCode FROM HITECH_MASTER.dbo.TMERMMatColor AS x WHERE x.FNHSysMatColorId = " & Val(nFNHSysMatColorId)
                tSql &= ControlChars.CrLf & "SELECT @FTMatSizeCode = y.FTMatSizeCode FROM HITECH_MASTER.dbo.TMERMMatSize AS y WHERE y.FNHSysMatSizeId = " & Val(nFNHSysMatSizeId)
                tSql &= ControlChars.CrLf & "INSERT INTO [HITECH_MERCHAN].[dbo].[TMERTOrderSub_BreakDown]([FTOrderNo] ,[FTSubOrderNo],[FTColorway],[FTSizeBreakDown]"
                tSql &= ControlChars.CrLf & "                                       ,[FNPrice],[FNQuantity],[FNAmt],[FNHSysMatColorId],[FNHSysMatSizeId],[FNExtraQty]"
                tSql &= ControlChars.CrLf & "                                       ,[FNQuantityExtra],[FNGrandQuantity],[FNAmntExtra],[FNGrandAmnt]"
                tSql &= ControlChars.CrLf & "                                       ,[FTInsUser],[FDInsDate],[FTInsTime],[FTUpdUser],[FDUpdDate],[FTUpdTime])"
                tSql &= ControlChars.CrLf & "VALUES ('" & Me.FTOrderNo.Properties.Tag.ToString() & "','" & Me.FTSubOrderNo.Properties.Tag.ToString() & "', @FTMatColorCode, @FTMatSizeCode"
                tSql &= "," & Val(nFNPrice_Tmp) & "," & Val(nFNQuantity_Tmp) & "," & (Val(nFNPrice_Tmp) * Val(nFNQuantity_Tmp)) & "," & Val(nFNHSysMatColorId) & "," & Val(nFNHSysMatSizeId) & "," & Val(nFNExtraQtySubOrder_Tmp)
                tSql &= "," & nFNQuantityExtra & "," & nFNGrandQuantity & "," & nFNAmntExtra & "," & nFNGrandAmnt
                tSql &= ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ")"

                If HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                    '...update order breakdown / add new order breakdown
                    tSql = ""
                    tSql = ";WITH cteOrderBreakdown (FTOrderNo, FNHSysMatColorId, FNHSysMatSizeId, FNQuantity, FNPrice, FNAmnt)"
                    tSql &= ControlChars.CrLf & "AS "
                    tSql &= ControlChars.CrLf & "(SELECT A.FTOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId, ISNULL(SUM(A.FNQuantity),0) AS FNQuantity, ISNULL(SUM(A.FNPrice),0) AS FNPrice, ISNULL(SUM(A.FNAmt),0) AS FNAmnt"
                    tSql &= ControlChars.CrLf & " FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS A"
                    tSql &= ControlChars.CrLf & " WHERE A.FTOrderNo = '" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
                    tSql &= ControlChars.CrLf & " GROUP BY A.FTOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId"
                    tSql &= ControlChars.CrLf & " )"
                    tSql &= ControlChars.CrLf & " UPDATE A"
                    tSql &= ControlChars.CrLf & " SET A.[FTColorway] = ISNULL((SELECT L1.FTMatColorCode FROM HITECH_MASTER.dbo.TMERMMatColor AS L1 WHERE L1.FNHSysMatColorId = A.FNHSysMatColorId ),'')"
                    tSql &= ControlChars.CrLf & "    ,A.[FTSizeBreakDown] = ISNULL((SELECT L2.FTMatSizeCode FROM HITECH_MASTER.dbo.TMERMMatSize AS L2 WHERE L2.FNHSysMatSizeId = A.FNHsysMatSizeId),'')"
                    tSql &= ControlChars.CrLf & "    ,A.[FNPrice] = B.FNPrice"
                    tSql &= ControlChars.CrLf & "    ,A.[FNQuantity] = B.FNQuantity"
                    tSql &= ControlChars.CrLf & "    ,A.[FNAmt] = B.FNAmnt"
                    tSql &= ControlChars.CrLf & "    ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    tSql &= ControlChars.CrLf & "    ,A.[FDUpdDate] = " & HI.UL.ULDate.FormatDateDB
                    tSql &= ControlChars.CrLf & "    ,A.[FTUpdTime] = " & HI.UL.ULDate.FormatTimeDB
                    tSql &= ControlChars.CrLf & " FROM [HITECH_MERCHAN].[dbo].[TMERTOrder_BreakDown] AS A LEFT JOIN cteOrderBreakdown AS B ON A.FNHSysMatColorId = B.FNHSysMatColorId"
                    tSql &= ControlChars.CrLf & " AND A.FNHSysMatSizeId = B.FNHSysMatSizeId"
                    tSql &= ControlChars.CrLf & " WHERE A.[FTOrderNo] = '" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
                    tSql &= ControlChars.CrLf & " AND A.FTOrderNo = B.FTOrderNo;"

                    HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

                    tSql = ""
                    tSql = ";WITH cteOrderBreakdown (FTOrderNo, FNHSysMatColorId, FNHSysMatSizeId, FNQuantity, FNPrice, FNAmnt)"
                    tSql &= ControlChars.CrLf & "AS"
                    tSql &= ControlChars.CrLf & "(SELECT A.FTOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId, ISNULL(SUM(A.FNQuantity),0) AS FNQuantity, ISNULL(SUM(A.FNPrice),0) AS FNPrice, ISNULL(SUM(A.FNAmt),0) AS FNAmnt"
                    tSql &= ControlChars.CrLf & " FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS A"
                    tSql &= ControlChars.CrLf & " WHERE A.FTOrderNo = '" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
                    tSql &= ControlChars.CrLf & " GROUP BY A.FTOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId"
                    tSql &= ControlChars.CrLf & " )"
                    tSql &= ControlChars.CrLf & "INSERT INTO  HITECH_MERCHAN.dbo.TMERTOrder_BreakDown([FTOrderNo] ,[FTColorway],[FTSizeBreakDown],[FNPrice]"
                    tSql &= ControlChars.CrLf & "                                                    ,[FNQuantity],[FNAmt],[FNHSysMatColorId],[FNHSysMatSizeId]"
                    tSql &= ControlChars.CrLf & "                                                    ,[FTInsUser],[FDInsDate],[FTInsTime],[FTUpdUser],[FDUpdDate],[FTUpdTime])"
                    tSql &= ControlChars.CrLf & "SELECT L1.FTOrderNo"
                    tSql &= ControlChars.CrLf & "      ,ISNULL((SELECT M1.FTMatColorCode FROM HITECH_MASTER.dbo.TMERMMatColor AS M1 WHERE M1.FNHSysMatColorId = L1.FNHSysMatColorId),'')"
                    tSql &= ControlChars.CrLf & "      ,ISNULL((SELECT M2.FTMatSizeCode FROM HITECH_MASTER.dbo.TMERMMatSize AS M2 WHERE M2.FNHSysMatSizeId = L1.FNHSysMatSizeId),'')"
                    tSql &= ControlChars.CrLf & "      ,L1.FNPrice"
                    tSql &= ControlChars.CrLf & "      ,L1.FNQuantity"
                    tSql &= ControlChars.CrLf & "      ,L1.FNAmnt"
                    tSql &= ControlChars.CrLf & "      ,L1.FNHSysMatColorId"
                    tSql &= ControlChars.CrLf & "      ,L1.FNHSysMatSizeId"
                    tSql &= ControlChars.CrLf & "      ,N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    tSql &= ControlChars.CrLf & "      ," & HI.UL.ULDate.FormatDateDB
                    tSql &= ControlChars.CrLf & "      ," & HI.UL.ULDate.FormatTimeDB
                    tSql &= ControlChars.CrLf & "      ,N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    tSql &= ControlChars.CrLf & "      ," & HI.UL.ULDate.FormatDateDB
                    tSql &= ControlChars.CrLf & "      ," & HI.UL.ULDate.FormatTimeDB
                    tSql &= ControlChars.CrLf & "FROM cteOrderBreakdown AS L1"
                    tSql &= ControlChars.CrLf & "WHERE NOT EXISTS(SELECT 'T'"
                    tSql &= ControlChars.CrLf & "                 FROM HITECH_MERCHAN.dbo.TMERTOrder_BreakDown AS L2"
                    tSql &= ControlChars.CrLf & "                 WHERE L2.FTOrderNo = L1.FTOrderNo"
                    tSql &= ControlChars.CrLf & "                       AND L2.FNHSysMatColorId = L1.FNHSysMatColorId"
                    tSql &= ControlChars.CrLf & "                       AND L2.FNHSysMatSizeId = L1.FNHSysMatSizeId)"

                    HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

                    Dim oStrBuilder As New System.Text.StringBuilder()

                    oStrBuilder.Remove(0, oStrBuilder.Length)

                    oStrBuilder.AppendLine("UPDATE A")
                    oStrBuilder.AppendLine("SET A.FNSubOrderQty = B.FNQuantity")
                    oStrBuilder.AppendLine("   ,A.FNSubOrderAmt = B.FNAmt")
                    oStrBuilder.AppendLine("   ,A.FNSubOrderExtraQty = B.FNSubOrderExtraQty")
                    oStrBuilder.AppendLine("   ,A.FNSubOrderExtraAmt = B.FNSubOrderExtraAmt")
                    oStrBuilder.AppendLine("   ,A.FTUpdUser =N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'")
                    oStrBuilder.AppendLine(String.Format("   ,A.FDUpdDate = {0}", HI.UL.ULDate.FormatDateDB))
                    oStrBuilder.AppendLine(String.Format("   ,A.FTUpdTime = {0}", HI.UL.ULDate.FormatTimeDB))
                    oStrBuilder.AppendLine("FROM HITECH_MERCHAN.dbo.TMERTOrderSub AS A LEFT JOIN (SELECT M.FTOrderNo, M.FTSubOrderNo, ISNULL(SUM(M.FNQuantity),0) AS FNQuantity, ISNULL(SUM(M.FNAmt),0) AS FNAmt")
                    oStrBuilder.AppendLine("                                                            , ISNULL(SUM(M.FNQuantityExtra),0) AS FNSubOrderExtraQty")
                    oStrBuilder.AppendLine("                                                            , ISNULL(SUM(M.FNAmntExtra),0) AS FNSubOrderExtraAmt")
                    oStrBuilder.AppendLine("                                                            , ISNULL(SUM(M.FNQuantityExtra),0) AS FNQuantityExtra")
                    oStrBuilder.AppendLine("                                                            , ISNULL(SUM(M.FNAmntExtra),0) AS FNAmntExtra")
                    oStrBuilder.AppendLine("                                                      FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS M")
                    oStrBuilder.AppendLine("													  WHERE M.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
                    oStrBuilder.AppendLine("															AND M.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'")
                    oStrBuilder.AppendLine("													  GROUP BY M.FTOrderNo, M.FTSubOrderNo) AS B ON A.FTOrderNo = B.FTOrderNo")
                    oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
                    oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag().ToString() & "'")
                    oStrBuilder.AppendLine("      AND A.FTSubOrderNo = B.FTSubOrderNo;")

                    tSql = ""
                    tSql = oStrBuilder.ToString()

                    HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

                    HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, Me.Text)

                End If

            Else
                '...update order breakdown
                tSql = ""
                tSql = ";WITH cteOrderBreakdown (FTOrderNo, FNHSysMatColorId, FNHSysMatSizeId, FNQuantity, FNPrice, FNAmnt)"
                tSql &= ControlChars.CrLf & "AS "
                tSql &= ControlChars.CrLf & "(SELECT A.FTOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId, ISNULL(SUM(A.FNQuantity),0) AS FNQuantity, ISNULL(SUM(A.FNPrice),0) AS FNPrice, ISNULL(SUM(A.FNAmt),0) AS FNAmnt"
                tSql &= ControlChars.CrLf & " FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS A"
                tSql &= ControlChars.CrLf & " WHERE A.FTOrderNo = '" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
                tSql &= ControlChars.CrLf & " GROUP BY A.FTOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId"
                tSql &= ControlChars.CrLf & " )"
                tSql &= ControlChars.CrLf & " UPDATE A"
                tSql &= ControlChars.CrLf & " SET A.[FTColorway] = ISNULL((SELECT L1.FTMatColorCode FROM HITECH_MASTER.dbo.TMERMMatColor AS L1 WHERE L1.FNHSysMatColorId = A.FNHSysMatColorId ),'')"
                tSql &= ControlChars.CrLf & "    ,A.[FTSizeBreakDown] = ISNULL((SELECT L2.FTMatSizeCode FROM HITECH_MASTER.dbo.TMERMMatSize AS L2 WHERE L2.FNHSysMatSizeId = A.FNHsysMatSizeId),'')"
                tSql &= ControlChars.CrLf & "    ,A.[FNPrice] = B.FNPrice"
                tSql &= ControlChars.CrLf & "    ,A.[FNQuantity] = B.FNQuantity"
                tSql &= ControlChars.CrLf & "    ,A.[FNAmt] = B.FNAmnt"
                tSql &= ControlChars.CrLf & "    ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                tSql &= ControlChars.CrLf & "    ,A.[FDUpdDate] = " & HI.UL.ULDate.FormatDateDB
                tSql &= ControlChars.CrLf & "    ,A.[FTUpdTime] = " & HI.UL.ULDate.FormatTimeDB
                tSql &= ControlChars.CrLf & " FROM [HITECH_MERCHAN].[dbo].[TMERTOrder_BreakDown] AS A LEFT JOIN cteOrderBreakdown AS B ON A.FNHSysMatColorId = B.FNHSysMatColorId"
                tSql &= ControlChars.CrLf & " AND A.FNHSysMatSizeId = B.FNHSysMatSizeId"
                tSql &= ControlChars.CrLf & " WHERE A.[FTOrderNo] = '" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
                tSql &= ControlChars.CrLf & " AND A.FTOrderNo = B.FTOrderNo;"

                HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

                Dim oStrBuilder As New System.Text.StringBuilder()

                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("UPDATE A")
                oStrBuilder.AppendLine("SET A.FNSubOrderQty = B.FNQuantity")
                oStrBuilder.AppendLine("   ,A.FNSubOrderAmt = B.FNAmt")
                oStrBuilder.AppendLine("   ,A.FNSubOrderExtraQty = B.FNSubOrderExtraQty")
                oStrBuilder.AppendLine("   ,A.FNSubOrderExtraAmt = B.FNSubOrderExtraAmt")
                oStrBuilder.AppendLine("   ,A.FTUpdUser =N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'")
                oStrBuilder.AppendLine(String.Format("   ,A.FDUpdDate = {0}", HI.UL.ULDate.FormatDateDB))
                oStrBuilder.AppendLine(String.Format("   ,A.FTUpdTime = {0}", HI.UL.ULDate.FormatTimeDB))
                oStrBuilder.AppendLine("FROM HITECH_MERCHAN.dbo.TMERTOrderSub AS A LEFT JOIN (SELECT M.FTOrderNo, M.FTSubOrderNo, ISNULL(SUM(M.FNQuantity),0) AS FNQuantity, ISNULL(SUM(M.FNAmt),0) AS FNAmt")
                oStrBuilder.AppendLine("                                                            , ISNULL(SUM(M.FNQuantityExtra),0) AS FNSubOrderExtraQty")
                oStrBuilder.AppendLine("                                                            , ISNULL(SUM(M.FNAmntExtra),0) AS FNSubOrderExtraAmt")
                oStrBuilder.AppendLine("                                                      FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS M")
                oStrBuilder.AppendLine("													  WHERE M.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("															AND M.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("													  GROUP BY M.FTOrderNo, M.FTSubOrderNo) AS B ON A.FTOrderNo = B.FTOrderNo")
                oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag().ToString() & "'")
                oStrBuilder.AppendLine("      AND A.FTSubOrderNo = B.FTSubOrderNo;")

                tSql = ""
                tSql = oStrBuilder.ToString()

                HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

                HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, Me.Text)

            End If

            Me.FTColorway.Properties.Tag = ""
            Me.FTColorway.Text = ""
            Me.FTSizeBreakDown.Properties.Tag = ""
            Me.FTSizeBreakDown.Text = ""

            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)

            REM Call W_PRCbShowBrowseDataSubOrderBreakdownInfo(Me.FTSubOrderNo.Properties.Tag.ToString())
            Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(Me.FTSubOrderNo.Properties.Tag.ToString())
            Call W_PRCbShowBrowseDataCurrencyInfo()
            Call W_PRCbShowBrowseDataOrderBreakdownInfo()
            Call W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt()

            '============================================== Sub Order No / FTSubOrderNo : Total Quantity / FTSubOrderNo : Total Amount ===========================
            Dim oDBdtQtyAmnt As DataTable

            Dim oStrBuilderSubOrderInfo As New System.Text.StringBuilder()

            oStrBuilderSubOrderInfo.Remove(0, oStrBuilderSubOrderInfo.Length)

            oStrBuilderSubOrderInfo.AppendLine("SELECT ISNULL(A.FNSubOrderQty,0) AS FNSubOrderQty, ISNULL(A.FNSubOrderAmt,0) AS FNSubOrderAmt")
            oStrBuilderSubOrderInfo.AppendLine("FROM HITECH_MERCHAN.dbo.TMERTOrderSub AS A")
            oStrBuilderSubOrderInfo.AppendLine("WHERE A.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
            oStrBuilderSubOrderInfo.AppendLine("      AND A.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'")

            oDBdtQtyAmnt = HI.Conn.SQLConn.GetDataTable(oStrBuilderSubOrderInfo.ToString(), HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtQtyAmnt.Rows.Count > 0 Then
                If Not DBNull.Value.Equals(oDBdtQtyAmnt.Rows(0).Item("FNSubOrderQty")) = True Then
                    Me.FNSubOrderQty.Value = oDBdtQtyAmnt.Rows(0).Item("FNSubOrderQty")
                Else
                    Me.FNSubOrderQty.Value = 0
                End If

                If Not DBNull.Value.Equals(oDBdtQtyAmnt.Rows(0).Item("FNSubOrderAmt")) = True Then
                    Me.FNSubOrderAmt.Value = oDBdtQtyAmnt.Rows(0).Item("FNSubOrderAmt")
                Else
                    Me.FNSubOrderAmt.Value = 0
                End If
            Else
                Me.FNSubOrderQty.Value = 0
                Me.FNSubOrderAmt.Value = 0
            End If
            '=====================================================================================================================================================

            Me.FTColorway.Properties.Tag = nFNColorway_Id
            Me.FTColorway.Text = tFTColorway_Code
            Me.FTColorway_None.Text = tFTColorway_Text

            Me.FTSizeBreakDown.Focus()

            Return True
        Catch ex As Exception

            Return False
        End Try

    End Function

    Private Function W_PRCbSaveSubOrderDT_REM_20140118_NEW() As Boolean
        '...save breakdown sub order no

        If Not W_PRCbVerifyBF_SaveDataSubOrder() Then Return False

        Dim bFlagSubOrderNew As Boolean = False

        '...Sub Order Breakdown detail by sub order no
        '==============================================================================================================
        '...Save Sub Order Header And Save Sub Order Detail Breakdown Info in one's time
        Dim nFNHSysMatColorId As Integer
        Dim tFTMatColorCode As String
        Dim tFTMatColorName As String
        Dim nFNHSysMatSizeId As Integer
        Dim tFTMatSizeCode As String
        Dim tFTMatSizeName As String
        Dim nFNQuantity_Tmp As Double
        Dim nFNPrice_Tmp As Double
        Dim nFNAmt_Tmp As Double
        Dim nFNExtraQtySubOrder_Tmp As Double
        Dim nFNQuantityExtra_Tmp As Double

        nFNHSysMatColorId = Val(Me.FTColorway.Properties.Tag.ToString())
        tFTMatColorCode = Me.FTColorway.Text.Trim()
        tFTMatColorName = Me.FTColorway_lbl.Text.Trim()

        nFNHSysMatSizeId = Val(Me.FTSizeBreakDown.Properties.Tag.ToString())
        tFTMatSizeCode = Me.FTSizeBreakDown.Text.Trim()
        tFTMatSizeName = Me.FTSizeBreakDown_lbl.Text.Trim()

        nFNQuantity_Tmp = Me.FNQuantity.Value
        nFNPrice_Tmp = Me.FNPrice.Value
        nFNAmt_Tmp = Me.FNAmt.Value
        nFNExtraQtySubOrder_Tmp = Me.FNExtraQtySubOrder.Value
        nFNQuantityExtra_Tmp = Me.FNQuantityExtra.Value
        '==============================================================================================================

        Dim tSql As String

        tSql = ""
        tSql = "SELECT COUNT(A.FTSubOrderNo) AS FNSubOrderNoCnt"
        tSql &= ControlChars.CrLf & "FROM HITECH_MERCHAN.dbo.TMERTOrderSub AS A WITH (NOLOCK)"
        tSql &= ControlChars.CrLf & "WHERE A.FTSubOrderNo = N'" & Me.FTSubOrderNo.Text & "'"

        If Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, 0)) = 0 Then

            If Not W_PRCbSaveSubOrderHD() Then
                Me.FTSubOrderNo.Focus()
                Return False
            End If

            bFlagSubOrderNew = True

        End If

        If Me.FTSubOrderNo.Properties.Tag = "" Then
            If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                'HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, My.Application.Info.Title, "ท่านจะต้องบันทึกรายการหัวเอกสารใบสั่งผลิตย่อยก่อน" & ControlChars.CrLf & "จากนั้นจึงบันทึกรายการจำนวน breakdown ตามลำดับ !!!")
                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, My.Application.Info.Title, "Invalid data FO Sub Order No. !!!")
                Me.FTSubOrderNo.Focus()
                Return False
            Else
                'HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, My.Application.Info.Title, "ท่านจะต้องบันทึกรายการหัวเอกสารใบสั่งผลิตย่อยก่อน" & ControlChars.CrLf & "จากนั้นจึงบันทึกรายการจำนวน breakdown ตามลำดับ !!!")
                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.InputData, My.Application.Info.Title, "กรุณาตรวจสอบรายการใบสั่งผลิดย่อย !!!")
                Me.FTSubOrderNo.Focus()
                Return False
            End If

        End If

        Dim tFTColorway_Code As String
        Dim tFTColorway_Text As String
        Dim nFNColorway_Id As Integer

        Try
            If nFNHSysMatColorId = 0 Then Return False
            If nFNHSysMatSizeId = 0 Then Return False
            If Me.FTSubOrderNo.Properties.Tag.ToString() = "" Then Return False
            If Me.FTOrderNo.Properties.Tag.ToString() = "" Then Return False

            If nFNQuantity_Tmp <= 0 Then
                Me.FNQuantity.Focus()
                Return False
            End If

            If nFNPrice_Tmp <= 0 Then
                Me.FNPrice.Focus()
                Return False
            End If

            nFNColorway_Id = nFNHSysMatColorId
            tFTColorway_Code = tFTMatColorCode
            tFTColorway_Text = tFTMatColorName

            '======================================== Extra Value =======================================================
            Dim nFNQuantityExtra#
            'Double.TryParse(Me.FNQuantityExtra.Value, nFNQuantityExtra)
            nFNQuantityExtra = nFNQuantityExtra_Tmp

            '...ปริมาณปรกติ รวม กับ ปริมาณ จำนวนยอดเผื่อ
            Dim nFNGrandQuantity#
            'nFNGrandQuantity = CDbl(Me.FNQuantity.Value) + CDbl(IIf(nFNQuantityExtra < 0, 0, nFNQuantityExtra))
            nFNGrandQuantity = CDbl(nFNQuantity_Tmp) + CDbl(IIf(nFNQuantityExtra < 0, 0, nFNQuantityExtra))

            '...มุลค่าที่เกิดจากจำนวนเผื่อ
            Dim nFNAmntExtra#
            'nFNAmntExtra = (CDbl(IIf(nFNQuantityExtra < 0, 0, nFNQuantityExtra)) * CDbl(Me.FNPrice.Value))
            nFNAmntExtra = (CDbl(IIf(nFNQuantityExtra < 0, 0, nFNQuantityExtra)) * CDbl(nFNPrice_Tmp))

            '...มูลค่ารวม ที่เกิดจาก มูลค่าปรกติ รวม กับ มูลค่า ที่เกิดจากยอดเผื่อ
            Dim nFNGrandAmnt#
            'nFNGrandAmnt = CDbl(Me.FNAmt.Value) + nFNAmntExtra
            nFNGrandAmnt = CDbl(nFNAmt_Tmp) + nFNAmntExtra
            '============================================================================================================

            tSql = ""
            tSql = "UPDATE A"
            tSql &= ControlChars.CrLf & "SET A.[FNPrice] = " & nFNPrice_Tmp
            tSql &= ControlChars.CrLf & "   ,A.[FNQuantity] =  " & nFNQuantity_Tmp
            tSql &= ControlChars.CrLf & "   ,A.[FNAmt] = " & nFNAmt_Tmp
            tSql &= ControlChars.CrLf & "   ,A.[FTColorway] = (SELECT x.FTMatColorCode FROM HITECH_MASTER.dbo.TMERMMatColor AS x WHERE x.FNHSysMatColorId = " & Val(nFNHSysMatColorId) & ")"
            tSql &= ControlChars.CrLf & "   ,A.[FTSizeBreakDown] = (SELECT y.FTMatSizeCode FROM HITECH_MASTER.dbo.TMERMMatSize AS y WHERE y.FNHSysMatSizeId = " & Val(nFNHSysMatSizeId) & ")"
            tSql &= ControlChars.CrLf & "   ,A.[FNExtraQty] = " & nFNExtraQtySubOrder_Tmp
            tSql &= ControlChars.CrLf & "   ,A.[FNQuantityExtra] = " & nFNQuantityExtra
            tSql &= ControlChars.CrLf & "   ,A.[FNGrandQuantity] = " & nFNGrandQuantity
            tSql &= ControlChars.CrLf & "   ,A.[FNAmntExtra] = " & nFNAmntExtra
            tSql &= ControlChars.CrLf & "   ,A.[FNGrandAmnt] = " & nFNGrandAmnt
            tSql &= ControlChars.CrLf & "   ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
            tSql &= ControlChars.CrLf & "   ,A.[FDUpdDate] = " & HI.UL.ULDate.FormatDateDB
            tSql &= ControlChars.CrLf & "   ,A.[FTUpdTime] = " & HI.UL.ULDate.FormatTimeDB
            tSql &= ControlChars.CrLf & "FROM [HITECH_MERCHAN].[dbo].[TMERTOrderSub_BreakDown] AS A"
            tSql &= ControlChars.CrLf & "WHERE A.[FTOrderNo] = '" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
            tSql &= ControlChars.CrLf & "      AND A.[FTSubOrderNo] = '" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'"
            tSql &= ControlChars.CrLf & "      AND A.[FNHSysMatColorId] = " & Val(nFNHSysMatColorId)
            tSql &= ControlChars.CrLf & "      AND A.[FNHSysMatSizeId] = " & Val(nFNHSysMatSizeId)

            If HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN) = False Then
                '...Add New Sub Order No
                tSql = ""
                tSql = "DECLARE @FTMatColorCode AS NVARCHAR(30);"
                tSql &= ControlChars.CrLf & "DECLARE @FTMatSizeCode AS NVARCHAR(30);"
                tSql &= ControlChars.CrLf & "SELECT @FTMatColorCode = x.FTMatColorCode FROM HITECH_MASTER.dbo.TMERMMatColor AS x WHERE x.FNHSysMatColorId = " & Val(nFNHSysMatColorId)
                tSql &= ControlChars.CrLf & "SELECT @FTMatSizeCode = y.FTMatSizeCode FROM HITECH_MASTER.dbo.TMERMMatSize AS y WHERE y.FNHSysMatSizeId = " & Val(nFNHSysMatSizeId)
                tSql &= ControlChars.CrLf & "INSERT INTO [HITECH_MERCHAN].[dbo].[TMERTOrderSub_BreakDown]([FTOrderNo] ,[FTSubOrderNo],[FTColorway],[FTSizeBreakDown]"
                tSql &= ControlChars.CrLf & "                                       ,[FNPrice],[FNQuantity],[FNAmt],[FNHSysMatColorId],[FNHSysMatSizeId],[FNExtraQty]"
                tSql &= ControlChars.CrLf & "                                       ,[FNQuantityExtra],[FNGrandQuantity],[FNAmntExtra],[FNGrandAmnt]"
                tSql &= ControlChars.CrLf & "                                       ,[FTInsUser],[FDInsDate],[FTInsTime],[FTUpdUser],[FDUpdDate],[FTUpdTime])"
                tSql &= ControlChars.CrLf & "VALUES ('" & Me.FTOrderNo.Properties.Tag.ToString() & "','" & Me.FTSubOrderNo.Properties.Tag.ToString() & "', @FTMatColorCode, @FTMatSizeCode"
                tSql &= "," & Val(nFNPrice_Tmp) & "," & Val(nFNQuantity_Tmp) & "," & (Val(nFNPrice_Tmp) * Val(nFNQuantity_Tmp)) & "," & Val(nFNHSysMatColorId) & "," & Val(nFNHSysMatSizeId) & "," & Val(nFNExtraQtySubOrder_Tmp)
                tSql &= "," & nFNQuantityExtra & "," & nFNGrandQuantity & "," & nFNAmntExtra & "," & nFNGrandAmnt
                tSql &= ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ")"

                If HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                    '...update order breakdown / add new order breakdown
                    tSql = ""
                    tSql = ";WITH cteOrderBreakdown (FTOrderNo, FNHSysMatColorId, FNHSysMatSizeId, FNQuantity, FNPrice, FNAmnt)"
                    tSql &= ControlChars.CrLf & "AS "
                    tSql &= ControlChars.CrLf & "(SELECT A.FTOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId, ISNULL(SUM(A.FNQuantity),0) AS FNQuantity, ISNULL(SUM(A.FNPrice),0) AS FNPrice, ISNULL(SUM(A.FNAmt),0) AS FNAmnt"
                    tSql &= ControlChars.CrLf & "      , ISNULL(SUM(A.FNQuantityExtra),0) AS FNQuantityExtra"
                    tSql &= ControlChars.CrLf & "      , ISNULL(SUM(A.FNAmntExtra),0) AS FNAmntExtra"
                    tSql &= ControlChars.CrLf & " FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS A"
                    tSql &= ControlChars.CrLf & " WHERE A.FTOrderNo = '" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
                    tSql &= ControlChars.CrLf & " GROUP BY A.FTOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId"
                    tSql &= ControlChars.CrLf & " )"
                    tSql &= ControlChars.CrLf & " UPDATE A"
                    tSql &= ControlChars.CrLf & " SET A.[FTColorway] = ISNULL((SELECT L1.FTMatColorCode FROM HITECH_MASTER.dbo.TMERMMatColor AS L1 WHERE L1.FNHSysMatColorId = A.FNHSysMatColorId ),'')"
                    tSql &= ControlChars.CrLf & "    ,A.[FTSizeBreakDown] = ISNULL((SELECT L2.FTMatSizeCode FROM HITECH_MASTER.dbo.TMERMMatSize AS L2 WHERE L2.FNHSysMatSizeId = A.FNHsysMatSizeId),'')"
                    tSql &= ControlChars.CrLf & "    ,A.[FNPrice] = B.FNPrice"
                    tSql &= ControlChars.CrLf & "    ,A.[FNQuantity] = B.FNQuantity"
                    tSql &= ControlChars.CrLf & "    ,A.[FNAmt] = B.FNAmnt"
                    tSql &= ControlChars.CrLf & "    ,A.[FNQuantityExtra] = B.FNQuantityExtra"
                    tSql &= ControlChars.CrLf & "    ,A.[FNAmntExtra] = B.FNAmntExtra"
                    tSql &= ControlChars.CrLf & "    ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    tSql &= ControlChars.CrLf & "    ,A.[FDUpdDate] = " & HI.UL.ULDate.FormatDateDB
                    tSql &= ControlChars.CrLf & "    ,A.[FTUpdTime] = " & HI.UL.ULDate.FormatTimeDB
                    tSql &= ControlChars.CrLf & " FROM [HITECH_MERCHAN].[dbo].[TMERTOrder_BreakDown] AS A LEFT JOIN cteOrderBreakdown AS B ON A.FNHSysMatColorId = B.FNHSysMatColorId"
                    tSql &= ControlChars.CrLf & " AND A.FNHSysMatSizeId = B.FNHSysMatSizeId"
                    tSql &= ControlChars.CrLf & " WHERE A.[FTOrderNo] = '" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
                    tSql &= ControlChars.CrLf & " AND A.FTOrderNo = B.FTOrderNo;"

                    HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

                    tSql = ""
                    tSql = ";WITH cteOrderBreakdown (FTOrderNo, FNHSysMatColorId, FNHSysMatSizeId, FNQuantity, FNPrice, FNAmnt)"
                    tSql &= ControlChars.CrLf & "AS"
                    tSql &= ControlChars.CrLf & "(SELECT A.FTOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId, ISNULL(SUM(A.FNQuantity),0) AS FNQuantity, ISNULL(SUM(A.FNPrice),0) AS FNPrice, ISNULL(SUM(A.FNAmt),0) AS FNAmnt"
                    tSql &= ControlChars.CrLf & " FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS A"
                    tSql &= ControlChars.CrLf & " WHERE A.FTOrderNo = '" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
                    tSql &= ControlChars.CrLf & " GROUP BY A.FTOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId"
                    tSql &= ControlChars.CrLf & " )"
                    tSql &= ControlChars.CrLf & "INSERT INTO  HITECH_MERCHAN.dbo.TMERTOrder_BreakDown([FTOrderNo] ,[FTColorway],[FTSizeBreakDown],[FNPrice]"
                    tSql &= ControlChars.CrLf & "                                                    ,[FNQuantity],[FNAmt],[FNHSysMatColorId],[FNHSysMatSizeId]"
                    tSql &= ControlChars.CrLf & "                                                    ,[FTInsUser],[FDInsDate],[FTInsTime],[FTUpdUser],[FDUpdDate],[FTUpdTime])"
                    tSql &= ControlChars.CrLf & "SELECT L1.FTOrderNo"
                    tSql &= ControlChars.CrLf & "      ,ISNULL((SELECT M1.FTMatColorCode FROM HITECH_MASTER.dbo.TMERMMatColor AS M1 WHERE M1.FNHSysMatColorId = L1.FNHSysMatColorId),'')"
                    tSql &= ControlChars.CrLf & "      ,ISNULL((SELECT M2.FTMatSizeCode FROM HITECH_MASTER.dbo.TMERMMatSize AS M2 WHERE M2.FNHSysMatSizeId = L1.FNHSysMatSizeId),'')"
                    tSql &= ControlChars.CrLf & "      ,L1.FNPrice"
                    tSql &= ControlChars.CrLf & "      ,L1.FNQuantity"
                    tSql &= ControlChars.CrLf & "      ,L1.FNAmnt"
                    tSql &= ControlChars.CrLf & "      ,L1.FNHSysMatColorId"
                    tSql &= ControlChars.CrLf & "      ,L1.FNHSysMatSizeId"
                    tSql &= ControlChars.CrLf & "      ,N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    tSql &= ControlChars.CrLf & "      ," & HI.UL.ULDate.FormatDateDB
                    tSql &= ControlChars.CrLf & "      ," & HI.UL.ULDate.FormatTimeDB
                    tSql &= ControlChars.CrLf & "      ,N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    tSql &= ControlChars.CrLf & "      ," & HI.UL.ULDate.FormatDateDB
                    tSql &= ControlChars.CrLf & "      ," & HI.UL.ULDate.FormatTimeDB
                    tSql &= ControlChars.CrLf & "FROM cteOrderBreakdown AS L1"
                    tSql &= ControlChars.CrLf & "WHERE NOT EXISTS(SELECT 'T'"
                    tSql &= ControlChars.CrLf & "                 FROM HITECH_MERCHAN.dbo.TMERTOrder_BreakDown AS L2"
                    tSql &= ControlChars.CrLf & "                 WHERE L2.FTOrderNo = L1.FTOrderNo"
                    tSql &= ControlChars.CrLf & "                       AND L2.FNHSysMatColorId = L1.FNHSysMatColorId"
                    tSql &= ControlChars.CrLf & "                       AND L2.FNHSysMatSizeId = L1.FNHSysMatSizeId)"

                    HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

                    Dim oStrBuilder As New System.Text.StringBuilder()

                    oStrBuilder.Remove(0, oStrBuilder.Length)

                    oStrBuilder.AppendLine("UPDATE A")
                    oStrBuilder.AppendLine("SET A.FNSubOrderQty = B.FNQuantity")
                    oStrBuilder.AppendLine("   ,A.FNSubOrderAmt = B.FNAmt")
                    oStrBuilder.AppendLine("   ,A.FNSubOrderExtraQty = B.FNSubOrderExtraQty")
                    oStrBuilder.AppendLine("   ,A.FNSubOrderExtraAmt = B.FNSubOrderExtraAmt")
                    oStrBuilder.AppendLine("   ,A.FTUpdUser =N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'")
                    oStrBuilder.AppendLine(String.Format("   ,A.FDUpdDate = {0}", HI.UL.ULDate.FormatDateDB))
                    oStrBuilder.AppendLine(String.Format("   ,A.FTUpdTime = {0}", HI.UL.ULDate.FormatTimeDB))
                    oStrBuilder.AppendLine("FROM HITECH_MERCHAN.dbo.TMERTOrderSub AS A LEFT JOIN (SELECT M.FTOrderNo, M.FTSubOrderNo, ISNULL(SUM(M.FNQuantity),0) AS FNQuantity, ISNULL(SUM(M.FNAmt),0) AS FNAmt")
                    oStrBuilder.AppendLine("                                                            , ISNULL(SUM(M.FNQuantityExtra),0) AS FNSubOrderExtraQty")
                    oStrBuilder.AppendLine("                                                            , ISNULL(SUM(M.FNAmntExtra),0) AS FNSubOrderExtraAmt")
                    oStrBuilder.AppendLine("                                                      FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS M")
                    oStrBuilder.AppendLine("													  WHERE M.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
                    oStrBuilder.AppendLine("															AND M.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'")
                    oStrBuilder.AppendLine("													  GROUP BY M.FTOrderNo, M.FTSubOrderNo) AS B ON A.FTOrderNo = B.FTOrderNo")
                    oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
                    oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag().ToString() & "'")
                    oStrBuilder.AppendLine("      AND A.FTSubOrderNo = B.FTSubOrderNo;")

                    tSql = ""
                    tSql = oStrBuilder.ToString()

                    HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)



                    HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, Me.Text)

                End If

            Else
                '...update order breakdown
                tSql = ""
                tSql = ";WITH cteOrderBreakdown (FTOrderNo, FNHSysMatColorId, FNHSysMatSizeId, FNQuantity, FNPrice, FNAmnt)"
                tSql &= ControlChars.CrLf & "AS "
                tSql &= ControlChars.CrLf & "(SELECT A.FTOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId, ISNULL(SUM(A.FNQuantity),0) AS FNQuantity, ISNULL(SUM(A.FNPrice),0) AS FNPrice, ISNULL(SUM(A.FNAmt),0) AS FNAmnt"
                tSql &= ControlChars.CrLf & " FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS A"
                tSql &= ControlChars.CrLf & " WHERE A.FTOrderNo = '" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
                tSql &= ControlChars.CrLf & " GROUP BY A.FTOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId"
                tSql &= ControlChars.CrLf & " )"
                tSql &= ControlChars.CrLf & " UPDATE A"
                tSql &= ControlChars.CrLf & " SET A.[FTColorway] = ISNULL((SELECT L1.FTMatColorCode FROM HITECH_MASTER.dbo.TMERMMatColor AS L1 WHERE L1.FNHSysMatColorId = A.FNHSysMatColorId ),'')"
                tSql &= ControlChars.CrLf & "    ,A.[FTSizeBreakDown] = ISNULL((SELECT L2.FTMatSizeCode FROM HITECH_MASTER.dbo.TMERMMatSize AS L2 WHERE L2.FNHSysMatSizeId = A.FNHsysMatSizeId),'')"
                tSql &= ControlChars.CrLf & "    ,A.[FNPrice] = B.FNPrice"
                tSql &= ControlChars.CrLf & "    ,A.[FNQuantity] = B.FNQuantity"
                tSql &= ControlChars.CrLf & "    ,A.[FNAmt] = B.FNAmnt"
                tSql &= ControlChars.CrLf & "    ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                tSql &= ControlChars.CrLf & "    ,A.[FDUpdDate] = " & HI.UL.ULDate.FormatDateDB
                tSql &= ControlChars.CrLf & "    ,A.[FTUpdTime] = " & HI.UL.ULDate.FormatTimeDB
                tSql &= ControlChars.CrLf & " FROM [HITECH_MERCHAN].[dbo].[TMERTOrder_BreakDown] AS A LEFT JOIN cteOrderBreakdown AS B ON A.FNHSysMatColorId = B.FNHSysMatColorId"
                tSql &= ControlChars.CrLf & " AND A.FNHSysMatSizeId = B.FNHSysMatSizeId"
                tSql &= ControlChars.CrLf & " WHERE A.[FTOrderNo] = '" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
                tSql &= ControlChars.CrLf & " AND A.FTOrderNo = B.FTOrderNo;"

                HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

                Dim oStrBuilder As New System.Text.StringBuilder()

                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("UPDATE A")
                oStrBuilder.AppendLine("SET A.FNSubOrderQty = B.FNQuantity")
                oStrBuilder.AppendLine("   ,A.FNSubOrderAmt = B.FNAmt")
                oStrBuilder.AppendLine("   ,A.FNSubOrderExtraQty = B.FNSubOrderExtraQty")
                oStrBuilder.AppendLine("   ,A.FNSubOrderExtraAmt = B.FNSubOrderExtraAmt")
                oStrBuilder.AppendLine("   ,A.FTUpdUser =N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'")
                oStrBuilder.AppendLine(String.Format("   ,A.FDUpdDate = {0}", HI.UL.ULDate.FormatDateDB))
                oStrBuilder.AppendLine(String.Format("   ,A.FTUpdTime = {0}", HI.UL.ULDate.FormatTimeDB))
                oStrBuilder.AppendLine("FROM HITECH_MERCHAN.dbo.TMERTOrderSub AS A LEFT JOIN (SELECT M.FTOrderNo, M.FTSubOrderNo, ISNULL(SUM(M.FNQuantity),0) AS FNQuantity, ISNULL(SUM(M.FNAmt),0) AS FNAmt")
                oStrBuilder.AppendLine("                                                            , ISNULL(SUM(M.FNQuantityExtra),0) AS FNSubOrderExtraQty")
                oStrBuilder.AppendLine("                                                            , ISNULL(SUM(M.FNAmntExtra),0) AS FNSubOrderExtraAmt")
                oStrBuilder.AppendLine("                                                      FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS M")
                oStrBuilder.AppendLine("													  WHERE M.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("															AND M.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("													  GROUP BY M.FTOrderNo, M.FTSubOrderNo) AS B ON A.FTOrderNo = B.FTOrderNo")
                oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag().ToString() & "'")
                oStrBuilder.AppendLine("      AND A.FTSubOrderNo = B.FTSubOrderNo;")

                tSql = ""
                tSql = oStrBuilder.ToString()

                HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

                HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, Me.Text)

            End If

            Me.FTColorway.Properties.Tag = ""
            Me.FTColorway.Text = ""
            Me.FTSizeBreakDown.Properties.Tag = ""
            Me.FTSizeBreakDown.Text = ""

            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)

            REM Call W_PRCbShowBrowseDataSubOrderBreakdownInfo(Me.FTSubOrderNo.Properties.Tag.ToString())
            Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(Me.FTSubOrderNo.Properties.Tag.ToString())
            Call W_PRCbShowBrowseDataCurrencyInfo()
            Call W_PRCbShowBrowseDataOrderBreakdownInfo()
            Call W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt()

            Me.FTColorway.Properties.Tag = nFNColorway_Id
            Me.FTColorway.Text = tFTColorway_Code
            Me.FTColorway_None.Text = tFTColorway_Text

            Me.FTSizeBreakDown.Focus()

            Return True
        Catch ex As Exception

            Return False
        End Try

    End Function

    Private Function W_PRCbDeleteSubOrderDT() As Boolean
        '...delete breakdown sub order
        Try
            If Me.FTColorway.Properties.Tag.ToString() = "" Then Return False
            If Me.FTSizeBreakDown.Properties.Tag.ToString() = "" Then Return False
            If Me.FTSubOrderNo.Properties.Tag.ToString() = "" Then Return False
            If Me.FTOrderNo.Properties.Tag.ToString() = "" Then Return False

            Dim tFTOrderNo As String
            Dim tFTSubOrderNo As String

            tFTOrderNo = Me.FTOrderNo.Properties.Tag.ToString().Trim()
            tFTSubOrderNo = Me.FTSubOrderNo.Properties.Tag.ToString().Trim()

            Dim tSql As String
            Dim oStrBuilder As New System.Text.StringBuilder()

            Dim nValidateColorwayBreakdown As Double

            tSql = ""
            tSql = "SELECT ISNULL(SUM(A.FNQuantity),0) AS FNQuantitySumColorway"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A WITH(NOLOCK)"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
            tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"
            tSql &= Environment.NewLine & "      AND A.FNHSysMatColorId = " & Val(Me.FTColorway.Properties.Tag.ToString())
            tSql &= Environment.NewLine & "GROUP BY A.FTOrderNo, A.FTSubOrderNo, A.FNHSysMatColorId;"

            nValidateColorwayBreakdown = Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0"))

            If nValidateColorwayBreakdown > 0 Then
                '...atleast one item colorway breakdown quantity is greather than zero

                Dim tTitle As String = ""
                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    tTitle = "Colorway/Size Breakdown"
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    tTitle = "สี/ไซส์"
                Else
                    tTitle = "Colorway/Size Breakdown"
                End If

                Dim tMsgDesc As String = ""
                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    tMsgDesc = "" & Me.FTSubOrderNo.Text & Environment.NewLine & "Color : " & Me.FTColorway_None.Text & Environment.NewLine & "Size : " & Me.FTSizeBreakDown.Text
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    tMsgDesc = "" & Me.FTSubOrderNo.Text & Environment.NewLine & "Color : " & Me.FTColorway_None.Text & Environment.NewLine & "Size : " & Me.FTSizeBreakDown.Text
                Else
                    tMsgDesc = "" & Me.FTSubOrderNo.Text & Environment.NewLine & "Color : " & Me.FTColorway_None.Text & Environment.NewLine & "Size : " & Me.FTSizeBreakDown.Text
                End If

                If Not HI.MG.ShowMsg.mConfirmProcess(MG.ShowMsg.ProcessType.mDelete, tMsgDesc, tTitle) = True Then
                    Me.FTSubOrderNo.Focus()
                    Return False
                End If

                HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
                HI.Conn.SQLConn.SqlConnectionOpen()
                HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
                HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction

                tSql = ""
                tSql = "DELETE A"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                tSql &= Environment.NewLine & "       AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"
                tSql &= Environment.NewLine & "       AND A.[FNHSysMatColorId] = " & Val(Me.FTColorway.Properties.Tag.ToString())
                tSql &= Environment.NewLine & "       AND A.[FNHSysMatSizeId] = " & Val(Me.FTSizeBreakDown.Properties.Tag.ToString())

                If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                    HI.Conn.SQLConn.Tran.Rollback()
                    HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                    HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                    Return False
                End If

                tSql = ""
                tSql = "DELETE A "
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub_Bundle] AS A"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"
                tSql &= Environment.NewLine & "      AND A.FTColorway = N'" & HI.UL.ULF.rpQuoted(Me.FTColorway.Text.Trim) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSizeBreakDown = N'" & HI.UL.ULF.rpQuoted(Me.FTSizeBreakDown.Text.Trim) & "';"

                If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                    HI.Conn.SQLConn.Tran.Rollback()
                    HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                    HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                    Return False
                End If

                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("DELETE L1")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS L1")
                oStrBuilder.AppendLine("WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'")
                oStrBuilder.AppendLine("      AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'")
                oStrBuilder.AppendLine("      AND NOT EXISTS (SELECT DISTINCT L2.FNHSysMatSizeId AS FNHSysMatSizeId")
                oStrBuilder.AppendLine("                      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L2 WITH(NOLOCK)")
                oStrBuilder.AppendLine("                      WHERE L2.FTOrderNo = L1.FTOrderNo")
                oStrBuilder.AppendLine("                            AND L2.FTSubOrderNo = L1.FTSubOrderNo")
                oStrBuilder.AppendLine("                            AND L2.FNHSysMatSizeId = L1.FNHSysMatSizeId);")

                tSql = ""
                tSql = oStrBuilder.ToString()

                If HI.Conn.SQLConn.ExecuteTran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                    HI.Conn.SQLConn.Tran.Rollback()
                    HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                    HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                    Return False
                End If


                HI.Conn.SQLConn.Tran.Commit()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

            Else
                Dim tMsgDescDeleteColorway As String = "", tTitleDeleteColorway As String = ""

                Select Case HI.ST.Lang.Language
                    Case HI.ST.Lang.eLang.EN, HI.ST.Lang.eLang.KM, HI.ST.Lang.eLang.VT
                        tTitleDeleteColorway = "Colorway/Size Breakdown"
                        tMsgDescDeleteColorway = String.Format("This colorway {0} breakdown quantity is equal zero or blank", Me.FTColorway.Text & " : " & Me.FTColorway_None.Text) & Environment.NewLine & "Are you sure, do you want to delete colorway ?"
                    Case HI.ST.Lang.eLang.TH
                        tTitleDeleteColorway = "สี/ไซส์"
                        tMsgDescDeleteColorway = String.Format("รายการ Colorway {0} นี้ยังไม่มีการกำหนดรายการจำนวน Breakdwon หรือจำนวน Breakdown เป็นศูนย์", Me.FTColorway.Text & " : " & Me.FTColorway_None.Text) & Environment.NewLine & "ท่านต้องการลบรายการ Colorway นี้ใช่หรือไม่ ?"
                End Select

                If Not HI.MG.ShowMsg.mConfirmProcess(MG.ShowMsg.ProcessType.mDelete, tMsgDescDeleteColorway, tTitleDeleteColorway) = True Then
                    Me.FTSubOrderNo.Focus()
                    Return False
                End If

                '...this colorway breakdown quantity is equal zero or blank
                HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
                HI.Conn.SQLConn.SqlConnectionOpen()
                HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
                HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction

                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("DELETE A")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A")
                oStrBuilder.AppendLine(String.Format("WHERE A.FTOrderNo = N'{0}'", HI.UL.ULF.rpQuoted(tFTOrderNo)))
                oStrBuilder.AppendLine(String.Format("      AND A.FTSubOrderNo = N'{0}'", HI.UL.ULF.rpQuoted(tFTSubOrderNo)))
                oStrBuilder.AppendLine(String.Format("      AND A.FNHSysMatColorId = {0};", Val(Me.FTColorway.Properties.Tag.ToString())))

                tSql = ""
                tSql = oStrBuilder.ToString()

                If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                    HI.Conn.SQLConn.Tran.Rollback()
                    HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                    HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                    Return False
                End If

                HI.Conn.SQLConn.Tran.Commit()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("DELETE A")
                oStrBuilder.AppendLine(String.Format("FROM [{0}].[dbo].[TMERTOrderSub_Bundle] AS A", HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN)))
                oStrBuilder.AppendLine(String.Format("WHERE A.FTOrderNo = N'{0}'", HI.UL.ULF.rpQuoted(tFTOrderNo)))
                oStrBuilder.AppendLine(String.Format("      AND A.FTSubOrderNo = N'{0}'", HI.UL.ULF.rpQuoted(tFTSubOrderNo)))
                oStrBuilder.AppendLine(String.Format("      AND A.FTColorway = N'{0}'", HI.UL.ULF.rpQuoted(Me.FTColorway.Text.Trim)))
                tSql = ""
                tSql = oStrBuilder.ToString()
                HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("DELETE L1")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS L1")
                oStrBuilder.AppendLine("WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'")
                oStrBuilder.AppendLine("      AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'")
                oStrBuilder.AppendLine("      AND NOT EXISTS (SELECT DISTINCT L2.FNHSysMatSizeId AS FNHSysMatSizeId")
                oStrBuilder.AppendLine("                      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L2 WITH(NOLOCK)")
                oStrBuilder.AppendLine("                      WHERE L2.FTOrderNo = L1.FTOrderNo")
                oStrBuilder.AppendLine("                            AND L2.FTSubOrderNo = L1.FTSubOrderNo")
                oStrBuilder.AppendLine("                            AND L2.FNHSysMatSizeId = L1.FNHSysMatSizeId);")
                tSql = ""
                tSql = oStrBuilder.ToString()

                HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

            End If

            '...UPDATE HITECH_MERCHAN.dbo.TMERTOrderSub
            '=================================================================================================================================================================================================
            'oStrBuilder.Remove(0, oStrBuilder.Length)

            'oStrBuilder.AppendLine("UPDATE A")
            'oStrBuilder.AppendLine("SET A.FNSubOrderQty = B.FNQuantity")
            'oStrBuilder.AppendLine("   ,A.FNSubOrderAmt = B.FNAmt")
            'oStrBuilder.AppendLine("   ,A.FNSubOrderExtraQty = B.FNSubOrderExtraQty")
            'oStrBuilder.AppendLine("   ,A.FNSubOrderExtraAmt = B.FNSubOrderExtraAmt")
            'oStrBuilder.AppendLine("   ,A.FTUpdUser =N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'")
            'oStrBuilder.AppendLine(String.Format("   ,A.FDUpdDate = {0}", HI.UL.ULDate.FormatDateDB))
            'oStrBuilder.AppendLine(String.Format("   ,A.FTUpdTime = {0}", HI.UL.ULDate.FormatTimeDB))
            'oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A LEFT JOIN (SELECT M.FTOrderNo, M.FTSubOrderNo, ISNULL(SUM(M.FNQuantity),0) AS FNQuantity, ISNULL(SUM(M.FNAmt),0) AS FNAmt")
            'oStrBuilder.AppendLine("                                                                                                                  , ISNULL(SUM(M.FNQuantityExtra),0) AS FNSubOrderExtraQty")
            'oStrBuilder.AppendLine("                                                                                                                  , ISNULL(SUM(M.FNAmntExtra),0) AS FNSubOrderExtraAmt")
            'oStrBuilder.AppendLine("                                                                                                             FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS M")
            'oStrBuilder.AppendLine("													                                                         WHERE M.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'")
            'oStrBuilder.AppendLine("															                                                       AND M.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'")
            'oStrBuilder.AppendLine("													                                                         GROUP BY M.FTOrderNo, M.FTSubOrderNo) AS B ON A.FTOrderNo = B.FTOrderNo")
            'oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'")
            'oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'")
            'oStrBuilder.AppendLine("      AND A.FTSubOrderNo = B.FTSubOrderNo;")

            'tSql = ""
            'tSql = oStrBuilder.ToString()

            'HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)


            REM 2014/12/18 drop field TMERTOrderSub Amount, Qty
            'oStrBuilder.AppendLine("UPDATE A")
            'oStrBuilder.AppendLine("SET A.FNSubOrderQty = B.FNQuantity")
            'oStrBuilder.AppendLine("   ,A.FNSubOrderAmt = B.FNAmt")
            'oStrBuilder.AppendLine("   ,A.FNSubOrderExtraQty = B.FNSubOrderExtraQty")
            'oStrBuilder.AppendLine("   ,A.FNSubOrderExtraAmt = B.FNSubOrderExtraAmt")
            'oStrBuilder.AppendLine("   ,A.FNSubOrderGarmentTestQty = B.FNSubOrderGarmentTestQty")
            'oStrBuilder.AppendLine("   ,A.FNSubOrderGarmentTestAmnt = B.FNSubOrderGarmentTestAmnt")
            'oStrBuilder.AppendLine("   ,A.FTUpdUser = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'")
            'oStrBuilder.AppendLine(String.Format("   ,A.FDUpdDate = {0}", HI.UL.ULDate.FormatDateDB))
            'oStrBuilder.AppendLine(String.Format("   ,A.FTUpdTime = {0}", HI.UL.ULDate.FormatTimeDB))
            'oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS A LEFT JOIN (SELECT M.FTOrderNo, M.FTSubOrderNo, ISNULL(SUM(M.FNQuantity),0) AS FNQuantity, ISNULL(SUM(M.FNAmt),0) AS FNAmt")
            'oStrBuilder.AppendLine("                                                                                                                  , ISNULL(SUM(M.FNQuantityExtra),0) AS FNSubOrderExtraQty")
            'oStrBuilder.AppendLine("                                                                                                                  , ISNULL(SUM(M.FNAmntExtra),0) AS FNSubOrderExtraAmt")
            'oStrBuilder.AppendLine("                                                                                                                  , ISNULL(SUM(M.FNGarmentQtyTest), 0) AS FNSubOrderGarmentTestQty")
            'oStrBuilder.AppendLine("                                                                                                                  , ISNULL(SUM(M.FNAmntQtyTest), 0) AS FNSubOrderGarmentTestAmnt")
            'oStrBuilder.AppendLine("                                                                                                             FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS M WITH(NOLOCK)")
            'oStrBuilder.AppendLine("													                                                         WHERE M.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            'oStrBuilder.AppendLine("															                                                       AND M.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'")
            'oStrBuilder.AppendLine("													                                                         GROUP BY M.FTOrderNo, M.FTSubOrderNo) AS B ON A.FTOrderNo = B.FTOrderNo")
            'oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'")
            'oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'")
            'oStrBuilder.AppendLine("      AND A.FTSubOrderNo = B.FTSubOrderNo;")
            'tSql = ""
            'tSql = oStrBuilder.ToString()

            'HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

            '=================================================================================================================================================================================================
            REM 2014/12/16 HITECH_MERCHAN..TMERTOrder_BreakDown NOT USE
            'Call UpdateOrderBreakDown(FTOrderNo.Text, Integer.Parse(Val(Me.FTColorway.Properties.Tag.ToString())), Integer.Parse(Val(Me.FTSizeBreakDown.Properties.Tag.ToString())))

            '=================================================================================================================================================================================================

            REM 2014/12/18
            'Call UpdateOrderQty()

            tSql = "  INSERT INTO  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTSeasonCMPrice]  "
            tSql &= Environment.NewLine & " (FNHSysStyleId,FNHSysSeasonId,FNCM,FNCMDisPer,FNCMDisAmt,FNNetCM,FNCostTransport)"
            tSql &= Environment.NewLine & " SELECT XSX.FNHSysStyleId, XSX.FNHSysSeasonId, XSX.FNCM, XSX.FNCMDisPer, XSX.FNCMDisAmt,XSX.FNNetCM, XSX.FNCostTransport"
            tSql &= Environment.NewLine & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTSeasonCMPrice] AS STM "
            tSql &= Environment.NewLine & "     RIGHT OUTER JOIN (SELECT B2.FNHSysStyleId,B2.FNHSysSeasonId,MAX(BB.FNCMDisAmt) AS FNCMDisAmt"
            tSql &= Environment.NewLine & " ,MAX(ST.FNCM) AS FNCM,MAX(ST.FNCMDisPer) AS FNCMDisPer,MAX(ST.FNNetCM) AS FNNetCM,MAX(ST.FNCostTransport) AS FNCostTransport"
            tSql &= Environment.NewLine & "      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B2 WITH(NOLOCK) "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS ST  WITH(NOLOCK) ON B2.FNHSysStyleId = ST.FNHSysStyleId "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B3  WITH(NOLOCK) ON B2.FNHSysStyleId = B3.FNHSysStyleId AND B2.FNHSysSeasonId=B3.FNHSysSeasonId"
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS B4 WITH(NOLOCK) ON B3.FTOrderNo = B4.FTOrderNo "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS BB WITH(NOLOCK) ON B4.FTOrderNo = BB.FTOrderNo AND B4.FTSubOrderNo = BB.FTSubOrderNo "
            tSql &= Environment.NewLine & "     WHERE  B2.FTOrderNo =N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            '  If Me.FNHSysCustId.Properties.Tag.ToString = "1310210002" Then
            tSql &= Environment.NewLine & "  AND B4.FNHSysCurId IN (SELECT FNHSysCurId FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TFINMCurrency AS C WITH(NOLOCK) WHERE ISNULL(FTStateLocal,'0') <>'1')"
            ' End If

            tSql &= Environment.NewLine & "   GROUP BY B2.FNHSysStyleId,B2.FNHSysSeasonId) AS XSX"
            tSql &= Environment.NewLine & " ON  STM.FNHSysStyleId=XSX.FNHSysStyleId AND STM.FNHSysSeasonId=XSX.FNHSysSeasonId"
            tSql &= Environment.NewLine & "  WHERE  STM.FNHSysStyleId IS NULL"
            HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

            tSql = "  UPDATE STM"
            tSql &= Environment.NewLine & "   SET FNCMDisAmt=XSX.FNCMDisAmt"
            tSql &= Environment.NewLine & "      ,FNNetCM = (STM.FNCM - XSX.FNCMDisAmt ) "
            tSql &= Environment.NewLine & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTSeasonCMPrice] AS STM "
            tSql &= Environment.NewLine & "   , (SELECT B2.FNHSysStyleId,B2.FNHSysSeasonId,MAX(BB.FNCMDisAmt) AS FNCMDisAmt"
            tSql &= Environment.NewLine & " ,MAX(ST.FNCM) AS FNCM,MAX(ST.FNCMDisPer) AS FNCMDisPer,MAX(ST.FNNetCM) AS FNNetCM,MAX(ST.FNCostTransport) AS FNCostTransport"
            tSql &= Environment.NewLine & "      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B2 WITH(NOLOCK) "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS ST  WITH(NOLOCK) ON B2.FNHSysStyleId = ST.FNHSysStyleId "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B3  WITH(NOLOCK) ON B2.FNHSysStyleId = B3.FNHSysStyleId AND B2.FNHSysSeasonId=B3.FNHSysSeasonId"
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS B4 WITH(NOLOCK) ON B3.FTOrderNo = B4.FTOrderNo "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS BB WITH(NOLOCK) ON B4.FTOrderNo = BB.FTOrderNo AND B4.FTSubOrderNo = BB.FTSubOrderNo "
            tSql &= Environment.NewLine & "     WHERE  B2.FTOrderNo =N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "' "

            ' If Me.FNHSysCustId.Properties.Tag.ToString = "1310210002" Then
            tSql &= Environment.NewLine & "  AND B4.FNHSysCurId IN (SELECT FNHSysCurId FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TFINMCurrency AS C WITH(NOLOCK) WHERE ISNULL(FTStateLocal,'0') <>'1')"
            ' End If

            tSql &= Environment.NewLine & "   GROUP BY B2.FNHSysStyleId,B2.FNHSysSeasonId) AS XSX"
            tSql &= Environment.NewLine & " WHERE  STM.FNHSysStyleId=XSX.FNHSysStyleId AND STM.FNHSysSeasonId=XSX.FNHSysSeasonId"

            HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

            tSql = "  UPDATE STM"
            tSql &= Environment.NewLine & "   SET FNCMDisAmt=XSX.FNCMDisAmt"
            tSql &= Environment.NewLine & "      ,FNNetCM = (STM.FNCM - XSX.FNCMDisAmt ) "
            tSql &= Environment.NewLine & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS STM "
            tSql &= Environment.NewLine & "   , (SELECT B2.FNHSysStyleId,MAX(ST.FNCMDisPer) AS FNCMDisPer ,MAX(ST.FNCMDisAmt) AS FNCMDisAmt "
            tSql &= Environment.NewLine & "      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B2 WITH(NOLOCK) "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS ST  WITH(NOLOCK) ON B2.FNHSysStyleId = ST.FNHSysStyleId "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS B3  WITH(NOLOCK) ON B2.FNHSysStyleId = B3.FNHSysStyleId "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS B4 WITH(NOLOCK) ON B3.FTOrderNo = B4.FTOrderNo "
            tSql &= Environment.NewLine & "           INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS BB WITH(NOLOCK) ON B4.FTOrderNo = BB.FTOrderNo AND B4.FTSubOrderNo = BB.FTSubOrderNo "
            tSql &= Environment.NewLine & "     WHERE  B2.FTOrderNo =N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"

            ' If Me.FNHSysCustId.Properties.Tag.ToString = "1310210002" Then
            tSql &= Environment.NewLine & "  AND B4.FNHSysCurId IN (SELECT FNHSysCurId FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TFINMCurrency AS C WITH(NOLOCK) WHERE ISNULL(FTStateLocal,'0') <>'1')"
            ' End If

            tSql &= Environment.NewLine & "   GROUP BY B2.FNHSysStyleId) AS XSX"
            tSql &= Environment.NewLine & " WHERE  STM.FNHSysStyleId=XSX.FNHSysStyleId "

            HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

            HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mDelete, Me.Text)

            Me.FTColorway.Properties.Tag = ""
            Me.FTColorway.Text = ""

            Me.FTSizeBreakDown.Properties.Tag = ""
            Me.FTSizeBreakDown.Text = ""

            If FTStateOrderApp.Checked Then
                If FTStateCutting.Checked = False Then
                    tSql = " Update    [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder Set FTStateOrderApp='0' Where FTOrderNo =N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                    HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)
                    FTStateOrderApp.Checked = False
                End If
            End If

            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)

            Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(tFTSubOrderNo)
            Call W_PRCbShowBrowseDataCurrencyInfo()
            Call W_PRCbShowBrowseDataOrderBreakdownInfo()
            Call W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt()
            Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(tFTOrderNo, tFTSubOrderNo)
            Call PROC_SETxShowBrowsePackingCartonInfo()

            Me.FTColorway.Focus()
            Me.FTColorway.SelectionStart = 0
            Me.FTColorway.SelectionLength = Len(Me.FTColorway.Text)
            Me.FTColorway.SelectAll()

            Return True
        Catch ex As Exception
            HI.Conn.SQLConn.Tran.Rollback()
            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
            Return False
        End Try

    End Function

    Private Function W_PRCbDeleteSubOrderDT_REM_20140620() As Boolean
        '...delete breakdown sub order
        Try
            If Me.FTColorway.Properties.Tag.ToString() = "" Then Return False
            If Me.FTSizeBreakDown.Properties.Tag.ToString() = "" Then Return False
            If Me.FTSubOrderNo.Properties.Tag.ToString() = "" Then Return False
            If Me.FTOrderNo.Properties.Tag.ToString() = "" Then Return False

            Dim tFTOrderNo As String
            Dim tFTSubOrderNo As String

            tFTOrderNo = Me.FTOrderNo.Properties.Tag.ToString().Trim()
            tFTSubOrderNo = Me.FTSubOrderNo.Properties.Tag.ToString().Trim()

            Dim tTitle As String = ""
            If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                tTitle = "Colorway/Size Breakdown"
            ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                tTitle = "สี/ไซส์"
            Else
                tTitle = "Colorway/Size Breakdown"
            End If

            Dim tMsgDesc As String = ""
            If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                tMsgDesc = "" & Me.FTSubOrderNo.Text & Environment.NewLine & "Color : " & Me.FTColorway_None.Text & Environment.NewLine & "Size : " & Me.FTSizeBreakDown.Text
            ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                tMsgDesc = "" & Me.FTSubOrderNo.Text & Environment.NewLine & "Color : " & Me.FTColorway_None.Text & Environment.NewLine & "Size : " & Me.FTSizeBreakDown.Text
            Else
                tMsgDesc = "" & Me.FTSubOrderNo.Text & Environment.NewLine & "Color : " & Me.FTColorway_None.Text & Environment.NewLine & "Size : " & Me.FTSizeBreakDown.Text
            End If

            If Not HI.MG.ShowMsg.mConfirmProcess(MG.ShowMsg.ProcessType.mDelete, tMsgDesc, tTitle) = True Then
                Me.FTSubOrderNo.Focus()
                Return False
            End If

            Dim tSql As String

            HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
            HI.Conn.SQLConn.SqlConnectionOpen()
            HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
            HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction

            tSql = ""
            tSql = "DELETE A"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
            tSql &= Environment.NewLine & "       AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"
            tSql &= Environment.NewLine & "       AND A.[FNHSysMatColorId] = " & Val(Me.FTColorway.Properties.Tag.ToString())
            tSql &= Environment.NewLine & "       AND A.[FNHSysMatSizeId] = " & Val(Me.FTSizeBreakDown.Properties.Tag.ToString())

            If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                Return False
            End If

            Dim oStrBuilder As New System.Text.StringBuilder()

            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("DELETE L1")
            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS L1")
            oStrBuilder.AppendLine("WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'")
            oStrBuilder.AppendLine("      AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'")
            oStrBuilder.AppendLine("      AND NOT EXISTS (SELECT DISTINCT L2.FNHSysMatSizeId AS FNHSysMatSizeId")
            oStrBuilder.AppendLine("                      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L2 WITH(NOLOCK)")
            oStrBuilder.AppendLine("                      WHERE L2.FTOrderNo = L1.FTOrderNo")
            oStrBuilder.AppendLine("                            AND L2.FTSubOrderNo = L1.FTSubOrderNo")
            oStrBuilder.AppendLine("                            AND L2.FNHSysMatSizeId = L1.FNHSysMatSizeId);")

            tSql = ""
            tSql = oStrBuilder.ToString()

            If HI.Conn.SQLConn.ExecuteTran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                Return False
            End If

            HI.Conn.SQLConn.Tran.Commit()
            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

            '...UPDATE HITECH_MERCHAN.dbo.TMERTOrderSub
            '=================================================================================================================================================================================================
            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("UPDATE A")
            oStrBuilder.AppendLine("SET A.FNSubOrderQty = B.FNQuantity")
            oStrBuilder.AppendLine("   ,A.FNSubOrderAmt = B.FNAmt")
            oStrBuilder.AppendLine("   ,A.FNSubOrderExtraQty = B.FNSubOrderExtraQty")
            oStrBuilder.AppendLine("   ,A.FNSubOrderExtraAmt = B.FNSubOrderExtraAmt")
            oStrBuilder.AppendLine("   ,A.FTUpdUser =N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'")
            oStrBuilder.AppendLine(String.Format("   ,A.FDUpdDate = {0}", HI.UL.ULDate.FormatDateDB))
            oStrBuilder.AppendLine(String.Format("   ,A.FTUpdTime = {0}", HI.UL.ULDate.FormatTimeDB))
            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A LEFT JOIN (SELECT M.FTOrderNo, M.FTSubOrderNo, ISNULL(SUM(M.FNQuantity),0) AS FNQuantity, ISNULL(SUM(M.FNAmt),0) AS FNAmt")
            oStrBuilder.AppendLine("                                                                                                                  , ISNULL(SUM(M.FNQuantityExtra),0) AS FNSubOrderExtraQty")
            oStrBuilder.AppendLine("                                                                                                                  , ISNULL(SUM(M.FNAmntExtra),0) AS FNSubOrderExtraAmt")
            oStrBuilder.AppendLine("                                                                                                             FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS M")
            oStrBuilder.AppendLine("													                                                         WHERE M.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'")
            oStrBuilder.AppendLine("															                                                       AND M.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'")
            oStrBuilder.AppendLine("													                                                         GROUP BY M.FTOrderNo, M.FTSubOrderNo) AS B ON A.FTOrderNo = B.FTOrderNo")
            oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'")
            oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'")
            oStrBuilder.AppendLine("      AND A.FTSubOrderNo = B.FTSubOrderNo;")

            tSql = ""
            tSql = oStrBuilder.ToString()

            HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)
            '=================================================================================================================================================================================================

            '...UPDATE HITECH_MERCHAN.dbo.TMERTOrder

            '...UPDATE HITECH_MERCHAN.dbo.TMERTOrder_BreakDown
            '=================================================================================================================================================================================================
            tSql = ""
            tSql = ";WITH cteOrderBreakdown (FTOrderNo, FNHSysMatColorId, FNHSysMatSizeId, FNQuantity, FNPrice, FNAmnt)"
            tSql &= ControlChars.CrLf & "AS "
            tSql &= ControlChars.CrLf & "(SELECT A.FTOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId, ISNULL(SUM(A.FNQuantity),0) AS FNQuantity, ISNULL(SUM(A.FNPrice),0) AS FNPrice, ISNULL(SUM(A.FNAmt),0) AS FNAmnt"
            tSql &= ControlChars.CrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A"
            tSql &= ControlChars.CrLf & " WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
            tSql &= ControlChars.CrLf & " GROUP BY A.FTOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId"
            tSql &= ControlChars.CrLf & " )"
            tSql &= ControlChars.CrLf & " UPDATE A"
            tSql &= ControlChars.CrLf & " SET A.[FTColorway] = ISNULL((SELECT L1.FTMatColorCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS L1 WHERE L1.FNHSysMatColorId = A.FNHSysMatColorId ),'')"
            tSql &= ControlChars.CrLf & "    ,A.[FTSizeBreakDown] = ISNULL((SELECT L2.FTMatSizeCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS L2 WHERE L2.FNHSysMatSizeId = A.FNHsysMatSizeId),'')"
            tSql &= ControlChars.CrLf & "    ,A.[FNPrice] = B.FNPrice"
            tSql &= ControlChars.CrLf & "    ,A.[FNQuantity] = B.FNQuantity"
            tSql &= ControlChars.CrLf & "    ,A.[FNAmt] = B.FNAmnt"
            tSql &= ControlChars.CrLf & "    ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
            tSql &= ControlChars.CrLf & "    ,A.[FDUpdDate] = " & HI.UL.ULDate.FormatDateDB
            tSql &= ControlChars.CrLf & "    ,A.[FTUpdTime] = " & HI.UL.ULDate.FormatTimeDB
            tSql &= ControlChars.CrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder_BreakDown] AS A LEFT JOIN cteOrderBreakdown AS B ON A.FNHSysMatColorId = B.FNHSysMatColorId"
            tSql &= ControlChars.CrLf & " AND A.FNHSysMatSizeId = B.FNHSysMatSizeId"
            tSql &= ControlChars.CrLf & " WHERE A.[FTOrderNo] = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
            tSql &= ControlChars.CrLf & " AND A.FTOrderNo = B.FTOrderNo;"

            HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

            tSql = ""
            tSql = "DELETE L1"
            tSql &= Environment.NewLine & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder_BreakDown] AS L1"
            tSql &= Environment.NewLine & "WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
            tSql &= Environment.NewLine & "      AND NOT EXISTS (SELECT DISTINCT A.FNHSysMatColorId, A.FNHSysMatSizeId"
            tSql &= Environment.NewLine & "                      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A"
            tSql &= Environment.NewLine & "                      WHERE A.FTOrderNo = L1.FTOrderNo"
            tSql &= Environment.NewLine & "                            AND A.FNHSysMatColorId = L1.FNHSysMatColorId"
            tSql &= Environment.NewLine & "                            AND A.FNHSysMatSizeId = L1.FNHSysMatSizeId);"

            HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)
            '=================================================================================================================================================================================================

            HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mDelete, Me.Text)

            Me.FTColorway.Properties.Tag = ""
            Me.FTColorway.Text = ""

            Me.FTSizeBreakDown.Properties.Tag = ""
            Me.FTSizeBreakDown.Text = ""

            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)

            Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(tFTSubOrderNo)
            Call W_PRCbShowBrowseDataCurrencyInfo()
            Call W_PRCbShowBrowseDataOrderBreakdownInfo()
            Call W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt()
            Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(tFTOrderNo, tFTSubOrderNo)

            Me.FTColorway.Focus()
            Me.FTColorway.SelectionStart = 0
            Me.FTColorway.SelectionLength = Len(Me.FTColorway.Text)
            Me.FTColorway.SelectAll()

            Return True
        Catch ex As Exception
            HI.Conn.SQLConn.Tran.Rollback()
            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
            Return False
        End Try

    End Function

    Private Function W_PRCbClearBreakdownSubOrderDT() As Boolean
        Try
            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)
            REM Call W_PRCbShowBrowseDataSubOrderBreakdownInfo(Me.FTSubOrderNo.Properties.Tag.ToString())
            Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(Me.FTSubOrderNo.Text.Trim())
            Me.FTColorway.Focus()

            Return True
        Catch ex As Exception
            Return False
        End Try

    End Function

    Private Function W_PRCbSaveSewingInfoFromBomPart() As Boolean
        Try

            Dim _Qry As String = ""
            Dim _dt As DataTable
            Dim _dtData As DataTable
            Dim _dtsize As DataTable
            Dim _FNHSysStyleId As Integer
            _FNHSysStyleId = Integer.Parse(Val(FNHSysStyleId.Properties.Tag.ToString))

            _Qry = " INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_Sew(FTInsUser, FDInsDate, FTInsTime, FTOrderNo, FTSubOrderNo, FNSewSeq"
            _Qry &= vbCrLf & "  , FTSewDescription, FTSewNote, FTImage)"
            _Qry &= vbCrLf & "  SELECT  "
            _Qry &= vbCrLf & " '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
            _Qry &= vbCrLf & "," & HI.UL.ULDate.FormatDateDB & ""
            _Qry &= vbCrLf & "," & HI.UL.ULDate.FormatTimeDB & ""
            _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(FTOrderNo.Text) & "'"
            _Qry &= vbCrLf & ",'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text) & "'"
            _Qry &= vbCrLf & ", ISNULL(("
            _Qry &= vbCrLf & "	SELECT MAX(FNSewSeq) AS FNSewSeq"
            _Qry &= vbCrLf & "FROM TMERTOrderSub_Sew"
            _Qry &= vbCrLf & "	WHERE FTOrderNo='" & HI.UL.ULF.rpQuoted(FTOrderNo.Text) & "'"
            _Qry &= vbCrLf & "	AND FTSubOrderNo='" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text) & "'"
            _Qry &= vbCrLf & "		),0) +"
            _Qry &= vbCrLf & "	Row_number() Over (Order By FTEmbNote) AS FNSeq,FTEmbNote,'',''"
            _Qry &= vbCrLf & " FROM(SELECT FTEmbNote"
            _Qry &= vbCrLf & "   FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTStyle_Part AS A WITH(NOLOCK)"
            _Qry &= vbCrLf & " WHERE  (FNHSysStyleId = " & _FNHSysStyleId & ") AND FTEmbNote <>''"
            _Qry &= vbCrLf & "    UNION"
            _Qry &= vbCrLf & " Select FTPrintNote"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTStyle_Part AS A WITH(NOLOCK)"
            _Qry &= vbCrLf & " WHERE  (FNHSysStyleId = " & _FNHSysStyleId & ") AND FTPrintNote <>''"
            _Qry &= vbCrLf & "  UNION"
            _Qry &= vbCrLf & " Select FTHeatNote"
            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTStyle_Part AS A WITH(NOLOCK)"
            _Qry &= vbCrLf & " WHERE  (FNHSysStyleId = " & _FNHSysStyleId & ") AND FTHeatNote <>''"
            _Qry &= vbCrLf & "  UNION"
            _Qry &= vbCrLf & " Select FTLaserNote"
            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTStyle_Part AS A WITH(NOLOCK)"
            _Qry &= vbCrLf & " WHERE  (FNHSysStyleId = " & _FNHSysStyleId & ") AND FTLaserNote <>''"
            _Qry &= vbCrLf & "   UNION"
            _Qry &= vbCrLf & " Select FTWindowsNote"
            _Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTStyle_Part AS A WITH(NOLOCK)"
            _Qry &= vbCrLf & " WHERE  (FNHSysStyleId = " & _FNHSysStyleId & ") AND FTWindowsNote <>''"
            _Qry &= vbCrLf & "   UNION"
            _Qry &= vbCrLf & " Select FTSizeNote"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTStyle_Part_SizeNote AS A WITH(NOLOCK)"
            _Qry &= vbCrLf & " WHERE  (FNHSysStyleId = " & _FNHSysStyleId & ") AND FTSizeNote <>''"
            _Qry &= vbCrLf & " AND FTSizeBreakDown IN (SELECT DISTINCT FTSizeBreakDown"
            _Qry &= vbCrLf & "  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_BreakDown AS X WITH(NOLOCK)"
            _Qry &= vbCrLf & "  WHERE  FTSubOrderNo='" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text) & "'"
            _Qry &= vbCrLf & "  ) "



            _Qry &= vbCrLf & " GROUP BY FTSizeNote ) AS A "
            _Qry &= vbCrLf & " WHERE NOT(FTEmbNote IN (SELECT FTSewDescription "
            _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_Sew"
            _Qry &= vbCrLf & "	WHERE FTOrderNo='" & HI.UL.ULF.rpQuoted(FTOrderNo.Text) & "'"
            _Qry &= vbCrLf & "	AND FTSubOrderNo='" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text) & "'"
            _Qry &= vbCrLf & " ))"
            _Qry &= vbCrLf & " ORDER BY FTEmbNote "

            If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                Dim tSQLRevised As String

                tSQLRevised = ""
                tSQLRevised = "SELECT TOP 1 A.FTStateApprovedSewing FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                If HI.Conn.SQLConn.GetField(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "1" Then '...revised sewing sequence process
                    tSQLRevised = ""
                    tSQLRevised = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                    tSQLRevised &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                    tSQLRevised &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                    tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                    tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                    tSQLRevised &= Environment.NewLine & "SET @FTRevisedInfoBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "';"
                    tSQLRevised &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                    tSQLRevised &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                    tSQLRevised &= Environment.NewLine & "SELECT @FDRevisedInfoDate = CONVERT(VARCHAR(10), GETDATE(), 111), @FTRevisedInfoTime = CONVERT(VARCHAR(8), GETDATE(), 114)"
                    tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                    tSQLRevised &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                    tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                    tSQLRevised &= Environment.NewLine & "UPDATE A"
                    tSQLRevised &= Environment.NewLine & "SET A.FTStateApprovedSewing = N'0'"
                    tSQLRevised &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                    tSQLRevised &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                    tSQLRevised &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                    If HI.Conn.SQLConn.ExecuteNonQuery(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then

                    End If
                End If

            End If

        Catch ex As Exception

        End Try
    End Function

    Private Function W_PRCbSavepackingInfoFromStylePackingMaster() As Boolean
        Dim cmd As String
        cmd = "  DELETE FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_Pack WHERE FTOrderNo='" & HI.UL.ULF.rpQuoted(FTOrderNo.Text) & "' AND FTSubOrderNo='" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text) & "' "
        cmd &= vbCrLf & "  INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_Pack(  "
        cmd &= vbCrLf & "  FTOrderNo, FTSubOrderNo, FNPackSeq, FTPackDescription, FTPackNote, FTImage, FBImage  )"
        cmd &= vbCrLf & "  Select  A.FTOrderNo,A.FTSubOrderNo,P.FNPackSeq, P.FTPackDescription, P.FTPackNote,'' AS FTImage, P.FBImage "
        cmd &= vbCrLf & "  FROM( Select DISTINCT B.FTOrderNo , B4.FTSubOrderNo, B.FNHSysStyleId, B.FNHSysSeasonId "
        cmd &= vbCrLf & "  From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] As B With(NOLOCK)    "
        cmd &= vbCrLf & "   INNER Join [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] As B4 With(NOLOCK) On B.FTOrderNo = B4.FTOrderNo "
        cmd &= vbCrLf & "    WHERE B.FTOrderNo='" & HI.UL.ULF.rpQuoted(FTOrderNo.Text) & "' AND B4.FTSubOrderNo='" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text) & "' "
        cmd &= vbCrLf & "  ) As A "
        cmd &= vbCrLf & "    INNER Join [HITECH_MERCHAN]..TMERTStyle_Packing As P With(NOLOCK) On A.FNHSysStyleId = P.FNHSysStyleId And A.FNHSysSeasonId = P.FNHSysSeasonId  "

        HI.Conn.SQLConn.ExecuteOnly(cmd, Conn.DB.DataBaseName.DB_MERCHAN)

    End Function
    Private Function W_PRCbSaveSyncronizeBomSheetMerMaterialComponent() As Boolean

        'If Not System.Diagnostics.Debugger.IsAttached = True Then Return False

        Dim bRetSaveSyncronize As Boolean = False

        Try
            Dim tSql As String
            Dim oStrBuilder As New System.Text.StringBuilder()

            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine(String.Format("Declare @FTUserLogin As NVARCHAR(50) = N'{0}';", HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName)))
            oStrBuilder.AppendLine(String.Format("DECLARE @FTOrderNo AS NVARCHAR(30) = N'{0}';", HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim)))
            oStrBuilder.AppendLine(String.Format("DECLARE @FTSubOrderNo AS NVARCHAR(30) = N'{0}';", HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim)))
            oStrBuilder.AppendLine(String.Format("DECLARE @FNHSysStyleId AS int ={0};", Integer.Parse(Val(Me.FNHSysStyleId.Properties.Tag.ToString))))
            oStrBuilder.AppendLine(String.Format("DECLARE @FNHSysSeasonId AS int = {0};", Integer.Parse(Val(Me.FNHSysSeasonId.Properties.Tag.ToString))))
            oStrBuilder.AppendLine(String.Format("MERGE INTO [{0}]..[TMERTOrderSub_Component] AS target", HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN)))
            oStrBuilder.AppendLine("USING (SELECT  A.FNHSysMerMatId, A.FTComponent, @FTOrderNo AS FTOrderNo, @FTSubOrderNo AS FTSubOrderNo, A.FNConSmp, FNPart, ROW_NUMBER() OVER (ORDER BY A.FNMerMatSeq, A.FNPart) AS FNComSeq	  ")
            oStrBuilder.AppendLine(String.Format("       FROM [{0}]..[TMERTStyle_Mat] AS A WITH(NOLOCK)", HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN)))
            oStrBuilder.AppendLine("       WHERE A.FTStateActive = N'1'")
            ' oStrBuilder.AppendLine(String.Format("             AND A.FNHSysStyleId = (SELECT TOP 1 L1.FNHSysStyleId FROM [{0}]..[TMERTOrder] AS L1 WITH(NOLOCK) WHERE L1.FTOrderNo = @FTOrderNo)", HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN)))
            oStrBuilder.AppendLine("  AND  A.FNHSysStyleId  =  @FNHSysStyleId ")
            oStrBuilder.AppendLine("  AND CASE  WHEN A.FTOrderNo  = '-1' THEN @FTOrderNo ELSE A.FTOrderNo  END  = @FTOrderNo ")
            oStrBuilder.AppendLine("  AND CASE  WHEN A.FTSubOrderNo  = '-1' THEN @FTSubOrderNo ELSE A.FTSubOrderNo  END = @FTSubOrderNo    ")
            oStrBuilder.AppendLine("  AND CASE  WHEN ISNULL(A.FNHSysSeasonId,0) <=0  THEN @FNHSysSeasonId  ELSE A.FNHSysSeasonId  END = @FNHSysSeasonId    ")
            oStrBuilder.AppendLine("   ) AS source")
            oStrBuilder.AppendLine(" ON (target.FNHSysMerMatId = source.FNHSysMerMatId)")
            oStrBuilder.AppendLine("  AND (target.FTOrderNo = source.FTOrderNo)")
            oStrBuilder.AppendLine("  AND (target.FTSubOrderNo =source.FTSubOrderNo)")
            oStrBuilder.AppendLine("  AND (target.FNSeq = source.FNComSeq)")
            oStrBuilder.AppendLine("WHEN MATCHED THEN")
            oStrBuilder.AppendLine("     UPDATE SET target.FTComponent  =  source.FTComponent,")
            oStrBuilder.AppendLine("                target.FTUpdUser = @FTUserLogin,")
            oStrBuilder.AppendLine("                target.FDUpdDate = CONVERT(VARCHAR(10),GETDATE(),111),")
            oStrBuilder.AppendLine("                target.FTUpdTime = CONVERT(VARCHAR(8),GETDATE(),114)")
            oStrBuilder.AppendLine("WHEN NOT MATCHED BY target THEN")
            oStrBuilder.AppendLine("     INSERT ([FTInsUser], [FDInsDate], [FTInsTime], FTUpdUser, FDUpdDate, FTUpdTime,")
            oStrBuilder.AppendLine("             [FTOrderNo], [FTSubOrderNo], [FNHSysMerMatId], [FTComponent], [FTRemark], [FNConSmp], [FNPart], [FNSeq])")
            oStrBuilder.AppendLine("     VALUES (@FTUserLogin, CONVERT(VARCHAR(10),GETDATE(),111), CONVERT(VARCHAR(8),GETDATE(),114),")
            oStrBuilder.AppendLine("             NULL, NULL, NULL, @FTOrderNo, @FTSubOrderNo, FNHSysMerMatId, FTComponent, '',FNConSmp,FNPart,FNComSeq)")
            'oStrBuilder.AppendLine("WHEN NOT MATCHED BY source AND (target.FTOrderNo  = @FTOrderNo) AND (target.FTSubOrderNo = @FTSubOrderNo)    THEN")
            'oStrBuilder.AppendLine("     DELETE")
            oStrBuilder.AppendLine("    ;")
            oStrBuilder.AppendLine("  UPDATE  A SET FNSeq = FNNo")
            oStrBuilder.AppendLine("  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Component]  AS A  INNER JOIN ")
            oStrBuilder.AppendLine(" (SELECT ROW_NUMBER() OVER(ORDER BY FNSeq,FNPart) AS FNNo, FNSeq, FTOrderNo, FTSubOrderNo, FNHSysMerMatId, FNPart")
            oStrBuilder.AppendLine("  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Component]  ")
            oStrBuilder.AppendLine("  WHERE FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' ")
            oStrBuilder.AppendLine("        AND FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text.Trim) & "' ")
            oStrBuilder.AppendLine(" ) T1 ON A.FNSeq = T1.FNSeq AND A.FTOrderNo = T1.FTOrderNo AND  A.FTSubOrderNo = T1.FTSubOrderNo AND  A.FNHSysMerMatId = T1.FNHSysMerMatId AND A.FNPart = T1.FNPart ")

            If oStrBuilder.Length > 0 Then
                tSql = ""
                tSql = oStrBuilder.ToString()

                HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
                HI.Conn.SQLConn.SqlConnectionOpen()
                HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
                HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction

                If HI.Conn.SQLConn.ExecuteTran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) <= 0 Then
                    HI.Conn.SQLConn.Tran.Rollback()
                    HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                    HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                Else
                    HI.Conn.SQLConn.Tran.Commit()
                    HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                    HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                    bRetSaveSyncronize = True
                End If

            End If

        Catch ex As Exception
            'If System.Diagnostics.Debugger.IsAttached = True Then
            MsgBox(ex.Message().ToString() & Environment.NewLine & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly + MsgBoxStyle.Information, My.Application.Info.Title)
            'End If
        End Try

        Return bRetSaveSyncronize

    End Function


    Private Function W_PRCbSaveSubOrderComponent() As Boolean
        '...update remark sub order component & syncronize data from bom sheet
        Dim bRetSaveSubOrdComponent As Boolean = False

        Try

            Dim tFTOrderNo As String = Me.FTOrderNo.Text.Trim()
            Dim tFTSubOrderNo As String = Me.FTSubOrderNo.Text.Trim()
            Dim tSql As String, tSqlRevised As String

            tSqlRevised = ""
            tSqlRevised = "SELECT  A.FTOrderNo, A.FTSubOrderNo, A.FNHSysMerMatId, A.FNSeq, A.FNPart, A.FTComponent, A.FTRemark, A.FNConSmp,A.FNDataSeq"
            tSqlRevised &= Environment.NewLine & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Component AS A (NOLOCK)"
            tSqlRevised &= Environment.NewLine & "WHERE  A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "';"

            DTBeforeRevisedComponent = HI.Conn.SQLConn.GetDataTable(tSqlRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            Dim oStrBuilder As New System.Text.StringBuilder()

            oStrBuilder.Remove(0, oStrBuilder.Length)

            With CType(ogdOrderSubComponent.DataSource, DataTable)
                .AcceptChanges()

                For Each R As DataRow In .Rows

                    Dim nFNHSysMerMatId As Integer
                    Dim tFTRemark As String
                    Dim FNSeq As Integer
                    Dim FTComponent As String
                    Dim FNPart As Integer
                    Dim FNConSmp As Double
                    Dim FNDataSeq As Integer

                    nFNHSysMerMatId = Val(R!FNHSysMerMatId.ToString)
                    tFTRemark = R!FTRemark.ToString()
                    FTComponent = R!FTComponent.ToString()
                    FNSeq = Integer.Parse(Val(R!FNSeq.ToString))
                    FNPart = Integer.Parse(Val(R!FNPart.ToString()))
                    FNConSmp = Double.Parse(Val(R!FNConSmp.ToString()))
                    Try
                        FNDataSeq = Integer.Parse(Val(R!FNDataSeq.ToString))
                    Catch ex As Exception

                    End Try

                    '...update remark for sub order no component...
                    oStrBuilder.AppendLine("IF EXISTS(SELECT TOP 1 A.FNHSysMerMatId FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Component] AS A WITH(NOLOCK) WHERE  A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "' AND A.FNSeq = " & FNSeq & "  AND A.FNPart = " & FNPart & " )")
                    oStrBuilder.AppendLine("  BEGIN")
                    oStrBuilder.AppendLine("     UPDATE A")
                    oStrBuilder.AppendLine(String.Format("	 SET A.[FTUpdUser] = N'{0}',", HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName)))
                    oStrBuilder.AppendLine(String.Format("		 A.[FDUpdDate] = {0},", HI.UL.ULDate.FormatDateDB))
                    oStrBuilder.AppendLine(String.Format("		 A.[FTUpdTime] = {0},", HI.UL.ULDate.FormatTimeDB))
                    oStrBuilder.AppendLine(String.Format("		 A.[FTRemark] = N'{0}',", HI.UL.ULF.rpQuoted(tFTRemark)))
                    oStrBuilder.AppendLine(String.Format("		 A.[FTComponent] = N'{0}',", HI.UL.ULF.rpQuoted(FTComponent)))
                    oStrBuilder.AppendLine(String.Format("		 A.[FNConSmp] = {0},", FNConSmp))
                    oStrBuilder.AppendLine(String.Format("		 A.[FNDataSeq] = {0},", FNDataSeq))
                    oStrBuilder.AppendLine(String.Format("		 A.[FNHSysMerMatId] = {0}", nFNHSysMerMatId))
                    oStrBuilder.AppendLine(String.Format("	 FROM [{0}].[dbo].[TMERTOrderSub_Component] AS A", HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN)))
                    oStrBuilder.AppendLine(String.Format("	 WHERE A.FTOrderNo = N'{0}'", HI.UL.ULF.rpQuoted(tFTOrderNo)))
                    oStrBuilder.AppendLine(String.Format("	       AND A.FTSubOrderNo = N'{0}'", HI.UL.ULF.rpQuoted(tFTSubOrderNo)))
                    oStrBuilder.AppendLine(String.Format("	       AND A.FNSeq = {0}", FNSeq))
                    oStrBuilder.AppendLine(String.Format("	       AND A.FNPart = {0}", FNPart))
                    oStrBuilder.AppendLine("  END;")


                Next
            End With

            'For nLoop As Integer = 0 To Me.ogvOrderSubComponent.RowCount - 1

            '    Dim oDataRowComponent As DataRow = Me.ogvOrderSubComponent.GetDataRow(nLoop)
            '    Dim nFNHSysMerMatId As Integer
            '    Dim tFTRemark As String
            '    Dim FNSeq As Integer
            '    Dim FTComponent As String
            '    Dim FNPart As Integer
            '    Dim FNConSmp As Double
            '    Dim FNDataSeq As Integer

            '    nFNHSysMerMatId = Val(Me.ogvOrderSubComponent.GetRowCellValue(nLoop, "FNHSysMerMatId"))
            '    tFTRemark = Me.ogvOrderSubComponent.GetRowCellValue(nLoop, "FTRemark").ToString()
            '    FTComponent = Me.ogvOrderSubComponent.GetRowCellValue(nLoop, "FTComponent").ToString()
            '    FNSeq = Integer.Parse(Me.ogvOrderSubComponent.GetRowCellValue(nLoop, "FNSeq"))
            '    FNPart = Integer.Parse(Me.ogvOrderSubComponent.GetRowCellValue(nLoop, "FNPart"))
            '    FNConSmp = Double.Parse(Me.ogvOrderSubComponent.GetRowCellValue(nLoop, "FNConSmp"))
            '    Try
            '        FNDataSeq = Integer.Parse(Me.ogvOrderSubComponent.GetRowCellValue(nLoop, "FNDataSeq"))
            '    Catch ex As Exception

            '    End Try


            '    If Not oDataRowComponent Is Nothing Then

            '        '...update remark for sub order no component...
            '        oStrBuilder.AppendLine("IF EXISTS(SELECT TOP 1 A.FNHSysMerMatId FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Component] AS A WITH(NOLOCK) WHERE  A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "' AND A.FNSeq = " & FNSeq & "  AND A.FNPart = " & FNPart & " )")
            '        oStrBuilder.AppendLine("  BEGIN")
            '        oStrBuilder.AppendLine("     UPDATE A")
            '        oStrBuilder.AppendLine(String.Format("	 SET A.[FTUpdUser] = N'{0}',", HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName)))
            '        oStrBuilder.AppendLine(String.Format("		 A.[FDUpdDate] = {0},", HI.UL.ULDate.FormatDateDB))
            '        oStrBuilder.AppendLine(String.Format("		 A.[FTUpdTime] = {0},", HI.UL.ULDate.FormatTimeDB))
            '        oStrBuilder.AppendLine(String.Format("		 A.[FTRemark] = N'{0}',", HI.UL.ULF.rpQuoted(tFTRemark)))
            '        oStrBuilder.AppendLine(String.Format("		 A.[FTComponent] = N'{0}',", HI.UL.ULF.rpQuoted(FTComponent)))
            '        oStrBuilder.AppendLine(String.Format("		 A.[FNConSmp] = {0}", FNConSmp))
            '        oStrBuilder.AppendLine(String.Format("		 A.[FNDataSeq] = {0}", FNDataSeq))
            '        oStrBuilder.AppendLine(String.Format("	 FROM [{0}].[dbo].[TMERTOrderSub_Component] AS A", HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN)))
            '        oStrBuilder.AppendLine(String.Format("	 WHERE A.FTOrderNo = N'{0}'", HI.UL.ULF.rpQuoted(tFTOrderNo)))
            '        oStrBuilder.AppendLine(String.Format("	       AND A.FTSubOrderNo = N'{0}'", HI.UL.ULF.rpQuoted(tFTSubOrderNo)))
            '        oStrBuilder.AppendLine(String.Format("	       AND A.FNSeq = {0}", FNSeq))
            '        oStrBuilder.AppendLine(String.Format("	       AND A.FNPart = {0}", FNPart))
            '        oStrBuilder.AppendLine("  END;")

            '    End If

            'Next nLoop

            If oStrBuilder.Length > 0 Then
                tSql = ""
                tSql = oStrBuilder.ToString()

                If HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then

                    tSql = "SELECT TOP 1 A.FTStateApprovedComponent"
                    tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK)"
                    tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "';"

                    If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") = "0" Then
                        DTAfterRevisedComponent = Nothing
                    Else
                        DTAfterRevisedComponent = HI.Conn.SQLConn.GetDataTable(tSqlRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                    End If

                    '...update revised component information
                    '======================================================================================================================================================================================

                    tSqlRevised = ""
                    tSqlRevised = "SELECT TOP 1 A.FTStateApprovedComponent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                    If HI.Conn.SQLConn.GetField(tSqlRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "1" Then '...revised sewing sequence process

                        tSqlRevised = ""
                        tSqlRevised = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                        tSqlRevised &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                        tSqlRevised &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                        tSqlRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                        tSqlRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                        tSqlRevised &= Environment.NewLine & "SET @FTRevisedInfoBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "';"
                        tSqlRevised &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                        tSqlRevised &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                        tSqlRevised &= Environment.NewLine & "SELECT @FDRevisedInfoDate = CONVERT(VARCHAR(10), GETDATE(), 111), @FTRevisedInfoTime = CONVERT(VARCHAR(8), GETDATE(), 114)"
                        tSqlRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                        tSqlRevised &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                        tSqlRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                        tSqlRevised &= Environment.NewLine & "UPDATE A"
                        tSqlRevised &= Environment.NewLine & "SET A.FTStateApprovedComponent = N'0'"
                        tSqlRevised &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                        tSqlRevised &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                        tSqlRevised &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                        If HI.Conn.SQLConn.ExecuteNonQuery(tSqlRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                        End If

                    End If
                    '======================================================================================================================================================================================

                    '...Syncronized data from bom sheet main material component (MERGE BETWEEN TMERTOrderSub_Breakdown & TMERTStyle_Mat)
                    '...save data complete
                    bRetSaveSubOrdComponent = True

                Else

                End If

            End If

        Catch ex As Exception

        End Try

        Return bRetSaveSubOrdComponent

    End Function

    Private Function W_PRCbSaveSubOrderPack() As Boolean
        Try
            If Not W_PRCbVerifyBF_SaveDataSubOrderPack() Then Return False

            Dim tFTImageName$ = ""
            If Not DBNull.Value.Equals(Me.FTImagePacking.Image) And Not Me.FTImagePacking.Image Is Nothing Then
                tFTImageName = Me.FTSubOrderNo.Properties.Tag.ToString() & "_" & Me.FNPackSeq.Value.ToString()
                tFTImageName = Microsoft.VisualBasic.Replace(tFTImageName, "-", "_")
            End If

            Dim tSql$, tSqlRevised$

            tSqlRevised = ""
            tSqlRevised = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNPackSeq, A.FTPackDescription, A.FTPackNote"
            tSqlRevised &= Environment.NewLine & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A (NOLOCK)"
            tSqlRevised &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

            DTBeforeRevisedPack = HI.Conn.SQLConn.GetDataTable(tSqlRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            '--------------------------------------------- Represent Before Revise History Factory Sub Order No. Packing -----------------------------------------------
            tSql = ""
            tSql = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNPackSeq, A.FTPackDescription, A.FTPackNote, A.FTImage"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Pack] AS A WITH(NOLOCK)"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'"
            tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "'"
            tSql &= Environment.NewLine & "      AND A.FNPackSeq = " & CInt(Me.FNPackSeq.Value) & ";"

            oDBdtSubOrderNoPackBF = Nothing
            oDBdtSubOrderNoPackBF = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
            '---------------------------------------------------------------------------------------------------------------------------------------------------------

            Dim oStrBuilder As New System.Text.StringBuilder()

            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("UPDATE A")
            oStrBuilder.AppendLine("SET  A.[FTPackDescription] = N'" & HI.UL.ULF.rpQuoted(Me.FTPackDescription.Text) & "'")
            oStrBuilder.AppendLine("    ,A.[FTPackNote] = N'" & HI.UL.ULF.rpQuoted(Me.FTPackNote.Text) & "'")
            oStrBuilder.AppendLine("    ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'")
            oStrBuilder.AppendLine("    ,A.FTImage = N'" & HI.UL.ULImage.SaveImage(Me.FTImagePacking, tFTImageName, "" & _SystemFilePath & "\OrderNo\SubOrderNo\Packing\") & "'")
            oStrBuilder.AppendLine(String.Format("    ,A.[FDUpdDate] = {0}", HI.UL.ULDate.FormatDateDB))
            oStrBuilder.AppendLine(String.Format("    ,A.[FTUpdTime] = {0}", HI.UL.ULDate.FormatTimeDB))
            oStrBuilder.AppendLine("FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Pack] AS A WITH(NOLOCK)")
            oStrBuilder.AppendLine("WHERE  A.[FTOrderNo] = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("       AND A.[FTSubOrderNo] = '" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine(String.Format("       AND A.[FNPackSeq] = {0}", Me.FNPackSeq.Value))

            tSql = ""
            tSql = oStrBuilder.ToString()

            If HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN) = False Then
                '...add new pack seq / pack description / pack note
                tSql = ""
                tSql = "DECLARE @FNPackSeqMax AS INT;"
                tSql &= Environment.NewLine & "SELECT @FNPackSeqMax = (ISNULL(MAX(A.FNPackSeq),0) + 1)"
                tSql &= Environment.NewLine & "FROM HITECH_MERCHAN.dbo.TMERTOrderSub_Pack AS A"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'"
                tSql &= Environment.NewLine & "--PRINT '@FNPackSeqMax : ' + CONVERT(VARCHAR(10), @FNPackSeqMax);"
                tSql &= Environment.NewLine & "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Pack]([FTOrderNo],[FTSubOrderNo],[FNPackSeq],[FTPackDescription],[FTPackNote],[FTImage]"
                tSql &= Environment.NewLine & "                                                                                                          ,[FTInsUser],[FDInsDate],[FTInsTime]"
                tSql &= Environment.NewLine & " ,[FTUpdUser],[FDUpdDate],[FTUpdTime])"
                tSql &= Environment.NewLine & "VALUES ('" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "','" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "',@FNPackSeqMax,N'" & HI.UL.ULF.rpQuoted(Me.FTPackDescription.Text) & "',N'" & HI.UL.ULF.rpQuoted(Me.FTPackNote.Text) & "'"
                tSql &= Environment.NewLine & ",N'" & HI.UL.ULImage.SaveImage(Me.FTImagePacking, tFTImageName, "" & _SystemFilePath & "\OrderNo\SubOrderNo\Packing\") & "'"
                tSql &= ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB
                tSql &= ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ")"

                HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            Else
                '--------------------------------------------- Represent After Revise History Factory Sub Order No. Packing -----------------------------------------------
                tSql = ""
                tSql = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNPackSeq, A.FTPackDescription, A.FTPackNote, A.FTImage"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Pack] AS A WITH(NOLOCK)"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "'"
                tSql &= Environment.NewLine & "      AND A.FNPackSeq = " & CInt(Me.FNPackSeq.Value) & ";"

                oDBdtSubOrderNoPackAF = Nothing
                oDBdtSubOrderNoPackAF = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                tSql = ""
                tSql = "SELECT TOP 1 A.FTStateApprovedPacking FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "0" Then
                    DTAfterRevisedPack = Nothing
                Else
                    DTAfterRevisedPack = HI.Conn.SQLConn.GetDataTable(tSqlRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                End If
                '---------------------------------------------------------------------------------------------------------------------------------------------------------

                '...Write changed log
                Call PostSaveSubOrderNoPack("[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Pack]", Me.FTOrderNo.Properties.Tag.ToString() & "|" & Me.FTSubOrderNo.Properties.Tag.ToString() & "|" & Me.FNHSysStyleId.Text & "|" & Me.otab.TabPages(Me.otab.SelectedTabPageIndex).Text.ToString() & "|" & Me.FNPackSeq_lbl.Text & " " & CStr(Me.FNPackSeq.Value))

            End If

            'start updateimage--------
            Dim _Qry As String
            HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(HI.Conn.DB.DataBaseName.DB_MERCHAN)
            HI.Conn.SQLConn.SqlConnectionOpen()

            Try

                _Qry = " Update  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_Pack "
                _Qry &= vbCrLf & "  SET FBImage=@FBImage"
                _Qry &= vbCrLf & " WHERE FTOrderNo=@FTOrderNo "
                _Qry &= vbCrLf & " AND FTSubOrderNo=@FTSubOrderNo "
                _Qry &= vbCrLf & " AND FNPackSeq=@FNPackSeq "

                Dim cmd As New SqlCommand(_Qry, HI.Conn.SQLConn.Cnn)
                cmd.Parameters.AddWithValue("@FTOrderNo", FTOrderNo.Text)
                cmd.Parameters.AddWithValue("@FTSubOrderNo", FTSubOrderNo.Text)
                cmd.Parameters.AddWithValue("@FNPackSeq", Me.FNPackSeq.Value)

                Dim data As Byte() = Nothing ' HI.UL.ULImage.ConvertImageToByteArray(Me.FTUserPic.Image, UL.ULImage.PicType.Employee)
                data = HI.UL.ULImage.ConvertImageToByteArray(FTImagePacking.Image, UL.ULImage.PicType.Employee)

                Dim p As New SqlParameter("@FBImage", SqlDbType.Image)
                p.Value = data

                cmd.Parameters.Add(p)
                cmd.ExecuteNonQuery()
                cmd.Parameters.Clear()
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cnn)
            Catch ex As Exception
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cnn)
            End Try
            'end updateimage--------


            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("UPDATE A")
            oStrBuilder.AppendLine("SET A.FNPackSeq = B.FNRePackSeq")
            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A LEFT JOIN (SELECT ROW_NUMBER() OVER(ORDER BY L1.FNPackSeq ASC) AS FNRePackSeq, L1.FNPackSeq, L1.FTOrderNo, L1.FTSubOrderNo")
            oStrBuilder.AppendLine("														                                                          FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS L1")
            oStrBuilder.AppendLine("														                                                          WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("																                                                        AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "') AS B ON A.FTOrderNo = B.FTSubOrderNo AND A.FTSubOrderNo = B.FTSubOrderNo")
            oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("      AND A.FNPackSeq = B.FNPackSeq;")

            tSql = ""
            tSql = oStrBuilder.ToString()

            HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)

            Call W_PRCbShowBrowseDataSubOrderPackInfo()

            Me.FTImagePacking.Image = Nothing

            Me.FTPackDescription.Focus()

            Return True
        Catch ex As Exception

            Return False
        End Try

    End Function

    Private Function PROC_GETbInsertItemPackingSeqNo() As Boolean
        Dim bRet As Boolean = False

        Try
            If Me.ogvOrderSubPack.RowCount > 0 Then
                If Me.FTOrderNo.Text.Trim <> "" Then
                    If Me.FTSubOrderNo.Text.Trim <> "" Then
                        If Me.FNPackSeq.Value > 0 Then
                            If Me.FTPackDescription.Text.Trim <> "" Then
                                Dim numFNSeqPackInsert As Integer

                                numFNSeqPackInsert = Me.FNPackSeq.Value

                                Dim tFTImageName$ = ""
                                If Not DBNull.Value.Equals(Me.FTImagePacking.Image) And Not Me.FTImagePacking.Image Is Nothing Then
                                    tFTImageName = Me.FTSubOrderNo.Properties.Tag.ToString() & "_" & Me.FNPackSeq.Value.ToString()
                                    tFTImageName = Microsoft.VisualBasic.Replace(tFTImageName, "-", "_")
                                End If

                                Dim sSQL As String

                                sSQL = ""
                                sSQL = "UPDATE A"
                                sSQL &= Environment.NewLine & "SET A.FNPackSeq = A.FNPackSeq + 1"
                                sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A"
                                sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                                sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"
                                sSQL &= Environment.NewLine & "      AND A.FNPackSeq >= " & Me.FNPackSeq.Value & ";"

                                HI.Conn.SQLConn.ExecuteNonQuery(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                                Dim tmpDTInsertPackSeq As System.Data.DataTable

                                sSQL = ""
                                sSQL = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNPackSeq, ISNULL(A.FTImage, '') AS FTImage"
                                sSQL &= Environment.NewLine & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A (NOLOCK)"
                                sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                                sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"
                                sSQL &= Environment.NewLine & "      AND A.FNPackSeq > " & numFNSeqPackInsert & " "
                                sSQL &= Environment.NewLine & "ORDER BY A.FNPackSeq ASC;"

                                tmpDTInsertPackSeq = HI.Conn.SQLConn.GetDataTable(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                                For Each oDataRow As System.Data.DataRow In tmpDTInsertPackSeq.Rows
                                    If oDataRow!FTImage.ToString <> "" Then
                                        Dim tmpNewImageName As String = ""
                                        tmpNewImageName = Microsoft.VisualBasic.Replace(Me.FTSubOrderNo.Properties.Tag.ToString() & "_" & Val(oDataRow!FNPackSeq.ToString), "-", "_")

                                        sSQL = ""
                                        sSQL = "UPDATE A"
                                        sSQL &= Environment.NewLine & "SET A.FTImage = N'" & tmpNewImageName & ".JPG'"
                                        sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A"
                                        sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                                        sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"
                                        sSQL &= Environment.NewLine & "      AND A.FNPackSeq = " & Val(oDataRow!FNPackSeq.ToString) & ";"

                                        If HI.Conn.SQLConn.ExecuteNonQuery(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                                            Dim tPathImgExtend As String = _SystemFilePath & "\OrderNo\SubOrderNo\Packing" & "\" & oDataRow!FTImage.ToString
                                            Dim oSewingSeqImage As System.Drawing.Image = HI.UL.ULImage.LoadImage("" & tPathImgExtend)
                                            HI.UL.ULImage.SaveImage(oSewingSeqImage, tmpNewImageName, "" & _SystemFilePath & "\OrderNo\SubOrderNo\Packing\")
                                        Else

                                        End If

                                    End If

                                Next

                                If Not tmpDTInsertPackSeq Is Nothing Then tmpDTInsertPackSeq.Dispose()

                                sSQL = ""
                                sSQL = "UPDATE A"
                                sSQL &= Environment.NewLine & "SET  A.[FTPackDescription] = N'" & HI.UL.ULF.rpQuoted(Me.FTPackDescription.Text) & "'"
                                sSQL &= Environment.NewLine & "    ,A.[FTPackNote] = N'" & HI.UL.ULF.rpQuoted(Me.FTPackNote.Text.Trim) & "'"
                                sSQL &= Environment.NewLine & "    ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                                sSQL &= Environment.NewLine & "    ,A.[FDUpdDate] = " & HI.UL.ULDate.FormatDateDB
                                sSQL &= Environment.NewLine & "    ,A.[FTUpdTime] = " & HI.UL.ULDate.FormatTimeDB
                                sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A"
                                sSQL &= Environment.NewLine & "WHERE  A.[FTOrderNo] = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                                sSQL &= Environment.NewLine & "       AND A.[FTSubOrderNo] = '" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
                                sSQL &= Environment.NewLine & "       AND A.[FNPackSeq] = " & Me.FNPackSeq.Value & " "

                                If HI.Conn.SQLConn.ExecuteNonQuery(sSQL, Conn.DB.DataBaseName.DB_MERCHAN) = False Then
                                    '...not found data : not exists record
                                    sSQL = ""
                                    sSQL = "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub_Pack] ([FTInsUser]"
                                    sSQL &= Environment.NewLine & "            ,[FDInsDate]"
                                    sSQL &= Environment.NewLine & "            ,[FTInsTime]"
                                    sSQL &= Environment.NewLine & "            ,[FTUpdUser]"
                                    sSQL &= Environment.NewLine & "            ,[FDUpdDate]"
                                    sSQL &= Environment.NewLine & "            ,[FTUpdTime]"
                                    sSQL &= Environment.NewLine & "            ,[FTOrderNo]"
                                    sSQL &= Environment.NewLine & "            ,[FTSubOrderNo]"
                                    sSQL &= Environment.NewLine & "            ,[FNPackSeq]"
                                    sSQL &= Environment.NewLine & "            ,[FTPackDescription]"
                                    sSQL &= Environment.NewLine & "            ,[FTPackNote]"
                                    sSQL &= Environment.NewLine & "            ,[FTImage])"
                                    sSQL &= Environment.NewLine & "SELECT '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "', " & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ", NULL, NULL, NULL, '"
                                    sSQL &= HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString) & "', '" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString) & "', " & Me.FNSewSeq.Value & ", '" & HI.UL.ULF.rpQuoted(Me.FTPackDescription.Text.Trim) & "', '"
                                    sSQL &= HI.UL.ULF.rpQuoted(Me.FTSewNote.Text.Trim) & "', N'" & HI.UL.ULImage.SaveImage(Me.FTImagePacking, tFTImageName, "" & _SystemFilePath & "\OrderNo\SubOrderNo\Packing\") & "'"

                                    HI.Conn.SQLConn.ExecuteNonQuery(sSQL, Conn.DB.DataBaseName.DB_MERCHAN)

                                End If

                                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)
                                Me.FTImagePacking.Image = Nothing
                                Call W_PRCbShowBrowseDataSubOrderPackInfo()
                                Me.FTPackDescription.Focus()

                                bRet = True

                            Else
                                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, Me.FTPackDescription_lbl.Text)
                                Me.FTPackDescription.Focus()
                            End If

                        End If

                    Else
                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTSubOrderNo_lbl.Text)
                        Try
                            Me.otab.SelectedTabPageIndex = eTabIndexs.FactorySubOrderNo
                        Catch ex As Exception
                        End Try
                        FTSubOrderNo.Focus()
                    End If

                Else
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTOrderNo_lbl.Text)
                    Try
                        Me.otab.SelectedTabPageIndex = eTabIndexs.FactoryOrderNo
                    Catch ex As Exception
                    End Try
                    FTOrderNo.Focus()
                End If

            End If

        Catch ex As Exception

        End Try

        Return bRet

    End Function

    Private Function W_PRCbDeleteSubOrderPack() As Boolean

        Try
            With Me.ogvOrderSubPack

                If .FocusedRowHandle < 0 Then Return False

                Dim _StrDel As String = ""

                For Each i As Integer In .GetSelectedRows()
                    If _StrDel = "" Then
                        _StrDel = (Integer.Parse(.GetRowCellValue(i, "FNPackSeq"))).ToString
                    Else
                        _StrDel = _StrDel & "," & (Integer.Parse(.GetRowCellValue(i, "FNPackSeq"))).ToString
                    End If
                Next

                If HI.MG.ShowMsg.mConfirmProcess("คุณต้องการทำการลบข้อมูล Packing ใช่หรือไม่ ?", 1409100002, _StrDel) = True Then

                    Dim FNSeq As Integer

                    Dim _Qry As String = ""

                    For Each i As Integer In .GetSelectedRows()

                        FNSeq = Integer.Parse(.GetRowCellValue(i, "FNPackSeq"))

                        _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Pack]"
                        _Qry &= vbCrLf & "WHERE FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' "
                        _Qry &= vbCrLf & "      AND FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text.Trim) & "' "
                        _Qry &= vbCrLf & "      AND FNPackSeq = " & FNSeq & "  "

                        REM ...ให้ User ทำการ Re-Sequence Manual
                        '================================================================================================================================================
                        '_Qry &= vbCrLf & "UPDATE A SET FNPackSeq = FNNo"
                        '_Qry &= vbCrLf & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Pack]  AS A  INNER JOIN "
                        '_Qry &= vbCrLf & " (SELECT ROW_NUMBER() OVER(ORDER BY FNPackSeq) AS FNNo,FNPackSeq,FTOrderNo,FTSubOrderNo"
                        '_Qry &= vbCrLf & "  FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Pack]  "
                        '_Qry &= vbCrLf & "  WHERE FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' "
                        '_Qry &= vbCrLf & "        AND FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text.Trim) & "' "
                        '_Qry &= vbCrLf & ") T1 ON A.FNPackSeq=T1.FNPackSeq AND A.FTOrderNo=T1.FTOrderNo AND  A.FTSubOrderNo = T1.FTSubOrderNo "
                        '================================================================================================================================================

                        If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_MERCHAN) = True Then

                            '...validate revised packing sequence
                            '...update revised size packing information
                            '======================================================================================================================================================================================
                            Dim tSQLRevised As String

                            tSQLRevised = ""
                            tSQLRevised = "SELECT TOP 1 A.FTStateApprovedPacking FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                            If HI.Conn.SQLConn.GetField(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "1" Then '...revised sewing sequence process
                                tSQLRevised = ""
                                tSQLRevised = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                                tSQLRevised &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                                tSQLRevised &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                                tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                                tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                                tSQLRevised &= Environment.NewLine & "SET @FTRevisedInfoBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "';"
                                tSQLRevised &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                                tSQLRevised &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                                tSQLRevised &= Environment.NewLine & "SELECT @FDRevisedInfoDate = CONVERT(VARCHAR(10), GETDATE(), 111), @FTRevisedInfoTime = CONVERT(VARCHAR(8), GETDATE(), 114)"
                                tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                                tSQLRevised &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                                tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                                tSQLRevised &= Environment.NewLine & "UPDATE A"
                                tSQLRevised &= Environment.NewLine & "SET A.FTStateApprovedPacking = N'0'"
                                tSQLRevised &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                                tSQLRevised &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                                tSQLRevised &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                                If HI.Conn.SQLConn.ExecuteNonQuery(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then

                                End If
                            End If
                            '======================================================================================================================================================================================
                        End If

                    Next

                    HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mDelete, Me.Text)

                    HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)
                    Call W_PRCbShowBrowseDataSubOrderPackInfo()
                    'Me.FTImageSewing.Image = Nothing
                    'Me.FTSewDescription.Focus()
                    Me.FTImagePacking.Image = Nothing
                    Me.FTPackDescription.Focus()

                    Return True

                End If

            End With

        Catch ex As Exception
        End Try

        Return True

        'Try
        '    If Me.FNPackSeq.Value = 0 Then Return False
        '    If Not W_PRCbVerifyBF_SaveDataSubOrderPack() Then Return False

        '    Dim tSql As String

        '    tSql = ""
        '    tSql = "DELETE A"
        '    tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A"
        '    tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
        '    tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
        '    tSql &= Environment.NewLine & "      AND A.FNPackSeq = " & Me.FNPackSeq.Value

        '    If HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then
        '        '...update sequence pack info
        '        Dim oStrBuilder As New System.Text.StringBuilder()

        '        oStrBuilder.Remove(0, oStrBuilder.Length)

        '        oStrBuilder.AppendLine("UPDATE A")
        '        oStrBuilder.AppendLine("SET A.FNPackSeq = B.FNRePackSeq")
        '        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A LEFT JOIN (SELECT ROW_NUMBER() OVER(ORDER BY L1.FNPackSeq ASC) AS FNRePackSeq, L1.FNPackSeq, L1.FTOrderNo, L1.FTSubOrderNo")
        '        oStrBuilder.AppendLine("														                                                          FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS L1")
        '        oStrBuilder.AppendLine("														                                                          WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
        '        oStrBuilder.AppendLine("																                                                        AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "') AS B ON A.FTOrderNo = B.FTOrderNo AND A.FTSubOrderNo = B.FTSubOrderNo")
        '        oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
        '        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
        '        oStrBuilder.AppendLine("      AND A.FNPackSeq = B.FNPackSeq;")

        '        tSql = ""
        '        tSql = oStrBuilder.ToString()

        '        HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

        '        HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mDelete, Me.Text)

        '        HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)

        '        Call W_PRCbShowBrowseDataSubOrderPackInfo()
        '        Me.FTImagePacking.Image = Nothing
        '        Me.FTPackDescription.Focus()

        '        Return True

        '    Else
        '        Return False
        '    End If

        'Catch ex As Exception
        '    If System.Diagnostics.Debugger.IsAttached = True Then
        '        Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
        '    End If
        '    Return False
        'End Try

    End Function

    Private Function W_PRCbSaveSubOrderSewing_REM_20141128() As Boolean
        Try
            If Not W_PRCbVerifyBF_SaveDataSubOrderSewing() Then Return False

            Dim tFTImageName$ = ""
            If Not DBNull.Value.Equals(Me.FTImageSewing.Image) And Not Me.FTImageSewing.Image Is Nothing Then
                tFTImageName = Me.FTSubOrderNo.Properties.Tag.ToString() & "_" & Me.FNSewSeq.Value.ToString()
                tFTImageName = Microsoft.VisualBasic.Replace(tFTImageName, "-", "_")
            End If

            Dim tSql$

            '------------------------------------------ Represent Before Revise History Factory Order No. Sewing ----------------------------------------
            tSql = ""
            tSql = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNSewSeq, A.FTSewDescription, A.FTSewNote, A.FTImage"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Sew] AS A WITH(NOLOCK)"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'"
            tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "'"
            tSql &= Environment.NewLine & "      AND A.FNSewSeq = " & CInt(Me.FNSewSeq.Value) & ";"

            oDBdtSubOrderNoSewBF = Nothing
            oDBdtSubOrderNoSewBF = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
            '-------------------------------------------------------------------------------------------------------------------------------------------

            Dim oStrBuilder As New System.Text.StringBuilder()

            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("UPDATE A")
            oStrBuilder.AppendLine("SET  A.[FTSewDescription] = N'" & HI.UL.ULF.rpQuoted(Me.FTSewDescription.Text) & "'")
            oStrBuilder.AppendLine("    ,A.[FTSewNote] = N'" & HI.UL.ULF.rpQuoted(Me.FTSewNote.Text) & "'")
            oStrBuilder.AppendLine("    ,A.FTImage = N'" & HI.UL.ULImage.SaveImage(Me.FTImageSewing, tFTImageName, "" & _SystemFilePath & "\OrderNo\SubOrderNo\Sewing\") & "'")
            oStrBuilder.AppendLine("    ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'")
            oStrBuilder.AppendLine(String.Format("    ,A.[FDUpdDate] = {0}", HI.UL.ULDate.FormatDateDB))
            oStrBuilder.AppendLine(String.Format("    ,A.[FTUpdTime] = {0}", HI.UL.ULDate.FormatTimeDB))
            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A")
            oStrBuilder.AppendLine("WHERE  A.[FTOrderNo] = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("       AND A.[FTSubOrderNo] = '" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine(String.Format("       AND A.[FNSewSeq] = {0}", Me.FNSewSeq.Value))

            tSql = ""
            tSql = oStrBuilder.ToString()

            If HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN) = False Then
                '...add new sew seq / sew description / sew note
                tSql = ""
                tSql = "DECLARE @FNSewSeqMax AS INT;"
                tSql &= Environment.NewLine & "SELECT @FNSewSeqMax = (ISNULL(MAX(A.FNSewSeq),0) + 1)"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
                tSql &= Environment.NewLine & "--PRINT '@FNSewSeqMax : ' + CONVERT(VARCHAR(10), @FNSewSeqMax);"
                tSql &= Environment.NewLine & "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Sew]([FTOrderNo],[FTSubOrderNo],[FNSewSeq],[FTSewDescription],[FTSewNote],[FTImage]"
                tSql &= Environment.NewLine & "                                                                                                         ,[FTInsUser],[FDInsDate],[FTInsTime]"
                tSql &= Environment.NewLine & "                                                                                                         ,[FTUpdUser],[FDUpdDate],[FTUpdTime])"
                tSql &= Environment.NewLine & "VALUES ('" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "','" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "',@FNSewSeqMax,N'" & HI.UL.ULF.rpQuoted(Me.FTSewDescription.Text) & "',N'" & HI.UL.ULF.rpQuoted(Me.FTSewNote.Text) & "'"
                tSql &= Environment.NewLine & ",N'" & HI.UL.ULImage.SaveImage(Me.FTImageSewing, tFTImageName, "" & _SystemFilePath & "\OrderNo\SubOrderNo\Sewing\") & "'"
                tSql &= ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB
                tSql &= ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ")"

                HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
            Else
                '------------------------------------------ Represent After Revise History Factory Order No. Sewing ----------------------------------------
                tSql = ""
                tSql = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNSewSeq, A.FTSewDescription, A.FTSewNote, A.FTImage"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Sew] AS A WITH(NOLOCK)"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "'"
                tSql &= Environment.NewLine & "      AND A.FNSewSeq = " & CInt(Me.FNSewSeq.Value) & ";"

                oDBdtSubOrderNoSewAF = Nothing
                oDBdtSubOrderNoSewAF = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                '-----------------------------------------------------------------------------------------------------------------------------------------

                '...Write changed log
                Call PostSaveSubOrderNoSew("[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Sew]", Me.FTOrderNo.Properties.Tag.ToString() & "|" & Me.FTSubOrderNo.Properties.Tag.ToString() & "|" & Me.FNHSysStyleId.Text & "|" & Me.otab.TabPages(Me.otab.SelectedTabPageIndex).Text.ToString() & "|" & Me.FNSewSeq_lbl.Text & " " & CStr(Me.FNSewSeq.Value))
            End If

            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("UPDATE A")
            oStrBuilder.AppendLine("SET A.FNSewSeq = B.FNReSewSeq")
            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A LEFT JOIN (SELECT ROW_NUMBER() OVER(ORDER BY L1.FNSewSeq ASC) AS FNReSewSeq, L1.FNSewSeq, L1.FTOrderNo, L1.FTSubOrderNo")
            oStrBuilder.AppendLine("														                                                         FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS L1")
            oStrBuilder.AppendLine("														                                                         WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("																                                                       AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "') AS B ON A.FTOrderNo = B.FTSubOrderNo AND A.FTSubOrderNo = B.FTSubOrderNo")
            oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("      AND A.FNSewSeq = B.FNSewSeq;")

            tSql = ""
            tSql = oStrBuilder.ToString()

            HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)
            Me.FTImageSewing.Image = Nothing
            Call W_PRCbShowBrowseDataSubOrderSewingInfo()
            'HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, ogbSubOrderSewInfo.Text)
            Me.FTSewDescription.Focus()

            Return True
        Catch ex As Exception

            Return False
        End Try

    End Function

    Private Function W_PRCbSaveSubOrderSewing_NOT_USE_20150129() As Boolean
        Try
            If Not W_PRCbVerifyBF_SaveDataSubOrderSewing() Then Return False

            Dim tFTImageName$ = ""
            If Not DBNull.Value.Equals(Me.FTImageSewing.Image) And Not Me.FTImageSewing.Image Is Nothing Then
                tFTImageName = Me.FTSubOrderNo.Properties.Tag.ToString() & "_" & Me.FNSewSeq.Value.ToString()
                tFTImageName = Microsoft.VisualBasic.Replace(tFTImageName, "-", "_")
            End If

            Dim tSql$

            '------------------------------------------ Represent Before Revise History Factory Order No. Sewing ----------------------------------------
            tSql = ""
            tSql = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNSewSeq, A.FTSewDescription, A.FTSewNote, A.FTImage"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Sew] AS A WITH(NOLOCK)"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'"
            tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "'"
            tSql &= Environment.NewLine & "      AND A.FNSewSeq = " & CInt(Me.FNSewSeq.Value) & ";"

            oDBdtSubOrderNoSewBF = Nothing
            oDBdtSubOrderNoSewBF = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
            '-------------------------------------------------------------------------------------------------------------------------------------------

            Dim oStrBuilder As New System.Text.StringBuilder()

            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("UPDATE A")
            oStrBuilder.AppendLine("SET  A.[FTSewDescription] = N'" & HI.UL.ULF.rpQuoted(Me.FTSewDescription.Text) & "'")
            oStrBuilder.AppendLine("    ,A.[FTSewNote] = N'" & HI.UL.ULF.rpQuoted(Me.FTSewNote.Text) & "'")
            oStrBuilder.AppendLine("    ,A.FTImage = N'" & HI.UL.ULImage.SaveImage(Me.FTImageSewing, tFTImageName, "" & _SystemFilePath & "\OrderNo\SubOrderNo\Sewing\") & "'")
            oStrBuilder.AppendLine("    ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'")
            oStrBuilder.AppendLine(String.Format("    ,A.[FDUpdDate] = {0}", HI.UL.ULDate.FormatDateDB))
            oStrBuilder.AppendLine(String.Format("    ,A.[FTUpdTime] = {0}", HI.UL.ULDate.FormatTimeDB))
            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A")
            oStrBuilder.AppendLine("WHERE  A.[FTOrderNo] = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("       AND A.[FTSubOrderNo] = '" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine(String.Format("       AND A.[FNSewSeq] = {0}", Me.FNSewSeq.Value))

            tSql = ""
            tSql = oStrBuilder.ToString()

            If HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN) = False Then
                '...add new sew seq / sew description / sew note
                tSql = ""
                tSql = "DECLARE @FNSewSeqMax AS INT;"
                tSql &= Environment.NewLine & "SELECT @FNSewSeqMax = (ISNULL(MAX(A.FNSewSeq),0) + 1)"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
                tSql &= Environment.NewLine & "--PRINT '@FNSewSeqMax : ' + CONVERT(VARCHAR(10), @FNSewSeqMax);"
                tSql &= Environment.NewLine & "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Sew]([FTOrderNo],[FTSubOrderNo],[FNSewSeq],[FTSewDescription],[FTSewNote],[FTImage]"
                tSql &= Environment.NewLine & "                                                                                                         ,[FTInsUser],[FDInsDate],[FTInsTime]"
                tSql &= Environment.NewLine & "                                                                                                         ,[FTUpdUser],[FDUpdDate],[FTUpdTime])"
                tSql &= Environment.NewLine & "VALUES ('" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "','" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "',@FNSewSeqMax,N'" & HI.UL.ULF.rpQuoted(Me.FTSewDescription.Text) & "',N'" & HI.UL.ULF.rpQuoted(Me.FTSewNote.Text) & "'"
                tSql &= Environment.NewLine & ",N'" & HI.UL.ULImage.SaveImage(Me.FTImageSewing, tFTImageName, "" & _SystemFilePath & "\OrderNo\SubOrderNo\Sewing\") & "'"
                tSql &= ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB
                tSql &= ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ")"

                HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
            Else
                '------------------------------------------ Represent After Revise History Factory Order No. Sewing ----------------------------------------
                tSql = ""
                tSql = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNSewSeq, A.FTSewDescription, A.FTSewNote, A.FTImage"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Sew] AS A WITH(NOLOCK)"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "'"
                tSql &= Environment.NewLine & "      AND A.FNSewSeq = " & CInt(Me.FNSewSeq.Value) & ";"

                oDBdtSubOrderNoSewAF = Nothing
                oDBdtSubOrderNoSewAF = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                '-----------------------------------------------------------------------------------------------------------------------------------------

                '...Write changed log
                Call PostSaveSubOrderNoSew("[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Sew]", Me.FTOrderNo.Properties.Tag.ToString() & "|" & Me.FTSubOrderNo.Properties.Tag.ToString() & "|" & Me.FNHSysStyleId.Text & "|" & Me.otab.TabPages(Me.otab.SelectedTabPageIndex).Text.ToString() & "|" & Me.FNSewSeq_lbl.Text & " " & CStr(Me.FNSewSeq.Value))

            End If

            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("UPDATE A")
            oStrBuilder.AppendLine("SET A.FNSewSeq = B.FNReSewSeq")
            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A LEFT JOIN (SELECT ROW_NUMBER() OVER(ORDER BY L1.FNSewSeq ASC) AS FNReSewSeq, L1.FNSewSeq, L1.FTOrderNo, L1.FTSubOrderNo")
            oStrBuilder.AppendLine("														                                                         FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS L1")
            oStrBuilder.AppendLine("														                                                         WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("																                                                       AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "') AS B ON A.FTOrderNo = B.FTSubOrderNo AND A.FTSubOrderNo = B.FTSubOrderNo")
            oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("      AND A.FNSewSeq = B.FNSewSeq;")

            tSql = ""
            tSql = oStrBuilder.ToString()

            HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)
            Me.FTImageSewing.Image = Nothing
            Call W_PRCbShowBrowseDataSubOrderSewingInfo()
            'HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, ogbSubOrderSewInfo.Text)
            Me.FTSewDescription.Focus()

            Return True
        Catch ex As Exception

            Return False
        End Try

    End Function

    Private Function W_PRCbSaveSubOrderSewing() As Boolean
        Try
            If Not W_PRCbVerifyBF_SaveDataSubOrderSewing() Then Return False

            Dim tFTImageName$ = ""
            If Not DBNull.Value.Equals(Me.FTImageSewing.Image) And Not Me.FTImageSewing.Image Is Nothing Then
                tFTImageName = Me.FTSubOrderNo.Properties.Tag.ToString() & "_" & Me.FNSewSeq.Value.ToString()
                tFTImageName = Microsoft.VisualBasic.Replace(tFTImageName, "-", "_")
            End If

            Dim tSql$, tSqlRevised$

            '...validate state revised factory sub order no sewing sequence process
            tSqlRevised = ""
            tSqlRevised = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNSewSeq, A.FTSewDescription, A.FTSewNote"
            tSqlRevised &= Environment.NewLine & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A (NOLOCK)"
            tSqlRevised &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString) & "';"

            DTBeforeRevisedSew = HI.Conn.SQLConn.GetDataTable(tSqlRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            '------------------------------------------ Represent Before Revise History Factory Order No. Sewing ----------------------------------------
            tSql = ""
            tSql = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNSewSeq, A.FTSewDescription, A.FTSewNote, A.FTImage"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Sew] AS A WITH(NOLOCK)"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'"
            tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "'"
            tSql &= Environment.NewLine & "      AND A.FNSewSeq = " & CInt(Me.FNSewSeq.Value) & ";"

            oDBdtSubOrderNoSewBF = Nothing
            oDBdtSubOrderNoSewBF = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
            '-------------------------------------------------------------------------------------------------------------------------------------------

            Dim oStrBuilder As New System.Text.StringBuilder()

            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("UPDATE A")
            oStrBuilder.AppendLine("SET  A.[FTSewDescription] = N'" & HI.UL.ULF.rpQuoted(Me.FTSewDescription.Text) & "'")
            oStrBuilder.AppendLine("    ,A.[FTSewNote] = N'" & HI.UL.ULF.rpQuoted(Me.FTSewNote.Text) & "'")
            oStrBuilder.AppendLine("    ,A.FTImage = N'" & HI.UL.ULImage.SaveImage(Me.FTImageSewing, tFTImageName, "" & _SystemFilePath & "\OrderNo\SubOrderNo\Sewing\") & "'")
            oStrBuilder.AppendLine("    ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'")
            oStrBuilder.AppendLine(String.Format("    ,A.[FDUpdDate] = {0}", HI.UL.ULDate.FormatDateDB))
            oStrBuilder.AppendLine(String.Format("    ,A.[FTUpdTime] = {0}", HI.UL.ULDate.FormatTimeDB))
            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A")
            oStrBuilder.AppendLine("WHERE  A.[FTOrderNo] = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("       AND A.[FTSubOrderNo] = '" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine(String.Format("       AND A.[FNSewSeq] = {0}", Me.FNSewSeq.Value))

            tSql = ""
            tSql = oStrBuilder.ToString()

            If HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN) = False Then
                '...add new sew seq / sew description / sew note
                tSql = ""
                tSql = "DECLARE @FNSewSeqMax AS INT;"
                tSql &= Environment.NewLine & "SELECT @FNSewSeqMax = (ISNULL(MAX(A.FNSewSeq),0) + 1)"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
                tSql &= Environment.NewLine & "--PRINT '@FNSewSeqMax : ' + CONVERT(VARCHAR(10), @FNSewSeqMax);"
                tSql &= Environment.NewLine & "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Sew]([FTOrderNo],[FTSubOrderNo],[FNSewSeq],[FTSewDescription],[FTSewNote],[FTImage]"
                tSql &= Environment.NewLine & "                                                                                                         ,[FTInsUser],[FDInsDate],[FTInsTime]"
                tSql &= Environment.NewLine & "                                                                                                         ,[FTUpdUser],[FDUpdDate],[FTUpdTime])"
                tSql &= Environment.NewLine & "VALUES ('" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "','" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "',@FNSewSeqMax,N'" & HI.UL.ULF.rpQuoted(Me.FTSewDescription.Text) & "',N'" & HI.UL.ULF.rpQuoted(Me.FTSewNote.Text) & "'"
                tSql &= Environment.NewLine & ",N'" & HI.UL.ULImage.SaveImage(Me.FTImageSewing, tFTImageName, "" & _SystemFilePath & "\OrderNo\SubOrderNo\Sewing\") & "'"
                tSql &= ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB
                tSql &= ",N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'," & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ")"

                HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
            Else
                '------------------------------------------ Represent After Revise History Factory Order No. Sewing ----------------------------------------
                tSql = ""
                tSql = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNSewSeq, A.FTSewDescription, A.FTSewNote, A.FTImage"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Sew] AS A WITH(NOLOCK)"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "'"
                tSql &= Environment.NewLine & "      AND A.FNSewSeq = " & CInt(Me.FNSewSeq.Value) & ";"

                oDBdtSubOrderNoSewAF = Nothing
                oDBdtSubOrderNoSewAF = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                tSql = ""
                tSql = "SELECT TOP 1 A.FTStateApprovedSewing FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString) & "';"

                If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "0" Then
                    DTAfterRevisedSew = Nothing
                Else
                    DTAfterRevisedSew = HI.Conn.SQLConn.GetDataTable(tSqlRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                End If
                '-----------------------------------------------------------------------------------------------------------------------------------------

                '...Write changed log
                Call PostSaveSubOrderNoSew("[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Sew]", Me.FTOrderNo.Properties.Tag.ToString() & "|" & Me.FTSubOrderNo.Properties.Tag.ToString() & "|" & Me.FNHSysStyleId.Text & "|" & Me.otab.TabPages(Me.otab.SelectedTabPageIndex).Text.ToString() & "|" & Me.FNSewSeq_lbl.Text & " " & CStr(Me.FNSewSeq.Value))

            End If

            REM Not Auto Re-Sequence AS SOON AS
            '================================================================================================================================================================================================================================================================================================================================
            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("UPDATE A")
            oStrBuilder.AppendLine("SET A.FNSewSeq = B.FNReSewSeq")
            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A LEFT JOIN (SELECT ROW_NUMBER() OVER(ORDER BY L1.FNSewSeq ASC) AS FNReSewSeq, L1.FNSewSeq, L1.FTOrderNo, L1.FTSubOrderNo")
            oStrBuilder.AppendLine("														                                                         FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS L1")
            oStrBuilder.AppendLine("														                                                         WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("																                                                       AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "') AS B ON A.FTOrderNo = B.FTSubOrderNo AND A.FTSubOrderNo = B.FTSubOrderNo")
            oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("      AND A.FNSewSeq = B.FNSewSeq;")

            tSql = ""
            tSql = oStrBuilder.ToString()

            HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
            '================================================================================================================================================================================================================================================================================================================================

            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)
            Me.FTImageSewing.Image = Nothing
            Call W_PRCbShowBrowseDataSubOrderSewingInfo()
            'HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mSave, ogbSubOrderSewInfo.Text)
            Me.FTSewDescription.Focus()

            Return True
        Catch ex As Exception

            Return False
        End Try

    End Function

    Private Function PROC_GETbInsertItemSewingSeqNo() As Boolean
        Dim bRet As Boolean = False

        Try
            If Me.ogvOrderSubSewing.RowCount > 0 Then
                If Me.FTOrderNo.Text.Trim <> "" Then
                    If Me.FTSubOrderNo.Text.Trim <> "" Then
                        If Me.FNSewSeq.Value > 0 Then
                            If Me.FTSewDescription.Text.Trim <> "" Then
                                Dim numFNSeqSewInsert As Integer

                                numFNSeqSewInsert = Me.FNSewSeq.Value

                                Dim tFTImageName$ = ""
                                If Not DBNull.Value.Equals(Me.FTImageSewing.Image) And Not Me.FTImageSewing.Image Is Nothing Then
                                    tFTImageName = Me.FTSubOrderNo.Properties.Tag.ToString() & "_" & Me.FNSewSeq.Value.ToString()
                                    tFTImageName = Microsoft.VisualBasic.Replace(tFTImageName, "-", "_")
                                End If

                                Dim sSQL As String

                                sSQL = ""
                                sSQL = "UPDATE A"
                                sSQL &= Environment.NewLine & "SET A.FNSewSeq = A.FNSewSeq + 1"
                                sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A"
                                sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                                sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"
                                sSQL &= Environment.NewLine & "      AND A.FNSewSeq >= " & Me.FNSewSeq.Value & ";"

                                HI.Conn.SQLConn.ExecuteNonQuery(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                                Dim tmpDTInsertSewSeq As System.Data.DataTable

                                sSQL = ""
                                sSQL = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNSewSeq, ISNULL(A.FTImage, '') AS FTImage"
                                sSQL &= Environment.NewLine & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A (NOLOCK)"
                                sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                                sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"
                                sSQL &= Environment.NewLine & "      AND A.FNSewSeq > " & numFNSeqSewInsert & " "
                                sSQL &= Environment.NewLine & "ORDER BY A.FNSewSeq ASC;"

                                tmpDTInsertSewSeq = HI.Conn.SQLConn.GetDataTable(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                                For Each oDataRow As System.Data.DataRow In tmpDTInsertSewSeq.Rows
                                    If oDataRow!FTImage.ToString <> "" Then
                                        Dim tmpNewImageName As String = ""
                                        tmpNewImageName = Microsoft.VisualBasic.Replace(Me.FTSubOrderNo.Properties.Tag.ToString() & "_" & Val(oDataRow!FNSewSeq.ToString), "-", "_")

                                        sSQL = ""
                                        sSQL = "UPDATE A"
                                        sSQL &= Environment.NewLine & "SET A.FTImage = N'" & tmpNewImageName & ".JPG'"
                                        sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A"
                                        sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                                        sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"
                                        sSQL &= Environment.NewLine & "      AND A.FNSewSeq = " & Val(oDataRow!FNSewSeq.ToString) & ";"

                                        If HI.Conn.SQLConn.ExecuteNonQuery(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                                            Dim tPathImgExtend As String = _SystemFilePath & "\OrderNo\SubOrderNo\Sewing" & "\" & oDataRow!FTImage.ToString
                                            Dim oSewingSeqImage As System.Drawing.Image = HI.UL.ULImage.LoadImage("" & tPathImgExtend)
                                            HI.UL.ULImage.SaveImage(oSewingSeqImage, tmpNewImageName, "" & _SystemFilePath & "\OrderNo\SubOrderNo\Sewing\")
                                        Else

                                        End If

                                    End If

                                Next

                                If Not tmpDTInsertSewSeq Is Nothing Then tmpDTInsertSewSeq.Dispose()

                                sSQL = ""
                                sSQL = "UPDATE A"
                                sSQL &= Environment.NewLine & "SET  A.[FTSewDescription] = N'" & HI.UL.ULF.rpQuoted(Me.FTSewDescription.Text) & "'"
                                sSQL &= Environment.NewLine & "    ,A.[FTSewNote] = N'" & HI.UL.ULF.rpQuoted(Me.FTSewNote.Text.Trim) & "'"
                                sSQL &= Environment.NewLine & "    ,A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                                sSQL &= Environment.NewLine & "    ,A.[FDUpdDate] = " & HI.UL.ULDate.FormatDateDB
                                sSQL &= Environment.NewLine & "    ,A.[FTUpdTime] = " & HI.UL.ULDate.FormatTimeDB
                                sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A"
                                sSQL &= Environment.NewLine & "WHERE  A.[FTOrderNo] = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                                sSQL &= Environment.NewLine & "       AND A.[FTSubOrderNo] = '" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
                                sSQL &= Environment.NewLine & "       AND A.[FNSewSeq] = " & Me.FNSewSeq.Value & " "

                                If HI.Conn.SQLConn.ExecuteNonQuery(sSQL, Conn.DB.DataBaseName.DB_MERCHAN) = False Then
                                    '...not found data : not exists record
                                    sSQL = ""
                                    sSQL = "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub_Sew] ([FTInsUser]"
                                    sSQL &= Environment.NewLine & "            ,[FDInsDate]"
                                    sSQL &= Environment.NewLine & "            ,[FTInsTime]"
                                    sSQL &= Environment.NewLine & "            ,[FTUpdUser]"
                                    sSQL &= Environment.NewLine & "            ,[FDUpdDate]"
                                    sSQL &= Environment.NewLine & "            ,[FTUpdTime]"
                                    sSQL &= Environment.NewLine & "            ,[FTOrderNo]"
                                    sSQL &= Environment.NewLine & "            ,[FTSubOrderNo]"
                                    sSQL &= Environment.NewLine & "            ,[FNSewSeq]"
                                    sSQL &= Environment.NewLine & "            ,[FTSewDescription]"
                                    sSQL &= Environment.NewLine & "            ,[FTSewNote]"
                                    sSQL &= Environment.NewLine & "            ,[FTImage])"
                                    sSQL &= Environment.NewLine & "SELECT '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "', " & HI.UL.ULDate.FormatDateDB & "," & HI.UL.ULDate.FormatTimeDB & ", NULL, NULL, NULL, '"
                                    sSQL &= HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString) & "', '" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString) & "', " & Me.FNSewSeq.Value & ", '" & HI.UL.ULF.rpQuoted(Me.FTSewDescription.Text.Trim) & "', '"
                                    sSQL &= HI.UL.ULF.rpQuoted(Me.FTSewNote.Text.Trim) & "', N'" & HI.UL.ULImage.SaveImage(Me.FTImageSewing, tFTImageName, "" & _SystemFilePath & "\OrderNo\SubOrderNo\Sewing\") & "'"

                                    HI.Conn.SQLConn.ExecuteNonQuery(sSQL, Conn.DB.DataBaseName.DB_MERCHAN)

                                End If

                                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)
                                Me.FTImageSewing.Image = Nothing
                                Call W_PRCbShowBrowseDataSubOrderSewingInfo()
                                Me.FTSewDescription.Focus()

                                bRet = True

                            Else
                                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, Me.FTSewDescription_lbl.Text)
                                Me.FTSewDescription.Focus()
                            End If

                        End If

                    Else
                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTSubOrderNo_lbl.Text)
                        Try
                            Me.otab.SelectedTabPageIndex = eTabIndexs.FactorySubOrderNo
                        Catch ex As Exception
                        End Try
                        FTSubOrderNo.Focus()
                    End If

                Else
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTOrderNo_lbl.Text)
                    Try
                        Me.otab.SelectedTabPageIndex = eTabIndexs.FactoryOrderNo
                    Catch ex As Exception
                    End Try
                    FTOrderNo.Focus()
                End If

            End If

        Catch ex As Exception

        End Try

        Return bRet

    End Function

    Private Function W_PRCbDeleteSubOrderComponent() As Boolean
        '  If Not System.Diagnostics.Debugger.IsAttached = True Then Return False

        Dim bRetDelSubOrdComponent As Boolean = False
        Try
            '...delete data component
            bRetDelSubOrdComponent = True


        Catch ex As Exception

        End Try

        Return bRetDelSubOrdComponent

    End Function

    Private Function W_PRCbDeleteSubOrderSewing() As Boolean
        Try
            With Me.ogvOrderSubSewing

                If .FocusedRowHandle < 0 Then Return False

                Dim _StrDel As String = ""

                For Each i As Integer In .GetSelectedRows()
                    If _StrDel = "" Then
                        _StrDel = (Integer.Parse(.GetRowCellValue(i, "FNSewSeq"))).ToString
                    Else
                        _StrDel = _StrDel & "," & (Integer.Parse(.GetRowCellValue(i, "FNSewSeq"))).ToString
                    End If
                Next

                If HI.MG.ShowMsg.mConfirmProcess("คุณต้องการทำการลบข้อมูล Sewing ใช่หรือไม่ ?", 1409100001, _StrDel) = True Then

                    Dim FNSeq As Integer

                    Dim _Qry As String = ""

                    For Each i As Integer In .GetSelectedRows()

                        FNSeq = Integer.Parse(.GetRowCellValue(i, "FNSewSeq"))

                        _Qry = "DELETE FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Sew]"
                        _Qry &= vbCrLf & "WHERE FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' "
                        _Qry &= vbCrLf & "      AND FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text.Trim) & "' "
                        _Qry &= vbCrLf & "      AND FNSewSeq = " & FNSeq & "  "

                        REM ...ให้ Use ทำการ Re-Seq Manual
                        '==============================================================================================================================================
                        '_Qry &= vbCrLf & "UPDATE A SET FNSewSeq = FNNo"
                        '_Qry &= vbCrLf & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Sew]  AS A  INNER JOIN "
                        '_Qry &= vbCrLf & "(SELECT ROW_NUMBER() OVER(ORDER BY FNSewSeq) AS FNNo,FNSewSeq,FTOrderNo,FTSubOrderNo"
                        '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Sew]  "
                        '_Qry &= vbCrLf & " WHERE FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' "
                        '_Qry &= vbCrLf & "       AND FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text.Trim) & "' "
                        '_Qry &= vbCrLf & ") T1 ON A.FNSewSeq = T1.FNSewSeq AND A.FTOrderNo=T1.FTOrderNo AND  A.FTSubOrderNo=T1.FTSubOrderNo "
                        '==============================================================================================================================================

                        If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_MERCHAN) = True Then

                            '...validate revised sewing sequence
                            '...update revised size sewing information
                            '======================================================================================================================================================================================
                            Dim tSQLRevised As String

                            tSQLRevised = ""
                            tSQLRevised = "SELECT TOP 1 A.FTStateApprovedSewing FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                            If HI.Conn.SQLConn.GetField(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "1" Then '...revised sewing sequence process
                                tSQLRevised = ""
                                tSQLRevised = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                                tSQLRevised &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                                tSQLRevised &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                                tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                                tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                                tSQLRevised &= Environment.NewLine & "SET @FTRevisedInfoBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "';"
                                tSQLRevised &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                                tSQLRevised &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                                tSQLRevised &= Environment.NewLine & "SELECT @FDRevisedInfoDate = CONVERT(VARCHAR(10), GETDATE(), 111), @FTRevisedInfoTime = CONVERT(VARCHAR(8), GETDATE(), 114)"
                                tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                                tSQLRevised &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                                tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                                tSQLRevised &= Environment.NewLine & "UPDATE A"
                                tSQLRevised &= Environment.NewLine & "SET A.FTStateApprovedSewing = N'0'"
                                tSQLRevised &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                                tSQLRevised &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                                tSQLRevised &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                                If HI.Conn.SQLConn.ExecuteNonQuery(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then

                                End If
                            End If
                            '======================================================================================================================================================================================

                        End If

                    Next

                    HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mDelete, Me.Text)

                    HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)
                    Call W_PRCbShowBrowseDataSubOrderSewingInfo()
                    Me.FTImageSewing.Image = Nothing
                    Me.FTSewDescription.Focus()

                    Return True

                End If

            End With

        Catch ex As Exception

        End Try

        Return True
        'Try
        '    If Me.FNSewSeq.Value = 0 Then Return False
        '    If Not W_PRCbVerifyBF_SaveDataSubOrderSewing() Then Return False

        '    Dim tSql As String

        '    tSql = ""
        '    tSql = "DELETE A"
        '    tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A"
        '    tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
        '    tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
        '    tSql &= Environment.NewLine & "      AND A.FNSewSeq = " & Me.FNSewSeq.Value

        '    If HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then
        '        '...update sequence sewing info
        '        Dim oStrBuilder As New System.Text.StringBuilder()

        '        oStrBuilder.Remove(0, oStrBuilder.Length)

        '        oStrBuilder.AppendLine("UPDATE A")
        '        oStrBuilder.AppendLine("SET A.FNSewSeq = B.FNReSewSeq")
        '        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A LEFT JOIN (SELECT ROW_NUMBER() OVER(ORDER BY L1.FNSewSeq ASC) AS FNReSewSeq, L1.FNSewSeq, L1.FTOrderNo, L1.FTSubOrderNo")
        '        oStrBuilder.AppendLine("														                                                         FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS L1")
        '        oStrBuilder.AppendLine("														                                                         WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
        '        oStrBuilder.AppendLine("																                                                       AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "') AS B ON A.FTOrderNo = B.FTOrderNo AND A.FTSubOrderNo = B.FTSubOrderNo")
        '        oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
        '        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
        '        oStrBuilder.AppendLine("      AND A.FNSewSeq = B.FNSewSeq;")

        '        tSql = ""
        '        tSql = oStrBuilder.ToString()

        '        HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

        '        HI.MG.ShowMsg.mProcessComplete(MG.ShowMsg.ProcessType.mDelete, Me.Text)
        '        HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)
        '        Call W_PRCbShowBrowseDataSubOrderSewingInfo()
        '        Me.FTImageSewing.Image = Nothing
        '        Me.FTSewDescription.Focus()

        '        Return True

        '    Else
        '        Return False
        '    End If

        '    Return True
        'Catch ex As Exception
        '    'Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
        '    Return False
        'End Try

    End Function

    Private Function W_PRCbLoadMainOrderInfo(ByVal pObj As Object) As Boolean
        Try
            _ProcLoad = True

            Static _Proc As Boolean

            If Not (_Proc) Then
                _Proc = True
                Dim _Dt As DataTable
                Dim _Str As String

                REM 2014/01/04 _Str = Me.Query & "  WHERE  " & Me.MainKey & "='" & FTOrderNo.Properties.Tag.ToString & "' "
                _Str = Me.Query & "  WHERE  " & Me.MainKey & "='" & pObj & "' "

                _Dt = HI.Conn.SQLConn.GetDataTable(_Str, _DBEnum)

                Dim _FieldName As String = ""
                For Each R As DataRow In _Dt.Rows
                    For Each Col As DataColumn In _Dt.Columns
                        _FieldName = Col.ColumnName.ToString

                        'If _FieldName = "FTUpdUser" Or _FieldName = "FDUpdDate" Or _FieldName = "FTUpdTime" Then
                        '    MsgBox("ZZZ !!!" & ControlChars.CrLf & "Field Name : " & _FieldName.ToString())
                        'End If

                        For Each Obj As Object In Me.Controls.Find(_FieldName, True)

                            'If Obj.GetType.FullName.ToString.ToUpper = "DevExpress.XtraEditors.TextEdit".ToUpper Then
                            '    If _FieldName.ToUpper() = "FTUPDUSER" Then
                            '        MsgBox("Found Data !!!")
                            '    End If
                            'End If

                            Select Case Obj.GetType.FullName.ToString.ToUpper
                                Case "DevExpress.XtraEditors.ButtonEdit".ToUpper

                                    With CType(Obj, DevExpress.XtraEditors.ButtonEdit)

                                        If _FieldName.ToUpper <> FTOrderNo.Name.ToString.ToUpper Then
                                            .Text = R.Item(Col).ToString()
                                        End If

                                    End With

                                Case "DevExpress.XtraEditors.CalcEdit".ToUpper
                                    With CType(Obj, DevExpress.XtraEditors.CalcEdit)
                                        .Value = Val(R.Item(Col).ToString)
                                    End With
                                Case "DevExpress.XtraEditors.ComboBoxEdit".ToUpper
                                    With CType(Obj, DevExpress.XtraEditors.ComboBoxEdit)
                                        Try
                                            .SelectedIndex = Val(R.Item(Col).ToString)
                                        Catch ex As Exception
                                            .SelectedIndex = -1
                                        End Try
                                    End With
                                Case "DevExpress.XtraEditors.CheckEdit".ToUpper
                                    With CType(Obj, DevExpress.XtraEditors.CheckEdit)
                                        .EditValue = (Integer.Parse(Val(R.Item(Col).ToString))).ToString
                                    End With
                                Case "DevExpress.XtraEditors.MemoEdit".ToUpper, "DevExpress.XtraEditors.TextEdit".ToUpper
                                    'Obj.Text = R.Item(Col).ToString
                                    If _FieldName.ToUpper() = "FDUPDDATE" Then
                                        'If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                                        '    Obj.Text = HI.UL.ULDate.ConvertEN(R.Item(Col).ToString())
                                        'Else
                                        '    Obj.Text = HI.UL.ULDate.ConvertTH(R.Item(Col).ToString())
                                        'End If
                                        Obj.Text = HI.UL.ULDate.ConvertEN(R.Item(Col).ToString())
                                    ElseIf _FieldName.ToUpper() = "FTMAINMATERIAL" Or _FieldName.ToUpper() = "FTCOMBINATION" Then
                                        Obj.Text = ""
                                    Else
                                        Obj.Text = R.Item(Col).ToString
                                    End If
                                Case "DevExpress.XtraEditors.PictureEdit".ToUpper
                                    REM 2014/12/09
                                    'With CType(Obj, DevExpress.XtraEditors.PictureEdit)
                                    '    Try
                                    '        REM 2014/03/14 .Image = HI.UL.ULImage.LoadImage("" & .Properties.Tag.ToString & R.Item(Col).ToString)
                                    '        .Image = HI.UL.ULImage.LoadImage("" & _SystemFilePath & "\" & R.Item(Col).ToString)
                                    '    Catch ex As Exception
                                    '        .Image = Nothing
                                    '    End Try
                                    'End With

                                Case "DevExpress.XtraEditors.DateEdit".ToUpper
                                    Try
                                        With CType(Obj, DevExpress.XtraEditors.DateEdit)
                                            .DateTime = HI.UL.ULDate.ConvertEnDB(R.Item(Col).ToString)
                                        End With
                                    Catch ex As Exception
                                        With CType(Obj, DevExpress.XtraEditors.DateEdit)
                                            .Text = ""
                                        End With
                                    End Try

                                Case Else
                                    Obj.Text = R.Item(Col).ToString
                            End Select

                        Next

                    Next

                    Exit For

                Next

                '...Browse data season : case not yet generate object FNHSysSeasonId on System. HSysObjectDynamic_D
                '=============================================================================================================================================================================================================================================================================================
                '_Str = ""
                '_Str = "SELECT ISNULL(B.FTSeasonCode, '') AS FTSeasonCode"
                '_Str &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMSeason AS B (NOLOCK) ON A.FNHSysSeasonId = B.FNHSysSeasonId"
                '_Str &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(pObj.ToString.Trim) & "'"

                'Dim tmpDTBrowseSeason As System.Data.DataTable

                'tmpDTBrowseSeason = HI.Conn.SQLConn.GetDataTable(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                'If Not DBNull.Value.Equals(tmpDTBrowseSeason) AndAlso tmpDTBrowseSeason.Rows.Count > 0 Then
                '    For Each oDataRow As System.Data.DataRow In tmpDTBrowseSeason.Rows
                '        Me.FNHSysSeasonId.Text = oDataRow!FTSeasonCode.ToString
                '    Next
                'Else
                '    Me.FNHSysSeasonId.Text = ""
                'End If

                'If Not tmpDTBrowseSeason Is Nothing Then tmpDTBrowseSeason.Dispose()
                '=============================================================================================================================================================================================================================================================================================

                '...Modify 2014/12/09
                _Str = ""
                _Str = "SELECT TOP 1 A.FPOrderImage1, A.FPOrderImage2, A.FPOrderImage3, A.FPOrderImage4"
                _Str &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK)"
                _Str &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(pObj) & "';"

                Dim tmpDTFPOrderImage As System.Data.DataTable

                tmpDTFPOrderImage = HI.Conn.SQLConn.GetDataTable(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN,, False)

                If Not DBNull.Value.Equals(tmpDTFPOrderImage) AndAlso tmpDTFPOrderImage.Rows.Count > 0 Then
                    For Each oDataRowOrderImage As System.Data.DataRow In tmpDTFPOrderImage.Rows
                        For Each oDataColumnOrderImage As System.Data.DataColumn In tmpDTFPOrderImage.Columns
                            Select Case True
                                Case oDataColumnOrderImage.ColumnName.ToString.ToUpper = "FPORDERIMAGE1"
                                    For Each Obj As Object In Me.Controls.Find("FTImage1", True)

                                        If Not DBNull.Value.Equals(oDataRowOrderImage!FPOrderImage1) Then
                                            Dim oArrayOrderImage() As Byte = CType(oDataRowOrderImage!FPOrderImage1, Byte())

                                            If Not oArrayOrderImage Is Nothing And oArrayOrderImage.Length > 0 Then
                                                Dim ms As New MemoryStream(oArrayOrderImage)
                                                With Obj
                                                    .Image = Image.FromStream(ms)
                                                    '.SizeMode = PictureBoxSizeMode.CenterImage
                                                End With

                                            Else
                                                Obj.Image = Nothing
                                            End If

                                        Else
                                            Obj.Image = Nothing
                                        End If

                                    Next

                                Case oDataColumnOrderImage.ColumnName.ToString.ToUpper = "FPORDERIMAGE2"
                                    For Each Obj As Object In Me.Controls.Find("FTImage2", True)

                                        If Not DBNull.Value.Equals(oDataRowOrderImage!FPOrderImage2) Then
                                            Dim oArrayOrderImage() As Byte = CType(oDataRowOrderImage!FPOrderImage2, Byte())

                                            If Not oArrayOrderImage Is Nothing And oArrayOrderImage.Length > 0 Then
                                                Dim ms As New MemoryStream(oArrayOrderImage)
                                                With Obj
                                                    .Image = Image.FromStream(ms)
                                                    '.SizeMode = PictureBoxSizeMode.CenterImage
                                                End With

                                            Else
                                                Obj.Image = Nothing
                                            End If

                                        Else
                                            Obj.Image = Nothing
                                        End If

                                    Next

                                Case oDataColumnOrderImage.ColumnName.ToString.ToUpper = "FPORDERIMAGE3"
                                    For Each Obj As Object In Me.Controls.Find("FTImage3", True)

                                        If Not DBNull.Value.Equals(oDataRowOrderImage!FPOrderImage3) Then
                                            Dim oArrayOrderImage() As Byte = CType(oDataRowOrderImage!FPOrderImage3, Byte())

                                            If Not oArrayOrderImage Is Nothing And oArrayOrderImage.Length > 0 Then
                                                Dim ms As New MemoryStream(oArrayOrderImage)
                                                With Obj
                                                    .Image = Image.FromStream(ms)
                                                    '.SizeMode = PictureBoxSizeMode.CenterImage
                                                End With

                                            Else
                                                Obj.Image = Nothing
                                            End If

                                        Else
                                            Obj.Image = Nothing
                                        End If

                                    Next

                                Case oDataColumnOrderImage.ColumnName.ToString.ToUpper = "FPORDERIMAGE4"
                                    For Each Obj As Object In Me.Controls.Find("FTImage4", True)

                                        If Not DBNull.Value.Equals(oDataRowOrderImage!FPOrderImage4) Then
                                            Dim oArrayOrderImage() As Byte = CType(oDataRowOrderImage!FPOrderImage4, Byte())

                                            If Not oArrayOrderImage Is Nothing And oArrayOrderImage.Length > 0 Then
                                                Dim ms As New MemoryStream(oArrayOrderImage)
                                                With Obj
                                                    .Image = Image.FromStream(ms)
                                                    '.SizeMode = PictureBoxSizeMode.CenterImage
                                                End With
                                            Else
                                                Obj.Image = Nothing
                                            End If

                                        Else
                                            Obj.Image = Nothing
                                        End If

                                    Next

                                Case Else
                                    '...Nothing
                            End Select

                        Next

                        Exit For

                    Next

                Else
                    Me.FTImage1.Image = Nothing
                    Me.FTImage2.Image = Nothing
                    Me.FTImage3.Image = Nothing
                    Me.FTImage4.Image = Nothing
                End If

                If Not tmpDTFPOrderImage Is Nothing Then tmpDTFPOrderImage.Dispose()

                If Not pObj Is Nothing AndAlso Not DBNull.Value.Equals(pObj) And CType(pObj, System.String).ToString() <> "" Then
                    '...Main Material
                    Dim tFTMainMaterialDesc As String
                    Select Case HI.ST.Lang.Language
                        Case HI.ST.Lang.eLang.TH
                            tFTMainMaterialDesc = HI.Conn.SQLConn.GetField("EXEC SP_GETMAINMATERIALDESC_FACTORY_ORDER N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "', N'TH' ;", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                        Case HI.ST.Lang.eLang.EN
                            tFTMainMaterialDesc = HI.Conn.SQLConn.GetField("EXEC SP_GETMAINMATERIALDESC_FACTORY_ORDER N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "', N'EN' ;", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                        Case Else
                            tFTMainMaterialDesc = HI.Conn.SQLConn.GetField("EXEC SP_GETMAINMATERIALDESC_FACTORY_ORDER N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "', N'EN' ;", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                    End Select

                    Me.FTMainMaterial.Text = tFTMainMaterialDesc

                    '...Combination
                    Dim tFTCombination As String
                    tFTCombination = HI.Conn.SQLConn.GetField("SELECT ISNULL(A.FTCombination,'') AS FTCombination FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")

                    Me.FTCombination.Text = tFTCombination

                    '...State Approved Order Information {Approved/Revised}
                    '============================================================================================================================================================================================================================================================================================================================================
                    _Str = ""
                    _Str = "DECLARE @FTApprovedInfoState AS NVARCHAR(1);"
                    _Str &= Environment.NewLine & "SELECT TOP 1 @FTApprovedInfoState = A.FTApprovedInfoState FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                    _Str &= Environment.NewLine & "IF (@FTApprovedInfoState IS NULL)"
                    _Str &= Environment.NewLine & "BEGIN"
                    _Str &= Environment.NewLine & "  SET @FTApprovedInfoState = N'2' /*not approved & not revised*/"
                    _Str &= Environment.NewLine & "END;"
                    _Str &= Environment.NewLine & "PRINT '@FTApprovedInfoState : ' + @FTApprovedInfoState;"
                    _Str &= Environment.NewLine & "SELECT @FTApprovedInfoState AS FTApprovedInfoState;"

                    Dim tTextFTApprovedInfoState As String

                    tTextFTApprovedInfoState = HI.Conn.SQLConn.GetField(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN, "2")

                    If tTextFTApprovedInfoState = "0" Then
                        Dim tRevisedTime As String = Val(HI.Conn.SQLConn.GetField("SELECT A.FNApprovedInfoCnt FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'", HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")).ToString
                        '_Str = ""
                        '_Str = "SELECT A.FNApprovedInfoCnt FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                        'tRevisedTime = Val(HI.Conn.SQLConn.GetField(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")).ToString

                        Me.FTStateInfoOrder.Visible = False
                        Me.FTStateInfoOrder.Checked = False
                        'Me.FTStateInfoOrder.Text = "Revised Information ( " & HI.Conn.SQLConn.GetField("SELECT A.FNApprovedInfoCnt FROM  [" & HI.Conn.DB.DataBaseName.DB_MERCHAN & "]..TMERTOrder_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'", HI.Conn.DB.DataBaseName.DB_MERCHAN, "") & " )"
                        'Me.FTStateInfoOrder.Text = "Revised Information ( " & tRevisedTime & " )"
                        'Me.FTStateInfoOrder.ForeColor = System.Drawing.Color.DarkRed
                        'Me.FTStateInfoOrder.BackColor = Color.Transparent
                        'Me.FTStateInfoOrder.BringToFront()

                        Me.FTStateInfoOrderRevised.Visible = True
                        Me.FTStateInfoOrderRevised.Checked = True
                        Me.FTStateInfoOrderRevised.ForeColor = System.Drawing.Color.DarkRed
                        Me.FTStateInfoOrderRevised.BackColor = Color.Transparent
                        Me.FTStateInfoOrderRevised.BringToFront()

                    ElseIf tTextFTApprovedInfoState = "1" Then
                        Me.FTStateInfoOrderRevised.Visible = False
                        Me.FTStateInfoOrderRevised.Checked = False

                        Me.FTStateInfoOrder.Visible = True
                        Me.FTStateInfoOrder.Checked = True
                        'Me.FTStateInfoOrder.Text = "Approved Information"
                        Me.FTStateInfoOrder.ForeColor = System.Drawing.Color.Blue
                        Me.FTStateInfoOrder.BackColor = Color.Transparent
                        Me.FTStateInfoOrder.BringToFront()

                    Else
                        Me.FTStateInfoOrder.Visible = False
                        'Me.FTStateInfoOrder.Text = ""
                        'Me.FTStateInfoOrder.ForeColor = DevExpress.XtraEditors.CheckEdit.DefaultForeColor 'Me.GroupControl2.ForeColor 'DevExpress.XtraEditors.CheckEdit.DefaultBackColor
                        'Me.FTStateInfoOrder.BackColor = DevExpress.XtraEditors.CheckEdit.DefaultBackColor

                        Me.FTStateInfoOrderRevised.Visible = False
                    End If
                    '============================================================================================================================================================================================================================================================================================================================================

                End If

                Me.otab.SelectedTabPageIndex = 0
                _Proc = False

            End If

            _ProcLoad = False

            Me.FNOrderAmt.Properties.DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
            Me.FNOrderAmt.Properties.DisplayFormat.FormatString = "N2"
            Me.FNOrderAmt.Properties.EditFormat.FormatType = DevExpress.Utils.FormatType.Numeric

            Me.FNOrderTestAmnt.Properties.DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
            Me.FNOrderTestAmnt.Properties.DisplayFormat.FormatString = "N2"
            Me.FNOrderTestAmnt.Properties.EditFormat.FormatType = DevExpress.Utils.FormatType.Numeric

            Me.FNGrandAmt.Properties.DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
            Me.FNGrandAmt.Properties.DisplayFormat.FormatString = "N2"
            Me.FNGrandAmt.Properties.EditFormat.FormatType = DevExpress.Utils.FormatType.Numeric

            Call CheckStateOrder()

            Return True

        Catch ex As Exception


            Return False

        End Try

    End Function

    Private Function W_PRCbShowBrowseDataCurrencyInfo() As Boolean
        Try
            If Me.FTOrderNo.Text.Trim() = "" Then Return False

            Dim oDBdtCurrency As DataTable

            Dim oStrBuilder As New System.Text.StringBuilder()

            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("SELECT M2.FTCurCode AS FTCurCode, M1.FNAmnt")
            oStrBuilder.AppendLine("FROM (SELECT L1.FNHSysCurId AS FNHSysCurId, ISNULL(SUM(L2.FNGrandAmnt),0) AS FNAmnt")
            oStrBuilder.AppendLine("      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS L1 WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS L2 WITH(NOLOCK) ON L1.FTOrderNo = L2.FTOrderNo")
            oStrBuilder.AppendLine("           AND L1.FTSubOrderNo = L2.FTSubOrderNo")
            oStrBuilder.AppendLine("      WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "'")
            oStrBuilder.AppendLine("      GROUP BY L1.FNHSysCurId) AS M1 INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.[TFINMCurrency] AS M2 WITH(NOLOCK) ON M1.FNHSysCurId = M2.FNHSysCurId")
            oStrBuilder.AppendLine("ORDER BY M2.FTCurCode ASC;")

            Dim tSql$
            tSql = ""
            tSql = oStrBuilder.ToString()

            oDBdtCurrency = HI.Conn.SQLConn.GetDataTable(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

            Me.GridView3.ActiveFilter.Clear()
            Me.ogdCurrencyBreakdown.DataSource = oDBdtCurrency
            Me.GridView3.BestFitColumns()

            Return True
        Catch ex As Exception
            'Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
            Return False
        End Try

    End Function

    Private Function W_PRCbShowBrowseDataOrderBreakdownInfo_REM_20131222() As Boolean
        Try
            If Me.FTOrderNo.Properties.Tag.ToString() = "" Then Return False

            Dim oDBdtOrderBreakdown As DataTable

            Dim oStrBuilder As New System.Text.StringBuilder()

            oStrBuilder.Remove(0, oStrBuilder.Length)

            'oStrBuilder.AppendLine("DECLARE @tOrderNo    NVARCHAR(30);")
            'oStrBuilder.AppendLine("DECLARE @ColListSize NVARCHAR(MAX);")
            'oStrBuilder.AppendLine("DECLARE @oStrBuilder NVARCHAR(MAX);")
            'oStrBuilder.AppendLine("SET @tOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "';")
            'oStrBuilder.AppendLine("SET @ColListSize = N'';")
            'oStrBuilder.AppendLine("SELECT @ColListSize = STUFF(( SELECT ', p.' + QUOTENAME(FTMatSizeCode)")
            'oStrBuilder.AppendLine("                              FROM HITECH_MASTER.dbo.TMERMMatSize")
            'oStrBuilder.AppendLine("                              ORDER BY HITECH_MASTER.dbo.TMERMMatSize.FNMatSizeSeq ASC")
            'oStrBuilder.AppendLine("                              FOR XML PATH('')")
            'oStrBuilder.AppendLine("                             ), 1, 2, '');")
            'oStrBuilder.AppendLine("PRINT @ColListSize;")
            'oStrBuilder.AppendLine("SET @oStrBuilder = N'SELECT ROW_NUMBER() OVER(ORDER BY p.FNHSysMatColorId ASC) AS FNSeq' + CHAR(13) +")
            'oStrBuilder.AppendLine("             '               ,(SELECT q.FTMatColorCode FROM HITECH_MASTER.dbo.TMERMMatColor AS q WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorCode' + CHAR(13) +")

            'If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
            '    oStrBuilder.AppendLine("             '               ,(SELECT q.FTMatColorNameEN FROM HITECH_MASTER.dbo.TMERMMatColor AS q WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorName, ' + @ColListSize + ' ' + CHAR(13) +")
            'Else
            '    oStrBuilder.AppendLine("             '               ,(SELECT q.FTMatColorNameTH FROM HITECH_MASTER.dbo.TMERMMatColor AS q WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorName, ' + @ColListSize + ' ' + CHAR(13) +")
            'End If

            'oStrBuilder.AppendLine("             'FROM (SELECT L1.FNHSysMatColorId, L1.FNQuantity, L2.FTMatSizeCode' + CHAR(13) +")
            'oStrBuilder.AppendLine("             '      FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS L1 INNER JOIN HITECH_MASTER.dbo.TMERMMatSize AS L2 ON L1.FNHSysMatSizeId = L2.FNHSysMatSizeId' + CHAR(13) +")
            'oStrBuilder.AppendLine("             '      WHERE L1.FTOrderNO = ''' + @tOrderNo + ''') AS j' + CHAR(13) +")
            'oStrBuilder.AppendLine("             '      PIVOT' + CHAR(13) +")
            'oStrBuilder.AppendLine("             '     (' + CHAR(13) +")
            'oStrBuilder.AppendLine("             '       SUM(FNQuantity) FOR FTMatSizeCode IN (' + REPLACE(@ColListSize, 'p.[', '[') + ')'  + CHAR(13) +")
            'oStrBuilder.AppendLine("             '     ) AS p;'")
            'oStrBuilder.AppendLine("")
            'oStrBuilder.AppendLine("PRINT @oStrBuilder;")
            'oStrBuilder.AppendLine("EXEC sp_executesql @oStrBuilder;")

            oStrBuilder.AppendLine("DECLARE @tOrderNo    NVARCHAR(30);")
            oStrBuilder.AppendLine("DECLARE @ColListSize NVARCHAR(MAX);")
            oStrBuilder.AppendLine("DECLARE @oStrBuilder NVARCHAR(MAX);")
            oStrBuilder.AppendLine("SET @tOrderNo = N'" & Me.FTOrderNo.Text & "';")
            oStrBuilder.AppendLine("SET @ColListSize = N'';")
            oStrBuilder.AppendLine("SELECT @ColListSize = STUFF(( SELECT ', p.' + QUOTENAME(M2.FTMatSizeCode)")
            oStrBuilder.AppendLine("                              FROM HITECH_MASTER.dbo.TMERMMatSize AS M2")
            oStrBuilder.AppendLine("                              WHERE EXISTS(SELECT 'T'")
            oStrBuilder.AppendLine("                                    FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS M1")
            oStrBuilder.AppendLine("                                    WHERE M1.FNHSysMatSizeId = M2.FNHSysMatSizeId")
            oStrBuilder.AppendLine("                                          AND M1.FTOrderNo = @tOrderNo)")
            oStrBuilder.AppendLine("                              ORDER BY M2.FNMatSizeSeq ASC")
            oStrBuilder.AppendLine("                              FOR XML PATH('')")
            oStrBuilder.AppendLine("                             ), 1, 2, '');")
            oStrBuilder.AppendLine("PRINT @ColListSize;")
            oStrBuilder.AppendLine("SET @oStrBuilder = N'SELECT ROW_NUMBER() OVER(ORDER BY p.FNHSysMatColorId ASC) AS FNSeq' + CHAR(13) +")
            oStrBuilder.AppendLine("             '               ,(SELECT q.FTMatColorCode FROM HITECH_MASTER.dbo.TMERMMatColor AS q WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorCode' + CHAR(13) +")

            If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                oStrBuilder.AppendLine("             '               ,(SELECT q.FTMatColorNameEN FROM HITECH_MASTER.dbo.TMERMMatColor AS q WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorName, ' + @ColListSize + ' ' + CHAR(13) +")
            Else
                oStrBuilder.AppendLine("             '               ,(SELECT q.FTMatColorNameTH FROM HITECH_MASTER.dbo.TMERMMatColor AS q WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorName, ' + @ColListSize + ' ' + CHAR(13) +")
            End If

            oStrBuilder.AppendLine("             'FROM (SELECT L1.FNHSysMatColorId, L1.FNQuantity, L2.FTMatSizeCode' + CHAR(13) +")
            oStrBuilder.AppendLine("             '      FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS L1 INNER JOIN HITECH_MASTER.dbo.TMERMMatSize AS L2 ON L1.FNHSysMatSizeId = L2.FNHSysMatSizeId' + CHAR(13) +")
            oStrBuilder.AppendLine("             '      WHERE L1.FTOrderNO = ''' + @tOrderNo + ''') AS j' + CHAR(13) +")
            oStrBuilder.AppendLine("             '      PIVOT' + CHAR(13) +")
            oStrBuilder.AppendLine("             '     (' + CHAR(13) +")
            oStrBuilder.AppendLine("             '       SUM(FNQuantity) FOR FTMatSizeCode IN (' + REPLACE(@ColListSize, 'p.[', '[') + ')'  + CHAR(13) +")
            oStrBuilder.AppendLine("             '     ) AS p;'")
            oStrBuilder.AppendLine("")
            oStrBuilder.AppendLine("PRINT @oStrBuilder;")
            oStrBuilder.AppendLine("EXEC sp_executesql @oStrBuilder;")

            'oDBdtOrderBreakdown = HI.Conn.SQLConn.GetDataTable(oStrBuilder.ToString(), Conn.DB.DataBaseName.DB_MERCHAN)
            Dim tSql As String
            tSql = ""
            tSql = oStrBuilder.ToString()

            oDBdtOrderBreakdown = HI.Conn.SQLConn.GetDataTable(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

            Me.GridView1.Columns.Clear()
            Me.ogdColorSizeBreakdown.DataSource = oDBdtOrderBreakdown
            Me.ogdColorSizeBreakdown.RefreshDataSource()
            Me.GridView1.RefreshData()

            If Not Me.ogdColorSizeBreakdown.DataSource Is Nothing AndAlso Me.GridView1.RowCount > 0 Then
                Dim nCntCol As Integer
                nCntCol = Me.GridView1.Columns.Count
                For nLoop As Integer = 0 To nCntCol - 1
                    Me.GridView1.Columns(nLoop).OptionsColumn.AllowEdit = False
                    Me.GridView1.Columns(nLoop).OptionsColumn.AllowMove = False
                    Select Case nLoop
                        Case 0
                            If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                                Me.GridView1.Columns(0).Caption = "Sequence."
                            Else
                                Me.GridView1.Columns(0).Caption = "ลำดับที่รายการ"
                            End If
                        Case 1
                            If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                                Me.GridView1.Columns(1).Caption = "Color Code."
                            Else
                                Me.GridView1.Columns(1).Caption = "รหัส สี."
                            End If
                        Case 2
                            If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                                Me.GridView1.Columns(2).Caption = "Color Desciption."
                            Else
                                Me.GridView1.Columns(2).Caption = "รายละเอียดสี."
                            End If
                        Case Else
                            '...Size Breakdown
                            'Dim tColCaption As String = oDBdtOrderBreakdown.Columns(nLoop).ColumnName.ToString()
                            'If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                            '    Me.GridView1.Columns(nLoop).Caption = "Size. " & tColCaption
                            'Else
                            '    Me.GridView1.Columns(nLoop).Caption = "ไซส์. " & tColCaption
                            'End If

                    End Select

                Next nLoop

                Me.GridView1.BestFitColumns()

            End If

            Dim oDBdtSummaryOrderNo As DataTable

            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("SELECT B.FTOrderNo")
            oStrBuilder.AppendLine("     , ISNULL(SUM(B.FNQuantity),0) AS FNQuantity")
            oStrBuilder.AppendLine("     , ISNULL(SUM(B.FNQuantityExtra),0) AS FNQuantityExtra")
            oStrBuilder.AppendLine("     , ISNULL(SUM(B.FNGrandQuantity),0) AS FNGrandQuantity")
            oStrBuilder.AppendLine("     , ISNULL(SUM(B.FNAmt),0) AS FNAmt")
            oStrBuilder.AppendLine("     , ISNULL(SUM(B.FNAmntExtra),0) AS FNAmntExtra")
            oStrBuilder.AppendLine("     , ISNULL(SUM(B.FNGrandAmnt),0) AS FNGrandAmnt")
            oStrBuilder.AppendLine("FROM dbo.TMERTOrderSub_BreakDown AS B")
            oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & Me.FTOrderNo.Text & "'")
            oStrBuilder.AppendLine("GROUP BY B.FTOrderNo;")

            tSql = ""
            tSql = oStrBuilder.ToString()

            oDBdtSummaryOrderNo = HI.Conn.SQLConn.GetDataTable(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtSummaryOrderNo.Rows.Count > 0 Then
                Me.FNOrderQty.Value = oDBdtSummaryOrderNo.Rows(0).Item("FNQuantity")
                Me.FNExtraQty.Value = oDBdtSummaryOrderNo.Rows(0).Item("FNQuantityExtra")
                Me.FNGrandQty.Value = oDBdtSummaryOrderNo.Rows(0).Item("FNGrandQuantity")
                Me.FNOrderAmt.Value = oDBdtSummaryOrderNo.Rows(0).Item("FNAmt")
                Me.FNAmntExtra.Value = oDBdtSummaryOrderNo.Rows(0).Item("FNAmntExtra")
                Me.FNGrandAmt.Value = oDBdtSummaryOrderNo.Rows(0).Item("FNGrandAmnt")
            Else
                Me.FNOrderQty.Value = 0
                Me.FNExtraQty.Value = 0
                Me.FNGrandQty.Value = 0
                Me.FNOrderAmt.Value = 0
                Me.FNAmntExtra.Value = 0
                Me.FNGrandAmt.Value = 0
            End If

            Return True
        Catch ex As Exception
            'Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
            Me.FNOrderQty.Value = 0
            Me.FNExtraQty.Value = 0
            Me.FNGrandQty.Value = 0
            Me.FNOrderAmt.Value = 0
            Me.FNAmntExtra.Value = 0
            Me.FNGrandAmt.Value = 0
            Return False
        End Try

    End Function

    Private Function W_PRCbShowBrowseDataOrderBreakdownInfo() As Boolean
        Try
            If Me.FTOrderNo.Properties.Tag.ToString() = "" Then Return False

            Dim oDBdtOrderBreakdown As DataTable
            Dim oDBdtColorwaySizeBreakdown As DataTable

            Dim oStrBuilder As New System.Text.StringBuilder()

            'oStrBuilder.Remove(0, oStrBuilder.Length)

            'oStrBuilder.AppendLine("DECLARE @tOrderNo    NVARCHAR(30);")
            'oStrBuilder.AppendLine("DECLARE @ColListSize NVARCHAR(MAX);")
            'oStrBuilder.AppendLine("DECLARE @oStrBuilder NVARCHAR(MAX);")
            'oStrBuilder.AppendLine("SET @tOrderNo = N'" & Me.FTOrderNo.Text.Trim() & "';")
            'oStrBuilder.AppendLine("SET @ColListSize = N'';")
            'oStrBuilder.AppendLine("SELECT @ColListSize = STUFF((SELECT ', p.' + QUOTENAME(M2.FTMatSizeCode)")
            'oStrBuilder.AppendLine("                              FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS M2 WITH(NOLOCK)")
            'oStrBuilder.AppendLine("                              WHERE EXISTS(SELECT 'T'")
            'oStrBuilder.AppendLine("                                    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS M1 WITH(NOLOCK)")
            'oStrBuilder.AppendLine("                                    WHERE M1.FNHSysMatSizeId = M2.FNHSysMatSizeId")
            'oStrBuilder.AppendLine("                                          AND M1.FTOrderNo = @tOrderNo)")
            'oStrBuilder.AppendLine("                              ORDER BY M2.FNMatSizeSeq ASC")
            'oStrBuilder.AppendLine("                              FOR XML PATH('')")
            'oStrBuilder.AppendLine("                             ), 1, 2, '');")
            'oStrBuilder.AppendLine("PRINT @ColListSize;")
            'oStrBuilder.AppendLine("SET @oStrBuilder = N'SELECT A.* FROM  (SELECT (SELECT q.FTMatColorCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS q WITH(NOLOCK) WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorCode' + CHAR(13) +")

            'If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
            '    oStrBuilder.AppendLine("             '               ,(SELECT q.FTMatColorNameEN + ''/'' + q.FTMatColorNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS q WITH(NOLOCK) WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorName, ' + @ColListSize + ' ' + CHAR(13) +")
            'ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
            '    oStrBuilder.AppendLine("             '               ,(SELECT q.FTMatColorNameEN + ''/'' + q.FTMatColorNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS q WITH(NOLOCK) WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorName, ' + @ColListSize + ' ' + CHAR(13) +")
            'Else
            '    oStrBuilder.AppendLine("             '               ,(SELECT q.FTMatColorNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS q WITH(NOLOCK) WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorName, ' + @ColListSize + ' ' + CHAR(13) +")
            'End If

            'oStrBuilder.AppendLine("             'FROM (SELECT L1.FNHSysMatColorId, L1.FNGrandQuantity, L2.FTMatSizeCode' + CHAR(13) +")
            'oStrBuilder.AppendLine("             '      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS L1 WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS L2 WITH(NOLOCK) ON L1.FNHSysMatSizeId = L2.FNHSysMatSizeId' + CHAR(13) +")
            'oStrBuilder.AppendLine("             '      WHERE L1.FTOrderNO = ''' + @tOrderNo + ''') AS j' + CHAR(13) +")
            'oStrBuilder.AppendLine("             '      PIVOT' + CHAR(13) +")
            'oStrBuilder.AppendLine("             '     (' + CHAR(13) +")
            'oStrBuilder.AppendLine("             '       SUM(FNGrandQuantity) FOR FTMatSizeCode IN (' + REPLACE(@ColListSize, 'p.[', '[') + ')'  + CHAR(13) +")
            'oStrBuilder.AppendLine("             '     ) AS p' + CHAR(13) +")
            'oStrBuilder.AppendLine("             ' )AS A LEFT JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS B WITH(NOLOCK)  ON A.FTMatColorCode = B.FTMatColorCode  ORDER BY B.FNMatColorSeq'")
            'oStrBuilder.AppendLine("PRINT @oStrBuilder;")
            'oStrBuilder.AppendLine("EXEC sp_executesql @oStrBuilder;")

            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("DECLARE @tOrderNo    NVARCHAR(30);")
            oStrBuilder.AppendLine("DECLARE @ColListSize NVARCHAR(MAX);")
            oStrBuilder.AppendLine("DECLARE @ColValSizeBreakdown NVARCHAR(MAX);")
            oStrBuilder.AppendLine("DECLARE @oStrBuilder NVARCHAR(MAX);")
            oStrBuilder.AppendLine("SET @tOrderNo = N'" & Me.FTOrderNo.Text.Trim() & "';")
            oStrBuilder.AppendLine("SET @ColListSize = N'';")
            oStrBuilder.AppendLine("SET @ColValSizeBreakdown = N'';")

            oStrBuilder.AppendLine("SELECT @ColListSize = STUFF((SELECT ', p.' + QUOTENAME(M2.FTMatSizeCode)")
            oStrBuilder.AppendLine("                              FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS M2 WITH(NOLOCK)")
            oStrBuilder.AppendLine("                              WHERE EXISTS(SELECT 'T'")
            oStrBuilder.AppendLine("                                    FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS M1 WITH(NOLOCK)")
            oStrBuilder.AppendLine("                                    WHERE M1.FNHSysMatSizeId = M2.FNHSysMatSizeId")
            oStrBuilder.AppendLine("                                          AND M1.FTOrderNo = @tOrderNo)")
            oStrBuilder.AppendLine("                              ORDER BY M2.FNMatSizeSeq ASC")
            oStrBuilder.AppendLine("                              FOR XML PATH('')")
            oStrBuilder.AppendLine("                             ), 1, 2, '');")
            oStrBuilder.AppendLine("PRINT @ColListSize;")

            oStrBuilder.AppendLine("SELECT @ColValSizeBreakdown = STUFF((SELECT ', ISNULL(' + QUOTENAME(M2.FTMatSizeCode) + ', 0) AS ' +  QUOTENAME(M2.FTMatSizeCode)")
            oStrBuilder.AppendLine("                                     FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS M2 WITH(NOLOCK)")
            oStrBuilder.AppendLine("                                     WHERE EXISTS(SELECT 'T'")
            oStrBuilder.AppendLine("                                                  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS M1 WITH(NOLOCK)")
            oStrBuilder.AppendLine("                                                  WHERE M1.FNHSysMatSizeId = M2.FNHSysMatSizeId")
            oStrBuilder.AppendLine("                                                        AND M1.FTOrderNo = @tOrderNo)")
            oStrBuilder.AppendLine("                                     ORDER BY M2.FNMatSizeSeq ASC")
            oStrBuilder.AppendLine("                                     FOR XML PATH('')")
            oStrBuilder.AppendLine("                                     ), 1, 2, '');")
            oStrBuilder.AppendLine("PRINT '@ColValSizeBreakdown : ' + @ColValSizeBreakdown;")

            REM oStrBuilder.AppendLine("SET @oStrBuilder = N'SELECT A.* FROM  (SELECT (SELECT q.FTMatColorCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS q WITH(NOLOCK) WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorCode' + CHAR(13) +")

            '...Modify 2014/12/22 display colorway size breakdown not exists in factory sub order no.value is zero
            oStrBuilder.AppendLine("SET @oStrBuilder = N'SELECT A.FTMatColorCode, A.FTMatColorName, ' + CHAR(13) +")
            oStrBuilder.AppendLine("'       ' + @ColValSizeBreakdown + ' ' + CHAR(13) +")

            oStrBuilder.AppendLine("'FROM  (SELECT (SELECT q.FTMatColorCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS q WITH(NOLOCK) WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorCode' + CHAR(13) +")

            If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                oStrBuilder.AppendLine("             '               ,(SELECT q.FTMatColorNameEN + ''/'' + q.FTMatColorNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS q WITH(NOLOCK) WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorName, ' + @ColListSize + ' ' + CHAR(13) +")
            ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                oStrBuilder.AppendLine("             '               ,(SELECT q.FTMatColorNameEN + ''/'' + q.FTMatColorNameTH FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS q WITH(NOLOCK) WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorName, ' + @ColListSize + ' ' + CHAR(13) +")
            Else
                oStrBuilder.AppendLine("             '               ,(SELECT q.FTMatColorNameEN FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS q WITH(NOLOCK) WHERE q.FNHSysMatColorId = p.FNHSysMatColorId) AS FTMatColorName, ' + @ColListSize + ' ' + CHAR(13) +")
            End If

            oStrBuilder.AppendLine("             'FROM (SELECT L1.FNHSysMatColorId, L1.FNGrandQuantity, L2.FTMatSizeCode' + CHAR(13) +")
            oStrBuilder.AppendLine("             '      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS L1 WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS L2 WITH(NOLOCK) ON L1.FNHSysMatSizeId = L2.FNHSysMatSizeId' + CHAR(13) +")
            oStrBuilder.AppendLine("             '      WHERE L1.FTOrderNO = ''' + @tOrderNo + ''') AS j' + CHAR(13) +")
            oStrBuilder.AppendLine("             '      PIVOT' + CHAR(13) +")
            oStrBuilder.AppendLine("             '     (' + CHAR(13) +")
            oStrBuilder.AppendLine("             '       SUM(FNGrandQuantity) FOR FTMatSizeCode IN (' + REPLACE(@ColListSize, 'p.[', '[') + ')'  + CHAR(13) +")
            oStrBuilder.AppendLine("             '     ) AS p' + CHAR(13) +")
            oStrBuilder.AppendLine("             ' )AS A LEFT JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS B WITH(NOLOCK)  ON A.FTMatColorCode = B.FTMatColorCode  ORDER BY B.FNMatColorSeq'")
            oStrBuilder.AppendLine("PRINT @oStrBuilder;")
            oStrBuilder.AppendLine("EXEC sp_executesql @oStrBuilder;")

            Dim tSql As String
            tSql = ""
            tSql = oStrBuilder.ToString()

            oDBdtOrderBreakdown = HI.Conn.SQLConn.GetDataTable(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

            oGridViewColorSizeBreakdown = Me.ogdColorSizeBreakdown.Views(0)
            Call W_PRCbRemoveGridViewColumn(oGridViewColorSizeBreakdown)

            Me.ogdColorSizeBreakdown.DataSource = Nothing

            oDBdtColorwaySizeBreakdown = New DataTable()

            If oDBdtOrderBreakdown.Rows.Count > 0 Then
                Dim nColumnColwaySizeBreakdown As Integer = oDBdtOrderBreakdown.Columns.Count
                Dim oColColorwaySizeBreakdown As DataColumn
                For nLoopCol As Integer = 0 To nColumnColwaySizeBreakdown - 1

                    Select Case oDBdtOrderBreakdown.Columns(nLoopCol).ColumnName.ToString.ToUpper
                        Case "FTMatColorCode".ToString.ToUpper, "FTMatColorName".ToString.ToUpper
                            Continue For
                    End Select

                    If nLoopCol < 2 Then
                        oColColorwaySizeBreakdown = New DataColumn(oDBdtOrderBreakdown.Columns(nLoopCol).ColumnName, System.Type.GetType("System.String"))
                    Else
                        oColColorwaySizeBreakdown = New DataColumn(oDBdtOrderBreakdown.Columns(nLoopCol).ColumnName, System.Type.GetType("System.Double"))
                    End If

                    oColColorwaySizeBreakdown.Caption = oDBdtOrderBreakdown.Columns(nLoopCol).ColumnName

                    With oGridViewColorSizeBreakdown
                        .Columns.AddField(oColColorwaySizeBreakdown.ColumnName)
                        .Columns(oColColorwaySizeBreakdown.ColumnName).FieldName = oColColorwaySizeBreakdown.ColumnName
                        .Columns(oColColorwaySizeBreakdown.ColumnName).Name = oColColorwaySizeBreakdown.ColumnName
                        .Columns(oColColorwaySizeBreakdown.ColumnName).Caption = oColColorwaySizeBreakdown.Caption
                        .Columns(oColColorwaySizeBreakdown.ColumnName).Visible = True
                        .Columns(oColColorwaySizeBreakdown.ColumnName).VisibleIndex = nLoopCol
                        .Columns(oColColorwaySizeBreakdown.ColumnName).OptionsColumn.AllowEdit = False
                        .Columns(oColColorwaySizeBreakdown.ColumnName).OptionsColumn.AllowMove = False
                        .Columns(oColColorwaySizeBreakdown.ColumnName).OptionsColumn.AllowSort = DefaultBoolean.False
                        .Columns(oColColorwaySizeBreakdown.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center

                        If nLoopCol > 1 Then
                            .Columns(oColColorwaySizeBreakdown.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                            .Columns(oColColorwaySizeBreakdown.ColumnName).DisplayFormat.FormatString = "{0:N0}"
                            .Columns(oColColorwaySizeBreakdown.ColumnName).Fixed = FixedStyle.None
                            .Columns(oColColorwaySizeBreakdown.ColumnName).OptionsColumn.AllowSize = False
                        Else
                            .Columns(oColColorwaySizeBreakdown.ColumnName).Fixed = FixedStyle.Left
                            .Columns(oColColorwaySizeBreakdown.ColumnName).OptionsColumn.AllowSize = False
                        End If
                    End With


                    oDBdtColorwaySizeBreakdown.Columns.Add(oColColorwaySizeBreakdown.ColumnName, oColColorwaySizeBreakdown.DataType)

                Next nLoopCol

                oColColorwaySizeBreakdown = New DataColumn("FNRowTotal", System.Type.GetType("System.Double"))
                oColColorwaySizeBreakdown.Caption = "T/T"

                oGridViewColorSizeBreakdown.Columns.AddField(oColColorwaySizeBreakdown.ColumnName)
                oGridViewColorSizeBreakdown.Columns(oColColorwaySizeBreakdown.ColumnName).FieldName = oColColorwaySizeBreakdown.ColumnName
                oGridViewColorSizeBreakdown.Columns(oColColorwaySizeBreakdown.ColumnName).Name = oColColorwaySizeBreakdown.ColumnName
                oGridViewColorSizeBreakdown.Columns(oColColorwaySizeBreakdown.ColumnName).Caption = oColColorwaySizeBreakdown.Caption
                oGridViewColorSizeBreakdown.Columns(oColColorwaySizeBreakdown.ColumnName).Visible = True
                oGridViewColorSizeBreakdown.Columns(oColColorwaySizeBreakdown.ColumnName).Fixed = FixedStyle.Right
                oGridViewColorSizeBreakdown.Columns(oColColorwaySizeBreakdown.ColumnName).OptionsColumn.AllowSize = False
                oGridViewColorSizeBreakdown.Columns(oColColorwaySizeBreakdown.ColumnName).VisibleIndex = nColumnColwaySizeBreakdown
                oGridViewColorSizeBreakdown.Columns(oColColorwaySizeBreakdown.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewColorSizeBreakdown.Columns(oColColorwaySizeBreakdown.ColumnName).OptionsColumn.AllowMove = False
                oGridViewColorSizeBreakdown.Columns(oColColorwaySizeBreakdown.ColumnName).OptionsColumn.AllowSort = False
                oGridViewColorSizeBreakdown.Columns(oColColorwaySizeBreakdown.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center

                oGridViewColorSizeBreakdown.Columns(oColColorwaySizeBreakdown.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                oGridViewColorSizeBreakdown.Columns(oColColorwaySizeBreakdown.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                oDBdtColorwaySizeBreakdown.Columns.Add(oColColorwaySizeBreakdown.ColumnName, oColColorwaySizeBreakdown.DataType)

                oDBdtColorwaySizeBreakdown.AcceptChanges()
                '...iterate loop add data to datatable

                oDBdtColorwaySizeBreakdown = oDBdtOrderBreakdown.Copy
                'oDBdtColorwaySizeBreakdown.Columns.Add("FNRowTotal", GetType(Double))
                oDBdtColorwaySizeBreakdown.Columns.Add("FNRowTotal", System.Type.GetType("System.Double"))

                For Each oDataRowColorwaySizeBreakdown As DataRow In oDBdtColorwaySizeBreakdown.Rows
                    Dim nFNRowTotal As Double = 0
                    For Each Col As DataColumn In oDBdtColorwaySizeBreakdown.Columns
                        Select Case Col.ColumnName.ToString
                            Case "FTMatColorName", "FTMatColorCode", "FNRowTotal"
                            Case Else
                                nFNRowTotal = nFNRowTotal + Val(oDataRowColorwaySizeBreakdown.Item(Col).ToString)
                        End Select

                    Next

                    oDataRowColorwaySizeBreakdown.Item("FNRowTotal") = nFNRowTotal
                Next

                Dim oRowItem As DataRow
                If oDBdtColorwaySizeBreakdown.Rows.Count > 0 Then
                    oRowItem = oDBdtColorwaySizeBreakdown.NewRow()
                    oRowItem(0) = ""

                    If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                        oRowItem(1) = "Total/รวม :"
                    ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                        oRowItem(1) = "Total/รวม :"
                    Else
                        oRowItem(1) = "Total : "
                    End If

                    For nLoopSizeBreakdown = 2 To oDBdtColorwaySizeBreakdown.Columns.Count - 1
                        Dim nGrandTotalCol# = 0
                        For nLoopRowColorway = 0 To oDBdtColorwaySizeBreakdown.Rows.Count - 1
                            nGrandTotalCol = nGrandTotalCol + 0
                            If Not DBNull.Value.Equals(oDBdtColorwaySizeBreakdown.Rows(nLoopRowColorway).Item(nLoopSizeBreakdown)) Then
                                nGrandTotalCol = nGrandTotalCol + Val(oDBdtColorwaySizeBreakdown.Rows(nLoopRowColorway).Item(nLoopSizeBreakdown).ToString())
                            Else
                                nGrandTotalCol = nGrandTotalCol + 0
                            End If

                        Next nLoopRowColorway

                        oRowItem.Item(nLoopSizeBreakdown) = nGrandTotalCol

                    Next nLoopSizeBreakdown

                    oDBdtColorwaySizeBreakdown.Rows.Add(oRowItem)

                    oDBdtColorwaySizeBreakdown.AcceptChanges()

                End If

                oGridViewColorSizeBreakdown.ActiveFilter.Clear()

                '...display value colorway size breakdown not exists in factory sub order no.
                'Dim nLoopRowSizeBreakdwonQty As Integer
                'For nLoopRowSizeBreakdwonQty = 0 To oDBdtColorwaySizeBreakdown.Rows.Count - 1
                '    For nLoopColSizeBreakdownQty As Integer = 2 To oDBdtColorwaySizeBreakdown.Columns.Count - 1
                '        If DBNull.Value.Equals(oDBdtColorwaySizeBreakdown.Rows(nLoopRowSizeBreakdwonQty).Item(nLoopColSizeBreakdownQty)) Or oDBdtColorwaySizeBreakdown.Rows(nLoopRowSizeBreakdwonQty).Item(nLoopColSizeBreakdownQty).ToString = "" Then
                '            oDBdtColorwaySizeBreakdown.Rows(nLoopRowSizeBreakdwonQty).Item(nLoopColSizeBreakdownQty) = 0
                '        Else
                '        End If

                '    Next

                'Next

                'oDBdtColorwaySizeBreakdown.AcceptChanges()

                ogdColorSizeBreakdown.DataSource = oDBdtColorwaySizeBreakdown
                ogdColorSizeBreakdown = oGridViewColorSizeBreakdown.GridControl
                oGridViewColorSizeBreakdown.OptionsView.ColumnAutoWidth = False
                ogdColorSizeBreakdown.Refresh()
                oGridViewColorSizeBreakdown.RefreshData()

            End If

            '...Summary Main Order No. from all factory sub order no.
            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("SELECT B.FTOrderNo")
            oStrBuilder.AppendLine("     , ISNULL(SUM(B.FNQuantity),0) AS FNQuantity")
            oStrBuilder.AppendLine("     , ISNULL(SUM(B.FNQuantityExtra),0) AS FNQuantityExtra")
            oStrBuilder.AppendLine("     , ISNULL(SUM(B.FNGrandQuantity),0) AS FNGrandQuantity")
            oStrBuilder.AppendLine("     , ISNULL(SUM(B.FNAmt),0) AS FNAmt")
            oStrBuilder.AppendLine("     , ISNULL(SUM(B.FNAmntExtra),0) AS FNAmntExtra")
            oStrBuilder.AppendLine("     , ISNULL(SUM(B.FNGrandAmnt),0) AS FNGrandAmnt")
            oStrBuilder.AppendLine("     , ISNULL(SUM(B.FNGarmentQtyTest),0) AS FNOrderTestQty")
            oStrBuilder.AppendLine("     , ISNULL(SUM(B.FNAmntQtyTest),0) AS FNOrderTestAmnt")
            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS B WITH(NOLOCK)")
            oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "'")
            oStrBuilder.AppendLine("GROUP BY B.FTOrderNo;")

            tSql = ""
            tSql = oStrBuilder.ToString()

            Dim oDBdtSummaryOrderNo As DataTable
            oDBdtSummaryOrderNo = HI.Conn.SQLConn.GetDataTable(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtSummaryOrderNo.Rows.Count > 0 Then
                Me.FNOrderQty.Value = IIf(IsDBNull(oDBdtSummaryOrderNo.Rows(0).Item("FNQuantity")), 0, oDBdtSummaryOrderNo.Rows(0).Item("FNQuantity"))
                Me.FNExtraQty.Value = IIf(IsDBNull(oDBdtSummaryOrderNo.Rows(0).Item("FNQuantityExtra")), 0, oDBdtSummaryOrderNo.Rows(0).Item("FNQuantityExtra"))
                Me.FNOrderTestQty.Value = IIf(IsDBNull(oDBdtSummaryOrderNo.Rows(0).Item("FNOrderTestQty")), 0, oDBdtSummaryOrderNo.Rows(0).Item("FNOrderTestQty"))
                Me.FNGrandQty.Value = IIf(IsDBNull(oDBdtSummaryOrderNo.Rows(0).Item("FNGrandQuantity")), 0, oDBdtSummaryOrderNo.Rows(0).Item("FNGrandQuantity"))
                Me.FNOrderAmt.Value = IIf(IsDBNull(oDBdtSummaryOrderNo.Rows(0).Item("FNAmt")), 0, oDBdtSummaryOrderNo.Rows(0).Item("FNAmt"))
                Me.FNAmntExtra.Value = IIf(IsDBNull(oDBdtSummaryOrderNo.Rows(0).Item("FNAmntExtra")), 0, oDBdtSummaryOrderNo.Rows(0).Item("FNAmntExtra"))
                Me.FNOrderTestAmnt.Value = IIf(IsDBNull(oDBdtSummaryOrderNo.Rows(0).Item("FNOrderTestAmnt")), 0, oDBdtSummaryOrderNo.Rows(0).Item("FNOrderTestAmnt"))
                Me.FNGrandAmt.Value = IIf(IsDBNull(oDBdtSummaryOrderNo.Rows(0).Item("FNGrandAmnt")), 0, oDBdtSummaryOrderNo.Rows(0).Item("FNGrandAmnt"))
            Else
                Me.FNOrderQty.Value = 0
                Me.FNExtraQty.Value = 0
                Me.FNOrderTestQty.Value = 0
                Me.FNGrandQty.Value = 0
                Me.FNOrderAmt.Value = 0
                Me.FNAmntExtra.Value = 0
                Me.FNOrderTestAmnt.Value = 0
                Me.FNGrandAmt.Value = 0
            End If

            Me.FNOrderQty.Properties.DisplayFormat.FormatString = "n0"
            Me.FNExtraQty.Properties.DisplayFormat.FormatString = "n0"
            Me.FNOrderTestQty.Properties.DisplayFormat.FormatString = "n0"
            Me.FNGrandQty.Properties.DisplayFormat.FormatString = "n0"

            Return True

        Catch ex As Exception



            Me.FNOrderQty.Value = 0
            Me.FNExtraQty.Value = 0
            Me.FNOrderTestQty.Value = 0
            Me.FNGrandQty.Value = 0
            Me.FNOrderAmt.Value = 0
            Me.FNAmntExtra.Value = 0
            Me.FNOrderTestAmnt.Value = 0
            Me.FNGrandAmt.Value = 0

            Return False

        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderInfo_BACKUP_20150107_1516(ByVal ptSubOrderNo$) As Boolean
        Try
            _ProcLoad = True

            Static _Proc As Boolean

            If Not (_Proc) Then
                _Proc = True

                Dim _Dt As DataTable
                Dim _Str As String

                Dim oStrBuilder As New System.Text.StringBuilder()

                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("SELECT A.[FDSubOrderDate]")
                oStrBuilder.AppendLine("     , A.[FTSubOrderBy]")
                oStrBuilder.AppendLine("     , A.[FDProDate]")
                oStrBuilder.AppendLine("     , A.[FDShipDate]")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L1.FTContinentCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCNMContinent AS L1 WITH (NOLOCK) WHERE L1.FNHSysContinentId = A.FNHSysContinentId),'') AS FNHSysContinentId")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L2.FTCountryCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCNMCountry AS L2 WITH (NOLOCK) WHERE L2.FNHSysCountryId = A.FNHSysCountryId AND L2.FNHSysContinentId = A.FNHSysContinentId),'') AS FNHSysCountryId")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L3.FTProvinceCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCMMProvince AS L3 WITH (NOLOCK) WHERE L3.FNHSysProvinceId = A.FNHSysProvinceId AND L3.FNHSysCountryId = A.FNHSysCountryId),'')  AS FNHSysProvinceId")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L4.FTShipModeCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCNMShipMode AS L4 WITH (NOLOCK) WHERE L4.FNHSysShipModeId = A.FNHSysShipModeId),'') AS FNHSysShipModeId")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L5.FTCurCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TFINMCurrency AS L5 WITH (NOLOCK) WHERE L5.FNHSysCurId = A.FNHSysCurId),'') AS FNHSysCurId")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L6.FTGenderCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMGender AS L6 WITH (NOLOCK) WHERE L6.FNHSysGenderId = A.FNHSysGenderId),'') AS FNHSysGenderId")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L7.FTUnitCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCNMUnit AS L7 WITH (NOLOCK) WHERE L7.FNHSysUnitId = A.FNHSysUnitId),'')  AS FNHSysUnitId")
                oStrBuilder.AppendLine("     , A.[FNSubOrderState]")
                oStrBuilder.AppendLine("     , A.[FTStateEmb]")
                oStrBuilder.AppendLine("     , A.[FTStatePrint]")
                oStrBuilder.AppendLine("     , A.[FTStateHeat]")
                oStrBuilder.AppendLine("     , A.[FTStateLaser]")
                oStrBuilder.AppendLine("     , A.[FTStateWindows]")
                oStrBuilder.AppendLine("     , A.[FTCustRef]")
                oStrBuilder.AppendLine("     , A.[FTRemark] AS FTRemarkSubOrderNo")
                REM 2014/12/18
                'oStrBuilder.AppendLine("     , A.[FNSubOrderQty]")
                'oStrBuilder.AppendLine("     , A.[FNSubOrderAmt]")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L8.FTShipPortCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCNMShipPort AS L8 WITH (NOLOCK) WHERE L8.FNHSysShipPortId = A.FNHSysShipPortId),'') AS FNHSysShipPortId")
                oStrBuilder.AppendLine("     , A.FTUpdUser AS FTUpdUserSubOrder")
                oStrBuilder.AppendLine("     , A.FDUpdDate AS FDUpdDate_OrderSub")
                oStrBuilder.AppendLine("     , A.FTUpdTime AS FTUpdTime_OrderSub")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS A")
                oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "';")

                _Str = oStrBuilder.ToString()

                _Dt = HI.Conn.SQLConn.GetDataTable(_Str, _DBEnum)

                Dim _FieldName As String = ""
                For Each R As DataRow In _Dt.Rows
                    For Each Col As DataColumn In _Dt.Columns
                        _FieldName = Col.ColumnName.ToString

                        For Each Obj As Object In Me.Controls.Find(_FieldName, True)

                            Select Case Obj.GetType.FullName.ToString.ToUpper

                                Case "DevExpress.XtraEditors.ButtonEdit".ToUpper

                                    With CType(Obj, DevExpress.XtraEditors.ButtonEdit)

                                        If _FieldName.ToUpper <> Me.FTSubOrderNo.Name.ToString.ToUpper Then
                                            .Text = R.Item(Col).ToString
                                        End If

                                    End With

                                Case "DevExpress.XtraEditors.CalcEdit".ToUpper
                                    With CType(Obj, DevExpress.XtraEditors.CalcEdit)
                                        .Value = Val(R.Item(Col).ToString)
                                    End With
                                Case "DevExpress.XtraEditors.ComboBoxEdit".ToUpper
                                    With CType(Obj, DevExpress.XtraEditors.ComboBoxEdit)
                                        Try
                                            .SelectedIndex = Val(R.Item(Col).ToString)
                                        Catch ex As Exception
                                            .SelectedIndex = -1
                                        End Try
                                    End With
                                Case "DevExpress.XtraEditors.CheckEdit".ToUpper
                                    With CType(Obj, DevExpress.XtraEditors.CheckEdit)
                                        .EditValue = (Integer.Parse(Val(R.Item(Col).ToString))).ToString
                                    End With
                                Case "DevExpress.XtraEditors.MemoEdit".ToUpper, "DevExpress.XtraEditors.TextEdit".ToUpper
                                    If _FieldName.ToString = "FDUpdDate_OrderSub" Then
                                        Obj.Text = HI.UL.ULDate.ConvertEN(R.Item(Col))
                                    Else
                                        Obj.Text = R.Item(Col).ToString
                                    End If
                                Case "DevExpress.XtraEditors.PictureEdit".ToUpper
                                    With CType(Obj, DevExpress.XtraEditors.PictureEdit)
                                        Try
                                            .Image = HI.UL.ULImage.LoadImage("" & .Properties.Tag.ToString & R.Item(Col).ToString) ' hImage ' ' Image.FromFile("" & .Properties.Tag.ToString & R.Item(Col).ToString)
                                        Catch ex As Exception
                                            .Image = Nothing
                                        End Try
                                    End With
                                Case "DevExpress.XtraEditors.DateEdit".ToUpper
                                    Try
                                        With CType(Obj, DevExpress.XtraEditors.DateEdit)
                                            If .Properties.DisplayFormat.FormatString = "d" Then
                                                .DateTime = CDate(R.Item(Col).ToString)
                                            Else
                                                .Text = HI.UL.ULDate.ConvertEN(R.Item(Col).ToString)
                                            End If
                                        End With
                                    Catch ex As Exception
                                        With CType(Obj, DevExpress.XtraEditors.DateEdit)
                                            .Text = ""
                                        End With
                                    End Try

                                Case Else
                                    Obj.Text = R.Item(Col).ToString
                            End Select

                        Next

                    Next

                    Exit For

                Next

                _Proc = False

            End If

            _ProcLoad = False

            Return True
        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)
            Return False
        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderInfo(ByVal ptSubOrderNo$) As Boolean
        Try
            _ProcLoad = True

            Static _Proc As Boolean

            If Not (_Proc) Then

                _Proc = True

                Dim _Dt As DataTable
                Dim _Str As String

                Dim oStrBuilder As New System.Text.StringBuilder()

                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("SELECT A.[FDSubOrderDate]")
                oStrBuilder.AppendLine("     , A.[FTSubOrderBy]")
                oStrBuilder.AppendLine("     , A.[FDProDate]")
                oStrBuilder.AppendLine("     , A.[FDShipDate],A.[FDShipDateOrginal]")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L1.FTContinentCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCNMContinent AS L1 WITH (NOLOCK) WHERE L1.FNHSysContinentId = A.FNHSysContinentId),'') AS FNHSysContinentId")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L2.FTCountryCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCNMCountry AS L2 WITH (NOLOCK) WHERE L2.FNHSysCountryId = A.FNHSysCountryId AND L2.FNHSysContinentId = A.FNHSysContinentId),'') AS FNHSysCountryId")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L3.FTProvinceCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCMMProvince AS L3 WITH (NOLOCK) WHERE L3.FNHSysProvinceId = A.FNHSysProvinceId AND L3.FNHSysCountryId = A.FNHSysCountryId),'')  AS FNHSysProvinceId")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L4.FTShipModeCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCNMShipMode AS L4 WITH (NOLOCK) WHERE L4.FNHSysShipModeId = A.FNHSysShipModeId),'') AS FNHSysShipModeId")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L5.FTCurCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TFINMCurrency AS L5 WITH (NOLOCK) WHERE L5.FNHSysCurId = A.FNHSysCurId),'') AS FNHSysCurId")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L6.FTGenderCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMGender AS L6 WITH (NOLOCK) WHERE L6.FNHSysGenderId = A.FNHSysGenderId),'') AS FNHSysGenderId")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L7.FTUnitCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCNMUnit AS L7 WITH (NOLOCK) WHERE L7.FNHSysUnitId = A.FNHSysUnitId),'')  AS FNHSysUnitId")

                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L1.FTPlantCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMPlant AS L1 WITH (NOLOCK) WHERE L1.FNHSysPlantId = A.FNHSysPlantId),'') AS FNHSysPlantId")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L2.FTBuyGrpCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMBuyGrp AS L2 WITH (NOLOCK) WHERE L2.FNHSysBuyGrpId = A.FNHSysBuyGrpId ),'') AS FNHSysBuyGrpId")

                oStrBuilder.AppendLine("     , A.[FNSubOrderState]")
                oStrBuilder.AppendLine("     , A.[FTStateEmb]")
                oStrBuilder.AppendLine("     , A.[FTStatePrint]")
                oStrBuilder.AppendLine("     , A.[FTStateHeat]")
                oStrBuilder.AppendLine("     , A.[FTStateLaser]")
                oStrBuilder.AppendLine("     , A.[FTStateWindows]")
                oStrBuilder.AppendLine("     , A.[FTCustRef]")
                oStrBuilder.AppendLine("     , A.[FTPORef] AS FTSubPORef")
                oStrBuilder.AppendLine("     , A.[FTRemark] AS FTRemarkSubOrderNo,A.FNOrderSetType")
                REM 2014/12/18
                'oStrBuilder.AppendLine("     , A.[FNSubOrderQty]")
                'oStrBuilder.AppendLine("     , A.[FNSubOrderAmt]")

                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 L8.FTShipPortCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCNMShipPort AS L8 WITH (NOLOCK) WHERE L8.FNHSysShipPortId = A.FNHSysShipPortId),'') AS FNHSysShipPortId")
                oStrBuilder.AppendLine("     , A.FTUpdUser AS FTUpdUserSubOrder")
                oStrBuilder.AppendLine("     , A.FDUpdDate AS FDUpdDate_OrderSub")
                oStrBuilder.AppendLine("     , A.FTUpdTime AS FTUpdTime_OrderSub")
                oStrBuilder.AppendLine("     , A.FTStateCombine AS FTStateSubCombine")
                oStrBuilder.AppendLine("     , ISNULL((SELECT TOP 1 ISNULL(L9.FTSubOrderNoDivertRef, '') AS FTSubOrderNoDivertRef")
                oStrBuilder.AppendLine("               FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS L9 (NOLOCK)")
                oStrBuilder.AppendLine("               WHERE L9.FTSubOrderNo = A.FTSubOrderNo), '') AS FTSubOrderNoDivertRef")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS A")
                oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "';")

                _Str = oStrBuilder.ToString()

                _Dt = HI.Conn.SQLConn.GetDataTable(_Str, _DBEnum)

                Dim _FieldName As String = ""
                For Each R As DataRow In _Dt.Rows
                    For Each Col As DataColumn In _Dt.Columns
                        _FieldName = Col.ColumnName.ToString

                        For Each Obj As Object In Me.Controls.Find(_FieldName, True)

                            Select Case Obj.GetType.FullName.ToString.ToUpper

                                Case "DevExpress.XtraEditors.ButtonEdit".ToUpper

                                    With CType(Obj, DevExpress.XtraEditors.ButtonEdit)

                                        If _FieldName.ToUpper <> Me.FTSubOrderNo.Name.ToString.ToUpper Then
                                            .Text = R.Item(Col).ToString
                                        End If

                                    End With

                                Case "DevExpress.XtraEditors.CalcEdit".ToUpper
                                    With CType(Obj, DevExpress.XtraEditors.CalcEdit)
                                        .Value = Val(R.Item(Col).ToString)
                                    End With
                                Case "DevExpress.XtraEditors.ComboBoxEdit".ToUpper
                                    With CType(Obj, DevExpress.XtraEditors.ComboBoxEdit)
                                        Try
                                            .SelectedIndex = Val(R.Item(Col).ToString)
                                        Catch ex As Exception
                                            .SelectedIndex = -1
                                        End Try
                                    End With
                                Case "DevExpress.XtraEditors.CheckEdit".ToUpper
                                    REM 2015/01/07
                                    'With CType(Obj, DevExpress.XtraEditors.CheckEdit)
                                    '    .EditValue = (Integer.Parse(Val(R.Item(Col).ToString))).ToString
                                    'End With

                                    If CType(Obj, System.Windows.Forms.Control).Name.ToUpper = "FTSubOrderNoDivertRef".ToUpper Then

                                        If R.Item(Col).ToString <> "" Then
                                            With CType(Obj, DevExpress.XtraEditors.CheckEdit)
                                                .EditValue = "1"
                                                .Visible = True
                                                .Text = "Divert Ref : " & R.Item(Col).ToString
                                                .ForeColor = System.Drawing.Color.DarkRed
                                            End With
                                            'Me.FTSubOrderNoDivertRef.Text = "Factory Sub Order No Divert Ref : " & R.Item(Col).ToString

                                        Else
                                            With CType(Obj, DevExpress.XtraEditors.CheckEdit)
                                                .EditValue = "0"
                                                .Visible = False
                                                .Text = ""
                                            End With

                                        End If

                                    Else
                                        With CType(Obj, DevExpress.XtraEditors.CheckEdit)
                                            .EditValue = (Integer.Parse(Val(R.Item(Col).ToString))).ToString
                                        End With
                                    End If

                                Case "DevExpress.XtraEditors.MemoEdit".ToUpper, "DevExpress.XtraEditors.TextEdit".ToUpper
                                    If _FieldName.ToString = "FDUpdDate_OrderSub" Then
                                        Obj.Text = HI.UL.ULDate.ConvertEN(R.Item(Col))
                                    Else
                                        Obj.Text = R.Item(Col).ToString
                                    End If
                                Case "DevExpress.XtraEditors.PictureEdit".ToUpper
                                    With CType(Obj, DevExpress.XtraEditors.PictureEdit)
                                        Try
                                            .Image = HI.UL.ULImage.LoadImage("" & .Properties.Tag.ToString & R.Item(Col).ToString) ' hImage ' ' Image.FromFile("" & .Properties.Tag.ToString & R.Item(Col).ToString)
                                        Catch ex As Exception
                                            .Image = Nothing
                                        End Try
                                    End With
                                Case "DevExpress.XtraEditors.DateEdit".ToUpper
                                    Try
                                        With CType(Obj, DevExpress.XtraEditors.DateEdit)
                                            If .Properties.DisplayFormat.FormatString = "d" Then
                                                .DateTime = CDate(R.Item(Col).ToString)
                                            Else
                                                .Text = HI.UL.ULDate.ConvertEN(R.Item(Col).ToString)
                                            End If
                                        End With
                                    Catch ex As Exception
                                        With CType(Obj, DevExpress.XtraEditors.DateEdit)
                                            .Text = ""
                                        End With
                                    End Try

                                Case Else
                                    Obj.Text = R.Item(Col).ToString
                            End Select

                        Next

                    Next

                    Exit For

                Next

                '...State Approved Factory Sub Order No. Information {Approved/Revised}
                '============================================================================================================================================================================================================================================================================================================================================
                _Str = ""
                _Str = "DECLARE @FTApprovedInfoState AS NVARCHAR(1);"
                _Str &= Environment.NewLine & "SELECT TOP 1 @FTApprovedInfoState = A.FTStateApprovedSubOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                _Str &= Environment.NewLine & "IF (@FTApprovedInfoState IS NULL)"
                _Str &= Environment.NewLine & "BEGIN"
                _Str &= Environment.NewLine & "  SET @FTApprovedInfoState = N'2' /*not approved & not revised*/"
                _Str &= Environment.NewLine & "END;"
                _Str &= Environment.NewLine & "PRINT '@FTApprovedInfoState : ' + @FTApprovedInfoState;"
                _Str &= Environment.NewLine & "SELECT @FTApprovedInfoState AS FTApprovedInfoState;"

                Dim tTextFTApprovedInfoState As String

                tTextFTApprovedInfoState = HI.Conn.SQLConn.GetField(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN, "2")

                If tTextFTApprovedInfoState = "0" Then
                    Dim tRevisedTime As String = Val(HI.Conn.SQLConn.GetField("SELECT A.FNCntApprovedSubOrderNo FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'", HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")).ToString

                    Me.FTStateApprovedSubOrderNo.Visible = False
                    Me.FTStateApprovedSubOrderNo.Checked = False
                    'Me.FTStateInfoOrder.Text = "Revised Information ( " & HI.Conn.SQLConn.GetField("SELECT A.FNApprovedInfoCnt FROM  [" & HI.Conn.DB.DataBaseName.DB_MERCHAN & "]..TMERTOrder_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'", HI.Conn.DB.DataBaseName.DB_MERCHAN, "") & " )"
                    'Me.FTStateApprovedSubOrderNo.Text = "Revised Information ( " & tRevisedTime & " )"
                    'Me.FTStateApprovedSubOrderNo.ForeColor = System.Drawing.Color.DarkRed
                    'Me.FTStateApprovedSubOrderNo.BackColor = Color.Transparent
                    'Me.FTStateApprovedSubOrderNo.BringToFront()

                    Me.FTStateApprovedSubOrderNoRevised.Visible = True
                    Me.FTStateApprovedSubOrderNoRevised.Checked = True

                    Me.FTStateApprovedSubOrderNoRevised.ForeColor = System.Drawing.Color.DarkRed
                    Me.FTStateApprovedSubOrderNoRevised.BackColor = Color.Transparent
                    Me.FTStateApprovedSubOrderNoRevised.BringToFront()

                ElseIf tTextFTApprovedInfoState = "1" Then
                    Me.FTStateApprovedSubOrderNoRevised.Visible = False
                    Me.FTStateApprovedSubOrderNoRevised.Checked = False

                    Me.FTStateApprovedSubOrderNo.Visible = True
                    Me.FTStateApprovedSubOrderNo.Checked = True
                    'Me.FTStateApprovedSubOrderNo.Text = "Approved Information"
                    Me.FTStateApprovedSubOrderNo.ForeColor = System.Drawing.Color.Blue
                    Me.FTStateApprovedSubOrderNo.BackColor = Color.Transparent
                    Me.FTStateApprovedSubOrderNo.BringToFront()

                Else
                    Me.FTStateApprovedSubOrderNo.Visible = False
                    Me.FTStateApprovedSubOrderNoRevised.Visible = False
                    'Me.FTStateApprovedSubOrderNo.Text = ""
                    'Me.FTStateApprovedSubOrderNo.ForeColor = DevExpress.XtraEditors.CheckEdit.DefaultForeColor 'Me.GroupControl2.ForeColor 'DevExpress.XtraEditors.CheckEdit.DefaultBackColor
                    'Me.FTStateApprovedSubOrderNo.BackColor = DevExpress.XtraEditors.CheckEdit.DefaultBackColor

                End If
                '============================================================================================================================================================================================================================================================================================================================================

                _Proc = False

            End If

            _ProcLoad = False

            Return True
        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)
            Return False
        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderComponent(ByVal ptOrderNo$, ByVal ptSubOrderNo$) As Boolean

        Dim bRetLoadSubOrdComponent As Boolean = False

        Try
            Dim tSql As String
            tSql = ""

            Dim oStrBuilder As New System.Text.StringBuilder()

            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("SELECT CONVERT(INT, A.FNSeq) AS FNSeq, A.FNSeq AS FNSeqOrg, A.FNPart, B.FTMainMatCode,")

            Select Case HI.ST.Lang.Language
                Case HI.ST.Lang.eLang.TH
                    oStrBuilder.AppendLine("       A.FTOrderNo, A.FTSubOrderNo, A.FNHSysMerMatId, (B.FTMainMatNameTH) AS FTMainMatDesc")
                Case Else
                    oStrBuilder.AppendLine("       A.FTOrderNo, A.FTSubOrderNo, A.FNHSysMerMatId, (B.FTMainMatNameEN) AS FTMainMatDesc")
            End Select

            oStrBuilder.AppendLine("       , A.FNConSmp")
            oStrBuilder.AppendLine("       , ISNULL(A.FTComponent, '') AS FTComponent, ISNULL(A.FTRemark, '') AS FTRemark")
            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_Component] AS A WITH(NOLOCK) LEFT JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMainMat] AS B WITH(NOLOCK) ON A.FNHSysMerMatId = B.FNHSysMainMatId")
            oStrBuilder.AppendLine(String.Format("WHERE A.FTOrderNo = N'{0}'", HI.UL.ULF.rpQuoted(ptOrderNo)))
            oStrBuilder.AppendLine(String.Format("      AND A.FTSubOrderNo = N'{0}'", HI.UL.ULF.rpQuoted(ptSubOrderNo)))
            oStrBuilder.AppendLine("ORDER BY A.FNSeq  ")
            tSql = ""
            tSql = oStrBuilder.ToString()

            Dim oDBdtSubOrderComponent As System.Data.DataTable

            oDBdtSubOrderComponent = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            'RepositoryItemMemoEditFTRemarkComponent
            '...get schema max length for column FTRemark
            Dim nRepositoryFTRemarkComponent As Integer = IIf(oSubCompoentSchema Is Nothing, 500, oSubCompoentSchema.FTRemarkComponent)

            '...Repository FTRemarkComponent
            '==================================================================================================================================================================
            Dim RepositoryItemMemoEditFTRemarkComponent As DevExpress.XtraEditors.Repository.RepositoryItemMemoEdit = New DevExpress.XtraEditors.Repository.RepositoryItemMemoEdit
            With RepositoryItemMemoEditFTRemarkComponent
                .MaxLength = nRepositoryFTRemarkComponent
            End With

            Me.ogdOrderSubComponent.DataSource = oDBdtSubOrderComponent
            Me.ogdOrderSubComponent.Refresh()
            Me.ogvOrderSubComponent.RefreshData()
            Me.ogvOrderSubComponent.OptionsView.ColumnAutoWidth = False
            REM Me.ogvOrderSubComponent.BestFitColumns()

            '...State Approved Factory Sub Order No. {Approved/Revised} component Information
            '============================================================================================================================================================================================================================================================================================================================================
            tSql = ""
            tSql = "DECLARE @FTStateApprovedComponent AS NVARCHAR(1);"
            tSql &= Environment.NewLine & "SELECT TOP 1 @FTStateApprovedComponent = A.FTStateApprovedComponent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
            tSql &= Environment.NewLine & "IF (@FTStateApprovedComponent IS NULL)"
            tSql &= Environment.NewLine & "BEGIN"
            tSql &= Environment.NewLine & "  SET @FTStateApprovedComponent = N'2' /*not approved & not revised*/"
            tSql &= Environment.NewLine & "END;"
            tSql &= Environment.NewLine & "PRINT '@FTStateApprovedComponent : ' + @FTStateApprovedComponent;"
            tSql &= Environment.NewLine & "SELECT @FTStateApprovedComponent AS FTStateApprovedComponent;"

            Dim tTextFTApprovedInfoState As String

            tTextFTApprovedInfoState = HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "2")

            If tTextFTApprovedInfoState = "0" Then
                Dim tRevisedTime As String = Val(HI.Conn.SQLConn.GetField("SELECT A.FNCntApprovedComponent FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'", HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")).ToString

                Me.FTStateApprovedComponent.Visible = False
                Me.FTStateApprovedComponent.Checked = False
                'Me.FTStateApprovedComponent.Text = "Revised Information ( " & tRevisedTime & " )"
                'Me.FTStateApprovedComponent.ForeColor = System.Drawing.Color.DarkRed
                'Me.FTStateApprovedComponent.BackColor = Color.Transparent
                'Me.FTStateApprovedComponent.BringToFront()

                Me.FTStateApprovedComponentRevised.Visible = True
                Me.FTStateApprovedComponentRevised.Checked = True

                Me.FTStateApprovedComponentRevised.ForeColor = System.Drawing.Color.DarkRed
                Me.FTStateApprovedComponentRevised.BackColor = Color.Transparent
                Me.FTStateApprovedComponentRevised.BringToFront()

            ElseIf tTextFTApprovedInfoState = "1" Then
                Me.FTStateApprovedComponentRevised.Visible = False
                Me.FTStateApprovedComponentRevised.Checked = False

                Me.FTStateApprovedComponent.Visible = True
                Me.FTStateApprovedComponent.Checked = True
                'Me.FTStateApprovedComponent.Text = "Approved Information"
                Me.FTStateApprovedComponent.ForeColor = System.Drawing.Color.Blue
                Me.FTStateApprovedComponent.BackColor = Color.Transparent
                Me.FTStateApprovedComponent.BringToFront()

            Else
                Me.FTStateApprovedComponent.Visible = False
                Me.FTStateApprovedComponentRevised.Visible = False
                'Me.FTStateApprovedComponent.Text = ""
                'Me.FTStateApprovedComponent.ForeColor = DevExpress.XtraEditors.CheckEdit.DefaultForeColor 'Me.GroupControl2.ForeColor 'DevExpress.XtraEditors.CheckEdit.DefaultBackColor
                'Me.FTStateApprovedComponent.BackColor = DevExpress.XtraEditors.CheckEdit.DefaultBackColor

            End If
            '============================================================================================================================================================================================================================================================================================================================================

            '...load data complete
            bRetLoadSubOrdComponent = True

        Catch ex As Exception

        End Try

        Return bRetLoadSubOrdComponent

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderBreakdownMatrix_REM_20131222_PM1817(ByVal ptSubOrderNo$) As Boolean

        If Microsoft.VisualBasic.Trim$(ptSubOrderNo) = "" Then
            Me.ogdSubOrdBreakDown.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
            Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
            Return False
        End If

        Dim tSql As String
        Dim oStrBuilder As New System.Text.StringBuilder()

        Dim oDBdtSizeBreakdownColorway As DataTable
        Dim oDBdtSizeBreakdownMatrix As DataTable
        Dim oDBdtSizeBreakdownMatrixSum As DataTable
        Dim oDBdtSizeBreakdownInfo As DataTable

        Dim nLoopBreakdownSeq As Integer = 0
        Dim FNHSysMatSizeIdPrv As Integer
        Dim FNHSysMatSizeIdCurr As Integer

        Dim nFirstRowColorway As Integer

        Try
            tSql = ""
            tSql = "SELECT A.FNHSysMatSizeId, A.FTMatSizeCode, A.FTMatSizeNameEN AS FTMatSizeName"
            tSql &= ControlChars.CrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS A"
            tSql &= ControlChars.CrLf & "WHERE EXISTS (SELECT 'T'"
            tSql &= ControlChars.CrLf & "              FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L1"
            tSql &= ControlChars.CrLf & "              WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FNHSysMatSizeId = A.FNHSysMatSizeId)"
            tSql &= ControlChars.CrLf & "ORDER BY A.FNMatSizeSeq ASC;"

            oDBdtSizeBreakdownColorway = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtSizeBreakdownColorway.Rows.Count > 0 Then
                '...Detail
                oGridViewSubBreakdown = Me.ogdSubOrdBreakDown.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdown)
                oGridViewSubBreakdown.BestFitColumns()

                Me.ogdSubOrdBreakDown.DataSource = Nothing

                oDBdtSizeBreakdownMatrix = New DataTable()

                '...Summary
                oGridViewSubBreakdownSum = Me.ogdSubOrdBreakDownSummary.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdownSum)
                oGridViewSubBreakdownSum.BestFitColumns()

                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing

                oDBdtSizeBreakdownMatrixSum = New DataTable()

                '========================================== Create GridView Column / Create DataTable Column ====================================
                Dim oColFNHSysMatColorId As DataColumn
                oColFNHSysMatColorId = New DataColumn("FNHSysMatColorId", System.Type.GetType("System.Int32"))
                oColFNHSysMatColorId.Caption = "FNHSysMatColorId"

                oGridViewSubBreakdown.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                Dim oColFTMatColorCode As DataColumn
                oColFTMatColorCode = New DataColumn("FTMatColorCode", System.Type.GetType("System.String"))
                oColFTMatColorCode.Caption = "FTMatColorCode"

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                Dim oColFTMatColorName As DataColumn
                oColFTMatColorName = New DataColumn("FTMatColorName", System.Type.GetType("System.String"))
                oColFTMatColorName.Caption = "FTMatColorName"

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                Dim oColFTDescription As DataColumn
                oColFTDescription = New DataColumn("FTDescription", System.Type.GetType("System.String"))

                oGridViewSubBreakdown.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Visible = True
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Width = 180
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)

                '...Summary
                '=============================================================================================================
                Dim oColFTDescriptionSum As DataColumn
                oColFTDescriptionSum = New DataColumn("FTDescription", System.Type.GetType("System.String"))

                oGridViewSubBreakdownSum.Columns.AddField(oColFTDescriptionSum.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTDescriptionSum.ColumnName).FieldName = oColFTDescriptionSum.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTDescriptionSum.ColumnName).Name = oColFTDescriptionSum.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTDescriptionSum.ColumnName).Caption = "Sum Total"
                oGridViewSubBreakdownSum.Columns(oColFTDescriptionSum.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdownSum.Columns(oColFTDescriptionSum.ColumnName).Visible = True
                oGridViewSubBreakdownSum.Columns(oColFTDescriptionSum.ColumnName).Width = 180
                oGridViewSubBreakdownSum.Columns(oColFTDescriptionSum.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTDescriptionSum.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTDescriptionSum.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrixSum.Columns.Add(oColFTDescriptionSum.ColumnName, oColFTDescriptionSum.DataType)
                '=============================================================================================================

                For Each oRow As DataRow In oDBdtSizeBreakdownColorway.Rows

                    Dim oColAppendSizeId As DataColumn = New DataColumn("FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Int32"))
                    oColAppendSizeId.Caption = "FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    Dim oColAppendSizeCode As DataColumn = New DataColumn("FTMatSizeCode" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeCode.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    Dim oColAppendSizeName As DataColumn = New DataColumn("FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeName.Caption = "FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    Dim oColAppendAmntZZZ As DataColumn = New DataColumn("FNAmnt" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendAmntZZZ.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Visible = True
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    '...Summary
                    '==================================================================================================================================================
                    Dim oColAppendAmntZZZSum As DataColumn = New DataColumn("FNAmnt" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendAmntZZZSum.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendAmntZZZSum.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZSum.ColumnName).FieldName = oColAppendAmntZZZSum.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZSum.ColumnName).Name = oColAppendAmntZZZSum.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZSum.ColumnName).Caption = oColAppendAmntZZZSum.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZSum.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZSum.ColumnName).Visible = True
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZSum.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZSum.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZSum.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZSum.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrixSum.Columns.Add(oColAppendAmntZZZSum.ColumnName, oColAppendAmntZZZSum.DataType)
                    '==================================================================================================================================================

                    Dim oColAppendFNQuantity As DataColumn = New DataColumn("FNQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantity.Caption = "FNQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    Dim oColAppendFNQuantityExtra As DataColumn = New DataColumn("FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantityExtra.Caption = "FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    Dim oColAppendFNGrandQuantity As DataColumn = New DataColumn("FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNGrandQuantity.Caption = "FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    Dim oColAppendFNPrice As DataColumn = New DataColumn("FNPrice" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNPrice.Caption = "FNPrice" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    Dim oColAppendFNValue As DataColumn = New DataColumn("FNValue" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNValue.Caption = "FNValue" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    Dim oColAppendFNExtraQtyPercent As DataColumn = New DataColumn("FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNExtraQtyPercent.Caption = "FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                Next

                Dim oColAppendFNRowTotal As DataColumn = New DataColumn("FNRowTotal", System.Type.GetType("System.Double"))
                oColAppendFNRowTotal.Caption = "T/T"

                oGridViewSubBreakdown.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Visible = True
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Width = 160
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                '...Summary
                Dim oColAppendFNRowTotalSum As DataColumn = New DataColumn("FNRowTotal", System.Type.GetType("System.Double"))
                oColAppendFNRowTotalSum.Caption = "T/T"

                oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNRowTotalSum.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotalSum.ColumnName).FieldName = oColAppendFNRowTotalSum.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotalSum.ColumnName).Name = oColAppendFNRowTotalSum.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotalSum.ColumnName).Caption = oColAppendFNRowTotalSum.Caption
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotalSum.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotalSum.ColumnName).Visible = True
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotalSum.ColumnName).Width = 160
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotalSum.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotalSum.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotalSum.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrixSum.Columns.Add(oColAppendFNRowTotalSum.ColumnName, oColAppendFNRowTotalSum.DataType)

                '====================================================================================================================================

                '...iterate loop binding row datatable datarow to oDBdtSizeBreakdownMatrix
                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGrandQuantity, B.FNGrandAmnt")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS B INNER JOIN HITECH_MASTER.dbo.TMERMMatColor AS C ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS D ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()
                oDBdtSizeBreakdownInfo = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtSizeBreakdownInfo.Rows.Count > 0 Then

                    '...Summary
                    '==============================================================================================
                    Dim oRowItemSummary As DataRow
                    For nLoopSummary As Integer = 0 To 3
                        oRowItemSummary = oDBdtSizeBreakdownMatrixSum.NewRow()

                        Select Case nLoopSummary
                            Case 0 : oRowItemSummary.Item("FTDescription") = "Quantity"
                            Case 1 : oRowItemSummary.Item("FTDescription") = "Extra"
                            Case 2 : oRowItemSummary.Item("FTDescription") = "Total Quantity" : oRowItemSummary.Item("FNRowTotal") = 0
                            Case 3 : oRowItemSummary.Item("FTDescription") = "Value" : oRowItemSummary.Item("FNRowTotal") = 0
                        End Select

                        oDBdtSizeBreakdownMatrixSum.Rows.Add(oRowItemSummary)

                    Next nLoopSummary

                    oDBdtSizeBreakdownMatrixSum.AcceptChanges()
                    '==============================================================================================

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtSizeBreakdownInfo.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then

                            Dim nLoopItemSeq As Integer = 0

                            Dim oRowItem As DataRow

                            For nLoopItemSeq = 0 To 4
                                oRowItem = oDBdtSizeBreakdownMatrix.NewRow()

                                oRowItem.Item("FNHSysMatColorId") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                                oRowItem.Item("FTMatColorCode") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                                oRowItem.Item("FTMatColorName") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")

                                Select Case nLoopItemSeq
                                    Case 0
                                        oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                                        oRowItem.Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")

                                        If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                            oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        Else
                                            oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")) + 0
                                        End If

                                    Case 1
                                        oRowItem.Item("FTDescription") = "Extra"
                                        oRowItem.Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oRowItem.Item("FNRowTotal") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")

                                        If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                            oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        Else
                                            oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")) + 0
                                        End If

                                    Case 2
                                        oRowItem.Item("FTDescription") = "Total Quantity"
                                        oRowItem.Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")

                                        If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                            oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        Else
                                            oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")) + 0
                                        End If

                                        oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNRowTotal") = CDbl(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNRowTotal")) + oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                    Case 3
                                        oRowItem.Item("FTDescription") = "Price"
                                        oRowItem.Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")

                                    Case 4
                                        oRowItem.Item("FTDescription") = "Value"
                                        oRowItem.Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oRowItem.Item("FNRowTotal") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")

                                        If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                            oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        Else
                                            oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")) + 0
                                        End If

                                        oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNRowTotal") = CDbl(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNRowTotal")) + oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                End Select

                                '...กรณีไซส์แรก
                                oRowItem.Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                oRowItem.Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                oRowItem.Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                                oRowItem.Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                oRowItem.Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                oRowItem.Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                oRowItem.Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                oRowItem.Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                oRowItem.Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                oDBdtSizeBreakdownMatrix.Rows.Add(oRowItem)

                                oDBdtSizeBreakdownMatrixSum.AcceptChanges()

                            Next nLoopItemSeq

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrix.Rows.Count - 5

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double
                            Dim nFNQuantityExtra As Double
                            Dim nFNGrandQuantity As Double
                            Dim nFNValue As Double

                            For nLoopItem As Integer = 0 To 4
                                Select Case nLoopItem
                                    Case 0
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNAmnt = oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNAmnt

                                        If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                            oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        Else
                                            oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")) + 0
                                        End If

                                    Case 1
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNQuantityExtra = oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNQuantityExtra

                                        If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                            oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        Else
                                            oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")) + 0
                                        End If

                                    Case 2
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNGrandQuantity = oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNGrandQuantity

                                        If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                            oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        Else
                                            oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")) + 0
                                        End If

                                        oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNRowTotal") = CDbl(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNRowTotal")) + CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity"))

                                    Case 3
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                    Case 4
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNValue = oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNValue

                                        If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                            oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        Else
                                            oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")) + 0
                                        End If

                                        oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNRowTotal") = CDbl(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNRowTotal")) + CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt"))

                                End Select

                                oDBdtSizeBreakdownMatrixSum.AcceptChanges()

                            Next nLoopItem

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrix.AcceptChanges()
                            oDBdtSizeBreakdownMatrixSum.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrix.AcceptChanges()

                    oDBdtSizeBreakdownMatrixSum.AcceptChanges()

                End If

                oGridViewSubBreakdown.OptionsBehavior.AllowAddRows = False
                oGridViewSubBreakdown.OptionsCustomization.AllowSort = False

                ogdSubOrdBreakDown.DataSource = oDBdtSizeBreakdownMatrix
                ogdSubOrdBreakDown = oGridViewSubBreakdown.GridControl
                ogdSubOrdBreakDown.Refresh()

                '...Summary
                '=============================================================================================================================
                oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                    For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                        If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then
                            oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width
                            Exit For

                        End If

                    Next nLoopColSubBreakdownSum

                Next nLoopColSubBreakdown

                ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixSum
                ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                ogdSubOrdBreakDownSummary.Refresh()
                'oGridViewSubBreakdownSum.LayoutChanged()
                '=============================================================================================================================

            Else
                '...Not Exists Sub OrderNo Breakdown Item
                Me.ogdSubOrdBreakDown.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)

                Return False

            End If

            Return True
        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)

            Me.ogdSubOrdBreakDown.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
            Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)

            Return False

        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderBreakdownMatrix_REM_20140119_PM1851(ByVal ptSubOrderNo$) As Boolean

        If Microsoft.VisualBasic.Trim$(ptSubOrderNo) = "" Then
            Me.ogdSubOrdBreakDown.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
            Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
            Me.ogdSubOrdBreakDownSummary.Width = Me.ogdSubOrdBreakDown.Width
            Return False
        End If

        Dim tSql As String
        Dim oStrBuilder As New System.Text.StringBuilder()

        Dim oDBdtSizeBreakdownColorway As DataTable
        Dim oDBdtSizeBreakdownMatrix As DataTable
        Dim oDBdtSizeBreakdownMatrixDT As DataTable
        Dim oDBdtSizeBreakdownMatrixSum As DataTable
        Dim oDBdtSizeBreakdownInfo As DataTable

        Dim nLoopBreakdownSeq As Integer = 0
        Dim FNHSysMatSizeIdPrv As Integer
        Dim FNHSysMatSizeIdCurr As Integer

        Dim nFirstRowColorway As Integer

        Try
            tSql = ""
            tSql = "SELECT A.FNHSysMatSizeId, A.FTMatSizeCode, A.FTMatSizeNameEN AS FTMatSizeName"
            tSql &= ControlChars.CrLf & "FROM HITECH_MASTER.dbo.TMERMMatSize AS A"
            tSql &= ControlChars.CrLf & "WHERE EXISTS (SELECT 'T'"
            tSql &= ControlChars.CrLf & "              FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS L1"
            tSql &= ControlChars.CrLf & "              WHERE L1.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FNHSysMatSizeId = A.FNHSysMatSizeId)"
            tSql &= ControlChars.CrLf & "ORDER BY A.FNMatSizeSeq ASC;"

            oDBdtSizeBreakdownColorway = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtSizeBreakdownColorway.Rows.Count > 0 Then

                '...Colorway & Size Breakdown Matrix Header (View display Total Quantity : Quantity + Extra Quantity)
                oGridViewSubBreakdown = Me.ogdSubOrdBreakDown.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdown)
                oGridViewSubBreakdown.BestFitColumns()
                Me.ogdSubOrdBreakDown.DataSource = Nothing
                oDBdtSizeBreakdownMatrix = New DataTable()

                '...View Detail for Colorway & Size Breakdown 
                oGridViewSubBreakdownSum = Me.ogdSubOrdBreakDownSummary.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdownSum)
                oGridViewSubBreakdownSum.BestFitColumns()
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                oDBdtSizeBreakdownMatrixDT = New DataTable()

                '========================================== Create GridView Column / Create DataTable Column ====================================
                '...view display color description and Grand Quantity (Quantity + Extra Quantity)
                Dim oColFNHSysMatColorId As DataColumn
                oColFNHSysMatColorId = New DataColumn("FNHSysMatColorId", System.Type.GetType("System.Int32"))
                oColFNHSysMatColorId.Caption = "FNHSysMatColorId"

                oGridViewSubBreakdown.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                Dim oColFTMatColorCode As DataColumn
                oColFTMatColorCode = New DataColumn("FTMatColorCode", System.Type.GetType("System.String"))
                oColFTMatColorCode.Caption = "FTMatColorCode"

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                Dim oColFTMatColorName As DataColumn
                oColFTMatColorName = New DataColumn("FTMatColorName", System.Type.GetType("System.String"))
                oColFTMatColorName.Caption = "FTMatColorName"

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                '...แสดง รายละเอียด สี / view display color description
                Dim oColFTDescription As DataColumn
                oColFTDescription = New DataColumn("FTDescription", System.Type.GetType("System.String"))

                oGridViewSubBreakdown.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Visible = True
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Width = 180
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)

                '...Detail View Color/Extra/Total Quantity/Price/Value
                oGridViewSubBreakdownSum.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Visible = True
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)

                '...dynamic generate column size breakdown
                For Each oRow As DataRow In oDBdtSizeBreakdownColorway.Rows

                    Dim oColAppendSizeId As DataColumn = New DataColumn("FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Int32"))
                    oColAppendSizeId.Caption = "FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    Dim oColAppendSizeCode As DataColumn = New DataColumn("FTMatSizeCode" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeCode.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    Dim oColAppendSizeName As DataColumn = New DataColumn("FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeName.Caption = "FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    '...keep value : FNGrandQuantity (จำนวนรวมของ Quantity + Extra Quantity)
                    Dim oColAppendAmntZZZ As DataColumn = New DataColumn("FNAmnt" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendAmntZZZ.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Visible = True
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    '...Detail View : FNQuantity/FNExtraQuantity/FNGrandQuantity/FNPrice/FNAmt
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Visible = True
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    Dim oColAppendFNQuantity As DataColumn = New DataColumn("FNQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantity.Caption = "FNQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    Dim oColAppendFNQuantityExtra As DataColumn = New DataColumn("FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantityExtra.Caption = "FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    Dim oColAppendFNGrandQuantity As DataColumn = New DataColumn("FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNGrandQuantity.Caption = "FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    Dim oColAppendFNPrice As DataColumn = New DataColumn("FNPrice" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNPrice.Caption = "FNPrice" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    '...Amount จาก จำนวนปริมาณที่สั่งซื้อจริง ของ รายการ Sub Order No. ตามสี ตามไซส์
                    Dim oColAppendFNValue As DataColumn = New DataColumn("FNValue" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNValue.Caption = "FNValue" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    Dim oColAppendFNExtraQtyPercent As DataColumn = New DataColumn("FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNExtraQtyPercent.Caption = "FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                Next

                Dim oColAppendFNRowTotal As DataColumn = New DataColumn("FNRowTotal", System.Type.GetType("System.Double"))
                oColAppendFNRowTotal.Caption = "T/T"

                oGridViewSubBreakdown.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Visible = True
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Width = 160
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Visible = True
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Width = 160
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                '====================================================================================================================================

                '...iterate loop binding row datatable datarow to oDBdtSizeBreakdownMatrix
                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGrandQuantity, B.FNGrandAmnt")
                oStrBuilder.AppendLine("FROM dbo.TMERTOrderSub_BreakDown AS B INNER JOIN HITECH_MASTER.dbo.TMERMMatColor AS C ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN HITECH_MASTER.dbo.TMERMMatSize AS D ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()
                oDBdtSizeBreakdownInfo = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtSizeBreakdownInfo.Rows.Count > 0 Then

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtSizeBreakdownInfo.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then
                            'Dim nLoopItemSeq As Integer = 0
                            Dim oRowItem As DataRow

                            '...กรณีเป็นรายการไซส์แรกของแต่ละสี
                            oRowItem = oDBdtSizeBreakdownMatrix.NewRow()

                            oRowItem.Item("FNHSysMatColorId") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            oRowItem.Item("FTMatColorCode") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                            oRowItem.Item("FTMatColorName") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                            oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                            oRowItem.Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oRowItem.Item("FNRowTotal") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oRowItem.Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                            oRowItem.Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                            oRowItem.Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                            oRowItem.Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oRowItem.Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                            oRowItem.Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oRowItem.Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                            oRowItem.Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                            oRowItem.Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                            oDBdtSizeBreakdownMatrix.Rows.Add(oRowItem)

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrix.Rows.Count - 1

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double

                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity") 'oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                            nFNAmnt = oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNRowTotal")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNRowTotal") = nFNAmnt

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrix.AcceptChanges()
                            REM oDBdtSizeBreakdownMatrixSum.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrix.AcceptChanges()

                End If

                oGridViewSubBreakdown.OptionsBehavior.AllowAddRows = False
                oGridViewSubBreakdown.OptionsCustomization.AllowSort = False

                ogdSubOrdBreakDown.DataSource = oDBdtSizeBreakdownMatrix
                ogdSubOrdBreakDown = oGridViewSubBreakdown.GridControl
                ogdSubOrdBreakDown.Refresh()

                '=======================================================Sub Order No. Detail==========================================================
                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGrandQuantity, B.FNGrandAmnt")
                oStrBuilder.AppendLine("FROM dbo.TMERTOrderSub_BreakDown AS B INNER JOIN HITECH_MASTER.dbo.TMERMMatColor AS C ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN HITECH_MASTER.dbo.TMERMMatSize AS D ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()

                Dim oDBdtMatrixDT As DataTable
                oDBdtMatrixDT = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtMatrixDT.Rows.Count > 0 Then

                    '...iterate loop binding
                    '======================================================binding record================================================================
                    '...Summary
                    '==============================================================================================
                    REM XXX
                    'Dim oRowItemSummary As DataRow
                    'For nLoopSummary As Integer = 0 To 3
                    '    oRowItemSummary = oDBdtSizeBreakdownMatrixSum.NewRow()

                    '    Select Case nLoopSummary
                    '        Case 0 : oRowItemSummary.Item("FTDescription") = "Quantity"
                    '        Case 1 : oRowItemSummary.Item("FTDescription") = "Extra"
                    '        Case 2 : oRowItemSummary.Item("FTDescription") = "Total Quantity" : oRowItemSummary.Item("FNRowTotal") = 0
                    '        Case 3 : oRowItemSummary.Item("FTDescription") = "Value" : oRowItemSummary.Item("FNRowTotal") = 0
                    '    End Select

                    '    oDBdtSizeBreakdownMatrixSum.Rows.Add(oRowItemSummary)

                    'Next nLoopSummary

                    'oDBdtSizeBreakdownMatrixSum.AcceptChanges()
                    ''==============================================================================================

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtMatrixDT.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtMatrixDT.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtMatrixDT.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then

                            Dim nLoopItemSeq As Integer = 0

                            Dim oRowItem As DataRow

                            For nLoopItemSeq = 0 To 4
                                oRowItem = oDBdtSizeBreakdownMatrixDT.NewRow()

                                oRowItem.Item("FNHSysMatColorId") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                                oRowItem.Item("FTMatColorCode") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                                oRowItem.Item("FTMatColorName") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorName")

                                Select Case nLoopItemSeq
                                    Case 0
                                        oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")) + 0
                                        'End If

                                    Case 1
                                        oRowItem.Item("FTDescription") = "Extra"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")) + 0
                                        'End If

                                    Case 2
                                        oRowItem.Item("FTDescription") = "Total Quantity"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")) + 0
                                        'End If

                                        REM XXX oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNRowTotal") = CDbl(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNRowTotal")) + oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                    Case 3
                                        oRowItem.Item("FTDescription") = "Price"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")

                                    Case 4
                                        oRowItem.Item("FTDescription") = "Value"
                                        REM 2014/01/18 oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")) + 0
                                        'End If

                                        REM XXX oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNRowTotal") = CDbl(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNRowTotal")) + oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                End Select

                                '...กรณีไซส์แรก
                                oRowItem.Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                oRowItem.Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                oRowItem.Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                                oRowItem.Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                oRowItem.Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                oRowItem.Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                oRowItem.Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                REM 2014/01/18 oRowItem.Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                oRowItem.Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                oRowItem.Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                oDBdtSizeBreakdownMatrixDT.Rows.Add(oRowItem)

                                oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                            Next nLoopItemSeq

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrixDT.Rows.Count - 5

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double
                            Dim nFNQuantityExtra As Double
                            Dim nFNGrandQuantity As Double
                            Dim nFNValue As Double

                            For nLoopItem As Integer = 0 To 4
                                Select Case nLoopItem
                                    Case 0
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNAmnt = oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNAmnt
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")) + 0
                                        'End If

                                    Case 1
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNQuantityExtra = oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNQuantityExtra
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")) + 0
                                        'End If

                                    Case 2
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNGrandQuantity = oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNGrandQuantity
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")) + 0
                                        'End If

                                        REM XXX oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNRowTotal") = CDbl(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNRowTotal")) + CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity"))

                                    Case 3
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                    Case 4
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNValue = oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNValue
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")) + 0
                                        'End If

                                        REM XXX oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNRowTotal") = CDbl(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNRowTotal")) + CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt"))

                                End Select

                                REM XXX oDBdtSizeBreakdownMatrixSum.AcceptChanges()

                            Next nLoopItem

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrixDT.AcceptChanges()
                            REM XXX oDBdtSizeBreakdownMatrixSum.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                    REM oDBdtSizeBreakdownMatrixSum.AcceptChanges()
                    '====================================================================================================================================

                    oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                    oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                    For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                        For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                            If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then
                                oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width
                                Exit For

                            End If

                        Next nLoopColSubBreakdownSum

                    Next nLoopColSubBreakdown

                    ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixDT
                    ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                    ogdSubOrdBreakDownSummary.Refresh()

                Else
                    oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                    oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                    For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                        For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                            If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then
                                oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width
                                Exit For

                            End If

                        Next nLoopColSubBreakdownSum

                    Next nLoopColSubBreakdown

                    ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixDT
                    ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                    ogdSubOrdBreakDownSummary.Refresh()

                End If
                '=====================================================================================================================================

                Return True

            Else
                '...Not Exists Sub OrderNo Breakdown Item
                Me.ogdSubOrdBreakDown.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)

                Return False

            End If

        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)

            Me.ogdSubOrdBreakDown.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
            Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)

            Return False

        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderBreakdownMatrix_REM_20140126(ByVal ptSubOrderNo$) As Boolean

        If Microsoft.VisualBasic.Trim$(ptSubOrderNo) = "" Then
            Me.ogdSubOrdBreakDown.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
            ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
            Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
            Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False
            Me.ogdSubOrdBreakDownSummary.Width = Me.ogdSubOrdBreakDown.Width
            Return False
        End If

        Dim tSql As String
        Dim oStrBuilder As New System.Text.StringBuilder()

        Dim oDBdtSizeBreakdownColorway As DataTable
        Dim oDBdtSizeBreakdownMatrix As DataTable
        Dim oDBdtSizeBreakdownMatrixDT As DataTable
        Dim oDBdtSizeBreakdownMatrixSum As DataTable
        Dim oDBdtSizeBreakdownInfo As DataTable

        Dim nLoopBreakdownSeq As Integer = 0
        Dim FNHSysMatSizeIdPrv As Integer
        Dim FNHSysMatSizeIdCurr As Integer

        Dim nFirstRowColorway As Integer

        Try
            tSql = ""
            tSql = "SELECT A.FNHSysMatSizeId, A.FTMatSizeCode, A.FTMatSizeNameEN AS FTMatSizeName"
            tSql &= ControlChars.CrLf & "FROM HITECH_MASTER.dbo.TMERMMatSize AS A"
            tSql &= ControlChars.CrLf & "WHERE EXISTS (SELECT 'T'"
            tSql &= ControlChars.CrLf & "              FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS L1"
            tSql &= ControlChars.CrLf & "              WHERE L1.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FNHSysMatSizeId = A.FNHSysMatSizeId)"
            tSql &= ControlChars.CrLf & "ORDER BY A.FNMatSizeSeq ASC;"

            oDBdtSizeBreakdownColorway = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtSizeBreakdownColorway.Rows.Count > 0 Then

                '...Colorway & Size Breakdown Matrix Header (View display Total Quantity : Quantity + Extra Quantity)
                oGridViewSubBreakdown = Me.ogdSubOrdBreakDown.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdown)
                REM 2014/01/25 oGridViewSubBreakdown.BestFitColumns()
                Me.ogdSubOrdBreakDown.DataSource = Nothing
                oDBdtSizeBreakdownMatrix = New DataTable()

                '...View Detail for Colorway & Size Breakdown 
                oGridViewSubBreakdownSum = Me.ogdSubOrdBreakDownSummary.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdownSum)
                REM 2014/01/25 oGridViewSubBreakdownSum.BestFitColumns()
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                oDBdtSizeBreakdownMatrixDT = New DataTable()

                '========================================== Create GridView Column / Create DataTable Column ====================================
                '...view display color description and Grand Quantity (Quantity + Extra Quantity)
                Dim oColFNHSysMatColorId As DataColumn
                oColFNHSysMatColorId = New DataColumn("FNHSysMatColorId", System.Type.GetType("System.Int32"))
                oColFNHSysMatColorId.Caption = "FNHSysMatColorId"

                oGridViewSubBreakdown.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                Dim oColFTMatColorCode As DataColumn
                oColFTMatColorCode = New DataColumn("FTMatColorCode", System.Type.GetType("System.String"))
                oColFTMatColorCode.Caption = "FTMatColorCode"

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                Dim oColFTMatColorName As DataColumn
                oColFTMatColorName = New DataColumn("FTMatColorName", System.Type.GetType("System.String"))
                oColFTMatColorName.Caption = "FTMatColorName"

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                '...แสดง รายละเอียด สี / view display color description
                Dim oColFTDescription As DataColumn
                oColFTDescription = New DataColumn("FTDescription", System.Type.GetType("System.String"))

                oGridViewSubBreakdown.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "สี / ไซส์"
                Else
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                End If

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Visible = True

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                REM oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Width = 146
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)

                '...Detail View Color/Extra/Total Quantity/Price/Value
                oGridViewSubBreakdownSum.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "สี / ไซส์"
                Else
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                End If

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Visible = True

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                REM oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Width = 146
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)

                '...dynamic generate column size breakdown
                For Each oRow As DataRow In oDBdtSizeBreakdownColorway.Rows

                    Dim oColAppendSizeId As DataColumn = New DataColumn("FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Int32"))
                    oColAppendSizeId.Caption = "FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    Dim oColAppendSizeCode As DataColumn = New DataColumn("FTMatSizeCode" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeCode.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    Dim oColAppendSizeName As DataColumn = New DataColumn("FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeName.Caption = "FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    '...keep value : FNGrandQuantity (จำนวนรวมของ Quantity + Extra Quantity)
                    Dim oColAppendAmntZZZ As DataColumn = New DataColumn("FNAmnt" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendAmntZZZ.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Visible = True

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Fixed = FixedStyle.None
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSize = False

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    '...Detail View : FNQuantity/FNExtraQuantity/FNGrandQuantity/FNPrice/FNAmt
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Visible = True

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Fixed = FixedStyle.None
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSize = False

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    Dim oColAppendFNQuantity As DataColumn = New DataColumn("FNQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantity.Caption = "FNQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    Dim oColAppendFNQuantityExtra As DataColumn = New DataColumn("FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantityExtra.Caption = "FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    Dim oColAppendFNGrandQuantity As DataColumn = New DataColumn("FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNGrandQuantity.Caption = "FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    Dim oColAppendFNPrice As DataColumn = New DataColumn("FNPrice" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNPrice.Caption = "FNPrice" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    '...Amount จาก จำนวนปริมาณที่สั่งซื้อจริง ของ รายการ Sub Order No. ตามสี ตามไซส์
                    Dim oColAppendFNValue As DataColumn = New DataColumn("FNValue" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNValue.Caption = "FNValue" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    Dim oColAppendFNExtraQtyPercent As DataColumn = New DataColumn("FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNExtraQtyPercent.Caption = "FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                Next

                Dim oColAppendFNRowTotal As DataColumn = New DataColumn("FNRowTotal", System.Type.GetType("System.Double"))
                oColAppendFNRowTotal.Caption = "T/T"

                oGridViewSubBreakdown.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Visible = True

                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Fixed = FixedStyle.Right
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSize = False

                REM oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Width = 80
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Visible = True

                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Fixed = FixedStyle.Right
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSize = False

                REM oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Width = 80
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                '====================================================================================================================================

                '...iterate loop binding row datatable datarow to oDBdtSizeBreakdownMatrix
                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGrandQuantity, B.FNGrandAmnt")
                oStrBuilder.AppendLine("FROM dbo.TMERTOrderSub_BreakDown AS B INNER JOIN HITECH_MASTER.dbo.TMERMMatColor AS C ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN HITECH_MASTER.dbo.TMERMMatSize AS D ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()
                oDBdtSizeBreakdownInfo = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtSizeBreakdownInfo.Rows.Count > 0 Then

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtSizeBreakdownInfo.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then
                            'Dim nLoopItemSeq As Integer = 0
                            Dim oRowItem As DataRow

                            '...กรณีเป็นรายการไซส์แรกของแต่ละสี
                            oRowItem = oDBdtSizeBreakdownMatrix.NewRow()

                            oRowItem.Item("FNHSysMatColorId") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            oRowItem.Item("FTMatColorCode") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                            oRowItem.Item("FTMatColorName") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                            oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                            oRowItem.Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oRowItem.Item("FNRowTotal") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oRowItem.Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                            oRowItem.Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                            oRowItem.Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                            oRowItem.Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oRowItem.Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                            oRowItem.Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oRowItem.Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                            oRowItem.Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                            oRowItem.Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                            oDBdtSizeBreakdownMatrix.Rows.Add(oRowItem)

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrix.Rows.Count - 1

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double

                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity") 'oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                            nFNAmnt = oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNRowTotal")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNRowTotal") = nFNAmnt

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrix.AcceptChanges()
                            REM oDBdtSizeBreakdownMatrixSum.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrix.AcceptChanges()

                End If

                oGridViewSubBreakdown.OptionsBehavior.AllowAddRows = False
                oGridViewSubBreakdown.OptionsCustomization.AllowSort = False

                ogdSubOrdBreakDown.DataSource = oDBdtSizeBreakdownMatrix
                ogdSubOrdBreakDown = oGridViewSubBreakdown.GridControl
                oGridViewSubBreakdown.OptionsView.ColumnAutoWidth = False
                ogdSubOrdBreakDown.Refresh()
                oGridViewSubBreakdown.RefreshData()

                '=======================================================Sub Order No. Detail==========================================================
                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGrandQuantity, B.FNGrandAmnt")
                oStrBuilder.AppendLine("FROM dbo.TMERTOrderSub_BreakDown AS B INNER JOIN HITECH_MASTER.dbo.TMERMMatColor AS C ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN HITECH_MASTER.dbo.TMERMMatSize AS D ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()

                Dim oDBdtMatrixDT As DataTable
                oDBdtMatrixDT = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtMatrixDT.Rows.Count > 0 Then

                    '...iterate loop binding
                    '======================================================binding record================================================================
                    '...Summary
                    '==============================================================================================
                    REM XXX
                    'Dim oRowItemSummary As DataRow
                    'For nLoopSummary As Integer = 0 To 3
                    '    oRowItemSummary = oDBdtSizeBreakdownMatrixSum.NewRow()

                    '    Select Case nLoopSummary
                    '        Case 0 : oRowItemSummary.Item("FTDescription") = "Quantity"
                    '        Case 1 : oRowItemSummary.Item("FTDescription") = "Extra"
                    '        Case 2 : oRowItemSummary.Item("FTDescription") = "Total Quantity" : oRowItemSummary.Item("FNRowTotal") = 0
                    '        Case 3 : oRowItemSummary.Item("FTDescription") = "Value" : oRowItemSummary.Item("FNRowTotal") = 0
                    '    End Select

                    '    oDBdtSizeBreakdownMatrixSum.Rows.Add(oRowItemSummary)

                    'Next nLoopSummary

                    'oDBdtSizeBreakdownMatrixSum.AcceptChanges()
                    ''==============================================================================================

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtMatrixDT.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtMatrixDT.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtMatrixDT.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then

                            Dim nLoopItemSeq As Integer = 0

                            Dim oRowItem As DataRow

                            For nLoopItemSeq = 0 To 4
                                oRowItem = oDBdtSizeBreakdownMatrixDT.NewRow()

                                oRowItem.Item("FNHSysMatColorId") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                                oRowItem.Item("FTMatColorCode") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                                oRowItem.Item("FTMatColorName") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorName")

                                Select Case nLoopItemSeq
                                    Case 0
                                        oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")) + 0
                                        'End If

                                    Case 1
                                        oRowItem.Item("FTDescription") = "Extra"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")) + 0
                                        'End If

                                    Case 2
                                        oRowItem.Item("FTDescription") = "Total Quantity"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")) + 0
                                        'End If

                                        REM XXX oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNRowTotal") = CDbl(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNRowTotal")) + oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                    Case 3
                                        oRowItem.Item("FTDescription") = "Price"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")

                                    Case 4
                                        oRowItem.Item("FTDescription") = "Value"
                                        REM 2014/01/18 oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")) + 0
                                        'End If

                                        REM XXX oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNRowTotal") = CDbl(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNRowTotal")) + oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                End Select

                                '...กรณีไซส์แรก
                                oRowItem.Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                oRowItem.Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                oRowItem.Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                                oRowItem.Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                oRowItem.Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                oRowItem.Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                oRowItem.Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                REM 2014/01/18 oRowItem.Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                oRowItem.Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                oRowItem.Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                oDBdtSizeBreakdownMatrixDT.Rows.Add(oRowItem)

                                oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                            Next nLoopItemSeq

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrixDT.Rows.Count - 5

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double
                            Dim nFNQuantityExtra As Double
                            Dim nFNGrandQuantity As Double
                            Dim nFNValue As Double

                            For nLoopItem As Integer = 0 To 4
                                Select Case nLoopItem
                                    Case 0
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNAmnt = oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNAmnt
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(0).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")) + 0
                                        'End If

                                    Case 1
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNQuantityExtra = oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNQuantityExtra
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(1).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")) + 0
                                        'End If

                                    Case 2
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNGrandQuantity = oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNGrandQuantity
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")) + 0
                                        'End If

                                        REM XXX oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNRowTotal") = CDbl(oDBdtSizeBreakdownMatrixSum.Rows(2).Item("FNRowTotal")) + CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity"))

                                    Case 3
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                    Case 4
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNValue = oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNValue
                                        REM XXX
                                        'If Not DBNull.Value.Equals(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode"))) Then
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")) + CDbl(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")))
                                        'Else
                                        '    oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")) + 0
                                        'End If

                                        REM XXX oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNRowTotal") = CDbl(oDBdtSizeBreakdownMatrixSum.Rows(3).Item("FNRowTotal")) + CDbl(oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt"))

                                End Select

                                REM XXX oDBdtSizeBreakdownMatrixSum.AcceptChanges()

                            Next nLoopItem

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrixDT.AcceptChanges()
                            REM XXX oDBdtSizeBreakdownMatrixSum.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                    REM oDBdtSizeBreakdownMatrixSum.AcceptChanges()
                    '====================================================================================================================================

                    oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                    oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                    For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                        For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                            If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then
                                oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width
                                Exit For

                            End If

                        Next nLoopColSubBreakdownSum

                    Next nLoopColSubBreakdown

                    ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixDT
                    ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                    oGridViewSubBreakdownSum.OptionsView.ColumnAutoWidth = False
                    ogdSubOrdBreakDownSummary.Refresh()
                    oGridViewSubBreakdownSum.RefreshData()

                Else
                    oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                    oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                    For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                        For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                            If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then
                                oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width
                                Exit For

                            End If

                        Next nLoopColSubBreakdownSum

                    Next nLoopColSubBreakdown

                    ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixDT
                    ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                    oGridViewSubBreakdownSum.OptionsView.ColumnAutoWidth = False
                    ogdSubOrdBreakDownSummary.Refresh()
                    oGridViewSubBreakdownSum.RefreshData()

                End If
                '=====================================================================================================================================

                Return True

            Else
                '...Not Exists Sub OrderNo Breakdown Item
                Me.ogdSubOrdBreakDown.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                Me.ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
                Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

                Return False

            End If

        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)

            Me.ogdSubOrdBreakDown.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
            Me.ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
            Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
            Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

            Return False

        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderBreakdownMatrix_REM_20140209(ByVal ptSubOrderNo$) As Boolean

        REM 2014/01/26
        'If Microsoft.VisualBasic.Trim$(ptSubOrderNo) = "" Then
        '    Me.ogdSubOrdBreakDown.DataSource = Nothing
        '    Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
        '    ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
        '    Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
        '    Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
        '    Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False
        '    Me.ogdSubOrdBreakDownSummary.Width = Me.ogdSubOrdBreakDown.Width
        '    Return False
        'End If

        Me.ogdSubOrdBreakDown.DataSource = Nothing
        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
        ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
        Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
        Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False
        Me.ogdSubOrdBreakDownSummary.Width = Me.ogdSubOrdBreakDown.Width

        If Microsoft.VisualBasic.Trim$(ptSubOrderNo) = "" Then Return False

        Dim tSql As String
        Dim oStrBuilder As New System.Text.StringBuilder()

        Dim oDBdtSizeBreakdownColorway As DataTable
        Dim oDBdtSizeBreakdownMatrix As DataTable
        Dim oDBdtSizeBreakdownMatrixDT As DataTable
        Dim oDBdtSizeBreakdownInfo As DataTable

        Dim nLoopBreakdownSeq As Integer = 0
        Dim FNHSysMatSizeIdPrv As Integer
        Dim FNHSysMatSizeIdCurr As Integer

        Dim nFirstRowColorway As Integer

        Try
            tSql = ""
            tSql = "SELECT A.FNHSysMatSizeId, A.FTMatSizeCode, A.FTMatSizeNameEN AS FTMatSizeName"
            tSql &= ControlChars.CrLf & "FROM HITECH_MASTER.dbo.TMERMMatSize AS A"
            tSql &= ControlChars.CrLf & "WHERE EXISTS (SELECT 'T'"
            tSql &= ControlChars.CrLf & "              FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS L1"
            tSql &= ControlChars.CrLf & "              WHERE L1.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FNHSysMatSizeId = A.FNHSysMatSizeId)"
            tSql &= ControlChars.CrLf & "ORDER BY A.FNMatSizeSeq ASC;"

            oDBdtSizeBreakdownColorway = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtSizeBreakdownColorway.Rows.Count > 0 Then

                '...Colorway & Size Breakdown Matrix Header (View display Total Quantity : Quantity + Extra Quantity)
                oGridViewSubBreakdown = Me.ogdSubOrdBreakDown.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdown)
                REM 2014/01/25 oGridViewSubBreakdown.BestFitColumns()
                Me.ogdSubOrdBreakDown.DataSource = Nothing
                oDBdtSizeBreakdownMatrix = New DataTable()

                '...View Detail for Colorway & Size Breakdown 
                oGridViewSubBreakdownSum = Me.ogdSubOrdBreakDownSummary.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdownSum)
                REM 2014/01/25 oGridViewSubBreakdownSum.BestFitColumns()
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                oDBdtSizeBreakdownMatrixDT = New DataTable()

                '========================================== Create GridView Column / Create DataTable Column ====================================
                '...view display color description and Grand Quantity (Quantity + Extra Quantity)
                Dim oColFNHSysMatColorId As DataColumn
                oColFNHSysMatColorId = New DataColumn("FNHSysMatColorId", System.Type.GetType("System.Int32"))
                oColFNHSysMatColorId.Caption = "FNHSysMatColorId"

                oGridViewSubBreakdown.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                Dim oColFTMatColorCode As DataColumn
                oColFTMatColorCode = New DataColumn("FTMatColorCode", System.Type.GetType("System.String"))
                oColFTMatColorCode.Caption = "FTMatColorCode"

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                Dim oColFTMatColorName As DataColumn
                oColFTMatColorName = New DataColumn("FTMatColorName", System.Type.GetType("System.String"))
                oColFTMatColorName.Caption = "FTMatColorName"

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                '...แสดง รายละเอียด สี / view display color description
                Dim oColFTDescription As DataColumn
                oColFTDescription = New DataColumn("FTDescription", System.Type.GetType("System.String"))

                oGridViewSubBreakdown.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "สี / ไซส์"
                Else
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                End If

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Visible = True

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                REM oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Width = 146
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)

                '...Detail View Color/Extra/Total Quantity/Price/Value
                oGridViewSubBreakdownSum.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "สี / ไซส์"
                Else
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                End If

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Visible = True

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                REM oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Width = 146
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)

                '...dynamic generate column size breakdown
                For Each oRow As DataRow In oDBdtSizeBreakdownColorway.Rows

                    Dim oColAppendSizeId As DataColumn = New DataColumn("FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Int32"))
                    oColAppendSizeId.Caption = "FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    Dim oColAppendSizeCode As DataColumn = New DataColumn("FTMatSizeCode" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeCode.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    Dim oColAppendSizeName As DataColumn = New DataColumn("FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeName.Caption = "FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    '...keep value : FNGrandQuantity (จำนวนรวมของ Quantity + Extra Quantity)
                    Dim oColAppendAmntZZZ As DataColumn = New DataColumn("FNAmnt" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendAmntZZZ.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Visible = True

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Fixed = FixedStyle.None
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSize = False

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    '...Detail View : FNQuantity/FNExtraQuantity/FNGrandQuantity/FNPrice/FNAmt
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Visible = True

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Fixed = FixedStyle.None
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSize = False

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                    REM 2014/01/26 oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    Dim oColAppendFNQuantity As DataColumn = New DataColumn("FNQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantity.Caption = "FNQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    Dim oColAppendFNQuantityExtra As DataColumn = New DataColumn("FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantityExtra.Caption = "FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    Dim oColAppendFNGrandQuantity As DataColumn = New DataColumn("FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNGrandQuantity.Caption = "FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    Dim oColAppendFNPrice As DataColumn = New DataColumn("FNPrice" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNPrice.Caption = "FNPrice" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    '...Amount จาก จำนวนปริมาณที่สั่งซื้อจริง ของ รายการ Sub Order No. ตามสี ตามไซส์
                    Dim oColAppendFNValue As DataColumn = New DataColumn("FNValue" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNValue.Caption = "FNValue" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    Dim oColAppendFNExtraQtyPercent As DataColumn = New DataColumn("FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNExtraQtyPercent.Caption = "FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                Next

                Dim oColAppendFNRowTotal As DataColumn = New DataColumn("FNRowTotal", System.Type.GetType("System.Double"))
                oColAppendFNRowTotal.Caption = "T/T"

                oGridViewSubBreakdown.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Visible = True

                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Fixed = FixedStyle.Right
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSize = False

                REM oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Width = 80
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Visible = True

                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Fixed = FixedStyle.Right
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSize = False

                REM oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Width = 80
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatString = "{0:N0}"
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                '====================================================================================================================================

                '...iterate loop binding row datatable datarow to oDBdtSizeBreakdownMatrix
                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGrandQuantity, B.FNGrandAmnt")
                oStrBuilder.AppendLine("FROM dbo.TMERTOrderSub_BreakDown AS B INNER JOIN HITECH_MASTER.dbo.TMERMMatColor AS C ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN HITECH_MASTER.dbo.TMERMMatSize AS D ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()
                oDBdtSizeBreakdownInfo = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtSizeBreakdownInfo.Rows.Count > 0 Then

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtSizeBreakdownInfo.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then
                            'Dim nLoopItemSeq As Integer = 0
                            Dim oRowItem As DataRow

                            '...กรณีเป็นรายการไซส์แรกของแต่ละสี
                            oRowItem = oDBdtSizeBreakdownMatrix.NewRow()

                            oRowItem.Item("FNHSysMatColorId") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            oRowItem.Item("FTMatColorCode") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                            oRowItem.Item("FTMatColorName") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                            oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                            oRowItem.Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oRowItem.Item("FNRowTotal") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oRowItem.Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                            oRowItem.Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                            oRowItem.Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                            oRowItem.Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oRowItem.Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                            oRowItem.Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oRowItem.Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                            oRowItem.Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                            oRowItem.Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                            oDBdtSizeBreakdownMatrix.Rows.Add(oRowItem)

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrix.Rows.Count - 1

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double

                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity") 'oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                            nFNAmnt = oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNRowTotal")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNRowTotal") = nFNAmnt

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrix.AcceptChanges()
                            REM oDBdtSizeBreakdownMatrixSum.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrix.AcceptChanges()

                End If

                oGridViewSubBreakdown.OptionsBehavior.AllowAddRows = False
                oGridViewSubBreakdown.OptionsCustomization.AllowSort = False

                ogdSubOrdBreakDown.DataSource = oDBdtSizeBreakdownMatrix
                ogdSubOrdBreakDown = oGridViewSubBreakdown.GridControl
                oGridViewSubBreakdown.OptionsView.ColumnAutoWidth = False
                ogdSubOrdBreakDown.Refresh()
                oGridViewSubBreakdown.RefreshData()

                '=======================================================Sub Order No. Detail==========================================================
                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGrandQuantity, B.FNGrandAmnt")
                oStrBuilder.AppendLine("FROM dbo.TMERTOrderSub_BreakDown AS B INNER JOIN HITECH_MASTER.dbo.TMERMMatColor AS C ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN HITECH_MASTER.dbo.TMERMMatSize AS D ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & Me.FTOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & Me.FTSubOrderNo.Properties.Tag.ToString() & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()

                Dim oDBdtMatrixDT As DataTable
                oDBdtMatrixDT = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtMatrixDT.Rows.Count > 0 Then

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtMatrixDT.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtMatrixDT.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtMatrixDT.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then

                            Dim nLoopItemSeq As Integer = 0

                            Dim oRowItem As DataRow

                            For nLoopItemSeq = 0 To 4
                                oRowItem = oDBdtSizeBreakdownMatrixDT.NewRow()

                                oRowItem.Item("FNHSysMatColorId") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                                oRowItem.Item("FTMatColorCode") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                                oRowItem.Item("FTMatColorName") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorName")

                                Select Case nLoopItemSeq
                                    Case 0
                                        oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                    Case 1
                                        oRowItem.Item("FTDescription") = "Extra"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                    Case 2
                                        oRowItem.Item("FTDescription") = "Total Quantity"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                    Case 3
                                        oRowItem.Item("FTDescription") = "Price"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                    Case 4
                                        oRowItem.Item("FTDescription") = "Value"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                End Select

                                '...กรณีไซส์แรก
                                oRowItem.Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                oRowItem.Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                oRowItem.Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                                oRowItem.Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                oRowItem.Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                oRowItem.Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                oRowItem.Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                REM 2014/01/18 oRowItem.Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                oRowItem.Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                oRowItem.Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                oDBdtSizeBreakdownMatrixDT.Rows.Add(oRowItem)

                                oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                            Next nLoopItemSeq

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrixDT.Rows.Count - 5

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double
                            Dim nFNQuantityExtra As Double
                            Dim nFNGrandQuantity As Double
                            Dim nFNValue As Double

                            For nLoopItem As Integer = 0 To 4
                                Select Case nLoopItem
                                    Case 0
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNAmnt = oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNAmnt
                                    Case 1
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNQuantityExtra = oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNQuantityExtra
                                    Case 2
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNGrandQuantity = oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNGrandQuantity

                                    Case 3
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                    Case 4
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        REM 2014/01/18 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        REM 2014/01/26 nFNValue = oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        REM 2014/01/26 oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNValue

                                        nFNValue = oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) + oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNValue

                                End Select

                                'oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                            Next nLoopItem

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                    '====================================================================================================================================

                    oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                    oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                    For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                        For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                            If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then
                                oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width
                                Exit For

                            End If

                        Next nLoopColSubBreakdownSum

                    Next nLoopColSubBreakdown

                    ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixDT
                    ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                    oGridViewSubBreakdownSum.OptionsView.ColumnAutoWidth = False
                    ogdSubOrdBreakDownSummary.Refresh()
                    oGridViewSubBreakdownSum.RefreshData()

                Else
                    oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                    oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                    For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                        For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                            If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then
                                oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width
                                Exit For

                            End If

                        Next nLoopColSubBreakdownSum

                    Next nLoopColSubBreakdown

                    ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixDT
                    ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                    oGridViewSubBreakdownSum.OptionsView.ColumnAutoWidth = False
                    ogdSubOrdBreakDownSummary.Refresh()
                    oGridViewSubBreakdownSum.RefreshData()

                End If
                '=====================================================================================================================================

                Return True

            Else
                '...Not Exists Sub OrderNo Breakdown Item
                Me.ogdSubOrdBreakDown.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                Me.ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
                Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

                Return False

            End If

        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)

            Me.ogdSubOrdBreakDown.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
            Me.ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
            Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
            Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

            Return False

        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderBreakdownMatrix_REM_20140317(ByVal ptSubOrderNo$) As Boolean

        Me.ogdSubOrdBreakDown.DataSource = Nothing
        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
        ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
        Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
        Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False
        Me.ogdSubOrdBreakDownSummary.Width = Me.ogdSubOrdBreakDown.Width

        If Microsoft.VisualBasic.Trim$(ptSubOrderNo) = "" Then Return False

        Dim tSql As String
        Dim oStrBuilder As New System.Text.StringBuilder()

        Dim oDBdtSizeBreakdownColorway As DataTable
        Dim oDBdtSizeBreakdownMatrix As DataTable
        Dim oDBdtSizeBreakdownMatrixDT As DataTable
        Dim oDBdtSizeBreakdownInfo As DataTable

        Dim nLoopBreakdownSeq As Integer = 0
        Dim FNHSysMatSizeIdPrv As Integer
        Dim FNHSysMatSizeIdCurr As Integer

        Dim nFirstRowColorway As Integer

        Try
            tSql = ""
            tSql = "SELECT A.FNHSysMatSizeId, A.FTMatSizeCode, A.FTMatSizeNameEN AS FTMatSizeName"
            tSql &= ControlChars.CrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS A"
            tSql &= ControlChars.CrLf & "WHERE EXISTS (SELECT 'T'"
            tSql &= ControlChars.CrLf & "              FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L1"
            tSql &= ControlChars.CrLf & "              WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FNHSysMatSizeId = A.FNHSysMatSizeId)"
            tSql &= ControlChars.CrLf & "ORDER BY A.FNMatSizeSeq ASC;"

            oDBdtSizeBreakdownColorway = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtSizeBreakdownColorway.Rows.Count > 0 Then

                '...Colorway & Size Breakdown Matrix Header (View display Total Quantity : Quantity + Extra Quantity)
                oGridViewSubBreakdown = Me.ogdSubOrdBreakDown.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdown)

                Me.ogdSubOrdBreakDown.DataSource = Nothing
                oDBdtSizeBreakdownMatrix = New DataTable()

                '...View Detail for Colorway & Size Breakdown 
                oGridViewSubBreakdownSum = Me.ogdSubOrdBreakDownSummary.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdownSum)

                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                oDBdtSizeBreakdownMatrixDT = New DataTable()

                '========================================== Create GridView Column / Create DataTable Column ====================================
                '...view display color description and Grand Quantity (Quantity + Extra Quantity)
                Dim oColFNHSysMatColorId As DataColumn
                oColFNHSysMatColorId = New DataColumn("FNHSysMatColorId", System.Type.GetType("System.Int32"))
                oColFNHSysMatColorId.Caption = "FNHSysMatColorId"

                oGridViewSubBreakdown.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                Dim oColFTMatColorCode As DataColumn
                oColFTMatColorCode = New DataColumn("FTMatColorCode", System.Type.GetType("System.String"))
                oColFTMatColorCode.Caption = "FTMatColorCode"

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                Dim oColFTMatColorName As DataColumn
                oColFTMatColorName = New DataColumn("FTMatColorName", System.Type.GetType("System.String"))
                oColFTMatColorName.Caption = "FTMatColorName"

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                '...แสดง รายละเอียด สี / view display color description
                Dim oColFTDescription As DataColumn
                oColFTDescription = New DataColumn("FTDescription", System.Type.GetType("System.String"))

                oGridViewSubBreakdown.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "สี / ไซส์"
                Else
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                End If

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Visible = True

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)

                '...Detail View Color/Extra/Total Quantity/Price/Value
                oGridViewSubBreakdownSum.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "สี / ไซส์"
                Else
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                End If

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Visible = True

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)

                '...dynamic generate column size breakdown
                For Each oRow As DataRow In oDBdtSizeBreakdownColorway.Rows

                    Dim oColAppendSizeId As DataColumn = New DataColumn("FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Int32"))
                    oColAppendSizeId.Caption = "FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    Dim oColAppendSizeCode As DataColumn = New DataColumn("FTMatSizeCode" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeCode.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    Dim oColAppendSizeName As DataColumn = New DataColumn("FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeName.Caption = "FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    '...keep value : FNGrandQuantity (จำนวนรวมของ Quantity + Extra Quantity)
                    Dim oColAppendAmntZZZ As DataColumn = New DataColumn("FNAmnt" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendAmntZZZ.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Visible = True

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Fixed = FixedStyle.None
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSize = False

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    '...Detail View : FNQuantity/FNExtraQuantity/FNGrandQuantity/FNPrice/FNAmt
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Visible = True

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Fixed = FixedStyle.None
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSize = False

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    Dim oColAppendFNQuantity As DataColumn = New DataColumn("FNQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantity.Caption = "FNQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    Dim oColAppendFNQuantityExtra As DataColumn = New DataColumn("FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantityExtra.Caption = "FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    Dim oColAppendFNGrandQuantity As DataColumn = New DataColumn("FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNGrandQuantity.Caption = "FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    Dim oColAppendFNPrice As DataColumn = New DataColumn("FNPrice" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNPrice.Caption = "FNPrice" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    '...Amount จาก จำนวนปริมาณที่สั่งซื้อจริง ของ รายการ Sub Order No. ตามสี ตามไซส์
                    Dim oColAppendFNValue As DataColumn = New DataColumn("FNValue" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNValue.Caption = "FNValue" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    Dim oColAppendFNExtraQtyPercent As DataColumn = New DataColumn("FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNExtraQtyPercent.Caption = "FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                Next

                Dim oColAppendFNRowTotal As DataColumn = New DataColumn("FNRowTotal", System.Type.GetType("System.Double"))
                oColAppendFNRowTotal.Caption = "T/T"

                oGridViewSubBreakdown.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Visible = True

                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Fixed = FixedStyle.Right
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Visible = True

                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Fixed = FixedStyle.Right
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatString = "{0:N0}"
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                '====================================================================================================================================

                '...iterate loop binding row datatable datarow to oDBdtSizeBreakdownMatrix
                oStrBuilder.Remove(0, oStrBuilder.Length)

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameTH AS FTMatColorName")
                Else
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                End If

                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGrandQuantity, B.FNGrandAmnt, (C.FTMatColorNameEN + '/' + C.FTMatColorNameTH) AS FTColorExtension")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS B INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatColor AS C ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS D ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()
                oDBdtSizeBreakdownInfo = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtSizeBreakdownInfo.Rows.Count > 0 Then

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtSizeBreakdownInfo.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then
                            'Dim nLoopItemSeq As Integer = 0
                            Dim oRowItem As DataRow

                            '...กรณีเป็นรายการไซส์แรกของแต่ละสี
                            oRowItem = oDBdtSizeBreakdownMatrix.NewRow()

                            oRowItem.Item("FNHSysMatColorId") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            oRowItem.Item("FTMatColorCode") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                            oRowItem.Item("FTMatColorName") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                            oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTColorExtension")
                            oRowItem.Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oRowItem.Item("FNRowTotal") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oRowItem.Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                            oRowItem.Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                            oRowItem.Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                            oRowItem.Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oRowItem.Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                            oRowItem.Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oRowItem.Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                            oRowItem.Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                            oRowItem.Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                            oDBdtSizeBreakdownMatrix.Rows.Add(oRowItem)

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrix.Rows.Count - 1

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double

                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity") 'oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                            nFNAmnt = Val(oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNRowTotal").ToString())
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNRowTotal") = nFNAmnt

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrix.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrix.AcceptChanges()

                End If

                oGridViewSubBreakdown.OptionsBehavior.AllowAddRows = False
                oGridViewSubBreakdown.OptionsCustomization.AllowSort = False

                oGridViewSubBreakdown.ActiveFilter.Clear()

                ogdSubOrdBreakDown.DataSource = oDBdtSizeBreakdownMatrix
                ogdSubOrdBreakDown = oGridViewSubBreakdown.GridControl
                oGridViewSubBreakdown.OptionsView.ColumnAutoWidth = False
                ogdSubOrdBreakDown.Refresh()
                oGridViewSubBreakdown.RefreshData()

                '=======================================================Sub Order No. Detail==========================================================
                oStrBuilder.Remove(0, oStrBuilder.Length)

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, (C.FTMatColorNameEN + '/' + C.FTMatColorNameTH) AS FTMatColorName")
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, (C.FTMatColorNameEN + '/' + C.FTMatColorNameTH) AS FTMatColorName")
                Else
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                End If

                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGrandQuantity, B.FNGrandAmnt")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS B INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatColor AS C ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS D ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()

                Dim oDBdtMatrixDT As DataTable
                oDBdtMatrixDT = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtMatrixDT.Rows.Count > 0 Then

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtMatrixDT.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtMatrixDT.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtMatrixDT.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then

                            Dim nLoopItemSeq As Integer = 0

                            Dim oRowItem As DataRow

                            For nLoopItemSeq = 0 To 4
                                oRowItem = oDBdtSizeBreakdownMatrixDT.NewRow()

                                oRowItem.Item("FNHSysMatColorId") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                                oRowItem.Item("FTMatColorCode") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                                oRowItem.Item("FTMatColorName") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorName")

                                Select Case nLoopItemSeq
                                    Case 0
                                        oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                    Case 1
                                        oRowItem.Item("FTDescription") = "Extra/จำนวนเผื่อ"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                    Case 2
                                        oRowItem.Item("FTDescription") = "Total Quantity/ปริมาณสุทธิ"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                    Case 3
                                        oRowItem.Item("FTDescription") = "Price/ราคา"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                    Case 4
                                        oRowItem.Item("FTDescription") = "Value/มูลค่าสุทธิ"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                End Select

                                '...กรณีไซส์แรก
                                oRowItem.Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                oRowItem.Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                oRowItem.Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                                oRowItem.Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                oRowItem.Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                oRowItem.Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                oRowItem.Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                oRowItem.Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                oRowItem.Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                oDBdtSizeBreakdownMatrixDT.Rows.Add(oRowItem)

                                oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                            Next nLoopItemSeq

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrixDT.Rows.Count - 5

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double
                            Dim nFNQuantityExtra As Double
                            Dim nFNGrandQuantity As Double
                            Dim nFNValue As Double

                            For nLoopItem As Integer = 0 To 4
                                Select Case nLoopItem
                                    Case 0
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNAmnt = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNAmnt
                                    Case 1
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNQuantityExtra = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNQuantityExtra
                                    Case 2
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNGrandQuantity = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNGrandQuantity

                                    Case 3
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                    Case 4
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNValue = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNValue

                                End Select

                            Next nLoopItem

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                    '====================================================================================================================================

                    oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                    oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                    For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                        For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                            If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then
                                oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width
                                Exit For

                            End If

                        Next nLoopColSubBreakdownSum

                    Next nLoopColSubBreakdown

                    oGridViewSubBreakdownSum.ActiveFilter.Clear()

                    ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixDT
                    ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                    oGridViewSubBreakdownSum.OptionsView.ColumnAutoWidth = False
                    ogdSubOrdBreakDownSummary.Refresh()
                    oGridViewSubBreakdownSum.RefreshData()

                Else
                    oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                    oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                    For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                        For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                            If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then
                                oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width
                                Exit For

                            End If

                        Next nLoopColSubBreakdownSum

                    Next nLoopColSubBreakdown

                    oGridViewSubBreakdownSum.ActiveFilter.Clear()

                    ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixDT
                    ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                    oGridViewSubBreakdownSum.OptionsView.ColumnAutoWidth = False
                    ogdSubOrdBreakDownSummary.Refresh()
                    oGridViewSubBreakdownSum.RefreshData()

                End If
                '=====================================================================================================================================

                Return True

            Else
                '...Not Exists Sub OrderNo Breakdown Item
                Me.ogdSubOrdBreakDown.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                Me.ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
                Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

                Return False

            End If

        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)

            Me.ogdSubOrdBreakDown.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
            Me.ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
            Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
            Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

            Return False

        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderBreakdownMatrix_REM_20140522(ByVal ptSubOrderNo$) As Boolean

        Me.ogdSubOrdBreakDown.DataSource = Nothing
        Me.ogdSubOrdBreakDown.Refresh()
        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
        ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False

        Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
        Me.ogdSubOrdBreakDown.Refresh()
        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
        Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

        Me.ogdSubOrdBreakDownSummary.Width = Me.ogdSubOrdBreakDown.Width

        If Microsoft.VisualBasic.Trim$(ptSubOrderNo) = "" Then Return False

        Dim tSql As String
        Dim oStrBuilder As New System.Text.StringBuilder()

        Dim oDBdtSizeBreakdownColorway As DataTable
        Dim oDBdtSizeBreakdownMatrix As DataTable
        Dim oDBdtSizeBreakdownMatrixDT As DataTable
        Dim oDBdtSizeBreakdownInfo As DataTable

        Dim nLoopBreakdownSeq As Integer = 0
        Dim FNHSysMatSizeIdPrv As Integer
        Dim FNHSysMatSizeIdCurr As Integer

        Dim nFirstRowColorway As Integer

        Try
            tSql = ""
            tSql = "SELECT A.FNHSysMatSizeId, A.FTMatSizeCode, A.FTMatSizeNameEN AS FTMatSizeName"
            tSql &= ControlChars.CrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS A WITH(NOLOCK)"
            tSql &= ControlChars.CrLf & "WHERE EXISTS (SELECT 'T'"
            tSql &= ControlChars.CrLf & "              FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L1 WITH(NOLOCK)"
            tSql &= ControlChars.CrLf & "              WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FNHSysMatSizeId = A.FNHSysMatSizeId)"
            tSql &= ControlChars.CrLf & "ORDER BY A.FNMatSizeSeq ASC;"

            oDBdtSizeBreakdownColorway = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtSizeBreakdownColorway.Rows.Count > 0 Then

                '...Colorway & Size Breakdown Matrix Header (View display Total Quantity : Quantity + Extra Quantity)
                oGridViewSubBreakdown = Me.ogdSubOrdBreakDown.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdown)

                Me.ogdSubOrdBreakDown.DataSource = Nothing
                oDBdtSizeBreakdownMatrix = New DataTable()

                '...View Detail for Colorway & Size Breakdown 
                oGridViewSubBreakdownSum = Me.ogdSubOrdBreakDownSummary.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdownSum)

                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                oDBdtSizeBreakdownMatrixDT = New DataTable()

                '========================================== Create GridView Column / Create DataTable Column ====================================
                '...view display color description and Grand Quantity (Quantity + Extra Quantity)
                Dim oColFNHSysMatColorId As DataColumn
                oColFNHSysMatColorId = New DataColumn("FNHSysMatColorId", System.Type.GetType("System.Int32"))
                oColFNHSysMatColorId.Caption = "FNHSysMatColorId"

                oGridViewSubBreakdown.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                Dim oColFTMatColorCode As DataColumn
                oColFTMatColorCode = New DataColumn("FTMatColorCode", System.Type.GetType("System.String"))
                oColFTMatColorCode.Caption = "FTMatColorCode"

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                Dim oColFTMatColorName As DataColumn
                oColFTMatColorName = New DataColumn("FTMatColorName", System.Type.GetType("System.String"))
                oColFTMatColorName.Caption = "FTMatColorName"

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                '...แสดง รายละเอียด สี / view display color description
                Dim oColFTDescription As DataColumn
                oColFTDescription = New DataColumn("FTDescription", System.Type.GetType("System.String"))

                oGridViewSubBreakdown.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "สี / ไซส์"
                Else
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                End If

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Visible = True

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)

                '...Detail View Color/Extra/Total Quantity/Price/Value
                oGridViewSubBreakdownSum.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "สี / ไซส์"
                Else
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                End If

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Visible = True

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)

                '...dynamic generate column size breakdown
                For Each oRow As DataRow In oDBdtSizeBreakdownColorway.Rows

                    Dim oColAppendSizeId As DataColumn = New DataColumn("FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Int32"))
                    oColAppendSizeId.Caption = "FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    Dim oColAppendSizeCode As DataColumn = New DataColumn("FTMatSizeCode" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeCode.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    Dim oColAppendSizeName As DataColumn = New DataColumn("FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeName.Caption = "FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    '...keep value : FNGrandQuantity (จำนวนรวมของ Quantity + Extra Quantity)
                    Dim oColAppendAmntZZZ As DataColumn = New DataColumn("FNAmnt" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendAmntZZZ.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Visible = True

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Fixed = FixedStyle.None
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSize = False

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    '...Detail View : FNQuantity/FNExtraQuantity/FNGrandQuantity/FNPrice/FNAmt
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Visible = True

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Fixed = FixedStyle.None
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSize = False

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    Dim oColAppendFNQuantity As DataColumn = New DataColumn("FNQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantity.Caption = "FNQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    Dim oColAppendFNQuantityExtra As DataColumn = New DataColumn("FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantityExtra.Caption = "FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    Dim oColAppendFNGrandQuantity As DataColumn = New DataColumn("FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNGrandQuantity.Caption = "FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    Dim oColAppendFNPrice As DataColumn = New DataColumn("FNPrice" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNPrice.Caption = "FNPrice" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    '...Amount จาก จำนวนปริมาณที่สั่งซื้อจริง ของ รายการ Sub Order No. ตามสี ตามไซส์
                    Dim oColAppendFNValue As DataColumn = New DataColumn("FNValue" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNValue.Caption = "FNValue" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    Dim oColAppendFNExtraQtyPercent As DataColumn = New DataColumn("FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNExtraQtyPercent.Caption = "FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                Next

                Dim oColAppendFNRowTotal As DataColumn = New DataColumn("FNRowTotal", System.Type.GetType("System.Double"))
                oColAppendFNRowTotal.Caption = "T/T"

                oGridViewSubBreakdown.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Visible = True

                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Fixed = FixedStyle.Right
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Visible = True

                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Fixed = FixedStyle.Right
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatString = "{0:N0}"
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                '====================================================================================================================================

                '...iterate loop binding row datatable datarow to oDBdtSizeBreakdownMatrix
                oStrBuilder.Remove(0, oStrBuilder.Length)

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameTH AS FTMatColorName")
                Else
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                End If

                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGrandQuantity, B.FNGrandAmnt, (C.FTMatColorNameEN + '/' + C.FTMatColorNameTH) AS FTColorExtension")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS B WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatColor AS C WITH(NOLOCK) ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS D WITH(NOLOCK) ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()
                oDBdtSizeBreakdownInfo = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtSizeBreakdownInfo.Rows.Count > 0 Then

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtSizeBreakdownInfo.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then
                            'Dim nLoopItemSeq As Integer = 0
                            Dim oRowItem As DataRow

                            '...กรณีเป็นรายการไซส์แรกของแต่ละสี
                            oRowItem = oDBdtSizeBreakdownMatrix.NewRow()

                            oRowItem.Item("FNHSysMatColorId") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            oRowItem.Item("FTMatColorCode") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                            oRowItem.Item("FTMatColorName") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                            oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTColorExtension")
                            oRowItem.Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity") 'oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oRowItem.Item("FNRowTotal") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oRowItem.Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                            oRowItem.Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                            oRowItem.Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                            oRowItem.Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oRowItem.Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                            oRowItem.Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oRowItem.Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                            oRowItem.Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                            oRowItem.Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                            oDBdtSizeBreakdownMatrix.Rows.Add(oRowItem)

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrix.Rows.Count - 1

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double

                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity") 'oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                            nFNAmnt = Val(oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNRowTotal").ToString())
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNRowTotal") = nFNAmnt

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrix.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrix.AcceptChanges()

                End If

                oGridViewSubBreakdown.OptionsBehavior.AllowAddRows = False
                oGridViewSubBreakdown.OptionsCustomization.AllowSort = False

                oGridViewSubBreakdown.ActiveFilter.Clear()

                ogdSubOrdBreakDown.DataSource = oDBdtSizeBreakdownMatrix
                ogdSubOrdBreakDown = oGridViewSubBreakdown.GridControl
                oGridViewSubBreakdown.OptionsView.ColumnAutoWidth = False
                ogdSubOrdBreakDown.Refresh()
                oGridViewSubBreakdown.RefreshData()

                '=======================================================Sub Order No. Detail==========================================================
                oStrBuilder.Remove(0, oStrBuilder.Length)

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, (C.FTMatColorNameEN + '/' + C.FTMatColorNameTH) AS FTMatColorName")
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, (C.FTMatColorNameEN + '/' + C.FTMatColorNameTH) AS FTMatColorName")
                Else
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                End If

                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGrandQuantity, B.FNGrandAmnt")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS B WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatColor AS C WITH(NOLOCK) ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS D WITH(NOLOCK) ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()

                Dim oDBdtMatrixDT As DataTable
                oDBdtMatrixDT = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtMatrixDT.Rows.Count > 0 Then

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtMatrixDT.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtMatrixDT.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtMatrixDT.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then

                            Dim nLoopItemSeq As Integer = 0

                            Dim oRowItem As DataRow

                            For nLoopItemSeq = 0 To 4
                                oRowItem = oDBdtSizeBreakdownMatrixDT.NewRow()

                                oRowItem.Item("FNHSysMatColorId") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                                oRowItem.Item("FTMatColorCode") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                                oRowItem.Item("FTMatColorName") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorName")

                                Select Case nLoopItemSeq
                                    Case 0
                                        oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                    Case 1
                                        oRowItem.Item("FTDescription") = "Extra/จำนวนเผื่อ"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                    Case 2
                                        oRowItem.Item("FTDescription") = "Total Quantity/ปริมาณสุทธิ"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                    Case 3
                                        oRowItem.Item("FTDescription") = "Price/ราคา"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                    Case 4
                                        oRowItem.Item("FTDescription") = "Value/มูลค่าสุทธิ"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                End Select

                                '...กรณีไซส์แรก
                                oRowItem.Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                oRowItem.Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                oRowItem.Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                                oRowItem.Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                oRowItem.Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                oRowItem.Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                oRowItem.Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                oRowItem.Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                oRowItem.Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                oDBdtSizeBreakdownMatrixDT.Rows.Add(oRowItem)

                                oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                            Next nLoopItemSeq

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrixDT.Rows.Count - 5

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double
                            Dim nFNQuantityExtra As Double
                            Dim nFNGrandQuantity As Double
                            Dim nFNValue As Double

                            For nLoopItem As Integer = 0 To 4
                                Select Case nLoopItem
                                    Case 0
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNAmnt = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNAmnt
                                    Case 1
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNQuantityExtra = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNQuantityExtra
                                    Case 2
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNGrandQuantity = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNGrandQuantity

                                    Case 3
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                    Case 4
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNValue = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNValue

                                End Select

                            Next nLoopItem

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                    '====================================================================================================================================

                    oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                    oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                    For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                        For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                            If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then
                                oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width
                                Exit For

                            End If

                        Next nLoopColSubBreakdownSum

                    Next nLoopColSubBreakdown

                    oGridViewSubBreakdownSum.ActiveFilter.Clear()

                    ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixDT
                    ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                    oGridViewSubBreakdownSum.OptionsView.ColumnAutoWidth = False
                    ogdSubOrdBreakDownSummary.Refresh()
                    oGridViewSubBreakdownSum.RefreshData()

                Else
                    oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                    oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                    For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                        For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                            If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then
                                oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width
                                Exit For

                            End If

                        Next nLoopColSubBreakdownSum

                    Next nLoopColSubBreakdown

                    oGridViewSubBreakdownSum.ActiveFilter.Clear()

                    ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixDT
                    ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                    oGridViewSubBreakdownSum.OptionsView.ColumnAutoWidth = False
                    ogdSubOrdBreakDownSummary.Refresh()
                    oGridViewSubBreakdownSum.RefreshData()

                End If
                '=====================================================================================================================================

                Return True

            Else
                '...Not Exists Sub OrderNo Breakdown Item
                Me.ogdSubOrdBreakDown.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                Me.ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
                Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

                Return False

            End If

        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)

            Me.ogdSubOrdBreakDown.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
            Me.ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
            Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
            Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

            Return False

        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderBreakdownMatrix_REM_20140630_PM1712(ByVal ptSubOrderNo$) As Boolean

        Me.ogdSubOrdBreakDown.DataSource = Nothing
        Me.ogdSubOrdBreakDown.Refresh()
        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
        ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False

        Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
        Me.ogdSubOrdBreakDown.Refresh()
        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
        Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

        Me.ogdSubOrdBreakDownSummary.Width = Me.ogdSubOrdBreakDown.Width

        If Microsoft.VisualBasic.Trim$(ptSubOrderNo) = "" Then Return False

        Dim tSql As String
        Dim oStrBuilder As New System.Text.StringBuilder()

        Dim oDBdtSizeBreakdownColorway As DataTable
        Dim oDBdtSizeBreakdownMatrix As DataTable
        Dim oDBdtSizeBreakdownMatrixDT As DataTable
        Dim oDBdtSizeBreakdownInfo As DataTable

        Dim nLoopBreakdownSeq As Integer = 0
        Dim FNHSysMatSizeIdPrv As Integer
        Dim FNHSysMatSizeIdCurr As Integer

        Dim nFirstRowColorway As Integer

        Try
            tSql = ""
            tSql = "SELECT A.FNHSysMatSizeId, A.FTMatSizeCode, A.FTMatSizeNameEN AS FTMatSizeName"
            tSql &= ControlChars.CrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS A WITH(NOLOCK)"
            tSql &= ControlChars.CrLf & "WHERE EXISTS (SELECT 'T'"
            tSql &= ControlChars.CrLf & "              FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L1 WITH(NOLOCK)"
            tSql &= ControlChars.CrLf & "              WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FNHSysMatSizeId = A.FNHSysMatSizeId)"
            tSql &= ControlChars.CrLf & "ORDER BY A.FNMatSizeSeq ASC;"

            oDBdtSizeBreakdownColorway = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtSizeBreakdownColorway.Rows.Count > 0 Then

                '...Colorway & Size Breakdown Matrix Header (View display Total Quantity : Quantity + Extra Quantity)
                oGridViewSubBreakdown = Me.ogdSubOrdBreakDown.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdown)

                Me.ogdSubOrdBreakDown.DataSource = Nothing
                oDBdtSizeBreakdownMatrix = New DataTable()

                '...View Detail for Colorway & Size Breakdown 
                oGridViewSubBreakdownSum = Me.ogdSubOrdBreakDownSummary.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdownSum)

                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                oDBdtSizeBreakdownMatrixDT = New DataTable()

                '========================================== Create GridView Column / Create DataTable Column ====================================
                '...view display color description and Grand Quantity (Quantity + Extra Quantity)
                Dim oColFNHSysMatColorId As DataColumn
                oColFNHSysMatColorId = New DataColumn("FNHSysMatColorId", System.Type.GetType("System.Int32"))
                oColFNHSysMatColorId.Caption = "FNHSysMatColorId"

                oGridViewSubBreakdown.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                Dim oColFTMatColorCode As DataColumn
                oColFTMatColorCode = New DataColumn("FTMatColorCode", System.Type.GetType("System.String"))
                REM 2014/05/22 oColFTMatColorCode.Caption = "FTMatColorCode"

                Select Case HI.ST.Lang.Language
                    Case HI.ST.Lang.eLang.EN
                        oColFTMatColorCode.Caption = "Colorway"
                    Case HI.ST.Lang.eLang.TH
                        oColFTMatColorCode.Caption = "รหัสสี"
                    Case HI.ST.Lang.eLang.KM
                        oColFTMatColorCode.Caption = "Colorway"
                    Case HI.ST.Lang.eLang.VT
                        oColFTMatColorCode.Caption = "Colorway"
                End Select

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Visible = True
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).VisibleIndex = 0
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).AppearanceHeader.TextOptions.HAlignment = HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).AppearanceHeader.TextOptions.HAlignment = HorzAlignment.Center
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Visible = True
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).VisibleIndex = 0
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                Dim oColFTMatColorName As DataColumn
                oColFTMatColorName = New DataColumn("FTMatColorName", System.Type.GetType("System.String"))
                oColFTMatColorName.Caption = "FTMatColorName"

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                '...แสดง รายละเอียด สี / view display color description
                Dim oColFTDescription As DataColumn
                oColFTDescription = New DataColumn("FTDescription", System.Type.GetType("System.String"))

                oGridViewSubBreakdown.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "สี / ไซส์"
                Else
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                End If

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Visible = True
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).VisibleIndex = 1

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)

                '...Detail View Color/Extra/Total Quantity/Price/Value
                oGridViewSubBreakdownSum.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "สี / ไซส์"
                Else
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                End If

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Visible = True
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).VisibleIndex = 1

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)

                '...dynamic generate column size breakdown
                For Each oRow As DataRow In oDBdtSizeBreakdownColorway.Rows

                    Dim oColAppendSizeId As DataColumn = New DataColumn("FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Int32"))
                    oColAppendSizeId.Caption = "FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    Dim oColAppendSizeCode As DataColumn = New DataColumn("FTMatSizeCode" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeCode.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    Dim oColAppendSizeName As DataColumn = New DataColumn("FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeName.Caption = "FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    '...keep value : FNGrandQuantity (จำนวนรวมของ Quantity + Extra Quantity)
                    Dim oColAppendAmntZZZ As DataColumn = New DataColumn("FNAmnt" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendAmntZZZ.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Visible = True

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Fixed = FixedStyle.None
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSize = False

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    '...Detail View : FNQuantity/FNExtraQuantity/FNGrandQuantity/FNPrice/FNAmt
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Visible = True

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Fixed = FixedStyle.None
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSize = False

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    Dim oColAppendFNQuantity As DataColumn = New DataColumn("FNQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantity.Caption = "FNQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    Dim oColAppendFNQuantityExtra As DataColumn = New DataColumn("FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantityExtra.Caption = "FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    Dim oColAppendFNGrandQuantity As DataColumn = New DataColumn("FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNGrandQuantity.Caption = "FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    Dim oColAppendFNPrice As DataColumn = New DataColumn("FNPrice" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNPrice.Caption = "FNPrice" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    '...Amount จาก จำนวนปริมาณที่สั่งซื้อจริง ของ รายการ Sub Order No. ตามสี ตามไซส์
                    Dim oColAppendFNValue As DataColumn = New DataColumn("FNValue" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNValue.Caption = "FNValue" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    Dim oColAppendFNExtraQtyPercent As DataColumn = New DataColumn("FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNExtraQtyPercent.Caption = "FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                Next

                Dim oColAppendFNRowTotal As DataColumn = New DataColumn("FNRowTotal", System.Type.GetType("System.Double"))
                oColAppendFNRowTotal.Caption = "T/T"

                oGridViewSubBreakdown.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Visible = True

                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Fixed = FixedStyle.Right
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Visible = True

                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Fixed = FixedStyle.Right
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatString = "{0:N0}"
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                '====================================================================================================================================

                '...iterate loop binding row datatable datarow to oDBdtSizeBreakdownMatrix
                oStrBuilder.Remove(0, oStrBuilder.Length)

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameTH AS FTMatColorName")
                Else
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                End If

                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGrandQuantity, B.FNGrandAmnt, (C.FTMatColorNameEN + '/' + C.FTMatColorNameTH) AS FTColorExtension")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS B WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatColor AS C WITH(NOLOCK) ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS D WITH(NOLOCK) ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()
                oDBdtSizeBreakdownInfo = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtSizeBreakdownInfo.Rows.Count > 0 Then

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtSizeBreakdownInfo.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then
                            'Dim nLoopItemSeq As Integer = 0
                            Dim oRowItem As DataRow

                            '...กรณีเป็นรายการไซส์แรกของแต่ละสี
                            oRowItem = oDBdtSizeBreakdownMatrix.NewRow()

                            oRowItem.Item("FNHSysMatColorId") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            oRowItem.Item("FTMatColorCode") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                            oRowItem.Item("FTMatColorName") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                            oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTColorExtension")
                            oRowItem.Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity") 'oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oRowItem.Item("FNRowTotal") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oRowItem.Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                            oRowItem.Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                            oRowItem.Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                            oRowItem.Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oRowItem.Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                            oRowItem.Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oRowItem.Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                            oRowItem.Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                            oRowItem.Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                            oDBdtSizeBreakdownMatrix.Rows.Add(oRowItem)

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrix.Rows.Count - 1

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double

                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity") 'oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                            nFNAmnt = Val(oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNRowTotal").ToString())
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNRowTotal") = nFNAmnt

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrix.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrix.AcceptChanges()

                End If

                oGridViewSubBreakdown.OptionsBehavior.AllowAddRows = False
                oGridViewSubBreakdown.OptionsCustomization.AllowSort = False

                oGridViewSubBreakdown.ActiveFilter.Clear()

                ogdSubOrdBreakDown.DataSource = oDBdtSizeBreakdownMatrix
                ogdSubOrdBreakDown = oGridViewSubBreakdown.GridControl
                oGridViewSubBreakdown.OptionsView.ColumnAutoWidth = False
                ogdSubOrdBreakDown.Refresh()
                oGridViewSubBreakdown.RefreshData()

                '=======================================================Sub Order No. Detail==========================================================
                oStrBuilder.Remove(0, oStrBuilder.Length)

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, (C.FTMatColorNameEN + '/' + C.FTMatColorNameTH) AS FTMatColorName")
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, (C.FTMatColorNameEN + '/' + C.FTMatColorNameTH) AS FTMatColorName")
                Else
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                End If

                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGrandQuantity, B.FNGrandAmnt")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS B WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatColor AS C WITH(NOLOCK) ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS D WITH(NOLOCK) ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()

                Dim oDBdtMatrixDT As DataTable
                oDBdtMatrixDT = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtMatrixDT.Rows.Count > 0 Then

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtMatrixDT.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtMatrixDT.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtMatrixDT.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then

                            Dim nLoopItemSeq As Integer = 0

                            Dim oRowItem As DataRow

                            For nLoopItemSeq = 0 To 4
                                oRowItem = oDBdtSizeBreakdownMatrixDT.NewRow()

                                oRowItem.Item("FNHSysMatColorId") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                                REM 2014/05/22 oRowItem.Item("FTMatColorCode") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                                oRowItem.Item("FTMatColorCode") = ""
                                oRowItem.Item("FTMatColorName") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorName")

                                Select Case nLoopItemSeq
                                    Case 0
                                        oRowItem.Item("FTMatColorCode") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                                        oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                    Case 1
                                        oRowItem.Item("FTDescription") = "Extra/จำนวนเผื่อ"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                    Case 2
                                        oRowItem.Item("FTDescription") = "Total Quantity/ปริมาณสุทธิ"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                    Case 3
                                        oRowItem.Item("FTDescription") = "Price/ราคา"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                    Case 4
                                        oRowItem.Item("FTDescription") = "Value/มูลค่าสุทธิ"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                End Select

                                '...กรณีไซส์แรก
                                oRowItem.Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                oRowItem.Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                oRowItem.Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                                oRowItem.Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                oRowItem.Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                oRowItem.Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                oRowItem.Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                oRowItem.Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                oRowItem.Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                oDBdtSizeBreakdownMatrixDT.Rows.Add(oRowItem)

                                oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                            Next nLoopItemSeq

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrixDT.Rows.Count - 5

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double
                            Dim nFNQuantityExtra As Double
                            Dim nFNGrandQuantity As Double
                            Dim nFNValue As Double

                            For nLoopItem As Integer = 0 To 4
                                Select Case nLoopItem
                                    Case 0
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNAmnt = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNAmnt
                                    Case 1
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNQuantityExtra = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNQuantityExtra
                                    Case 2
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNGrandQuantity = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNGrandQuantity

                                    Case 3
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                    Case 4
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNValue = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNValue

                                End Select

                            Next nLoopItem

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                    '====================================================================================================================================

                    oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                    oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                    For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                        For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                            If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then
                                oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width
                                Exit For

                            End If

                        Next nLoopColSubBreakdownSum

                    Next nLoopColSubBreakdown

                    oGridViewSubBreakdownSum.ActiveFilter.Clear()

                    ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixDT
                    ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                    oGridViewSubBreakdownSum.OptionsView.ColumnAutoWidth = False
                    ogdSubOrdBreakDownSummary.Refresh()
                    oGridViewSubBreakdownSum.RefreshData()

                Else
                    oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                    oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                    For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                        For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                            If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then
                                oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width
                                Exit For

                            End If

                        Next nLoopColSubBreakdownSum

                    Next nLoopColSubBreakdown

                    oGridViewSubBreakdownSum.ActiveFilter.Clear()

                    ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixDT
                    ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                    oGridViewSubBreakdownSum.OptionsView.ColumnAutoWidth = False
                    ogdSubOrdBreakDownSummary.Refresh()
                    oGridViewSubBreakdownSum.RefreshData()

                End If
                '=====================================================================================================================================

                Return True

            Else
                '...Not Exists Sub OrderNo Colorway/Breakdown Item
                Me.ogdSubOrdBreakDown.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                Me.ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
                Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

                Return False

            End If

        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)

            Me.ogdSubOrdBreakDown.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
            Me.ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
            Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
            Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

            Return False

        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderBreakdownMatrix(ByVal ptSubOrderNo$) As Boolean

        Me.ogdSubOrdBreakDown.DataSource = Nothing
        Me.ogdSubOrdBreakDown.Refresh()
        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
        ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False

        Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
        Me.ogdSubOrdBreakDown.Refresh()
        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
        Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

        Me.ogdSubOrdBreakDownSummary.Width = Me.ogdSubOrdBreakDown.Width

        If Microsoft.VisualBasic.Trim$(ptSubOrderNo) = "" Then Return False

        Dim tSql As String
        Dim oStrBuilder As New System.Text.StringBuilder()

        Dim oDBdtSizeBreakdownColorway As DataTable
        Dim oDBdtSizeBreakdownMatrix As DataTable
        Dim oDBdtSizeBreakdownMatrixDT As DataTable
        Dim oDBdtSizeBreakdownInfo As DataTable

        Dim nLoopBreakdownSeq As Integer = 0
        Dim FNHSysMatSizeIdPrv As Integer
        Dim FNHSysMatSizeIdCurr As Integer

        Dim nFirstRowColorway As Integer

        Try
            tSql = ""
            tSql = "SELECT A.FNHSysMatSizeId, A.FTMatSizeCode, A.FTMatSizeNameEN AS FTMatSizeName"
            tSql &= ControlChars.CrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS A WITH(NOLOCK)"
            tSql &= ControlChars.CrLf & "WHERE EXISTS (SELECT 'T'"
            tSql &= ControlChars.CrLf & "              FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L1 WITH(NOLOCK)"
            tSql &= ControlChars.CrLf & "              WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
            tSql &= ControlChars.CrLf & "                    AND L1.FNHSysMatSizeId = A.FNHSysMatSizeId)"
            tSql &= ControlChars.CrLf & "ORDER BY A.FNMatSizeSeq ASC;"

            oDBdtSizeBreakdownColorway = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtSizeBreakdownColorway.Rows.Count > 0 Then

                '...Colorway & Size Breakdown Matrix Header (View display Total Quantity : Quantity + Extra Quantity)
                oGridViewSubBreakdown = Me.ogdSubOrdBreakDown.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdown)

                Me.ogdSubOrdBreakDown.DataSource = Nothing
                oDBdtSizeBreakdownMatrix = New DataTable()

                '...View Detail for Colorway & Size Breakdown 
                oGridViewSubBreakdownSum = Me.ogdSubOrdBreakDownSummary.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSubBreakdownSum)

                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                oDBdtSizeBreakdownMatrixDT = New DataTable()

                '========================================== Create GridView Column / Create DataTable Column ====================================
                '...view display color description and Grand Quantity (Quantity + Extra Quantity)
                Dim oColFNHSysMatColorId As DataColumn
                oColFNHSysMatColorId = New DataColumn("FNHSysMatColorId", System.Type.GetType("System.Int32"))
                oColFNHSysMatColorId.Caption = "FNHSysMatColorId"

                oGridViewSubBreakdown.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFNHSysMatColorId.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).FieldName = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Name = oColFNHSysMatColorId.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Caption = oColFNHSysMatColorId.Caption
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFNHSysMatColorId.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFNHSysMatColorId.ColumnName, oColFNHSysMatColorId.DataType)

                Dim oColFTMatColorCode As DataColumn
                oColFTMatColorCode = New DataColumn("FTMatColorCode", System.Type.GetType("System.String"))

                Select Case HI.ST.Lang.Language
                    Case HI.ST.Lang.eLang.EN
                        oColFTMatColorCode.Caption = "Colorway"
                    Case HI.ST.Lang.eLang.TH
                        oColFTMatColorCode.Caption = "รหัสสี"
                    Case HI.ST.Lang.eLang.KM
                        oColFTMatColorCode.Caption = "Colorway"
                    Case HI.ST.Lang.eLang.VT
                        oColFTMatColorCode.Caption = "Colorway"
                End Select

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Visible = True
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).VisibleIndex = 0
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).AppearanceHeader.TextOptions.HAlignment = HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFTMatColorCode.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).FieldName = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Name = oColFTMatColorCode.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Caption = oColFTMatColorCode.Caption
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).AppearanceHeader.TextOptions.HAlignment = HorzAlignment.Center
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Visible = True
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).VisibleIndex = 0
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorCode.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTMatColorCode.ColumnName, oColFTMatColorCode.DataType)

                Dim oColFTMatColorName As DataColumn
                oColFTMatColorName = New DataColumn("FTMatColorName", System.Type.GetType("System.String"))
                oColFTMatColorName.Caption = "FTMatColorName"

                oGridViewSubBreakdown.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                '...Detail View
                oGridViewSubBreakdownSum.Columns.AddField(oColFTMatColorName.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).FieldName = oColFTMatColorName.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Name = oColFTMatColorName.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Caption = oColFTMatColorName.Caption
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).Visible = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTMatColorName.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTMatColorName.ColumnName, oColFTMatColorName.DataType)

                '...แสดง รายละเอียด สี / view display color description
                Dim oColFTDescription As DataColumn
                oColFTDescription = New DataColumn("FTDescription", System.Type.GetType("System.String"))

                oGridViewSubBreakdown.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "สี / ไซส์"
                Else
                    oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                End If

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Visible = True
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).VisibleIndex = 1

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)


                '...แสดง รายละเอียด สี / view display color description
                Dim oColFTNikePOLineItem As DataColumn
                oColFTNikePOLineItem = New DataColumn("FTNikePOLineItem", System.Type.GetType("System.String"))

                oGridViewSubBreakdown.Columns.AddField(oColFTNikePOLineItem.ColumnName)
                oGridViewSubBreakdown.Columns(oColFTNikePOLineItem.ColumnName).FieldName = oColFTNikePOLineItem.ColumnName
                oGridViewSubBreakdown.Columns(oColFTNikePOLineItem.ColumnName).Name = oColFTNikePOLineItem.ColumnName

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oGridViewSubBreakdown.Columns(oColFTNikePOLineItem.ColumnName).Caption = "ลำดับ"
                Else
                    oGridViewSubBreakdown.Columns(oColFTNikePOLineItem.ColumnName).Caption = "PO Line Item"
                End If

                oGridViewSubBreakdown.Columns(oColFTNikePOLineItem.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColFTNikePOLineItem.ColumnName).Visible = True
                oGridViewSubBreakdown.Columns(oColFTNikePOLineItem.ColumnName).VisibleIndex = 1

                oGridViewSubBreakdown.Columns(oColFTNikePOLineItem.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTNikePOLineItem.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdown.Columns(oColFTNikePOLineItem.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColFTNikePOLineItem.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColFTNikePOLineItem.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdown.Columns(oColFTNikePOLineItem.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdown.Columns(oColFTNikePOLineItem.ColumnName).OptionsColumn.AllowSize = False

                oDBdtSizeBreakdownMatrix.Columns.Add(oColFTNikePOLineItem.ColumnName, oColFTNikePOLineItem.DataType)

                '...Detail View Color/Extra/Total Quantity/Price/Value
                oGridViewSubBreakdownSum.Columns.AddField(oColFTDescription.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).FieldName = oColFTDescription.ColumnName
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Name = oColFTDescription.ColumnName

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "สี / ไซส์"
                Else
                    oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Caption = "Color way / Size Breakdown"
                End If

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Visible = True
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).VisibleIndex = 1

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).Fixed = FixedStyle.Left
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColFTDescription.ColumnName).OptionsColumn.AllowSort = False
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColFTDescription.ColumnName, oColFTDescription.DataType)

                '...dynamic generate column size breakdown
                For Each oRow As DataRow In oDBdtSizeBreakdownColorway.Rows

                    Dim oColAppendSizeId As DataColumn = New DataColumn("FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Int32"))
                    oColAppendSizeId.Caption = "FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeId.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).FieldName = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Name = oColAppendSizeId.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Caption = oColAppendSizeId.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeId.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeId.ColumnName, oColAppendSizeId.DataType)

                    Dim oColAppendSizeCode As DataColumn = New DataColumn("FTMatSizeCode" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeCode.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeCode.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).FieldName = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Name = oColAppendSizeCode.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Caption = oColAppendSizeCode.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeCode.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeCode.ColumnName, oColAppendSizeCode.DataType)

                    Dim oColAppendSizeName As DataColumn = New DataColumn("FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColAppendSizeName.Caption = "FTMatSizeName" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendSizeName.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).FieldName = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Name = oColAppendSizeName.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Caption = oColAppendSizeName.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendSizeName.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendSizeName.ColumnName, oColAppendSizeName.DataType)

                    '...keep value : FNGrandQuantity (จำนวนรวมของ Quantity + Extra Quantity)
                    Dim oColAppendAmntZZZ As DataColumn = New DataColumn("FNAmnt" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendAmntZZZ.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Visible = True

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Fixed = FixedStyle.None
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSize = False

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False

                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                    oGridViewSubBreakdown.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    '...Detail View : FNQuantity/FNExtraQuantity/FNGrandQuantity/FNPrice/FNAmt
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendAmntZZZ.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).FieldName = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Name = oColAppendAmntZZZ.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Caption = oColAppendAmntZZZ.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Visible = True

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Fixed = FixedStyle.None
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSize = False

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).OptionsColumn.AllowSort = False
                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric

                    oGridViewSubBreakdownSum.Columns(oColAppendAmntZZZ.ColumnName).DisplayFormat.FormatString = "{0:N0}"
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendAmntZZZ.ColumnName, oColAppendAmntZZZ.DataType)

                    Dim oColAppendFNQuantity As DataColumn = New DataColumn("FNQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantity.Caption = "FNQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantity.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).FieldName = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Name = oColAppendFNQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Caption = oColAppendFNQuantity.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantity.ColumnName, oColAppendFNQuantity.DataType)

                    Dim oColAppendFNQuantityExtra As DataColumn = New DataColumn("FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantityExtra.Caption = "FNQuantityExtra" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantityExtra.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).FieldName = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).Name = oColAppendFNQuantityExtra.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).Caption = oColAppendFNQuantityExtra.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityExtra.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantityExtra.ColumnName, oColAppendFNQuantityExtra.DataType)

                    Dim oColAppendFNQuantityTest As DataColumn = New DataColumn("FNQuantityTest" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNQuantityTest.Caption = "FNQuantityTest" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNQuantityTest.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityTest.ColumnName).FieldName = oColAppendFNQuantityTest.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityTest.ColumnName).Name = oColAppendFNQuantityTest.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityTest.ColumnName).Caption = oColAppendFNQuantityTest.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityTest.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityTest.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityTest.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNQuantityTest.ColumnName).OptionsColumn.AllowSort = DefaultBoolean.False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNQuantityTest.ColumnName, oColAppendFNQuantityTest.DataType)

                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNQuantityTest.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityTest.ColumnName).FieldName = oColAppendFNQuantityTest.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityTest.ColumnName).Name = oColAppendFNQuantityTest.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityTest.ColumnName).Caption = oColAppendFNQuantityTest.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityTest.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityTest.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityTest.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNQuantityTest.ColumnName).OptionsColumn.AllowSort = DefaultBoolean.False

                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNQuantityTest.ColumnName, oColAppendFNQuantityTest.DataType)

                    Dim oColAppendFNGrandQuantity As DataColumn = New DataColumn("FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNGrandQuantity.Caption = "FNGrandQuantity" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNGrandQuantity.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).FieldName = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Name = oColAppendFNGrandQuantity.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Caption = oColAppendFNGrandQuantity.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNGrandQuantity.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNGrandQuantity.ColumnName, oColAppendFNGrandQuantity.DataType)

                    Dim oColAppendFNPrice As DataColumn = New DataColumn("FNPrice" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNPrice.Caption = "FNPrice" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNPrice.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).FieldName = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Name = oColAppendFNPrice.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Caption = oColAppendFNPrice.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNPrice.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNPrice.ColumnName, oColAppendFNPrice.DataType)

                    '...Amount จาก จำนวนปริมาณที่สั่งซื้อจริง ของ รายการ Sub Order No. ตามสี ตามไซส์
                    Dim oColAppendFNValue As DataColumn = New DataColumn("FNValue" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNValue.Caption = "FNValue" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNValue.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).FieldName = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Name = oColAppendFNValue.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Caption = oColAppendFNValue.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNValue.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNValue.ColumnName, oColAppendFNValue.DataType)

                    Dim oColAppendFNExtraQtyPercent As DataColumn = New DataColumn("FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Double"))
                    oColAppendFNExtraQtyPercent.Caption = "FNExtraQtyPercent" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSubBreakdown.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdown.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                    '...Detail View
                    oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNExtraQtyPercent.ColumnName)
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).FieldName = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Name = oColAppendFNExtraQtyPercent.ColumnName
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Caption = oColAppendFNExtraQtyPercent.Caption
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).Visible = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSubBreakdownSum.Columns(oColAppendFNExtraQtyPercent.ColumnName).OptionsColumn.AllowSort = False
                    oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNExtraQtyPercent.ColumnName, oColAppendFNExtraQtyPercent.DataType)

                Next

                Dim oColAppendFNRowTotal As DataColumn = New DataColumn("FNRowTotal", System.Type.GetType("System.Double"))
                oColAppendFNRowTotal.Caption = "T/T"

                oGridViewSubBreakdown.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Visible = True

                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).Fixed = FixedStyle.Right
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                oGridViewSubBreakdown.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatString = "{0:N0}"

                oDBdtSizeBreakdownMatrix.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                oGridViewSubBreakdownSum.Columns.AddField(oColAppendFNRowTotal.ColumnName)
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).FieldName = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Name = oColAppendFNRowTotal.ColumnName
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Caption = oColAppendFNRowTotal.Caption
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Visible = True

                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).Fixed = FixedStyle.Right
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSize = False

                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                oGridViewSubBreakdownSum.Columns(oColAppendFNRowTotal.ColumnName).DisplayFormat.FormatString = "{0:N0}"
                oDBdtSizeBreakdownMatrixDT.Columns.Add(oColAppendFNRowTotal.ColumnName, oColAppendFNRowTotal.DataType)

                '====================================================================================================================================

                '...iterate loop binding row datatable datarow to oDBdtSizeBreakdownMatrix
                oStrBuilder.Remove(0, oStrBuilder.Length)

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameTH AS FTMatColorName")
                Else
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                End If
                oStrBuilder.AppendLine("      ,B.FTNikePOLineItem")
                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGarmentQtyTest")
                oStrBuilder.AppendLine("      ,(ISNULL(B.FNQuantity,0) + ISNULL(B.FNQuantityExtra,0) + ISNULL(B.FNGarmentQtyTest,0)) AS FNGrandQuantity")
                oStrBuilder.AppendLine("      ,(ISNULL(B.FNAmt,0) + ISNULL(B.FNQuantityExtra * B.FNPrice ,0) + ISNULL(B.FNGarmentQtyTest*B.FNPrice,0)) AS AFNGrandAmnt ")
                oStrBuilder.AppendLine("     , (C.FTMatColorNameEN + '/' + C.FTMatColorNameTH) AS FTColorExtension")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS B WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS C WITH(NOLOCK) ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS D WITH(NOLOCK) ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()
                oDBdtSizeBreakdownInfo = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtSizeBreakdownInfo.Rows.Count > 0 Then

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtSizeBreakdownInfo.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtSizeBreakdownInfo.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then

                            Dim oRowItem As DataRow

                            '...กรณีเป็นรายการไซส์แรกของแต่ละสี
                            oRowItem = oDBdtSizeBreakdownMatrix.NewRow()

                            oRowItem.Item("FNHSysMatColorId") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            oRowItem.Item("FTMatColorCode") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                            oRowItem.Item("FTMatColorName") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                            oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTColorExtension")
                            oRowItem.Item("FTNikePOLineItem") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTNikePOLineItem")
                            oRowItem.Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity") 'oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oRowItem.Item("FNRowTotal") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oRowItem.Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                            oRowItem.Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                            oRowItem.Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                            oRowItem.Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oRowItem.Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                            oRowItem.Item("FNQuantityTest" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGarmentQtyTest")
                            oRowItem.Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oRowItem.Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                            oRowItem.Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                            oRowItem.Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                            oDBdtSizeBreakdownMatrix.Rows.Add(oRowItem)

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrix.Rows.Count - 1

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double

                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNHSysMatSizeId" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FTMatSizeCode" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FTMatSizeName" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity") 'oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantityExtra" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNQuantityTest" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGarmentQtyTest")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNGrandQuantity" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNPrice" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNPrice")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNValue" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNAmnt")
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNExtraQtyPercent" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                            nFNAmnt = Val(oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNRowTotal").ToString())
                            oDBdtSizeBreakdownMatrix.Rows(nLoopBreakdownSeq).Item("FNRowTotal") = nFNAmnt

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrix.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrix.AcceptChanges()

                End If

                oGridViewSubBreakdown.OptionsBehavior.AllowAddRows = False
                oGridViewSubBreakdown.OptionsCustomization.AllowSort = False

                oGridViewSubBreakdown.ActiveFilter.Clear()

                ogdSubOrdBreakDown.DataSource = oDBdtSizeBreakdownMatrix
                ogdSubOrdBreakDown = oGridViewSubBreakdown.GridControl
                oGridViewSubBreakdown.OptionsView.ColumnAutoWidth = False
                ogdSubOrdBreakDown.Refresh()
                oGridViewSubBreakdown.RefreshData()

                '=======================================================Sub Order No. Detail==========================================================
                oStrBuilder.Remove(0, oStrBuilder.Length)

                If HI.ST.Lang.Language = HI.ST.Lang.eLang.EN Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, (C.FTMatColorNameEN + '/' + C.FTMatColorNameTH) AS FTMatColorName")
                ElseIf HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, (C.FTMatColorNameEN + '/' + C.FTMatColorNameTH) AS FTMatColorName")
                Else
                    oStrBuilder.AppendLine("SELECT C.FNHSysMatColorId, C.FTMatColorCode, C.FTMatColorNameEN AS FTMatColorName")
                End If

                oStrBuilder.AppendLine("      ,D.FNHSysMatSizeId, D.FTMatSizeCode, D.FTMatSizeNameEN AS FTMatSizeName")
                oStrBuilder.AppendLine("      ,B.FNQuantity, B.FNPrice, B.FNAmt AS FNAmnt, B.FNExtraQty AS FNExtraQtyPercent")
                oStrBuilder.AppendLine("      ,B.FNQuantityExtra, B.FNGarmentQtyTest")
                oStrBuilder.AppendLine("    ,(ISNULL(B.FNQuantity,0) + ISNULL(B.FNQuantityExtra,0) + ISNULL(B.FNGarmentQtyTest,0)) AS FNGrandQuantity")
                oStrBuilder.AppendLine("   , (ISNULL(B.FNAmt,0) + ISNULL(B.FNQuantityExtra * B.FNPrice ,0) + ISNULL(B.FNGarmentQtyTest*B.FNPrice,0)) AS FNGrandAmnt")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS B WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS C WITH(NOLOCK) ON B.FNHSysMatColorId = C.FNHSysMatColorId")
                oStrBuilder.AppendLine("     INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS D WITH(NOLOCK) ON B.FNHSysMatSizeId = D.FNHSysMatSizeId")
                oStrBuilder.AppendLine("WHERE B.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("      AND B.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
                oStrBuilder.AppendLine("ORDER BY C.FNMatColorSeq ASC, D.FNMatSizeSeq ASC;")

                tSql = ""
                tSql = oStrBuilder.ToString()

                Dim oDBdtMatrixDT As DataTable
                oDBdtMatrixDT = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If oDBdtMatrixDT.Rows.Count > 0 Then

                    Dim FNHSysMatColorIdPrv As Integer
                    Dim FNHSysMatColorIdCurr As Integer

                    FNHSysMatColorIdPrv = -1
                    FNHSysMatColorIdCurr = oDBdtMatrixDT.Rows(0).Item("FNHSysMatColorId")

                    FNHSysMatSizeIdPrv = -1
                    FNHSysMatSizeIdCurr = oDBdtMatrixDT.Rows(0).Item("FNHSysMatSizeId")

                    For nLoopBreakdownInfo As Integer = 0 To oDBdtMatrixDT.Rows.Count - 1

                        If FNHSysMatColorIdPrv <> oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId") Then

                            Dim nLoopItemSeq As Integer = 0

                            Dim oRowItem As DataRow

                            For nLoopItemSeq = 0 To 5
                                oRowItem = oDBdtSizeBreakdownMatrixDT.NewRow()

                                oRowItem.Item("FNHSysMatColorId") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                                oRowItem.Item("FTMatColorCode") = ""
                                oRowItem.Item("FTMatColorName") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorName")

                                Select Case nLoopItemSeq
                                    Case 0
                                        oRowItem.Item("FTMatColorCode") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatColorCode")
                                        oRowItem.Item("FTDescription") = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatColorName")
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                    Case 1
                                        oRowItem.Item("FTDescription") = "Extra/จำนวนเผื่อ"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                    Case 2
                                        oRowItem.Item("FTDescription") = "Test Garment/ทดสอบ"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGarmentQtyTest")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGarmentQtyTest")
                                    Case 3
                                        oRowItem.Item("FTDescription") = "Total Quantity/ปริมาณสุทธิ"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                    Case 4
                                        oRowItem.Item("FTDescription") = "Price/ราคา"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                    Case 5
                                        oRowItem.Item("FTDescription") = "Value/มูลค่าสุทธิ"
                                        oRowItem.Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oRowItem.Item("FNRowTotal") = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                End Select

                                '...กรณีไซส์แรก
                                oRowItem.Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                oRowItem.Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                oRowItem.Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")
                                oRowItem.Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                oRowItem.Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                oRowItem.Item("FNQuantityTest" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGarmentQtyTest")
                                oRowItem.Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                oRowItem.Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                oRowItem.Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                oRowItem.Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                oDBdtSizeBreakdownMatrixDT.Rows.Add(oRowItem)
                                oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                            Next nLoopItemSeq

                            FNHSysMatColorIdPrv = FNHSysMatColorIdCurr
                            '...binding first row each of colorway/size breakdown
                            nFirstRowColorway = oDBdtSizeBreakdownMatrixDT.Rows.Count - 6

                        Else
                            '...สีเดียวกัน/ไซส์ต่างกัน
                            FNHSysMatColorIdCurr = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                            '...Iterate loop all column size breakdown / repeat all size breakdown on colorway
                            nLoopBreakdownSeq = nFirstRowColorway

                            Dim nFNAmnt As Double
                            Dim nFNQuantityExtra As Double
                            Dim nFNGrandQuantity As Double
                            Dim nFNValue As Double

                            For nLoopItem As Integer = 0 To 5
                                Select Case nLoopItem
                                    Case 0
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityTest" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGarmentQtyTest")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNAmnt = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNAmnt
                                    Case 1
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityTest" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGarmentQtyTest")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNQuantityExtra = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNQuantityExtra
                                    Case 2
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGarmentQtyTest")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityTest" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGarmentQtyTest")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNQuantityExtra = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNQuantityExtra

                                    Case 3

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityTest" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGarmentQtyTest")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNGrandQuantity = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNGrandQuantity

                                    Case 4

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityTest" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGarmentQtyTest")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                    Case 5

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNHSysMatSizeId" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeCode" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FTMatSizeName" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode")) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeName")

                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityExtra" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNQuantityExtra")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNQuantityTest" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGarmentQtyTest")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNGrandQuantity" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandQuantity")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNPrice" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNPrice")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNValue" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNGrandAmnt")
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNExtraQtyPercent" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()) = oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FNExtraQtyPercent")

                                        nFNValue = Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNAmnt" & oDBdtMatrixDT.Rows(nLoopBreakdownInfo).Item("FTMatSizeCode").ToString()).ToString()) + Val(oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal").ToString())
                                        oDBdtSizeBreakdownMatrixDT.Rows(nLoopBreakdownSeq + nLoopItem).Item("FNRowTotal") = nFNValue

                                End Select

                            Next nLoopItem

                            '...summary row total Quantity, Extra Qty, Grand Qty, Value
                            oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                        End If

                        FNHSysMatColorIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatColorId")
                        FNHSysMatSizeIdPrv = oDBdtSizeBreakdownInfo.Rows(nLoopBreakdownInfo).Item("FNHSysMatSizeId")

                    Next nLoopBreakdownInfo

                    oDBdtSizeBreakdownMatrixDT.AcceptChanges()

                    '====================================================================================================================================

                    oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                    oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                    For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                        For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                            If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then

                                oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width

                                Exit For

                            End If

                        Next nLoopColSubBreakdownSum

                    Next nLoopColSubBreakdown

                    oGridViewSubBreakdownSum.ActiveFilter.Clear()

                    ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixDT
                    ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                    oGridViewSubBreakdownSum.OptionsView.ColumnAutoWidth = False
                    ogdSubOrdBreakDownSummary.Refresh()
                    oGridViewSubBreakdownSum.RefreshData()

                Else
                    oGridViewSubBreakdownSum.OptionsBehavior.AllowAddRows = False
                    oGridViewSubBreakdownSum.OptionsCustomization.AllowSort = False

                    For nLoopColSubBreakdown As Integer = 0 To oGridViewSubBreakdown.Columns.Count - 1
                        For nLoopColSubBreakdownSum As Integer = 0 To oGridViewSubBreakdownSum.Columns.Count - 1
                            If oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Name = oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Name Then
                                oGridViewSubBreakdownSum.Columns(nLoopColSubBreakdownSum).Width = oGridViewSubBreakdown.Columns(nLoopColSubBreakdown).Width
                                Exit For

                            End If

                        Next nLoopColSubBreakdownSum

                    Next nLoopColSubBreakdown

                    oGridViewSubBreakdownSum.ActiveFilter.Clear()

                    ogdSubOrdBreakDownSummary.DataSource = oDBdtSizeBreakdownMatrixDT
                    ogdSubOrdBreakDownSummary = oGridViewSubBreakdownSum.GridControl
                    oGridViewSubBreakdownSum.OptionsView.ColumnAutoWidth = False
                    ogdSubOrdBreakDownSummary.Refresh()
                    oGridViewSubBreakdownSum.RefreshData()

                End If
                '=====================================================================================================================================

                Return True

            Else
                '...Not Exists Sub OrderNo Colorway/Breakdown Item
                Me.ogdSubOrdBreakDown.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                Me.ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
                Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

                Return False

            End If

        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)

            Me.ogdSubOrdBreakDown.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
            Me.ogvSubOrdBreakdown.OptionsView.ColumnAutoWidth = False
            Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
            Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
            Me.ogvSubOrdBreakdownSummary.OptionsView.ColumnAutoWidth = False

            Return False

        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderBreakdownInfo(ByVal ptSubOrderNo$) As Boolean
        Try
            If ptSubOrderNo = "" Then Return False

            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)

            Dim oDBdtSubOrderBreakdown As DataTable

            Dim oStrBuilder As New System.Text.StringBuilder()

            oStrBuilder.Remove(0, oStrBuilder.Length)

            If HI.ST.Lang.Language = HI.ST.Lang.eLang.TH Then
                oStrBuilder.AppendLine("SELECT ROW_NUMBER() OVER(ORDER BY B.FNMatColorSeq ASC, C.FNMatSizeSeq ASC) AS FNSeq, A.FNHSysMatColorId, B.FTMatColorCode, B.FTMatColorNameTH AS FTMatColorName, A.FNHSysMatSizeId, C.FTMatSizeCode, C.FTMatSizeNameTH AS FTMatSizeName, A.FNQuantity, A.FNPrice, A.FNAmt, A.FNExtraQty AS FNExtraQtySubOrder")
            Else
                oStrBuilder.AppendLine("SELECT ROW_NUMBER() OVER(ORDER BY B.FNMatColorSeq ASC, C.FNMatSizeSeq ASC) AS FNSeq, A.FNHSysMatColorId, B.FTMatColorCode, B.FTMatColorNameEN AS FTMatColorName, A.FNHSysMatSizeId, C.FTMatSizeCode, C.FTMatSizeNameEN AS FTMatSizeName, A.FNQuantity, A.FNPrice, A.FNAmt, A.FNExtraQty AS FNExtraQtySubOrder")
            End If

            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatColor] AS B WITH(NOLOCK) ON A.FNHSysMatColorId = B.FNHSysMatColorId")
            oStrBuilder.AppendLine("     INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS C WITH(NOLOCK) ON A.FNHSysMatSizeId = C.FNHSysMatSizeId")
            oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "';")
            '  oStrBuilder.AppendLine(" ORDER BY   B.FNMatColorSeq ASC, C.FNMatSizeSeq ASC ")

            oDBdtSubOrderBreakdown = HI.Conn.SQLConn.GetDataTable(oStrBuilder.ToString(), Conn.DB.DataBaseName.DB_MERCHAN)

            Me.ogdSubOrdBreakDown.DataSource = oDBdtSubOrderBreakdown

            '============================================== Sub Order No / FTSubOrderNo : Total Quantity / FTSubOrderNo : Total Amount ===========================
            Dim oDBdtQtyAmnt As DataTable

            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("SELECT ISNULL(A.FNSubOrderQty,0) AS FNSubOrderQty, ISNULL(A.FNSubOrderAmt,0) AS FNSubOrderAmt, ISNULL(A.FNSubOrderGarmentTestQty,0) AS FNSubOrderGarmentTestQty, ISNULL(A.FNSubOrderGarmentTestAmnt,0) AS FNSubOrderGarmentTestAmnt")
            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS A WITH(NOLOCK)")
            oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")

            oDBdtQtyAmnt = HI.Conn.SQLConn.GetDataTable(oStrBuilder.ToString(), HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtQtyAmnt.Rows.Count > 0 Then
                If Not DBNull.Value.Equals(oDBdtQtyAmnt.Rows(0).Item("FNSubOrderQty")) = True Then
                    Me.FNSubOrderQty.Value = oDBdtQtyAmnt.Rows(0).Item("FNSubOrderQty")
                Else
                    Me.FNSubOrderQty.Value = 0
                End If

                If Not DBNull.Value.Equals(oDBdtQtyAmnt.Rows(0).Item("FNSubOrderAmt")) = True Then
                    Me.FNSubOrderAmt.Value = oDBdtQtyAmnt.Rows(0).Item("FNSubOrderAmt")
                Else
                    Me.FNSubOrderAmt.Value = 0
                End If

                If Not DBNull.Value.Equals(oDBdtQtyAmnt.Rows(0).Item("FNSubOrderGarmentTestQty")) = True Then
                    Me.FNSubOrderGarmentTestQty.Value = oDBdtQtyAmnt.Rows(0).Item("FNSubOrderGarmentTestQty")
                Else
                    Me.FNSubOrderGarmentTestQty.Value = 0
                End If

                If Not DBNull.Value.Equals(oDBdtQtyAmnt.Rows(0).Item("FNSubOrderGarmentTestAmnt")) = True Then
                    Me.FNSubOrderGarmentTestAmnt.Value = oDBdtQtyAmnt.Rows(0).Item("FNSubOrderGarmentTestAmnt")
                Else
                    Me.FNSubOrderGarmentTestAmnt.Value = 0
                End If

            Else
                Me.FNSubOrderQty.Value = 0
                Me.FNSubOrderAmt.Value = 0
                Me.FNSubOrderGarmentTestQty.Value = 0
                Me.FNSubOrderGarmentTestAmnt.Value = 0
            End If
            '=====================================================================================================================================================

            Return True
        Catch ex As Exception
            'Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
            Return False
        End Try

    End Function

    Private Sub W_PRCxInitNewRowSizeSpec(ByVal oDataTableSrc As System.Data.DataTable)
        Try
            Dim oDataRow As DataRow
            oDBdtSizeSpecView = oDataTableSrc

            If oDBdtSizeSpecView Is Nothing Then Exit Sub

            oDataRow = oDBdtSizeSpecView.NewRow()

            Dim nMaxSeq As Integer = 1
            Dim nLastSeq As Integer = 0

            Dim MaxRowIndex As Integer = 0

            For Each oRowSizeSpec As DataRow In oDBdtSizeSpecView.Rows
                nLastSeq = oRowSizeSpec.Item("FNSeq")
                If nLastSeq > nMaxSeq Then
                    nMaxSeq = nLastSeq + 1
                    MaxRowIndex = oDBdtSizeSpecView.Rows.IndexOf(oRowSizeSpec)
                End If
            Next

            If nLastSeq = nMaxSeq Then nMaxSeq = nLastSeq + 1

            oDataRow.Item("FNSeq") = nMaxSeq
            oDataRow.Item("FTSizeSpecDesc") = ""

            For Each oCol As DataColumn In oDataTableSrc.Columns
                For Each oColGrid As GridColumn In oGridViewSizeSpec.Columns
                    If oCol.ColumnName = "FTSizeSpecExtension" & CStr(oColGrid.Tag & "").Trim() Then
                        oDataRow.Item(CStr("FNHSysMatSizeId" & CStr(oColGrid.Tag & "").Trim())) = oGridViewSizeSpec.Columns("FNHSysMatSizeId" & CStr(oColGrid.Tag & "").Trim()).Tag
                        Exit For
                    End If
                Next
            Next

            '...add row/column Tolerant (+/-)
            oDataRow.Item("FTSizeSpecTolerant") = ""

            oDBdtSizeSpecView.Rows.Add(oDataRow)

            ogdSizeSpec.DataSource = oDBdtSizeSpecView
            ogdSizeSpec.Refresh()
            ogvSizeSpec.RefreshData()

        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & Environment.NewLine & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)
        End Try

    End Sub

    'Private Function W_PRCbShowBrowseDataSubOrderSizeSpecInfo(ByVal ptFTOrderNo As String, ByVal ptFTSubOrderNo As String) As Boolean
    '    Me.FTStateApprovedSizeSpec.Visible = False
    '    Me.FTStateApprovedSizeSpec.Checked = False
    '    'Me.FTStateApprovedSizeSpec.Text = ""
    '    Me.FTStateApprovedSizeSpecRevised.Visible = False
    '    Me.FTStateApprovedSizeSpecRevised.Checked = False

    '    Me.ogdSizeSpec.DataSource = Nothing
    '    Me.ogdSizeSpec.Refresh()

    '    oDBdtSizeSpecView = Nothing

    '    Call W_PRCbRemoveGridViewColumn(Me.ogvSizeSpec)
    '    Me.ogvSizeSpec.OptionsView.ColumnAutoWidth = False
    '    Me.ogvSizeSpec.RefreshData()

    '    Dim oDBdtSizeBreakdown As DataTable
    '    Dim oDBdtSrc As DataTable
    '    Dim tSql As String

    '    Try
    '        tSql = ""
    '        tSql = "SELECT A.FNHSysMatSizeId, A.FTMatSizeCode, A.FTMatSizeNameEN AS FTMatSizeName"
    '        tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS A WITH(NOLOCK)"
    '        tSql &= Environment.NewLine & "WHERE  EXISTS (SELECT 'T'"
    '        tSql &= Environment.NewLine & "               FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L1 WITH(NOLOCK)"
    '        tSql &= Environment.NewLine & "               WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(ptFTOrderNo) & "'"
    '        tSql &= Environment.NewLine & "                     AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(ptFTSubOrderNo) & "'"
    '        tSql &= Environment.NewLine & "                     AND L1.FNHSysMatSizeId = A.FNHSysMatSizeId)"
    '        tSql &= Environment.NewLine & "ORDER BY A.FNMatSizeSeq ASC;"

    '        oDBdtSizeBreakdown = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

    '        If oDBdtSizeBreakdown.Rows.Count > 0 Then

    '            oGridViewSizeSpec = Me.ogdSizeSpec.Views(0)
    '            Call W_PRCbRemoveGridViewColumn(oGridViewSizeSpec)

    '            Me.ogdSizeSpec.DataSource = Nothing
    '            Me.ogdSizeSpec.Refresh()
    '            Me.ogvSizeSpec.RefreshData()

    '            oDBdtSrc = New System.Data.DataTable()

    '            '...get schema max length for column FTSizeSpecDesc, FTSizeSpecExtension
    '            Dim nRepositorySizeSpecDesc As Integer = IIf(oSizeSpecType Is Nothing, 500, oSizeSpecType.SizeSpecFTSizeSpecDesc)
    '            Dim nRepositorySizeSpecExtension As Integer = IIf(oSizeSpecType Is Nothing, 30, oSizeSpecType.SizeSpecFTSizeSpecExtension)
    '            Dim nRepositorySizeSpecTolerant As Integer = IIf(oSizeSpecType Is Nothing, 30, oSizeSpecType.SizeSpecFTTolerant)

    '            Dim oColFNSeq As DataColumn
    '            oColFNSeq = New DataColumn("FNSeq", System.Type.GetType("System.Int32"))
    '            oDBdtSrc.Columns.Add(oColFNSeq.ColumnName, oColFNSeq.DataType)

    '            Dim oColFTSizeSpecDesc As DataColumn
    '            oColFTSizeSpecDesc = New DataColumn("FTSizeSpecDesc", System.Type.GetType("System.String"))
    '            oDBdtSrc.Columns.Add(oColFTSizeSpecDesc.ColumnName, oColFTSizeSpecDesc.DataType)

    '            Dim oColMeasId As DataColumn = New DataColumn("FNHSysMeasId", GetType(String))
    '            oDBdtSrc.Columns.Add(oColMeasId.ColumnName, oColMeasId.DataType)

    '            Dim oColMeasId_None As DataColumn = New DataColumn("FNHSysMeasId_Hide", GetType(Integer))
    '            oDBdtSrc.Columns.Add(oColMeasId_None.ColumnName, oColMeasId_None.DataType)


    '            '...Repository Size Spec Description
    '            '==================================================================================================================================================================
    '            Dim oRepositoryFTSizeSpecDesc As DevExpress.XtraEditors.Repository.RepositoryItemTextEdit = New DevExpress.XtraEditors.Repository.RepositoryItemTextEdit()
    '            With oRepositoryFTSizeSpecDesc
    '                .MaxLength = nRepositorySizeSpecDesc
    '            End With
    '            oGridViewSizeSpec.Columns.AddField(oColMeasId.ColumnName)
    '            oGridViewSizeSpec.Columns.Add(cFNHSysMeasId)
    '            oGridViewSizeSpec.Columns(oColMeasId.ColumnName).Visible = True
    '            oGridViewSizeSpec.Columns(oColMeasId.ColumnName).Fixed = FixedStyle.Left
    '            oGridViewSizeSpec.Columns(oColMeasId.ColumnName).Width = 80
    '            oGridViewSizeSpec.Columns(oColMeasId.ColumnName).VisibleIndex = 1

    '            oGridViewSizeSpec.Columns.AddField(oColMeasId_None.ColumnName)
    '            oGridViewSizeSpec.Columns.Add(cFNHSysMeasId_None)

    '            oGridViewSizeSpec.Columns("FNHSysMeasId").ColumnEdit = RepositoryItemFNHSysMeasId
    '            '  oGridViewSizeSpec.Columns("FTSizeSpecDesc").ColumnEdit = oRepositoryFTSizeSpecDesc
    '            oGridViewSizeSpec.Columns("FTSizeSpecDesc").Width = 150
    '            oGridViewSizeSpec.Columns("FTSizeSpecDesc").VisibleIndex = 2
    '            oGridViewSizeSpec.Columns("FNSeq").Width = 60
    '            '==================================================================================================================================================================

    '            '...Iterate loop add column FNHSysMatSizeIdXXX
    '            '...Repository Size Spec Extension for all FNHSysMatSizeId
    '            '==================================================================================================================================================================
    '            Dim oRepositoryFTSizeSpecExtension As DevExpress.XtraEditors.Repository.RepositoryItemTextEdit
    '            For Each oRow As DataRow In oDBdtSizeBreakdown.Rows

    '                Dim oColFNHSysMatSizeId As DataColumn = New DataColumn("FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Int32"))
    '                oColFNHSysMatSizeId.Caption = "FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString()

    '                oGridViewSizeSpec.Columns.AddField(oColFNHSysMatSizeId.ColumnName)
    '                oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).FieldName = oColFNHSysMatSizeId.ColumnName
    '                oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).Name = oColFNHSysMatSizeId.ColumnName
    '                oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).Caption = oColFNHSysMatSizeId.Caption
    '                oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
    '                oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).Visible = False
    '                oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).OptionsColumn.TabStop = False
    '                oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).OptionsColumn.AllowEdit = False
    '                oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).OptionsColumn.AllowMove = False
    '                oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).OptionsColumn.AllowSort = False

    '                oDBdtSrc.Columns.Add(oColFNHSysMatSizeId.ColumnName, oColFNHSysMatSizeId.DataType)

    '                Dim oColFTSizeSpecExtension As DataColumn = New DataColumn("FTSizeSpecExtension" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
    '                oColFTSizeSpecExtension.Caption = oRow.Item("FTMatSizeCode").ToString()

    '                oGridViewSizeSpec.Columns.AddField(oColFTSizeSpecExtension.ColumnName)
    '                oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).FieldName = oColFTSizeSpecExtension.ColumnName
    '                oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).Name = oColFTSizeSpecExtension.ColumnName
    '                oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).Caption = oColFTSizeSpecExtension.Caption
    '                oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).Tag = oRow.Item("FTMatSizeCode").ToString()
    '                oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).Visible = True
    '                oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
    '                oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).Width = 80
    '                oRepositoryFTSizeSpecExtension = New DevExpress.XtraEditors.Repository.RepositoryItemTextEdit()

    '                oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).ColumnEdit = oRepositoryFTSizeSpecExtension

    '                oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).OptionsColumn.AllowEdit = True
    '                oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).OptionsColumn.AllowMove = False
    '                oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).OptionsColumn.AllowSort = False

    '                With oRepositoryFTSizeSpecExtension
    '                    .MaxLength = nRepositorySizeSpecExtension
    '                End With

    '                oDBdtSrc.Columns.Add(oColFTSizeSpecExtension.ColumnName, oColFTSizeSpecExtension.DataType)

    '            Next
    '            '==================================================================================================================================================================

    '            '...Add generate dynamic Column FTTolerant +/- ได้ไม่เกินค่าที่กำหนด ที่คอลัมน์นี้
    '            '...Repository Size Spec Tolerant
    '            '==================================================================================================================================================================
    '            Dim oColFTSizeSpecTolerant As System.Data.DataColumn
    '            oColFTSizeSpecTolerant = New System.Data.DataColumn("FTSizeSpecTolerant", System.Type.GetType("System.String"))
    '            'oColFTSizeSpecTolerant.Caption = "+/- (Tolerant)"
    '            oColFTSizeSpecTolerant.Caption = "+/-"

    '            oGridViewSizeSpec.Columns.AddField(oColFTSizeSpecTolerant.ColumnName)
    '            oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).FieldName = oColFTSizeSpecTolerant.ColumnName
    '            oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).Name = oColFTSizeSpecTolerant.ColumnName
    '            oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).Caption = oColFTSizeSpecTolerant.Caption
    '            'oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).Tag = oRow.Item("FTMatSizeCode").ToString()
    '            oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).Visible = True
    '            oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center

    '            oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).OptionsColumn.AllowEdit = True
    '            oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).OptionsColumn.AllowMove = False
    '            oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).OptionsColumn.AllowSort = False

    '            Dim oRepositoryFTSizeSpecTolerant As DevExpress.XtraEditors.Repository.RepositoryItemTextEdit = New DevExpress.XtraEditors.Repository.RepositoryItemTextEdit()
    '            With oRepositoryFTSizeSpecTolerant
    '                .MaxLength = nRepositorySizeSpecTolerant
    '            End With

    '            oGridViewSizeSpec.Columns("FTSizeSpecTolerant").ColumnEdit = oRepositoryFTSizeSpecTolerant

    '            oDBdtSrc.Columns.Add(oColFTSizeSpecTolerant.ColumnName, oColFTSizeSpecTolerant.DataType)
    '            '==================================================================================================================================================================



    '            oGridViewSizeSpec.OptionsBehavior.AllowAddRows = True
    '            oGridViewSizeSpec.OptionsCustomization.AllowSort = False

    '            oGridViewSizeSpec.ActiveFilter.Clear()

    '            '...Clear Data Source from data table oDBdtSizeSpecView
    '            oDBdtSizeSpecView = Nothing
    '            oDBdtSizeSpecView = oDBdtSrc.Clone()

    '            '...Loop iterate binding datatable (datasource for size specify info)
    '            '============================================================================================================================================
    '            Dim nFNMaxSeq As Integer  '...Max Sequence from Size Spec
    '            nFNMaxSeq = 0

    '            tSql = ""
    '            tSql = "SELECT MAX(A.FNSeq) AS FNMaxSeq"
    '            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A WITH(NOLOCK)"
    '            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
    '            tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "'"
    '            tSql &= Environment.NewLine & "GROUP BY A.FTOrderNo, A.FTSubOrderNo;"

    '            nFNMaxSeq = Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, 0))

    '            tSql = ""
    '            'tSql = "SELECT A.FNHSysMatSizeId, B.FTMatSizeCode, A.FNSeq, A.FTSizeSpecDesc, A.FTSizeSpecExtension, ISNULL(FTTolerant, '+/- 0.05') AS FTSizeSpecTolerant"
    '            tSql = "SELECT A.FNHSysMatSizeId, B.FTMatSizeCode, A.FNSeq, A.FTSizeSpecDesc, A.FTSizeSpecExtension, ISNULL(A.FTTolerant,'') AS FTSizeSpecTolerant ,ISNULL( M.FTMeasCode,'') AS FNHSysMeasId , ISNULL(M.FNHSysMeasId,0) AS FNHSysMeasId_Hide"
    '            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TMERMMatSize AS B WITH(NOLOCK) ON A.FNHSysMatSizeId = B.FNHSysMatSizeId"
    '            tSql &= Environment.NewLine & "LEFT OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMeasurements AS M WITH(NOLOCK) ON A.FNHSysMeasId = M.FNHSysMeasId "

    '            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
    '            tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
    '            tSql &= Environment.NewLine & " AND (A.FNHSysMatSizeId IN  (SELECT A.FNHSysMatSizeId"
    '            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS A WITH(NOLOCK)"
    '            tSql &= Environment.NewLine & "WHERE  EXISTS (SELECT 'T'"
    '            tSql &= Environment.NewLine & "               FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L1 WITH(NOLOCK)"
    '            tSql &= Environment.NewLine & "               WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(ptFTOrderNo) & "'"
    '            tSql &= Environment.NewLine & "                     AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(ptFTSubOrderNo) & "'"
    '            tSql &= Environment.NewLine & "                     AND L1.FNHSysMatSizeId = A.FNHSysMatSizeId)))"

    '            tSql &= Environment.NewLine & "ORDER BY B.FNMatSizeSeq ASC, A.FNSeq ASC;"

    '            Dim oDBdtSizeSpecSrc As DataTable

    '            oDBdtSizeSpecSrc = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

    '            If Not oDBdtSizeSpecSrc Is Nothing AndAlso oDBdtSizeSpecSrc.Rows.Count > 0 Then

    '                Dim nCntSeq As Integer = 0
    '                Dim nRowIdxAppend As Integer = 0
    '                Dim nFNHSysMatSizeIdCurr As Integer
    '                Dim nFNHSysMatSizeIdPrv As Integer

    '                nFNHSysMatSizeIdPrv = CInt(oDBdtSizeSpecSrc.Rows(0).Item("FNHSysMatSizeId"))

    '                Dim nLoopRowSrc As Integer
    '                For nLoopRowSrc = 0 To oDBdtSizeSpecSrc.Rows.Count - 1

    '                    nFNHSysMatSizeIdCurr = CInt(oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNHSysMatSizeId"))

    '                    Dim tFNHSysMatSizeIdXXX As String = "FNHSysMatSizeId" & oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTMatSizeCode").ToString()
    '                    Dim tFTSizeSpecExtensionXXX As String = "FTSizeSpecExtension" & oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTMatSizeCode").ToString()

    '                    Dim oDataRowItem As DataRow

    '                    If nCntSeq < nFNMaxSeq Then
    '                        oDataRowItem = oDBdtSizeSpecView.NewRow()
    '                        oDataRowItem.Item("FNSeq") = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNSeq")
    '                        oDataRowItem.Item("FTSizeSpecDesc") = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTSizeSpecDesc").ToString()
    '                        oDataRowItem.Item("FNHSysMeasId") = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNHSysMeasId").ToString()
    '                        oDataRowItem.Item("FNHSysMeasId_Hide") = Val(oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNHSysMeasId_Hide").ToString())

    '                        oDataRowItem.Item("FTSizeSpecTolerant") = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTSizeSpecTolerant").ToString()

    '                        oDBdtSizeSpecView.Rows.Add(oDataRowItem)

    '                        For Each oColSizeSpec As DataColumn In oDBdtSizeSpecView.Columns
    '                            If oColSizeSpec.ColumnName = tFNHSysMatSizeIdXXX Then
    '                                oDataRowItem.Item(tFNHSysMatSizeIdXXX) = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNHSysMatSizeId")
    '                                oDataRowItem.Item(tFTSizeSpecExtensionXXX) = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTSizeSpecExtension")

    '                                oDBdtSizeSpecView.AcceptChanges()

    '                                Exit For

    '                            End If

    '                        Next

    '                        nCntSeq = nCntSeq + 1

    '                        nFNHSysMatSizeIdPrv = nFNHSysMatSizeIdCurr
    '                    Else

    '                        If nFNHSysMatSizeIdCurr <> nFNHSysMatSizeIdPrv Then
    '                            nRowIdxAppend = 0
    '                        End If

    '                        oDBdtSizeSpecView.Rows(nRowIdxAppend).Item(tFNHSysMatSizeIdXXX) = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNHSysMatSizeId")
    '                        oDBdtSizeSpecView.Rows(nRowIdxAppend).Item(tFTSizeSpecExtensionXXX) = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTSizeSpecExtension").ToString()

    '                        nRowIdxAppend = nRowIdxAppend + 1

    '                        nFNHSysMatSizeIdPrv = nFNHSysMatSizeIdCurr
    '                    End If

    '                    oDBdtSizeSpecView.AcceptChanges()

    '                Next nLoopRowSrc

    '                oDBdtSizeSpecView.AcceptChanges()

    '            End If

    '            '============================================================================================================================================


    '            ogdSizeSpec.DataSource = oDBdtSizeSpecView
    '            ogdSizeSpec = oGridViewSizeSpec.GridControl
    '            ' HI.TL.HandlerControl.AddHandlerGridColumnEdit(ogdSizeSpec.Views(0))
    '            oGridViewSizeSpec.OptionsView.ColumnAutoWidth = False
    '            ogdSizeSpec.Refresh()
    '            oGridViewSizeSpec.RefreshData()


    '            '...State Approved Factory Sub Order No. {Approved/Revised} Packing Carton Information
    '            '============================================================================================================================================================================================================================================================================================================================================
    '            tSql = ""
    '            tSql = "DECLARE @FTStateApprovedSizeSpec AS NVARCHAR(1);"
    '            tSql &= Environment.NewLine & "SELECT TOP 1 @FTStateApprovedSizeSpec = A.FTStateApprovedSizeSpec FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
    '            tSql &= Environment.NewLine & "IF (@FTStateApprovedSizeSpec IS NULL)"
    '            tSql &= Environment.NewLine & "BEGIN"
    '            tSql &= Environment.NewLine & "  SET @FTStateApprovedSizeSpec = N'2' /*not approved & not revised*/"
    '            tSql &= Environment.NewLine & "END;"
    '            tSql &= Environment.NewLine & "PRINT '@FTStateApprovedSizeSpec : ' + @FTStateApprovedSizeSpec;"
    '            tSql &= Environment.NewLine & "SELECT @FTStateApprovedSizeSpec AS FTStateApprovedSizeSpec;"

    '            Dim tTextFTApprovedInfoState As String

    '            tTextFTApprovedInfoState = HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "2")

    '            If tTextFTApprovedInfoState = "0" Then
    '                Dim tRevisedTime As String = Val(HI.Conn.SQLConn.GetField("SELECT A.FNCntApprovedSizeSpec FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'", HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")).ToString

    '                Me.FTStateApprovedSizeSpec.Visible = False
    '                Me.FTStateApprovedSizeSpec.Checked = False
    '                'Me.FTStateApprovedSizeSpec.Text = "Revised Information ( " & tRevisedTime & " )"
    '                'Me.FTStateApprovedSizeSpec.ForeColor = System.Drawing.Color.DarkRed
    '                'Me.FTStateApprovedSizeSpec.BackColor = Color.Transparent
    '                'Me.FTStateApprovedSizeSpec.BringToFront()

    '                Me.FTStateApprovedSizeSpecRevised.Visible = True
    '                Me.FTStateApprovedSizeSpecRevised.Checked = True

    '                Me.FTStateApprovedSizeSpecRevised.ForeColor = System.Drawing.Color.DarkRed
    '                Me.FTStateApprovedSizeSpecRevised.BackColor = Color.Transparent
    '                Me.FTStateApprovedSizeSpecRevised.BringToFront()

    '            ElseIf tTextFTApprovedInfoState = "1" Then
    '                Me.FTStateApprovedSizeSpecRevised.Visible = False
    '                Me.FTStateApprovedSizeSpecRevised.Checked = False

    '                Me.FTStateApprovedSizeSpec.Visible = True
    '                Me.FTStateApprovedSizeSpec.Checked = True
    '                'Me.FTStateApprovedSizeSpec.Text = "Approved Information"
    '                Me.FTStateApprovedSizeSpec.ForeColor = System.Drawing.Color.Blue
    '                Me.FTStateApprovedSizeSpec.BackColor = Color.Transparent
    '                Me.FTStateApprovedSizeSpec.BringToFront()

    '            Else
    '                Me.FTStateApprovedSizeSpec.Visible = False
    '                Me.FTStateApprovedSizeSpecRevised.Visible = False
    '                'Me.FTStateApprovedSizeSpec.Text = ""
    '                'Me.FTStateApprovedSizeSpec.ForeColor = DevExpress.XtraEditors.CheckEdit.DefaultForeColor 'Me.GroupControl2.ForeColor 'DevExpress.XtraEditors.CheckEdit.DefaultBackColor
    '                'Me.FTStateApprovedSizeSpec.BackColor = DevExpress.XtraEditors.CheckEdit.DefaultBackColor

    '            End If
    '            '============================================================================================================================================================================================================================================================================================================================================

    '        End If

    '        Return True
    '    Catch ex As Exception

    '        oDBdtSizeSpecView = Nothing
    '        Me.ogdSizeSpec.DataSource = Nothing
    '        Me.ogdSizeSpec.Refresh()
    '        Me.ogvSizeSpec.RefreshData()
    '        Call W_PRCbRemoveGridViewColumn(Me.ogvSizeSpec)
    '        Me.ogvSizeSpec.OptionsView.ColumnAutoWidth = False
    '        Return False
    '    End Try

    'End Function

    Private Function W_PRCbShowBrowseDataSubOrderSizeSpecInfo(ByVal ptFTOrderNo As String, ByVal ptFTSubOrderNo As String) As Boolean
        Me.FTStateApprovedSizeSpec.Visible = False
        Me.FTStateApprovedSizeSpec.Checked = False
        'Me.FTStateApprovedSizeSpec.Text = ""
        Me.FTStateApprovedSizeSpecRevised.Visible = False
        Me.FTStateApprovedSizeSpecRevised.Checked = False

        Me.ogdSizeSpec.DataSource = Nothing
        Me.ogdSizeSpec.Refresh()

        oDBdtSizeSpecView = Nothing

        Call W_PRCbRemoveGridViewColumn(Me.ogvSizeSpec)
        Me.ogvSizeSpec.OptionsView.ColumnAutoWidth = False
        Me.ogvSizeSpec.RefreshData()

        Dim oDBdtSizeBreakdown As DataTable
        Dim oDBdtSrc As DataTable
        Dim tSql As String

        Try
            tSql = ""
            tSql = "SELECT A.FNHSysMatSizeId, A.FTMatSizeCode, A.FTMatSizeNameEN AS FTMatSizeName"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS A WITH(NOLOCK)"
            tSql &= Environment.NewLine & "WHERE  EXISTS (SELECT 'T'"
            tSql &= Environment.NewLine & "               FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L1 WITH(NOLOCK)"
            tSql &= Environment.NewLine & "               WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(ptFTOrderNo) & "'"
            tSql &= Environment.NewLine & "                     AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(ptFTSubOrderNo) & "'"
            tSql &= Environment.NewLine & "                     AND L1.FNHSysMatSizeId = A.FNHSysMatSizeId)"
            tSql &= Environment.NewLine & "ORDER BY A.FNMatSizeSeq ASC;"

            oDBdtSizeBreakdown = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtSizeBreakdown.Rows.Count > 0 Then

                oGridViewSizeSpec = Me.ogdSizeSpec.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSizeSpec)

                Me.ogdSizeSpec.DataSource = Nothing
                Me.ogdSizeSpec.Refresh()
                Me.ogvSizeSpec.RefreshData()

                oDBdtSrc = New System.Data.DataTable()

                '...get schema max length for column FTSizeSpecDesc, FTSizeSpecExtension
                Dim nRepositorySizeSpecDesc As Integer = IIf(oSizeSpecType Is Nothing, 500, oSizeSpecType.SizeSpecFTSizeSpecDesc)
                Dim nRepositorySizeSpecExtension As Integer = IIf(oSizeSpecType Is Nothing, 30, oSizeSpecType.SizeSpecFTSizeSpecExtension)
                Dim nRepositorySizeSpecTolerant As Integer = IIf(oSizeSpecType Is Nothing, 30, oSizeSpecType.SizeSpecFTTolerant)

                Dim oColFNSeq As DataColumn
                oColFNSeq = New DataColumn("FNSeq", System.Type.GetType("System.Int32"))
                oDBdtSrc.Columns.Add(oColFNSeq.ColumnName, oColFNSeq.DataType)

                Dim oColFTSizeSpecDesc As DataColumn
                oColFTSizeSpecDesc = New DataColumn("FTSizeSpecDesc", System.Type.GetType("System.String"))
                oDBdtSrc.Columns.Add(oColFTSizeSpecDesc.ColumnName, oColFTSizeSpecDesc.DataType)

                Dim oColMeasId As DataColumn = New DataColumn("FNHSysMeasId", GetType(String))
                oDBdtSrc.Columns.Add(oColMeasId.ColumnName, oColMeasId.DataType)

                Dim oColMeasId_None As DataColumn = New DataColumn("FNHSysMeasId_Hide", GetType(Integer))
                oDBdtSrc.Columns.Add(oColMeasId_None.ColumnName, oColMeasId_None.DataType)


                '...Repository Size Spec Description
                '==================================================================================================================================================================
                Dim oRepositoryFTSizeSpecDesc As DevExpress.XtraEditors.Repository.RepositoryItemTextEdit = New DevExpress.XtraEditors.Repository.RepositoryItemTextEdit()
                With oRepositoryFTSizeSpecDesc
                    .MaxLength = nRepositorySizeSpecDesc
                End With
                oGridViewSizeSpec.Columns.AddField(oColMeasId.ColumnName)
                oGridViewSizeSpec.Columns.Add(cFNHSysMeasId)
                oGridViewSizeSpec.Columns(oColMeasId.ColumnName).Visible = True
                oGridViewSizeSpec.Columns(oColMeasId.ColumnName).Fixed = FixedStyle.Left
                oGridViewSizeSpec.Columns(oColMeasId.ColumnName).Width = 80
                oGridViewSizeSpec.Columns(oColMeasId.ColumnName).VisibleIndex = 1

                oGridViewSizeSpec.Columns.AddField(oColMeasId_None.ColumnName)
                oGridViewSizeSpec.Columns.Add(cFNHSysMeasId_None)

                oGridViewSizeSpec.Columns("FNHSysMeasId").ColumnEdit = RepositoryItemFNHSysMeasId
                '  oGridViewSizeSpec.Columns("FTSizeSpecDesc").ColumnEdit = oRepositoryFTSizeSpecDesc
                oGridViewSizeSpec.Columns("FTSizeSpecDesc").Width = 150
                oGridViewSizeSpec.Columns("FTSizeSpecDesc").VisibleIndex = 2
                oGridViewSizeSpec.Columns("FNSeq").Width = 60
                '==================================================================================================================================================================

                '...Iterate loop add column FNHSysMatSizeIdXXX
                '...Repository Size Spec Extension for all FNHSysMatSizeId
                '==================================================================================================================================================================
                Dim oRepositoryFTSizeSpecExtension As DevExpress.XtraEditors.Repository.RepositoryItemTextEdit
                For Each oRow As DataRow In oDBdtSizeBreakdown.Rows

                    Dim oColFNHSysMatSizeId As DataColumn = New DataColumn("FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Int32"))
                    oColFNHSysMatSizeId.Caption = "FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSizeSpec.Columns.AddField(oColFNHSysMatSizeId.ColumnName)
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).FieldName = oColFNHSysMatSizeId.ColumnName
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).Name = oColFNHSysMatSizeId.ColumnName
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).Caption = oColFNHSysMatSizeId.Caption
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).Visible = False
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).OptionsColumn.TabStop = False
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSrc.Columns.Add(oColFNHSysMatSizeId.ColumnName, oColFNHSysMatSizeId.DataType)

                    Dim oColFTSizeSpecExtension As DataColumn = New DataColumn("FTSizeSpecExtension" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColFTSizeSpecExtension.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSizeSpec.Columns.AddField(oColFTSizeSpecExtension.ColumnName)
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).FieldName = oColFTSizeSpecExtension.ColumnName
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).Name = oColFTSizeSpecExtension.ColumnName
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).Caption = oColFTSizeSpecExtension.Caption
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).Tag = oRow.Item("FTMatSizeCode").ToString()
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).Visible = True
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).Width = 80
                    oRepositoryFTSizeSpecExtension = New DevExpress.XtraEditors.Repository.RepositoryItemTextEdit()

                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).ColumnEdit = oRepositoryFTSizeSpecExtension

                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).OptionsColumn.AllowEdit = True
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).OptionsColumn.AllowSort = False

                    With oRepositoryFTSizeSpecExtension
                        .MaxLength = nRepositorySizeSpecExtension
                    End With

                    oDBdtSrc.Columns.Add(oColFTSizeSpecExtension.ColumnName, oColFTSizeSpecExtension.DataType)

                Next
                '==================================================================================================================================================================

                '...Add generate dynamic Column FTTolerant +/- ได้ไม่เกินค่าที่กำหนด ที่คอลัมน์นี้
                '...Repository Size Spec Tolerant
                '==================================================================================================================================================================
                Dim oColFTSizeSpecTolerant As System.Data.DataColumn
                oColFTSizeSpecTolerant = New System.Data.DataColumn("FTSizeSpecTolerant", System.Type.GetType("System.String"))
                'oColFTSizeSpecTolerant.Caption = "+/- (Tolerant)"
                oColFTSizeSpecTolerant.Caption = "+/-"

                oGridViewSizeSpec.Columns.AddField(oColFTSizeSpecTolerant.ColumnName)
                oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).FieldName = oColFTSizeSpecTolerant.ColumnName
                oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).Name = oColFTSizeSpecTolerant.ColumnName
                oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).Caption = oColFTSizeSpecTolerant.Caption
                'oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).Tag = oRow.Item("FTMatSizeCode").ToString()
                oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).Visible = True
                oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center

                oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).OptionsColumn.AllowEdit = True
                oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSizeSpec.Columns(oColFTSizeSpecTolerant.ColumnName).OptionsColumn.AllowSort = False

                Dim oRepositoryFTSizeSpecTolerant As DevExpress.XtraEditors.Repository.RepositoryItemTextEdit = New DevExpress.XtraEditors.Repository.RepositoryItemTextEdit()
                With oRepositoryFTSizeSpecTolerant
                    .MaxLength = nRepositorySizeSpecTolerant
                End With

                oGridViewSizeSpec.Columns("FTSizeSpecTolerant").ColumnEdit = oRepositoryFTSizeSpecTolerant

                oDBdtSrc.Columns.Add(oColFTSizeSpecTolerant.ColumnName, oColFTSizeSpecTolerant.DataType)
                '==================================================================================================================================================================



                oGridViewSizeSpec.OptionsBehavior.AllowAddRows = True
                oGridViewSizeSpec.OptionsCustomization.AllowSort = False

                oGridViewSizeSpec.ActiveFilter.Clear()

                '...Clear Data Source from data table oDBdtSizeSpecView
                oDBdtSizeSpecView = Nothing
                oDBdtSizeSpecView = oDBdtSrc.Clone()

                '...Loop iterate binding datatable (datasource for size specify info)
                '============================================================================================================================================
                Dim nFNMaxSeq As Integer  '...Max Sequence from Size Spec
                nFNMaxSeq = 0

                tSql = ""
                tSql = "SELECT MAX(A.FNSeq) AS FNMaxSeq"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A WITH(NOLOCK)"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "'"
                tSql &= Environment.NewLine & "GROUP BY A.FTOrderNo, A.FTSubOrderNo;"

                nFNMaxSeq = Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, 0))

                tSql = ""
                'tSql = "SELECT A.FNHSysMatSizeId, B.FTMatSizeCode, A.FNSeq, A.FTSizeSpecDesc, A.FTSizeSpecExtension, ISNULL(FTTolerant, '+/- 0.05') AS FTSizeSpecTolerant"
                tSql = "SELECT A.FNHSysMatSizeId, B.FTMatSizeCode, A.FNSeq, A.FTSizeSpecDesc, A.FTSizeSpecExtension, ISNULL(A.FTTolerant,'') AS FTSizeSpecTolerant ,ISNULL( M.FTMeasCode,'') AS FNHSysMeasId , ISNULL(M.FNHSysMeasId,0) AS FNHSysMeasId_Hide"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TMERMMatSize AS B WITH(NOLOCK) ON A.FNHSysMatSizeId = B.FNHSysMatSizeId"
                tSql &= Environment.NewLine & "LEFT OUTER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMeasurements AS M WITH(NOLOCK) ON A.FNHSysMeasId = M.FNHSysMeasId "

                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
                tSql &= Environment.NewLine & " AND (A.FNHSysMatSizeId IN  (SELECT A.FNHSysMatSizeId"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS A WITH(NOLOCK)"
                tSql &= Environment.NewLine & "WHERE  EXISTS (SELECT 'T'"
                tSql &= Environment.NewLine & "               FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L1 WITH(NOLOCK)"
                tSql &= Environment.NewLine & "               WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(ptFTOrderNo) & "'"
                tSql &= Environment.NewLine & "                     AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(ptFTSubOrderNo) & "'"
                tSql &= Environment.NewLine & "                     AND L1.FNHSysMatSizeId = A.FNHSysMatSizeId)))"

                tSql &= Environment.NewLine & "ORDER BY A.FNSeq ASC,B.FNMatSizeSeq ASC; "

                Dim oDBdtSizeSpecSrc As DataTable

                oDBdtSizeSpecSrc = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If Not oDBdtSizeSpecSrc Is Nothing AndAlso oDBdtSizeSpecSrc.Rows.Count > 0 Then

                    Dim nCntSeq As Integer = 0
                    Dim nRowIdxAppend As Integer = 0
                    Dim nFNHSysMatSizeIdCurr As Integer
                    Dim nFNHSysMatSizeIdPrv As Integer

                    nFNHSysMatSizeIdPrv = CInt(oDBdtSizeSpecSrc.Rows(0).Item("FNHSysMatSizeId"))

                    Dim nLoopRowSrc As Integer
                    For nLoopRowSrc = 0 To oDBdtSizeSpecSrc.Rows.Count - 1

                        nFNHSysMatSizeIdCurr = CInt(oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNHSysMatSizeId"))

                        Dim tFNHSysMatSizeIdXXX As String = "FNHSysMatSizeId" & oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTMatSizeCode").ToString()
                        Dim tFTSizeSpecExtensionXXX As String = "FTSizeSpecExtension" & oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTMatSizeCode").ToString()

                        Dim oDataRowItem As DataRow

                        If Val(oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNSeq")) > nCntSeq And Val(oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNSeq")) <= nFNMaxSeq Then
                            oDataRowItem = oDBdtSizeSpecView.NewRow()
                            oDataRowItem.Item("FNSeq") = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNSeq")
                            oDataRowItem.Item("FTSizeSpecDesc") = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTSizeSpecDesc").ToString()
                            oDataRowItem.Item("FNHSysMeasId") = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNHSysMeasId").ToString()
                            oDataRowItem.Item("FNHSysMeasId_Hide") = Val(oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNHSysMeasId_Hide").ToString())

                            oDataRowItem.Item("FTSizeSpecTolerant") = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTSizeSpecTolerant").ToString()

                            oDBdtSizeSpecView.Rows.Add(oDataRowItem)

                            For Each oColSizeSpec As DataColumn In oDBdtSizeSpecView.Columns
                                If oColSizeSpec.ColumnName = tFNHSysMatSizeIdXXX Then
                                    oDataRowItem.Item(tFNHSysMatSizeIdXXX) = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNHSysMatSizeId")
                                    oDataRowItem.Item(tFTSizeSpecExtensionXXX) = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTSizeSpecExtension")

                                    oDBdtSizeSpecView.AcceptChanges()

                                    Exit For

                                End If

                            Next

                            nCntSeq = Val(oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNSeq"))

                            nFNHSysMatSizeIdPrv = nFNHSysMatSizeIdCurr
                        Else

                            If nFNHSysMatSizeIdCurr <> nFNHSysMatSizeIdPrv Then
                                nRowIdxAppend = 0
                            End If


                            For Each RRow As DataRow In oDBdtSizeSpecView.Select("FNSeq = " & Val(oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNSeq")) & "")
                                For Each oColSizeSpec As DataColumn In oDBdtSizeSpecView.Columns
                                    If oColSizeSpec.ColumnName = tFNHSysMatSizeIdXXX Then
                                        RRow.Item(tFNHSysMatSizeIdXXX) = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNHSysMatSizeId")
                                        RRow.Item(tFTSizeSpecExtensionXXX) = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTSizeSpecExtension")

                                        oDBdtSizeSpecView.AcceptChanges()

                                        Exit For

                                    End If

                                Next
                            Next


                            'oDBdtSizeSpecView.Rows(nRowIdxAppend).Item(tFNHSysMatSizeIdXXX) = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNHSysMatSizeId")
                            'oDBdtSizeSpecView.Rows(nRowIdxAppend).Item(tFTSizeSpecExtensionXXX) = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTSizeSpecExtension").ToString()

                            nRowIdxAppend = nRowIdxAppend + 1

                            nFNHSysMatSizeIdPrv = nFNHSysMatSizeIdCurr
                        End If

                        oDBdtSizeSpecView.AcceptChanges()

                    Next nLoopRowSrc

                    oDBdtSizeSpecView.AcceptChanges()

                End If

                '============================================================================================================================================


                ogdSizeSpec.DataSource = oDBdtSizeSpecView
                ogdSizeSpec = oGridViewSizeSpec.GridControl
                ' HI.TL.HandlerControl.AddHandlerGridColumnEdit(ogdSizeSpec.Views(0))
                oGridViewSizeSpec.OptionsView.ColumnAutoWidth = False
                ogdSizeSpec.Refresh()
                oGridViewSizeSpec.RefreshData()


                '...State Approved Factory Sub Order No. {Approved/Revised} Packing Carton Information
                '============================================================================================================================================================================================================================================================================================================================================
                tSql = ""
                tSql = "DECLARE @FTStateApprovedSizeSpec AS NVARCHAR(1);"
                tSql &= Environment.NewLine & "SELECT TOP 1 @FTStateApprovedSizeSpec = A.FTStateApprovedSizeSpec FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                tSql &= Environment.NewLine & "IF (@FTStateApprovedSizeSpec IS NULL)"
                tSql &= Environment.NewLine & "BEGIN"
                tSql &= Environment.NewLine & "  SET @FTStateApprovedSizeSpec = N'2' /*not approved & not revised*/"
                tSql &= Environment.NewLine & "END;"
                tSql &= Environment.NewLine & "PRINT '@FTStateApprovedSizeSpec : ' + @FTStateApprovedSizeSpec;"
                tSql &= Environment.NewLine & "SELECT @FTStateApprovedSizeSpec AS FTStateApprovedSizeSpec;"

                Dim tTextFTApprovedInfoState As String

                tTextFTApprovedInfoState = HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "2")

                If tTextFTApprovedInfoState = "0" Then
                    Dim tRevisedTime As String = Val(HI.Conn.SQLConn.GetField("SELECT A.FNCntApprovedSizeSpec FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'", HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")).ToString

                    Me.FTStateApprovedSizeSpec.Visible = False
                    Me.FTStateApprovedSizeSpec.Checked = False
                    'Me.FTStateApprovedSizeSpec.Text = "Revised Information ( " & tRevisedTime & " )"
                    'Me.FTStateApprovedSizeSpec.ForeColor = System.Drawing.Color.DarkRed
                    'Me.FTStateApprovedSizeSpec.BackColor = Color.Transparent
                    'Me.FTStateApprovedSizeSpec.BringToFront()

                    Me.FTStateApprovedSizeSpecRevised.Visible = True
                    Me.FTStateApprovedSizeSpecRevised.Checked = True

                    Me.FTStateApprovedSizeSpecRevised.ForeColor = System.Drawing.Color.DarkRed
                    Me.FTStateApprovedSizeSpecRevised.BackColor = Color.Transparent
                    Me.FTStateApprovedSizeSpecRevised.BringToFront()

                ElseIf tTextFTApprovedInfoState = "1" Then
                    Me.FTStateApprovedSizeSpecRevised.Visible = False
                    Me.FTStateApprovedSizeSpecRevised.Checked = False

                    Me.FTStateApprovedSizeSpec.Visible = True
                    Me.FTStateApprovedSizeSpec.Checked = True
                    'Me.FTStateApprovedSizeSpec.Text = "Approved Information"
                    Me.FTStateApprovedSizeSpec.ForeColor = System.Drawing.Color.Blue
                    Me.FTStateApprovedSizeSpec.BackColor = Color.Transparent
                    Me.FTStateApprovedSizeSpec.BringToFront()

                Else
                    Me.FTStateApprovedSizeSpec.Visible = False
                    Me.FTStateApprovedSizeSpecRevised.Visible = False
                    'Me.FTStateApprovedSizeSpec.Text = ""
                    'Me.FTStateApprovedSizeSpec.ForeColor = DevExpress.XtraEditors.CheckEdit.DefaultForeColor 'Me.GroupControl2.ForeColor 'DevExpress.XtraEditors.CheckEdit.DefaultBackColor
                    'Me.FTStateApprovedSizeSpec.BackColor = DevExpress.XtraEditors.CheckEdit.DefaultBackColor

                End If
                '============================================================================================================================================================================================================================================================================================================================================

            End If

            Return True
        Catch ex As Exception

            oDBdtSizeSpecView = Nothing
            Me.ogdSizeSpec.DataSource = Nothing
            Me.ogdSizeSpec.Refresh()
            Me.ogvSizeSpec.RefreshData()
            Call W_PRCbRemoveGridViewColumn(Me.ogvSizeSpec)
            Me.ogvSizeSpec.OptionsView.ColumnAutoWidth = False
            Return False
        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderSizeSpecInfo_REM_20140310(ByVal ptFTOrderNo As String, ByVal ptFTSubOrderNo As String) As Boolean

        Me.ogdSizeSpec.DataSource = Nothing
        Me.ogdSizeSpec.Refresh()

        oDBdtSizeSpecView = Nothing

        Call W_PRCbRemoveGridViewColumn(Me.ogvSizeSpec)
        Me.ogvSizeSpec.OptionsView.ColumnAutoWidth = False
        Me.ogvSizeSpec.RefreshData()

        'If System.Diagnostics.Debugger.IsAttached = False Then
        '    Return False
        'End If

        Dim oDBdtSizeBreakdown As DataTable

        Dim tSql As String

        Try
            tSql = ""
            tSql = "SELECT A.FNHSysMatSizeId, A.FTMatSizeCode, A.FTMatSizeNameEN AS FTMatSizeName"
            tSql &= Environment.NewLine & "FROM HITECH_MASTER.dbo.TMERMMatSize AS A"
            tSql &= Environment.NewLine & "WHERE  EXISTS (SELECT 'T'"
            tSql &= Environment.NewLine & "               FROM HITECH_MERCHAN.dbo.TMERTOrderSub_BreakDown AS L1"
            tSql &= Environment.NewLine & "               WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(ptFTOrderNo) & "'"
            tSql &= Environment.NewLine & "                     AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(ptFTSubOrderNo) & "'"
            tSql &= Environment.NewLine & "                     AND L1.FNHSysMatSizeId = A.FNHSysMatSizeId)"
            tSql &= Environment.NewLine & "ORDER BY A.FNMatSizeSeq ASC;"

            oDBdtSizeBreakdown = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtSizeBreakdown.Rows.Count > 0 Then

                oGridViewSizeSpec = Me.ogdSizeSpec.Views(0)
                Call W_PRCbRemoveGridViewColumn(oGridViewSizeSpec)

                Me.ogdSizeSpec.DataSource = Nothing
                Me.ogdSizeSpec.Refresh()
                Me.ogvSizeSpec.RefreshData()

                oDBdtSizeSpecView = New System.Data.DataTable()

                Dim nRepositorySizeSpecDesc As Integer = IIf(oSizeSpecType Is Nothing, 500, oSizeSpecType.SizeSpecFTSizeSpecDesc)
                Dim nRepositorySizeSpecExtension As Integer = IIf(oSizeSpecType Is Nothing, 30, oSizeSpecType.SizeSpecFTSizeSpecExtension)

                Dim oColFNSeq As DataColumn
                oColFNSeq = New DataColumn("FNSeq", System.Type.GetType("System.Int32"))

                Select Case HI.ST.Lang.Language
                    Case HI.ST.Lang.eLang.EN
                        oColFNSeq.Caption = "Seq."
                    Case HI.ST.Lang.eLang.TH
                        oColFNSeq.Caption = "ลำดับที่รายการ"
                    Case Else
                        oColFNSeq.Caption = "Seq."
                End Select

                oGridViewSizeSpec.Columns.AddField(oColFNSeq.ColumnName)
                oGridViewSizeSpec.Columns(oColFNSeq.ColumnName).FieldName = oColFNSeq.ColumnName
                oGridViewSizeSpec.Columns(oColFNSeq.ColumnName).Name = oColFNSeq.ColumnName
                oGridViewSizeSpec.Columns(oColFNSeq.ColumnName).Caption = oColFNSeq.Caption
                oGridViewSizeSpec.Columns(oColFNSeq.ColumnName).Visible = True
                oGridViewSizeSpec.Columns(oColFNSeq.ColumnName).Width = 60
                oGridViewSizeSpec.Columns(oColFNSeq.ColumnName).OptionsColumn.AllowEdit = False
                oGridViewSizeSpec.Columns(oColFNSeq.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSizeSpec.Columns(oColFNSeq.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSizeSpec.Columns(oColFNSeq.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSizeSpec.Columns(oColFNSeq.ColumnName).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSizeSpec.Columns(oColFNSeq.ColumnName).Fixed = FixedStyle.Left

                oDBdtSizeSpecView.Columns.Add(oColFNSeq.ColumnName, oColFNSeq.DataType)

                Dim oColFTSizeSpecDesc As DataColumn
                oColFTSizeSpecDesc = New DataColumn("FTSizeSpecDesc", System.Type.GetType("System.String"))

                Select Case HI.ST.Lang.Language
                    Case HI.ST.Lang.eLang.EN
                        oColFTSizeSpecDesc.Caption = "Description"
                    Case HI.ST.Lang.eLang.TH
                        oColFTSizeSpecDesc.Caption = "รายละเอียด"
                    Case Else
                        oColFTSizeSpecDesc.Caption = "Description"
                End Select

                oGridViewSizeSpec.Columns.AddField(oColFTSizeSpecDesc.ColumnName)
                oGridViewSizeSpec.Columns(oColFTSizeSpecDesc.ColumnName).FieldName = oColFTSizeSpecDesc.ColumnName
                oGridViewSizeSpec.Columns(oColFTSizeSpecDesc.ColumnName).Name = oColFTSizeSpecDesc.ColumnName
                oGridViewSizeSpec.Columns(oColFTSizeSpecDesc.ColumnName).Caption = oColFTSizeSpecDesc.Caption
                oGridViewSizeSpec.Columns(oColFTSizeSpecDesc.ColumnName).Visible = True
                oGridViewSizeSpec.Columns(oColFTSizeSpecDesc.ColumnName).OptionsColumn.AllowEdit = True
                oGridViewSizeSpec.Columns(oColFTSizeSpecDesc.ColumnName).OptionsColumn.AllowMove = False
                oGridViewSizeSpec.Columns(oColFTSizeSpecDesc.ColumnName).OptionsColumn.AllowSort = False
                oGridViewSizeSpec.Columns(oColFTSizeSpecDesc.ColumnName).Width = 150
                oGridViewSizeSpec.Columns(oColFTSizeSpecDesc.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                oGridViewSizeSpec.Columns(oColFTSizeSpecDesc.ColumnName).Fixed = FixedStyle.Left

                Dim oRepositoryFTSizeSpecDesc As DevExpress.XtraEditors.Repository.RepositoryItemTextEdit = New DevExpress.XtraEditors.Repository.RepositoryItemTextEdit()

                oGridViewSizeSpec.Columns(oColFTSizeSpecDesc.ColumnName).ColumnEdit = oRepositoryFTSizeSpecDesc

                With oRepositoryFTSizeSpecDesc
                    .MaxLength = nRepositorySizeSpecDesc
                End With

                oDBdtSizeSpecView.Columns.Add(oColFTSizeSpecDesc.ColumnName, oColFTSizeSpecDesc.DataType)

                Dim oRepositoryFTSizeSpecExtension As DevExpress.XtraEditors.Repository.RepositoryItemTextEdit

                For Each oRow As DataRow In oDBdtSizeBreakdown.Rows

                    Dim oColFNHSysMatSizeId As DataColumn = New DataColumn("FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.Int32"))
                    oColFNHSysMatSizeId.Caption = "FNHSysMatSizeId" & oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSizeSpec.Columns.AddField(oColFNHSysMatSizeId.ColumnName)
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).FieldName = oColFNHSysMatSizeId.ColumnName
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).Name = oColFNHSysMatSizeId.ColumnName
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).Caption = oColFNHSysMatSizeId.Caption
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).Tag = oRow.Item("FNHSysMatSizeId")
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).Visible = False
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).OptionsColumn.TabStop = False
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).OptionsColumn.AllowEdit = False
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSizeSpec.Columns(oColFNHSysMatSizeId.ColumnName).OptionsColumn.AllowSort = False

                    oDBdtSizeSpecView.Columns.Add(oColFNHSysMatSizeId.ColumnName, oColFNHSysMatSizeId.DataType)

                    Dim oColFTSizeSpecExtension As DataColumn = New DataColumn("FTSizeSpecExtension" & oRow.Item("FTMatSizeCode").ToString(), System.Type.GetType("System.String"))
                    oColFTSizeSpecExtension.Caption = oRow.Item("FTMatSizeCode").ToString()

                    oGridViewSizeSpec.Columns.AddField(oColFTSizeSpecExtension.ColumnName)
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).FieldName = oColFTSizeSpecExtension.ColumnName
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).Name = oColFTSizeSpecExtension.ColumnName
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).Caption = oColFTSizeSpecExtension.Caption
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).Tag = oRow.Item("FTMatSizeCode").ToString()
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).Visible = True
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center

                    oRepositoryFTSizeSpecExtension = New DevExpress.XtraEditors.Repository.RepositoryItemTextEdit()

                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).ColumnEdit = oRepositoryFTSizeSpecExtension

                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).OptionsColumn.AllowEdit = True
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).OptionsColumn.AllowMove = False
                    oGridViewSizeSpec.Columns(oColFTSizeSpecExtension.ColumnName).OptionsColumn.AllowSort = False

                    With oRepositoryFTSizeSpecExtension
                        .MaxLength = nRepositorySizeSpecExtension
                    End With

                    oDBdtSizeSpecView.Columns.Add(oColFTSizeSpecExtension.ColumnName, oColFTSizeSpecExtension.DataType)

                Next

                oGridViewSizeSpec.OptionsBehavior.AllowAddRows = True
                oGridViewSizeSpec.OptionsCustomization.AllowSort = False

                oGridViewSizeSpec.ActiveFilter.Clear()

                '...Loop iterate binding datatable (datasource for size specify info)
                '============================================================================================================================================
                Dim nFNMaxSeq As Integer  '...Max Sequence from Size Spec
                nFNMaxSeq = 0

                tSql = ""
                tSql = "SELECT MAX(A.FNSeq) AS FNMaxSeq"
                tSql &= Environment.NewLine & "FROM HITECH_MERCHAN.dbo.TMERTOrderSub_SizeSpec AS A"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "'"
                tSql &= Environment.NewLine & "GROUP BY A.FTOrderNo, A.FTSubOrderNo;"

                nFNMaxSeq = Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, 0))

                tSql = ""
                tSql = "SELECT A.FNHSysMatSizeId, B.FTMatSizeCode, A.FNSeq, A.FTSizeSpecDesc, A.FTSizeSpecExtension"
                tSql &= Environment.NewLine & "FROM HITECH_MERCHAN.dbo.TMERTOrderSub_SizeSpec AS A INNER JOIN HITECH_MASTER.dbo.TMERMMatSize AS B ON A.FNHSysMatSizeId = B.FNHSysMatSizeId"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
                tSql &= Environment.NewLine & "ORDER BY B.FNMatSizeSeq ASC, A.FNSeq ASC;"

                Dim oDBdtSizeSpecSrc As DataTable

                oDBdtSizeSpecSrc = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                If Not oDBdtSizeSpecSrc Is Nothing AndAlso oDBdtSizeSpecSrc.Rows.Count > 0 Then

                    Dim nCntSeq As Integer = 0
                    Dim nRowIdxAppend As Integer = 0
                    Dim nFNHSysMatSizeIdCurr As Integer
                    Dim nFNHSysMatSizeIdPrv As Integer

                    nFNHSysMatSizeIdPrv = CInt(oDBdtSizeSpecSrc.Rows(0).Item("FNHSysMatSizeId"))

                    Dim nLoopRowSrc As Integer
                    For nLoopRowSrc = 0 To oDBdtSizeSpecSrc.Rows.Count - 1

                        nFNHSysMatSizeIdCurr = CInt(oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNHSysMatSizeId"))

                        Dim tFNHSysMatSizeIdXXX As String = "FNHSysMatSizeId" & oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTMatSizeCode").ToString()
                        Dim tFTSizeSpecExtensionXXX As String = "FTSizeSpecExtension" & oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTMatSizeCode").ToString()

                        Dim oDataRowItem As DataRow

                        If nCntSeq < nFNMaxSeq Then
                            oDataRowItem = oDBdtSizeSpecView.NewRow()
                            oDataRowItem.Item("FNSeq") = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNSeq")
                            oDataRowItem.Item("FTSizeSpecDesc") = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTSizeSpecDesc").ToString()

                            oDBdtSizeSpecView.Rows.Add(oDataRowItem)

                            For Each oColSizeSpec As DataColumn In oDBdtSizeSpecView.Columns
                                If oColSizeSpec.ColumnName = tFNHSysMatSizeIdXXX Then
                                    oDataRowItem.Item(tFNHSysMatSizeIdXXX) = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNHSysMatSizeId")
                                    oDataRowItem.Item(tFTSizeSpecExtensionXXX) = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTSizeSpecExtension")

                                    oDBdtSizeSpecView.AcceptChanges()

                                    Exit For

                                End If

                            Next

                            nCntSeq = nCntSeq + 1

                            nFNHSysMatSizeIdPrv = nFNHSysMatSizeIdCurr
                        Else

                            If nFNHSysMatSizeIdCurr <> nFNHSysMatSizeIdPrv Then
                                nRowIdxAppend = 0
                            End If

                            oDBdtSizeSpecView.Rows(nRowIdxAppend).Item(tFNHSysMatSizeIdXXX) = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FNHSysMatSizeId")
                            oDBdtSizeSpecView.Rows(nRowIdxAppend).Item(tFTSizeSpecExtensionXXX) = oDBdtSizeSpecSrc.Rows(nLoopRowSrc).Item("FTSizeSpecExtension").ToString()

                            nRowIdxAppend = nRowIdxAppend + 1

                            nFNHSysMatSizeIdPrv = nFNHSysMatSizeIdCurr
                        End If

                        oDBdtSizeSpecView.AcceptChanges()

                    Next nLoopRowSrc

                    oDBdtSizeSpecView.AcceptChanges()

                End If

                '============================================================================================================================================

                ogdSizeSpec.DataSource = oDBdtSizeSpecView
                ogdSizeSpec = oGridViewSizeSpec.GridControl
                oGridViewSizeSpec.OptionsView.ColumnAutoWidth = False
                ogdSizeSpec.Refresh()
                oGridViewSizeSpec.RefreshData()

            End If

            Return True
        Catch ex As Exception
            oDBdtSizeSpecView = Nothing
            Me.ogdSizeSpec.DataSource = Nothing
            Me.ogdSizeSpec.Refresh()
            Me.ogvSizeSpec.RefreshData()
            Call W_PRCbRemoveGridViewColumn(Me.ogvSizeSpec)
            Me.ogvSizeSpec.OptionsView.ColumnAutoWidth = False

            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)

            Return False
        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt() As Boolean
        Try
            Dim oDBdtTotExtra As DataTable

            Dim oStrBuilder As New System.Text.StringBuilder()

            oStrBuilder.Remove(0, oStrBuilder.Length)

            'oStrBuilder.AppendLine("UPDATE A")
            'oStrBuilder.AppendLine("SET A.FNSubOrderQty = B.FNQuantity")
            'oStrBuilder.AppendLine("   ,A.FNSubOrderAmt = B.FNAmt")
            'oStrBuilder.AppendLine("   ,A.FNSubOrderExtraQty = B.FNSubOrderExtraQty")
            'oStrBuilder.AppendLine("   ,A.FNSubOrderExtraAmt = B.FNSubOrderExtraAmt")
            'oStrBuilder.AppendLine("   ,A.FNSubOrderGarmentTestQty = B.FNSubOrderGarmentTestQty")
            'oStrBuilder.AppendLine("   ,A.FNSubOrderGarmentTestAmnt = B.FNSubOrderGarmentTestAmnt")
            'oStrBuilder.AppendLine("   ,A.FTUpdUser =N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'")
            'oStrBuilder.AppendLine(String.Format("   ,A.FDUpdDate = {0}", HI.UL.ULDate.FormatDateDB))
            'oStrBuilder.AppendLine(String.Format("   ,A.FTUpdTime = {0}", HI.UL.ULDate.FormatTimeDB))
            'oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub] AS A LEFT JOIN (SELECT M.FTOrderNo, M.FTSubOrderNo, ISNULL(SUM(M.FNQuantity),0) AS FNQuantity, ISNULL(SUM(M.FNAmt),0) AS FNAmt")
            'oStrBuilder.AppendLine("                                                                                                                  , ISNULL(SUM(M.FNQuantityExtra),0) AS FNSubOrderExtraQty")
            'oStrBuilder.AppendLine("                                                                                                                  , ISNULL(SUM(M.FNAmntExtra),0) AS FNSubOrderExtraAmt")
            'oStrBuilder.AppendLine("                                                                                                                  , ISNULL(SUM(M.FNQuantityExtra),0) AS FNQuantityExtra")
            'oStrBuilder.AppendLine("                                                                                                                  , ISNULL(SUM(M.FNAmntExtra),0) AS FNAmntExtra")
            'oStrBuilder.AppendLine("                                                                                                                  , ISNULL(SUM(M.FNGarmentQtyTest), 0) AS FNSubOrderGarmentTestQty")
            'oStrBuilder.AppendLine("                                                                                                                  , ISNULL(SUM(M.FNAmntQtyTest), 0) AS FNSubOrderGarmentTestAmnt")
            'oStrBuilder.AppendLine("                                                                                                             FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS M WITH(NOLOCK)")
            'oStrBuilder.AppendLine("													                                                         WHERE M.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            'oStrBuilder.AppendLine("															                                                       AND M.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'")
            'oStrBuilder.AppendLine("													                                                         GROUP BY M.FTOrderNo, M.FTSubOrderNo) AS B ON A.FTOrderNo = B.FTOrderNo")
            'oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            'oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'")
            'oStrBuilder.AppendLine("      AND A.FTSubOrderNo = B.FTSubOrderNo;")

            oStrBuilder.AppendLine("SELECT L1.FTOrderNo, L1.FTSubOrderNo")
            oStrBuilder.AppendLine("     , ISNULL(SUM(L1.FNQuantity), 0) AS FNQuantity")
            oStrBuilder.AppendLine("     , ISNULL(SUM(L1.FNAmt), 0) AS FNAmt")
            oStrBuilder.AppendLine("     , ISNULL(SUM(L1.FNQuantityExtra), 0) AS FNQuantityExtra")
            oStrBuilder.AppendLine("     , ISNULL(SUM(L1.FNAmntExtra), 0) AS FNAmntExtra")
            oStrBuilder.AppendLine("     , ISNULL(SUM(L1.FNGarmentQtyTest), 0) AS FNSubOrderGarmentTestQty")
            oStrBuilder.AppendLine("     , ISNULL(SUM(L1.FNAmntQtyTest), 0) AS FNSubOrderGarmentTestAmnt")
            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS L1 WITH(NOLOCK)")
            oStrBuilder.AppendLine("WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "'")
            oStrBuilder.AppendLine("      AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim()) & "'")
            oStrBuilder.AppendLine("GROUP BY L1.FTOrderNo, L1.FTSubOrderNo;")

            Dim tSql$

            tSql = ""
            tSql = oStrBuilder.ToString()

            oDBdtTotExtra = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

            If oDBdtTotExtra.Rows.Count > 0 Then
                Me.FNSubOrderQty.Value = Val(oDBdtTotExtra.Rows(0).Item("FNQuantity"))
                Me.FNSubOrderAmt.Value = Val(oDBdtTotExtra.Rows(0).Item("FNAmt"))
                Me.FNSubOrderExtraQty.Value = Val(oDBdtTotExtra.Rows(0).Item("FNQuantityExtra"))
                Me.FNSubOrderExtraAmt.Value = Val(oDBdtTotExtra.Rows(0).Item("FNAmntExtra"))
                Me.FNSubOrderGarmentTestQty.Value = Val(oDBdtTotExtra.Rows(0).Item("FNSubOrderGarmentTestQty"))
                Me.FNSubOrderGarmentTestAmnt.Value = Val(oDBdtTotExtra.Rows(0).Item("FNSubOrderGarmentTestAmnt"))
            Else
                Me.FNSubOrderQty.Value = 0
                Me.FNSubOrderAmt.Value = 0
                Me.FNSubOrderExtraQty.Value = 0
                Me.FNSubOrderExtraAmt.Value = 0
                Me.FNSubOrderGarmentTestQty.Value = 0
                Me.FNSubOrderGarmentTestAmnt.Value = 0
            End If

            Return False

        Catch ex As Exception
            Me.FNSubOrderExtraQty.Value = 0
            Me.FNSubOrderExtraAmt.Value = 0
            Me.FNSubOrderGarmentTestQty.Value = 0
            Me.FNSubOrderGarmentTestAmnt.Value = 0
            'Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
            Return False
        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderPackCartonInfo(ByVal paramFTOrderNo As String, ByVal paramFTSubOrderNo As String) As Boolean
        Dim bRet As Boolean = False

        Me.ogdOrderSubPackCarton.DataSource = Nothing

        With Me.ogvOrderSubPackCarton
            For nLoopPackCarton As Integer = .Columns.Count - 1 To 0 Step -1

                Select Case .Columns(nLoopPackCarton).FieldName.ToString.ToUpper

                    Case "FTOrderNo".ToUpper, "FTSubOrderNo".ToUpper, "FTColorway".ToUpper
                        .Columns(nLoopPackCarton).AppearanceCell.BackColor = Color.White
                        .Columns(nLoopPackCarton).AppearanceCell.ForeColor = Color.Black
                        .Columns(nLoopPackCarton).OptionsColumn.AllowSort = DevExpress.Utils.DefaultBoolean.False
                    Case Else
                        .Columns.Remove(.Columns(nLoopPackCarton))
                End Select

            Next

        End With

        If paramFTOrderNo.Trim <> "" Or paramFTSubOrderNo.Trim <> "" Then

            Try
                Dim sSQL As String
                sSQL = ""
                sSQL = "EXEC [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..USP_GET_SUBORDERNOBREAKDOWN_PACKCARTON N'" & HI.UL.ULF.rpQuoted(paramFTOrderNo.Trim) & "', N'" & HI.UL.ULF.rpQuoted(paramFTSubOrderNo.Trim) & "';"

                Dim tmpBreakdownPackCarton As System.Data.DataTable

                tmpBreakdownPackCarton = HI.Conn.SQLConn.GetDataTable(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                Dim _colcount As Integer = 0

                With Me.ogvOrderSubPackCarton

                    For nLoopGridveiwSubPack As Integer = .Columns.Count - 1 To 0 Step -1

                        Select Case .Columns(nLoopGridveiwSubPack).FieldName.ToString.ToUpper

                            Case "FTOrderNo".ToUpper, "FTSubOrderNo".ToUpper, "FTColorway".ToUpper
                                .Columns(nLoopGridveiwSubPack).AppearanceCell.BackColor = Color.White
                                .Columns(nLoopGridveiwSubPack).AppearanceCell.ForeColor = Color.Black
                                .Columns(nLoopGridveiwSubPack).OptionsColumn.AllowSort = DevExpress.Utils.DefaultBoolean.False
                            Case Else
                                .Columns.Remove(.Columns(nLoopGridveiwSubPack))
                        End Select

                    Next

                    If Not (tmpBreakdownPackCarton Is Nothing) Then
                        For Each Col As DataColumn In tmpBreakdownPackCarton.Columns

                            Select Case Col.ColumnName.ToString.ToUpper
                                Case "FTOrderNo".ToUpper, "FTSubOrderNo".ToUpper, "FTColorway".ToUpper
                                Case Else
                                    _colcount = _colcount + 1

                                    Dim ColG As New DevExpress.XtraGrid.Columns.GridColumn

                                    With ColG

                                        .FieldName = Col.ColumnName.ToString
                                        .Name = "FTSubOrderNo" & Col.ColumnName.ToString
                                        .Caption = Col.ColumnName.ToString
                                        .Tag = Col.ColumnName.ToString
                                        .Visible = True

                                        .ColumnEdit = oRepositoryPackCartonQty

                                    End With

                                    .Columns.Add(ColG)

                                    With .Columns(Col.ColumnName.ToString)

                                        .OptionsFilter.AllowAutoFilter = False
                                        .OptionsFilter.AllowFilter = False
                                        .DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric
                                        .DisplayFormat.FormatString = "{0:n0}"
                                        .AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                                        .AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Far

                                        With .OptionsColumn
                                            .AllowMove = False
                                            .AllowGroup = DevExpress.Utils.DefaultBoolean.False
                                            .AllowSort = DevExpress.Utils.DefaultBoolean.False
                                            .AllowEdit = False
                                            .ReadOnly = True
                                        End With

                                    End With

                                    .Columns(Col.ColumnName.ToString).Width = 45
                                    .Columns(Col.ColumnName.ToString).Summary.Add(DevExpress.Data.SummaryItemType.Sum)
                                    .Columns(Col.ColumnName.ToString).SummaryItem.DisplayFormat = "{0:n0}"

                            End Select

                        Next

                        For Each GridCol As DevExpress.XtraGrid.Columns.GridColumn In .Columns
                            With GridCol
                                .AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                            End With
                        Next

                    End If

                End With

                Me.ogdOrderSubPackCarton.DataSource = tmpBreakdownPackCarton

                bRet = True

            Catch ex As Exception


                Me.ogdOrderSubPackCarton.DataSource = Nothing
            End Try

            Call FNPackCartonSubType_SelectedIndexChanged(FNPackCartonSubType, New System.EventArgs)

        Else
            Me.FNPackCartonSubType.SelectedIndex = 0
            Call FNPackCartonSubType_SelectedIndexChanged(FNPackCartonSubType, New System.EventArgs)
        End If

        Return bRet

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderPackInfo() As Boolean
        Try
            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)

            Dim tSql As String

            tSql = ""
            tSql = "SELECT ISNULL(MAX(A.FNPackSeq),0) + 1"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A (NOLOCK)"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
            tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"

            Dim nFNPackSeqDefault As Integer
            nFNPackSeqDefault = Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0"))

            Me.FNPackSeq.Value = nFNPackSeqDefault

            Dim oDBdtSubOrderPack As DataTable

            Dim oStrBuilder As New System.Text.StringBuilder()

            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine("SELECT A.FNPackSeq, A.FTPackDescription, A.FTPackNote, A.FTImage,A.FBImage")
            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A (NOLOCK)")
            oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "'")
            oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim()) & "'")
            oStrBuilder.AppendLine("ORDER BY A.FNPackSeq ASC;")

            oDBdtSubOrderPack = HI.Conn.SQLConn.GetDataTable(oStrBuilder.ToString(), HI.Conn.DB.DataBaseName.DB_MERCHAN,, False)

            'oDBdtSubOrderPack.Columns.Add("FTImageNew", GetType(Object))

            'For Each oRow As DataRow In oDBdtSubOrderPack.Rows
            '    Dim tImagePath As String = oRow.Item("FTImage").ToString()
            '    Dim tPathImgDis As String = _SystemFilePath & "\OrderNo\SubOrderNo\Packing" & "\" & tImagePath
            '    If IO.File.Exists(tPathImgDis) Then
            '        oRow!FTImageNew = Image.FromStream(New MemoryStream(System.IO.File.ReadAllBytes(tPathImgDis)))
            '    End If

            'Next

            ogvOrderSubPack.ActiveFilter.Clear()

            Me.ogdOrderSubPack.DataSource = oDBdtSubOrderPack
            Me.ogvOrderSubPack.RefreshData()
            Me.ogvOrderSubPack.OptionsView.ColumnAutoWidth = False
            Me.ogvOrderSubPack.BestFitColumns()

            '...State Approved Factory Sub Order No. {Approved/Revised} Packing Sequence Information
            '============================================================================================================================================================================================================================================================================================================================================
            tSql = ""
            tSql = "DECLARE @FTStateApprovedPacking AS NVARCHAR(1);"
            tSql &= Environment.NewLine & "SELECT TOP 1 @FTStateApprovedPacking = A.FTStateApprovedPacking FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
            tSql &= Environment.NewLine & "IF (@FTStateApprovedPacking IS NULL)"
            tSql &= Environment.NewLine & "BEGIN"
            tSql &= Environment.NewLine & "  SET @FTStateApprovedPacking = N'2' /*not approved & not revised*/"
            tSql &= Environment.NewLine & "END;"
            tSql &= Environment.NewLine & "PRINT '@FTStateApprovedPacking : ' + @FTStateApprovedPacking;"
            tSql &= Environment.NewLine & "SELECT @FTStateApprovedPacking AS FTStateApprovedPacking;"

            Dim tTextFTApprovedInfoState As String

            tTextFTApprovedInfoState = HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "2")

            If tTextFTApprovedInfoState = "0" Then
                Dim tRevisedTime As String = Val(HI.Conn.SQLConn.GetField("SELECT A.FNCntApprovedPacking FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'", HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")).ToString

                Me.FTStateApprovedPack.Visible = False
                Me.FTStateApprovedPack.Checked = False
                'Me.FTStateApprovedPack.Text = "Revised Information ( " & tRevisedTime & " )"
                'Me.FTStateApprovedPack.ForeColor = System.Drawing.Color.DarkRed
                'Me.FTStateApprovedPack.BackColor = Color.Transparent
                'Me.FTStateApprovedPack.BringToFront()

                Me.FTStateApprovedPackRevised.Visible = True
                Me.FTStateApprovedPackRevised.Checked = True
                Me.FTStateApprovedPackRevised.ForeColor = System.Drawing.Color.DarkRed
                Me.FTStateApprovedPackRevised.BackColor = Color.Transparent
                Me.FTStateApprovedPackRevised.BringToFront()

            ElseIf tTextFTApprovedInfoState = "1" Then
                Me.FTStateApprovedPackRevised.Visible = False
                Me.FTStateApprovedPackRevised.Checked = False

                Me.FTStateApprovedPack.Visible = True
                Me.FTStateApprovedPack.Checked = True
                'Me.FTStateApprovedPack.Text = "Approved Information"
                Me.FTStateApprovedPack.ForeColor = System.Drawing.Color.Blue
                Me.FTStateApprovedPack.BackColor = Color.Transparent
                Me.FTStateApprovedPack.BringToFront()

            Else
                Me.FTStateApprovedPack.Visible = False
                Me.FTStateApprovedPackRevised.Visible = False
                'Me.FTStateApprovedPack.Text = ""
                'Me.FTStateApprovedPack.ForeColor = DevExpress.XtraEditors.CheckEdit.DefaultForeColor 'Me.GroupControl2.ForeColor 'DevExpress.XtraEditors.CheckEdit.DefaultBackColor
                'Me.FTStateApprovedPack.BackColor = DevExpress.XtraEditors.CheckEdit.DefaultBackColor

            End If
            '============================================================================================================================================================================================================================================================================================================================================

            Return True
        Catch ex As Exception
            'Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())

            Return False
        End Try

    End Function

    Private Function W_PRCbShowBrowseDataSubOrderSewingInfo() As Boolean
        Try
            HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)

            Dim tSql As String

            tSql = ""
            tSql = "SELECT ISNULL(MAX(A.FNSewSeq),0) + 1"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A (NOLOCK)"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
            tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"

            Dim nFNSewSeqDefault As Integer
            nFNSewSeqDefault = Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0"))

            Me.FNSewSeq.Value = nFNSewSeqDefault

            Dim oDBdtSubOrderSew As DataTable
            Dim oStrBuilder As New System.Text.StringBuilder()
            oStrBuilder.Remove(0, oStrBuilder.Length)

            oStrBuilder.AppendLine(" SELECT A.FNSewSeq, A.FTSewDescription, A.FTSewNote, A.FTImage")
            oStrBuilder.AppendLine(" FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A (NOLOCK)")
            oStrBuilder.AppendLine(" WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine("       AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
            oStrBuilder.AppendLine(" ORDER BY A.FNSewSeq ASC ;")

            oDBdtSubOrderSew = HI.Conn.SQLConn.GetDataTable(oStrBuilder.ToString(), HI.Conn.DB.DataBaseName.DB_MERCHAN)
            oDBdtSubOrderSew.Columns.Add("FTImageNew", GetType(Object))

            For Each oRow As DataRow In oDBdtSubOrderSew.Rows
                Dim tImagePath As String = oRow.Item("FTImage").ToString()

                'Dim tPathImgDis As String = _SystemFilePath & "\Menu\" & tImagePath
                'Dim tPathImgDis As String = _SysPath & "\" & tImagePath
                Dim tPathImgDis As String = _SystemFilePath & "\OrderNo\SubOrderNo\Sewing" & "\" & tImagePath
                If IO.File.Exists(tPathImgDis) Then
                    oRow!FTImageNew = Image.FromStream(New MemoryStream(System.IO.File.ReadAllBytes(tPathImgDis)))
                End If

            Next

            ogvOrderSubSewing.ActiveFilter.Clear()

            Me.ogdOrderSubSewing.DataSource = oDBdtSubOrderSew

            'Dim nCntSewingItem As Integer
            'nCntSewingItem = oDBdtSubOrderSew.Rows.Count

            'For nLoop = 0 To nCntSewingItem - 1
            '    Dim rpic As New DevExpress.XtraEditors.Repository.RepositoryItemImageEdit
            '    Dim _SuperToolTip As New DevExpress.Utils.SuperToolTip()
            '    Dim _ToolTipTitleItem As New DevExpress.Utils.ToolTipTitleItem()

            '    _ToolTipTitleItem.Appearance.Image = rpic.Images
            '    _ToolTipTitleItem.Appearance.Options.UseImage = True
            '    _ToolTipTitleItem.Image = rpic.Images
            '    _ToolTipTitleItem.Text = ""

            '    With _SuperToolTip
            '        .Items.Add(_ToolTipTitleItem)
            '        ' .FixedTooltipWidth = True
            '        '.MaxWidth = 350
            '    End With

            '    rpic.s = _SuperToolTip

            'Next nLoop

            Me.ogvOrderSubSewing.RefreshData()
            Me.ogvOrderSubSewing.OptionsView.ColumnAutoWidth = False
            Me.ogvOrderSubSewing.BestFitColumns()

            '...State Approved Factory Sub Order No. {Approved/Revised} Sewing Sequence Information
            '============================================================================================================================================================================================================================================================================================================================================
            tSql = ""
            tSql = "DECLARE @FTStateApprovedSewing AS NVARCHAR(1);"
            tSql &= Environment.NewLine & "SELECT TOP 1 @FTStateApprovedSewing = A.FTStateApprovedSewing FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
            tSql &= Environment.NewLine & "IF (@FTStateApprovedSewing IS NULL)"
            tSql &= Environment.NewLine & "BEGIN"
            tSql &= Environment.NewLine & "  SET @FTStateApprovedSewing = N'2' /*not approved & not revised*/"
            tSql &= Environment.NewLine & "END;"
            tSql &= Environment.NewLine & "PRINT '@FTStateApprovedSewing : ' + @FTStateApprovedSewing;"
            tSql &= Environment.NewLine & "SELECT @FTStateApprovedSewing AS FTStateApprovedSewing;"

            Dim tTextFTApprovedInfoState As String

            tTextFTApprovedInfoState = HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "2")

            If tTextFTApprovedInfoState = "0" Then
                Dim tRevisedTime As String = Val(HI.Conn.SQLConn.GetField("SELECT A.FNCntApprovedSewing FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'", HI.Conn.DB.DataBaseName.DB_MERCHAN, "0")).ToString

                Me.FTStateApprovedSew.Visible = False
                Me.FTStateApprovedSew.Checked = False

                'Me.FTStateApprovedSew.Text = "Revised Information ( " & tRevisedTime & " )"
                'Me.FTStateApprovedSew.ForeColor = System.Drawing.Color.DarkRed
                'Me.FTStateApprovedSew.BackColor = Color.Transparent
                'Me.FTStateApprovedSew.BringToFront()

                Me.FTStateApprovedSewRevised.Visible = True
                Me.FTStateApprovedSewRevised.Checked = True

                Me.FTStateApprovedSewRevised.ForeColor = System.Drawing.Color.DarkRed
                Me.FTStateApprovedSewRevised.BackColor = Color.Transparent
                Me.FTStateApprovedSewRevised.BringToFront()

            ElseIf tTextFTApprovedInfoState = "1" Then
                Me.FTStateApprovedSewRevised.Visible = False
                Me.FTStateApprovedSewRevised.Checked = False

                Me.FTStateApprovedSew.Visible = True
                Me.FTStateApprovedSew.Checked = True
                'Me.FTStateApprovedSew.Text = "Approved Information"
                Me.FTStateApprovedSew.ForeColor = System.Drawing.Color.Blue
                Me.FTStateApprovedSew.BackColor = Color.Transparent
                Me.FTStateApprovedSew.BringToFront()

            Else
                Me.FTStateApprovedSew.Visible = False
                Me.FTStateApprovedSewRevised.Visible = False
                'Me.FTStateApprovedSew.Text = ""
                'Me.FTStateApprovedSew.ForeColor = DevExpress.XtraEditors.CheckEdit.DefaultForeColor 'Me.GroupControl2.ForeColor 'DevExpress.XtraEditors.CheckEdit.DefaultBackColor
                'Me.FTStateApprovedSew.BackColor = DevExpress.XtraEditors.CheckEdit.DefaultBackColor

            End If
            '============================================================================================================================================================================================================================================================================================================================================

            Return True
        Catch ex As Exception
            'Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
            Return False
        End Try

    End Function

    Private Function W_PRCbDeletePackCarton() As Boolean
        Dim bDeletePackCarton As Boolean = False
        Dim sSQL As String

        Try
            If Me.FTOrderNo.Text.Trim <> "" And Me.FTSubOrderNo.Text.Trim <> "" Then

                sSQL = ""
                sSQL = "SELECT A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"

                If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then

                    sSQL = ""
                    sSQL = "SELECT A.FTSubOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                    If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                        If MessageBox.Show("Are you sure, do you want to delete data packing carton", "Confirm", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) = System.Windows.Forms.DialogResult.Yes Then
                            sSQL = ""
                            sSQL = "DELETE A"
                            sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub_Bundle] AS A"
                            sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                            sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                            If HI.Conn.SQLConn.ExecuteNonQuery(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                                sSQL = ""
                                sSQL = "UPDATE A"
                                sSQL &= Environment.NewLine & "SET A.FNPackCartonSubType = NULL,"
                                sSQL &= Environment.NewLine & "    A.FNPackPerCarton = NULL"
                                sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A"
                                sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                                sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                                If HI.Conn.SQLConn.ExecuteNonQuery(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                                    bDeletePackCarton = True
                                End If

                            End If

                        End If

                    Else
                        '...default select data Factory Sub Order No.
                    End If

                Else
                    '...default select data Factory Orer No.
                End If

            Else
                '...Nothing
            End If

        Catch ex As Exception

        End Try

        Return bDeletePackCarton

    End Function

    Private Function W_PRCbSaveDataPackCarton() As Boolean

        Dim sSQL As String
        Dim _bRet As Boolean = False

        Try
            sSQL = ""
            sSQL = "SELECT TOP 1 A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"

            If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                sSQL = ""
                sSQL = "SELECT TOP 1 A.FTSubOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then

                    If Me.FNPackCartonSubType.SelectedIndex > -1 Then

                        If Me.FNPackPerCaton.Value > 0 Then

                            If MessageBox.Show("Are you sure, do you want to save data packing carton", "Confirm", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) = System.Windows.Forms.DialogResult.Yes Then

                                sSQL = "SELECT ISNULL((SELECT 'Y' FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'), 'N') AS FTChkSubOrderNo;"

                                If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "N") = "Y" Then
                                    '...exists record

                                    Dim sSQLRevisedPackCarton As String
                                    sSQLRevisedPackCarton = ""
                                    sSQLRevisedPackCarton = "SELECT TOP 1 A.FNPackCartonSubType, A.FNPackPerCarton"
                                    sSQLRevisedPackCarton &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS A (NOLOCK)"
                                    sSQLRevisedPackCarton &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                                    sSQLRevisedPackCarton &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                                    DTBeforeRevisedPackRatioHD = HI.Conn.SQLConn.GetDataTable(sSQLRevisedPackCarton, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                                    sSQL = ""
                                    sSQL = "UPDATE A"
                                    sSQL &= Environment.NewLine & "SET   A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "',"
                                    sSQL &= Environment.NewLine & "      A.[FDUpdDate] = " & HI.UL.ULDate.FormatDateDB & ","
                                    sSQL &= Environment.NewLine & "      A.[FTUpdTime] = " & HI.UL.ULDate.FormatTimeDB & ","
                                    sSQL &= Environment.NewLine & "      A.[FNPackCartonSubType] = " & Val(HI.TL.CboList.GetIndexByText(Me.FNPackCartonSubType.Properties.Tag.ToString, Me.FNPackCartonSubType.SelectedItem.ToString)) & ","
                                    sSQL &= Environment.NewLine & "      A.[FNPackPerCarton] = " & Val(Me.FNPackPerCaton.Value.ToString)
                                    sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub] AS A"
                                    sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                                    sSQL &= Environment.NewLine & "       AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                                    If HI.Conn.SQLConn.ExecuteNonQuery(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                                        '...revised Pack Ratio Carton Sub Type|Pack Per Carton {Revised Header Pack Ratio}
                                        '=====================================================================================================================================
                                        sSQL = ""
                                        sSQL = "SELECT TOP 1 A.FTStateApprovedPackRatio "
                                        sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK)"
                                        sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                                        sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                                        If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "1" Then '...revised after approved pack ratio carton by sub type information
                                            DTAfterRevisedPackRatioHD = HI.Conn.SQLConn.GetDataTable(sSQLRevisedPackCarton, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                                        Else
                                            DTAfterRevisedPackRatioHD = Nothing
                                        End If
                                        '=====================================================================================================================================

                                        '...before revised pack carton detail
                                        '============================================================================================================================================================================================
                                        Dim sSQLRevisedDT As String
                                        sSQLRevisedDT = ""
                                        sSQLRevisedDT = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FTColorway, A.FTSizeBreakDown, A.FNQuantity"
                                        sSQLRevisedDT &= Environment.NewLine & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Bundle AS A (NOLOCK)"
                                        sSQLRevisedDT &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "';"

                                        DTBeforeRevisedPackRatioDT = HI.Conn.SQLConn.GetDataTable(sSQLRevisedDT, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                                        '============================================================================================================================================================================================

                                        If HI.TL.CboList.GetIndexByText(Me.FNPackCartonSubType.Properties.Tag.ToString, Me.FNPackCartonSubType.SelectedItem.ToString) > 0 Then
                                            '...solid  color  and assort size / assort color  and solid  size/ assort color  and assort size
                                            If CType(Me.ogdOrderSubPackCarton.DataSource, System.Data.DataTable).Rows.Count > 0 Then
                                                sSQL = ""
                                                sSQL = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FTColorway, A.FTSizeBreakDown"
                                                sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Bundle AS A (NOLOCK) LEFT JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatColor AS B (NOLOCK) ON A.FTColorway = B.FTMatColorCode"
                                                sSQL &= Environment.NewLine & "                                                                                                                  LEFT JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS C (NOLOCK) ON A.FTSizeBreakDown = C.FTMatSizeCode"
                                                sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                                                sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"
                                                sSQL &= Environment.NewLine & "ORDER BY B.FNMatColorSeq ASC, C.FNMatSizeSeq ASC;"

                                                '...before modify data
                                                Dim tmpDTPackCarton As System.Data.DataTable

                                                tmpDTPackCarton = HI.Conn.SQLConn.GetDataTable(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                                                For Each oDataRow As System.Data.DataRow In CType(Me.ogdOrderSubPackCarton.DataSource, System.Data.DataTable).Rows
                                                    Dim txFTOrderNo As String
                                                    Dim txFTSubOrderNo As String
                                                    Dim txFTColorway As String

                                                    txFTOrderNo = Me.FTOrderNo.Text.Trim
                                                    txFTSubOrderNo = Me.FTSubOrderNo.Text.Trim
                                                    txFTColorway = oDataRow("FTColorway").ToString

                                                    Dim sColumnSizeBreakdown As String
                                                    sColumnSizeBreakdown = ""

                                                    Dim numFNQuantity As Integer
                                                    numFNQuantity = 0

                                                    For Each oColPackCarton As System.Data.DataColumn In CType(Me.ogdOrderSubPackCarton.DataSource, System.Data.DataTable).Columns
                                                        Select Case oColPackCarton.ColumnName.ToUpper
                                                            Case "FTOrderNo".ToUpper, "FTSubOrderNo".ToUpper, "FTColorway".ToUpper
                                                                '...Nothing
                                                            Case Else
                                                                sColumnSizeBreakdown = oColPackCarton.ColumnName.ToString             '...FTSizeBreakdWon
                                                                numFNQuantity = Val(oDataRow(oColPackCarton.ColumnName.ToString).ToString)   '...FNQuantity by FTColorway, FTSizeBreakdown

                                                                sSQL = ""
                                                                sSQL = "UPDATE A "
                                                                sSQL &= Environment.NewLine & "SET A.[FTUpdUser] = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "',"
                                                                sSQL &= Environment.NewLine & "    A.[FDUpdDate] = " & HI.UL.ULDate.FormatDateDB & ","
                                                                sSQL &= Environment.NewLine & "    A.[FTUpdTime] = " & HI.UL.ULDate.FormatTimeDB & ","
                                                                sSQL &= Environment.NewLine & "    A.[FNQuantity] = " & numFNQuantity
                                                                sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub_Bundle] AS A"
                                                                sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(txFTOrderNo) & "'"
                                                                sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(txFTSubOrderNo) & "'"
                                                                sSQL &= Environment.NewLine & "      AND A.FTColorway = N'" & HI.UL.ULF.rpQuoted(txFTColorway) & "'"
                                                                sSQL &= Environment.NewLine & "      AND A.FTSizeBreakDown = N'" & HI.UL.ULF.rpQuoted(sColumnSizeBreakdown) & "';"

                                                                If HI.Conn.SQLConn.ExecuteNonQuery(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN) = False Then
                                                                    '...add new record
                                                                    sSQL = ""
                                                                    sSQL = "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub_Bundle] ([FTInsUser], [FDInsDate], [FTInsTime], [FTOrderNo], [FTSubOrderNo], [FTColorway], [FTSizeBreakDown], [FNQuantity])"
                                                                    sSQL &= Environment.NewLine & "SELECT '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "', " & HI.UL.ULDate.FormatDateDB & ", " & HI.UL.ULDate.FormatTimeDB & ", '" & HI.UL.ULF.rpQuoted(txFTOrderNo) & "', '" & HI.UL.ULF.rpQuoted(txFTSubOrderNo) & "', '" & HI.UL.ULF.rpQuoted(txFTColorway) & "', '" & HI.UL.ULF.rpQuoted(sColumnSizeBreakdown) & "' ," & numFNQuantity

                                                                    HI.Conn.SQLConn.ExecuteNonQuery(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                                                                End If

                                                        End Select

                                                    Next

                                                Next

                                                If Not DBNull.Value.Equals(tmpDTPackCarton) AndAlso tmpDTPackCarton.Rows.Count > 0 Then

                                                    '...validate not match current colorway size breakdown
                                                    '-------------------------------------------------------------------------------------------------------------
                                                    Dim tmpPackCartonColorwaySizeBreakdown As New System.Data.DataTable()

                                                    Dim oColFTOrderNo As System.Data.DataColumn
                                                    oColFTOrderNo = New System.Data.DataColumn("FTOrderNo", System.Type.GetType("System.String"))
                                                    oColFTOrderNo.Caption = "FTOrderNo"

                                                    tmpPackCartonColorwaySizeBreakdown.Columns.Add(oColFTOrderNo.ColumnName, oColFTOrderNo.DataType)

                                                    Dim oColFTSubOrderNo As System.Data.DataColumn
                                                    oColFTSubOrderNo = New System.Data.DataColumn("FTSubOrderNo", System.Type.GetType("System.String"))

                                                    tmpPackCartonColorwaySizeBreakdown.Columns.Add(oColFTSubOrderNo.ColumnName, oColFTSubOrderNo.DataType)

                                                    Dim oColFTColorway As System.Data.DataColumn
                                                    oColFTColorway = New System.Data.DataColumn("FTColorway", System.Type.GetType("System.String"))
                                                    oColFTColorway.Caption = "FTColorway"

                                                    tmpPackCartonColorwaySizeBreakdown.Columns.Add(oColFTColorway.ColumnName, oColFTColorway.DataType)

                                                    Dim oColFTSizeBreakdown As System.Data.DataColumn
                                                    oColFTSizeBreakdown = New System.Data.DataColumn("FTSizeBreakdown", System.Type.GetType("System.String"))
                                                    oColFTSizeBreakdown.Caption = "FTSizeBreakdown"

                                                    tmpPackCartonColorwaySizeBreakdown.Columns.Add(oColFTSizeBreakdown.ColumnName, oColFTSizeBreakdown.DataType)

                                                    For Each oDataRowPackCartonBreakdown As System.Data.DataRow In CType(Me.ogdOrderSubPackCarton.DataSource, System.Data.DataTable).Rows
                                                        Dim strFTOrderNo As String = oDataRowPackCartonBreakdown!FTOrderNo.ToString
                                                        Dim strFTSubOrderNo As String = oDataRowPackCartonBreakdown!FTSubOrderNo.ToString
                                                        Dim strFTColorway As String = oDataRowPackCartonBreakdown!FTColorway.ToString

                                                        For Each oColSizePackCartonBreakdown As System.Data.DataColumn In CType(Me.ogdOrderSubPackCarton.DataSource, System.Data.DataTable).Columns
                                                            Select Case oColSizePackCartonBreakdown.ColumnName.ToString.ToUpper
                                                                Case "FTOrderNo".ToUpper, "FTSubOrderNo".ToUpper, "FTColorway".ToUpper
                                                                    '...Nothing
                                                                Case Else
                                                                    Dim ssColSizeBreakdown As String = oColSizePackCartonBreakdown.ColumnName.ToString

                                                                    If tmpPackCartonColorwaySizeBreakdown.Select("FTOrderNo = '" & HI.UL.ULF.rpQuoted(strFTOrderNo) & "' AND FTSubOrderNo = '" & HI.UL.ULF.rpQuoted(strFTSubOrderNo) & "' AND FTColorway = '" & HI.UL.ULF.rpQuoted(strFTColorway) & "' AND FTSizeBreakdown = '" & HI.UL.ULF.rpQuoted(ssColSizeBreakdown) & "'").Length <= 0 Then
                                                                        Dim oNewRowItem As System.Data.DataRow

                                                                        oNewRowItem = tmpPackCartonColorwaySizeBreakdown.NewRow()

                                                                        oNewRowItem.Item("FTOrderNo") = strFTOrderNo
                                                                        oNewRowItem.Item("FTSubOrderNo") = strFTSubOrderNo
                                                                        oNewRowItem.Item("FTColorway") = strFTColorway
                                                                        oNewRowItem.Item("FTSizeBreakdown") = ssColSizeBreakdown

                                                                        tmpPackCartonColorwaySizeBreakdown.Rows.Add(oNewRowItem)

                                                                    End If

                                                            End Select

                                                        Next

                                                    Next

                                                    If Not tmpPackCartonColorwaySizeBreakdown Is Nothing Then tmpPackCartonColorwaySizeBreakdown.AcceptChanges()

                                                    If Not DBNull.Value.Equals(tmpPackCartonColorwaySizeBreakdown) AndAlso tmpPackCartonColorwaySizeBreakdown.Rows.Count > 0 Then
                                                        For Each oRowDTPackCarton As System.Data.DataRow In tmpDTPackCarton.Rows
                                                            If tmpPackCartonColorwaySizeBreakdown.Select("FTOrderNo = '" & HI.UL.ULF.rpQuoted(oRowDTPackCarton!FTOrderNo.ToString) & "' AND FTSubOrderNo = '" & HI.UL.ULF.rpQuoted(oRowDTPackCarton!FTSubOrderNo.ToString) & "' AND FTColorway = '" & HI.UL.ULF.rpQuoted(oRowDTPackCarton!FTColorway.ToString) & "' AND FTSizeBreakdown = '" & HI.UL.ULF.rpQuoted(oRowDTPackCarton!FTSizeBreakdown.ToString) & "'").Length <= 0 Then
                                                                sSQL = ""
                                                                sSQL = "DELETE A"
                                                                sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Bundle AS A"
                                                                sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(oRowDTPackCarton!FTOrderNo.ToString) & "'"
                                                                sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(oRowDTPackCarton!FTSubOrderNo.ToString) & "'"
                                                                sSQL &= Environment.NewLine & "      AND A.FTColorway = N'" & HI.UL.ULF.rpQuoted(oRowDTPackCarton!FTColorway.ToString) & "'"
                                                                sSQL &= Environment.NewLine & "      AND A.FTSizeBreakDown = N'" & HI.UL.ULF.rpQuoted(oRowDTPackCarton!oRowDTPackCarton.ToString) & "';"""

                                                                HI.Conn.SQLConn.ExecuteNonQuery(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                                                            End If

                                                        Next

                                                    End If

                                                    '-------------------------------------------------------------------------------------------------------------

                                                End If

                                                If Not tmpDTPackCarton Is Nothing Then tmpDTPackCarton.Dispose()

                                            End If


                                        Else
                                            '...clear TMERTOrderSub_Bundle by case solid color and solid size
                                            sSQL = ""
                                            sSQL = "DELETE A"
                                            sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub_Bundle] AS A"
                                            sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                                            sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                                            If HI.Conn.SQLConn.ExecuteNonQuery(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                                                DTAfterRevisedPackRatioDT = Nothing
                                            End If

                                        End If

                                        DTAfterRevisedPackRatioDT = HI.Conn.SQLConn.GetDataTable(sSQLRevisedDT, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                                    End If

                                    '...check revised factory sub order no. pack ratio
                                    Call PostSaveSubOrderNoPackRatio("", "")

                                    _bRet = True

                                End If

                            End If

                        Else
                            HI.MG.ShowMsg.mInvalidData(HI.MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FNPackPerCaton_lbl.Text)
                            Me.FNPackPerCaton.Focus()
                        End If

                    End If

                Else
                    HI.MG.ShowMsg.mInvalidData(HI.MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FTSubOrderNo_lbl.Text)
                    Me.FTSubOrderNo.Focus()
                End If
            Else
                HI.MG.ShowMsg.mInvalidData(HI.MG.ShowMsg.InvalidType.InputData, Me.Text, Me.FTOrderNo_lbl.Text)
                Me.FTOrderNo.Focus()
            End If

        Catch ex As Exception

        End Try

        Return _bRet

    End Function

    Private Function W_PRCbSaveDataSizeSpec() As Boolean
        Try
            If Not W_PRCbVerifyBF_SaveDataSizeSpec() Then Return False

            Dim tSql As String, tSqlRevisedSpec As String
            Dim oStrBuilder As New System.Text.StringBuilder()
            Dim oDBdtSizeSpec As DataTable
            Dim oDBdtSizeBreakdown As DataTable

            Dim nFNSeqActive As Integer
            Dim nFNHSysMatSizeIdActive As Integer

            Try
                Dim oGridView As DevExpress.XtraGrid.Views.Grid.GridView = New DevExpress.XtraGrid.Views.Grid.GridView()
                oGridView = Me.ogdSizeSpec.Views(0)

                oDBdtSizeSpec = CType(Me.ogdSizeSpec.DataSource, System.Data.DataTable)

                Dim tFTOrderNo As String = Me.FTOrderNo.Properties.Tag.ToString().Trim()
                Dim tFTSubOrderNo As String = Me.FTSubOrderNo.Properties.Tag.ToString().Trim()

                '--------------------------------Represent Before Revise History Factory Sub Order No. Size Spec Information -------------------------------
                tSql = ""
                tSql = "SELECT  A.FTOrderNo, A.FTSubOrderNo, A.FNSeq"
                tSql &= Environment.NewLine & "          , ISNULL((SELECT TOP 1 L1.FTMatSizeCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS L1 WITH(NOLOCK) WHERE L1.FNHSysMatSizeId = A.FNHSysMatSizeId),'') AS [FNHSysMatSizeId]"
                tSql &= Environment.NewLine & "          , A.FTSizeSpecDesc, A.FTSizeSpecExtension, ISNULL(A.FTTolerant,'') AS FTSizeSpecTolerant"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_SizeSpec] AS A WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS B ON A.FNHSysMatSizeId = B.FNHSysMatSizeId"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString()) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString()) & "'"
                tSql &= Environment.NewLine & "ORDER BY A.FNSeq ASC, B.FNMatSizeSeq ASC;"

                Dim oDBdtSubOrderNoSizeSpecSrcBF As System.Data.DataTable

                oDBdtSubOrderNoSizeSpecSrcBF = Nothing
                oDBdtSubOrderNoSizeSpecSrcBF = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                '------------------------------------------------------------------------------------------------------------------------------------------

                tSql = ""
                tSql = "SELECT A.FNHSysMatSizeId, A.FTMatSizeCode, A.FTMatSizeNameEN AS FTMatSizeName"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMMatSize AS A WITH(NOLOCK)"
                tSql &= Environment.NewLine & "WHERE  EXISTS (SELECT 'T'"
                tSql &= Environment.NewLine & "               FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L1 WITH(NOLOCK)"
                tSql &= Environment.NewLine & "               WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                tSql &= Environment.NewLine & "                     AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"
                tSql &= Environment.NewLine & "                     AND L1.FNHSysMatSizeId = A.FNHSysMatSizeId)"
                tSql &= Environment.NewLine & "ORDER BY A.FNMatSizeSeq ASC;"

                oDBdtSizeBreakdown = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                tSqlRevisedSpec = ""
                tSqlRevisedSpec = "SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNSeq, A.FNHSysMatSizeId, A.FTSizeSpecDesc, A.FTSizeSpecExtension, A.FTTolerant"
                tSqlRevisedSpec &= Environment.NewLine & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A (NOLOCK)"
                tSqlRevisedSpec &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"

                DTBeforeRevisedSizeSpec = HI.Conn.SQLConn.GetDataTable(tSqlRevisedSpec, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
                HI.Conn.SQLConn.SqlConnectionOpen()
                HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
                HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction

                '...iterate loop insert/update record for string builder
                oStrBuilder.Remove(0, oStrBuilder.Length)
                For Each oDataRow As DataRow In oDBdtSizeSpec.Rows
                    Dim _MeasId As Integer = 0
                    _MeasId = Val(oDataRow!FNHSysMeasId_Hide.ToString)

                    For Each oDataRowSizeBreakdown As DataRow In oDBdtSizeBreakdown.Rows

                        Dim tFTSizeSpecDesc As String
                        Dim tFTSizeSpecExtension As String
                        Dim tFTSizeSpecTolerant As String


                        If DBNull.Value.Equals(oDataRow.Item("FTSizeSpecExtension" & oDataRowSizeBreakdown.Item("FTMatSizeCode").ToString())) Then
                            tFTSizeSpecExtension = ""
                        Else
                            tFTSizeSpecExtension = oDataRow.Item("FTSizeSpecExtension" & oDataRowSizeBreakdown.Item("FTMatSizeCode").ToString())
                        End If

                        If DBNull.Value.Equals(oDataRow.Item("FTSizeSpecDesc")) = True Then
                            tFTSizeSpecDesc = ""
                        Else
                            tFTSizeSpecDesc = CStr(oDataRow.Item("FTSizeSpecDesc")).Trim()
                        End If

                        If DBNull.Value.Equals(oDataRow.Item("FTSizeSpecTolerant")) = True Then
                            tFTSizeSpecTolerant = ""
                        Else
                            tFTSizeSpecTolerant = CStr(oDataRow.Item("FTSizeSpecTolerant")).Trim()
                        End If

                        nFNSeqActive = CInt(oDataRow.Item("FNSeq"))
                        nFNHSysMatSizeIdActive = CInt(oDataRowSizeBreakdown.Item("FNHSysMatSizeId"))

                        If tFTSizeSpecDesc = "" Then
                            '...delete  record
                            oStrBuilder.AppendLine("DELETE A")
                            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A")
                            oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'")
                            oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'")
                            oStrBuilder.AppendLine(String.Format("      AND A.FNSeq = {0}", nFNSeqActive))
                            oStrBuilder.AppendLine(String.Format("      AND A.FNHSysMatSizeId = {0};", nFNHSysMatSizeIdActive))

                            tSql = ""
                            tSql = "SELECT A.FTMatSizeCode"
                            tSql &= Environment.NewLine & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS A WITH(NOLOCK)"
                            tSql &= Environment.NewLine & "WHERE A.FNHSysMatSizeId = " & nFNHSysMatSizeIdActive & ";"

                            Dim tFTMatSizeCode As String
                            tFTMatSizeCode = HI.Conn.SQLConn.GetFieldOnBeginTrans(tSql, HI.Conn.DB.DataBaseName.DB_MASTER, "")

                            Dim oDataRowSrc As System.Data.DataRow() = oDBdtSubOrderNoSizeSpecSrcBF.Select("FTOrderNo = '" & tFTOrderNo & "' AND FTSubOrderNo = '" & tFTSubOrderNo & "' AND FNSeq = " & nFNSeqActive & " AND FNHSysMatSizeId = '" & tFTMatSizeCode & "'")
                            If oDataRowSrc.Length > 0 Then
                                oDBdtSubOrderNoSizeSpecSrcBF.Rows.Remove(oDataRowSrc(0))
                                oDBdtSubOrderNoSizeSpecSrcBF.AcceptChanges()
                            End If

                        Else
                            '...insert/update record
                            oStrBuilder.AppendLine("IF EXISTS(SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNHSysMatSizeId, A.FNSeq, A.FTSizeSpecDesc, A.FTSizeSpecExtension, ISNULL(A.FTTolerant,'') AS FTSizeSpecTolerant")
                            oStrBuilder.AppendLine("          FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A WITH(NOLOCK)")
                            oStrBuilder.AppendLine("          WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'")
                            oStrBuilder.AppendLine("                AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'")
                            oStrBuilder.AppendLine(String.Format("                AND A.FNSeq = {0}", nFNSeqActive))
                            oStrBuilder.AppendLine(String.Format("                AND A.FNHSysMatSizeId = {0}", nFNHSysMatSizeIdActive) & ")")
                            oStrBuilder.AppendLine("       BEGIN")
                            oStrBuilder.AppendLine("            UPDATE A")
                            oStrBuilder.AppendLine("            SET A.FTSizeSpecDesc = N'" & HI.UL.ULF.rpQuoted(tFTSizeSpecDesc) & "'")
                            oStrBuilder.AppendLine("                   ,A.FTSizeSpecExtension = N'" & HI.UL.ULF.rpQuoted(tFTSizeSpecExtension) & "'")
                            oStrBuilder.AppendLine("                   ,A.FTTolerant = N'" & HI.UL.ULF.rpQuoted(tFTSizeSpecTolerant) & "'")
                            oStrBuilder.AppendLine("                   ,A.FTUpdUser = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'")
                            oStrBuilder.AppendLine("                   ,A.FDUpdDate = " & HI.UL.ULDate.FormatDateDB)
                            oStrBuilder.AppendLine("                   ,A.FTUpdTime = " & HI.UL.ULDate.FormatTimeDB)
                            oStrBuilder.AppendLine("                    ,A.FNHSysMeasId=" & _MeasId)
                            oStrBuilder.AppendLine("            FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A")
                            oStrBuilder.AppendLine("            WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'")
                            oStrBuilder.AppendLine("                  AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'")
                            oStrBuilder.AppendLine(String.Format("                  AND A.FNSeq = {0}", nFNSeqActive))
                            oStrBuilder.AppendLine(String.Format("                  AND A.FNHSysMatSizeId = {0}", nFNHSysMatSizeIdActive))
                            oStrBuilder.AppendLine("       END")
                            oStrBuilder.AppendLine("ELSE")
                            oStrBuilder.AppendLine("       BEGIN")
                            oStrBuilder.AppendLine("          INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_SizeSpec] ([FTInsUser],[FDInsDate],[FTInsTime],[FTUpdUser]")
                            oStrBuilder.AppendLine("                                                                                                                         ,[FDUpdDate],[FTUpdTime],[FTOrderNo],[FTSubOrderNo]")
                            oStrBuilder.AppendLine("                                                                                                                         ,[FNSeq],[FNHSysMatSizeId],[FTSizeSpecDesc],[FTSizeSpecExtension],[FTTolerant] , FNHSysMeasId )")
                            oStrBuilder.AppendLine("          VALUES (N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "', " & HI.UL.ULDate.FormatDateDB & ", " & HI.UL.ULDate.FormatTimeDB & ",  N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'")
                            oStrBuilder.AppendLine("                  , " & HI.UL.ULDate.FormatDateDB & ", " & HI.UL.ULDate.FormatTimeDB & ", N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "', N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'")
                            oStrBuilder.AppendLine("                  , " & nFNSeqActive & ", " & nFNHSysMatSizeIdActive & ", N'" & HI.UL.ULF.rpQuoted(tFTSizeSpecDesc) & "', N'" & HI.UL.ULF.rpQuoted(tFTSizeSpecExtension) & "', N'" & HI.UL.ULF.rpQuoted(tFTSizeSpecTolerant) & "' , " & _MeasId & ")")
                            oStrBuilder.AppendLine("       END;")
                        End If

                    Next

                Next

                tSql = ""
                tSql = oStrBuilder.ToString()

                If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) <= 0 Then
                    HI.Conn.SQLConn.Tran.Rollback()
                    HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                    HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                    Return False
                End If

                HI.Conn.SQLConn.Tran.Commit()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                '...re-sequence list size spec info
                '===============================================================================================================================================
                oStrBuilder.Remove(0, oStrBuilder.Length)

                oStrBuilder.AppendLine("UPDATE A")
                oStrBuilder.AppendLine("SET A.FNSeq = B.FNReSeq")
                oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A LEFT JOIN (SELECT DENSE_RANK() OVER(ORDER BY A.FNSeq) AS FNReSeq, A.FNSeq, A.FNHSysMatSizeId, A.FTSizeSpecDesc, A.FTSizeSpecExtension, ISNULL(A.FTTolerant,'') AS FTSizeSpecTolerant, A.FTOrderNo, A.FTSubOrderNo")
                oStrBuilder.AppendLine("													                                                                  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A WITH(NOLOCK)")
                oStrBuilder.AppendLine("													                                                                  WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'")
                oStrBuilder.AppendLine("														                                                                    AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "') AS B ON A.FTOrderNo = B.FTOrderNo AND A.FTSubOrderNo = B.FTSubOrderNo")
                oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'")
                oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'")
                oStrBuilder.AppendLine("      AND A.FNSeq = B.FNSeq;")

                tSql = ""
                tSql = oStrBuilder.ToString()

                HI.Conn.SQLConn.ExecuteNonQuery(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                '===============================================================================================================================================

                '------------------------------Represent After Revise History Factory Sub Order No. Size Spec Information-------------------------------------
                tSql = ""
                tSql = "SELECT  A.FTOrderNo, A.FTSubOrderNo, A.FNSeq"
                tSql &= Environment.NewLine & "          , ISNULL((SELECT TOP 1 L1.FTMatSizeCode FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMMatSize] AS L1 WITH(NOLOCK) WHERE L1.FNHSysMatSizeId = A.FNHSysMatSizeId),'') AS [FNHSysMatSizeId]"
                tSql &= Environment.NewLine & "          , A.FTSizeSpecDesc, A.FTSizeSpecExtension, ISNULL(A.FTTolerant,'') AS FTSizeSpecTolerant"
                tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_SizeSpec] AS A WITH(NOLOCK) INNER JOIN [HITECH_MASTER]..[TMERMMatSize] AS B ON A.FNHSysMatSizeId = B.FNHSysMatSizeId"
                tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"
                tSql &= Environment.NewLine & "ORDER BY A.FNSeq ASC, B.FNMatSizeSeq ASC;"

                Dim oDBdtSubOrderNoSizeSpecSrcAF As System.Data.DataTable
                oDBdtSubOrderNoSizeSpecSrcAF = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                oDBdtSubOrderNoSizeSpecBF = Nothing
                oDBdtSubOrderNoSizeSpecAF = Nothing

                If Not oDBdtSubOrderNoSizeSpecSrcBF Is Nothing And oDBdtSubOrderNoSizeSpecSrcBF.Rows.Count > 0 And Not oDBdtSubOrderNoSizeSpecSrcAF Is Nothing And oDBdtSubOrderNoSizeSpecSrcAF.Rows.Count > 0 Then

                    Dim nFNReSeq As Integer, nFNSeqPrv As Integer, nFNSeqCurr As Integer
                    nFNReSeq = 1

                    nFNSeqPrv = CInt(oDBdtSubOrderNoSizeSpecSrcBF.Rows(0).Item("FNSeq"))

                    Dim nLoopReSeq As Integer

                    For nLoopReSeq = 0 To oDBdtSubOrderNoSizeSpecSrcBF.Rows.Count - 1

                        nFNSeqCurr = CInt(oDBdtSubOrderNoSizeSpecSrcBF.Rows(nLoopReSeq).Item("FNSeq"))

                        If nFNSeqPrv = nFNSeqCurr Then
                            oDBdtSubOrderNoSizeSpecSrcBF.Rows(nLoopReSeq).Item("FNSeq") = nFNReSeq
                        Else
                            nFNSeqPrv = CInt(oDBdtSubOrderNoSizeSpecSrcBF.Rows(nLoopReSeq).Item("FNSeq"))
                            nFNReSeq = nFNReSeq + 1
                            oDBdtSubOrderNoSizeSpecSrcBF.Rows(nLoopReSeq).Item("FNSeq") = nFNReSeq
                        End If

                    Next nLoopReSeq

                    oDBdtSubOrderNoSizeSpecSrcBF.AcceptChanges()

                    '...delete reocord when not matched
                    '==============================================================================================================
                    Dim nLoopMatchSrc As Integer
                    REM 2014/04/12
                    'For nLoopMatchSrc = 0 To oDBdtSubOrderNoSizeSpecSrcAF.Rows.Count - 1
                    '    Dim FTOrderNoAF As String, FTSubOrderNoAF As String
                    '    Dim FNSeqAF As Integer
                    '    Dim FNHSysMatSizeIdAF As String

                    '    FTOrderNoAF = oDBdtSubOrderNoSizeSpecSrcAF.Rows(nLoopMatchSrc).Item("FTOrderNo").ToString()
                    '    FTSubOrderNoAF = oDBdtSubOrderNoSizeSpecSrcAF.Rows(nLoopMatchSrc).Item("FTSubOrderNo").ToString()
                    '    FNSeqAF = CInt(oDBdtSubOrderNoSizeSpecSrcAF.Rows(nLoopMatchSrc).Item("FNSeq"))
                    '    FNHSysMatSizeIdAF = oDBdtSubOrderNoSizeSpecSrcAF.Rows(nLoopMatchSrc).Item("FNHSysMatSizeId")

                    '    If FNHSysMatSizeIdAF = "5XL" Then
                    '        MsgBox("Found data Mat Size Id : 5XL", MsgBoxStyle.OkOnly, My.Application.Info.Title)
                    '    End If

                    '    'Dim oDataRowSrc As DataRow() = oDBdtSubOrderNoSizeSpecSrcBF.Select("FTOrderNo = '" & FTOrderNoAF & "' AND FTSubOrderNo = '" & FTSubOrderNoAF & "' AND FNSeq = " & FNSeqAF & " AND FNHSysMatSizeId = '" & FNHSysMatSizeIdAF & "'")
                    '    'If oDataRowSrc.Length <= 0 Then
                    '    '    oDBdtSubOrderNoSizeSpecSrcAF.Rows.Remove(oDataRowSrc(0))
                    '    '    oDBdtSubOrderNoSizeSpecSrcAF.AcceptChanges()
                    '    'End If

                    '    Dim oDataRowDel() As DataRow
                    '    oDataRowDel = oDBdtSubOrderNoSizeSpecSrcBF.Select("FTOrderNo = '" & FTOrderNoAF & "' AND FTSubOrderNo = '" & FTSubOrderNoAF & "' AND FNSeq = " & FNSeqAF & " AND FNHSysMatSizeId = '" & FNHSysMatSizeIdAF & "'")
                    '    Try
                    '        If oDataRowDel.Length = 0 Then
                    '            oDBdtSubOrderNoSizeSpecSrcAF.Rows.RemoveAt(nLoopMatchSrc)
                    '        End If
                    '    Catch ex As Exception
                    '    End Try

                    '    For nLoopDel As Integer = 0 To oDataRowDel.Length - 1
                    '        oDBdtSubOrderNoSizeSpecSrcAF.Rows.Remove(oDataRowDel(nLoopDel))
                    '    Next nLoopDel

                    'Next nLoopMatchSrc

                    Dim oDBdtSubOrderNoSizeSpecSrcAF_Temp As System.Data.DataTable
                    oDBdtSubOrderNoSizeSpecSrcAF_Temp = oDBdtSubOrderNoSizeSpecSrcAF.Clone()

                    '...Before Revise Exists in Afer Revise (Add New Row In Collection)
                    For nLoopMatchSrc = 0 To oDBdtSubOrderNoSizeSpecSrcBF.Rows.Count - 1
                        Dim FTOrderNoAF As String, FTSubOrderNoAF As String
                        Dim FNSeqAF As Integer
                        Dim FNHSysMatSizeIdAF As String
                        Dim FTSizeSpecDescAF As String, FTSizeSpecExtensionAF As String, FTSizeSpecTolerant As String

                        FTOrderNoAF = oDBdtSubOrderNoSizeSpecSrcBF.Rows(nLoopMatchSrc).Item("FTOrderNo").ToString()
                        FTSubOrderNoAF = oDBdtSubOrderNoSizeSpecSrcBF.Rows(nLoopMatchSrc).Item("FTSubOrderNo").ToString()
                        FNSeqAF = CInt(oDBdtSubOrderNoSizeSpecSrcBF.Rows(nLoopMatchSrc).Item("FNSeq"))
                        FNHSysMatSizeIdAF = oDBdtSubOrderNoSizeSpecSrcBF.Rows(nLoopMatchSrc).Item("FNHSysMatSizeId")

                        FTSizeSpecDescAF = "" : FTSizeSpecExtensionAF = "" : FTSizeSpecTolerant = ""

                        Dim oDataRowAppend() As DataRow
                        oDataRowAppend = oDBdtSubOrderNoSizeSpecSrcAF.Select("FTOrderNo = '" & FTOrderNoAF & "' AND FTSubOrderNo = '" & FTSubOrderNoAF & "' AND FNSeq = " & FNSeqAF & " AND FNHSysMatSizeId = '" & FNHSysMatSizeIdAF & "'")
                        Try
                            If oDataRowAppend.Length > 0 Then
                                FTSizeSpecDescAF = IIf(IsDBNull(oDataRowAppend(0).Item("FTSizeSpecDesc")), "", oDataRowAppend(0).Item("FTSizeSpecDesc"))
                                FTSizeSpecExtensionAF = IIf(IsDBNull(oDataRowAppend(0).Item("FTSizeSpecExtension")), "", oDataRowAppend(0).Item("FTSizeSpecExtension"))

                                FTSizeSpecTolerant = IIf(IsDBNull(oDataRowAppend(0).Item("FTSizeSpecTolerant")), "", oDataRowAppend(0).Item("FTSizeSpecTolerant"))

                                Dim oRowItem As DataRow

                                oRowItem = oDBdtSubOrderNoSizeSpecSrcAF_Temp.NewRow()

                                oRowItem.Item("FTOrderNo") = FTOrderNoAF
                                oRowItem.Item("FTSubOrderNo") = FTSubOrderNoAF
                                oRowItem.Item("FNSeq") = FNSeqAF
                                oRowItem.Item("FNHSysMatSizeId") = FNHSysMatSizeIdAF
                                oRowItem.Item("FTSizeSpecDesc") = FTSizeSpecDescAF
                                oRowItem.Item("FTSizeSpecExtension") = FTSizeSpecExtensionAF

                                oRowItem.Item("FTSizeSpecTolerant") = FTSizeSpecTolerant

                                oDBdtSubOrderNoSizeSpecSrcAF_Temp.Rows.Add(oRowItem)

                            End If
                        Catch ex As Exception
                        End Try


                    Next nLoopMatchSrc

                    oDBdtSubOrderNoSizeSpecSrcAF_Temp.AcceptChanges()
                    '===============================================================================================================

                    'oDBdtSubOrderNoSizeSpecBF = oDBdtSubOrderNoSizeSpecSrcBF.Copy()
                    'oDBdtSubOrderNoSizeSpecAF = oDBdtSubOrderNoSizeSpecSrcAF.Copy()

                    oDBdtSubOrderNoSizeSpecBF = oDBdtSubOrderNoSizeSpecSrcBF.Copy()
                    oDBdtSubOrderNoSizeSpecAF = oDBdtSubOrderNoSizeSpecSrcAF_Temp.Copy()

                    Dim tPostFTOrderNo As String, tAfterFTOrderNo As String
                    Dim tPostFTSubOrderNo As String, tAfterFTSubOrderNo As String
                    Dim nPostFNSeq As Integer, nAfterFNSeq As Integer
                    Dim tPostFNHSysMatSizeId As String, tAfterFNHSysMatSizeId As String
                    Dim tPostFTSizeSpecDesc As String, tAfterFTSizeSpecDesc As String
                    Dim tPostFTSizeSpecExtension As String, tAfterFTSizeSpecExtension As String
                    Dim tPostFTSizeSpecTolerant As String, tAfterFTSizeSpecTolerant As String

                    For nLoopBF As Integer = 0 To oDBdtSubOrderNoSizeSpecBF.Rows.Count - 1
                        tPostFTOrderNo = oDBdtSubOrderNoSizeSpecBF.Rows(nLoopBF).Item("FTOrderNo")
                        tPostFTSubOrderNo = oDBdtSubOrderNoSizeSpecBF.Rows(nLoopBF).Item("FTSubOrderNo")
                        nPostFNSeq = oDBdtSubOrderNoSizeSpecBF.Rows(nLoopBF).Item("FNSeq")
                        tPostFNHSysMatSizeId = oDBdtSubOrderNoSizeSpecBF.Rows(nLoopBF).Item("FNHSysMatSizeId")
                        tPostFTSizeSpecDesc = oDBdtSubOrderNoSizeSpecBF.Rows(nLoopBF).Item("FTSizeSpecDesc")

                        If Not DBNull.Value.Equals(oDBdtSubOrderNoSizeSpecBF.Rows(nLoopBF).Item("FTSizeSpecExtension")) Then
                            tPostFTSizeSpecExtension = oDBdtSubOrderNoSizeSpecBF.Rows(nLoopBF).Item("FTSizeSpecExtension").ToString()
                        Else
                            tPostFTSizeSpecExtension = ""
                        End If

                        If Not DBNull.Value.Equals(oDBdtSubOrderNoSizeSpecSrcBF.Rows(nLoopBF).Item("FTSizeSpecTolerant")) Then
                            tPostFTSizeSpecTolerant = oDBdtSubOrderNoSizeSpecSrcBF.Rows(nLoopBF).Item("FTSizeSpecTolerant").ToString
                        Else
                            tPostFTSizeSpecTolerant = ""
                        End If

                        For nLoopAF As Integer = 0 To oDBdtSubOrderNoSizeSpecAF.Rows.Count - 1
                            tAfterFTOrderNo = oDBdtSubOrderNoSizeSpecAF.Rows(nLoopAF).Item("FTOrderNo")
                            tAfterFTSubOrderNo = oDBdtSubOrderNoSizeSpecAF.Rows(nLoopAF).Item("FTSubOrderNo")
                            nAfterFNSeq = oDBdtSubOrderNoSizeSpecAF.Rows(nLoopAF).Item("FNSeq")
                            tAfterFNHSysMatSizeId = oDBdtSubOrderNoSizeSpecAF.Rows(nLoopAF).Item("FNHSysMatSizeId")
                            tAfterFTSizeSpecDesc = oDBdtSubOrderNoSizeSpecAF.Rows(nLoopAF).Item("FTSizeSpecDesc")
                            tAfterFTSizeSpecExtension = oDBdtSubOrderNoSizeSpecAF.Rows(nLoopAF).Item("FTSizeSpecExtension")

                            tAfterFTSizeSpecTolerant = oDBdtSubOrderNoSizeSpecSrcAF.Rows(nLoopAF).Item("FTSizeSpecTolerant")

                            If tPostFTOrderNo = tAfterFTOrderNo And tPostFTSubOrderNo = tAfterFTSubOrderNo And nPostFNSeq = nAfterFNSeq And tPostFNHSysMatSizeId = tAfterFNHSysMatSizeId Then

                                oDBdtPostEditSizeSpec = Nothing
                                oDBdtAfterEditSizeSpec = Nothing

                                oDBdtPostEditSizeSpec = oDBdtSubOrderNoSizeSpecBF.Clone()
                                oDBdtAfterEditSizeSpec = oDBdtSubOrderNoSizeSpecAF.Clone()

                                If oDBdtSubOrderNoSizeSpecBF.Select("FTOrderNo = '" & tPostFTOrderNo & "' AND FTSubOrderNo = '" & tPostFTSubOrderNo & "' AND FNSeq = " & nPostFNSeq & " AND FNHSysMatSizeId = '" & tPostFNHSysMatSizeId & "'").Length > 0 Then
                                    Dim oItem As DataRow

                                    oItem = oDBdtPostEditSizeSpec.NewRow()

                                    oItem.Item("FTOrderNo") = tPostFTOrderNo
                                    oItem.Item("FTSubOrderNO") = tPostFTSubOrderNo
                                    oItem.Item("FNSeq") = nPostFNSeq
                                    oItem.Item("FNHSysMatSizeId") = tPostFNHSysMatSizeId
                                    oItem.Item("FTSizeSpecDesc") = tPostFTSizeSpecDesc
                                    oItem.Item("FTSizeSpecExtension") = tPostFTSizeSpecExtension

                                    oItem.Item("FTSizeSpecTolerant") = tPostFTSizeSpecTolerant

                                    oDBdtPostEditSizeSpec.Rows.Add(oItem)
                                    oDBdtPostEditSizeSpec.AcceptChanges()
                                End If

                                If oDBdtSubOrderNoSizeSpecAF.Select("FTOrderNO = '" & tAfterFTOrderNo & "' AND FTSubOrderNo = '" & tAfterFTSubOrderNo & "' AND FNSeq = " & nAfterFNSeq & " AND FNHSysMatSizeId = '" & tAfterFNHSysMatSizeId & "'").Length > 0 Then
                                    Dim oItem As DataRow

                                    oItem = oDBdtAfterEditSizeSpec.NewRow()

                                    oItem.Item("FTOrderNo") = tAfterFTOrderNo
                                    oItem.Item("FTSubOrderNO") = tAfterFTSubOrderNo
                                    oItem.Item("FNSeq") = nAfterFNSeq
                                    oItem.Item("FNHSysMatSizeId") = tAfterFNHSysMatSizeId
                                    oItem.Item("FTSizeSpecDesc") = tAfterFTSizeSpecDesc
                                    oItem.Item("FTSizeSpecExtension") = tAfterFTSizeSpecExtension

                                    oItem.Item("FTSizeSpecTolerant") = tAfterFTSizeSpecTolerant

                                    oDBdtAfterEditSizeSpec.Rows.Add(oItem)
                                    oDBdtAfterEditSizeSpec.AcceptChanges()
                                End If

                                '...Write changed log
                                '...compare by FTOrderNo, FTSubOrderNo, FNSeq ==> {FTSizeSpecDesc, FTSizeSpecExtension, FTTolerant)
                                Call PostSaveSubOrderNoSizeSpec("[" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_SizeSpec]", Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text & "|" & Me.FNHSysStyleId.Text & "|" & Me.otab.TabPages(Me.otab.SelectedTabPageIndex).Text & "|" & nPostFNSeq & "|" & tPostFNHSysMatSizeId)

                                Exit For

                            End If

                        Next nLoopAF

                    Next nLoopBF

                End If
                '--------------------------------------------------------------------------------------------------------------------------------------------

                tSql = "SELECT TOP 1 A.FTStateApprovedSizeSpec FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "';"

                If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "0" Then
                    DTAfterRevisedSizeSpec = Nothing
                Else
                    DTAfterRevisedSizeSpec = HI.Conn.SQLConn.GetDataTable(tSqlRevisedSpec, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                End If

                Call PostSaveSubOrderNoRevisedSizeSpec("", "")

                '...refresh browse data size specify info
                Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(Me.FTOrderNo.Properties.Tag.ToString(), Me.FTSubOrderNo.Properties.Tag.ToString())
                Call W_PRCxInitNewRowSizeSpec(CType(Me.ogdSizeSpec.DataSource, System.Data.DataTable))

                Return True

            Catch ex As Exception
                'MsgBox(ex.Message().ToString() & Environment.NewLine & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)

                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                Return False
            End Try

        Catch ex As Exception
            MsgBox(ex.Message().ToString() & Environment.NewLine & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)
            Return False
        End Try

    End Function

    Private Function W_PRCbDeleteSourceSizeSpec(ByVal oDBdtSrc As System.Data.DataTable, ByVal pnRowIndx As Integer) As Boolean

        If oDBdtSrc.Rows.Count = 0 Then Return True

        Try
            Dim tSql As String

            tSql = ""
            tSql = "SELECT TOP 1 A.FNSeq"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
            tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
            tSql &= Environment.NewLine & "      AND A.FNSeq = " & pnRowIndx + 1
            tSql &= Environment.NewLine & "ORDER BY A.FNHSysMatSizeId ASC, A.FNSeq ASC; "

            Dim nCntRecord As Integer

            nCntRecord = Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, 0))

            If nCntRecord = 0 Then
                If oDBdtSrc.Rows(pnRowIndx).RowState <> DataRowState.Deleted Then
                    oDBdtSrc.Rows(pnRowIndx).Delete()

                    oDBdtSrc.AcceptChanges()

                    '...re-sequence source for datatable
                    For nLoopRowSrc As Integer = 0 To oDBdtSrc.Rows.Count - 1
                        oDBdtSrc.Rows(nLoopRowSrc).Item("FNSeq") = nLoopRowSrc + 1
                    Next nLoopRowSrc

                    oDBdtSrc.AcceptChanges()

                End If

                Me.ogdSizeSpec.DataSource = oDBdtSrc
                Me.ogdSizeSpec.Refresh()
                Me.ogvSizeSpec.RefreshData()

                Return False

            Else

                HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
                HI.Conn.SQLConn.SqlConnectionOpen()
                HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
                HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction

                Try
                    '...delete all FNHSysMatSizeId data by sequence
                    Dim nFNSeqDel As Integer
                    Integer.TryParse(oDBdtSrc.Rows(pnRowIndx).Item("FNSeq"), nFNSeqDel)

                    tSql = ""
                    tSql = "DELETE A"
                    tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A"
                    tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                    tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
                    tSql &= Environment.NewLine & "      AND A.FNSeq = " & nFNSeqDel & ";"

                    If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) <= 0 Then
                        HI.Conn.SQLConn.Tran.Rollback()
                        HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                        HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                        Return False
                    End If

                    '...re-squence source from database merchan dbo.[TMERTOrderSub_SizeSpec]
                    Dim oStrBuilder As New System.Text.StringBuilder()

                    oStrBuilder.Remove(0, oStrBuilder.Length)

                    oStrBuilder.AppendLine("UPDATE A")
                    oStrBuilder.AppendLine("SET A.FNSeq = B.FNReSeq")
                    oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A LEFT JOIN (SELECT DENSE_RANK() OVER(ORDER BY A.FNSeq) AS FNReSeq, A.FNSeq, A.FNHSysMatSizeId, A.FTSizeSpecDesc, A.FTSizeSpecExtension, A.FTTolerant, A.FTOrderNo, A.FTSubOrderNo")
                    oStrBuilder.AppendLine("													                                                                  FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS A")
                    oStrBuilder.AppendLine("													                                                                  WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                    oStrBuilder.AppendLine("														                                                                    AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "') AS B ON A.FTOrderNo = B.FTOrderNo AND A.FTSubOrderNo = B.FTSubOrderNo")
                    oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                    oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
                    oStrBuilder.AppendLine("      AND A.FNSeq = B.FNSeq;")

                    tSql = ""
                    tSql = oStrBuilder.ToString()

                    If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) <= 0 Then
                        HI.Conn.SQLConn.Tran.Rollback()
                        HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                        HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                        Return False
                    End If

                    HI.Conn.SQLConn.Tran.Commit()
                    HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                    HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                    If oDBdtSrc.Rows(pnRowIndx).RowState <> DataRowState.Deleted Then
                        oDBdtSrc.Rows(pnRowIndx).Delete()
                    End If

                    oDBdtSrc.AcceptChanges()

                    '...re-sequence source for datatable
                    For nLoopRowSrc As Integer = 0 To oDBdtSrc.Rows.Count - 1
                        oDBdtSrc.Rows(nLoopRowSrc).Item("FNSeq") = nLoopRowSrc + 1
                    Next nLoopRowSrc

                    oDBdtSrc.AcceptChanges()

                    Me.ogdSizeSpec.DataSource = oDBdtSrc
                    Me.ogdSizeSpec.Refresh()
                    Me.ogvSizeSpec.RefreshData()

                    Return True
                Catch ex As Exception

                    HI.Conn.SQLConn.Tran.Rollback()
                    HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                    HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                    Return False
                End Try

            End If

        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & Environment.NewLine & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)
            Return False
        End Try

    End Function

    Private Function W_PRCbDeleteDataSizeSpec() As Boolean

        If Me.FTOrderNo.Properties.Tag.ToString() = "" Then Return False
        If Me.FTSubOrderNo.Properties.Tag.ToString() = "" Then Return False

        Try
            Dim oGridView As DevExpress.XtraGrid.Views.Grid.GridView
            Dim nRowIndx As Integer
            Dim nTopVisibleIndx As Integer

            oGridView = Me.ogdSizeSpec.Views(0)

            If Not oGridView Is Nothing Then
                nRowIndx = oGridView.FocusedRowHandle
                nTopVisibleIndx = oGridView.TopRowIndex
            End If

            If nRowIndx < 0 Then Return False

            If Not (oGridView.PostEditor() And oGridView.UpdateCurrentRow()) Then
                Return False
            End If

            If HI.MG.ShowMsg.mConfirmProcess(MG.ShowMsg.ProcessType.mDelete, ) = True Then

                If Not W_PRCbDeleteSourceSizeSpec(CType(Me.ogdSizeSpec.DataSource, System.Data.DataTable), nRowIndx) Then Return False

                Dim oGridView1 As DevExpress.XtraGrid.Views.Grid.GridView = Me.ogdSizeSpec.Views(0)
                If nRowIndx >= oGridView1.RowCount Then nRowIndx = oGridView1.RowCount - 1
                oGridView1.FocusedRowHandle = nRowIndx

            End If

            Return True
        Catch ex As Exception
            'Throw New Exception(ex.Message().ToString() & Environment.NewLine & ex.StackTrace.ToString())
            Return False
        End Try

    End Function

    Private Function W_PRCbSendApproveOrder(ByVal ptOrderNo As String) As Boolean
        Dim _bSendApprove As Boolean = False
        Try
            Dim oDBdt As DataTable
            Dim tSql As String
            Dim nFNJobState As Integer
            Dim tFTJobStateDesc As String = ""

            tSql = ""
            tSql = "SELECT TOP 1 A.FNJobState"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A WITH(NOLOCK)"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(ptOrderNo) & "'"

            If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") <> "1" Then
                'tSql = ""
                'tSql = "SELECT ISNULL(A.FNJobState, 0) AS FNJobState"
                'tSql &= Environment.NewLine & "       ,ISNULL((SELECT L1." & IIf(HI.ST.Lang.Language = HI.ST.Lang.eLang.EN, "FTNameEN", "FTNameTH")
                'tSql &= Environment.NewLine & "                FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_SYSTEM) & "]..[HSysListData] AS L1 WITH(NOLOCK)"
                'tSql &= Environment.NewLine & "                WHERE  L1.FTListName = N'FNJobState'"
                'tSql &= Environment.NewLine & "                       AND L1.FNListIndex = ISNULL(A.FNJobState,0)),'') AS FTJobStateDesc"
                'tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A WITH(NOLOCK)"
                'tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(ptOrderNo.Trim()) & "'"

                'oDBdt = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                'If oDBdt.Rows.Count > 0 Then
                '    nFNJobState = oDBdt.Rows(0).Item("FNJobState")
                '    tFTJobStateDesc = oDBdt.Rows(0).Item("FTJobStateDesc").ToString()
                'Else
                '    nFNJobState = 0
                'End If

                'Select Case nFNJobState
                '    Case 0
                '        If HI.MG.ShowMsg.mConfirmProcess("", 1403110003, Me.FTOrderNo.Text.Trim()) = True Then

                Try
                    tSql = ""
                    tSql = "UPDATE A"
                    tSql &= Environment.NewLine & "SET A.FTStateOrderApp = '0', A.FNJobState = 1"
                    tSql &= Environment.NewLine & "   ,A.FTStateBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    tSql &= Environment.NewLine & "   ,A.FDStateDate = " & HI.UL.ULDate.FormatDateDB
                    tSql &= Environment.NewLine & "   ,A.FTStateTime = " & HI.UL.ULDate.FormatTimeDB
                    '...re-send approved after cancel job
                    '==============================================================================================================================
                    tSql &= Environment.NewLine & "   ,A.FTCancelAppBy = NULL"
                    tSql &= Environment.NewLine & "   ,A.FDCancelAppDate = NULL"
                    tSql &= Environment.NewLine & "   ,A.FDCancelAppTime = NULL"
                    tSql &= Environment.NewLine & "   ,A.FTCancelAppRemark = NULL"
                    '==============================================================================================================================
                    tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A"
                    tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(ptOrderNo.Trim()) & "';"

                    HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
                    HI.Conn.SQLConn.SqlConnectionOpen()
                    HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
                    HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction


                    If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) <= 0 Then
                        HI.Conn.SQLConn.Tran.Rollback()
                        HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                        HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                        Return False
                    End If

                    HI.Conn.SQLConn.Tran.Commit()
                    HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                    HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                    _bSendApprove = True

                    Me.FNJobState.SelectedIndex = 1

                Catch ex As Exception
                    'Throw New Exception(ex.Message().ToString() & Environment.NewLine & ex.StackTrace.ToString())
                    HI.Conn.SQLConn.Tran.Rollback()
                    HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                    HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                End Try

                ' End If

                'Case 1
                'If HI.MG.ShowMsg.mConfirmProcess("", 1403110006, Me.FTOrderNo.Text.Trim()) = True Then
                '    Try
                '        tSql = ""
                '        tSql = "UPDATE A"
                '        tSql &= Environment.NewLine & "SET A.FNJobState = NULL"
                '        tSql &= Environment.NewLine & "   ,A.FTStateBy = NULL"
                '        tSql &= Environment.NewLine & "   ,A.FDStateDate = NULL"
                '        tSql &= Environment.NewLine & "   ,A.FTStateTime = NULL"
                '        tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A"
                '        tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(ptOrderNo.Trim()) & "';"

                '        HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
                '        HI.Conn.SQLConn.SqlConnectionOpen()
                '        HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
                '        HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction


                '        If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) <= 0 Then
                '            HI.Conn.SQLConn.Tran.Rollback()
                '            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                '            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                '            Return False
                '        End If

                '        HI.Conn.SQLConn.Tran.Commit()
                '        HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                '        HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                '        Me.FNJobState.SelectedIndex = 0

                '    Catch ex As Exception
                '        Throw New Exception(ex.Message().ToString() & Environment.NewLine & ex.StackTrace.ToString())
                '        HI.Conn.SQLConn.Tran.Rollback()
                '        HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                '        HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                '    End Try

                'End If

                '        Case Else

                'Select Case HI.ST.Lang.Language

                '    Case HI.ST.Lang.eLang.TH
                '        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, "ส่งอนุมัติเลขที่ใบสั่งผลิต.", "ไม่สามารถทำการส่งอนุมัติใบสั่งผลิตนี้ได้." & Environment.NewLine & " เลขที่ใบสั่งผลิต '" & ptOrderNo & "' สถานะปัจจุบันคือ " & tFTJobStateDesc)

                '    Case Else
                '        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, "Send Approve Factory Order No.", "Cannot Send Approve Factory Order No. " & Environment.NewLine & " Job '" & ptOrderNo & "' current  state is " & tFTJobStateDesc)
                'End Select

                '    End Select

            End If

        Catch ex As Exception

        End Try

        Return _bSendApprove

    End Function

    Private Sub PrepareForm()

        Dim _Str As String = ""
        Dim _objId As Integer
        Dim _dt As DataTable
        Dim _StrQuery As String = ""
        Dim _SortField As String = ""
        Dim _ColCount As Integer = 0
        Dim _StartX As Double = 0
        Dim _StartY As Double = 0
        Dim _CtrLv As Double = -1
        Dim _CtrHeight As Double = 0
        Dim _dtgrpobj As New DataTable

        '------ Get Form Object ID-------------------
        _Str = "SELECT TOP 1 FTBaseName, FTTableName AS FHSysTableName, FNFormObjID, FTBaseName + '.' + FTPrefix + '.' + FTTableName AS FTTableName, FTSortField, FNFormPopUpWidth ,FNFormPopUpHeight"
        _Str &= Environment.NewLine & "FROM HSysTableObjForm WITH(NOLOCK) "
        _Str &= Environment.NewLine & "WHERE FTDynamicFormName='" & HI.UL.ULF.rpQuoted("wOrder") & "' "
        _dt = HI.Conn.SQLConn.GetDataTable(_Str, Conn.DB.DataBaseName.DB_SYSTEM)

        If _dt.Rows.Count > 0 Then

            _objId = Integer.Parse(_dt.Rows(0)!FNFormObjID.ToString)
            Me.SysDBName = _dt.Rows(0)!FTBaseName.ToString
            Me.SysTableName = _dt.Rows(0)!FHSysTableName.ToString
            Me.TableName = _dt.Rows(0)!FTTableName.ToString

            _SortField = _dt.Rows(0)!FTSortField.ToString

            _Str = "SELECT FTBaseName, FTPrefix, FTTableName, FNGrpObjID, FNGrpObjSeq, FNFormObjID, FNGenFormObj, FNGenFormObjSeq, FTDynamicFormName, FTSortField, "
            _Str &= Environment.NewLine & "FNFormWidth, FNFormHeight, FNFormPopUpWidth, FNFormPopUpHeight, FTAssemBlyName, FTAssFormName, FTPropertyInfo"
            _Str &= Environment.NewLine & "FROM HSysTableObjForm  WITH(NOLOCK)  "
            _Str &= Environment.NewLine & "WHERE (FNGrpObjID =" & _objId & ")"
            _Str &= Environment.NewLine & "ORDER BY  CASE WHEN FNFormObjID = " & _objId & " THEN 0 ELSE 1 END, FNGrpObjSeq"
            _dtgrpobj = HI.Conn.SQLConn.GetDataTable(_Str, Conn.DB.DataBaseName.DB_SYSTEM)
            '------ Get Form Object Gen Grid-------------------
            _Str = " EXEC SP_GETOBJ_DYNAMIC " & _objId & ""
            _dt = HI.Conn.SQLConn.GetDataTable(_Str, Conn.DB.DataBaseName.DB_SYSTEM)
            If _dt.Rows.Count > 0 Then
                For Each Row As DataRow In _dtgrpobj.Rows
                    Select Case Row!FNGenFormObj.ToString
                        Case "H"
                            Dim _ch As New HI.TL.DynamicForm(_objId, Val(Row!FNFormObjID.ToString), _dt, Me)
                            _ch.SysObjID = Val(Row!FNFormObjID.ToString)
                            _ch.SysTableName = Row!FTTableName.ToString
                            _ch.SysDBName = Row!FTBaseName.ToString
                            _FormHeader.Add(_ch)
                        Case "G"
                            'Dim _gd As New HI.TL.DynamicGrid(_objId, Val(Row!FNFormObjID.ToString), _dt, ogvdetail)
                            '_gd.SysObjID = Val(Row!FNFormObjID.ToString)
                            '_gd.SysTableName = Row!FTTableName.ToString
                            '_gd.SysDBName = Row!FTBaseName.ToString
                            '_FormGridDetail.Add(_gd)
                    End Select
                Next

            End If

        End If

        _dt.Dispose()
        _dtgrpobj.Dispose()

    End Sub

#End Region

#Region "Event Handle"

#End Region

    Private Sub FTOrderNo_ButtonClick(ByVal sender As Object, ByVal e As DevExpress.XtraEditors.Controls.ButtonPressedEventArgs) Handles FTOrderNo.ButtonClick
        Try
            Select Case e.Button.Kind
                Case DevExpress.XtraEditors.Controls.ButtonPredefines.Ellipsis
                    '...Nothing (Dynamic Handle : browse data item)
                Case DevExpress.XtraEditors.Controls.ButtonPredefines.Plus

                    '...modify by tid 2014/05/23
                    '-------------------------------------------------------------------------------------------------------------------------------
                    RemoveHandler FTOrderNo.EditValueChanged, AddressOf HI.TL.HandlerControl.DynamicButtonedit_EditValueChanged

                    If Me.FNHSysCmpId.Text.Trim = "" Or Me.FNHSysCmpRunId.Text.Trim = "" Or Me.FNHSysStyleId.Text.Trim = "" Then
                        Me.FTOrderNo.Properties.Tag = ""
                        Me.FTOrderNo.Text = ""

                        AddHandler FTOrderNo.EditValueChanged, AddressOf HI.TL.HandlerControl.DynamicButtonedit_EditValueChanged

                        Exit Sub
                    End If
                    '-------------------------------------------------------------------------------------------------------------------------------

                    'REM 2014/05/23 RemoveHandler FTOrderNo.EditValueChanged, AddressOf HI.TL.HandlerControl.DynamicButtonedit_EditValueChanged
                    RemoveHandler FTOrderNo.Leave, AddressOf HI.TL.HandlerControl.DynamicButtonedit_LeaveOnly

                    '...New data item
                    Dim _Form As Object = CType(sender, DevExpress.XtraEditors.ButtonEdit).FindForm

                    Dim T As System.Type = _Form.GetType()

                    With CType(sender, DevExpress.XtraEditors.ButtonEdit)

                        Dim _pdbnameinfo As PropertyInfo
                        Dim _ptablenameinfo As PropertyInfo
                        Dim _pdoctypeinfo As PropertyInfo

                        Dim _minfo As MethodInfo

                        _pdbnameinfo = T.GetProperty("SysDBName")
                        _ptablenameinfo = T.GetProperty("SysTableName")
                        _pdoctypeinfo = T.GetProperty("SysDocType")
                        _minfo = T.GetMethod("DefaultsData")

                        If Not (_pdbnameinfo Is Nothing) AndAlso Not (_ptablenameinfo Is Nothing) AndAlso Not (_pdoctypeinfo Is Nothing) Then
                            REM 2014/05/23
                            '-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                            'HI.TL.HandlerControl.ClearControl(_Form)
                            '.Text = HI.TL.Document.GetDocumentNo(_pdbnameinfo.GetValue(_Form, Nothing).ToString, _ptablenameinfo.GetValue(_Form, Nothing).ToString, _pdoctypeinfo.GetValue(_Form, Nothing).ToString, True, Me.FNHSysCmpRunId.Text.Trim())
                            'REM 2014/05/14 .Text = HI.TL.Document.GetDocumentNo(_pdbnameinfo.GetValue(_Form, Nothing).ToString, _ptablenameinfo.GetValue(_Form, Nothing).ToString, _pdoctypeinfo.GetValue(_Form, Nothing).ToString, True, _tPreFixCustOrderNo)
                            'If Not (_minfo Is Nothing) Then
                            '    _minfo.Invoke(_Form, Nothing)
                            'End If
                            '-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                            REM 2014/05/23

                            '=====================================================================================================================================================================================================================================
                            Dim nFNHSysCmpId As Integer
                            Dim nFNHSysCmpRunId As Integer
                            Dim nFNHSysStyleId As Integer

                            Dim tFNHSysCmpId As String = Me.FNHSysCmpId.Text.Trim
                            Dim tFNHSysCmpRunId As String = Me.FNHSysCmpRunId.Text.Trim
                            Dim tFNHSysStyleId As String = Me.FNHSysStyleId.Text.Trim

                            nFNHSysCmpId = CInt(Me.FNHSysCmpId.Properties.Tag)
                            nFNHSysCmpRunId = CInt(Me.FNHSysCmpRunId.Properties.Tag)
                            nFNHSysStyleId = CInt(Me.FNHSysStyleId.Properties.Tag)

                            HI.TL.HandlerControl.ClearControl(_Form)

                            If nFNHSysCmpId > 0 Then
                                Me.FNHSysCmpId.Text = tFNHSysCmpId
                            End If

                            If nFNHSysCmpRunId > 0 Then
                                Me.FNHSysCmpRunId.Text = tFNHSysCmpRunId
                            End If

                            If nFNHSysStyleId > 0 Then
                                Me.FNHSysStyleId.Text = tFNHSysStyleId
                            End If
                            '=====================================================================================================================================================================================================================================

                            .Text = HI.TL.Document.GetDocumentNo(_pdbnameinfo.GetValue(_Form, Nothing).ToString, _ptablenameinfo.GetValue(_Form, Nothing).ToString, _pdoctypeinfo.GetValue(_Form, Nothing).ToString, True, Me.FNHSysCmpRunId.Text.Trim())

                            If Not (_minfo Is Nothing) Then
                                _minfo.Invoke(_Form, Nothing)
                            End If

                        End If

                    End With

                    AddHandler FTOrderNo.EditValueChanged, AddressOf HI.TL.HandlerControl.DynamicButtonedit_EditValueChanged

                Case Else
                    '...nothing
            End Select

        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)
        End Try

    End Sub

    Private Sub FTOrderNo_EditValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles FTOrderNo.EditValueChanged
        If (_FormLoad) Then Exit Sub
        Try
            If FTOrderNo.Text.Trim() <> "" Then

                If FTOrderNo.Properties.Tag.ToString = "" Then
                    Dim _Str As String = "SELECT TOP 1 FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] WITH(NOLOCK) WHERE FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' "
                    FTOrderNo.Properties.Tag = HI.Conn.SQLConn.GetField(_Str, Conn.DB.DataBaseName.DB_MERCHAN, "")
                Else

                End If

                If Me.FNHSysCustId.Text.Trim() <> "" Then
                    If FNHSysCustId.Properties.Tag.ToString = "" Then
                        Dim _Str As String = "SELECT TOP 1 FNHSysCustId FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCustomer] WITH(NOLOCK) WHERE FTCustCode = N'" & HI.UL.ULF.rpQuoted(Me.FNHSysCustId.Text.Trim()) & "' "
                        FNHSysCustId.Properties.Tag = HI.Conn.SQLConn.GetField(_Str, Conn.DB.DataBaseName.DB_MASTER, "")
                    End If
                Else
                    If Me.FNHSysStyleId.Properties.Tag.ToString <> "" Then
                        Dim _Str As String
                        Dim oDBdt As DataTable
                        _Str = "SELECT A.FNHSysStyleId, A.FNHSysCustId, B.FTCustCode, ISNULL(B.FTCustNameEN, '') AS FTCustNameEN, ISNULL(B.FTCustNameTH,'') AS FTCustNameTH"
                        _Str &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS A WITH(NOLOCK) LEFT JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TCNMCustomer] AS B WITH(NOLOCK) ON A.FNHSysCustId = B.FNHSysCustId"
                        _Str &= Environment.NewLine & "WHERE A.FNHSysStyleId = " & Val(Me.FNHSysStyleId.Properties.Tag.ToString())
                        oDBdt = HI.Conn.SQLConn.GetDataTable(_Str, Conn.DB.DataBaseName.DB_MASTER)
                        If oDBdt.Rows.Count > 0 Then
                            Me.FNHSysCustId.Properties.Tag = oDBdt.Rows(0).Item("FNHSysCustId")
                            Me.FNHSysCustId.Text = oDBdt.Rows(0).Item("FTCustCode")

                            Select Case HI.ST.Lang.Language
                                Case HI.ST.Lang.eLang.TH
                                    Me.FNHSysCustId_None.Text = oDBdt.Rows(0).Item("FTCustNameTH").ToString()
                                Case Else
                                    Me.FNHSysCustId_None.Text = oDBdt.Rows(0).Item("FTCustNameEN").ToString()

                            End Select

                        End If

                    End If

                End If

                If W_PRCbLoadMainOrderInfo(Me.FTOrderNo.Text.Trim()) = False Then

                End If

                If Me.FNHSysStyleId.Text = "" Then
                    Dim tFTStyleCode As String
                    Dim _Str As String
                    _Str = ""
                    _Str = "SELECT B.FTStyleCode"
                    _Str &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrder] AS A WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "].dbo.[TMERMStyle] AS B WITH(NOLOCK) ON A.FNHSysStyleId = B.FNHSysStyleId"
                    _Str &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "'"

                    tFTStyleCode = HI.Conn.SQLConn.GetField(_Str, HI.Conn.DB.DataBaseName.DB_MERCHAN, "")

                    If tFTStyleCode <> "" Then
                        Me.FNHSysStyleId.Text = tFTStyleCode
                    End If

                End If

                Call W_PRCbShowBrowseDataCurrencyInfo()
                Call W_PRCbShowBrowseDataOrderBreakdownInfo()

                Me.ogdSubOrdBreakDown.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
                Me.ogdSubOrdBreakDownSummary.Width = ogdSubOrdBreakDown.Width

                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrder)
                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)

                Me.FNHSysContinentId.Properties.Tag = "" : Me.FNHSysContinentId.Text = "" : Me.FNHSysContinentId_None.Text = ""
                Me.FNHSysCountryId.Properties.Tag = "" : Me.FNHSysCountryId.Text = "" : Me.FNHSysCountryId_None.Text = ""
                Me.FNHSysProvinceId.Properties.Tag = "" : Me.FNHSysProvinceId.Text = "" : Me.FNHSysProvinceId_None.Text = ""
                Me.FNHSysShipModeId.Properties.Tag = "" : Me.FNHSysShipModeId.Text = "" : Me.FNHSysShipModeId_None.Text = ""
                Me.FNHSysShipPortId.Properties.Tag = "" : Me.FNHSysShipPortId.Text = "" : Me.FNHSysShipPortId_None.Text = ""
                Me.FNHSysCurId.Properties.Tag = "" : Me.FNHSysCurId.Text = "" : Me.FNHSysCurId_None.Text = ""
                Me.FNHSysGenderId.Properties.Tag = "" : Me.FNHSysGenderId.Text = "" : Me.FNHSysGenderId_None.Text = ""
                Me.FNHSysUnitId.Properties.Tag = "" : Me.FNHSysUnitId.Text = "" : Me.FNHSysUnitId_None.Text = ""
                Me.FTUpdUserSubOrder.Text = "" : Me.FDUpdDate_OrderSub.Text = "" : Me.FTUpdTime_OrderSub.Text = ""
                Me.FDSubOrderDate.Text = ""
                Me.FDProDate.Text = ""
                Me.FDShipDate.Text = ""
                Me.FNSubOrderQty.Value = 0 : Me.FNSubOrderAmt.Value = 0
                Me.FNSubOrderGarmentTestQty.Value = 0 : Me.FNSubOrderGarmentTestAmnt.Value = 0
                Me.FTRemarkSubOrderNo.Text = ""
                Me.FTStateEmb.Checked = False : Me.FTStatePrint.Checked = False : Me.FTStateHeat.Checked = False : Me.FTStateLaser.Checked = False : Me.FTStateWindows.Checked = False

                Me.FTSubOrderNoDivertRef.Checked = False : Me.FTSubOrderNoDivertRef.Visible = False

                Me.ogdSubOrdBreakDown.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
                Me.ogdSubOrdBreakDownSummary.Width = ogdSubOrdBreakDown.Width

                Me.ogdSizeSpec.DataSource = Nothing
                Call W_PRCbRemoveGridViewColumn(Me.ogvSizeSpec)

                Dim tFTMainMaterialDesc As String
                Select Case HI.ST.Lang.Language
                    Case HI.ST.Lang.eLang.TH
                        tFTMainMaterialDesc = HI.Conn.SQLConn.GetField("EXEC SP_GETMAINMATERIALDESC_FACTORY_ORDER N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "', N'TH' ;", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                    Case HI.ST.Lang.eLang.EN
                        tFTMainMaterialDesc = HI.Conn.SQLConn.GetField("EXEC SP_GETMAINMATERIALDESC_FACTORY_ORDER N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "', N'EN' ;", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                    Case Else
                        tFTMainMaterialDesc = HI.Conn.SQLConn.GetField("EXEC SP_GETMAINMATERIALDESC_FACTORY_ORDER N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "', N'EN' ;", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                End Select

                Me.FTMainMaterial.Text = tFTMainMaterialDesc

                Dim tFTCombination As String
                tFTCombination = HI.Conn.SQLConn.GetField("SELECT ISNULL(A.FTCombination,'') AS FTCombination FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "';", HI.Conn.DB.DataBaseName.DB_MERCHAN, "")

                Me.FTCombination.Text = tFTCombination

                Call LoadImangeStyle(Integer.Parse(Val(Me.FNHSysStyleId.Properties.Tag.ToString)))

            Else

                Call FormRefresh()

            End If

            '------ตรวจสอบ Order มาจากการ Import ห้ามแก้ไข
            Dim _tmpnameimport As String
            Dim _Qry As String = ""
            _Qry = "SELECT TOP 1 FTImportUser FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder AS A WITH(NOLOCK) WHERE FTOrderNo ='" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "' "
            _tmpnameimport = HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "")

            'FNHSysVenderPramId.Properties.ReadOnly = (_tmpnameimport <> "")
            'FNHSysVenderPramId.Properties.Buttons(0).Enabled = (_tmpnameimport = "")
            'FNHSysPlantId.Properties.ReadOnly = (_tmpnameimport <> "")
            'FNHSysPlantId.Properties.Buttons(0).Enabled = (_tmpnameimport = "")
            'FNHSysBuyGrpId.Properties.ReadOnly = (_tmpnameimport <> "")
            'FNHSysBuyGrpId.Properties.Buttons(0).Enabled = (_tmpnameimport = "")
            FNHSysMerTeamId.Properties.ReadOnly = (_tmpnameimport <> "")
            FNHSysMerTeamId.Properties.Buttons(0).Enabled = (_tmpnameimport = "")
            '------ตรวจสอบ Order มาจากการ Import ห้ามแก้ไข

            Call PROC_SETxShowBrowsePackingCartonInfo()

            FNOrderType.Enabled = (FTOrderNo.Properties.Tag.ToString = "")

            Dim _FNHSysStyleIdPull As Integer = 0

            _Qry = "SELECT TOP 1 FNHSysStyleIdPull FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder AS A WITH(NOLOCK) WHERE FTOrderNo ='" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "' "
            _FNHSysStyleIdPull = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "0"))


            FTOrderNoRef.Properties.ReadOnly = (_FNHSysStyleIdPull > 0)
            FTOrderNoRef.Properties.Buttons(0).Enabled = (FTOrderNoRef.Properties.ReadOnly = False)

            FNHSysCmpRunId.Properties.ReadOnly = Not (FTOrderNo.Properties.Tag.ToString = "")
            FNHSysCmpRunId.Properties.Buttons(0).Enabled = (FTOrderNo.Properties.Tag.ToString = "")

            FNOrderCmp = Integer.Parse(Val(FNHSysCmpId.Properties.Tag.ToString))

        Catch ex As Exception


        End Try

    End Sub

    Private Sub FTSubOrderNo_ButtonClick(ByVal sender As System.Object, ByVal e As DevExpress.XtraEditors.Controls.ButtonPressedEventArgs) Handles FTSubOrderNo.ButtonClick
        Try
            Select Case e.Button.Kind
                Case DevExpress.XtraEditors.Controls.ButtonPredefines.Ellipsis
                    '...Nothing browse data Item Sub Order

                    If Val(e.Button.Tag.ToString) <= 0 Then Exit Sub
                    With New HI.TL.wDynamicBrowseInfo(Val(e.Button.Tag.ToString), Me)

                        Dim _form As Object = CType(sender, DevExpress.XtraEditors.ButtonEdit).Parent.FindForm

                        .BrowseID = Val(e.Button.Tag.ToString)

                        .X = MousePosition.X
                        .Y = MousePosition.Y

                        Dim _Strsql As String
                        Dim _dtbrw As New DataTable
                        Dim _dtret As New DataTable

                        Dim _BrowseCmd As String = ""
                        Dim _BrowseSortCmd As String = ""
                        Dim _BrowseWhereCmd As String = ""
                        Dim _FTBrwCmdField As String = ""
                        Dim _FTBrwCmdFieldOptional As String = ""

                        _Strsql = " SELECT  TOP 1    BrwID, "

                        If HI.ST.Lang.Language = ST.Lang.eLang.TH Then
                            _Strsql &= vbCrLf & " FTBrwCmdTH AS FTBrwCmd "
                        Else
                            _Strsql &= vbCrLf & " FTBrwCmdEN AS FTBrwCmd "
                        End If

                        _Strsql &= vbCrLf & ", BrwRetID,FTConField,FTBrwCmdSort,FTBrwCmdWhere,FTBrwCmdField,FTBrwCmdFieldOptional "
                        _Strsql &= vbCrLf & " FROM  HSysBrowse  With (NOLOCK) "
                        _Strsql &= vbCrLf & " WHERE BrwID=" & .BrowseID & " "

                        _dtbrw = HI.Conn.SQLConn.GetDataTable(_Strsql, Conn.DB.DataBaseName.DB_SYSTEM)
                        _Strsql = ""

                        For Each Row As DataRow In _dtbrw.Rows
                            _Strsql = " SELECT  BrwRetID, FNSeq, FTBrwField, FTRetField,Convert(nvarchar(500),'') AS ValuesRet,FTStatePropertyTag "
                            _Strsql &= vbCrLf & " FROM  HSysBrowseRet With (NOLOCK) "
                            _Strsql &= vbCrLf & " WHERE BrwRetID=" & Val(Row!BrwRetID.ToString) & " "

                            _dtret = New DataTable
                            _dtret = HI.Conn.SQLConn.GetDataTable(_Strsql, Conn.DB.DataBaseName.DB_SYSTEM)


                            _BrowseCmd = Row!FTBrwCmd.ToString
                            _BrowseSortCmd = Row!FTBrwCmdSort.ToString
                            _BrowseWhereCmd = Row!FTBrwCmdWhere.ToString

                            _FTBrwCmdField = Row!FTBrwCmdField.ToString
                            _FTBrwCmdFieldOptional = Row!FTBrwCmdFieldOptional.ToString

                            _Strsql = Row!FTBrwCmd.ToString
                        Next

                        If _Strsql = "" Then Exit Sub


                        Dim _Where As String = ""

                        Dim I As Integer = 0
                        '------------Browse Where Require Field---------------
                        If _FTBrwCmdField <> "" Then
                            For Each _StrCon As String In _FTBrwCmdField.Split(",")

                                Dim _DataCon As String = ""
                                For Each ctrl As Object In _form.Controls.Find(_StrCon.Trim(), True)
                                    Select Case ctrl.GetType.FullName.ToString.ToUpper
                                        Case "DevExpress.XtraEditors.TextEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.TextEdit)
                                                _DataCon = .Text
                                            End With
                                        Case "DevExpress.XtraEditors.CalcEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.CalcEdit)
                                                _DataCon = .Value
                                            End With
                                        Case "DevExpress.XtraEditors.ButtonEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.ButtonEdit)
                                                If Microsoft.VisualBasic.Left(.Name.ToString, 6).ToUpper = "FNHSys".ToUpper Then
                                                    _DataCon = .Properties.Tag.ToString
                                                Else
                                                    _DataCon = .Text
                                                End If
                                            End With
                                        Case "DevExpress.XtraEditors.MemoEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.MemoEdit)
                                                _DataCon = .Text
                                            End With
                                        Case "DevExpress.XtraEditors.DateEdit".ToUpper

                                            With CType(ctrl, DevExpress.XtraEditors.DateEdit)
                                                Select Case .Properties.DisplayFormat.ToString
                                                    Case "dd/MM/yyyy"
                                                        _DataCon = HI.UL.ULDate.ConvertEnDB(.Text)
                                                    Case "dd/MM"
                                                        _DataCon = Microsoft.VisualBasic.Right(.Text, 2) & "/" & Microsoft.VisualBasic.Left(.Text, 2)
                                                    Case "MM/yyyy"
                                                        _DataCon = Microsoft.VisualBasic.Right(.Text, 4) & "/" & Microsoft.VisualBasic.Left(.Text, 2)
                                                    Case Else
                                                        _DataCon = .Text
                                                End Select
                                            End With

                                        Case "DevExpress.XtraEditors.CheckEdit".ToUpper

                                            With CType(ctrl, DevExpress.XtraEditors.CheckEdit)
                                                _DataCon = IIf(.Checked, "1", "0")
                                            End With

                                        Case "DevExpress.XtraEditors.ComboBoxEdit".ToUpper

                                            With CType(ctrl, DevExpress.XtraEditors.ComboBoxEdit)
                                                _DataCon = .Text
                                            End With

                                    End Select

                                    If _Where = "" Then
                                        _Where &= "     " & _StrCon & " ='" & _DataCon & "'  "
                                    Else
                                        _Where &= "   AND  " & _StrCon & " ='" & _DataCon & "'  "
                                    End If


                                Next
                            Next

                        End If

                        '------------Browse Where Require Field---------------

                        '------------Browse Where Optional Field---------------
                        If _FTBrwCmdFieldOptional <> "" Then
                            For Each _StrCon As String In _FTBrwCmdFieldOptional.Split(",")
                                Dim _DataCon As String = ""
                                For Each ctrl As Object In _form.Controls.Find(_StrCon.Trim(), True)
                                    Select Case ctrl.GetType.FullName.ToString.ToUpper
                                        Case "DevExpress.XtraEditors.TextEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.TextEdit)
                                                _DataCon = .Text
                                            End With
                                        Case "DevExpress.XtraEditors.CalcEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.CalcEdit)
                                                _DataCon = .Value
                                            End With
                                        Case "DevExpress.XtraEditors.ButtonEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.ButtonEdit)
                                                If Microsoft.VisualBasic.Left(.Name.ToString, 6).ToUpper = "FNHSys".ToUpper Then
                                                    _DataCon = .Properties.Tag.ToString
                                                Else
                                                    _DataCon = .Text
                                                End If
                                            End With
                                        Case "DevExpress.XtraEditors.MemoEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.MemoEdit)
                                                _DataCon = .Text
                                            End With
                                        Case "DevExpress.XtraEditors.DateEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.DateEdit)
                                                Select Case .Properties.DisplayFormat.ToString
                                                    Case "dd/MM/yyyy"
                                                        _DataCon = HI.UL.ULDate.ConvertEnDB(.Text)
                                                    Case "dd/MM"
                                                        _DataCon = Microsoft.VisualBasic.Right(.Text, 2) & "/" & Microsoft.VisualBasic.Left(.Text, 2)
                                                    Case "MM/yyyy"
                                                        _DataCon = Microsoft.VisualBasic.Right(.Text, 4) & "/" & Microsoft.VisualBasic.Left(.Text, 2)
                                                    Case Else
                                                        _DataCon = .Text
                                                End Select

                                            End With
                                        Case "DevExpress.XtraEditors.CheckEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.CheckEdit)
                                                _DataCon = IIf(.Checked, "1", "0")
                                            End With
                                        Case "DevExpress.XtraEditors.ComboBoxEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.ComboBoxEdit)
                                                _DataCon = .Text
                                            End With
                                    End Select

                                    If _DataCon <> "" Then
                                        If _Where = "" Then
                                            _Where &= "     " & _StrCon & " ='" & _DataCon & "'  "
                                        Else
                                            _Where &= "   AND  " & _StrCon & " ='" & _DataCon & "'  "
                                        End If
                                    End If
                                Next
                            Next
                        End If

                        '------------Browse Where Optional Field---------------
                        If _Where <> "" Then
                            If _BrowseWhereCmd = "" Then
                                _Where = "   WHERE  " & _Where
                            Else
                                _Where = "   AND  " & _Where
                            End If

                        End If

                        _dtbrw = New DataTable
                        _dtbrw = HI.Conn.SQLConn.GetDataTable(_Strsql & "  " & _BrowseWhereCmd & "  " & _Where & "  " & _BrowseSortCmd, Conn.DB.DataBaseName.DB_SYSTEM)

                        .Data = _dtbrw.Copy
                        .DataRetField = _dtret.Copy

                        _dtbrw.Dispose()
                        _dtret.Dispose()

                        .ShowDialog()

                        If Not (.ValuesReturn Is Nothing) Then
                            _form = CType(sender, DevExpress.XtraEditors.ButtonEdit).Parent.FindForm

                            For Each Row As DataRow In .DataRetField.Select("NOT(FTRetField IS NULL)")
                                For Each ctrl As Object In _form.Controls.Find(Row!FTRetField.ToString.Trim(), True)
                                    Select Case ctrl.GetType.FullName.ToString.ToUpper
                                        Case "DevExpress.XtraEditors.TextEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.TextEdit)
                                                .Text = Row!ValuesRet.ToString
                                            End With
                                        Case "DevExpress.XtraEditors.CalcEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.CalcEdit)
                                                .Value = Val(Row!ValuesRet.ToString)
                                            End With
                                        Case "DevExpress.XtraEditors.ButtonEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.ButtonEdit)
                                                If Row!FTStatePropertyTag.ToString = "Y" Then
                                                    .Properties.Tag = Row!ValuesRet.ToString
                                                Else
                                                    .Text = Row!ValuesRet.ToString
                                                End If
                                            End With
                                        Case "DevExpress.XtraEditors.MemoEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.MemoEdit)
                                                .Text = Row!ValuesRet.ToString
                                            End With
                                        Case "DevExpress.XtraEditors.DateEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.DateEdit)
                                                .Text = Row!ValuesRet.ToString
                                            End With
                                        Case "DevExpress.XtraEditors.CheckEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.CheckEdit)
                                                .Checked = Val(Row!ValuesRet.ToString)
                                            End With
                                        Case "DevExpress.XtraEditors.ComboBoxEdit".ToUpper
                                            With CType(ctrl, DevExpress.XtraEditors.ComboBoxEdit)
                                                Try
                                                    .SelectedIndex = Val(Row!ValuesRet.ToString)
                                                Catch ex As Exception
                                                    .SelectedIndex = -1
                                                End Try
                                            End With
                                    End Select
                                Next
                            Next
                        End If

                        .Data.Dispose()
                        .DataRetField.Dispose()

                    End With

                Case DevExpress.XtraEditors.Controls.ButtonPredefines.Plus
                    '...Add New Item Sub Order
                    Dim tSql$ = "SELECT A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(FTOrderNo.Text.Trim()) & "'"

                    If HI.Conn.SQLConn.GetField(tSql, Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                        Me.FTSubOrderNo.Properties.Tag = Me.FTOrderNo.Text & "-#"
                        Me.FTSubOrderNo.Text = Me.FTOrderNo.Text & "-#"
                        '...default value by main order : order date
                        Me.FDSubOrderDate.Text = Me.FDOrderDate.Text
                        Me.FDSubOrderDate.DateTime = Me.FDOrderDate.DateTime

                        Me.FNHSysContinentId.Properties.Tag = "" : Me.FNHSysContinentId.Text = "" : Me.FNHSysContinentId_None.Text = ""
                        Me.FNHSysCountryId.Properties.Tag = "" : Me.FNHSysCountryId.Text = "" : Me.FNHSysCountryId_None.Text = ""
                        Me.FNHSysProvinceId.Properties.Tag = "" : Me.FNHSysProvinceId.Text = "" : Me.FNHSysProvinceId_None.Text = ""
                        Me.FNHSysShipModeId.Properties.Tag = "" : Me.FNHSysShipModeId.Text = "" : Me.FNHSysShipModeId_None.Text = ""
                        Me.FNHSysShipPortId.Properties.Tag = "" : Me.FNHSysShipPortId.Text = "" : Me.FNHSysShipPortId_None.Text = ""
                        Me.FNHSysCurId.Properties.Tag = "" : Me.FNHSysCurId.Text = "" : Me.FNHSysCurId_None.Text = ""
                        Me.FNHSysGenderId.Properties.Tag = "" : Me.FNHSysGenderId.Text = "" : Me.FNHSysGenderId_None.Text = ""
                        Me.FNHSysUnitId.Properties.Tag = "" : Me.FNHSysUnitId.Text = "" : Me.FNHSysUnitId_None.Text = ""
                        Me.FTUpdUserSubOrder.Text = "" : Me.FDUpdDate_OrderSub.Text = "" : Me.FTUpdTime_OrderSub.Text = ""
                        Me.FDProDate.Text = ""
                        Me.FDShipDate.Text = ""
                        Me.FNSubOrderQty.Value = 0 : Me.FNSubOrderAmt.Value = 0
                        Me.FNSubOrderGarmentTestQty.Value = 0 : Me.FNSubOrderGarmentTestAmnt.Value = 0
                        Me.FTRemarkSubOrderNo.Text = ""
                        Me.FTStateEmb.Checked = False : Me.FTStatePrint.Checked = False : Me.FTStateHeat.Checked = False : Me.FTStateLaser.Checked = False : Me.FTStateWindows.Checked = False

                        Me.FTSubOrderNoDivertRef.Checked = False : Me.FTSubOrderNoDivertRef.Visible = False

                        HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderBreakdownInfo)
                        Me.ogdSubOrdBreakDown.DataSource = Nothing

                        If Me.FNHSysPlantId.Text.Trim() <> "" Then
                            Dim nFNHSysPlantId As Integer
                            nFNHSysPlantId = Val(Me.FNHSysPlantId.Properties.Tag)

                            tSql = ""
                            tSql = "SELECT A.FTPlantCode"
                            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMPlant] AS A WITH(NOLOCK)"
                            tSql &= Environment.NewLine & "WHERE A.FNHSysPlantId = " & nFNHSysPlantId

                            If HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MASTER, "") = _tPlantMulti Then

                                If Me.FNHSysBuyerId.Text.Trim() <> "" Then
                                    tSql = ""
                                    tSql = "SELECT ISNULL(A.FTCustRef, NULL)"
                                    tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMBuyer] AS A WITH(NOLOCK)"
                                    tSql &= Environment.NewLine & "WHERE A.FNHSysBuyerId = " & Val(Me.FNHSysBuyerId.Properties.Tag) & " AND A.FTStateActive = N'1'"

                                    Me.FTCustRef.Text = HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MASTER, "")

                                End If

                            End If

                        End If

                        '...default state emb/print/heat/laser/windows by style
                        '===================================================================
                        If Me.FNHSysStyleId.Text.Trim <> "" Then
                            tSql = ""
                            tSql = "SELECT L4.FNHSysStyleId, L4.FTStyleCode, ISNULL(MAX(L3.FTStateEmb),0) AS FTStateEmb, ISNULL(MAX(L3.FTStatePrint),0) AS FTStatePrint, ISNULL(MAX(L3.FTStateHeat),0) AS FTStateHeat, ISNULL(MAX(L3.FTStateLaser),0) AS FTStateLaser, ISNULL(MAX(L3.FTStateWindows),0) AS FTStateWindows"
                            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTStyle_Part] AS L3 WITH(NOLOCK) INNER JOIN [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..[TMERMStyle] AS L4 WITH(NOLOCK) ON L3.FNHSysStyleId = L4.FNHSysStyleId"
                            tSql &= Environment.NewLine & "WHERE L3.FNHSysStyleId = " & Val(Me.FNHSysStyleId.Properties.Tag)
                            tSql &= Environment.NewLine & "GROUP BY L4.FNHSysStyleId, L4.FTStyleCode"
                            Dim oDBdtMerStylePart As System.Data.DataTable
                            oDBdtMerStylePart = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)
                            If Not oDBdtMerStylePart Is Nothing And oDBdtMerStylePart.Rows.Count > 0 Then
                                Me.FTStateEmb.Checked = IIf(CStr(oDBdtMerStylePart.Rows(0).Item("FTStateEmb")) = "1", True, False)
                                Me.FTStatePrint.Checked = IIf(CStr(oDBdtMerStylePart.Rows(0).Item("FTStatePrint")) = "1", True, False)
                                Me.FTStateHeat.Checked = IIf(CStr(oDBdtMerStylePart.Rows(0).Item("FTStateHeat")) = "1", True, False)
                                Me.FTStateLaser.Checked = IIf(CStr(oDBdtMerStylePart.Rows(0).Item("FTStateLaser")) = "1", True, False)
                                Me.FTStateWindows.Checked = IIf(CStr(oDBdtMerStylePart.Rows(0).Item("FTStateWindows")) = "1", True, False)
                            End If

                        End If
                        '===================================================================

                    End If

            End Select

        Catch ex As Exception

        End Try

    End Sub

    Private Sub FNHSysStyleId_EditValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles FNHSysStyleId.EditValueChanged
        REM 2014/12/08
        'If FNHSysStyleId.Text.Trim() <> "" Then
        '    Dim _Str As String = "SELECT TOP 1 FNHSysStyleId FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMStyle WITH(NOLOCK) WHERE FTStyleCode ='" & HI.UL.ULF.rpQuoted(FNHSysStyleId.Text) & "' "
        '    FNHSysStyleId.Properties.Tag = HI.Conn.SQLConn.GetField(_Str, Conn.DB.DataBaseName.DB_MASTER, "")

        '    Call LoadImangeStyle(Integer.Parse(Val(FNHSysStyleId.Properties.Tag)))

        'End If
        If (_FormLoad) Then Exit Sub
        If Not (_bProgrammeInit) = True Then
            If FNHSysStyleId.Text.Trim() <> "" Then
                Dim _Str As String = "SELECT TOP 1 FNHSysStyleId FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMStyle WITH(NOLOCK) WHERE FTStyleCode ='" & HI.UL.ULF.rpQuoted(FNHSysStyleId.Text) & "' "
                FNHSysStyleId.Properties.Tag = HI.Conn.SQLConn.GetField(_Str, Conn.DB.DataBaseName.DB_MASTER, "")

                Call LoadImangeStyle(Integer.Parse(Val(FNHSysStyleId.Properties.Tag)))

            End If

        End If

    End Sub

    Private Sub LoadImangeStyle(_FNHSysStyleId As Integer)
        Try

            If Me.FTOrderNo.Text <> "" And Me.FTOrderNo.Properties.Tag.ToString = "" Then
                Dim _Qry As String = ""
                Dim dt As DataTable
                _Qry = "SELECT  TOP 1   FNHSysStyleId,  FPStyleImage1,FPStyleImage2, FPStyleImage3, FPStyleImage4"
                _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TMERMStyle WITH(NOLOCK)"
                _Qry &= vbCrLf & " WHERE FNHSysStyleId=" & _FNHSysStyleId & ""
                dt = HI.Conn.SQLConn.GetDataTable(_Qry, Conn.DB.DataBaseName.DB_MASTER,, False)

                For Each Rx As DataRow In dt.Rows

                    Try
                        Me.FTImage1.Image = HI.UL.ULImage.ConvertByteArrayToImmage(Rx!FPStyleImage1)
                    Catch ex As Exception
                        Me.FTImage1.Image = Nothing
                    End Try

                    Try
                        Me.FTImage2.Image = HI.UL.ULImage.ConvertByteArrayToImmage(Rx!FPStyleImage2)
                    Catch ex As Exception
                        Me.FTImage2.Image = Nothing
                    End Try

                    Try
                        Me.FTImage3.Image = HI.UL.ULImage.ConvertByteArrayToImmage(Rx!FPStyleImage3)
                    Catch ex As Exception
                        Me.FTImage3.Image = Nothing
                    End Try

                    Try
                        Me.FTImage4.Image = HI.UL.ULImage.ConvertByteArrayToImmage(Rx!FPStyleImage4)
                    Catch ex As Exception
                        Me.FTImage4.Image = Nothing
                    End Try

                Next
                dt.Dispose()
            End If

        Catch ex As Exception

        End Try
    End Sub

    Private Sub FNHSysCustId_EditValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles FNHSysCustId.EditValueChanged
        'If FNHSysCustId.Text.Trim() <> "" Then
        '    If FNHSysCustId.Properties.Tag.ToString = "" Then
        '        Dim _Str As String = "SELECT TOP 1 FNHSysCustId FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCNMCustomer WITH(NOLOCK) WHERE FTCustCode ='" & HI.UL.ULF.rpQuoted(FNHSysCustId.Text) & "' "
        '        FNHSysCustId.Properties.Tag = HI.Conn.SQLConn.GetField(_Str, Conn.DB.DataBaseName.DB_MASTER, "")
        '    End If
        'Else
        '    If FNHSysStyleId.Properties.Tag.ToString <> "" Then
        '        Dim _Str As String
        '        Dim oDBdt As DataTable
        '        _Str = "SELECT A.FNHSysStyleId, A.FNHSysCustId, B.FTCustCode, B.FTCustNameEN, B.FTCustNameTH"
        '        _Str &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMStyle AS A LEFT JOIN dbo.TCNMCustomer AS B ON A.FNHSysCustId = B.FNHSysCustId"
        '        _Str &= Environment.NewLine & "WHERE A.FNHSysStyleId = " & Val(Me.FNHSysStyleId.Properties.Tag.ToString())
        '        oDBdt = HI.Conn.SQLConn.GetDataTable(_Str, Conn.DB.DataBaseName.DB_MASTER)
        '        If oDBdt.Rows.Count > 0 Then
        '            Me.FNHSysCustId.Properties.Tag = oDBdt.Rows(0).Item("FNHSysCustId")
        '            Me.FNHSysCustId.Text = oDBdt.Rows(0).Item("FTCustCode")
        '            Me.FNHSysCustId_None.Text = oDBdt.Rows(0).Item("FTCustNameEN")
        '        End If

        '    End If

        'End If
        If (_FormLoad) Then Exit Sub
        If Not (_bProgrammeInit) = True Then
            If FNHSysCustId.Text.Trim() <> "" Then
                If FNHSysCustId.Properties.Tag.ToString = "" Then
                    Dim _Str As String = "SELECT TOP 1 FNHSysCustId FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TCNMCustomer WITH(NOLOCK) WHERE FTCustCode ='" & HI.UL.ULF.rpQuoted(FNHSysCustId.Text) & "' "
                    FNHSysCustId.Properties.Tag = HI.Conn.SQLConn.GetField(_Str, Conn.DB.DataBaseName.DB_MASTER, "")
                End If
            Else
                If FNHSysStyleId.Properties.Tag.ToString <> "" Then
                    Dim _Str As String
                    Dim oDBdt As DataTable
                    _Str = "SELECT A.FNHSysStyleId, A.FNHSysCustId, B.FTCustCode, B.FTCustNameEN, B.FTCustNameTH"
                    _Str &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MASTER) & "]..TMERMStyle AS A LEFT JOIN dbo.TCNMCustomer AS B ON A.FNHSysCustId = B.FNHSysCustId"
                    _Str &= Environment.NewLine & "WHERE A.FNHSysStyleId = " & Val(Me.FNHSysStyleId.Properties.Tag.ToString())
                    oDBdt = HI.Conn.SQLConn.GetDataTable(_Str, Conn.DB.DataBaseName.DB_MASTER)
                    If oDBdt.Rows.Count > 0 Then
                        Me.FNHSysCustId.Properties.Tag = oDBdt.Rows(0).Item("FNHSysCustId")
                        Me.FNHSysCustId.Text = oDBdt.Rows(0).Item("FTCustCode")
                        Me.FNHSysCustId_None.Text = oDBdt.Rows(0).Item("FTCustNameEN")
                    End If

                End If

            End If

        End If

    End Sub

    Private Sub FTSubOrderNo_EditValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles FTSubOrderNo.EditValueChanged
        If (_FormLoad) Then Exit Sub
        Try
            Me.FTStateApprovedSubOrderNo.Visible = False
            Me.FTStateApprovedSubOrderNo.Checked = False
            'Me.FTStateApprovedSubOrderNo.Text = ""

            Me.FTStateApprovedSubOrderNoRevised.Visible = False
            Me.FTStateApprovedSubOrderNoRevised.Checked = False

            Me.FTStateApprovedComponent.Visible = False
            Me.FTStateApprovedComponent.Checked = False
            'Me.FTStateApprovedComponent.Text = ""

            Me.FTStateApprovedComponentRevised.Visible = False
            Me.FTStateApprovedComponentRevised.Checked = False

            Me.FTStateApprovedSew.Visible = False
            Me.FTStateApprovedSew.Checked = False
            'Me.FTStateApprovedSew.Text = ""

            Me.FTStateApprovedSewRevised.Visible = False
            Me.FTStateApprovedSewRevised.Checked = False

            Me.FTStateApprovedPack.Visible = False
            Me.FTStateApprovedPack.Checked = False
            'Me.FTStateApprovedPack.Text = ""

            Me.FTStateApprovedPackRevised.Visible = False
            Me.FTStateApprovedPackRevised.Checked = False

            Me.FTStateApprovedPackRatio.Visible = False
            Me.FTStateApprovedPackRatio.Checked = False
            'Me.FTStateApprovedPackRatio.Text = ""

            Me.FTStateApprovedPackRatioRevised.Visible = False
            Me.FTStateApprovedPackRatioRevised.Checked = False

            Me.FTStateApprovedSizeSpec.Visible = False
            Me.FTStateApprovedSizeSpec.Checked = False
            'Me.FTStateApprovedSizeSpec.Text = ""

            Me.FTStateApprovedSizeSpecRevised.Visible = False
            Me.FTStateApprovedSizeSpecRevised.Checked = False
            otbsuborderno.SelectedTabPageIndex = 0

            If Me.FTSubOrderNo.Text <> "" Then

                If Me.FTSubOrderNo.Properties.Tag.ToString = Me.FTSubOrderNo.Text.Trim() Then

                    Call W_PRCbShowBrowseDataSubOrderInfo(Me.FTSubOrderNo.Text.Trim())
                    Call W_PRCbShowBrowseDataSubOrderComponent(Me.FTOrderNo.Text.Trim(), Me.FTSubOrderNo.Text.Trim())
                    Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(Me.FTSubOrderNo.Text.Trim())
                    Call W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt()
                    Call W_PRCbShowBrowseDataSubOrderPackInfo()
                    Call W_PRCbShowBrowseDataSubOrderSewingInfo()
                    Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(Me.FTOrderNo.Text.Trim(), Me.FTSubOrderNo.Text.Trim())
                    Call W_PRCxInitNewRowSizeSpec(CType(ogdSizeSpec.DataSource, System.Data.DataTable))

                    Me.ogdSubOrdBreakDownSummary.Width = ogdSubOrdBreakDown.Width

                    '...packing carton info 2014/12/12
                    'If System.Diagnostics.Debugger.IsAttached = True Then
                    '    Call PROC_SETxShowBrowsePackingCartonInfo()
                    'End If
                    Call PROC_SETxShowBrowsePackingCartonInfo()

                    Me.FTColorway.Properties.Tag = ""
                    Me.FTColorway.Text = ""
                    Me.FTColorway_None.Text = ""
                    Me.FNColorSeq.Value = 0
                    Me.FTSizeBreakDown.Properties.Tag = ""
                    Me.FTSizeBreakDown.Text = ""


                    Me.FNQuantity.Value = 0 : Me.FNPrice.Value = 0 : Me.FNAmt.Value = 0 : Me.FNExtraQtySubOrder.Value = 0 : Me.FNQuantityExtra.Value = 0

                Else

                    Dim tFTSubOrderNo$
                    Dim tSql$

                    tSql = ""
                    tSql = "SELECT TOP 1 A.FTSubOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS A WITH(NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim()) & "'"

                    tFTSubOrderNo = HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "")

                    If tFTSubOrderNo <> "" AndAlso tFTSubOrderNo = Me.FTSubOrderNo.Text.Trim() Then
                        Me.FTSubOrderNo.Properties.Tag = tFTSubOrderNo

                        Call W_PRCbShowBrowseDataSubOrderInfo(Me.FTSubOrderNo.Text.Trim())
                        REM Call W_PRCbShowBrowseDataSubOrderComponent(Me.FTOrderNo.Text.Trim(), Me.FTSubOrderNo.Text.Trim())
                        Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(Me.FTSubOrderNo.Text.Trim())
                        Call W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt()
                        Call W_PRCbShowBrowseDataSubOrderPackInfo()
                        Call W_PRCbShowBrowseDataSubOrderSewingInfo()
                        Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(Me.FTOrderNo.Text.Trim(), Me.FTSubOrderNo.Text.Trim())
                        Call W_PRCxInitNewRowSizeSpec(CType(ogdSizeSpec.DataSource, System.Data.DataTable))

                        '...packing carton info 2014/12/12
                        'If System.Diagnostics.Debugger.IsAttached = True Then
                        '    Call PROC_SETxShowBrowsePackingCartonInfo()
                        'End If
                        Call PROC_SETxShowBrowsePackingCartonInfo()

                        Me.FTColorway.Properties.Tag = ""
                        Me.FTColorway.Text = ""
                        Me.FTColorway_None.Text = ""
                        Me.FNColorSeq.Value = 0
                        Me.FTSizeBreakDown.Properties.Tag = ""
                        Me.FTSizeBreakDown.Text = ""


                        Me.FNQuantity.Value = 0 : Me.FNPrice.Value = 0 : Me.FNAmt.Value = 0 : Me.FNExtraQtySubOrder.Value = 0 : Me.FNQuantityExtra.Value = 0

                        Me.ogdSubOrdBreakDownSummary.Width = ogdSubOrdBreakDown.Width

                    Else

                        tSql = ""
                        tSql = "SELECT A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(FTOrderNo.Text.Trim()) & "'"

                        Dim tFTSubOrderNoDest As String = HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "")

                        If tFTSubOrderNoDest <> "" And CStr(tFTSubOrderNoDest & "-#") = Me.FTSubOrderNo.Properties.Tag.ToString() Then
                            Me.FTSubOrderNo.Text = tFTSubOrderNoDest
                            Me.FTSubOrderNo.Properties.Tag = tFTSubOrderNoDest & "-#"
                        Else
                            Me.FTSubOrderNo.Properties.Tag = ""
                            Me.FTSubOrderNo.Text = ""
                            Me.FTSubOrderNoDivertRef.Checked = False : Me.FTSubOrderNoDivertRef.Visible = False
                        End If

                        HI.TL.HandlerControl.ClearControl(Me.ogbSubOrder)
                        HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)
                        HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)

                        Me.FNSewSeq.Value = 1
                        Me.FNPackSeq.Value = 1

                        Me.ogdSubOrdBreakDown.DataSource = Nothing
                        Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                        Me.ogdOrderSubSewing.DataSource = Nothing
                        Me.ogdOrderSubPack.DataSource = Nothing
                        Me.ogdSizeSpec.DataSource = Nothing

                        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                        Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
                        Call W_PRCbRemoveGridViewColumn(Me.ogvSizeSpec)

                        '...packing carton info 2014/12/12
                        'If System.Diagnostics.Debugger.IsAttached = True Then
                        '    Call PROC_SETxShowBrowsePackingCartonInfo()
                        'End If
                        Call PROC_SETxShowBrowsePackingCartonInfo()

                        Me.FTColorway.Properties.Tag = ""
                        Me.FTColorway.Text = ""
                        Me.FTColorway_None.Text = ""
                        Me.FNColorSeq.Value = 0
                        Me.FTSizeBreakDown.Properties.Tag = ""
                        Me.FTSizeBreakDown.Text = ""


                        Me.FNQuantity.Value = 0 : Me.FNPrice.Value = 0 : Me.FNAmt.Value = 0 : Me.FNExtraQtySubOrder.Value = 0 : Me.FNQuantityExtra.Value = 0

                        Me.ogdSubOrdBreakDownSummary.Width = ogdSubOrdBreakDown.Width

                    End If

                End If

            Else

                Dim tSql$ = "SELECT A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(FTOrderNo.Text.Trim()) & "'"
                Dim tFTSubOrderNoDest As String = HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "")

                If tFTSubOrderNoDest <> "" And CStr(tFTSubOrderNoDest & "-#") = Me.FTSubOrderNo.Properties.Tag.ToString() Then
                    Me.FTSubOrderNo.Text = tFTSubOrderNoDest
                    Me.FTSubOrderNo.Properties.Tag = tFTSubOrderNoDest & "-#"
                Else
                    Me.FTSubOrderNo.Properties.Tag = ""
                    Me.FTSubOrderNo.Text = ""
                    Me.FTSubOrderNoDivertRef.Checked = False : Me.FTSubOrderNoDivertRef.Visible = False
                End If

                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrder)
                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderSewInfo)
                HI.TL.HandlerControl.ClearControl(Me.ogbSubOrderPackInfo)

                Me.FNSewSeq.Value = 1
                Me.FNPackSeq.Value = 1

                Me.ogdSubOrdBreakDown.DataSource = Nothing
                Me.ogdSubOrdBreakDownSummary.DataSource = Nothing
                Me.ogdOrderSubSewing.DataSource = Nothing
                Me.ogdOrderSubPack.DataSource = Nothing
                Me.ogdSizeSpec.DataSource = Nothing

                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdown)
                Call W_PRCbRemoveGridViewColumn(Me.ogvSubOrdBreakdownSummary)
                Call W_PRCbRemoveGridViewColumn(Me.ogvSizeSpec)

                '...packing carton info 2014/12/12
                'If System.Diagnostics.Debugger.IsAttached = True Then
                '    Call PROC_SETxShowBrowsePackingCartonInfo()
                'End If
                Call PROC_SETxShowBrowsePackingCartonInfo()

                Me.FTColorway.Properties.Tag = ""
                Me.FTColorway.Text = ""
                Me.FTColorway_None.Text = ""
                Me.FNColorSeq.Value = 0
                Me.FTSizeBreakDown.Properties.Tag = ""
                Me.FTSizeBreakDown.Text = ""


                Me.FNQuantity.Value = 0 : Me.FNPrice.Value = 0 : Me.FNAmt.Value = 0 : Me.FNExtraQtySubOrder.Value = 0 : Me.FNQuantityExtra.Value = 0

                Me.ogdSubOrdBreakDownSummary.Width = ogdSubOrdBreakDown.Width

            End If

            Call CheckStateOrder()
            Call CheckStateSubOrder()

            If Me.FTSubOrderNo.Text.Trim() <> "" Then
                Dim _Qry As String = ""

                _Qry = " SELECT TOP 1 FDShipDateTo "
                _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderGACDate AS A WITH(NOLOCK) "
                _Qry &= vbCrLf & " WHERE FTSubOrderNo='" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'"

                FDShipDate.Enabled = (HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "") = "")
            Else
                FDShipDate.Enabled = True
            End If

        Catch ex As Exception


        End Try

    End Sub

    Private Sub wOrder_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        RemoveHandler FTSubOrderNo.ButtonClick, AddressOf HI.TL.HandlerControl.DynamicButtone_ButtonClick
        RemoveHandler FTSubOrderNo.EditValueChanged, AddressOf HI.TL.HandlerControl.DynamicButtonedit_EditValueChanged
        RemoveHandler FTSubOrderNo.Leave, AddressOf HI.TL.HandlerControl.DynamicButtonedit_LeaveOnly
        Me.ogdSubOrdBreakDownSummary.Width = ogdSubOrdBreakDown.Width

        ogvOrderSubComponent.OptionsSelection.MultiSelect = True
        ogvOrderSubComponent.OptionsSelection.MultiSelectMode = GridMultiSelectMode.RowSelect

        _bProgrammeInit = False
        _FormLoad = False

    End Sub

    Private Sub ocmclearpuns_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmNewRecord.Click
        REM Call W_PRCbClearBreakdownSubOrderDT()
    End Sub

    Private Sub FNQuantity_EditValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles FNQuantity.EditValueChanged, FNPrice.EditValueChanged
        If (_FormLoad) Then Exit Sub
        Try
            Me.FNAmt.Value = Val(Me.FNQuantity.Value) * Val(Me.FNPrice.Value)


            If FNExtraQtySubOrder.Value > 0 Then
                Try
                    FNQuantityExtra.Value = Integer.Parse((Me.FNQuantity.Value * FNExtraQtySubOrder.Value) / 100)
                Catch ex As Exception
                End Try
            End If

        Catch ex As Exception
            'Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
        End Try
    End Sub

    Private Sub FNExtraQtySubOrder_KeyDown(sender As Object, e As KeyEventArgs) Handles FNExtraQtySubOrder.KeyDown
        Select Case e.KeyCode
            Case Keys.Enter
                If ocmAddDT.Enabled Then
                    Proc_SaveSubOrder(ocmAddDT, New System.EventArgs)
                End If
        End Select
    End Sub

    'Private Sub FNExtraQuantity_KeyPress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles FNExtraQtySubOrder.KeyPress
    '    If Asc(e.KeyChar) = 13 Then
    '        If ocmAddDT.Enabled Then
    '            Proc_SaveSubOrder(ocmAddDT, New System.EventArgs)
    '        End If
    '    End If
    'End Sub

    Private Sub ogvSubOrdBreakdown_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles ogvSubOrdBreakdown.Click
        Try
            'If Me.ogvSubOrdBreakdown.FocusedColumn.FieldName = "FTMatColorCode".ToUpper Then Exit Sub
            'If Me.ogvSubOrdBreakdown.FocusedColumn.FieldName = "FTDescription".ToUpper Then Exit Sub
            'If Me.ogvSubOrdBreakdown.FocusedColumn.FieldName = "FTMatColorName".ToUpper Then Exit Sub

            With Me.ogvSubOrdBreakdown

                'If .DataSource Is Nothing Then Exit Sub
                If .RowCount <= 0 Then Exit Sub

                If .FocusedRowHandle < 0 Or .FocusedRowHandle > .RowCount Or .FocusedColumn.FieldName = "FTDescription" Or .FocusedColumn.FieldName = "FNRowTotal" Then Exit Sub
                Dim pt As Point = .GridControl.PointToClient(Control.MousePosition)
                Dim info As GridHitInfo = .CalcHitInfo(pt)

                If (info.InRow Or info.InRowCell) Then
                    Dim tColName As String = ""

                    tColName = .FocusedColumn.FieldName
                    tColName = tColName.Replace("FNAmnt", "")
                    tColName = tColName.Trim()

                    Me.FTColorway.Properties.Tag = Val("" & .GetRowCellValue(.FocusedRowHandle, "FNHSysMatColorId").ToString())
                    Me.FTColorway.Text = "" & .GetRowCellValue(.FocusedRowHandle, "FTMatColorCode").ToString()
                    Me.FTColorway_None.Text = "" & .GetRowCellValue(.FocusedRowHandle, "FTMatColorName").ToString()
                    Me.FNColorSeq.Value = Val("" & .GetRowCellValue(.FocusedRowHandle, "FTNikePOLineItem").ToString())
                    Me.FTSizeBreakDown.Properties.Tag = Val("" & .GetRowCellValue(.FocusedRowHandle, "FNHSysMatSizeId" & tColName))
                    Me.FTSizeBreakDown.Text = "" & .GetRowCellValue(.FocusedRowHandle, "FTMatSizeCode" & tColName).ToString()
                    Me.FNQuantity.Value = Val(IIf(IsDBNull(.GetRowCellValue(.FocusedRowHandle, "FNQuantity" & tColName)), "", .GetRowCellValue(.FocusedRowHandle, "FNQuantity" & tColName).ToString()))
                    Me.FNPrice.Value = Val(IIf(IsDBNull(.GetRowCellValue(.FocusedRowHandle, "FNPrice" & tColName)), "", .GetRowCellValue(.FocusedRowHandle, "FNPrice" & tColName).ToString()))
                    Me.FNAmt.Value = Val(IIf(IsDBNull(.GetRowCellValue(.FocusedRowHandle, "FNValue" & tColName)), "", .GetRowCellValue(.FocusedRowHandle, "FNValue" & tColName).ToString()))
                    Me.FNExtraQtySubOrder.Value = Val(IIf(IsDBNull(.GetRowCellValue(.FocusedRowHandle, "FNExtraQtyPercent" & tColName)), "", .GetRowCellValue(.FocusedRowHandle, "FNExtraQtyPercent" & tColName).ToString()))
                    Me.FNGarmentQtyTest.Value = Val(IIf(IsDBNull(.GetRowCellValue(.FocusedRowHandle, "FNQuantityTest" & tColName)), "", .GetRowCellValue(.FocusedRowHandle, "FNQuantityTest" & tColName).ToString()))

                    REM 2014/06/30
                    'Dim nFNGarmentQtyTest As Integer
                    'Dim tSql As String

                    'tSql = ""
                    'tSql = "SELECT  ISNULL(A.FNGarmentQtyTest,0) AS FNGarmentQtyTest"
                    'tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A WITH(NOLOCK)"
                    'tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "'"
                    'tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim()) & "'"
                    'tSql &= Environment.NewLine & "      AND A.FNHSysMatColorId = " & Val(Me.FTColorway.Properties.Tag)
                    'tSql &= Environment.NewLine & "      AND A.FNHSysMatSizeId = " & Val(Me.FTSizeBreakDown.Properties.Tag)
                    'Me.FNGarmentQtyTest.Value = Val(HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0"))

                    Me.FNQuantity.Focus()
                    Me.FNQuantity.SelectionStart = 0
                    Me.FNQuantity.SelectionLength = Len(Me.FNQuantity.Text)
                    Me.FNQuantity.SelectAll()

                End If

            End With

        Catch ex As Exception
            'Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())

            Me.FTColorway.Properties.Tag = ""
            Me.FTColorway.Text = ""
            Me.FTColorway_None.Text = ""
            Me.FNColorSeq.Value = 0
            Me.FTSizeBreakDown.Properties.Tag = ""
            Me.FTSizeBreakDown.Text = ""

            Me.FNQuantity.Value = 0
            Me.FNPrice.Value = 0
            Me.FNAmt.Value = 0
            Me.FNExtraQtySubOrder.Value = 0

            Me.FTColorway.Focus()
            Me.FTColorway.SelectionStart = 0
            Me.FTColorway.SelectionLength = Len(Me.FTColorway.Text)
            Me.FTColorway.SelectAll()
        End Try

    End Sub

    Private Sub FNExtraQtySubOrder_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles FNExtraQtySubOrder.TextChanged
        Call W_PRCxRecalSubOrderBreakdownExtraQty()
    End Sub

    Private Sub FNQuantity_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles FNQuantity.TextChanged
        Call W_PRCxRecalSubOrderBreakdownExtraQty()
    End Sub

    Private Sub FTSizeBreakDown_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles FTSizeBreakDown.KeyPress
        Try
            If Asc(e.KeyChar) = 13 Then
                Me.FNQuantity.Focus()
                Me.FNQuantity.SelectAll()
            End If
        Catch ex As Exception
        End Try
    End Sub

    Private Sub FTColorway_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles FTColorway.KeyPress
        Try
            If Asc(e.KeyChar) = 13 Then
                'Me.FTSizeBreakDown.Focus()
                'Me.FTSizeBreakDown.SelectAll()

                Me.FNColorSeq.Focus()
                Me.FNColorSeq.SelectAll()

            End If
        Catch ex As Exception
        End Try
    End Sub

    Private Sub ocmaddsuborderpack_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmaddsuborderpack.Click
        If (CheckApproveOrder()) Then Exit Sub
        Call W_PRCbSaveSubOrderPack()
    End Sub

    Private Sub ocmremovesuborderpack_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmremovesuborderpack.Click
        If (CheckApproveOrder()) Then Exit Sub
        Call W_PRCbDeleteSubOrderPack()
    End Sub

    Private Sub ocmaddsubordersew_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmaddsubordersew.Click
        If (CheckApproveOrder()) Then Exit Sub
        Call W_PRCbSaveSubOrderSewing()
    End Sub

    Private Sub ocmremovesubordersew_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ocmremovesubordersew.Click
        If (CheckApproveOrder()) Then Exit Sub
        Call W_PRCbDeleteSubOrderSewing()
    End Sub

    Private Sub ogvOrderSubPack_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles ogvOrderSubPack.Click
        Try
            With Me.ogvOrderSubPack
                If .FocusedRowHandle < 0 Or .FocusedRowHandle > .RowCount Then Exit Sub

                Me.FNPackSeq.Value = Val("" & .GetRowCellValue(.FocusedRowHandle, "FNPackSeq").ToString())
                Me.FTPackDescription.Text = "" & .GetRowCellValue(.FocusedRowHandle, "FTPackDescription").ToString()
                Me.FTPackNote.Text = "" & .GetRowCellValue(.FocusedRowHandle, "FTPackNote").ToString()

                Try
                    Me.FTImagePacking.Image = HI.UL.ULImage.ConvertByteArrayToImmage(.GetRowCellValue(.FocusedRowHandle, "FBImage"))
                Catch ex As Exception
                    Me.FTImagePacking.Image = Nothing
                End Try
                'Dim tImagePath As String = ""
                'Try
                '    tImagePath = "" & .GetRowCellValue(.FocusedRowHandle, "FTImage").ToString()
                '    If Not DBNull.Value.Equals(tImagePath) And tImagePath <> "" Then
                '        Dim tPathImgExtend As String = _SystemFilePath & "\OrderNo\SubOrderNo\Packing" & "\" & tImagePath
                '        If IO.File.Exists(tPathImgExtend) Then
                '            Me.FTImagePacking.Image = HI.UL.ULImage.LoadImage("" & tPathImgExtend)
                '        Else
                '            Me.FTImagePacking.Image = Nothing
                '        End If
                '    Else
                '        Me.FTImagePacking.Image = Nothing
                '    End If
                'Catch ex As Exception
                '    Me.FTImagePacking.Image = Nothing
                'End Try

                Me.FTPackDescription.Focus()
                Me.FTPackDescription.SelectionStart = 0
                Me.FTPackDescription.SelectionLength = Len(Me.FTPackDescription.Text.Trim())
            End With

        Catch ex As Exception
            'Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)
        End Try

    End Sub

    Private Sub ogvOrderSubSewing_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles ogvOrderSubSewing.Click
        Try
            With Me.ogvOrderSubSewing
                If .FocusedRowHandle < 0 Or .FocusedRowHandle > .RowCount Then Exit Sub

                Me.FNSewSeq.Value = Val("" & .GetRowCellValue(.FocusedRowHandle, "FNSewSeq").ToString())
                Me.FTSewDescription.Text = "" & .GetRowCellValue(.FocusedRowHandle, "FTSewDescription").ToString()
                Me.FTSewNote.Text = "" & .GetRowCellValue(.FocusedRowHandle, "FTSewNote").ToString()

                Dim tImagePath As String = ""
                Try
                    tImagePath = "" & .GetRowCellValue(.FocusedRowHandle, "FTImage").ToString()
                    If Not DBNull.Value.Equals(tImagePath) And tImagePath <> "" Then
                        'Dim tPathImgExtend As String = _SysPath & "\" & tImagePath
                        Dim tPathImgExtend As String = _SystemFilePath & "\OrderNo\SubOrderNo\Sewing" & "\" & tImagePath
                        If IO.File.Exists(tPathImgExtend) Then
                            REM Me.FTImageSewing.Image = Image.FromStream(New MemoryStream(System.IO.File.ReadAllBytes(tPathImgExtend)))
                            Me.FTImageSewing.Image = HI.UL.ULImage.LoadImage("" & tPathImgExtend)
                        Else
                            Me.FTImageSewing.Image = Nothing
                        End If
                    Else
                        Me.FTImageSewing.Image = Nothing
                    End If
                Catch ex As Exception
                    Me.FTImageSewing.Image = Nothing
                End Try

                Me.FTSewDescription.Focus()
                Me.FTSewDescription.SelectionStart = 0
                Me.FTSewDescription.SelectionLength = Len(Me.FTSewDescription.Text.Trim())
            End With

        Catch ex As Exception
            'Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
            'MsgBox(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)
        End Try

    End Sub

    Private Sub ogvSubOrdBreakdownSummary_CustomColumnDisplayText(ByVal sender As Object, ByVal e As DevExpress.XtraGrid.Views.Base.CustomColumnDisplayTextEventArgs) Handles ogvSubOrdBreakdownSummary.CustomColumnDisplayText
        Try
            If e.ListSourceRowIndex > 0 Then
                REM 2014/05/22 new word extension
                'If e.Column.Name <> "FTDescription" And e.Column.Name <> "FNRowTotal" And e.Column.Visible = True Then
                '    If Me.ogvSubOrdBreakdownSummary.GetRowCellValue(e.RowHandle, "FTDescription") = "Price" Then
                '        If Not e.Value Is Nothing Then
                '            e.DisplayText = String.Format("{0:N2}", e.Value)
                '        End If
                '    ElseIf Me.ogvSubOrdBreakdownSummary.GetRowCellValue(e.RowHandle, "FTDescription") = "Value" Then
                '        If Not e.Value Is Nothing Then
                '            e.DisplayText = String.Format("{0:N2}", e.Value)
                '        End If
                '    End If
                'ElseIf e.Column.Name = "FNRowTotal" And e.Column.Visible = True Then
                '    If Me.ogvSubOrdBreakdownSummary.GetRowCellValue(e.RowHandle, "FTDescription") = "Value" Then
                '        If Not e.Value Is Nothing Then
                '            e.DisplayText = String.Format("{0:N2}", e.Value)
                '        End If
                '    End If
                'End If

                If e.Column.Name <> "FTDescription" And e.Column.Name <> "FNRowTotal" And e.Column.Visible = True Then
                    If Me.ogvSubOrdBreakdownSummary.GetRowCellValue(e.ListSourceRowIndex, "FTDescription") = "Price/ราคา" Then
                        If Not e.Value Is Nothing Then
                            e.DisplayText = String.Format("{0:N2}", e.Value)
                        End If
                    ElseIf Me.ogvSubOrdBreakdownSummary.GetRowCellValue(e.ListSourceRowIndex, "FTDescription") = "Value/มูลค่าสุทธิ" Then
                        If Not e.Value Is Nothing Then
                            e.DisplayText = String.Format("{0:N2}", e.Value)
                        End If
                    End If
                ElseIf e.Column.Name = "FNRowTotal" And e.Column.Visible = True Then
                    If Me.ogvSubOrdBreakdownSummary.GetRowCellValue(e.ListSourceRowIndex, "FTDescription") = "Value/มูลค่าสุทธิ" Then
                        If Not e.Value Is Nothing Then
                            e.DisplayText = String.Format("{0:N2}", e.Value)
                        End If
                    End If
                End If

            End If

        Catch ex As Exception
            'Throw New Exception(ex.Message().ToString() & ControlChars.CrLf & ex.StackTrace().ToString())
        End Try
    End Sub

    Private Sub FTColorway_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles FTColorway.TextChanged
        Try
            If Me.FTColorway.Text.Trim() <> "" And Me.FTOrderNo.Properties.Tag.ToString() <> "" And Me.FTSubOrderNo.Properties.Tag.ToString() <> "" Then
                If Me.FTColorway.Properties.Tag.ToString() <> "" Then
                    Dim tSql$
                    tSql = ""
                    tSql = "SELECT TOP 1 A.FNHSysMatColorId"
                    tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS A WITH(NOLOCK)"
                    tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                    tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
                    tSql &= Environment.NewLine & "      AND A.FNHSysMatColorId = " & Val(Me.FTColorway.Properties.Tag.ToString())
                    Dim tRet$ = HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                    If tRet = "" Then
                        Me.FTSizeBreakDown.Properties.Tag = ""
                        Me.FTSizeBreakDown.Text = ""

                        Me.FNQuantity.Value = 0
                        Me.FNAmt.Value = 0
                        Me.FNQuantityExtra.Value = 0
                        If Not ((_FTStateAutoExtraManual)) Then
                            Me.FNPrice.Value = 0
                            Me.FNExtraQtySubOrder.Value = 0
                        End If

                    Else
                        If Me.FTSizeBreakDown.Properties.Tag.ToString() <> "" Then
                            Dim oDBdt As DataTable
                            tSql = ""

                            Dim oStrBuilder As New System.Text.StringBuilder()
                            oStrBuilder.Remove(0, oStrBuilder.Length)

                            oStrBuilder.AppendLine("SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId")
                            oStrBuilder.AppendLine("     , ISNULL(A.FNQuantity, 0) AS FNQuantity, ISNULL(A.FNPrice, 0) AS FNPrice, ISNULL(A.FNAmt, 0) AS FNAmt, ISNULL(A.FNExtraQty, 0) AS FNExtraQty, A.FNQuantityExtra")
                            oStrBuilder.AppendLine("     , ISNULL(A.FNQuantity, 0) AS FNQuantity, ISNULL(A.FNPrice, 0) AS FNPrice, ISNULL(A.FNAmt, 0) AS FNAmt, ISNULL(A.FNExtraQty, 0) AS FNExtraQty, ISNULL(A.FNQuantityExtra, 0) AS FNQuantityExtra")
                            oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS A WITH(NOLOCK)")
                            oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                            oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
                            oStrBuilder.AppendLine(String.Format("      AND A.FNHSysMatColorId = {0}", Val(Me.FTColorway.Properties.Tag.ToString())))
                            oStrBuilder.AppendLine(String.Format("      AND A.FNHSysMatSizeId = {0}", Val(Me.FTSizeBreakDown.Properties.Tag.ToString())))

                            tSql = oStrBuilder.ToString()

                            oDBdt = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                            If oDBdt.Rows.Count > 0 Then
                                Me.FNQuantity.Value = IIf(IsDBNull(oDBdt.Rows(0).Item("FNQuantity")), 0, oDBdt.Rows(0).Item("FNQuantity"))
                                Me.FNPrice.Value = IIf(IsDBNull(oDBdt.Rows(0).Item("FNPrice")), 0, oDBdt.Rows(0).Item("FNPrice"))
                                Me.FNAmt.Value = IIf(IsDBNull(oDBdt.Rows(0).Item("FNAmt")), 0, oDBdt.Rows(0).Item("FNAmt"))
                                Me.FNExtraQtySubOrder.Value = IIf(IsDBNull(oDBdt.Rows(0).Item("FNExtraQty")), 0, oDBdt.Rows(0).Item("FNExtraQty"))
                                Me.FNQuantityExtra.Value = IIf(IsDBNull(oDBdt.Rows(0).Item("FNQuantityExtra")), 0, oDBdt.Rows(0).Item("FNQuantityExtra"))
                            Else
                                Me.FNQuantity.Value = 0
                                'Me.FNPrice.Value = 0
                                Me.FNAmt.Value = 0
                                ' Me.FNExtraQtySubOrder.Value = 0
                                Me.FNQuantityExtra.Value = 0

                                If Not ((_FTStateAutoExtraManual)) Then
                                    Me.FNPrice.Value = 0
                                    Me.FNExtraQtySubOrder.Value = 0
                                End If

                            End If

                        End If

                    End If

                End If

            End If

        Catch ex As Exception
            'Throw New Exception(ex.Message.ToString() & ControlChars.CrLf & ex.StackTrace.ToString())
        End Try
    End Sub

    Private Sub FTSizeBreakDown_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles FTSizeBreakDown.TextChanged
        Try
            If Me.FTColorway.Text.Trim() <> "" And Me.FTSizeBreakDown.Text.Trim() <> "" And Me.FTOrderNo.Properties.Tag.ToString() <> "" And Me.FTSubOrderNo.Properties.Tag.ToString() <> "" Then
                If Me.FTColorway.Properties.Tag.ToString() <> "" And Me.FTSizeBreakDown.Properties.Tag.ToString() <> "" Then
                    Dim tSql$
                    tSql = ""
                    tSql = "SELECT TOP 1 A.FNHSysMatSizeId"
                    tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS A WITH(NOLOCK)"
                    tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'"
                    tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'"
                    tSql &= Environment.NewLine & "      AND A.FNHSysMatColorId = " & Val(Me.FTColorway.Properties.Tag.ToString())
                    tSql &= Environment.NewLine & "      AND A.FNHSysMatSizeId = " & Val(Me.FTSizeBreakDown.Properties.Tag.ToString())
                    Dim tRet As String = HI.Conn.SQLConn.GetField(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN, "")
                    If tRet = "" Then
                        '...NOT EXISTS
                        Me.FNQuantity.Value = 0
                        ' Me.FNPrice.Value = 0
                        Me.FNAmt.Value = 0

                        If Not ((_FTStateAutoExtraManual)) Then
                            'Me.FNPrice.Value = 0
                            Me.FNExtraQtySubOrder.Value = 0
                        End If

                        '   Me.FNExtraQtySubOrder.Value = 0
                        Me.FNQuantityExtra.Value = 0
                    Else
                        '...EXISTS
                        Dim oDBdt As DataTable
                        tSql = ""

                        Dim oStrBuilder As New System.Text.StringBuilder()
                        oStrBuilder.Remove(0, oStrBuilder.Length)

                        oStrBuilder.AppendLine("SELECT A.FTOrderNo, A.FTSubOrderNo, A.FNHSysMatColorId, A.FNHSysMatSizeId")
                        oStrBuilder.AppendLine("     , ISNULL(A.FNQuantity, 0) AS FNQuantity, ISNULL(A.FNPrice, 0) AS FNPrice, ISNULL(A.FNAmt, 0) AS FNAmt, ISNULL(A.FNExtraQty, 0) AS FNExtraQty, ISNULL(A.FNQuantityExtra, 0) AS FNQuantityExtra")
                        oStrBuilder.AppendLine("FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS A WITH(NOLOCK)")
                        oStrBuilder.AppendLine("WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Properties.Tag.ToString().Trim()) & "'")
                        oStrBuilder.AppendLine("      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Properties.Tag.ToString().Trim()) & "'")
                        oStrBuilder.AppendLine(String.Format("      AND A.FNHSysMatColorId = {0}", Val(Me.FTColorway.Properties.Tag.ToString())))
                        oStrBuilder.AppendLine(String.Format("      AND A.FNHSysMatSizeId = {0}", Val(Me.FTSizeBreakDown.Properties.Tag.ToString())))

                        tSql = oStrBuilder.ToString()

                        oDBdt = HI.Conn.SQLConn.GetDataTable(tSql, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                        If oDBdt.Rows.Count > 0 Then
                            Me.FNQuantity.Value = IIf(IsDBNull(oDBdt.Rows(0).Item("FNQuantity")), 0, oDBdt.Rows(0).Item("FNQuantity"))
                            Me.FNPrice.Value = IIf(IsDBNull(oDBdt.Rows(0).Item("FNPrice")), 0, oDBdt.Rows(0).Item("FNPrice"))
                            Me.FNAmt.Value = IIf(IsDBNull(oDBdt.Rows(0).Item("FNAmt")), 0, oDBdt.Rows(0).Item("FNAmt"))
                            Me.FNExtraQtySubOrder.Value = IIf(IsDBNull(oDBdt.Rows(0).Item("FNExtraQty")), 0, oDBdt.Rows(0).Item("FNExtraQty"))
                            Me.FNQuantityExtra.Value = IIf(IsDBNull(oDBdt.Rows(0).Item("FNQuantityExtra")), 0, oDBdt.Rows(0).Item("FNQuantityExtra"))
                        Else
                            Me.FNQuantity.Value = 0
                            'Me.FNPrice.Value = 0
                            Me.FNAmt.Value = 0
                            'Me.FNExtraQtySubOrder.Value = 0
                            Me.FNQuantityExtra.Value = 0

                            If Not ((_FTStateAutoExtraManual)) Then
                                'Me.FNPrice.Value = 0
                                Me.FNExtraQtySubOrder.Value = 0
                            End If
                        End If

                    End If

                End If

            End If

        Catch ex As Exception
            'Throw New Exception(ex.Message.ToString() & ControlChars.CrLf & ex.StackTrace.ToString())
        End Try
    End Sub

    Private Sub FTMainMaterial_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles FTMainMaterial.KeyPress
        e.Handled = True
    End Sub

    Private Sub FTCombination_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles FTCombination.KeyPress
        e.Handled = True
    End Sub

    Private Sub FTSewNote_PreviewKeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.PreviewKeyDownEventArgs) Handles FTSewNote.PreviewKeyDown
        If e.KeyData = Keys.Tab Then
            'e.IsInputKey = True
            Call ocmAddDT.PerformClick()
        End If
    End Sub

    Private Sub FTPackNote_PreviewKeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.PreviewKeyDownEventArgs) Handles FTPackNote.PreviewKeyDown
        If e.KeyData = Keys.Tab Then
            'e.IsInputKey = True
            Call ocmAddDT.PerformClick()
        End If
    End Sub

    Private Sub ogvSizeSpec_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles ogvSizeSpec.KeyDown
        Dim oGridView As GridView = New GridView()
        Dim SelectedRow As Integer, FocusedColumn As Integer

        If ogdSizeSpec.DataSource Is Nothing Then Exit Sub

        oGridView = ogdSizeSpec.Views(0)

        Try
            If (Not IsDBNull(oGridView)) Then
                SelectedRow = oGridView.FocusedRowHandle
                FocusedColumn = oGridView.FocusedColumn.AbsoluteIndex
            End If

            If e.KeyCode = Keys.Return Or e.KeyCode = Keys.Tab Then
                Dim nLastCol As Integer = oGridView.Columns.Count - 1

                If oGridView.Columns(FocusedColumn).VisibleIndex = oGridView.Columns(nLastCol).VisibleIndex Then
                    If SelectedRow = oGridView.RowCount - 1 Then
                        Call W_PRCxInitNewRowSizeSpec(CType(Me.ogdSizeSpec.DataSource, System.Data.DataTable))
                    End If
                End If

            End If

            If e.KeyCode = Keys.Down Then
                If SelectedRow = oGridView.RowCount - 1 Then
                    Call W_PRCxInitNewRowSizeSpec(CType(Me.ogdSizeSpec.DataSource, System.Data.DataTable))
                End If
            End If

        Catch ex As Exception
            'MsgBox(ex.Message().ToString() & Environment.NewLine & ex.StackTrace().ToString(), MsgBoxStyle.OkOnly, My.Application.Info.Title)
        End Try

    End Sub

    Private Sub otab_SelectedPageChanged(ByVal sender As System.Object, ByVal e As DevExpress.XtraTab.TabPageChangedEventArgs) Handles otab.SelectedPageChanged
        Call W_PRCxSwitchTab()
    End Sub

    Private Sub FNHSysCmpRunId_EditValueChanged(sender As Object, e As EventArgs) Handles FNHSysCmpRunId.EditValueChanged
        Try
            'If Me.FNHSysCmpRunId.Properties.Tag = "" Then
            '    RemoveHandler FTOrderNo.EditValueChanged, AddressOf HI.TL.HandlerControl.DynamicButtonedit_EditValueChanged

            '    Me.FTOrderNo.Text = ""
            '    Me.FTOrderNo.Properties.Tag = ""

            '    AddHandler FTOrderNo.EditValueChanged, AddressOf HI.TL.HandlerControl.DynamicButtonedit_EditValueChanged

            'End If

        Catch ex As Exception
        End Try

    End Sub

    Private Sub ocmimportcomponentfrombom_Click(sender As Object, e As EventArgs) Handles ocmimportcomponentfrombom.Click
        If Me.FTOrderNo.Text <> "" Then
            If Me.FTOrderNo.Properties.Tag.ToString <> "" Then
                If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
                    HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
                    Exit Sub
                End If

                If (CheckApproveOrder()) Then Exit Sub

                If Me.FTSubOrderNo.Text <> "" Then
                    If Me.FTSubOrderNo.Properties.Tag.ToString <> "" Then

                        If Me.otab.SelectedTabPage.Name = otbSubOrderComponent.Name Then

                            If HI.MG.ShowMsg.mConfirmProcess("คุณต้องการทำการ Import Component From Bom ข้อมูลที่บันทึกไว้อาจถูกอัพเดท !!!", 1407070001) = True Then
                                Call W_PRCbSaveSyncronizeBomSheetMerMaterialComponent()
                                Call W_PRCbShowBrowseDataSubOrderComponent(Me.FTOrderNo.Text.Trim, Me.FTSubOrderNo.Text.Trim)
                            End If

                        ElseIf Me.otab.SelectedTabPage.Name = otpSubOrderSewInfo.Name Then

                            If HI.MG.ShowMsg.mConfirmProcess("คุณต้องการทำการ Import Sewing Info From Bom Part !!!", 1447870881) = True Then
                                Call W_PRCbSaveSewingInfoFromBomPart()
                                Call W_PRCbShowBrowseDataSubOrderSewingInfo()
                            End If

                        ElseIf Me.otab.SelectedTabPage.Name = otpSubOrderPackInfo.Name Then

                            If HI.MG.ShowMsg.mConfirmProcess("คุณต้องการทำการ Import Packing Info From Style Packing Master !!!", 1447879881) = True Then
                                Call W_PRCbSavepackingInfoFromStylePackingMaster()
                                Call W_PRCbShowBrowseDataSubOrderPackInfo()
                            End If
                        ElseIf Me.otab.SelectedTabPage.Name = otpSubOrderSizeSpec.Name Then
                            If HI.MG.ShowMsg.mConfirmProcess("คุณต้องการทำการ Import Size Spec Info From Size Spec Develop !!!", 1449779881) = True Then

                                Dim cmdstring As String = " EXEC  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.SP_ORDER_SIZESPEC_POST_BYORDER '" & HI.UL.ULF.rpQuoted(FTOrderNo.Text) & "','" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text) & "','" & HI.UL.ULF.rpQuoted(FNHSysStyleId.Text) & "','" & HI.UL.ULF.rpQuoted(FNHSysSeasonId.Text) & "','" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                                HI.Conn.SQLConn.ExecuteNonQuery(cmdstring, Conn.DB.DataBaseName.DB_MERCHAN)

                                Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(FTOrderNo.Text, FTSubOrderNo.Text)

                            End If
                        End If


                    Else
                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTSubOrderNo_lbl.Text)
                        FTSubOrderNo.Focus()
                    End If

                Else
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTSubOrderNo_lbl.Text)
                    FTSubOrderNo.Focus()
                End If
            Else
                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTOrderNo_lbl.Text)
                FTOrderNo.Focus()
            End If
        Else
            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTOrderNo_lbl.Text)
            FTOrderNo.Focus()
        End If
    End Sub

    Private Sub ocmremovecomponent_Click(sender As Object, e As EventArgs) Handles ocmremovecomponent.Click
        If CheckOwner() = False Then
            Exit Sub
        End If
        If CheckCombine() = True Then
            HI.MG.ShowMsg.mInfo("ไม่สามารถลบ เนื่องจากใบสั่งผลิตนี้ได้ มาจากการแบ่งงาน", 1511181420, Me.Text)
            Exit Sub
        End If

        If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
            HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
            Exit Sub
        End If
        If (CheckApproveOrder()) Then Exit Sub
        With Me.ogvOrderSubComponent

            If .FocusedRowHandle < 0 Then Exit Sub

            Dim _StrDel As String = ""

            For Each i As Integer In .GetSelectedRows()
                If _StrDel = "" Then
                    _StrDel = (Integer.Parse(.GetRowCellValue(i, "FNSeq"))).ToString
                Else
                    _StrDel = _StrDel & "," & (Integer.Parse(.GetRowCellValue(i, "FNSeq"))).ToString
                End If
            Next

            If HI.MG.ShowMsg.mConfirmProcess("คุณต้องการทำการลบข้อมูล Component ใช่หรือไม่ ?", 1407100001, _StrDel) = True Then
                Dim nFNHSysMerMatId As Integer
                Dim tFTRemark As String
                Dim FNSeq As Integer
                Dim FTComponent As String
                Dim FNPart As Integer
                Dim FNConSmp As Double
                Dim _Qry As String = ""

                For Each i As Integer In .GetSelectedRows()

                    nFNHSysMerMatId = Val(.GetRowCellValue(i, "FNHSysMerMatId"))
                    tFTRemark = .GetRowCellValue(i, "FTRemark").ToString()
                    FTComponent = .GetRowCellValue(i, "FTComponent").ToString()
                    FNSeq = Integer.Parse(.GetRowCellValue(i, "FNSeq"))
                    FNPart = Integer.Parse(.GetRowCellValue(i, "FNPart"))
                    FNConSmp = Double.Parse(.GetRowCellValue(i, "FNConSmp"))

                    _Qry = "DELETE A"
                    _Qry &= vbCrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Component] AS A"
                    _Qry &= vbCrLf & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' "
                    _Qry &= vbCrLf & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text.Trim) & "' "
                    _Qry &= vbCrLf & "      AND A.FNSeq = " & FNSeq & "  "
                    _Qry &= vbCrLf & "      AND A.FNPart = " & FNPart & " "

                    REM ...ให้ User ทำการ Re-Sequence Manual
                    '====================================================================================================================================================
                    '_Qry &= vbCrLf & "  UPDATE  A SET FNSeq=FNNo"
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Component]  AS A  INNER JOIN "
                    '_Qry &= vbCrLf & "(SELECT ROW_NUMBER() OVER(ORDER BY FNSeq) AS FNNo,FNSeq,FTOrderNo,FTSubOrderNo"
                    '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Component]  "
                    '_Qry &= vbCrLf & "  WHERE FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' "
                    '_Qry &= vbCrLf & " AND FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text.Trim) & "' "
                    '_Qry &= vbCrLf & ") T1 ON A.FNSeq=T1.FNSeq AND A.FTOrderNo=T1.FTOrderNo AND  A.FTSubOrderNo=T1.FTSubOrderNo "
                    '====================================================================================================================================================

                    HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)

                Next

                '...update revised component information
                '======================================================================================================================================================================================
                Dim tSQLRevised As String

                tSQLRevised = ""
                tSQLRevised = "SELECT TOP 1 A.FTStateApprovedComponent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                If HI.Conn.SQLConn.GetField(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "1" Then '...revised sewing sequence process
                    tSQLRevised = ""
                    tSQLRevised = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                    tSQLRevised &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                    tSQLRevised &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                    tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                    tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                    tSQLRevised &= Environment.NewLine & "SET @FTRevisedInfoBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "';"
                    tSQLRevised &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                    tSQLRevised &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                    tSQLRevised &= Environment.NewLine & "SELECT @FDRevisedInfoDate = CONVERT(VARCHAR(10), GETDATE(), 111), @FTRevisedInfoTime = CONVERT(VARCHAR(8), GETDATE(), 114)"
                    tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                    tSQLRevised &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                    tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                    tSQLRevised &= Environment.NewLine & "UPDATE A"
                    tSQLRevised &= Environment.NewLine & "SET A.FTStateApprovedComponent = N'0'"
                    tSQLRevised &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                    tSQLRevised &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                    tSQLRevised &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                    If HI.Conn.SQLConn.ExecuteNonQuery(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then

                    End If
                End If
                '======================================================================================================================================================================================

                Call W_PRCbShowBrowseDataSubOrderComponent(Me.FTOrderNo.Text.Trim(), FTSubOrderNo.Text.Trim)

            End If

        End With

    End Sub

    Private Sub ocmaddcomponent_Click(sender As Object, e As EventArgs) Handles ocmaddcomponent.Click

        If Me.FTOrderNo.Text <> "" Then

            If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
                HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
                Exit Sub
            End If
            If (CheckApproveOrder()) Then Exit Sub
            If Me.FTSubOrderNo.Text <> "" Then

                If CheckOwner() = False Then
                    Exit Sub
                End If

                With _wAddOrderSubComponent
                    HI.TL.HandlerControl.ClearControl(_wAddOrderSubComponent)
                    .AddComponent = False
                    .FNSeq.Enabled = True
                    .ShowDialog()

                    If (.AddComponent) Then

                        Dim _Qry As String

                        '...step I ==> ถ้ารายการ Seq. ที่ทำการเพิ่มรายการนั้นตรงกับรายการเดิม (Seq. เดิมในตาราง) ให้ทำการ เพิ่มรายการ Seq. ของทุกรายการ ที่มีค่ามากกว่าหรือเท่ากับ รายการที่ทำการเพิ่มใหม่ แล้ว ทำการ แล้วทำการ แทรก รายการ
                        _Qry = "UPDATE [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_Component"
                        _Qry &= vbCrLf & "SET FNSeq = FNSeq + 1"
                        _Qry &= vbCrLf & "WHERE FTOrderNo = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "'"
                        _Qry &= vbCrLf & "      AND FTSubOrderNo='" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'"
                        _Qry &= vbCrLf & "      AND FNSeq >= " & .FNSeq.Value & ""
                        '...update รายการ FNSeq ในตาราง ถ้ารายการ Seq.นั้น มีค่ามากกว่ารายการ Seq.ที่ป้อนเข้ามาใหม่ ==> Seq เดิม เท่ากับ Seq เดิม บวก 1
                        HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)

                        _Qry = "UPDATE [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_Component"
                        _Qry &= vbCrLf & "SET FTUpdUser = '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                        _Qry &= vbCrLf & "  , FDUpdDate = " & HI.UL.ULDate.FormatDateDB & ""
                        _Qry &= vbCrLf & "  , FTUpdTime = " & HI.UL.ULDate.FormatTimeDB & ""
                        _Qry &= vbCrLf & "  , FNHSysMerMatId = " & Integer.Parse(Val(.FNHSysMerMatId.Properties.Tag.ToString)) & ""
                        _Qry &= vbCrLf & "  , FTComponent = '" & HI.UL.ULF.rpQuoted(.FTComponent.Text.Trim) & "'"
                        _Qry &= vbCrLf & "  , FTRemark = '" & HI.UL.ULF.rpQuoted(.FTRemark.Text.Trim) & "'"
                        _Qry &= vbCrLf & "  , FNConSmp = " & Double.Parse(Val(.FNConSmp.Value)) & ""
                        _Qry &= vbCrLf & "WHERE FTOrderNo = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "'"
                        _Qry &= vbCrLf & "      AND FTSubOrderNo = '" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'"
                        _Qry &= vbCrLf & "      AND FNSeq = " & .FNSeq.Value & ""

                        If HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_MERCHAN) = False Then

                            _Qry = "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_Component("
                            _Qry &= vbCrLf & "FTInsUser, FDInsDate, FTInsTime"
                            _Qry &= vbCrLf & ", FTOrderNo, FTSubOrderNo, FNHSysMerMatId, FNPart"
                            _Qry &= vbCrLf & ", FTComponent, FTRemark, FNConSmp, FNSeq"
                            _Qry &= vbCrLf & ")"
                            _Qry &= vbCrLf & "SELECT '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "' "
                            _Qry &= vbCrLf & ", " & HI.UL.ULDate.FormatDateDB & ""
                            _Qry &= vbCrLf & ", " & HI.UL.ULDate.FormatTimeDB & ""
                            _Qry &= vbCrLf & ", '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "'"
                            _Qry &= vbCrLf & ", '" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'"
                            _Qry &= vbCrLf & ", " & Integer.Parse(Val(.FNHSysMerMatId.Properties.Tag.ToString)) & ""
                            _Qry &= vbCrLf & ", 0"
                            _Qry &= vbCrLf & ", '" & HI.UL.ULF.rpQuoted(.FTComponent.Text.Trim) & "'"
                            _Qry &= vbCrLf & ", '" & HI.UL.ULF.rpQuoted(.FTRemark.Text.Trim) & "'"
                            _Qry &= vbCrLf & ", " & Double.Parse(Val(.FNConSmp.Value)) & ""
                            _Qry &= vbCrLf & ", " & .FNSeq.Value & ""

                            '_Qry &= vbCrLf & "  UPDATE  A SET FNSeq=FNNo"
                            '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Component]  AS A  INNER JOIN "
                            '_Qry &= vbCrLf & "(SELECT ROW_NUMBER() OVER(ORDER BY FNSeq) AS FNNo,FNSeq,FTOrderNo,FTSubOrderNo"
                            '_Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Component]  "
                            '_Qry &= vbCrLf & "  WHERE FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "' "
                            '_Qry &= vbCrLf & " AND FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text.Trim) & "' "
                            '_Qry &= vbCrLf & ") T1 ON A.FNSeq=T1.FNSeq AND A.FTOrderNo=T1.FTOrderNo AND  A.FTSubOrderNo=T1.FTSubOrderNo "

                            HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)

                        End If

                        '...update revised component information
                        '======================================================================================================================================================================================
                        Dim tSQLRevised As String

                        tSQLRevised = ""
                        tSQLRevised = "SELECT TOP 1 A.FTStateApprovedComponent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                        If HI.Conn.SQLConn.GetField(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "1" Then '...revised sewing sequence process
                            tSQLRevised = ""
                            tSQLRevised = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                            tSQLRevised &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                            tSQLRevised &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                            tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                            tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                            tSQLRevised &= Environment.NewLine & "SET @FTRevisedInfoBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "';"
                            tSQLRevised &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                            tSQLRevised &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                            tSQLRevised &= Environment.NewLine & "SELECT @FDRevisedInfoDate = CONVERT(VARCHAR(10), GETDATE(), 111), @FTRevisedInfoTime = CONVERT(VARCHAR(8), GETDATE(), 114)"
                            tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                            tSQLRevised &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                            tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                            tSQLRevised &= Environment.NewLine & "UPDATE A"
                            tSQLRevised &= Environment.NewLine & "SET A.FTStateApprovedComponent = N'0'"
                            tSQLRevised &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                            tSQLRevised &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                            tSQLRevised &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                            If HI.Conn.SQLConn.ExecuteNonQuery(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                            End If

                        End If
                        '======================================================================================================================================================================================

                        Call W_PRCbShowBrowseDataSubOrderComponent(Me.FTOrderNo.Text.Trim(), FTSubOrderNo.Text.Trim)

                    End If

                End With
            Else
                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTSubOrderNo_lbl.Text)
                Try
                    Me.otab.SelectedTabPageIndex = 1
                Catch ex As Exception
                End Try

                FTSubOrderNo.Focus()
            End If
        Else
            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTOrderNo_lbl.Text)
            FTOrderNo.Focus()
        End If

    End Sub

    Private Sub ocmcopycomsewpacksize_Click(sender As Object, e As EventArgs) Handles ocmcopycomsewpacksize.Click
        If CheckOwner() = False Then
            Exit Sub
        End If


        If Me.FTOrderNo.Text <> "" Then
            If Me.FTSubOrderNo.Text <> "" Then

                If (CheckApproveOrder()) Then Exit Sub

                With _wCopyComSewPackSize
                    HI.TL.HandlerControl.ClearControl(_wCopyComSewPackSize)
                    .AddComponent = False
                    .FTOrderNo.Text = FTOrderNo.Text
                    .FTSubOrderNoSource.Text = Me.FTSubOrderNo.Text
                    .FTSubOrderNo.Text = "" ' Me.FTSubOrderNo.Text
                    .FTSubOrderNoTo.Text = "" ' Me.FTSubOrderNo.Text
                    .ockcomponent.Checked = True
                    .ockPacking.Checked = True
                    .ockSewing.Checked = True
                    .ockSizeSpec.Checked = True
                    .ShowDialog()

                    If (.AddComponent) Then
                        Call W_PRCbShowBrowseDataSubOrderComponent(Me.FTOrderNo.Text, Me.FTSubOrderNo.Text)
                        Call W_PRCbShowBrowseDataSubOrderSewingInfo()
                        Call W_PRCbShowBrowseDataSubOrderPackInfo()
                        Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(Me.FTOrderNo.Text, Me.FTSubOrderNo.Text)
                    End If

                End With
            Else
                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTSubOrderNo_lbl.Text)
                Try
                    Me.otab.SelectedTabPageIndex = 1
                Catch ex As Exception
                End Try

                FTSubOrderNo.Focus()
            End If
        Else
            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTOrderNo_lbl.Text)
            FTOrderNo.Focus()
        End If

    End Sub

    Private Sub FNQuantityExtra_EditValueChanged(sender As Object, e As EventArgs) Handles FNQuantityExtra.EditValueChanged

    End Sub

    Private Sub FNQuantityExtra_KeyDown(sender As Object, e As KeyEventArgs) Handles FNQuantityExtra.KeyDown
        Select Case e.KeyCode
            Case Keys.Enter
                If ocmAddDT.Enabled Then
                    Proc_SaveSubOrder(ocmAddDT, New System.EventArgs)
                End If
        End Select
    End Sub

    Private Sub FNQuantityExtra_KeyPress(sender As Object, e As KeyPressEventArgs) Handles FNQuantityExtra.KeyPress

    End Sub

    Private Sub FNExtraQtySubOrder_EditValueChanged(sender As Object, e As EventArgs) Handles FNExtraQtySubOrder.EditValueChanged

    End Sub

    Private Sub ocmreseq_Click(sender As Object, e As EventArgs) Handles ocmreseq.Click
        If CheckOwner() = False Then
            Exit Sub
        End If

        If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
            HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
            Exit Sub
        End If

        If (CheckApproveOrder()) Then Exit Sub

        Select Case Me.otab.SelectedTabPageIndex
            Case eTabIndexs.FactorySubOrderNoComponent
                If Me.FTOrderNo.Text <> "" Then

                    If Me.FTSubOrderNo.Text <> "" Then

                        Dim _Qry As String

                        _Qry &= vbCrLf & "UPDATE  A SET FNSeq = FNNo" '/*เอา FNSeq ชน FNSeq แล้ว เอา FNNo ที่เป็นการเรียงลำดับจากการ ROW_NUMBER() OVER(...)  Order By ไป update FNSeq เดิม*/
                        _Qry &= vbCrLf & "FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Component]  AS A  INNER JOIN"
                        _Qry &= vbCrLf & "      (SELECT ROW_NUMBER() OVER(ORDER BY FNSeq) AS FNNo, FNSeq, FTOrderNo, FTSubOrderNo"
                        _Qry &= vbCrLf & "       FROM  [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_Component]"
                        _Qry &= vbCrLf & "       WHERE FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim()) & "'"
                        _Qry &= vbCrLf & "             AND FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text.Trim) & "'"
                        _Qry &= vbCrLf & "       ) T1 ON A.FNSeq = T1.FNSeq AND A.FTOrderNo = T1.FTOrderNo AND  A.FTSubOrderNo = T1.FTSubOrderNo"

                        HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)

                        Call W_PRCbShowBrowseDataSubOrderComponent(Me.FTOrderNo.Text.Trim(), Me.FTSubOrderNo.Text.Trim)

                    Else
                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, Me.FTSubOrderNo_lbl.Text)
                        Try
                            Me.otab.SelectedTabPageIndex = 1
                        Catch ex As Exception
                        End Try

                        FTSubOrderNo.Focus()
                    End If
                Else
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, Me.FTOrderNo_lbl.Text)
                    FTOrderNo.Focus()
                End If

            Case eTabIndexs.FactorySubOrderNoSewing
                If Me.FTOrderNo.Text.Trim <> "" Then
                    If Me.FTSubOrderNo.Text.Trim <> "" Then
                        Dim sSQL As String
                        sSQL = ""
                        sSQL = "UPDATE A"
                        sSQL &= Environment.NewLine & "SET A.FNSewSeq = B.FNReSewSeq"
                        sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS A LEFT JOIN (SELECT ROW_NUMBER() OVER(ORDER BY L1.FNSewSeq ASC) AS FNReSewSeq, L1.FNSewSeq, L1.FTOrderNo, L1.FTSubOrderNo"
                        sSQL &= Environment.NewLine & "                               FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Sew AS L1 (NOLOCK)"
                        sSQL &= Environment.NewLine & "                               WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                        sSQL &= Environment.NewLine & "                                     AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"
                        sSQL &= Environment.NewLine & "							   ) AS B ON A.FTOrderNo = B.FTOrderNo"
                        sSQL &= Environment.NewLine & "							             AND A.FTSubOrderNo = B.FTSubOrderNo"
                        sSQL &= Environment.NewLine & "WHERE A.FNSewSeq = B.FNSewSeq;"

                        HI.Conn.SQLConn.ExecuteNonQuery(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                        Call W_PRCbShowBrowseDataSubOrderSewingInfo()

                    Else
                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, Me.FTSubOrderNo_lbl.Text)
                        Try
                            Me.otab.SelectedTabPageIndex = eTabIndexs.FactorySubOrderNo
                        Catch ex As Exception
                        End Try

                        Me.FTSubOrderNo.Focus()

                    End If

                Else
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, Me.FTOrderNo_lbl.Text)
                    Me.FTOrderNo.Focus()
                End If

            Case eTabIndexs.FactorySubOrderNoPacking
                If Me.FTOrderNo.Text.Trim <> "" Then
                    If Me.FTSubOrderNo.Text.Trim <> "" Then
                        Dim tSQLPacking As String

                        tSQLPacking = ""

                        tSQLPacking = "UPDATE A"
                        tSQLPacking &= Environment.NewLine & "SET A.FNPackSeq = B.FNRePackSeq"
                        tSQLPacking &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS A LEFT JOIN (SELECT ROW_NUMBER() OVER(ORDER BY L1.FNPackSeq ASC) AS FNRePackSeq, L1.FNPackSeq, L1.FTOrderNo, L1.FTSubOrderNo"
                        tSQLPacking &= Environment.NewLine & "                                FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_Pack AS L1 (NOLOCK)"
                        tSQLPacking &= Environment.NewLine & "                                WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                        tSQLPacking &= Environment.NewLine & "                                      AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "'"
                        tSQLPacking &= Environment.NewLine & "								) AS B ON A.FTOrderNo = B.FTOrderNo"
                        tSQLPacking &= Environment.NewLine & "WHERE A.FTSubOrderNo = B.FTSubOrderNo"
                        tSQLPacking &= Environment.NewLine & "      AND A.FNPackSeq = B.FNPackSeq;"

                        HI.Conn.SQLConn.ExecuteNonQuery(tSQLPacking, HI.Conn.DB.DataBaseName.DB_MERCHAN)

                        Call W_PRCbShowBrowseDataSubOrderPackInfo()

                    Else
                        HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, Me.FTSubOrderNo_lbl.Text)
                        Try
                            Me.otab.SelectedTabPageIndex = eTabIndexs.FactorySubOrderNoPacking
                        Catch ex As Exception
                        End Try

                        Me.FTSubOrderNo.Focus()

                    End If

                Else
                    HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, Me.FTOrderNo_lbl.Text)
                    Me.FTOrderNo.Focus()
                End If

            Case Else
                '...nothing
        End Select

    End Sub

    Private Sub ogdSizeSpec_Click(sender As Object, e As EventArgs) Handles ogdSizeSpec.Click

    End Sub

    Private Sub FNGarmentQtyTest_EditValueChanged(sender As Object, e As EventArgs) Handles FNGarmentQtyTest.EditValueChanged

    End Sub

    Private Sub FNGarmentQtyTest_KeyDown(sender As Object, e As KeyEventArgs) Handles FNGarmentQtyTest.KeyDown

        Select Case e.KeyCode
            Case Keys.Enter
                If ocmAddDT.Enabled Then



                    Proc_SaveSubOrder(ocmAddDT, New System.EventArgs)
                End If
        End Select

    End Sub

    Private Sub FNGarmentQtyTest_KeyPress(sender As Object, e As KeyPressEventArgs) Handles FNGarmentQtyTest.KeyPress
        'If Asc(e.KeyChar) = 13 Then
        '    If ocmAddDT.Enabled Then
        '        Proc_SaveSubOrder(ocmAddDT, New System.EventArgs)
        '    End If
        'End If
    End Sub

    Private Function DeleteAllColorwayOrSize(ColorWayID As Integer, SizeID As Integer, Optional ByVal paramFTColorway As String = "", Optional ByVal paramFTSizeBreakdown As String = "") As Boolean

        Dim tSql As String
        Dim tSqlWhereSubOrderNoPackCarton As String
        Dim tFTOrderNo As String = Me.FTOrderNo.Text
        Dim tFTSubOrderNo As String = Me.FTSubOrderNo.Text
        Dim _QryDelete As String = ""

        Try

            HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
            HI.Conn.SQLConn.SqlConnectionOpen()
            HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
            HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction

            tSql = ""
            tSql = "DELETE A"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
            tSql &= Environment.NewLine & "       AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"

            If ColorWayID > 0 Then
                '...ลบเฉพาะบางรายการ รหัสสีนี้เท่านั้น : แต่ถ้าไม่ระบุ คือเท่ากับ ศูนย์ ให้ทำการ ลบทุก รายการรหัสี ตาม Sub Order No. นี้
                tSql &= Environment.NewLine & "       AND A.[FNHSysMatColorId] = " & ColorWayID
            End If

            If SizeID > 0 Then
                '...ลบเฉพาะบางรายการ รหัสไซส์นี้เท่านั้น : แต่ถ้าไม่ระบุ คื่อเท่ากับศูนย์ ให้ทำการ ลบทุก รายการรหัสไซส์ ตาม Sub Order No. นี้
                tSql &= Environment.NewLine & "       AND A.[FNHSysMatSizeId] = " & SizeID
            End If

            _QryDelete = tSql
            If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                Return False
            End If

            tSql = "DELETE L1"
            tSql &= vbCrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS L1"
            tSql &= vbCrLf & "WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
            tSql &= vbCrLf & "      AND L1.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"
            tSql &= vbCrLf & "      AND NOT EXISTS (SELECT DISTINCT L2.FNHSysMatSizeId AS FNHSysMatSizeId"
            tSql &= vbCrLf & "                      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L2 WITH(NOLOCK)"
            tSql &= vbCrLf & "                      WHERE L2.FTOrderNo = L1.FTOrderNo"
            tSql &= vbCrLf & "                            AND L2.FTSubOrderNo = L1.FTSubOrderNo"
            tSql &= vbCrLf & "                            AND L2.FNHSysMatSizeId = L1.FNHSysMatSizeId);"

            If HI.Conn.SQLConn.ExecuteTran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                Return False
            End If

            '...clear pack sub orderno. carton : TMERTOrderSub_Bundle Modify 2014/12/16
            tSql = ""

            tSql = "DELETE A"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub_Bundle] AS A "
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
            tSql &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"

            If paramFTColorway.Trim <> "" Then
                tSql &= Environment.NewLine & "      AND A.FTColorway = N'" & HI.UL.ULF.rpQuoted(paramFTColorway) & "'"
            End If

            If paramFTSizeBreakdown <> "" Then
                tSql &= Environment.NewLine & "      AND A.FTSizeBreakdown = N'" & HI.UL.ULF.rpQuoted(paramFTSizeBreakdown) & "'"
            End If

            If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                Return False
            End If

            HI.Conn.SQLConn.Tran.Commit()
            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

            HI.Auditor.CreateLog.CreateLogDelete(HI.ST.SysInfo.MenuName, Me.Name, _QryDelete)

            Try
                REM 2014/12/18 drop field TMERTOrderSub Amount, Qty
                'tSql = " UPDATE A"
                'tSql &= vbCrLf & " SET A.FNSubOrderQty = B.FNQuantity"
                'tSql &= vbCrLf & "   ,A.FNSubOrderAmt = B.FNAmt"
                'tSql &= vbCrLf & "  ,A.FNSubOrderExtraQty = B.FNSubOrderExtraQty"
                'tSql &= vbCrLf & "   ,A.FNSubOrderExtraAmt = B.FNSubOrderExtraAmt"
                'tSql &= vbCrLf & "   ,A.FNSubOrderGarmentTestQty = B.FNSubOrderGarmentTestQty"
                'tSql &= vbCrLf & "   ,A.FNSubOrderGarmentTestAmnt = B.FNSubOrderGarmentTestAmnt"
                'tSql &= vbCrLf & "   ,A.FTUpdUser = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                'tSql &= vbCrLf & " ,A.FDUpdDate = " & HI.UL.ULDate.FormatDateDB
                'tSql &= vbCrLf & "  ,A.FTUpdTime =" & HI.UL.ULDate.FormatTimeDB
                'tSql &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS A LEFT JOIN (SELECT M.FTOrderNo, M.FTSubOrderNo, ISNULL(SUM(M.FNQuantity),0) AS FNQuantity, ISNULL(SUM(M.FNAmt),0) AS FNAmt"
                'tSql &= vbCrLf & "    , ISNULL(SUM(M.FNQuantityExtra),0) AS FNSubOrderExtraQty"
                'tSql &= vbCrLf & "    , ISNULL(SUM(M.FNAmntExtra),0) AS FNSubOrderExtraAmt"
                'tSql &= vbCrLf & "    , ISNULL(SUM(M.FNGarmentQtyTest), 0) AS FNSubOrderGarmentTestQty"
                'tSql &= vbCrLf & "    , ISNULL(SUM(M.FNAmntQtyTest), 0) AS FNSubOrderGarmentTestAmnt"
                'tSql &= vbCrLf & "     FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS M WITH(NOLOCK)"
                'tSql &= vbCrLf & "    WHERE M.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                'tSql &= vbCrLf & "        AND M.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"
                'tSql &= vbCrLf & "  GROUP BY M.FTOrderNo, M.FTSubOrderNo) AS B ON A.FTOrderNo = B.FTOrderNo"
                'tSql &= vbCrLf & " WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                'tSql &= vbCrLf & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"
                'tSql &= vbCrLf & "    AND A.FTSubOrderNo = B.FTSubOrderNo;"

                'HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

                '=================================================================================================================================================================================================
                REM 2014/12/16 HITECH_MERCHAN..TMERTOrder_BreakDown NOT USE
                'Call UpdateOrderBreakDown(FTOrderNo.Text, 0, 0)
                '=================================================================================================================================================================================================

                REM 20104/12/18 drop field TMERTOrderSub Amount, Qty
                'Call UpdateOrderQty()

            Catch ex As Exception

            End Try

            Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(tFTSubOrderNo)
            Call W_PRCbShowBrowseDataCurrencyInfo()
            Call W_PRCbShowBrowseDataOrderBreakdownInfo()
            Call W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt()
            Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(tFTOrderNo, tFTSubOrderNo)
            Call PROC_SETxShowBrowsePackingCartonInfo()

            Return True
        Catch ex As Exception
            HI.Conn.SQLConn.Tran.Rollback()
            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
            Return False
        End Try

    End Function


    Private Function DeleteAllColorwayOrSizeAllSub(paramFTColorway As String, paramFTSizeBreakdown As String) As Boolean

        Dim tSql As String
        Dim tSqlWhereSubOrderNoPackCarton As String
        Dim tFTOrderNo As String = Me.FTOrderNo.Text
        Dim _QryDelete As String = ""

        Try

            HI.Conn.SQLConn._ConnString = HI.Conn.DB.ConnectionString(Conn.DB.DataBaseName.DB_MERCHAN)
            HI.Conn.SQLConn.SqlConnectionOpen()
            HI.Conn.SQLConn.Cmd = HI.Conn.SQLConn.Cnn.CreateCommand
            HI.Conn.SQLConn.Tran = HI.Conn.SQLConn.Cnn.BeginTransaction

            tSql = ""
            tSql = "DELETE A"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS A"
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"

            If paramFTColorway <> "" Then
                '...ลบเฉพาะบางรายการ รหัสสีนี้เท่านั้น : แต่ถ้าไม่ระบุ คือเท่ากับ ศูนย์ ให้ทำการ ลบทุก รายการรหัสี ตาม Sub Order No. นี้
                tSql &= Environment.NewLine & "       AND A.[FTColorway] = '" & HI.UL.ULF.rpQuoted(paramFTColorway) & "'"
            End If

            If paramFTSizeBreakdown <> "" Then
                '...ลบเฉพาะบางรายการ รหัสไซส์นี้เท่านั้น : แต่ถ้าไม่ระบุ คื่อเท่ากับศูนย์ ให้ทำการ ลบทุก รายการรหัสไซส์ ตาม Sub Order No. นี้
                tSql &= Environment.NewLine & "       AND A.[FTSizeBreakDown] = '" & HI.UL.ULF.rpQuoted(paramFTSizeBreakdown) & "'"
            End If

            _QryDelete = tSql
            If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                Return False
            End If

            tSql = "DELETE L1"
            tSql &= vbCrLf & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_SizeSpec AS L1"
            tSql &= vbCrLf & "WHERE L1.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
            tSql &= vbCrLf & "      AND NOT EXISTS (SELECT DISTINCT L2.FNHSysMatSizeId AS FNHSysMatSizeId"
            tSql &= vbCrLf & "                      FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_BreakDown AS L2 WITH(NOLOCK)"
            tSql &= vbCrLf & "                      WHERE L2.FTOrderNo = L1.FTOrderNo"
            tSql &= vbCrLf & "                            AND L2.FTSubOrderNo = L1.FTSubOrderNo"
            tSql &= vbCrLf & "                            AND L2.FNHSysMatSizeId = L1.FNHSysMatSizeId);"

            If HI.Conn.SQLConn.ExecuteTran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then
                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
                Return False
            End If

            '...clear pack sub orderno. carton : TMERTOrderSub_Bundle Modify 2014/12/16

            tSql = ""
            tSql = "DELETE A"
            tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].[dbo].[TMERTOrderSub_Bundle] AS A "
            tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"

            If paramFTColorway.Trim <> "" Then
                tSql &= Environment.NewLine & "      AND A.FTColorway = N'" & HI.UL.ULF.rpQuoted(paramFTColorway) & "'"
            End If

            If paramFTSizeBreakdown <> "" Then
                tSql &= Environment.NewLine & "      AND A.FTSizeBreakdown = N'" & HI.UL.ULF.rpQuoted(paramFTSizeBreakdown) & "'"
            End If

            If HI.Conn.SQLConn.Execute_Tran(tSql, HI.Conn.SQLConn.Cmd, HI.Conn.SQLConn.Tran) < 0 Then

                HI.Conn.SQLConn.Tran.Rollback()
                HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
                HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

                Return False
            End If

            HI.Conn.SQLConn.Tran.Commit()
            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)

            HI.Auditor.CreateLog.CreateLogDelete(HI.ST.SysInfo.MenuName, Me.Name, _QryDelete)

            Try

                REM 2014/12/18 drop field TMERTOrderSub Amount, Qty
                'tSql = " UPDATE A"
                'tSql &= vbCrLf & " SET A.FNSubOrderQty = B.FNQuantity"
                'tSql &= vbCrLf & "   ,A.FNSubOrderAmt = B.FNAmt"
                'tSql &= vbCrLf & "  ,A.FNSubOrderExtraQty = B.FNSubOrderExtraQty"
                'tSql &= vbCrLf & "   ,A.FNSubOrderExtraAmt = B.FNSubOrderExtraAmt"
                'tSql &= vbCrLf & "   ,A.FNSubOrderGarmentTestQty = B.FNSubOrderGarmentTestQty"
                'tSql &= vbCrLf & "   ,A.FNSubOrderGarmentTestAmnt = B.FNSubOrderGarmentTestAmnt"
                'tSql &= vbCrLf & "   ,A.FTUpdUser = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                'tSql &= vbCrLf & " ,A.FDUpdDate = " & HI.UL.ULDate.FormatDateDB
                'tSql &= vbCrLf & "  ,A.FTUpdTime =" & HI.UL.ULDate.FormatTimeDB
                'tSql &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub] AS A LEFT JOIN (SELECT M.FTOrderNo, M.FTSubOrderNo, ISNULL(SUM(M.FNQuantity),0) AS FNQuantity, ISNULL(SUM(M.FNAmt),0) AS FNAmt"
                'tSql &= vbCrLf & "    , ISNULL(SUM(M.FNQuantityExtra),0) AS FNSubOrderExtraQty"
                'tSql &= vbCrLf & "    , ISNULL(SUM(M.FNAmntExtra),0) AS FNSubOrderExtraAmt"
                'tSql &= vbCrLf & "    , ISNULL(SUM(M.FNGarmentQtyTest), 0) AS FNSubOrderGarmentTestQty"
                'tSql &= vbCrLf & "    , ISNULL(SUM(M.FNAmntQtyTest), 0) AS FNSubOrderGarmentTestAmnt"
                'tSql &= vbCrLf & "     FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrderSub_BreakDown] AS M WITH(NOLOCK)"
                'tSql &= vbCrLf & "    WHERE M.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                'tSql &= vbCrLf & "        AND M.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"
                'tSql &= vbCrLf & "  GROUP BY M.FTOrderNo, M.FTSubOrderNo) AS B ON A.FTOrderNo = B.FTOrderNo"
                'tSql &= vbCrLf & " WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTOrderNo) & "'"
                'tSql &= vbCrLf & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(tFTSubOrderNo) & "'"
                'tSql &= vbCrLf & "    AND A.FTSubOrderNo = B.FTSubOrderNo;"

                'HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN)

                '=================================================================================================================================================================================================
                REM 2014/12/16 HITECH_MERCHAN..TMERTOrder_BreakDown NOT USE
                'Call UpdateOrderBreakDown(FTOrderNo.Text, 0, 0)
                '=================================================================================================================================================================================================

                REM 20104/12/18 drop field TMERTOrderSub Amount, Qty
                'Call UpdateOrderQty()

            Catch ex As Exception

            End Try



            Return True
        Catch ex As Exception
            HI.Conn.SQLConn.Tran.Rollback()
            HI.Conn.SQLConn.DisposeSqlTransaction(HI.Conn.SQLConn.Tran)
            HI.Conn.SQLConn.DisposeSqlConnection(HI.Conn.SQLConn.Cmd)
            Return False
        End Try

    End Function

    Private Sub ocmdeleteallcolrway_Click(sender As Object, e As EventArgs) Handles ocmdeleteallcolrway.Click
        If CheckOwner() = False Then
            Exit Sub
        End If
        If CheckCombine() = True Then
            HI.MG.ShowMsg.mInfo("ไม่สามารถลบ เนื่องจากใบสั่งผลิตนี้ได้ มาจากการแบ่งงาน", 1511181420, Me.Text)
            Exit Sub
        End If
        If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
            HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
            Exit Sub
        End If

        If (CheckApproveOrder()) Then Exit Sub

        Try
            If Me.otab.SelectedTabPage.Name = otpSubOrder.Name Then

                Call CheckStateOrder()
                Call CheckStateSubOrder()

                If (FTStateSubProduction.Checked) Then
                    HI.MG.ShowMsg.mInfo("พบ Transaction Order Productionไม่สามารถทำการ เพิ่มหรือแก้ไขยอดได้ !!!", 1408080003, Me.Text, Me.FTOrderNo.Text, MessageBoxIcon.Warning)
                    Exit Sub
                End If

                With Me.ogvSubOrdBreakdown
                    If .FocusedRowHandle < 0 Then
                        Exit Sub
                    End If

                    Dim sSQL As String

                    sSQL = ""
                    sSQL = "SELECT TOP 1 ISNULL(A.FTSubOrderNoDivertRef, '') AS FTSubOrderNoDivertRef"
                    sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK)"
                    sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                    sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                    If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                        HI.MG.ShowMsg.mInfo("คุณไม่สามารถทำการลบข้อมูลของ Colorway นี้ ทุก Size ได้ {Divert Factory Sub Order No} !!!", 1501080001, Me.Text, Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text, MessageBoxIcon.Warning)
                        Exit Sub
                    End If

                    Dim _ColorWay As String = "" & .GetRowCellValue(.FocusedRowHandle, "FTMatColorCode")
                    Dim _ColorWayId As Integer = Integer.Parse(Val("" & .GetRowCellValue(.FocusedRowHandle, "FNHSysMatColorId")))

                    If HI.MG.ShowMsg.mConfirmProcessDefaultNo("คุณต้องการทำการลบข้อมูลของ Colorway นี้ ทุก Size ใช่หรือไม่ ?", 1410270013, _ColorWay) = True Then
                        If Me.DeleteAllColorwayOrSize(_ColorWayId, 0, _ColorWay, "") Then

                        End If

                    End If

                End With

            ElseIf Me.otab.SelectedTabPage.Name = otpOrderBreakdown.Name Then
                Call CheckStateOrder()
                Call CheckStateSubOrder()

                If (FTStateProduction.Checked) Then
                    HI.MG.ShowMsg.mInfo("พบ Transaction Order Productionไม่สามารถทำการ เพิ่มหรือแก้ไขยอดได้ !!!", 1408080003, Me.Text, Me.FTOrderNo.Text, MessageBoxIcon.Warning)
                    Exit Sub
                End If

                With Me.GridView1
                    If .FocusedRowHandle < 0 Then
                        Exit Sub
                    End If

                    Dim sSQL As String

                    sSQL = ""
                    sSQL = "SELECT TOP 1 ISNULL(A.FTSubOrderNoDivertRef, '') AS FTSubOrderNoDivertRef"
                    sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK)"
                    sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND ISNULL(A.FTSubOrderNoDivertRef, '') <> '' "


                    If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                        HI.MG.ShowMsg.mInfo("คุณไม่สามารถทำการลบข้อมูลของ Colorway นี้ ทุก Size ได้ {Divert Factory Sub Order No} !!!", 1501080001, Me.Text, Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text, MessageBoxIcon.Warning)
                        Exit Sub
                    End If

                    Dim _ColorWay As String = "" & .GetRowCellValue(.FocusedRowHandle, "FTMatColorCode")

                    If _ColorWay <> "" Then

                        If HI.MG.ShowMsg.mConfirmProcessDefaultNo("คุณต้องการทำการลบข้อมูลของ Colorway นี้ ทุก Size ใช่หรือไม่ ?", 1410274413, _ColorWay) = True Then
                            If Me.DeleteAllColorwayOrSizeAllSub(_ColorWay, "") Then
                                Call W_PRCbShowBrowseDataOrderBreakdownInfo()
                            End If
                        End If
                    End If


                End With
            End If

        Catch ex As Exception
        End Try

    End Sub

    Private Sub ocmdeleteallsize_Click(sender As Object, e As EventArgs) Handles ocmdeleteallsize.Click
        If CheckOwner() = False Then
            Exit Sub
        End If
        If CheckCombine() = True Then
            HI.MG.ShowMsg.mInfo("ไม่สามารถลบ เนื่องจากใบสั่งผลิตนี้ได้ มาจากการแบ่งงาน", 1511181420, Me.Text)
            Exit Sub
        End If

        If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
            HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
            Exit Sub
        End If
        If (CheckApproveOrder()) Then Exit Sub
        Try
            If Me.otab.SelectedTabPage.Name = otpSubOrder.Name Then

                Call CheckStateOrder()
                Call CheckStateSubOrder()

                'If (FTStateSubProduction.Checked) Then
                If (FTStateSubCutting.Checked) Or (Me.FTStateSubSewing.Checked) Or (Me.FTStateSubPacking.Checked) Then
                    HI.MG.ShowMsg.mInfo("พบ Transaction Order Productionไม่สามารถทำการ เพิ่มหรือแก้ไขยอดได้ !!!", 1408080003, Me.Text, Me.FTOrderNo.Text, MessageBoxIcon.Warning)
                    Exit Sub
                End If

                With Me.ogvSubOrdBreakdown
                    If .FocusedRowHandle < 0 Then
                        Exit Sub
                    End If

                    REM 2015/01/08
                    'Dim _SizeCode As String = "" & .FocusedColumn.FieldName.ToString

                    'If Microsoft.VisualBasic.Left(_SizeCode, "FNAmnt".Length).ToUpper = "FNAmnt".ToUpper Then
                    '    _SizeCode = _SizeCode.Replace("FNAmnt", "")

                    '    Dim _SizeId As Integer = Integer.Parse(Val(.FocusedColumn.Tag.ToString))

                    '    If HI.MG.ShowMsg.mConfirmProcessDefaultNo("คุณต้องการทำการลบข้อมูลของ Size นี้ ทุก Colorway ใช่หรือไม่ ?", 1410270014, _SizeCode) = True Then
                    '        If Me.DeleteAllColorwayOrSize(0, _SizeId, "", _SizeCode) Then

                    '        End If
                    '    End If

                    'Else
                    '    HI.MG.ShowMsg.mInfo("", 1410270013, Me.Text, , MessageBoxIcon.Warning)
                    'End If

                    '...modify 20150108
                    If Not DBNull.Value.Equals(.FocusedColumn.FieldName.ToString) And .FocusedColumn.FieldName.ToString <> "" Then

                        Dim sSQL As String

                        sSQL = ""
                        sSQL = "SELECT TOP 1 ISNULL(A.FTSubOrderNoDivertRef, '') AS FTSubOrderNoDivertRef"
                        sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK)"
                        sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                        sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                        If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                            HI.MG.ShowMsg.mInfo("คุณไม่สามารถทำการลบข้อมูลของ Size นี้ ทุก Colorway ได้ {Divert Factory Sub Order No} !!!", 1501080002, Me.Text, Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text, MessageBoxIcon.Warning)
                            Exit Sub
                        End If

                        Dim _SizeCode As String = "" & .FocusedColumn.FieldName.ToString

                        If Microsoft.VisualBasic.Left(_SizeCode, "FNAmnt".Length).ToUpper = "FNAmnt".ToUpper Then
                            _SizeCode = _SizeCode.Replace("FNAmnt", "")

                            Dim _SizeId As Integer = Integer.Parse(Val(.FocusedColumn.Tag.ToString))

                            If HI.MG.ShowMsg.mConfirmProcessDefaultNo("คุณต้องการทำการลบข้อมูลของ Size นี้ ทุก Colorway ใช่หรือไม่ ?", 1410270014, _SizeCode) = True Then
                                If Me.DeleteAllColorwayOrSize(0, _SizeId, "", _SizeCode) Then

                                End If

                            End If

                        Else
                            HI.MG.ShowMsg.mInfo("", 1410270013, Me.Text, , MessageBoxIcon.Warning)
                        End If

                    End If

                End With


            ElseIf Me.otab.SelectedTabPage.Name = otpOrderBreakdown.Name Then
                Call CheckStateOrder()
                Call CheckStateSubOrder()

                If (FTStateProduction.Checked) Then
                    HI.MG.ShowMsg.mInfo("พบ Transaction Order Productionไม่สามารถทำการ เพิ่มหรือแก้ไขยอดได้ !!!", 1408080003, Me.Text, Me.FTOrderNo.Text, MessageBoxIcon.Warning)
                    Exit Sub
                End If

                With Me.GridView1
                    If .FocusedRowHandle < 0 Then
                        Exit Sub
                    End If

                    If Not DBNull.Value.Equals(.FocusedColumn.FieldName.ToString) And .FocusedColumn.FieldName.ToString <> "" Then

                        Dim sSQL As String

                        sSQL = ""
                        sSQL = "SELECT TOP 1 ISNULL(A.FTSubOrderNoDivertRef, '') AS FTSubOrderNoDivertRef"
                        sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK)"
                        sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND ISNULL(A.FTSubOrderNoDivertRef, '') <> ''"

                        If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                            HI.MG.ShowMsg.mInfo("คุณไม่สามารถทำการลบข้อมูลของ Size นี้ ทุก Colorway ได้ {Divert Factory Sub Order No} !!!", 1501080002, Me.Text, Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text, MessageBoxIcon.Warning)
                            Exit Sub
                        End If

                        Dim _SizeCode As String = "" & .FocusedColumn.FieldName.ToString

                        'If Microsoft.VisualBasic.Left(_SizeCode, "FNAmnt".Length).ToUpper = "FNAmnt".ToUpper Then
                        _SizeCode = _SizeCode.Replace("FNAmnt", "")

                        ' Dim _SizeId As Integer = Integer.Parse(Val(.FocusedColumn.Tag.ToString))

                        If HI.MG.ShowMsg.mConfirmProcessDefaultNo("คุณต้องการทำการลบข้อมูลของ Size นี้ ทุก Colorway ใช่หรือไม่ ?", 1410270014, _SizeCode) = True Then
                            If Me.DeleteAllColorwayOrSizeAllSub("", _SizeCode) Then
                                Call W_PRCbShowBrowseDataOrderBreakdownInfo()
                            End If

                        End If
                        '
                        'Else
                        '  HI.MG.ShowMsg.mInfo("", 1410270013, Me.Text, , MessageBoxIcon.Warning)
                        ' End If

                    End If


                End With

            End If

        Catch ex As Exception
        End Try
    End Sub

    Private Sub ocmchangecolorway_Click(sender As Object, e As EventArgs) Handles ocmchangecolorway.Click
        If CheckOwner() = False Then
            Exit Sub
        End If

        If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
            HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
            Exit Sub
        End If
        If (CheckApproveOrder()) Then Exit Sub
        Try
            If Me.otab.SelectedTabPage.Name = otpSubOrder.Name Then

                Call CheckStateOrder()
                Call CheckStateSubOrder()

                If (FTStateSubCutting.Checked) Or (Me.FTStateSubSewing.Checked) Or (Me.FTStateSubPacking.Checked) Then
                    HI.MG.ShowMsg.mInfo("พบ Transaction Order Productionไม่สามารถทำการ เพิ่มหรือแก้ไขยอดได้ !!!", 1408080003, Me.Text, Me.FTOrderNo.Text, MessageBoxIcon.Warning)
                    Exit Sub
                End If

                With Me.ogvSubOrdBreakdown
                    If .FocusedRowHandle < 0 Then
                        Exit Sub
                    End If

                    Dim sSQL As String

                    sSQL = ""
                    sSQL = "SELECT TOP 1 ISNULL(A.FTSubOrderNoDivertRef, '') AS FTSubOrderNoDivertRef"
                    sSQL &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub AS A (NOLOCK)"
                    sSQL &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "'"
                    sSQL &= Environment.NewLine & "      AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                    If HI.Conn.SQLConn.GetField(sSQL, HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                        HI.MG.ShowMsg.mInfo("คุณไม่สามารถทำการเปลี่ยน Colorway นี้  ได้ {Divert Factory Sub Order No} !!!", 1501080003, Me.Text, Me.FTOrderNo.Text & "|" & Me.FTSubOrderNo.Text, MessageBoxIcon.Warning)
                        Exit Sub
                    End If

                    Dim _ColorWay As String = "" & .GetRowCellValue(.FocusedRowHandle, "FTMatColorCode")
                    Dim _ColorWayId As Integer = Integer.Parse(Val("" & .GetRowCellValue(.FocusedRowHandle, "FNHSysMatColorId")))

                    If HI.MG.ShowMsg.mConfirmProcessDefaultNo("คุณต้องการทำการ เปลี่ยน Colorway นี้ ?", 1410270099, _ColorWay) = True Then

                        HI.ST.Lang.SP_SETxLanguage(_ChangeColorway)

                        With _ChangeColorway
                            .FTColorwayFrom.Text = _ColorWay
                            .OldColorWayCode = _ColorWay
                            .OldColorWayID = _ColorWayId
                            .FTColorway.Text = ""

                            .ProcNew = False
                            .ShowDialog()

                            If (.ProcNew) Then

                                Dim _ColorWayNew As String = .ColorWayCode
                                Dim _ColorWayIdNew As Integer = .ColorWayID
                                Dim _Qry As String = ""

                                _Qry = "UPDATE  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_BreakDown"
                                _Qry &= Environment.NewLine & " SET  FNHSysMatColorId=" & _ColorWayIdNew & ""
                                _Qry &= Environment.NewLine & "    , FTColorway='" & HI.UL.ULF.rpQuoted(_ColorWayNew) & "'"
                                _Qry &= Environment.NewLine & " WHERE FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "'"
                                _Qry &= Environment.NewLine & "       AND FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'"
                                _Qry &= Environment.NewLine & "       AND FNHSysMatColorId = " & _ColorWayId

                                HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)

                                HI.Auditor.CreateLog.CreateLogDelete(HI.ST.SysInfo.MenuName, Me.Name, _Qry & "  Change From " & _ColorWay & " To " & _ColorWayNew)

                                REM 2014/12/16 HITECH_MERCHAN..TMERTOrder_BreakDown NOT USE
                                '====================================================================================================================
                                '_Qry = "UPDATE  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrder_BreakDown "
                                '_Qry &= Environment.NewLine & " SET FNHSysMatColorId=" & _ColorWayIdNew & ""
                                '_Qry &= Environment.NewLine & ",FTColorway='" & HI.UL.ULF.rpQuoted(_ColorWayNew) & "'"
                                '_Qry &= Environment.NewLine & " WHERE FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "' "
                                '_Qry &= Environment.NewLine & "       AND FNHSysMatColorId = " & _ColorWayId

                                'HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)
                                '====================================================================================================================

                                REM 2014/12/16 HITECH_MERCHAN..TMERTOrder_BreakDown NOT USE
                                'Call UpdateOrderBreakDown(FTOrderNo.Text, 0, 0)

                                Call W_PRCbShowBrowseDataSubOrderBreakdownMatrix(Me.FTSubOrderNo.Text)
                                Call W_PRCbShowBrowseDataCurrencyInfo()
                                Call W_PRCbShowBrowseDataOrderBreakdownInfo()
                                Call W_PRCbShowBrowseDataSubOrderTotalExtraQtyTotalExtraAmnt()
                                Call W_PRCbShowBrowseDataSubOrderSizeSpecInfo(Me.FTOrderNo.Text, Me.FTSubOrderNo.Text)

                            End If

                        End With

                    End If
                End With
            End If

        Catch ex As Exception

        End Try
    End Sub

    Private Sub otab_Click(sender As Object, e As EventArgs) Handles otab.Click

    End Sub

    Private Sub FTSizeBreakDown_EditValueChanged(sender As Object, e As EventArgs) Handles FTSizeBreakDown.EditValueChanged, FTColorway.EditValueChanged
        If (_FormLoad) Then Exit Sub
        Try
            If Me.InvokeRequired Then
                Me.Invoke(New HI.Delegate.Dele.FNHSysEmpTypeId_ValueChanged(AddressOf FTSizeBreakDown_EditValueChanged), New Object() {sender, e})
            Else
                Dim _Qry As String = ""

                If FTColorway.Text <> "" And FTSubOrderNo.Text <> "" Then

                    _Qry = "SELECT TOP 1  FTNikePOLineItem "
                    _Qry &= vbCrLf & " FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_BreakDown AS A WITH(NOLOCK)"
                    _Qry &= vbCrLf & " WHERE (FTOrderNo = N'" & HI.UL.ULF.rpQuoted(FTOrderNo.Text) & "') "
                    _Qry &= vbCrLf & "      AND (FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text) & "') "
                    _Qry &= vbCrLf & "      AND (FTColorway = N'" & HI.UL.ULF.rpQuoted(FTColorway.Text) & "')"

                    FNColorSeq.Value = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "1"))


                    _Qry = "SELECT MAX(FNPrice) AS FNPrice "
                    _Qry &= vbCrLf & "FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_BreakDown AS A WITH(NOLOCK)"
                    _Qry &= vbCrLf & "WHERE (FTOrderNo = N'" & HI.UL.ULF.rpQuoted(FTOrderNo.Text) & "') "
                    _Qry &= vbCrLf & "      AND (FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text) & "') "

                    FNPrice.Value = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "0"))




                End If

                If FTSizeBreakDown.Text <> "" And FTColorway.Text <> "" And FTSubOrderNo.Text <> "" Then

                    'FTColorway.Properties.ReadOnly = False
                    'FTColorway.Properties.Buttons(0).Enabled = True
                    'FTSizeBreakDown.Properties.ReadOnly = False
                    'FTSizeBreakDown.Properties.Buttons(0).Enabled = True
                    'FNQuantity.Properties.ReadOnly = False
                    'FNExtraQtySubOrder.Properties.ReadOnly = False
                    'FNQuantityExtra.Properties.ReadOnly = False

                    If FNHSysBuyGrpId.Properties.ReadOnly = False And (_FTStateAutoExtraManual) Then

                        _Qry = "SELECT TOP 1  FTOrderNo "
                        _Qry &= vbCrLf & "FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_BreakDown AS A WITH(NOLOCK)"
                        _Qry &= vbCrLf & "WHERE (FTOrderNo = N'" & HI.UL.ULF.rpQuoted(FTOrderNo.Text) & "') "
                        _Qry &= vbCrLf & "      AND (FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text) & "') "
                        _Qry &= vbCrLf & "      AND (FTColorway = N'" & HI.UL.ULF.rpQuoted(FTColorway.Text) & "')"
                        _Qry &= vbCrLf & "      AND (FTSizeBreakDown = N'" & HI.UL.ULF.rpQuoted(FTSizeBreakDown.Text) & "') "

                        If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "") = "" Then
                            Me.FNExtraQtySubOrder.Value = _FNHSysBuyGrpPer

                            '_Qry = "SELECT MAX(FNPrice) AS FNPrice "
                            '_Qry &= vbCrLf & "FROM  [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_BreakDown AS A WITH(NOLOCK)"
                            '_Qry &= vbCrLf & "WHERE (FTOrderNo = N'" & HI.UL.ULF.rpQuoted(FTOrderNo.Text) & "') "
                            '_Qry &= vbCrLf & "      AND (FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(FTSubOrderNo.Text) & "') "

                            'FNPrice.Value = Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "0"))

                        End If

                    End If
                Else
                    'FTColorway.Properties.ReadOnly = False
                    'FTColorway.Properties.Buttons(0).Enabled = True
                    'FTSizeBreakDown.Properties.ReadOnly = False
                    'FTSizeBreakDown.Properties.Buttons(0).Enabled = True
                    'FNQuantity.Properties.ReadOnly = False
                    'FNExtraQtySubOrder.Properties.ReadOnly = False
                    'FNQuantityExtra.Properties.ReadOnly = False
                End If
            End If
        Catch ex As Exception
        End Try
    End Sub

    Private Sub ogdSubOrdBreakDown_Click(sender As Object, e As EventArgs) Handles ogdSubOrdBreakDown.Click
    End Sub

    Private Sub FNJobState_SelectedIndexChanged(sender As Object, e As EventArgs) Handles FNJobState.SelectedIndexChanged
        If Not _bProgrammeInit Then
            Try
                Dim FNListIndx As Integer
                FNListIndx = HI.TL.CboList.GetIndexByText("FNJobState", Me.FNJobState.SelectedItem.ToString)
                If FNListIndx = 2 Then
                    Me.FNJobState_lbl.ForeColor = System.Drawing.Color.Red
                    Me.FNJobState.Properties.AppearanceReadOnly.BackColor = System.Drawing.Color.LightCyan
                    Me.FNJobState.Properties.AppearanceReadOnly.ForeColor = System.Drawing.Color.Red
                Else
                    Me.FNJobState_lbl.ForeColor = System.Drawing.Color.Blue
                    Me.FNJobState.Properties.AppearanceReadOnly.BackColor = System.Drawing.Color.LightCyan
                    Me.FNJobState.Properties.AppearanceReadOnly.ForeColor = System.Drawing.Color.Blue
                End If
            Catch ex As Exception

            End Try

        End If

    End Sub

    Private Sub ocmDivert_Click(sender As Object, e As EventArgs) Handles ocmDivert.Click
    End Sub

    Private Sub oRepositoryPackCartonQty_ParseEditValue(sender As Object, e As XtraEditors.Controls.ConvertEditValueEventArgs) Handles oRepositoryPackCartonQty.ParseEditValue
        Try
            Dim sEditVal As String

            If Not e.Value Is Nothing Then
                sEditVal = e.Value.ToString
            Else
                sEditVal = ""
            End If

            For numLoopStr As Integer = e.Value.ToString().Length - 1 To 0 Step -1
                If Char.IsDigit(sEditVal(numLoopStr)) Then
                    Exit For
                Else
                    sEditVal = sEditVal.Remove(sEditVal.Length - 1)
                End If
            Next

            Try
                e.Value = Convert.ToDecimal(sEditVal)

                If Val(e.Value.ToString) < 0 Then e.Value = 0

            Catch ex As Exception
                e.Value = 0
            End Try

            e.Handled = True

        Catch ex As Exception
            'If System.Diagnostics.Debugger.IsAttached = True Then
            '    MsgBox(ex.Message().ToString() & Environment.NewLine & ex.StackTrace().ToString(), MsgBoxStyle.Information + MsgBoxStyle.OkOnly, My.Application.Info.ToString)
            'End If
        End Try

    End Sub

    Private Sub FNPackCartonSubType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles FNPackCartonSubType.SelectedIndexChanged
        Try
            Dim _StateEdit As Boolean = False

            Select Case FNPackCartonSubType.SelectedIndex
                Case 0
                    _StateEdit = False
                Case Else
                    '...Assort Color / Solid Size
                    '...Solid  Color / Assort Size
                    '...Assort Color / Assort Size
                    _StateEdit = True '...สามารถระบุจำนวนตัวต่อกล่อง ตาม สี / ตาม ไซส์ ได้ ใน Grid View
            End Select

            With Me.ogvOrderSubPackCarton

                .BeginInit()

                For Each oGridCol As DevExpress.XtraGrid.Columns.GridColumn In .Columns
                    Select Case oGridCol.FieldName.ToString.ToUpper
                        Case "FTOrderNo".ToUpper, "FTSubOrderNo".ToUpper, "FTColorway".ToUpper
                            '...do nothing
                        Case Else
                            With oGridCol

                                .OptionsColumn.AllowEdit = _StateEdit
                                .OptionsColumn.ReadOnly = Not (_StateEdit)

                                If _StateEdit Then
                                    .AppearanceCell.BackColor = Color.LightCyan
                                    .AppearanceCell.ForeColor = Color.Blue
                                Else
                                    .AppearanceCell.BackColor = Color.White
                                    .AppearanceCell.ForeColor = Color.Black
                                End If

                            End With

                    End Select
                Next

                .EndInit()

            End With

            Me.FNPackPerCaton.Focus()

        Catch ex As Exception

        End Try

    End Sub

    Private Sub FNPackPerCaton_ParseEditValue(sender As Object, e As XtraEditors.Controls.ConvertEditValueEventArgs) Handles FNPackPerCaton.ParseEditValue
        Try
            Dim sEditVal As String

            If Not e.Value Is Nothing Then
                sEditVal = e.Value.ToString()
            Else
                sEditVal = "0"
            End If

            For numLoopStr As Integer = e.Value.ToString().Length - 1 To 0 Step -1
                If Char.IsDigit(sEditVal(numLoopStr)) Then
                    Exit For
                Else
                    sEditVal = sEditVal.Remove(sEditVal.Length - 1)
                End If
            Next

            Try
                e.Value = Convert.ToDecimal(sEditVal)

                If Val(e.Value.ToString) < 0 Then e.Value = 0

            Catch ex As Exception
                e.Value = 0
            End Try

            e.Handled = True

        Catch ex As Exception

        End Try

    End Sub

    Private Sub ogvSubOrdBreakdown_CustomColumnDisplayText(sender As Object, e As XtraGrid.Views.Base.CustomColumnDisplayTextEventArgs) Handles ogvSubOrdBreakdown.CustomColumnDisplayText
        Try
            'If Not CType(Me.ogdSubOrdBreakDown.DataSource, System.Data.DataTable) Is Nothing AndAlso CType(Me.ogdSubOrdBreakDown.DataSource, System.Data.DataTable).Rows.Count > 0 Then

            '    For Each oDataRow As System.Data.DataRow In CType(Me.ogdSubOrdBreakDown.DataSource, System.Data.DataTable).Rows

            '        For Each oDataCol As System.Data.DataColumn In CType(Me.ogdSubOrdBreakDown.DataSource, System.Data.DataTable).Columns

            '            Select Case Mid(oDataCol.ColumnName.ToString.ToUpper, 1, 6)

            '                Case "FNAmnt".ToUpper
            '                    'If DBNull.Value.Equals(e.Value) Then
            '                    '    '...set defaul value into cell value
            '                    '    e.DisplayText = "0"
            '                    'Else
            '                    '    '...nothing 
            '                    'End If

            '                    Select Case True
            '                        Case e.Value Is Nothing
            '                            e.DisplayText = "0"
            '                        Case (DBNull.Value.Equals(e.Value) = True)
            '                            e.DisplayText = "0"
            '                        Case Else
            '                            MsgBox(e.Column.FieldName.ToString.ToUpper)
            '                    End Select

            '                Case Else
            '                    '...do nothing
            '            End Select

            '        Next

            '    Next

            '    Me.ogvSubOrdBreakdown.ActiveFilter.Clear()

            'End If

            With Me.ogvSubOrdBreakdown

                If .RowCount > 0 Then

                    If e.ListSourceRowIndex > -1 Then

                        Select Case Mid(e.Column.FieldName.ToString.ToUpper, 1, 6)

                            Case "FNAmnt".ToUpper

                                Select Case True

                                    Case e.Value Is Nothing
                                        e.DisplayText = "0"
                                    Case (DBNull.Value.Equals(e.Value) = True)
                                        e.DisplayText = "0"
                                    Case Else
                                        '...Nothing
                                End Select

                            Case Else
                                '...do nothing
                        End Select

                    End If

                End If

                .ActiveFilter.Clear()

            End With

        Catch ex As Exception
            If System.Diagnostics.Debugger.IsAttached = True Then
                MsgBox(ex.Message().ToString() & Environment.NewLine & ex.StackTrace().ToString(), MsgBoxStyle.Information + MsgBoxStyle.OkOnly, My.Application.Info.Title.ToString)
            End If
        End Try

    End Sub

    Private Sub ogvSubOrdBreakdown_RowCellStyle(sender As Object, e As RowCellStyleEventArgs) Handles ogvSubOrdBreakdown.RowCellStyle
        Try
            With ogvSubOrdBreakdown

                If .RowCount > 0 Then

                    If e.RowHandle > -1 Then

                        Select Case Microsoft.VisualBasic.Mid(e.Column.FieldName.ToString.ToUpper, 1, 6)

                            Case "FNAmnt".ToUpper
                                If DBNull.Value.Equals(e.CellValue) = True Then
                                    e.Appearance.ForeColor = System.Drawing.Color.DarkRed
                                Else
                                    If Val(e.CellValue) = 0 Then
                                        e.Appearance.ForeColor = System.Drawing.Color.DarkRed
                                    Else
                                        '...Nothing
                                    End If

                                End If

                            Case Else
                                '...Nothing
                        End Select

                    End If

                End If

            End With

        Catch ex As Exception

        End Try

    End Sub

    Private Sub GridView1_RowCellStyle(sender As Object, e As RowCellStyleEventArgs) Handles GridView1.RowCellStyle
        Try
            With Me.GridView1

                If Me.GridView1.RowCount > 0 Then

                    If e.RowHandle > -1 Then

                        Select Case e.Column.FieldName.ToString.ToUpper
                            Case "FTMatColorName".ToUpper, "FTMatColorCode".ToUpper, "FNRowTotal".ToUpper
                                '...Nothing 
                            Case Else

                                If Not DBNull.Value.Equals(.GetRowCellValue(e.RowHandle, e.Column.FieldName)) Then

                                    If Val(.GetRowCellValue(e.RowHandle, e.Column.FieldName)) = 0 Then
                                        e.Appearance.ForeColor = System.Drawing.Color.DarkRed
                                    End If

                                End If

                        End Select

                    End If

                End If

            End With

        Catch ex As Exception

        End Try

    End Sub

    Private Sub FTImage1_EditValueChanged(sender As Object, e As EventArgs) Handles FTImage1.EditValueChanged
        If (_FormLoad) Then Exit Sub
        Try
            If Not _ProcLoad AndAlso Me.FTOrderNo.Text.Trim <> "" AndAlso HI.Conn.SQLConn.GetField("SELECT TOP 1 A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';", HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                Me.LoadCompleteFTImage1 = True
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub FTImage2_EditValueChanged(sender As Object, e As EventArgs) Handles FTImage2.EditValueChanged
        Try
            If Not _ProcLoad AndAlso Me.FTOrderNo.Text.Trim <> "" AndAlso HI.Conn.SQLConn.GetField("SELECT TOP 1 A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';", HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                Me.LoadCompleteFTImage2 = True



            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub FTImage3_EditValueChanged(sender As Object, e As EventArgs) Handles FTImage3.EditValueChanged
        If (_FormLoad) Then Exit Sub
        Try
            If Not _ProcLoad AndAlso Me.FTOrderNo.Text.Trim <> "" AndAlso HI.Conn.SQLConn.GetField("SELECT TOP 1 A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';", HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                Me.LoadCompleteFTImage3 = True
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub FTImage4_EditValueChanged(sender As Object, e As EventArgs) Handles FTImage4.EditValueChanged
        If (_FormLoad) Then Exit Sub
        Try
            If Not _ProcLoad AndAlso Me.FTOrderNo.Text.Trim <> "" AndAlso HI.Conn.SQLConn.GetField("SELECT TOP 1 A.FTOrderNo FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrder AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';", HI.Conn.DB.DataBaseName.DB_MERCHAN, "") <> "" Then
                Me.LoadCompleteFTImage4 = True
            End If
        Catch ex As Exception

        End Try
    End Sub



    Private Sub FTStateSubPacking_EditValueChanging(sender As Object, e As XtraEditors.Controls.ChangingEventArgs) Handles FTStateSubPacking.EditValueChanging
        'Try

        '    FNPrice.Properties.ReadOnly = (e.NewValue = "1")
        'Catch ex As Exception
        '    FNPrice.Properties.ReadOnly = False
        'End Try

    End Sub

    Private Sub FTStateSubCutting_EditValueChanging(sender As Object, e As XtraEditors.Controls.ChangingEventArgs) Handles FTStateSubCutting.EditValueChanging
        Try

            FTColorway.Properties.ReadOnly = (e.NewValue = "1")
            FTColorway.Properties.Buttons(0).Enabled = (e.NewValue <> "1")
            FTSizeBreakDown.Properties.ReadOnly = (e.NewValue = "1")
            FTSizeBreakDown.Properties.Buttons(0).Enabled = (e.NewValue <> "1")
            FNQuantity.Properties.ReadOnly = (e.NewValue = "1")
            FNExtraQtySubOrder.Properties.ReadOnly = (e.NewValue = "1")
            FNQuantityExtra.Properties.ReadOnly = (e.NewValue = "1")
            FNGarmentQtyTest.Properties.ReadOnly = (e.NewValue = "1")
            FNPrice.Properties.ReadOnly = (e.NewValue = "1")
        Catch ex As Exception

            FTColorway.Properties.ReadOnly = False
            FTColorway.Properties.Buttons(0).Enabled = True
            FTSizeBreakDown.Properties.ReadOnly = False
            FTSizeBreakDown.Properties.Buttons(0).Enabled = True
            FNQuantity.Properties.ReadOnly = False
            FNExtraQtySubOrder.Properties.ReadOnly = False
            FNQuantityExtra.Properties.ReadOnly = False
            FNGarmentQtyTest.Properties.ReadOnly = False
            FNPrice.Properties.ReadOnly = False
        End Try
    End Sub

    Private Sub FTStateTransferWH_CheckedChanged(sender As Object, e As EventArgs) Handles FTStateTransferWH.CheckedChanged
        If FTStateTransferWH.Checked And Me.FNHSysCmpId.Properties.ReadOnly = False Then

            Dim _Qry As String = ""

            _Qry = " SELECT TOP 1  H.FTTransferWHNo "
            _Qry &= vbCrLf & " FROM     [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_INVEN) & "].dbo.TINVENTransferWH AS H WITH(NOLOCK) INNER JOIN"
            _Qry &= vbCrLf & "          [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_INVEN) & "].dbo.TINVENBarcode_OUT AS D WITH(NOLOCK)  ON H.FTTransferWHNo = D.FTDocumentNo"
            _Qry &= vbCrLf & "    WHERE  D.FTOrderNo='" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "' AND H.FTStateApprove='1' "

            If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_INVEN, "") <> "" Then

                Me.FNHSysCmpId.Properties.ReadOnly = True
                Me.FNHSysCmpId.Properties.Buttons(0).Enabled = False

            Else

                Me.FNHSysCmpId.Properties.ReadOnly = False
                Me.FNHSysCmpId.Properties.Buttons(0).Enabled = True

            End If


        Else
            If FTStateCutting.Checked = False And FTStateOrderApp.Checked = False Then
                Me.FNHSysCmpId.Properties.ReadOnly = False
                Me.FNHSysCmpId.Properties.Buttons(0).Enabled = True
            End If

        End If
    End Sub

    Private Sub FTStateCutting_CheckedChanged(sender As Object, e As EventArgs) Handles FTStateCutting.CheckedChanged
        If FTStateCutting.Checked And Me.FNHSysCmpId.Properties.ReadOnly = False Then
            Me.FNHSysCmpId.Properties.ReadOnly = True
            Me.FNHSysCmpId.Properties.Buttons(0).Enabled = False
        Else
            If FTStateTransferWH.Checked = False And FTStateOrderApp.Checked = False Then
                Me.FNHSysCmpId.Properties.ReadOnly = False
                Me.FNHSysCmpId.Properties.Buttons(0).Enabled = True
            End If

        End If
    End Sub

    Private Sub FTStateOrderApp_CheckedChanged(sender As Object, e As EventArgs) Handles FTStateOrderApp.CheckedChanged
        If FTStateOrderApp.Checked And Me.FNHSysCmpId.Properties.ReadOnly = False Then
            Me.FNHSysCmpId.Properties.ReadOnly = False
            Me.FNHSysCmpId.Properties.Buttons(0).Enabled = True

        Else
            If FTStateCutting.Checked = False Or FTStateTransferWH.Checked = False Then

                If FTStateTransferWH.Checked Then
                    Dim _Qry As String = ""

                    _Qry = " SELECT TOP 1  H.FTTransferWHNo "
                    _Qry &= vbCrLf & " FROM     [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_INVEN) & "].dbo.TINVENTransferWH AS H WITH(NOLOCK) INNER JOIN"
                    _Qry &= vbCrLf & "          [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_INVEN) & "].dbo.TINVENBarcode_OUT AS D WITH(NOLOCK)  ON H.FTTransferWHNo = D.FTDocumentNo"
                    _Qry &= vbCrLf & "    WHERE  D.FTOrderNo='" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "' AND H.FTStateApprove='1' "

                    If HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_INVEN, "") <> "" Then
                        Me.FNHSysCmpId.Properties.ReadOnly = True
                        Me.FNHSysCmpId.Properties.Buttons(0).Enabled = False
                    Else
                        Me.FNHSysCmpId.Properties.ReadOnly = False
                        Me.FNHSysCmpId.Properties.Buttons(0).Enabled = True
                    End If
                End If

                If FTStateCutting.Checked = False And (Me.FNHSysCmpId.Properties.ReadOnly = True And FTStateTransferWH.Checked = True) Then
                    Me.FNHSysCmpId.Properties.ReadOnly = False
                    Me.FNHSysCmpId.Properties.Buttons(0).Enabled = True
                End If

            End If
        End If
    End Sub

    Private Sub FNColorSeq_EditValueChanged(sender As Object, e As EventArgs) Handles FNColorSeq.EditValueChanged

    End Sub

    Private Sub FNColorSeq_KeyPress(sender As Object, e As KeyPressEventArgs) Handles FNColorSeq.KeyPress
        Try
            If Asc(e.KeyChar) = 13 Then
                Me.FTSizeBreakDown.Focus()
                Me.FTSizeBreakDown.SelectAll()
            End If
        Catch ex As Exception
        End Try
    End Sub

    Private Sub FNHSysContinentId_EditValueChanged(sender As Object, e As EventArgs) Handles FNHSysContinentId.EditValueChanged
        FNHSysCountryId.Text = ""
        FNHSysProvinceId.Text = ""
    End Sub

    Private Sub FNHSysCountryId_EditValueChanged(sender As Object, e As EventArgs) Handles FNHSysCountryId.EditValueChanged

        FNHSysProvinceId.Text = ""
    End Sub


#Region "Combine BreakDown"
    Private _CombieBreakdown As wCombineBreakDown
    Private Sub NewFromCombieBreakdown()
        _CombieBreakdown = New wCombineBreakDown
        HI.TL.HandlerControl.AddHandlerObj(_CombieBreakdown)
        Dim oSysLang As New ST.SysLanguage
        Try
            Call oSysLang.LoadObjectLanguage(HI.ST.SysInfo.ModuleName, _CombieBreakdown.Name.ToString.Trim, _CombieBreakdown)
        Catch ex As Exception
        Finally
        End Try
    End Sub

    Private Sub ocmcombinebreakdown_Click(sender As Object, e As EventArgs) Handles ocmcombinebreakdown.Click
        Try
            If Me.FTOrderNo.Text <> "" Then

                If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
                    HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
                    Exit Sub
                End If
                If (CheckApproveOrder()) Then Exit Sub
                With _CombieBreakdown
                    .OrderNo = Me.FTOrderNo.Text
                    .SubOrderNo = Me.FTSubOrderNo.Text
                    .JobProdNo = ""
                    .FNCombineType.Visible = True
                    .InitGrid()
                    .Process = False

                    If .InitData Then

                        .ShowDialog()

                        If .Process Then

                            Call Proc_Refresh(sender, Nothing)

                        End If

                    Else

                        HI.MG.ShowMsg.mInfo("ไม่พบข้อมูลที่สามารถทำการ Combine ได้ !!!", 1511230647, Me.Text, , MessageBoxIcon.Warning)

                    End If

                End With

            End If
        Catch ex As Exception
        End Try
    End Sub

    Private Function GetBreakDownQuantityProduction(_OrderNo As String, _SubOrderNo As String, _Colorway As String, _SizeBreakDown As String) As Integer
        Dim _Qry As String = ""

        Try
            _Qry = " SELECT ISNULL(SUM(A.FNQuantity),0) AS FNQuantity"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_PROD) & "].dbo.[TPRODTOrderProd_Detail] AS A WITH(NOLOCK)"
            _Qry &= vbCrLf & " WHERE A.FTOrderNo='" & HI.UL.ULF.rpQuoted(_OrderNo) & "'"
            _Qry &= vbCrLf & "       AND A.FTSubOrderNo='" & HI.UL.ULF.rpQuoted(_SubOrderNo) & "'"
            _Qry &= vbCrLf & "       AND A.FTColorway='" & HI.UL.ULF.rpQuoted(_Colorway) & "'"
            _Qry &= vbCrLf & "       AND A.FTSizeBreakDown='" & HI.UL.ULF.rpQuoted(_SizeBreakDown) & "'"

            Return Integer.Parse(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "0")))

        Catch ex As Exception
            Return 0
        End Try
    End Function

    Private Function GetBreakDownQuantity(_OrderNo As String, _SubOrderNo As String, _Colorway As String, _SizeBreakDown As String) As Integer
        Dim _Qry As String = ""

        Try
            _Qry = " SELECT ISNULL(SUM(A.FNQuantity),0) AS FNQuantity"
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.[TMERTOrderSub_BreakDown] AS A WITH(NOLOCK)"
            _Qry &= vbCrLf & " WHERE A.FTOrderNo='" & HI.UL.ULF.rpQuoted(_OrderNo) & "'"
            _Qry &= vbCrLf & "       AND A.FTSubOrderNo='" & HI.UL.ULF.rpQuoted(_SubOrderNo) & "'"
            _Qry &= vbCrLf & "       AND A.FTColorway='" & HI.UL.ULF.rpQuoted(_Colorway) & "'"
            _Qry &= vbCrLf & "       AND A.FTSizeBreakDown='" & HI.UL.ULF.rpQuoted(_SizeBreakDown) & "'"

            Return Integer.Parse(Val(HI.Conn.SQLConn.GetField(_Qry, Conn.DB.DataBaseName.DB_MERCHAN, "0")))

        Catch ex As Exception
            Return 0
        End Try
    End Function

    Private Sub CreateDataLogBreakDownChange(_OrderNo As String, _SubOrderNo As String, _Colorway As String, _SizeBreakDown As String, Quantity As Integer, QuantityTo As Integer)
        Dim _Qry As String = ""

        Try

            _Qry = "INSERT INTO [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_LOG) & "].dbo.HSysBreakDown_ChangeLog "
            _Qry &= vbCrLf & " (FTInsUser, FDInsDate, FTInsTime, FTOrderNo, FTSubOrderNo, FTColorway, FTSizeBreakDown, FNSeq, FNQuantity, FNQuantityTo)"
            _Qry &= vbCrLf & " SELECT '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
            _Qry &= vbCrLf & " ," & HI.UL.ULDate.FormatDateDB & ""
            _Qry &= vbCrLf & " ," & HI.UL.ULDate.FormatTimeDB & ""
            _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_OrderNo) & "'"
            _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_SubOrderNo) & "'"
            _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_Colorway) & "'"
            _Qry &= vbCrLf & " ,'" & HI.UL.ULF.rpQuoted(_SizeBreakDown) & "'"
            _Qry &= vbCrLf & ",ISNULL(("
            _Qry &= vbCrLf & " SELECT  TOP 1 FNSeq "
            _Qry &= vbCrLf & " FROM [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_LOG) & "].dbo.HSysBreakDown_ChangeLog WITH(NOLOCK) "
            _Qry &= vbCrLf & " WHERE FTOrderNo='" & HI.UL.ULF.rpQuoted(_OrderNo) & "'"
            _Qry &= vbCrLf & "       AND FTSubOrderNo='" & HI.UL.ULF.rpQuoted(_SubOrderNo) & "'"
            _Qry &= vbCrLf & "       AND FTColorway='" & HI.UL.ULF.rpQuoted(_Colorway) & "'"
            _Qry &= vbCrLf & "       AND FTSizeBreakDown='" & HI.UL.ULF.rpQuoted(_SizeBreakDown) & "'"
            _Qry &= vbCrLf & " ORDER BY FNSeq DESC "
            _Qry &= vbCrLf & "),0) + 1"
            _Qry &= vbCrLf & " ," & Quantity & ""
            _Qry &= vbCrLf & " ," & QuantityTo & ""

            HI.Conn.SQLConn.ExecuteNonQuery(_Qry, Conn.DB.DataBaseName.DB_LOG)

        Catch ex As Exception
        End Try

    End Sub

#End Region

    Private Sub otab_SelectedPageChanging(sender As Object, e As XtraTab.TabPageChangingEventArgs) Handles otab.SelectedPageChanging
        Select Case e.Page.Name
            Case otpSubOrderPakingCartonInfo.Name
                Call PROC_SETxShowBrowsePackingCartonInfo()
        End Select
    End Sub

    Private Sub otbsewing_SelectedPageChanging(sender As Object, e As XtraTab.TabPageChangingEventArgs) Handles otbsewing.SelectedPageChanging
        Select Case e.Page.Name
            Case otpsewingpdf.Name
                Call LoadPdfSewing()
        End Select
    End Sub

    Private Sub LoadPdfSewing()
        grdpdfdetail.Controls.Clear()
        Try
            Dim _Cmd As String = ""
            _Cmd = "Select TOP 1  S.FTStyleCode,SS.FBDocument,Se.FTSeasonCode as FNHSysSeasonId,SS.FTFileExtention "
            _Cmd &= vbCrLf & " From [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTStyle_Sewing as SS WITH(NOLOCK) INNER JOIN"
            _Cmd &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TMERMStyle AS S WITH(NOLOCK) ON SS.FNHSysStyleId=S.FNHSysStyleId INNER JOIN"
            _Cmd &= vbCrLf & " [" & HI.Conn.DB.GetDataBaseName(Conn.DB.DataBaseName.DB_MASTER) & "].dbo.TMERMSeason AS Se WITH(NOLOCK) ON SS.FNHSysSeasonId=Se.FNHSysSeasonId"
            _Cmd &= vbCrLf & " Where SS.FNHSysStyleId='" & Val(FNHSysStyleId.Properties.Tag.ToString) & "'"
            _Cmd &= vbCrLf & " AND SS.FNHSysSeasonId ='" & Val(FNHSysSeasonId.Properties.Tag.ToString()) & "' "

            Dim _oDt As DataTable = HI.Conn.SQLConn.GetDataTable(_Cmd, Conn.DB.DataBaseName.DB_MERCHAN,, False)
            For Each R As DataRow In _oDt.Rows

                If R!FTFileExtention.ToString.ToLower() = ".xls".ToLower() Or R!FTFileExtention.ToString.ToLower() = ".xlsx".ToLower() Or R!FTFileExtention.ToString.ToLower() = ".csv".ToLower() Then

                    Dim _ss As String = ""
                    Dim _XlsV As New DevExpress.XtraSpreadsheet.SpreadsheetControl
                    With _XlsV
                        .ReadOnly = True
                        .Dock = DockStyle.Fill
                        .Unit = DevExpress.Office.DocumentUnit.Inch
                        .CreateGraphics.PageUnit = System.Drawing.GraphicsUnit.Document
                        .LoadDocument(New MemoryStream(CType(R!FBDocument, Byte())), DevExpress.Spreadsheet.DocumentFormat.Xls)
                    End With
                    Me.grdpdfdetail.Controls.Add(_XlsV)

                Else
                    Try

                        Dim _Pdfv As New DevExpress.XtraPdfViewer.PdfViewer
                        Dim _ss As String = ""
                        With _Pdfv
                            .Dock = DockStyle.Fill
                            .LoadDocument(New MemoryStream(CType(R!FBDocument, Byte())))
                        End With
                        Me.grdpdfdetail.Controls.Add(_Pdfv)

                    Catch ex As Exception
                    End Try
                End If
            Next
        Catch ex As Exception

        End Try

    End Sub

    Private Sub ogvOrderSubComponent_DoubleClick(sender As Object, e As EventArgs) Handles ogvOrderSubComponent.DoubleClick

        If Me.FTOrderNo.Text <> "" Then

            If HI.ST.ValidateData.CloseJob(Me.FTOrderNo.Text) Then
                HI.MG.ShowMsg.mInfo("บัญชีได้ทำการปิดจ๊อบแล้วไม่สามารถทำรายการใดๆได้อีก !!!", 1502260678, Me.Text, , MessageBoxIcon.Warning)
                Exit Sub
            End If

            If Me.FTSubOrderNo.Text <> "" Then

                If CheckOwner() = False Then
                    Exit Sub
                End If
                If (CheckApproveOrder()) Then Exit Sub

                Dim matcode As String = ""
                Dim Matseq As Double = 0
                Dim component As String = ""
                Dim consmp As Double = 0
                Dim remark As String = ""


                With Me.ogvOrderSubComponent
                    matcode = "" & .GetFocusedRowCellValue("FTMainMatCode").ToString
                    Matseq = Val("" & .GetFocusedRowCellValue("FNSeqOrg").ToString)
                    component = "" & .GetFocusedRowCellValue("FTComponent").ToString
                    consmp = Val("" & .GetFocusedRowCellValue("FNConSmp").ToString)
                    remark = "" & .GetFocusedRowCellValue("FTRemark").ToString



                End With


                With _wAddOrderSubComponent
                    HI.TL.HandlerControl.ClearControl(_wAddOrderSubComponent)
                    .AddComponent = False
                    .FNConSmp.Value = consmp
                    .FNSeq.Value = Matseq
                    .FNHSysMerMatId.Text = matcode
                    .FTComponent.Text = component
                    .FTRemark.Text = remark
                    .FNSeq.Enabled = False
                    .ShowDialog()

                    If (.AddComponent) Then

                        Dim _Qry As String

                        _Qry = "UPDATE [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "].dbo.TMERTOrderSub_Component"
                        _Qry &= vbCrLf & "SET FTUpdUser = '" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                        _Qry &= vbCrLf & "  , FDUpdDate = " & HI.UL.ULDate.FormatDateDB & ""
                        _Qry &= vbCrLf & "  , FTUpdTime = " & HI.UL.ULDate.FormatTimeDB & ""
                        _Qry &= vbCrLf & "  , FNHSysMerMatId = " & Integer.Parse(Val(.FNHSysMerMatId.Properties.Tag.ToString)) & ""
                        _Qry &= vbCrLf & "  , FTComponent = '" & HI.UL.ULF.rpQuoted(.FTComponent.Text.Trim) & "'"
                        _Qry &= vbCrLf & "  , FTRemark = '" & HI.UL.ULF.rpQuoted(.FTRemark.Text.Trim) & "'"
                        _Qry &= vbCrLf & "  , FNConSmp = " & Double.Parse(Val(.FNConSmp.Value)) & ""
                        _Qry &= vbCrLf & "WHERE FTOrderNo = '" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text) & "'"
                        _Qry &= vbCrLf & "      AND FTSubOrderNo = '" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text) & "'"
                        _Qry &= vbCrLf & "      AND FNSeq = " & .FNSeq.Value & ""
                        HI.Conn.SQLConn.ExecuteOnly(_Qry, Conn.DB.DataBaseName.DB_MERCHAN)

                        '...update revised component information
                        '======================================================================================================================================================================================
                        Dim tSQLRevised As String

                        tSQLRevised = ""
                        tSQLRevised = "SELECT TOP 1 A.FTStateApprovedComponent FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A (NOLOCK) WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "' AND A.FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"

                        If HI.Conn.SQLConn.GetField(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN, "0") = "1" Then '...revised sewing sequence process
                            tSQLRevised = ""
                            tSQLRevised = "DECLARE @FTOrderNo AS NVARCHAR(30);"
                            tSQLRevised &= Environment.NewLine & "DECLARE @FTSubOrderNo AS NVARCHAR(30);"
                            tSQLRevised &= Environment.NewLine & "DECLARE @FDRevisedInfoDate AS NVARCHAR(10);"
                            tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoTime AS NVARCHAR(8);"
                            tSQLRevised &= Environment.NewLine & "DECLARE @FTRevisedInfoBy AS NVARCHAR(50);"
                            tSQLRevised &= Environment.NewLine & "SET @FTRevisedInfoBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "';"
                            tSQLRevised &= Environment.NewLine & "SET @FTOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTOrderNo.Text.Trim) & "';"
                            tSQLRevised &= Environment.NewLine & "SET @FTSubOrderNo = N'" & HI.UL.ULF.rpQuoted(Me.FTSubOrderNo.Text.Trim) & "';"
                            tSQLRevised &= Environment.NewLine & "SELECT @FDRevisedInfoDate = CONVERT(VARCHAR(10), GETDATE(), 111), @FTRevisedInfoTime = CONVERT(VARCHAR(8), GETDATE(), 114)"
                            tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoBy : ' + @FTRevisedInfoBy;"
                            tSQLRevised &= Environment.NewLine & "PRINT '@FDRevisedInfoDate : ' + @FDRevisedInfoDate;"
                            tSQLRevised &= Environment.NewLine & "PRINT '@FTRevisedInfoTime : ' + @FTRevisedInfoTime;"
                            tSQLRevised &= Environment.NewLine & "UPDATE A"
                            tSQLRevised &= Environment.NewLine & "SET A.FTStateApprovedComponent = N'0'"
                            tSQLRevised &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..TMERTOrderSub_ApprovedInfo AS A"
                            tSQLRevised &= Environment.NewLine & "WHERE A.FTOrderNo = @FTOrderNo"
                            tSQLRevised &= Environment.NewLine & "      AND A.FTSubOrderNo = @FTSubOrderNo;"

                            If HI.Conn.SQLConn.ExecuteNonQuery(tSQLRevised, HI.Conn.DB.DataBaseName.DB_MERCHAN) = True Then
                            End If

                        End If
                        '======================================================================================================================================================================================

                        Call W_PRCbShowBrowseDataSubOrderComponent(Me.FTOrderNo.Text.Trim(), FTSubOrderNo.Text.Trim)

                    End If

                End With
            Else
                HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTSubOrderNo_lbl.Text)
                Try
                    Me.otab.SelectedTabPageIndex = 1
                Catch ex As Exception
                End Try

                FTSubOrderNo.Focus()
            End If
        Else
            HI.MG.ShowMsg.mInvalidData(MG.ShowMsg.InvalidType.SelectData, Me.Text, FTOrderNo_lbl.Text)
            FTOrderNo.Focus()
        End If


    End Sub

    Private Sub ocmrevokeapproval_Click(sender As Object, e As EventArgs) Handles ocmrevokeapproval.Click

        If FTOrderNo.Text <> "" Then
            If FTStateOrderApp.Checked Then

                If HI.MG.ShowMsg.mConfirmProcessDefaultNo("คุณต้องการทำการยกเลิกการอนุมัติผลิตใช่หรือไม่ ?", 1903210547) = True Then
                    Dim tSql As String = ""

                    tSql = ""
                    tSql = "UPDATE A"
                    tSql &= Environment.NewLine & "SET A.FTStateOrderApp = '0', A.FNJobState = 0"
                    tSql &= Environment.NewLine & "   ,A.FTStateBy = N'" & HI.UL.ULF.rpQuoted(HI.ST.UserInfo.UserName) & "'"
                    tSql &= Environment.NewLine & "   ,A.FDStateDate = " & HI.UL.ULDate.FormatDateDB
                    tSql &= Environment.NewLine & "   ,A.FTStateTime = " & HI.UL.ULDate.FormatTimeDB
                    '...re-send approved after cancel job
                    '==============================================================================================================================
                    tSql &= Environment.NewLine & "   ,A.FTCancelAppBy = NULL"
                    tSql &= Environment.NewLine & "   ,A.FDCancelAppDate = NULL"
                    tSql &= Environment.NewLine & "   ,A.FDCancelAppTime = NULL"
                    tSql &= Environment.NewLine & "   ,A.FTCancelAppRemark = NULL"
                    '==============================================================================================================================
                    tSql &= Environment.NewLine & "FROM [" & HI.Conn.DB.GetDataBaseName(HI.Conn.DB.DataBaseName.DB_MERCHAN) & "]..[TMERTOrder] AS A"
                    tSql &= Environment.NewLine & "WHERE A.FTOrderNo = N'" & HI.UL.ULF.rpQuoted(FTOrderNo.Text) & "';"

                    If HI.Conn.SQLConn.ExecuteNonQuery(tSql, Conn.DB.DataBaseName.DB_MERCHAN) Then
                        FNJobState.SelectedIndex = 0
                        FTStateOrderApp.Checked = False
                    End If



                End If


            Else
                HI.MG.ShowMsg.mInfo("ใบสั่งผลิตนี้ยังไม่ได้ทำการอนุมัติการผลิต !!!!", 1903210548, Me.Text,, MessageBoxIcon.Warning)

            End If
        End If

    End Sub

    Private Sub ocmclearsubordersew_Click(sender As Object, e As EventArgs) Handles ocmclearsubordersew.Click

    End Sub
End Class
